{"home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.mean_and_std": [[6, 25], ["torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "torch.DataLoader", "print", "enumerate", "list", "list", "list", "len", "x.numpy", "numpy.mean", "numpy.std", "numpy.std", "list.append", "list.append", "list.append", "numpy.array().mean", "numpy.array().mean", "numpy.array().mean", "torchvision.ToTensor", "numpy.array", "numpy.array", "numpy.array"], "function", ["None"], ["def", "mean_and_std", "(", "datafolder", "=", "'./train'", ",", "batchsize", "=", "300000", ",", "nworkers", "=", "4", ")", ":", "\n", "\t", "trainset", "=", "torchvision", ".", "datasets", ".", "ImageFolder", "(", "root", "=", "datafolder", ",", "transform", "=", "transforms", ".", "ToTensor", "(", ")", ")", "\n", "trainloader", "=", "torchdata", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "batchsize", ",", "shuffle", "=", "False", ",", "num_workers", "=", "nworkers", ")", "\n", "pop_mean", "=", "[", "]", "\n", "pop_std0", "=", "[", "]", "\n", "pop_std1", "=", "[", "]", "\n", "print", "(", "len", "(", "trainloader", ")", ")", "\n", "for", "i", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "\t\t", "numpy_image", "=", "x", ".", "numpy", "(", ")", "\n", "batch_mean", "=", "np", ".", "mean", "(", "numpy_image", ",", "axis", "=", "(", "0", ",", "2", ",", "3", ")", ")", "\n", "batch_std0", "=", "np", ".", "std", "(", "numpy_image", ",", "axis", "=", "(", "0", ",", "2", ",", "3", ")", ")", "\n", "batch_std1", "=", "np", ".", "std", "(", "numpy_image", ",", "axis", "=", "(", "0", ",", "2", ",", "3", ")", ",", "ddof", "=", "1", ")", "\n", "pop_mean", ".", "append", "(", "batch_mean", ")", "\n", "pop_std0", ".", "append", "(", "batch_std0", ")", "\n", "pop_std1", ".", "append", "(", "batch_std1", ")", "\n", "", "pop_mean", "=", "list", "(", "np", ".", "array", "(", "pop_mean", ")", ".", "mean", "(", "axis", "=", "0", ")", ")", "\n", "pop_std0", "=", "list", "(", "np", ".", "array", "(", "pop_std0", ")", ".", "mean", "(", "axis", "=", "0", ")", ")", "\n", "pop_std1", "=", "list", "(", "np", ".", "array", "(", "pop_std1", ")", ".", "mean", "(", "axis", "=", "0", ")", ")", "\n", "return", "pop_mean", ",", "pop_std0", ",", "pop_std1", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.cifar10_dataloaders": [[26, 35], ["torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "dataloaders.get_subset_loader", "dataloaders.get_subset_loaders", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "numpy.array", "numpy.array", "torchvision.Compose", "torchvision.Compose"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loader", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loaders"], ["", "def", "cifar10_dataloaders", "(", "batchsize", ",", "trainsize", "=", "1", ",", "valsize", "=", "0.5", ",", "testsize", "=", "0.5", ")", ":", "\n", "\t", "datashape", ",", "mean", ",", "std", ",", "nclasses", "=", "(", "1", ",", "3", ",", "32", ",", "32", ")", ",", "(", "0.49139968", ",", "0.48215841", ",", "0.44653091", ")", ",", "(", "0.24703223", ",", "0.24348513", ",", "0.26158784", ")", ",", "10", "\n", "transform", "=", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "data_aug", "=", "[", "transforms", ".", "RandomCrop", "(", "datashape", "[", "-", "1", "]", ",", "padding", "=", "4", ")", ",", "transforms", ".", "RandomHorizontalFlip", "(", ")", "]", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "Compose", "(", "data_aug", "+", "transform", ")", ")", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "Compose", "(", "transform", ")", ")", "\n", "trainloader", "=", "get_subset_loader", "(", "trainset", ",", "batchsize", ",", "trainsize", ")", "\n", "valloader", ",", "testloader", "=", "get_subset_loaders", "(", "testset", ",", "batchsize", ",", "[", "valsize", ",", "testsize", "]", ")", "\n", "return", "trainloader", ",", "valloader", ",", "testloader", ",", "datashape", ",", "nclasses", ",", "np", ".", "array", "(", "mean", ")", ",", "np", ".", "array", "(", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.cifar100_dataloaders": [[36, 45], ["torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "dataloaders.get_subset_loader", "dataloaders.get_subset_loaders", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "numpy.array", "numpy.array", "torchvision.Compose", "torchvision.Compose"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loader", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loaders"], ["", "def", "cifar100_dataloaders", "(", "batchsize", ",", "trainsize", "=", "1", ",", "valsize", "=", "0.5", ",", "testsize", "=", "0.5", ")", ":", "\n", "\t", "datashape", ",", "mean", ",", "std", ",", "nclasses", "=", "(", "1", ",", "3", ",", "32", ",", "32", ")", ",", "(", "0.49139968", ",", "0.48215841", ",", "0.44653091", ")", ",", "(", "0.24703223", ",", "0.24348513", ",", "0.26158784", ")", ",", "100", "\n", "transform", "=", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "data_aug", "=", "[", "transforms", ".", "RandomCrop", "(", "datashape", "[", "-", "1", "]", ",", "padding", "=", "4", ")", ",", "transforms", ".", "RandomHorizontalFlip", "(", ")", "]", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR100", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "Compose", "(", "data_aug", "+", "transform", ")", ")", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR100", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "Compose", "(", "transform", ")", ")", "\n", "trainloader", "=", "get_subset_loader", "(", "trainset", ",", "batchsize", ",", "trainsize", ")", "\n", "valloader", ",", "testloader", "=", "get_subset_loaders", "(", "testset", ",", "batchsize", ",", "[", "valsize", ",", "testsize", "]", ")", "\n", "return", "trainloader", ",", "valloader", ",", "testloader", ",", "datashape", ",", "nclasses", ",", "np", ".", "array", "(", "mean", ")", ",", "np", ".", "array", "(", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.mnist_dataloaders": [[46, 54], ["torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "dataloaders.get_subset_loader", "dataloaders.get_subset_loaders", "torchvision.ToTensor", "torchvision.Normalize", "numpy.array", "numpy.array", "torchvision.Compose", "torchvision.Compose"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loader", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loaders"], ["", "def", "mnist_dataloaders", "(", "batchsize", ",", "trainsize", "=", "1", ",", "valsize", "=", "0.5", ",", "testsize", "=", "0.5", ")", ":", "\n", "\t", "datashape", ",", "mean", ",", "std", ",", "nclasses", "=", "(", "1", ",", "1", ",", "28", ",", "28", ")", ",", "(", "0.1306604762738429", ",", ")", ",", "(", "0.30810780717887876", ",", ")", ",", "10", "\n", "transform", "=", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "Compose", "(", "transform", ")", ")", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "Compose", "(", "transform", ")", ")", "\n", "trainloader", "=", "get_subset_loader", "(", "trainset", ",", "batchsize", ",", "trainsize", ")", "\n", "valloader", ",", "testloader", "=", "get_subset_loaders", "(", "testset", ",", "batchsize", ",", "[", "valsize", ",", "testsize", "]", ")", "\n", "return", "trainloader", ",", "valloader", ",", "testloader", ",", "datashape", ",", "nclasses", ",", "np", ".", "array", "(", "mean", ")", ",", "np", ".", "array", "(", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.imagenet2012_dataloaders": [[55, 63], ["torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "dataloaders.get_subset_loaders", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.Resize", "torchvision.CenterCrop", "numpy.array", "numpy.array", "torchvision.Compose"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loaders"], ["", "def", "imagenet2012_dataloaders", "(", "batchsize", ",", "trainsize", "=", "0.98", ",", "valsize", "=", "0.01", ",", "testsize", "=", "0.01", ")", ":", "\n", "\t", "datashape", ",", "mean", ",", "std", ",", "nclasses", "=", "(", "1", ",", "3", ",", "224", ",", "224", ")", ",", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ",", "1000", "\n", "transform", "=", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "data_aug", "=", "[", "transforms", ".", "Resize", "(", "256", ")", ",", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "transforms", ".", "RandomHorizontalFlip", "(", ")", "]", "\n", "test_trs", "=", "[", "transforms", ".", "Resize", "(", "256", ")", ",", "transforms", ".", "CenterCrop", "(", "224", ")", "]", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "ImageFolder", "(", "root", "=", "'./data/ILSVRC2012/ILSVRC2012_img_train'", ",", "transform", "=", "transforms", ".", "Compose", "(", "data_aug", "+", "transform", ")", ")", "\n", "trainloader", ",", "valloader", ",", "testloader", "=", "get_subset_loaders", "(", "trainset", ",", "batchsize", ",", "[", "trainsize", ",", "valsize", ",", "testsize", "]", ")", "\n", "return", "trainloader", ",", "valloader", ",", "testloader", ",", "datashape", ",", "nclasses", ",", "np", ".", "array", "(", "mean", ")", ",", "np", ".", "array", "(", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.imagenetdownloader_dataloaders": [[64, 72], ["torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "dataloaders.get_subset_loaders", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.Resize", "torchvision.CenterCrop", "numpy.array", "numpy.array", "torchvision.Compose"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loaders"], ["", "def", "imagenetdownloader_dataloaders", "(", "batchsize", ",", "trainsize", "=", "0.98", ",", "valsize", "=", "0.01", ",", "testsize", "=", "0.01", ")", ":", "\n", "\t", "datashape", ",", "mean", ",", "std", ",", "nclasses", "=", "(", "1", ",", "3", ",", "224", ",", "224", ")", ",", "[", "0.47730196", ",", "0.44212466", ",", "0.38233677", "]", ",", "[", "0.26841885", ",", "0.2581342", ",", "0.27384633", "]", ",", "493", "\n", "transform", "=", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "data_aug", "=", "[", "transforms", ".", "Resize", "(", "256", ")", ",", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "transforms", ".", "RandomHorizontalFlip", "(", ")", "]", "\n", "test_trs", "=", "[", "transforms", ".", "Resize", "(", "256", ")", ",", "transforms", ".", "CenterCrop", "(", "224", ")", "]", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "ImageFolder", "(", "root", "=", "'./data/imagenet-downloader/imagenet-downloader-500-500-seed0'", ",", "transform", "=", "transforms", ".", "Compose", "(", "data_aug", "+", "transform", ")", ")", "\n", "trainloader", ",", "valloader", ",", "testloader", "=", "get_subset_loaders", "(", "trainset", ",", "batchsize", ",", "[", "trainsize", ",", "valsize", ",", "testsize", "]", ")", "\n", "return", "trainloader", ",", "valloader", ",", "testloader", ",", "datashape", ",", "nclasses", ",", "np", ".", "array", "(", "mean", ")", ",", "np", ".", "array", "(", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.tinyimagenet_dataloaders": [[73, 82], ["torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "dataloaders.get_subset_loader", "dataloaders.get_subset_loaders", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "numpy.array", "numpy.array", "torchvision.Compose", "torchvision.Compose"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loader", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loaders"], ["", "def", "tinyimagenet_dataloaders", "(", "batchsize", ",", "trainsize", "=", "1", ",", "valsize", "=", "0.5", ",", "testsize", "=", "0.5", ")", ":", "\n", "\t", "datashape", ",", "mean", ",", "std", ",", "nclasses", "=", "(", "1", ",", "3", ",", "64", ",", "64", ")", ",", "[", "0.4802486", ",", "0.44807222", ",", "0.39754647", "]", ",", "[", "0.2769859", ",", "0.26906505", ",", "0.2820814", "]", ",", "200", "\n", "transform", "=", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", ",", "std", ")", "]", "\n", "data_aug", "=", "[", "transforms", ".", "RandomCrop", "(", "datashape", "[", "-", "1", "]", ",", "padding", "=", "4", ")", ",", "transforms", ".", "RandomHorizontalFlip", "(", ")", "]", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "ImageFolder", "(", "root", "=", "'./data/tinyimagenet/train'", ",", "transform", "=", "transforms", ".", "Compose", "(", "data_aug", "+", "transform", ")", ")", "\n", "valset", "=", "torchvision", ".", "datasets", ".", "ImageFolder", "(", "root", "=", "'./data/tinyimagenet/val'", ",", "transform", "=", "transforms", ".", "Compose", "(", "transform", ")", ")", "\n", "trainloader", "=", "get_subset_loader", "(", "trainset", ",", "batchsize", ",", "trainsize", ")", "\n", "valloader", ",", "testloader", "=", "get_subset_loaders", "(", "valset", ",", "batchsize", ",", "[", "valsize", ",", "testsize", "]", ")", "\n", "return", "trainloader", ",", "valloader", ",", "testloader", ",", "datashape", ",", "nclasses", ",", "np", ".", "array", "(", "mean", ")", ",", "np", ".", "array", "(", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loader": [[83, 87], ["len", "torch.DataLoader", "torch.utils.data.sampler.SubsetRandomSampler", "numpy.random.choice", "range", "int"], "function", ["None"], ["", "def", "get_subset_loader", "(", "dataset", ",", "batchsize", ",", "size", ")", ":", "\n", "\t", "n", "=", "len", "(", "dataset", ")", "\n", "(", "sampler", ",", "shuffle", ")", "=", "(", "None", ",", "True", ")", "if", "size", "in", "[", "None", ",", "'all'", ",", "0", ",", "1", "]", "else", "(", "SubsetRandomSampler", "(", "np", ".", "random", ".", "choice", "(", "range", "(", "n", ")", ",", "int", "(", "size", "*", "n", ")", ",", "False", ")", ")", ",", "False", ")", "\n", "return", "torchdata", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batchsize", ",", "shuffle", "=", "shuffle", ",", "num_workers", "=", "2", ",", "sampler", "=", "sampler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.get_subset_loaders": [[88, 99], ["list", "numpy.random.shuffle", "sum", "ValueError", "len", "len", "range", "list", "torch.utils.data.sampler.SubsetRandomSampler", "torch.DataLoader", "numpy.cumsum", "range", "int", "numpy.floor"], "function", ["None"], ["", "def", "get_subset_loaders", "(", "dataset", ",", "batchsize", ",", "sizes", ")", ":", "\n", "\t", "if", "sum", "(", "sizes", ")", ">", "1", ":", "\n", "\t\t", "raise", "ValueError", "(", "'Sizes cannot sum to more than 1'", ")", "\n", "", "n", ",", "s", "=", "len", "(", "dataset", ")", ",", "len", "(", "sizes", ")", "\n", "indices", "=", "list", "(", "range", "(", "n", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "cutoffs", "=", "[", "0", "]", "+", "list", "(", "np", ".", "cumsum", "(", "[", "int", "(", "np", ".", "floor", "(", "size", "*", "n", ")", ")", "for", "size", "in", "sizes", "]", ")", ")", "\n", "idxs", "=", "[", "indices", "[", "cutoffs", "[", "i", "]", ":", "cutoffs", "[", "i", "+", "1", "]", "]", "for", "i", "in", "range", "(", "s", ")", "]", "\n", "samplers", "=", "[", "SubsetRandomSampler", "(", "idx", ")", "for", "idx", "in", "idxs", "]", "\n", "loaders", "=", "[", "torchdata", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batchsize", ",", "shuffle", "=", "False", ",", "num_workers", "=", "2", ",", "sampler", "=", "sampler", ")", "for", "sampler", "in", "samplers", "]", "\n", "return", "loaders", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.fake_dataloaders": [[100, 109], ["torchvision.datasets.FakeData", "torchvision.datasets.FakeData", "torch.DataLoader", "torchvision.datasets.FakeData", "torchvision.datasets.FakeData", "torch.DataLoader", "torchvision.datasets.FakeData", "torchvision.datasets.FakeData", "torch.DataLoader", "torchvision.ToTensor", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose"], "function", ["None"], ["", "def", "fake_dataloaders", "(", "batchsize", ",", "datashape", ",", "nclasses", ")", ":", "\n", "\t", "transform", "=", "[", "transforms", ".", "ToTensor", "(", ")", "]", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "FakeData", "(", "size", "=", "400", ",", "image_size", "=", "datashape", "[", "1", ":", "]", ",", "num_classes", "=", "nclasses", ",", "transform", "=", "transforms", ".", "Compose", "(", "transform", ")", ")", "\n", "trainloader", "=", "torchdata", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "batchsize", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "valset", "=", "torchvision", ".", "datasets", ".", "FakeData", "(", "size", "=", "200", ",", "image_size", "=", "datashape", "[", "1", ":", "]", ",", "num_classes", "=", "nclasses", ",", "transform", "=", "transforms", ".", "Compose", "(", "transform", ")", ")", "\n", "valloader", "=", "torchdata", ".", "DataLoader", "(", "valset", ",", "batch_size", "=", "batchsize", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "FakeData", "(", "size", "=", "200", ",", "image_size", "=", "datashape", "[", "1", ":", "]", ",", "num_classes", "=", "nclasses", ",", "transform", "=", "transforms", ".", "Compose", "(", "transform", ")", ")", "\n", "testloader", "=", "torchdata", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "batchsize", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "return", "trainloader", ",", "valloader", ",", "testloader", ",", "datashape", ",", "nclasses", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.dataloaders": [[110, 132], ["dataloaders.tinyimagenet_dataloaders", "dataloaders.imagenet2012_dataloaders", "dataloaders.imagenetdownloader_dataloaders", "dataloaders.mnist_dataloaders", "dataloaders.cifar10_dataloaders", "dataloaders.cifar100_dataloaders", "dataloaders.fake_dataloaders", "dataloaders.fake_dataloaders", "dataloaders.fake_dataloaders", "ValueError", "dict().items", "dict"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.tinyimagenet_dataloaders", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.imagenet2012_dataloaders", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.imagenetdownloader_dataloaders", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.mnist_dataloaders", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.cifar10_dataloaders", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.cifar100_dataloaders", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.fake_dataloaders", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.fake_dataloaders", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.fake_dataloaders"], ["", "def", "dataloaders", "(", "name", ",", "batchsize", ",", "trainsize", "=", "None", ",", "valsize", "=", "None", ",", "testsize", "=", "None", ")", ":", "\n", "\t", "kwargs", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "dict", "(", "batchsize", "=", "batchsize", ",", "trainsize", "=", "trainsize", ",", "valsize", "=", "valsize", ",", "testsize", "=", "testsize", ")", ".", "items", "(", ")", "if", "v", "is", "not", "None", "}", "\n", "if", "name", "==", "'tinyimagenet'", ":", "\n", "\t\t", "return", "tinyimagenet_dataloaders", "(", "**", "kwargs", ")", "\n", "", "if", "name", "==", "'imagenet2012'", ":", "\n", "\t\t", "return", "imagenet2012_dataloaders", "(", "**", "kwargs", ")", "\n", "", "if", "name", "==", "'imagenetdownloader'", ":", "\n", "\t\t", "return", "imagenetdownloader_dataloaders", "(", "**", "kwargs", ")", "\n", "", "if", "name", "==", "'mnist'", ":", "\n", "\t\t", "return", "mnist_dataloaders", "(", "**", "kwargs", ")", "\n", "", "if", "name", "==", "'cifar10'", ":", "\n", "\t\t", "return", "cifar10_dataloaders", "(", "**", "kwargs", ")", "\n", "", "if", "name", "==", "'cifar100'", ":", "\n", "\t\t", "return", "cifar100_dataloaders", "(", "**", "kwargs", ")", "\n", "", "if", "name", "==", "'fake_like_mnist'", ":", "\n", "\t\t", "return", "fake_dataloaders", "(", "batchsize", ",", "(", "1", ",", "1", ",", "28", ",", "28", ")", ",", "10", ")", "\n", "", "if", "name", "==", "'fake_like_cifar10'", ":", "\n", "\t\t", "return", "fake_dataloaders", "(", "batchsize", ",", "(", "1", ",", "3", ",", "32", ",", "32", ")", ",", "10", ")", "\n", "", "if", "name", "==", "'fake_like_cifar100'", ":", "\n", "\t\t", "return", "fake_dataloaders", "(", "batchsize", ",", "(", "1", ",", "3", ",", "32", ",", "32", ")", ",", "100", ")", "\n", "", "else", ":", "\n", "\t\t", "raise", "ValueError", "(", "'unknown dataset: '", "+", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.FirstResBlock.__init__": [[53, 61], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__"], ["\t", "def", "__init__", "(", "self", ",", "nfilters", ",", "batchnorm", "=", "True", ",", "bias", "=", "False", ",", "timestep", "=", "1", ")", ":", "\n", "\t\t", "super", "(", "FirstResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "timestep", "=", "timestep", "\n", "self", ".", "batchnorm", "=", "batchnorm", "\n", "self", ".", "cv1", "=", "nn", ".", "Conv2d", "(", "nfilters", ",", "nfilters", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "bias", ")", "\n", "if", "self", ".", "batchnorm", ":", "\n", "\t\t\t", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "nfilters", ")", "\n", "", "self", ".", "cv2", "=", "nn", ".", "Conv2d", "(", "nfilters", ",", "nfilters", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "bias", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.FirstResBlock.forward": [[61, 66], ["main.FirstResBlock.cv1", "main.FirstResBlock.cv2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "main.FirstResBlock.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "z", "=", "self", ".", "cv1", "(", "x", ")", "\n", "z", "=", "functional", ".", "relu", "(", "self", ".", "bn2", "(", "z", ")", ")", "if", "self", ".", "batchnorm", "else", "functional", ".", "relu", "(", "x", ")", "\n", "z", "=", "self", ".", "cv2", "(", "z", ")", "\n", "return", "x", "+", "self", ".", "timestep", "*", "z", ",", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResBlock.__init__": [[68, 78], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__"], ["\t", "def", "__init__", "(", "self", ",", "nfilters", ",", "batchnorm", "=", "True", ",", "bias", "=", "False", ",", "timestep", "=", "1", ")", ":", "\n", "\t\t", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "timestep", "=", "timestep", "\n", "self", ".", "batchnorm", "=", "batchnorm", "\n", "if", "self", ".", "batchnorm", ":", "\n", "\t\t\t", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "nfilters", ")", "\n", "", "self", ".", "cv1", "=", "nn", ".", "Conv2d", "(", "nfilters", ",", "nfilters", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "bias", ")", "\n", "if", "self", ".", "batchnorm", ":", "\n", "\t\t\t", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "nfilters", ")", "\n", "", "self", ".", "cv2", "=", "nn", ".", "Conv2d", "(", "nfilters", ",", "nfilters", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "bias", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResBlock.forward": [[78, 84], ["main.ResBlock.cv1", "main.ResBlock.cv2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "main.ResBlock.bn1", "main.ResBlock.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "z", "=", "functional", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "if", "self", ".", "batchnorm", "else", "functional", ".", "relu", "(", "x", ")", "\n", "z", "=", "self", ".", "cv1", "(", "z", ")", "\n", "z", "=", "functional", ".", "relu", "(", "self", ".", "bn2", "(", "z", ")", ")", "if", "self", ".", "batchnorm", "else", "functional", ".", "relu", "(", "x", ")", "\n", "z", "=", "self", ".", "cv2", "(", "z", ")", "\n", "return", "x", "+", "self", ".", "timestep", "*", "z", ",", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNetStage.__init__": [[86, 89], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "main.FirstResBlock", "main.ResBlock", "range"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__"], ["\t", "def", "__init__", "(", "self", ",", "nblocks", ",", "nfilters", ",", "first", "=", "False", ",", "batchnorm", "=", "True", ",", "bias", "=", "False", ",", "timestep", "=", "1", ")", ":", "\n", "\t\t", "super", "(", "ResNetStage", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "FirstResBlock", "(", "nfilters", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "if", "i", "==", "0", "and", "first", "else", "ResBlock", "(", "nfilters", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "for", "i", "in", "range", "(", "nblocks", ")", "]", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNetStage.forward": [[89, 95], ["block", "rs.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "rs", "=", "[", "]", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "\t\t\t", "x", ",", "r", "=", "block", "(", "x", ")", "\n", "rs", ".", "append", "(", "r", ")", "\n", "", "return", "x", ",", "rs", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.OneRepResNet.__init__": [[97, 108], ["torch.Module.__init__", "main.ResNetStage", "utils.create_classifier", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "list", "main.OneRepResNet.encoder.parameters", "main.OneRepResNet.encoder", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.create_classifier"], ["\t", "def", "__init__", "(", "self", ",", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nblocks", "=", "9", ",", "nfilters", "=", "64", ",", "classifier_name", "=", "'3Lin'", ",", "batchnorm", "=", "True", ",", "bias", "=", "False", ",", "timestep", "=", "1", ")", ":", "\n", "\t\t", "super", "(", "OneRepResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classifier_name", "=", "classifier_name", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "stage1", "=", "ResNetStage", "(", "nblocks", ",", "nfilters", ",", "True", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "featureshape", "=", "list", "(", "self", ".", "encoder", "(", "torch", ".", "ones", "(", "*", "datashape", ")", ")", ".", "shape", ")", "\n", "", "self", ".", "classifier", "=", "create_classifier", "(", "classifier_name", ",", "nclasses", ",", "featureshape", ",", "nfilters", ")", "\n", "if", "not", "learnencoder", ":", "\n", "\t\t\t", "for", "param", "in", "self", ".", "encoder", ".", "parameters", "(", ")", ":", "\n", "\t\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.OneRepResNet.forward": [[108, 115], ["main.OneRepResNet.encoder", "main.OneRepResNet.stage1", "main.OneRepResNet.classifier", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", ",", "rs", "=", "self", ".", "stage1", "(", "x", ")", "\n", "if", "self", ".", "classifier_name", "[", "-", "3", ":", "]", "==", "'Lin'", ":", "\n", "\t\t\t", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", ",", "rs", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNet.__init__": [[117, 133], ["torch.Module.__init__", "main.ResNetStage", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "main.ResNetStage", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "main.ResNetStage", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "main.ResNet.encoder.parameters", "[].view", "main.ResNet.forward_conv", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["\t", "def", "__init__", "(", "self", ",", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nblocks", "=", "18", ",", "nfilters", "=", "64", ",", "batchnorm", "=", "True", ",", "bias", "=", "False", ",", "timestep", "=", "1", ")", ":", "\n", "\t\t", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "stage1", "=", "ResNetStage", "(", "nblocks", ",", "nfilters", ",", "True", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "self", ".", "cv1", "=", "nn", ".", "Conv2d", "(", "nfilters", ",", "2", "*", "nfilters", ",", "1", ",", "2", ",", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "stage2", "=", "ResNetStage", "(", "nblocks", ",", "2", "*", "nfilters", ",", "False", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "self", ".", "cv2", "=", "nn", ".", "Conv2d", "(", "2", "*", "nfilters", ",", "4", "*", "nfilters", ",", "1", ",", "2", ",", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "stage3", "=", "ResNetStage", "(", "nblocks", ",", "4", "*", "nfilters", ",", "False", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "4", "*", "nfilters", ",", "track_running_stats", "=", "True", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ",", "8", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "featuresize", "=", "self", ".", "forward_conv", "(", "torch", ".", "zeros", "(", "*", "datashape", ")", ")", "[", "0", "]", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "featuresize", ",", "nclasses", ")", "\n", "if", "not", "learnencoder", ":", "\n", "\t\t\t", "for", "param", "in", "self", ".", "encoder", ".", "parameters", "(", ")", ":", "\n", "\t\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "", "", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNet.forward_conv": [[133, 144], ["dict", "main.ResNet.encoder", "main.ResNet.stage1", "main.ResNet.cv1", "main.ResNet.stage2", "main.ResNet.cv2", "main.ResNet.stage3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "main.ResNet.avgpool", "main.ResNet.bn", "range"], "methods", ["None"], ["", "", "", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "rs", "=", "dict", "(", ")", "\n", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", ",", "rs", "[", "1", "]", "=", "self", ".", "stage1", "(", "x", ")", "\n", "x", "=", "self", ".", "cv1", "(", "x", ")", "\n", "x", ",", "rs", "[", "2", "]", "=", "self", ".", "stage2", "(", "x", ")", "\n", "x", "=", "self", ".", "cv2", "(", "x", ")", "\n", "x", ",", "rs", "[", "3", "]", "=", "self", ".", "stage3", "(", "x", ")", "\n", "x", "=", "functional", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ",", "inplace", "=", "True", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "return", "x", ",", "[", "r", "for", "i", "in", "range", "(", "1", ",", "4", ")", "for", "r", "in", "rs", "[", "i", "]", "]", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNet.forward": [[144, 149], ["main.ResNet.forward_conv", "main.ResNet.view", "main.ResNet.classifier", "main.ResNet.size"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", ",", "rs", "=", "self", ".", "forward_conv", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", ",", "rs", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.AvgPoolResNet.__init__": [[151, 168], ["torch.Module.__init__", "main.ResNetStage", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "main.ResNetStage", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "main.ResNetStage", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "main.AvgPoolResNet.encoder.parameters", "[].view", "main.AvgPoolResNet.forward_conv", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["\t", "def", "__init__", "(", "self", ",", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nblocks", "=", "10", ",", "nfilters", "=", "64", ",", "batchnorm", "=", "True", ",", "bias", "=", "False", ",", "timestep", "=", "1", ")", ":", "\n", "\t\t", "super", "(", "AvgPoolResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "stage1", "=", "ResNetStage", "(", "nblocks", ",", "nfilters", ",", "True", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "self", ".", "avgpool1", "=", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ")", "\n", "self", ".", "stage2", "=", "ResNetStage", "(", "nblocks", ",", "nfilters", ",", "False", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "self", ".", "avgpool2", "=", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ")", "\n", "self", ".", "stage3", "=", "ResNetStage", "(", "nblocks", ",", "nfilters", ",", "False", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "self", ".", "avgpool3", "=", "nn", ".", "AvgPool2d", "(", "2", ",", "2", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "nfilters", ",", "track_running_stats", "=", "True", ")", "\n", "self", ".", "avgpool4", "=", "nn", ".", "AvgPool2d", "(", "4", ",", "4", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "featuresize", "=", "self", ".", "forward_conv", "(", "torch", ".", "zeros", "(", "*", "datashape", ")", ")", "[", "0", "]", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "featuresize", ",", "nclasses", ")", "\n", "if", "not", "learnencoder", ":", "\n", "\t\t\t", "for", "param", "in", "self", ".", "encoder", ".", "parameters", "(", ")", ":", "\n", "\t\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "", "", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.AvgPoolResNet.forward_conv": [[168, 180], ["dict", "main.AvgPoolResNet.encoder", "main.AvgPoolResNet.stage1", "main.AvgPoolResNet.avgpool1", "main.AvgPoolResNet.stage2", "main.AvgPoolResNet.avgpool2", "main.AvgPoolResNet.stage3", "main.AvgPoolResNet.avgpool3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "main.AvgPoolResNet.avgpool4", "main.AvgPoolResNet.bn", "range"], "methods", ["None"], ["", "", "", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "rs", "=", "dict", "(", ")", "\n", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", ",", "rs", "[", "1", "]", "=", "self", ".", "stage1", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool1", "(", "x", ")", "\n", "x", ",", "rs", "[", "2", "]", "=", "self", ".", "stage2", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool2", "(", "x", ")", "\n", "x", ",", "rs", "[", "3", "]", "=", "self", ".", "stage3", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool3", "(", "x", ")", "\n", "x", "=", "functional", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ",", "inplace", "=", "True", ")", "\n", "x", "=", "self", ".", "avgpool4", "(", "x", ")", "\n", "return", "x", ",", "[", "r", "for", "i", "in", "range", "(", "1", ",", "4", ")", "for", "r", "in", "rs", "[", "i", "]", "]", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.AvgPoolResNet.forward": [[180, 185], ["main.AvgPoolResNet.forward_conv", "main.AvgPoolResNet.view", "main.AvgPoolResNet.classifier", "main.AvgPoolResNet.size"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", ",", "rs", "=", "self", ".", "forward_conv", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", ",", "rs", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.WideResNet.__init__": [[187, 200], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "main.ResNetStage", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "main.ResNetStage", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "main.ResNetStage", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "[].view", "main.WideResNet.forward_conv", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["\t", "def", "__init__", "(", "self", ",", "datashape", ",", "nclasses", ",", "nblocks", "=", "4", ",", "batchnorm", "=", "True", ",", "bias", "=", "False", ",", "timestep", "=", "1", ")", ":", "\n", "\t\t", "super", "(", "WideResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cv0", "=", "nn", ".", "Conv2d", "(", "datashape", "[", "1", "]", ",", "160", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "stage1", "=", "ResNetStage", "(", "nblocks", ",", "160", ",", "True", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "self", ".", "cv1", "=", "nn", ".", "Conv2d", "(", "160", ",", "320", ",", "1", ",", "2", ",", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "stage2", "=", "ResNetStage", "(", "nblocks", ",", "320", ",", "False", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "self", ".", "cv2", "=", "nn", ".", "Conv2d", "(", "320", ",", "640", ",", "1", ",", "2", ",", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "stage3", "=", "ResNetStage", "(", "nblocks", ",", "640", ",", "False", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "640", ",", "track_running_stats", "=", "True", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ",", "8", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "featuresize", "=", "self", ".", "forward_conv", "(", "torch", ".", "zeros", "(", "*", "datashape", ")", ")", "[", "0", "]", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "featuresize", ",", "nclasses", ")", "\n", "", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.WideResNet.forward_conv": [[200, 211], ["dict", "main.WideResNet.cv0", "main.WideResNet.stage1", "main.WideResNet.cv1", "main.WideResNet.stage2", "main.WideResNet.cv2", "main.WideResNet.stage3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "main.WideResNet.avgpool", "main.WideResNet.bn", "range"], "methods", ["None"], ["", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "rs", "=", "dict", "(", ")", "\n", "x", "=", "self", ".", "cv0", "(", "x", ")", "\n", "x", ",", "rs", "[", "1", "]", "=", "self", ".", "stage1", "(", "x", ")", "\n", "x", "=", "self", ".", "cv1", "(", "x", ")", "\n", "x", ",", "rs", "[", "2", "]", "=", "self", ".", "stage2", "(", "x", ")", "\n", "x", "=", "self", ".", "cv2", "(", "x", ")", "\n", "x", ",", "rs", "[", "3", "]", "=", "self", ".", "stage3", "(", "x", ")", "\n", "x", "=", "functional", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ",", "inplace", "=", "True", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "return", "x", ",", "[", "r", "for", "i", "in", "range", "(", "1", ",", "4", ")", "for", "r", "in", "rs", "[", "i", "]", "]", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.WideResNet.forward": [[211, 216], ["main.WideResNet.forward_conv", "main.WideResNet.view", "main.WideResNet.classifier", "main.WideResNet.size"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", ",", "rs", "=", "self", ".", "forward_conv", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", ",", "rs", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNextBlock.__init__": [[218, 231], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "math.floor"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__"], ["\t", "def", "__init__", "(", "self", ",", "infilters", "=", "256", ",", "planes", "=", "64", ",", "expansion", "=", "4", ",", "cardinality", "=", "32", ",", "width", "=", "4", ",", "base", "=", "64", ",", "stride", "=", "1", ",", "relu", "=", "True", ",", "residu", "=", "True", ",", "downsample", "=", "None", ")", ":", "\n", "\t\t", "super", "(", "ResNextBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "relu", "\n", "self", ".", "residu", "=", "residu", "\n", "self", ".", "intfilters", "=", "cardinality", "*", "math", ".", "floor", "(", "planes", "*", "width", "/", "base", ")", "\n", "self", ".", "outfilters", "=", "planes", "*", "expansion", "\n", "self", ".", "cv1", "=", "nn", ".", "Conv2d", "(", "infilters", ",", "self", ".", "intfilters", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "intfilters", ")", "\n", "self", ".", "cv2", "=", "nn", ".", "Conv2d", "(", "self", ".", "intfilters", ",", "self", ".", "intfilters", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "cardinality", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "intfilters", ")", "\n", "self", ".", "cv3", "=", "nn", ".", "Conv2d", "(", "self", ".", "intfilters", ",", "self", ".", "outfilters", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "outfilters", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNextBlock.forward": [[231, 244], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "main.ResNextBlock.bn1", "main.ResNextBlock.bn2", "main.ResNextBlock.bn3", "main.ResNextBlock.downsample", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "main.ResNextBlock.cv1", "main.ResNextBlock.cv2", "main.ResNextBlock.cv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "r", "=", "functional", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "cv1", "(", "x", ")", ")", ",", "inplace", "=", "True", ")", "\n", "r", "=", "functional", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "cv2", "(", "r", ")", ")", ",", "inplace", "=", "True", ")", "\n", "r", "=", "functional", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "cv3", "(", "r", ")", ")", ",", "inplace", "=", "True", ")", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "\t\t\t", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "if", "self", ".", "relu", ":", "\n", "\t\t\t", "z", "=", "functional", ".", "relu", "(", "x", "+", "r", ",", "inplace", "=", "True", ")", "\n", "if", "self", ".", "residu", ":", "\n", "\t\t\t\t", "r", "=", "z", "-", "x", "\n", "", "", "else", ":", "\n", "\t\t\t", "z", "=", "x", "+", "r", "\n", "", "return", "z", ",", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNextStage.__init__": [[246, 252], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "main.ResNextBlock", "main.ResNextBlock", "block", "range"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__"], ["\t", "def", "__init__", "(", "self", ",", "nb", ",", "inf", "=", "256", ",", "pln", "=", "64", ",", "exp", "=", "4", ",", "card", "=", "32", ",", "width", "=", "4", ",", "base", "=", "64", ",", "stride", "=", "1", ",", "rel", "=", "True", ",", "res", "=", "True", ")", ":", "\n", "\t\t", "super", "(", "ResNextStage", ",", "self", ")", ".", "__init__", "(", ")", "\n", "intf", "=", "pln", "*", "exp", "\n", "ds", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "inf", ",", "intf", ",", "1", ",", "stride", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "intf", ")", ")", "if", "stride", "!=", "1", "or", "inf", "!=", "intf", "else", "None", "\n", "block", "=", "lambda", "i", ":", "ResNextBlock", "(", "inf", ",", "pln", ",", "exp", ",", "card", ",", "width", ",", "base", ",", "stride", ",", "rel", ",", "res", ",", "ds", ")", "if", "i", "==", "0", "else", "ResNextBlock", "(", "intf", ",", "pln", ",", "exp", ",", "card", ",", "width", ",", "base", ",", "1", ",", "rel", ",", "res", ")", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "block", "(", "i", ")", "for", "i", "in", "range", "(", "nb", ")", "]", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNextStage.forward": [[252, 258], ["block", "rs.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "rs", "=", "[", "]", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "\t\t\t", "x", ",", "r", "=", "block", "(", "x", ")", "\n", "rs", ".", "append", "(", "r", ")", "\n", "", "return", "x", ",", "rs", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext29.__init__": [[260, 274], ["torch.Module.__init__", "main.ResNextStage", "main.ResNextStage", "main.ResNextStage", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "main.ResNext29.encoder.parameters", "[].view", "main.ResNext29.forward_conv", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["\t", "def", "__init__", "(", "self", ",", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nblocks", "=", "[", "3", ",", "3", ",", "3", "]", ",", "infilters", "=", "64", ",", "planes", "=", "64", ",", "expansion", "=", "4", ",", "\n", "cardinality", "=", "16", ",", "width", "=", "64", ",", "base", "=", "64", ",", "relu", "=", "True", ",", "residu", "=", "True", ")", ":", "\n", "\t\t", "super", "(", "ResNext29", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "stage1", "=", "ResNextStage", "(", "nblocks", "[", "0", "]", ",", "infilters", "*", "1", ",", "planes", "*", "1", ",", "expansion", ",", "cardinality", ",", "width", ",", "base", ",", "1", ",", "relu", ",", "residu", ")", "\n", "self", ".", "stage2", "=", "ResNextStage", "(", "nblocks", "[", "1", "]", ",", "infilters", "*", "4", ",", "planes", "*", "2", ",", "expansion", ",", "cardinality", ",", "width", ",", "base", ",", "2", ",", "relu", ",", "residu", ")", "\n", "self", ".", "stage3", "=", "ResNextStage", "(", "nblocks", "[", "2", "]", ",", "infilters", "*", "8", ",", "planes", "*", "4", ",", "expansion", ",", "cardinality", ",", "width", ",", "base", ",", "2", ",", "relu", ",", "residu", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ",", "1", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "featuresize", "=", "self", ".", "forward_conv", "(", "torch", ".", "zeros", "(", "*", "datashape", ")", ")", "[", "0", "]", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "featuresize", ",", "nclasses", ")", "\n", "if", "not", "learnencoder", ":", "\n", "\t\t\t", "for", "param", "in", "self", ".", "encoder", ".", "parameters", "(", ")", ":", "\n", "\t\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "", "", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext29.forward_conv": [[274, 282], ["dict", "main.ResNext29.encoder", "main.ResNext29.stage1", "main.ResNext29.stage2", "main.ResNext29.stage3", "main.ResNext29.avgpool", "range"], "methods", ["None"], ["", "", "", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "rs", "=", "dict", "(", ")", "\n", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", ",", "rs", "[", "1", "]", "=", "self", ".", "stage1", "(", "x", ")", "\n", "x", ",", "rs", "[", "2", "]", "=", "self", ".", "stage2", "(", "x", ")", "\n", "x", ",", "rs", "[", "3", "]", "=", "self", ".", "stage3", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "return", "x", ",", "[", "r", "for", "i", "in", "range", "(", "1", ",", "4", ")", "for", "r", "in", "rs", "[", "i", "]", "]", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext29.forward": [[282, 287], ["main.ResNext29.forward_conv", "main.ResNext29.view", "main.ResNext29.classifier", "main.ResNext29.size"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", ",", "rs", "=", "self", ".", "forward_conv", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", ",", "rs", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.__init__": [[289, 304], ["torch.Module.__init__", "main.ResNextStage", "main.ResNextStage", "main.ResNextStage", "main.ResNextStage", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "main.ResNext50.encoder.parameters", "[].view", "main.ResNext50.forward_conv", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["\t", "def", "__init__", "(", "self", ",", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nblocks", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "infilters", "=", "64", ",", "planes", "=", "64", ",", "expansion", "=", "4", ",", "\n", "cardinality", "=", "32", ",", "width", "=", "4", ",", "base", "=", "64", ",", "relu", "=", "True", ",", "residu", "=", "True", ")", ":", "\n", "\t\t", "super", "(", "ResNext50", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "stage1", "=", "ResNextStage", "(", "nblocks", "[", "0", "]", ",", "infilters", "*", "1", ",", "planes", "*", "1", ",", "expansion", ",", "cardinality", ",", "width", ",", "base", ",", "1", ",", "relu", ",", "residu", ")", "\n", "self", ".", "stage2", "=", "ResNextStage", "(", "nblocks", "[", "1", "]", ",", "infilters", "*", "4", ",", "planes", "*", "2", ",", "expansion", ",", "cardinality", ",", "width", ",", "base", ",", "2", ",", "relu", ",", "residu", ")", "\n", "self", ".", "stage3", "=", "ResNextStage", "(", "nblocks", "[", "2", "]", ",", "infilters", "*", "8", ",", "planes", "*", "4", ",", "expansion", ",", "cardinality", ",", "width", ",", "base", ",", "2", ",", "relu", ",", "residu", ")", "\n", "self", ".", "stage4", "=", "ResNextStage", "(", "nblocks", "[", "3", "]", ",", "infilters", "*", "16", ",", "planes", "*", "8", ",", "expansion", ",", "cardinality", ",", "width", ",", "base", ",", "2", ",", "relu", ",", "residu", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", "if", "datashape", "[", "-", "1", "]", "==", "224", "else", "4", ",", "1", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "featuresize", "=", "self", ".", "forward_conv", "(", "torch", ".", "zeros", "(", "*", "datashape", ")", ")", "[", "0", "]", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "featuresize", ",", "nclasses", ")", "\n", "if", "not", "learnencoder", ":", "\n", "\t\t\t", "for", "param", "in", "self", ".", "encoder", ".", "parameters", "(", ")", ":", "\n", "\t\t\t\t", "param", ".", "requires_grad", "=", "False", "\n", "", "", "", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv": [[304, 313], ["dict", "main.ResNext50.encoder", "main.ResNext50.stage1", "main.ResNext50.stage2", "main.ResNext50.stage3", "main.ResNext50.stage4", "main.ResNext50.avgpool", "range"], "methods", ["None"], ["", "", "", "def", "forward_conv", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "rs", "=", "dict", "(", ")", "\n", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", ",", "rs", "[", "1", "]", "=", "self", ".", "stage1", "(", "x", ")", "\n", "x", ",", "rs", "[", "2", "]", "=", "self", ".", "stage2", "(", "x", ")", "\n", "x", ",", "rs", "[", "3", "]", "=", "self", ".", "stage3", "(", "x", ")", "\n", "x", ",", "rs", "[", "4", "]", "=", "self", ".", "stage4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "return", "x", ",", "[", "r", "for", "i", "in", "range", "(", "1", ",", "5", ")", "for", "r", "in", "rs", "[", "i", "]", "]", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward": [[313, 318], ["main.ResNext50.forward_conv", "main.ResNext50.view", "main.ResNext50.classifier", "main.ResNext50.size"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.ResNext50.forward_conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", ",", "rs", "=", "self", ".", "forward_conv", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", ",", "rs", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.pretrained_ae_files": [[8, 17], ["os.path.join", "os.path.join", "os.getcwd", "os.getcwd", "str", "str", "str"], "function", ["None"], ["def", "pretrained_ae_files", "(", "dataset", ",", "filters", ",", "ds", "=", "None", ",", "bn", "=", "None", ",", "pen", "=", "None", ",", "lmbda", "=", "None", ")", ":", "\n", "\t", "if", "dataset", "in", "[", "'imagenet2012'", ",", "'imagenetdownloader'", "]", ":", "\n", "\t\t", "name", "=", "'.pth'", "\n", "", "elif", "dataset", "in", "[", "'mnist'", ",", "'cifar10'", ",", "'cifar100'", ",", "'tinyimagenet'", "]", ":", "\n", "\t\t", "name", "=", "'-'", "+", "(", "'ds'", "if", "ds", "else", "''", ")", "+", "(", "'bn'", "if", "bn", "else", "''", ")", "+", "str", "(", "filters", ")", "+", "(", "'pen'", "+", "str", "(", "pen", ")", "if", "pen", "else", "''", ")", "+", "(", "'lmbda'", "+", "str", "(", "lmbda", ")", "if", "pen", "else", "''", ")", "+", "'.pth'", "\n", "", "encoder_pre", ",", "decoder_pre", "=", "dataset", "+", "'-encoder'", ",", "dataset", "+", "'-decoder'", "\n", "encoder_file", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "'autoencoders'", ",", "encoder_pre", "+", "'-weights'", ",", "encoder_pre", "+", "name", ")", "\n", "decoder_file", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "'autoencoders'", ",", "decoder_pre", "+", "'-weights'", ",", "decoder_pre", "+", "name", ")", "\n", "return", "encoder_file", ",", "decoder_file", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.get_autoencoder": [[18, 30], ["utils.create_autoencoder", "main.pretrained_ae_files", "encoder.load_state_dict", "decoder.load_state_dict", "encoder.eval", "decoder.eval", "main.test_autoencoder", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.create_autoencoder", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.pretrained_ae_files", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.test_autoencoder"], ["", "def", "get_autoencoder", "(", "dataset", ",", "filters", ",", "learnencoder", ",", "datashape", "=", "None", ",", "valloader", "=", "None", ",", "mean", "=", "None", ",", "std", "=", "None", ")", ":", "\n", "\t", "ds", "=", "dataset", "in", "[", "'mnist'", ",", "'cifar10'", ",", "'tinyimagenet'", "]", "\n", "bn", "=", "dataset", "in", "[", "'cifar100'", ",", "'tinyimagenet'", "]", "\n", "encoder", ",", "decoder", "=", "create_autoencoder", "(", "1", "if", "dataset", "==", "'mnist'", "else", "3", ",", "filters", ",", "ds", ",", "bn", ",", "dataset", "in", "[", "'imagenet2012'", ",", "'imagenetdownloader'", "]", ")", "\n", "if", "not", "learnencoder", ":", "\n", "\t\t", "encoder_file", ",", "decoder_file", "=", "pretrained_ae_files", "(", "dataset", ",", "filters", ",", "ds", ",", "bn", ",", "0", ",", "0", ")", "\n", "encoder", ".", "load_state_dict", "(", "torch", ".", "load", "(", "encoder_file", ")", ")", "\n", "decoder", ".", "load_state_dict", "(", "torch", ".", "load", "(", "decoder_file", ")", ")", "\n", "encoder", ".", "eval", "(", ")", "\n", "decoder", ".", "eval", "(", ")", "\n", "test_autoencoder", "(", "datashape", ",", "encoder", ",", "decoder", ",", "valloader", ",", "mean", ",", "std", ")", "\n", "", "return", "encoder", ",", "decoder", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.test_autoencoder": [[31, 51], ["print", "print", "torchsummary.summary", "print", "torch.MSELoss", "enumerate", "print", "encoder", "decoder", "nn.MSELoss.", "criterion.item", "numpy.random.choice", "utils.show_autoencoder_images", "x.cpu().detach().numpy().copy", "decoder.cpu().detach().numpy().copy", "x.size", "x.cpu().detach().numpy", "decoder.cpu().detach().numpy", "x.cpu().detach", "decoder.cpu().detach", "x.cpu", "decoder.cpu"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.show_autoencoder_images"], ["", "def", "test_autoencoder", "(", "datashape", ",", "encoder", ",", "decoder", ",", "testloader", ",", "mean", ",", "std", ")", ":", "\n", "\t", "print", "(", "'\\n--- Testing autoencoder'", ")", "\n", "print", "(", "'-'", "*", "64", ",", "'encoder\\n'", ",", "encoder", ")", "\n", "summary", "(", "encoder", ",", "datashape", "[", "1", ":", "]", ",", "device", "=", "'cpu'", ")", "\n", "print", "(", "'-'", "*", "64", ",", "'decoder\\n'", ",", "decoder", ")", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "test_loss", ",", "idx_batch", "=", "0", ",", "4", "\n", "for", "i", ",", "(", "x", ",", "_", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "\t\t", "z", "=", "encoder", "(", "x", ")", "\n", "y", "=", "decoder", "(", "z", ")", "\n", "loss", "=", "criterion", "(", "y", ",", "x", ")", "\n", "test_loss", "+=", "loss", ".", "item", "(", ")", "\n", "if", "i", "==", "idx_batch", ":", "\n", "\t\t\t", "idx_images", "=", "np", ".", "random", ".", "choice", "(", "x", ".", "size", "(", ")", "[", "0", "]", ",", "5", ",", "replace", "=", "False", ")", "\n", "x_", "=", "x", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "copy", "(", ")", "[", "idx_images", ",", ":", ",", ":", ",", ":", "]", "\n", "y_", "=", "y", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "copy", "(", ")", "[", "idx_images", ",", ":", ",", ":", ",", ":", "]", "\n", "show_autoencoder_images", "(", "x_", ",", "y_", ",", "mean", ",", "std", ",", "'test-ae2.png'", ")", "\n", "break", "\n", "", "", "test_loss", "/=", "(", "i", "+", "1", ")", "\n", "print", "(", "'--- Autoencoder test loss : {:.4f}'", ".", "format", "(", "test_loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.getmodel": [[319, 334], ["main.ResNext29", "main.ResNext50", "main.OneRepResNet", "main.ResNet", "main.AvgPoolResNet", "main.WideResNet", "NotImplementedError"], "function", ["None"], ["", "", "def", "getmodel", "(", "datashape", ",", "model", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nfilters", ",", "batchnorm", ",", "bias", ",", "timestep", ",", "classifier", ",", "nblocks", ",", "relu", ",", "residu", ")", ":", "\n", "\t", "if", "model", "==", "'resnext29'", ":", "\n", "\t\t", "return", "ResNext29", "(", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "infilters", "=", "nfilters", ",", "relu", "=", "relu", ",", "residu", "=", "residu", ")", "\n", "", "if", "model", "==", "'resnext50'", ":", "\n", "\t\t", "return", "ResNext50", "(", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "infilters", "=", "nfilters", ",", "relu", "=", "relu", ",", "residu", "=", "residu", ",", ")", "\n", "", "if", "model", "==", "'onerep'", ":", "\n", "\t\t", "return", "OneRepResNet", "(", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nblocks", ",", "nfilters", ",", "classifier", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "", "if", "model", "==", "'resnet'", ":", "\n", "\t\t", "return", "ResNet", "(", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nblocks", ",", "nfilters", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "", "if", "model", "==", "'avgpool'", ":", "\n", "\t\t", "return", "AvgPoolResNet", "(", "datashape", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nblocks", ",", "nfilters", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "", "if", "model", "==", "'wide'", ":", "\n", "\t\t", "return", "WideResNet", "(", "datashape", ",", "nclasses", ",", "nblocks", ",", "batchnorm", ",", "bias", ",", "timestep", ")", "\n", "", "else", ":", "\n", "\t\t", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.train": [[335, 382], ["print", "range", "main.test", "time.time", "model.train", "enumerate", "train_loss.append", "train_acc1.append", "train_acc5.append", "optimizer.zero_grad", "main.test", "val_loss.append", "val_acc1.append", "val_acc5.append", "print", "scheduler.step", "time.time", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "optimizer.zero_grad", "model", "criterion", "loss.backward", "optimizer.step", "len", "utils.topkaccuracy", "loss_meter.update", "acc1_meter.update", "acc5_meter.update", "time_meter.update", "time.time", "x.to", "y.to", "sum", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "loss.item", "print", "time.time", "time.time", "criterion.item", "model.parameters", "time.time", "len", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.test", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.train", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.test", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.topkaccuracy", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update"], ["", "", "def", "train", "(", "model", ",", "optimizer", ",", "scheduler", ",", "criterion", ",", "trainloader", ",", "valloader", ",", "testloader", ",", "pnorm", ",", "lmt0", ",", "lml0", ",", "tau", ",", "uzs", ",", "nepochs", ",", "clip", "=", "0", ")", ":", "\n", "\t", "train_loss", ",", "train_acc1", ",", "train_acc5", ",", "val_loss", ",", "val_acc1", ",", "val_acc5", ",", "lmt", ",", "lml", ",", "t0", ",", "it", ",", "uzawa", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "lmt0", ",", "lml0", ",", "time", ".", "time", "(", ")", ",", "0", ",", "uzs", ">", "0", "and", "tau", ">", "0", "\n", "lmt", "=", "1", "/", "lml", "if", "uzawa", "else", "lmt", "\n", "print", "(", "'\\n--- Begin trainning\\n'", ")", "\n", "for", "e", "in", "range", "(", "nepochs", ")", ":", "\n", "\t\t", "model", ".", "train", "(", ")", "\n", "t1", ",", "loss_meter", ",", "acc1_meter", ",", "acc5_meter", ",", "time_meter", "=", "time", ".", "time", "(", ")", ",", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "for", "j", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "\t\t\t", "t2", ",", "it", "=", "time", ".", "time", "(", ")", ",", "it", "+", "1", "\n", "x", ",", "y", "=", "x", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "out", ",", "rs", "=", "model", "(", "x", ")", "\n", "classification_loss", "=", "criterion", "(", "out", ",", "y", ")", "\n", "if", "uzawa", "and", "it", "%", "uzs", "==", "0", ":", "\n", "\t\t\t\t", "lml", "+=", "tau", "*", "classification_loss", ".", "item", "(", ")", "\n", "lmt", "=", "1", "/", "lml", "\n", "", "if", "lmt", ">", "0", ":", "\n", "\t\t\t\t", "transport", "=", "sum", "(", "[", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "r", ")", "**", "pnorm", ")", "for", "r", "in", "rs", "]", ")", "\n", "loss", "=", "classification_loss", "+", "lmt", "*", "transport", "\n", "", "else", ":", "\n", "\t\t\t\t", "loss", "=", "classification_loss", "\n", "", "loss", ".", "backward", "(", ")", "\n", "if", "clip", ">", "0", ":", "\n", "\t\t\t\t", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "clip", ")", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "num", "=", "len", "(", "y", ")", "\n", "prec1", ",", "prec5", "=", "topkaccuracy", "(", "out", ".", "data", ",", "y", ".", "data", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "loss_meter", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "num", ")", "\n", "acc1_meter", ".", "update", "(", "prec1", ",", "num", ")", "\n", "acc5_meter", ".", "update", "(", "prec5", ",", "num", ")", "\n", "time_meter", ".", "update", "(", "time", ".", "time", "(", ")", "-", "t2", ",", "1", ")", "\n", "if", "j", "%", "500", "==", "0", ":", "\n", "\t\t\t\t", "m", "=", "(", "e", "+", "1", ",", "nepochs", ",", "j", "+", "1", ",", "len", "(", "trainloader", ")", ",", "loss_meter", ".", "avg", ",", "acc1_meter", ".", "avg", ",", "acc5_meter", ".", "avg", ",", "lml", ",", "time_meter", ".", "avg", ")", "\n", "print", "(", "'[Ep {:^5}/{:^5} Batch {:^5}/{:^5}] Train loss {:9.4f} Train top1acc {:.4f} Train top5acc {:.4f} Lambda loss {:9.4f} Batch time {:.4f}s'", ".", "format", "(", "*", "m", ")", ")", "\n", "", "", "train_loss", ".", "append", "(", "loss_meter", ".", "avg", ")", "\n", "train_acc1", ".", "append", "(", "acc1_meter", ".", "avg", ")", "\n", "train_acc5", ".", "append", "(", "acc5_meter", ".", "avg", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "vlo", ",", "vac1", ",", "vac5", "=", "test", "(", "model", ",", "criterion", ",", "valloader", ")", "\n", "val_loss", ".", "append", "(", "vlo", ")", "\n", "val_acc1", ".", "append", "(", "vac1", ")", "\n", "val_acc5", ".", "append", "(", "vac5", ")", "\n", "m", "=", "(", "e", "+", "1", ",", "nepochs", ",", "vlo", ",", "vac1", ",", "vac5", ",", "time", ".", "time", "(", ")", "-", "t1", ",", "time", ".", "time", "(", ")", "-", "t0", ")", "\n", "print", "(", "'\\n[***** Ep {:^5}/{:^5} over ******] Valid loss {:9.4f} Valid top1acc {:.4f} Valid top5acc {:.4f} Epoch time {:9.4f}s Total time {:.4f}s\\n'", ".", "format", "(", "*", "m", ")", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "", "test_loss", ",", "test_acc1", ",", "test_acc5", "=", "test", "(", "model", ",", "criterion", ",", "testloader", ")", "\n", "return", "train_loss", ",", "val_acc1", ",", "val_acc5", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.test": [[383, 398], ["model.eval", "enumerate", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "criterion", "sum", "len", "utils.topkaccuracy", "loss_meter.update", "acc1_meter.update", "acc5_meter.update", "x.to", "y.to", "criterion.item", "sum", "range", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.topkaccuracy", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update"], ["", "def", "test", "(", "model", ",", "criterion", ",", "loader", ")", ":", "\n", "\t", "model", ".", "eval", "(", ")", "\n", "loss_meter", ",", "acc1_meter", ",", "acc5_meter", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "for", "j", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "\t\t", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "x", ",", "y", "=", "x", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "out", ",", "residus", "=", "model", "(", "x", ")", "\n", "ent", "=", "criterion", "(", "out", ",", "y", ")", "\n", "trs", "=", "sum", "(", "[", "sum", "(", "[", "torch", ".", "mean", "(", "r", "**", "2", ")", "for", "r", "in", "residus", "[", "i", "]", "]", ")", "for", "i", "in", "range", "(", "1", ",", "5", ")", "]", ")", "\n", "num", "=", "len", "(", "y", ")", "\n", "prec1", ",", "prec5", "=", "topkaccuracy", "(", "out", ".", "data", ",", "y", ".", "data", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "loss_meter", ".", "update", "(", "ent", ".", "item", "(", ")", ",", "num", ")", "\n", "acc1_meter", ".", "update", "(", "prec1", ",", "num", ")", "\n", "acc5_meter", ".", "update", "(", "prec5", ",", "num", ")", "\n", "", "", "return", "loss_meter", ".", "avg", ",", "acc1_meter", ".", "avg", ",", "acc5_meter", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.experiment": [[400, 460], ["time.time", "dataloaders.dataloaders", "inspect.currentframe", "inspect.getargvalues", "print", "print", "main.get_autoencoder", "main.getmodel", "functools.partial", "nn.DataParallel.to", "print", "torch.CrossEntropyLoss", "torch.SGD", "torch.lr_scheduler.MultiStepLR", "main.train", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "numpy.random.seed", "utils.make_folder", "open", "print", "print", "print", "len", "len", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "print", "torch.DataParallel", "nn.DataParallel.named_modules", "nn.DataParallel.parameters", "print", "print", "sys.stdout.close", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "str", "os.path.join", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "min", "max", "max", "nn.DataParallel.state_dict", "os.path.join", "time.time", "module.apply", "str", "len", "name.count", "str", "time.strftime"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.dataloaders.dataloaders", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.get_autoencoder", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.getmodel", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.train", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.make_folder"], ["", "def", "experiment", "(", "dataset", ",", "modelname", ",", "learnencoder", ",", "pnorm", ",", "nfilters", ",", "learningrate", ",", "lambdatransport", ",", "lambdaloss0", ",", "tau", ",", "uzawasteps", ",", "batchnorm", ",", "bias", ",", "timestep", ",", "clip", ",", "classifier", ",", "\n", "nblocks", ",", "nepochs", ",", "init", ",", "initname", ",", "initgain", ",", "trainsize", ",", "valsize", ",", "testsize", ",", "batchsize", ",", "relu", ",", "residu", ",", "weightdecay", ",", "seed", "=", "None", ",", "experiments", "=", "False", ")", ":", "\n", "\n", "\t", "t0", "=", "time", ".", "time", "(", ")", "\n", "if", "seed", "is", "not", "None", ":", "\n", "\t\t", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "", "trainloader", ",", "valloader", ",", "testloader", ",", "datashape", ",", "nclasses", ",", "mean", ",", "std", "=", "dataloaders", "(", "dataset", ",", "batchsize", ",", "trainsize", ",", "valsize", ",", "testsize", ")", "\n", "\n", "if", "nepochs", ">", "5", ":", "\n", "\t\t", "folder", "=", "modelname", "+", "'-'", "+", "dataset", "+", "'-'", "+", "time", ".", "strftime", "(", "\"%Y%m%d-%H%M%S\"", ")", "+", "'-lt'", "+", "str", "(", "lambdatransport", ")", "+", "'-ll'", "+", "str", "(", "lambdaloss0", ")", "+", "'-ta'", "+", "str", "(", "tau", ")", "\n", "make_folder", "(", "folder", ")", "\n", "stdout0", "=", "sys", ".", "stdout", "\n", "sys", ".", "stdout", "=", "open", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "'log.txt'", ")", ",", "'wt'", ")", "\n", "", "frame", "=", "inspect", ".", "currentframe", "(", ")", "\n", "names", ",", "_", ",", "_", ",", "values", "=", "inspect", ".", "getargvalues", "(", "frame", ")", "\n", "print", "(", "'experiment from main.py with parameters'", ")", "\n", "for", "name", "in", "names", ":", "\n", "\t\t", "print", "(", "'%s = %s'", "%", "(", "name", ",", "values", "[", "name", "]", ")", ")", "\n", "", "if", "uzawasteps", "==", "0", "and", "(", "lambdaloss0", "!=", "1", "or", "tau", ">", "0", ")", ":", "\n", "\t\t", "print", "(", "'us = 0 means no transport loss. lambda loss is fixed to 1, tau to 0, and lambda transport to 0'", ")", "\n", "lambdaloss0", ",", "tau", ",", "lambdatransport", "=", "1", ",", "0", ",", "0", "\n", "", "if", "uzawasteps", ">", "0", "and", "lambdatransport", "!=", "1", ":", "\n", "\t\t", "print", "(", "'us > 0 means uzawa. lambda transport is fixed to 1'", ")", "\n", "lambdatransport", "=", "1", "\n", "", "print", "(", "'train batches ='", ",", "len", "(", "trainloader", ")", ",", "'val batches ='", ",", "len", "(", "valloader", ")", ")", "\n", "\n", "encoder", ",", "decoder", "=", "get_autoencoder", "(", "dataset", ",", "nfilters", ",", "learnencoder", ",", "datashape", ",", "valloader", ",", "mean", ",", "std", ")", "\n", "model", "=", "getmodel", "(", "datashape", ",", "modelname", ",", "nclasses", ",", "learnencoder", ",", "encoder", ",", "nfilters", ",", "batchnorm", ",", "bias", ",", "timestep", ",", "classifier", ",", "nblocks", ",", "relu", ",", "residu", ")", "\n", "if", "torch", ".", "cuda", ".", "device_count", "(", ")", ">", "1", ":", "\n", "  \t\t", "print", "(", "'\\n---'", ",", "torch", ".", "cuda", ".", "device_count", "(", ")", ",", "'GPUs \\n'", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "", "initialization", "=", "partial", "(", "initialize", ",", "initname", ",", "initgain", ")", "\n", "if", "init", ":", "\n", "\t\t", "for", "name", ",", "module", "in", "model", ".", "named_modules", "(", ")", ":", "\n", "\t\t\t", "if", "name", "!=", "'module'", "and", "len", "(", "name", ")", ">", "0", "and", "name", ".", "count", "(", "'.'", ")", "==", "1", "and", "(", "learnencoder", "or", "'encoder'", "not", "in", "name", ")", ":", "\n", "\t\t\t\t", "module", ".", "apply", "(", "initialization", ")", "\n", "", "", "", "model", ".", "to", "(", "device", ")", "\n", "print", "(", "model", ")", "\n", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "learningrate", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "weightdecay", ")", "\n", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "[", "150", ",", "225", ",", "250", "]", ",", "gamma", "=", "0.1", ")", "\n", "\n", "train_loss", ",", "val_acc1", ",", "val_acc5", "=", "train", "(", "model", ",", "optimizer", ",", "scheduler", ",", "criterion", ",", "trainloader", ",", "valloader", ",", "testloader", ",", "pnorm", ",", "\n", "lambdatransport", ",", "lambdaloss0", ",", "tau", ",", "uzawasteps", ",", "nepochs", ")", "\n", "\n", "if", "experiments", "and", "nepochs", ">", "5", ":", "\n", "\t\t", "print", "(", "'--- Train Loss \\n'", ",", "train_loss", ",", "'\\n--- Val Acc1 \\n'", ",", "val_acc1", ",", "'\\n--- Val Acc5 \\n'", ",", "val_acc5", ")", "\n", "print", "(", "'--- Min Train Loss \\n'", ",", "min", "(", "train_loss", ")", ",", "'\\n--- Max Val Acc1 \\n'", ",", "max", "(", "val_acc1", ")", ",", "'\\n--- Max Val Acc5 \\n'", ",", "max", "(", "val_acc5", ")", ")", "\n", "sys", ".", "stdout", ".", "close", "(", ")", "\n", "sys", ".", "stdout", "=", "stdout0", "\n", "\n", "", "if", "not", "experiments", ":", "\n", "\t\t", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "folder", ",", "'weights.pth'", ")", ")", "\n", "", "del", "model", "\n", "return", "train_loss", ",", "val_acc1", ",", "val_acc5", ",", "time", ".", "time", "(", ")", "-", "t0", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.experiments": [[461, 492], ["len", "int", "print", "print", "pprint.pprint", "utils.product", "numpy.mean", "numpy.mean", "scipy.t.interval", "print", "print", "print", "scipy.t.interval", "print", "print", "print", "print", "time.time", "numpy.prod", "print", "pprint.pprint", "main.experiment", "acc1s.append", "acc5s.append", "print", "numpy.max", "numpy.max", "len", "scipy.sem", "len", "scipy.sem", "len", "range", "str", "range", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.product", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.main.experiment"], ["", "def", "experiments", "(", "parameters", ",", "average", ")", ":", "\n", "\t", "t0", ",", "j", ",", "f", "=", "time", ".", "time", "(", ")", ",", "0", ",", "110", "\n", "sep", "=", "'-'", "*", "f", "\n", "acc1s", ",", "acc5s", "=", "[", "]", ",", "[", "]", "\n", "nparameters", "=", "len", "(", "parameters", ")", "\n", "nexperiments", "=", "int", "(", "np", ".", "prod", "(", "[", "len", "(", "parameters", "[", "i", "]", "[", "1", "]", ")", "for", "i", "in", "range", "(", "nparameters", ")", "]", ")", ")", "\n", "print", "(", "'\\n'", "+", "sep", ",", "'main.py'", ")", "\n", "print", "(", "sep", ",", "nexperiments", ",", "'experiments '", "+", "(", "'to average '", "if", "average", "else", "''", ")", "+", "'over parameters:'", ")", "\n", "pprint", ".", "pprint", "(", "parameters", ",", "width", "=", "f", ",", "compact", "=", "True", ")", "\n", "for", "params", "in", "product", "(", "[", "values", "for", "name", ",", "values", "in", "parameters", "]", ")", ":", "\n", "\t\t", "j", "+=", "1", "\n", "print", "(", "'\\n'", "+", "sep", ",", "'experiment %d/%d with parameters:'", "%", "(", "j", ",", "nexperiments", ")", ")", "\n", "pprint", ".", "pprint", "(", "[", "parameters", "[", "i", "]", "[", "0", "]", "+", "' = '", "+", "str", "(", "params", "[", "i", "]", ")", "for", "i", "in", "range", "(", "nparameters", ")", "]", ",", "width", "=", "f", ",", "compact", "=", "True", ")", "\n", "tr_loss", ",", "vl_acc1", ",", "vl_acc5", ",", "t1", "=", "experiment", "(", "*", "params", ",", "True", ")", "\n", "acc1s", ".", "append", "(", "np", ".", "max", "(", "vl_acc1", ")", ")", "\n", "acc5s", ".", "append", "(", "np", ".", "max", "(", "vl_acc5", ")", ")", "\n", "print", "(", "sep", ",", "'experiment %d/%d over. took %.1f s. total %.1f s'", "%", "(", "j", ",", "nexperiments", ",", "t1", ",", "time", ".", "time", "(", ")", "-", "t0", ")", ")", "\n", "", "acc1", "=", "np", ".", "mean", "(", "acc1s", ")", "\n", "acc5", "=", "np", ".", "mean", "(", "acc5s", ")", "\n", "\n", "confint1", "=", "st", ".", "t", ".", "interval", "(", "0.95", ",", "len", "(", "acc1s", ")", "-", "1", ",", "loc", "=", "acc1", ",", "scale", "=", "st", ".", "sem", "(", "acc1s", ")", ")", "\n", "print", "(", "'\\nall test acc1'", ",", "acc1s", ")", "\n", "print", "(", "'\\naverage test acc1'", ",", "acc1", ")", "\n", "print", "(", "'\\nconfint1'", ",", "confint1", ")", "\n", "\n", "confint5", "=", "st", ".", "t", ".", "interval", "(", "0.95", ",", "len", "(", "acc5s", ")", "-", "1", ",", "loc", "=", "acc5", ",", "scale", "=", "st", ".", "sem", "(", "acc5s", ")", ")", "\n", "print", "(", "'\\nall test acc5'", ",", "acc5s", ")", "\n", "print", "(", "'\\naverage test acc5'", ",", "acc5", ")", "\n", "print", "(", "'\\nconfint5'", ",", "confint5", ")", "\n", "\n", "print", "(", "(", "'\\n'", "if", "not", "average", "else", "''", ")", "+", "sep", ",", "'total time for %d experiments: %.1f s'", "%", "(", "j", ",", "time", ".", "time", "(", ")", "-", "t0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.ResnetClassifier.__init__": [[19, 25], ["torch.Module.__init__", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "utils.ResnetClassifier.subsample().view", "utils.ResnetClassifier.subsample", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.ResnetClassifier.subsample"], ["\t", "def", "__init__", "(", "self", ",", "feature_shape", ",", "nclasses", ",", "learn_bn", "=", "True", ",", "filters", "=", "None", ")", ":", "\n", "\t\t", "super", "(", "ResnetClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "filters", ")", "if", "learn_bn", "else", "nn", ".", "BatchNorm2d", "(", "feature_shape", "[", "1", "]", ",", "affine", "=", "False", ",", "track_running_stats", "=", "False", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "avgpool_resnet_classifier", ",", "avgpool_resnet_classifier", ")", "\n", "self", ".", "feature_size", "=", "self", ".", "subsample", "(", "torch", ".", "zeros", "(", "*", "feature_shape", ")", ")", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "feature_size", ",", "nclasses", ")", "\n", "", "def", "subsample", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.ResnetClassifier.subsample": [[25, 28], ["utils.ResnetClassifier.avgpool", "torch.relu", "torch.relu", "utils.ResnetClassifier.bn"], "methods", ["None"], ["", "def", "subsample", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "avgpool", "(", "functional", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.ResnetClassifier.forward": [[28, 33], ["utils.ResnetClassifier.subsample", "utils.ResnetClassifier.view", "utils.ResnetClassifier.fc", "utils.ResnetClassifier.size"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.ResnetClassifier.subsample"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "subsample", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.__init__": [[130, 132], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.reset"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "reset", "(", ")", "\n", "", "def", "reset", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.reset": [[132, 137], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "", "def", "update", "(", "self", ",", "val", ",", "num", ")", ":", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update": [[137, 142], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "num", ")", ":", "\n", "\t\t", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "num", "\n", "self", ".", "count", "+=", "num", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.topkaccuracy": [[34, 45], ["max", "len", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "target.view", "correct[].view().float", "correct[].view().float().sum.item", "correct[].view"], "function", ["None"], ["", "", "def", "topkaccuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "\t", "maxk", "=", "max", "(", "topk", ")", "\n", "num", "=", "len", "(", "target", ")", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "\t\t", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "item", "(", ")", "/", "num", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.create_autoencoder": [[46, 77], ["int", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.Tanh", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.Tanh", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.Tanh", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.Tanh", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.Tanh"], "function", ["None"], ["", "def", "create_autoencoder", "(", "in_channels", "=", "3", ",", "filters", "=", "100", ",", "ds", "=", "True", ",", "bn", "=", "True", ",", "imagenet", "=", "False", ")", ":", "\n", "\t", "int_filters", "=", "int", "(", "filters", "/", "2", ")", "\n", "if", "imagenet", ":", "\n", "\t\t", "encoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "3", ",", "filters", ",", "7", ",", "2", ",", "3", ")", ",", "nn", ".", "BatchNorm2d", "(", "filters", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "filters", ",", "filters", ",", "3", ",", "2", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "filters", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "decoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "filters", ",", "filters", ",", "3", ",", "2", ",", "1", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "filters", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "filters", ",", "3", ",", "7", ",", "2", ",", "3", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "3", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "return", "encoder", ",", "decoder", "\n", "", "if", "not", "ds", ":", "\n", "\t\t", "if", "not", "bn", ":", "\n", "\t\t\t", "encoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "int_filters", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "int_filters", ",", "filters", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "decoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "filters", ",", "int_filters", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "int_filters", ",", "in_channels", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "encoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "int_filters", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "int_filters", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "int_filters", ",", "filters", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "filters", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "decoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "filters", ",", "int_filters", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "int_filters", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "int_filters", ",", "in_channels", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "", "", "else", ":", "\n", "\t\t", "if", "not", "bn", ":", "\n", "\t\t\t", "encoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "int_filters", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "int_filters", ",", "filters", ",", "5", ",", "2", ",", "2", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "decoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "filters", ",", "int_filters", ",", "5", ",", "2", ",", "2", ",", "1", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "int_filters", ",", "in_channels", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "encoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "int_filters", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "int_filters", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "int_filters", ",", "filters", ",", "5", ",", "2", ",", "2", ")", ",", "nn", ".", "BatchNorm2d", "(", "filters", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "decoder", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "filters", ",", "int_filters", ",", "5", ",", "2", ",", "2", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "int_filters", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "int_filters", ",", "in_channels", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "", "", "return", "encoder", ",", "decoder", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.create_classifier": [[80, 92], ["numpy.prod", "torch.Linear", "torch.Sequential", "torch.Sequential", "utils.ResnetClassifier", "utils.ResnetClassifier", "torch.Linear", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.ReLU", "torch.Linear"], "function", ["None"], ["", "def", "create_classifier", "(", "name", ",", "nclasses", ",", "feature_shape", ",", "filters", "=", "None", ")", ":", "\n", "\t", "feature_size", "=", "np", ".", "prod", "(", "feature_shape", ")", "\n", "if", "name", "==", "'1Lin'", ":", "\n", "\t\t", "return", "nn", ".", "Linear", "(", "feature_size", ",", "nclasses", ")", "\n", "", "if", "name", "==", "'2Lin'", ":", "\n", "\t\t", "return", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "feature_size", ",", "nclasses", "*", "10", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "nn", ".", "Linear", "(", "nclasses", "*", "10", ",", "nclasses", ")", ")", "\n", "", "if", "name", "==", "'3Lin'", ":", "\n", "\t\t", "return", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "feature_size", ",", "nclasses", "*", "10", ")", ",", "nn", ".", "BatchNorm1d", "(", "nclasses", "*", "10", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Linear", "(", "nclasses", "*", "10", ",", "nclasses", ")", ")", "\n", "", "if", "name", "==", "'ResNet'", ":", "\n", "\t\t", "return", "ResnetClassifier", "(", "feature_shape", ",", "nclasses", ",", "True", ",", "filters", ")", "\n", "", "if", "name", "==", "'ResNetNoBN'", ":", "\n", "\t\t", "return", "ResnetClassifier", "(", "feature_shape", ",", "nclasses", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.initialize": [[93, 115], ["isinstance", "functools.partial", "functools.partial.", "isinstance", "functools.partial", "hasattr", "torch.init.constant_", "isinstance", "functools.partial", "ValueError", "hasattr", "torch.init.constant_", "hasattr", "torch.init.constant_", "functools.partial.", "hasattr", "torch.init.constant_"], "function", ["None"], ["", "", "def", "initialize", "(", "name", ",", "gain", ",", "module", ")", ":", "\n", "\t", "if", "name", "==", "'orthogonal'", ":", "\n", "\t\t", "init", "=", "partial", "(", "nn", ".", "init", ".", "orthogonal_", ",", "gain", "=", "gain", ")", "\n", "", "elif", "name", "==", "'normal'", ":", "\n", "\t\t", "init", "=", "partial", "(", "nn", ".", "init", ".", "normal_", ",", "mean", "=", "0", ",", "std", "=", "gain", ")", "\n", "", "elif", "name", "==", "'kaiming'", ":", "\n", "\t\t", "init", "=", "partial", "(", "nn", ".", "init", ".", "kaiming_normal_", ",", "a", "=", "0", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "else", ":", "\n", "\t\t", "raise", "ValueError", "(", "'Unknown init '", "+", "name", ")", "\n", "", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", ":", "\n", "\t\t", "init", "(", "module", ".", "weight", ")", "\n", "if", "hasattr", "(", "module", ",", "'bias'", ")", "and", "module", ".", "bias", "is", "not", "None", ":", "\n", "\t\t\t", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "\t\t", "if", "hasattr", "(", "module", ",", "'weight'", ")", "and", "module", ".", "weight", "is", "not", "None", ":", "\n", "\t\t\t", "nn", ".", "init", ".", "constant_", "(", "module", ".", "weight", ",", "1", ")", "\n", "", "if", "hasattr", "(", "module", ",", "'bias'", ")", "and", "module", ".", "bias", "is", "not", "None", ":", "\n", "\t\t\t", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "Linear", ")", ":", "\n", "\t\t", "init", "(", "module", ".", "weight", ")", "\n", "if", "hasattr", "(", "module", ",", "'bias'", ")", "and", "module", ".", "bias", "is", "not", "None", ":", "\n", "\t\t\t", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.product": [[116, 124], ["len", "utils.product"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.product"], ["", "", "", "def", "product", "(", "iterables", ")", ":", "\n", "    ", "if", "len", "(", "iterables", ")", "==", "0", ":", "\n", "        ", "yield", "(", ")", "\n", "", "else", ":", "\n", "        ", "it", "=", "iterables", "[", "0", "]", "\n", "for", "item", "in", "it", ":", "\n", "            ", "for", "items", "in", "product", "(", "iterables", "[", "1", ":", "]", ")", ":", "\n", "                ", "yield", "(", "item", ",", ")", "+", "items", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.make_folder": [[125, 128], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "", "", "", "def", "make_folder", "(", "folder", ")", ":", "\n", "\t", "if", "not", "os", ".", "path", ".", "exists", "(", "folder", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "folder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.update_meters": [[143, 153], ["len", "loss_meter.update", "acc_meter.update", "trs_meter.update", "time_meter.update"], "function", ["home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.AverageMeter.update"], ["", "", "def", "update_meters", "(", "y", ",", "pred", ",", "loss", ",", "loss_meter", ",", "acc_meter", ",", "trs", "=", "None", ",", "trs_meter", "=", "None", ",", "t", "=", "None", ",", "time_meter", "=", "None", ")", ":", "\n", "\t", "num", "=", "len", "(", "y", ")", "\n", "correct", "=", "(", "pred", "==", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "accuracy", "=", "correct", "/", "num", "\n", "loss_meter", ".", "update", "(", "loss", ",", "num", ")", "\n", "acc_meter", ".", "update", "(", "accuracy", ",", "num", ")", "\n", "if", "trs", "is", "not", "None", "and", "trs_meter", "is", "not", "None", ":", "\n", "\t\t", "trs_meter", ".", "update", "(", "trs", ",", "num", ")", "\n", "", "if", "t", "is", "not", "None", "and", "time_meter", "is", "not", "None", ":", "\n", "\t\t", "time_meter", ".", "update", "(", "t", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.plotscores": [[154, 165], ["matplotlib.figure", "matplotlib.subplot", "matplotlib.plot", "matplotlib.ylabel", "matplotlib.subplot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.savefig", "matplotlib.close"], "function", ["None"], ["", "", "def", "plotscores", "(", "losses", ",", "accuracy", ",", "name", ")", ":", "\n", "\t", "plt", ".", "figure", "(", "1", ")", "\n", "plt", ".", "subplot", "(", "211", ")", "\n", "plt", ".", "plot", "(", "losses", ")", "\n", "plt", ".", "ylabel", "(", "'train loss'", ")", "\n", "plt", ".", "subplot", "(", "212", ")", "\n", "plt", ".", "plot", "(", "accuracy", ")", "\n", "plt", ".", "xlabel", "(", "'epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'test accuracy'", ")", "\n", "plt", ".", "savefig", "(", "name", "+", "'-loss-acc.png'", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.show_autoencoder_images": [[166, 186], ["matplotlib.subplots", "range", "matplotlib.close", "numpy.moveaxis", "numpy.moveaxis", "numpy.clip", "axs[].imshow", "axs[].axis", "numpy.clip", "axs[].imshow", "axs[].axis", "fig.savefig", "matplotlib.show"], "function", ["None"], ["", "def", "show_autoencoder_images", "(", "x", ",", "y", ",", "mean", ",", "std", ",", "name", "=", "None", ")", ":", "\n", "\t", "bw", "=", "x", ".", "shape", "[", "1", "]", "==", "1", "\n", "x", "=", "x", "[", ":", ",", "0", ",", ":", ",", ":", "]", "if", "bw", "else", "np", ".", "moveaxis", "(", "x", ",", "1", ",", "-", "1", ")", "\n", "y", "=", "y", "[", ":", ",", "0", ",", ":", ",", ":", "]", "if", "bw", "else", "np", ".", "moveaxis", "(", "y", ",", "1", ",", "-", "1", ")", "\n", "r", ",", "c", "=", "2", ",", "x", ".", "shape", "[", "0", "]", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "r", ",", "c", ")", "\n", "for", "j", "in", "range", "(", "c", ")", ":", "\n", "\t\t", "img", "=", "x", "[", "j", ",", ":", ",", ":", "]", "if", "bw", "else", "x", "[", "j", ",", ":", ",", ":", ",", ":", "]", "\n", "img", "=", "np", ".", "clip", "(", "std", "*", "img", "+", "mean", ",", "0", ",", "1", ")", "\n", "axs", "[", "0", ",", "j", "]", ".", "imshow", "(", "img", ",", "cmap", "=", "'gray'", "if", "bw", "else", "None", ")", "\n", "axs", "[", "0", ",", "j", "]", ".", "axis", "(", "'off'", ")", "\n", "img", "=", "y", "[", "j", ",", ":", ",", ":", "]", "if", "bw", "else", "y", "[", "j", ",", ":", ",", ":", ",", ":", "]", "\n", "img", "=", "np", ".", "clip", "(", "std", "*", "img", "+", "mean", ",", "0", ",", "1", ")", "\n", "axs", "[", "1", ",", "j", "]", ".", "imshow", "(", "img", ",", "cmap", "=", "'gray'", "if", "bw", "else", "None", ")", "\n", "axs", "[", "1", ",", "j", "]", ".", "axis", "(", "'off'", ")", "\n", "", "if", "name", "is", "not", "None", ":", "\n", "\t\t", "fig", ".", "savefig", "(", "name", ",", "bbox_inches", "=", "'tight'", ")", "\n", "", "else", ":", "\n", "\t\t", "plt", ".", "show", "(", ")", "\n", "", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.show_decoded_images": [[187, 207], ["matplotlib.subplots", "range", "zip", "matplotlib.close", "len", "range", "ax.set_title", "fig.savefig", "matplotlib.show", "numpy.moveaxis", "numpy.clip", "axs[].imshow", "axs[].set_xticks", "axs[].set_yticks", "range"], "function", ["None"], ["", "def", "show_decoded_images", "(", "images", ",", "mean", ",", "std", ",", "name", "=", "None", ")", ":", "\n", "\t", "bw", "=", "images", "[", "0", "]", ".", "shape", "[", "1", "]", "==", "1", "\n", "rows", ",", "cols", "=", "images", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "len", "(", "images", ")", "\n", "images", "=", "[", "img", "[", ":", ",", "0", ",", ":", ",", ":", "]", "for", "img", "in", "images", "]", "if", "bw", "else", "[", "np", ".", "moveaxis", "(", "img", ",", "1", ",", "-", "1", ")", "for", "img", "in", "images", "]", "\n", "col_names", "=", "[", "'og'", ",", "'ae'", "]", "+", "[", "'b{}'", ".", "format", "(", "i", "+", "1", ")", "for", "i", "in", "range", "(", "cols", "-", "2", ")", "]", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "rows", ",", "cols", ")", "\n", "for", "r", "in", "range", "(", "rows", ")", ":", "\n", "\t\t", "for", "c", "in", "range", "(", "cols", ")", ":", "\n", "\t\t\t", "img", "=", "images", "[", "c", "]", "[", "r", ",", ":", ",", ":", "]", "if", "bw", "else", "images", "[", "c", "]", "[", "r", ",", ":", ",", ":", ",", ":", "]", "\n", "img", "=", "np", ".", "clip", "(", "std", "*", "img", "+", "mean", ",", "0", ",", "1", ")", "\n", "axs", "[", "r", ",", "c", "]", ".", "imshow", "(", "img", ",", "cmap", "=", "'gray'", "if", "bw", "else", "None", ")", "\n", "axs", "[", "r", ",", "c", "]", ".", "set_xticks", "(", "[", "]", ")", "\n", "axs", "[", "r", ",", "c", "]", ".", "set_yticks", "(", "[", "]", ")", "\n", "", "", "for", "ax", ",", "col_name", "in", "zip", "(", "axs", "[", "0", "]", ",", "col_names", ")", ":", "\n", "\t\t", "ax", ".", "set_title", "(", "col_name", ")", "\n", "", "if", "name", "is", "not", "None", ":", "\n", "\t\t", "fig", ".", "savefig", "(", "name", ",", "bbox_inches", "=", "'tight'", ")", "\n", "", "else", ":", "\n", "\t\t", "plt", ".", "show", "(", ")", "\n", "", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.plot_arrays": [[208, 232], ["matplotlib.figure", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.legend", "matplotlib.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.savefig", "matplotlib.close", "list", "os.path.join", "list", "matplotlib.plot", "os.path.join", "list", "os.path.join", "range", "str", "range", "list", "str", "range", "str", "range", "str", "str", "str"], "function", ["None"], ["", "def", "plot_arrays", "(", "ratios", ",", "cosines", ",", "forcings", ",", "distances", ",", "nblocks", ",", "epoch", ",", "folder", ")", ":", "\n", "\t", "plt", ".", "figure", "(", "figsize", "=", "(", "7", ",", "7", ")", ")", "# plot cosine loss", "\n", "plt", ".", "plot", "(", "list", "(", "range", "(", "1", ",", "nblocks", "+", "1", ")", ")", ",", "cosines", ")", "\n", "plt", ".", "title", "(", "'cos(F, grad L) after epoch '", "+", "str", "(", "epoch", ")", ")", "\n", "plt", ".", "xlabel", "(", "'block'", ")", "\n", "plt", ".", "ylabel", "(", "'cos( F(h), grad_h L )'", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "'cos_epoch'", "+", "str", "(", "epoch", ")", "+", "'.png'", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "7", ",", "7", ")", ")", "# plot forcing function and W2 movement", "\n", "plt", ".", "plot", "(", "list", "(", "range", "(", "1", ",", "nblocks", "+", "1", ")", ")", ",", "forcings", ",", "'b'", ",", "label", "=", "'F(x)'", ")", "\n", "if", "distances", "is", "not", "None", ":", "\n", "\t\t", "plt", ".", "plot", "(", "list", "(", "range", "(", "1", ",", "nblocks", "+", "1", ")", ")", ",", "distances", ",", "'r'", ",", "label", "=", "'W2 movement'", ")", "\n", "", "plt", ".", "title", "(", "(", "'F and wasserstein distance'", "if", "distances", "is", "not", "None", "else", "'F'", ")", "+", "' after epoch '", "+", "str", "(", "epoch", ")", ")", "\n", "plt", ".", "xlabel", "(", "'block'", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'best'", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "'distance_epoch'", "+", "str", "(", "epoch", ")", "+", "'.png'", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "7", ",", "7", ")", ")", "# plot cosine loss", "\n", "plt", ".", "plot", "(", "list", "(", "range", "(", "1", ",", "nblocks", "+", "1", ")", ")", ",", "ratios", ")", "\n", "plt", ".", "title", "(", "'forcing function to input norm ratio after epoch '", "+", "str", "(", "epoch", ")", ")", "\n", "plt", ".", "xlabel", "(", "'block'", ")", "\n", "plt", ".", "ylabel", "(", "'F(x) / x'", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "'ratio_epoch'", "+", "str", "(", "epoch", ")", "+", "'.png'", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.convexHulls": [[233, 238], ["range", "convex_hulls.append", "scipy.spatial.ConvexHull"], "function", ["None"], ["", "def", "convexHulls", "(", "points", ",", "labels", ")", ":", "\n", "\t", "convex_hulls", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "\t\t", "convex_hulls", ".", "append", "(", "ConvexHull", "(", "points", "[", "labels", "==", "i", ",", ":", "]", ")", ")", "\n", "", "return", "convex_hulls", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.best_ellipses": [[239, 244], ["range", "gaussians.append", "sklearn.mixture.GaussianMixture().fit", "sklearn.mixture.GaussianMixture"], "function", ["None"], ["", "def", "best_ellipses", "(", "points", ",", "labels", ")", ":", "\n", "    ", "gaussians", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "gaussians", ".", "append", "(", "GaussianMixture", "(", "n_components", "=", "1", ",", "covariance_type", "=", "'full'", ")", ".", "fit", "(", "points", "[", "labels", "==", "i", ",", ":", "]", ")", ")", "\n", "", "return", "gaussians", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.Visualization": [[245, 295], ["range", "matplotlib.figure", "matplotlib.set_cmap", "matplotlib.subplots_adjust", "matplotlib.subplot", "matplotlib.scatter", "matplotlib.colorbar", "matplotlib.title", "matplotlib.subplot", "range", "matplotlib.colorbar", "matplotlib.title", "matplotlib.subplot", "range", "matplotlib.close", "points2D_c.append", "numpy.append", "plt.subplot.plot", "enumerate", "matplotlib.title", "utils.Visualization.plot_results"], "function", ["None"], ["", "def", "Visualization", "(", "points2D", ",", "labels", ",", "convex_hulls", ",", "ellipses", ",", "nh", ",", "name", "=", "None", ",", "projname", "=", "'tSNE'", ")", ":", "\n", "    ", "points2D_c", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "points2D_c", ".", "append", "(", "points2D", "[", "labels", "==", "i", ",", ":", "]", ")", "\n", "", "cmap", "=", "cm", ".", "tab10", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "3.841", ",", "7.195", ")", ",", "dpi", "=", "100", ")", "\n", "plt", ".", "set_cmap", "(", "cmap", ")", "\n", "plt", ".", "subplots_adjust", "(", "hspace", "=", "0.4", ")", "\n", "plt", ".", "subplot", "(", "311", ")", "\n", "plt", ".", "scatter", "(", "points2D", "[", ":", ",", "0", "]", ",", "points2D", "[", ":", ",", "1", "]", ",", "c", "=", "labels", ",", "s", "=", "3", ",", "edgecolors", "=", "'none'", ",", "cmap", "=", "cmap", ",", "alpha", "=", "1.0", ")", "# cmap=cm.Vega10cmap= , alpha=0.2)", "\n", "plt", ".", "colorbar", "(", "ticks", "=", "range", "(", "10", ")", ")", "\n", "plt", ".", "title", "(", "\"2D \"", "+", "projname", "+", "\" - NH=\"", "+", "str", "(", "nh", "*", "100.0", ")", ")", "\n", "\n", "vals", "=", "[", "i", "/", "10.0", "for", "i", "in", "range", "(", "10", ")", "]", "\n", "sp2", "=", "plt", ".", "subplot", "(", "312", ")", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "ch", "=", "np", ".", "append", "(", "convex_hulls", "[", "i", "]", ".", "vertices", ",", "convex_hulls", "[", "i", "]", ".", "vertices", "[", "0", "]", ")", "\n", "sp2", ".", "plot", "(", "points2D_c", "[", "i", "]", "[", "ch", ",", "0", "]", ",", "points2D_c", "[", "i", "]", "[", "ch", ",", "1", "]", ",", "'-'", ",", "label", "=", "'$%i$'", "%", "i", ",", "color", "=", "cmap", "(", "vals", "[", "i", "]", ")", ")", "\n", "", "plt", ".", "colorbar", "(", "ticks", "=", "range", "(", "10", ")", ")", "\n", "plt", ".", "title", "(", "projname", "+", "\" Convex Hulls\"", ")", "\n", "\n", "def", "plot_results", "(", "X", ",", "Y_", ",", "means", ",", "covariances", ",", "index", ",", "title", ",", "color", ")", ":", "\n", "        ", "splot", "=", "ax", "\n", "for", "i", ",", "(", "mean", ",", "covar", ")", "in", "enumerate", "(", "zip", "(", "means", ",", "covariances", ")", ")", ":", "\n", "            ", "v", ",", "w", "=", "linalg", ".", "eigh", "(", "covar", ")", "\n", "v", "=", "2.", "*", "np", ".", "sqrt", "(", "2.", ")", "*", "np", ".", "sqrt", "(", "v", ")", "\n", "u", "=", "w", "[", "0", "]", "/", "linalg", ".", "norm", "(", "w", "[", "0", "]", ")", "\n", "\n", "if", "not", "np", ".", "any", "(", "Y_", "==", "i", ")", ":", "\n", "                ", "continue", "\n", "", "plt", ".", "scatter", "(", "X", "[", "Y_", "==", "i", ",", "0", "]", ",", "X", "[", "Y_", "==", "i", ",", "1", "]", ",", ".8", ",", "color", "=", "color", ",", "alpha", "=", "0.2", ")", "\n", "\n", "angle", "=", "np", ".", "arctan", "(", "u", "[", "1", "]", "/", "u", "[", "0", "]", ")", "\n", "angle", "=", "180.", "*", "angle", "/", "np", ".", "pi", "\n", "ell", "=", "mpl", ".", "patches", ".", "Ellipse", "(", "mean", ",", "v", "[", "0", "]", ",", "v", "[", "1", "]", ",", "180.", "+", "angle", ",", "color", "=", "color", ")", "\n", "ell", ".", "set_clip_box", "(", "splot", ".", "bbox", ")", "\n", "ell", ".", "set_alpha", "(", "0.6", ")", "\n", "splot", ".", "add_artist", "(", "ell", ")", "\n", "\n", "", "plt", ".", "title", "(", "title", ")", "\n", "\n", "", "ax", "=", "plt", ".", "subplot", "(", "3", ",", "1", ",", "3", ")", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "plot_results", "(", "points2D", "[", "labels", "==", "i", ",", ":", "]", ",", "ellipses", "[", "i", "]", ".", "predict", "(", "points2D", "[", "labels", "==", "i", ",", ":", "]", ")", ",", "ellipses", "[", "i", "]", ".", "means_", ",", "ellipses", "[", "i", "]", ".", "covariances_", ",", "0", ",", "projname", "+", "\" fitting ellipses\"", ",", "cmap", "(", "vals", "[", "i", "]", ")", ")", "\n", "", "if", "name", "is", "not", "None", ":", "\n", "      ", "plt", ".", "savefig", "(", "name", ",", "bbox_inches", "=", "'tight'", ",", "pi", "=", "100", ")", "\n", "", "else", ":", "\n", "      ", "plt", ".", "show", "(", ")", "\n", "", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.skander-karkar_LAP.None.utils.neighboring_hit": [[296, 315], ["sklearn.neighbors.NearestNeighbors().fit", "NearestNeighbors().fit.kneighbors", "range", "range", "len", "range", "len", "sklearn.neighbors.NearestNeighbors"], "function", ["None"], ["", "def", "neighboring_hit", "(", "points", ",", "labels", ")", ":", "\n", "\t", "k", "=", "6", "\n", "nbrs", "=", "NearestNeighbors", "(", "n_neighbors", "=", "k", "+", "1", ",", "algorithm", "=", "'ball_tree'", ")", ".", "fit", "(", "points", ")", "\n", "distances", ",", "indices", "=", "nbrs", ".", "kneighbors", "(", "points", ")", "\n", "txs", "=", "0.0", "\n", "txsc", "=", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "\n", "nppts", "=", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "points", ")", ")", ":", "\n", "\t\t", "tx", "=", "0.0", "\n", "for", "j", "in", "range", "(", "1", ",", "k", "+", "1", ")", ":", "\n", "\t\t\t", "if", "labels", "[", "indices", "[", "i", ",", "j", "]", "]", "==", "labels", "[", "i", "]", ":", "\n", "\t\t\t\t", "tx", "+=", "1", "\n", "", "", "tx", "/=", "k", "\n", "txsc", "[", "labels", "[", "i", "]", "]", "+=", "tx", "\n", "nppts", "[", "labels", "[", "i", "]", "]", "+=", "1", "\n", "txs", "+=", "tx", "\n", "", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "\t\t", "txsc", "[", "i", "]", "/=", "nppts", "[", "i", "]", "\n", "", "return", "txs", "/", "len", "(", "points", ")", "\n", "\n"]]}