{"home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.DeepMTS": [[19, 36], ["keras.layers.Input", "keras.layers.Input", "keras.layers.Input", "networks.Seg_net", "networks.DenseNet", "networks.classifier", "keras.models.Model"], "function", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.Seg_net", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.DenseNet", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.classifier"], ["def", "DeepMTS", "(", "vol_size", ",", "Clinic_size", ")", ":", "\n", "\n", "# inputs", "\n", "    ", "PET", "=", "Input", "(", "shape", "=", "[", "*", "vol_size", ",", "1", "]", ")", "\n", "CT", "=", "Input", "(", "shape", "=", "[", "*", "vol_size", ",", "1", "]", ")", "\n", "Clinic", "=", "Input", "(", "shape", "=", "[", "Clinic_size", "]", ")", "\n", "\n", "Seg_pred", ",", "x_out1", ",", "x_out2", ",", "x_out3", ",", "x_out4", ",", "x_out5", "=", "Seg_net", "(", "[", "PET", ",", "CT", "]", ")", "\n", "#Seg_pred, x_out1, x_out2, x_out3, x_out4, x_out5 = U_net([PET, CT])", "\n", "\n", "x_out6", ",", "x_out7", ",", "x_out8", "=", "DenseNet", "(", "[", "PET", ",", "CT", ",", "Seg_pred", "]", ")", "\n", "\n", "x_in1", "=", "[", "x_out1", ",", "x_out2", ",", "x_out3", ",", "x_out4", ",", "x_out5", "]", "\n", "x_in2", "=", "[", "x_out6", ",", "x_out7", ",", "x_out8", "]", "\n", "Survival_pred", "=", "classifier", "(", "x_in1", ",", "x_in2", ",", "Clinic", ",", "L2_reg", "=", "0.1", ",", "num_node", "=", "64", ")", "\n", "\n", "return", "Model", "(", "inputs", "=", "[", "PET", ",", "CT", ",", "Clinic", "]", ",", "outputs", "=", "[", "Seg_pred", ",", "Survival_pred", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.classifier": [[42, 68], ["range", "keras.layers.concatenate", "range", "keras.layers.concatenate", "keras.layers.concatenate", "len", "keras.layers.concatenate.append", "len", "keras.layers.concatenate.append", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.GlobalAveragePooling3D", "keras.layers.GlobalAveragePooling3D", "tensorflow.keras.regularizers.l2", "tensorflow.keras.regularizers.l2", "tensorflow.keras.regularizers.l2"], "function", ["None"], ["", "def", "classifier", "(", "x_in1", ",", "x_in2", ",", "Clinic", ",", "L2_reg", ",", "num_node", ",", "droprate", "=", "0.5", ")", ":", "\n", "\n", "    ", "x_concat1", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "x_in1", ")", ")", ":", "\n", "        ", "x", "=", "GlobalAveragePooling3D", "(", ")", "(", "x_in1", "[", "i", "]", ")", "\n", "x_concat1", ".", "append", "(", "x", ")", "\n", "", "x_concat1", "=", "concatenate", "(", "x_concat1", ")", "\n", "\n", "x_concat2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "x_in2", ")", ")", ":", "\n", "        ", "x", "=", "GlobalAveragePooling3D", "(", ")", "(", "x_in2", "[", "i", "]", ")", "\n", "x_concat2", ".", "append", "(", "x", ")", "\n", "", "x_concat2", "=", "concatenate", "(", "x_concat2", ")", "\n", "\n", "x_1", "=", "Dropout", "(", "droprate", ")", "(", "x_concat1", ")", "\n", "x_1", "=", "Dense", "(", "num_node", ",", "activation", "=", "\"relu\"", ",", "kernel_regularizer", "=", "regularizers", ".", "l2", "(", "L2_reg", ")", ")", "(", "x_1", ")", "\n", "\n", "x_2", "=", "Dropout", "(", "droprate", ")", "(", "x_concat2", ")", "\n", "x_2", "=", "Dense", "(", "num_node", ",", "activation", "=", "\"relu\"", ",", "kernel_regularizer", "=", "regularizers", ".", "l2", "(", "L2_reg", ")", ")", "(", "x_2", ")", "\n", "\n", "x", "=", "concatenate", "(", "[", "x_1", ",", "x_2", ",", "Clinic", "]", ")", "\n", "\n", "x", "=", "Dropout", "(", "droprate", ")", "(", "x", ")", "\n", "Survival_pred", "=", "Dense", "(", "1", ",", "activation", "=", "\"linear\"", ",", "name", "=", "\"Survival\"", ",", "kernel_regularizer", "=", "regularizers", ".", "l2", "(", "L2_reg", ")", ")", "(", "x", ")", "\n", "\n", "return", "Survival_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.DenseNet": [[72, 112], ["keras.layers.concatenate", "networks.dense_block", "networks.dense_block", "networks.dense_block", "keras.layers.Conv3D", "keras.layers.Dropout", "keras.layers.MaxPooling3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.Dropout", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.AveragePooling3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.Dropout", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.AveragePooling3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.Dropout", "keras.layers.BatchNormalization", "keras.layers.Activation"], "function", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.dense_block", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.dense_block", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.dense_block"], ["", "def", "DenseNet", "(", "x_in", ",", "droprate", "=", "0.05", ")", ":", "\n", "\n", "    ", "x_in", "=", "concatenate", "(", "x_in", ")", "\n", "\n", "x", "=", "Conv3D", "(", "24", ",", "(", "3", ",", "3", ",", "3", ")", ",", "strides", "=", "(", "2", ",", "2", ",", "2", ")", ",", "kernel_initializer", "=", "\"he_uniform\"", ",", "name", "=", "\"initial_conv3D\"", ")", "(", "x_in", ")", "\n", "x", "=", "Dropout", "(", "droprate", ")", "(", "x", ")", "\n", "x", "=", "MaxPooling3D", "(", "(", "3", ",", "3", ",", "3", ")", ",", "strides", "=", "(", "2", ",", "2", ",", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "dense_block", "(", "x", ",", "4", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "Conv3D", "(", "16", ",", "(", "1", ",", "1", ",", "1", ")", ",", "kernel_initializer", "=", "\"he_uniform\"", ",", "padding", "=", "\"same\"", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "droprate", ")", "(", "x", ")", "\n", "\n", "x_out1", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x_out1", "=", "Activation", "(", "\"relu\"", ")", "(", "x_out1", ")", "\n", "\n", "x", "=", "AveragePooling3D", "(", "(", "2", ",", "2", ",", "2", ")", ",", "strides", "=", "(", "2", ",", "2", ",", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "dense_block", "(", "x", ",", "8", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "Conv3D", "(", "32", ",", "(", "1", ",", "1", ",", "1", ")", ",", "kernel_initializer", "=", "\"he_uniform\"", ",", "padding", "=", "\"same\"", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "droprate", ")", "(", "x", ")", "\n", "\n", "x_out2", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x_out2", "=", "Activation", "(", "\"relu\"", ")", "(", "x_out2", ")", "\n", "\n", "x", "=", "AveragePooling3D", "(", "(", "2", ",", "2", ",", "2", ")", ",", "strides", "=", "(", "2", ",", "2", ",", "2", ")", ")", "(", "x", ")", "\n", "\n", "x", "=", "dense_block", "(", "x", ",", "16", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "Conv3D", "(", "64", ",", "(", "1", ",", "1", ",", "1", ")", ",", "kernel_initializer", "=", "\"he_uniform\"", ",", "padding", "=", "\"same\"", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "droprate", ")", "(", "x", ")", "\n", "\n", "x_out3", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x_out3", "=", "Activation", "(", "\"relu\"", ")", "(", "x_out3", ")", "\n", "\n", "return", "x_out1", ",", "x_out2", ",", "x_out3", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.dense_block": [[114, 122], ["range", "networks.dense_factor", "keras.layers.concatenate"], "function", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.dense_factor"], ["", "def", "dense_block", "(", "inputs", ",", "numlayers", ")", ":", "\n", "\n", "    ", "concatenated_inputs", "=", "inputs", "\n", "for", "i", "in", "range", "(", "numlayers", ")", ":", "\n", "        ", "x", "=", "dense_factor", "(", "concatenated_inputs", ")", "\n", "concatenated_inputs", "=", "concatenate", "(", "[", "concatenated_inputs", ",", "x", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "", "return", "concatenated_inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.dense_factor": [[124, 137], ["keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.Dropout", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.Dropout"], "function", ["None"], ["", "def", "dense_factor", "(", "inputs", ",", "kernel_num1", "=", "64", ",", "kernel_num2", "=", "16", ",", "droprate", "=", "0.05", ")", ":", "\n", "\n", "    ", "x", "=", "BatchNormalization", "(", ")", "(", "inputs", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "Conv3D", "(", "kernel_num1", ",", "(", "1", ",", "1", ",", "1", ")", ",", "kernel_initializer", "=", "'he_uniform'", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Dropout", "(", "droprate", ")", "(", "x", ")", "\n", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "Conv3D", "(", "kernel_num2", ",", "(", "3", ",", "3", ",", "3", ")", ",", "kernel_initializer", "=", "'he_uniform'", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "outputs", "=", "Dropout", "(", "droprate", ")", "(", "x", ")", "\n", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.Seg_net": [[140, 365], ["keras.layers.concatenate", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.concatenate", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.concatenate", "keras.layers.add", "keras.layers.add", "keras.layers.add", "keras.layers.concatenate", "keras.layers.add", "keras.layers.add", "keras.layers.concatenate", "keras.layers.add", "keras.layers.add", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPooling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPooling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPooling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPooling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.UpSampling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.UpSampling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.UpSampling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.UpSampling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.Activation", "keras.layers.Lambda", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation"], "function", ["None"], ["", "def", "Seg_net", "(", "x_in", ")", ":", "\n", "\n", "    ", "x_in", "=", "concatenate", "(", "x_in", ")", "\n", "\n", "res_1", "=", "Conv3D", "(", "8", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "res_1", "=", "BatchNormalization", "(", ")", "(", "res_1", ")", "\n", "res_1", "=", "Activation", "(", "\"relu\"", ")", "(", "res_1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "8", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_2", "=", "add", "(", "[", "x", ",", "res_1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "8", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_2", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x_1", "=", "add", "(", "[", "x", ",", "res_2", "]", ")", "\n", "\n", "\n", "# downsampling 1", "\n", "x_in", "=", "MaxPooling3D", "(", ")", "(", "x_1", ")", "\n", "\n", "res_1", "=", "Conv3D", "(", "16", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "res_1", "=", "BatchNormalization", "(", ")", "(", "res_1", ")", "\n", "res_1", "=", "Activation", "(", "\"relu\"", ")", "(", "res_1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "16", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_2", "=", "add", "(", "[", "x", ",", "res_1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "16", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_2", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x_2", "=", "add", "(", "[", "x", ",", "res_2", "]", ")", "\n", "\n", "\n", "# downsampling 2", "\n", "x_in", "=", "MaxPooling3D", "(", ")", "(", "x_2", ")", "\n", "\n", "res_1", "=", "Conv3D", "(", "32", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "res_1", "=", "BatchNormalization", "(", ")", "(", "res_1", ")", "\n", "res_1", "=", "Activation", "(", "\"relu\"", ")", "(", "res_1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_2", "=", "add", "(", "[", "x", ",", "res_1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_2", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_3", "=", "add", "(", "[", "x", ",", "res_2", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_3", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x_3", "=", "add", "(", "[", "x", ",", "res_3", "]", ")", "\n", "\n", "\n", "# downsampling 3", "\n", "x_in", "=", "MaxPooling3D", "(", ")", "(", "x_3", ")", "\n", "\n", "res_1", "=", "Conv3D", "(", "64", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "res_1", "=", "BatchNormalization", "(", ")", "(", "res_1", ")", "\n", "res_1", "=", "Activation", "(", "\"relu\"", ")", "(", "res_1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_2", "=", "add", "(", "[", "x", ",", "res_1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_2", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_3", "=", "add", "(", "[", "x", ",", "res_2", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_3", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x_4", "=", "add", "(", "[", "x", ",", "res_3", "]", ")", "\n", "\n", "\n", "# downsamping 4", "\n", "x_in", "=", "MaxPooling3D", "(", ")", "(", "x_4", ")", "\n", "\n", "res_1", "=", "Conv3D", "(", "128", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "res_1", "=", "BatchNormalization", "(", ")", "(", "res_1", ")", "\n", "res_1", "=", "Activation", "(", "\"relu\"", ")", "(", "res_1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "128", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_2", "=", "add", "(", "[", "x", ",", "res_1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "128", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_2", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_3", "=", "add", "(", "[", "x", ",", "res_2", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "128", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_3", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_4", "=", "add", "(", "[", "x", ",", "res_3", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "128", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_4", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x_5", "=", "add", "(", "[", "x", ",", "res_4", "]", ")", "\n", "\n", "\n", "# upsampling 1", "\n", "x", "=", "UpSampling3D", "(", ")", "(", "x_5", ")", "\n", "x_in", "=", "concatenate", "(", "[", "x", ",", "x_4", "]", ")", "\n", "\n", "res_1", "=", "Conv3D", "(", "64", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "res_1", "=", "BatchNormalization", "(", ")", "(", "res_1", ")", "\n", "res_1", "=", "Activation", "(", "\"relu\"", ")", "(", "res_1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_2", "=", "add", "(", "[", "x", ",", "res_1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_2", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_3", "=", "add", "(", "[", "x", ",", "res_2", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_3", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "add", "(", "[", "x", ",", "res_3", "]", ")", "\n", "\n", "\n", "# upsampling 2", "\n", "x", "=", "UpSampling3D", "(", ")", "(", "x", ")", "\n", "x_in", "=", "concatenate", "(", "[", "x", ",", "x_3", "]", ")", "\n", "\n", "res_1", "=", "Conv3D", "(", "32", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "res_1", "=", "BatchNormalization", "(", ")", "(", "res_1", ")", "\n", "res_1", "=", "Activation", "(", "\"relu\"", ")", "(", "res_1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_2", "=", "add", "(", "[", "x", ",", "res_1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_2", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_3", "=", "add", "(", "[", "x", ",", "res_2", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_3", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "add", "(", "[", "x", ",", "res_3", "]", ")", "\n", "\n", "\n", "# upsampling 3", "\n", "x", "=", "UpSampling3D", "(", ")", "(", "x", ")", "\n", "x_in", "=", "concatenate", "(", "[", "x", ",", "x_2", "]", ")", "\n", "\n", "res_1", "=", "Conv3D", "(", "16", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "res_1", "=", "BatchNormalization", "(", ")", "(", "res_1", ")", "\n", "res_1", "=", "Activation", "(", "\"relu\"", ")", "(", "res_1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "16", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_2", "=", "add", "(", "[", "x", ",", "res_1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "16", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_2", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "add", "(", "[", "x", ",", "res_2", "]", ")", "\n", "\n", "\n", "# upsampling 4", "\n", "x", "=", "UpSampling3D", "(", ")", "(", "x", ")", "\n", "x_in", "=", "concatenate", "(", "[", "x", ",", "x_1", "]", ")", "\n", "\n", "res_1", "=", "Conv3D", "(", "8", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "res_1", "=", "BatchNormalization", "(", ")", "(", "res_1", ")", "\n", "res_1", "=", "Activation", "(", "\"relu\"", ")", "(", "res_1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "8", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "res_2", "=", "add", "(", "[", "x", ",", "res_1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "8", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "res_2", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "x", "=", "add", "(", "[", "x", ",", "res_2", "]", ")", "\n", "\n", "\n", "# Segmentation output", "\n", "x", "=", "Conv3D", "(", "2", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"softmax\"", ")", "(", "x", ")", "\n", "Seg_pred", "=", "Lambda", "(", "lambda", "x", ":", "x", "[", "...", ",", "0", ":", "1", "]", ",", "name", "=", "\"Segmentation\"", ")", "(", "x", ")", "\n", "\n", "\n", "# Radiomics output", "\n", "x_out1", "=", "Conv3D", "(", "4", ",", "1", ",", "kernel_initializer", "=", "\"he_uniform\"", ",", "padding", "=", "\"same\"", ")", "(", "x_1", ")", "\n", "x_out1", "=", "BatchNormalization", "(", ")", "(", "x_out1", ")", "\n", "x_out1", "=", "Activation", "(", "\"relu\"", ")", "(", "x_out1", ")", "\n", "\n", "x_out2", "=", "Conv3D", "(", "8", ",", "1", ",", "kernel_initializer", "=", "\"he_uniform\"", ",", "padding", "=", "\"same\"", ")", "(", "x_2", ")", "\n", "x_out2", "=", "BatchNormalization", "(", ")", "(", "x_out2", ")", "\n", "x_out2", "=", "Activation", "(", "\"relu\"", ")", "(", "x_out2", ")", "\n", "\n", "x_out3", "=", "Conv3D", "(", "16", ",", "1", ",", "kernel_initializer", "=", "\"he_uniform\"", ",", "padding", "=", "\"same\"", ")", "(", "x_3", ")", "\n", "x_out3", "=", "BatchNormalization", "(", ")", "(", "x_out3", ")", "\n", "x_out3", "=", "Activation", "(", "\"relu\"", ")", "(", "x_out3", ")", "\n", "\n", "x_out4", "=", "Conv3D", "(", "32", ",", "1", ",", "kernel_initializer", "=", "\"he_uniform\"", ",", "padding", "=", "\"same\"", ")", "(", "x_4", ")", "\n", "x_out4", "=", "BatchNormalization", "(", ")", "(", "x_out4", ")", "\n", "x_out4", "=", "Activation", "(", "\"relu\"", ")", "(", "x_out4", ")", "\n", "\n", "x_out5", "=", "Conv3D", "(", "64", ",", "1", ",", "kernel_initializer", "=", "\"he_uniform\"", ",", "padding", "=", "\"same\"", ")", "(", "x_5", ")", "\n", "x_out5", "=", "BatchNormalization", "(", ")", "(", "x_out5", ")", "\n", "x_out5", "=", "Activation", "(", "\"relu\"", ")", "(", "x_out5", ")", "\n", "\n", "return", "Seg_pred", ",", "x_out1", ",", "x_out2", ",", "x_out3", ",", "x_out4", ",", "x_out5", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.Unet": [[368, 487], ["keras.layers.concatenate", "keras.layers.concatenate", "keras.layers.concatenate", "keras.layers.concatenate", "keras.layers.concatenate", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPooling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPooling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPooling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.MaxPooling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.UpSampling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.UpSampling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.UpSampling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.UpSampling3D", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.BatchNormalization", "keras.layers.Activation", "keras.layers.Conv3D", "keras.layers.Activation", "keras.layers.Lambda"], "function", ["None"], ["", "def", "Unet", "(", "x_in", ")", ":", "\n", "\n", "    ", "x_in", "=", "concatenate", "(", "x_in", ")", "\n", "\n", "x", "=", "Conv3D", "(", "8", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x_in", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv3D", "(", "8", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x_out1", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "\n", "# downsampling 1", "\n", "x", "=", "MaxPooling3D", "(", ")", "(", "x_out1", ")", "\n", "\n", "x", "=", "Conv3D", "(", "16", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv3D", "(", "16", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x_out2", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "\n", "# downsampling 2", "\n", "x", "=", "MaxPooling3D", "(", ")", "(", "x_out2", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x_out3", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "\n", "# downsampling 3", "\n", "x", "=", "MaxPooling3D", "(", ")", "(", "x_out3", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x_out4", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "\n", "# downsamping 4", "\n", "x", "=", "MaxPooling3D", "(", ")", "(", "x_out4", ")", "\n", "\n", "x", "=", "Conv3D", "(", "128", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv3D", "(", "128", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x_out5", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "\n", "# upsampling 1", "\n", "x", "=", "UpSampling3D", "(", ")", "(", "x_out5", ")", "\n", "x", "=", "concatenate", "(", "[", "x", ",", "x_out4", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv3D", "(", "64", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "\n", "# upsampling 2", "\n", "x", "=", "UpSampling3D", "(", ")", "(", "x", ")", "\n", "x", "=", "concatenate", "(", "[", "x", ",", "x_out3", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv3D", "(", "32", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "\n", "# upsampling 3", "\n", "x", "=", "UpSampling3D", "(", ")", "(", "x", ")", "\n", "x", "=", "concatenate", "(", "[", "x", ",", "x_out2", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "16", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv3D", "(", "16", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "\n", "# upsampling 4", "\n", "x", "=", "UpSampling3D", "(", ")", "(", "x", ")", "\n", "x", "=", "concatenate", "(", "[", "x", ",", "x_out1", "]", ")", "\n", "\n", "x", "=", "Conv3D", "(", "8", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv3D", "(", "8", ",", "3", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"relu\"", ")", "(", "x", ")", "\n", "\n", "\n", "# Segmentation outpur", "\n", "x", "=", "Conv3D", "(", "2", ",", "1", ",", "strides", "=", "1", ",", "padding", "=", "\"same\"", ",", "kernel_initializer", "=", "\"he_uniform\"", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "\"softmax\"", ")", "(", "x", ")", "\n", "Seg_pred", "=", "Lambda", "(", "lambda", "x", ":", "x", "[", "...", ",", "0", ":", "1", "]", ",", "name", "=", "\"Segmentation\"", ")", "(", "x", ")", "\n", "\n", "return", "Seg_pred", ",", "x_out1", ",", "x_out2", ",", "x_out3", ",", "x_out4", ",", "x_out5", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.metrics.Dice": [[7, 21], ["list", "tensorflow.cast", "tensorflow.maximum", "tensorflow.reduce_mean", "len", "range", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tf.cast.get_shape().as_list", "tf.cast.get_shape"], "function", ["None"], ["def", "Dice", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "\"\"\"\n    Dice score for binary segmentation\n    \"\"\"", "\n", "\n", "ndims", "=", "len", "(", "y_pred", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", "-", "2", "\n", "vol_axes", "=", "list", "(", "range", "(", "1", ",", "ndims", "+", "1", ")", ")", "\n", "\n", "y_pred", "=", "tf", ".", "cast", "(", "y_pred", ">", "0.5", ",", "y_pred", ".", "dtype", ")", "\n", "top", "=", "2", "*", "tf", ".", "reduce_sum", "(", "y_true", "*", "y_pred", ",", "vol_axes", ")", "\n", "bottom", "=", "tf", ".", "maximum", "(", "tf", ".", "reduce_sum", "(", "y_true", "+", "y_pred", ",", "vol_axes", ")", ",", "1e-5", ")", "\n", "\n", "dice", "=", "tf", ".", "reduce_mean", "(", "top", "/", "bottom", ")", "\n", "return", "dice", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.metrics.Cindex": [[23, 48], ["tensorflow.cast", "tensorflow.subtract", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.cast", "tensorflow.cast", "tensorflow.matrix_band_part", "tensorflow.matrix_band_part", "tensorflow.multiply", "tensorflow.cast", "tensorflow.transpose"], "function", ["None"], ["", "def", "Cindex", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "'''\n    C-index score for risk prediction.\n    y_pred is the predicted risk from trained model.\n    y_true is event indicator, event=0 means censored\n    Survival time is not requied as input\n    Samples should be sorted with increasing survial time \n    '''", "\n", "\n", "risk", "=", "y_pred", "\n", "event", "=", "tf", ".", "cast", "(", "y_true", ",", "risk", ".", "dtype", ")", "\n", "\n", "g", "=", "tf", ".", "subtract", "(", "risk", ",", "risk", "[", ":", ",", "0", "]", ")", "\n", "g", "=", "tf", ".", "cast", "(", "g", "==", "0.0", ",", "risk", ".", "dtype", ")", "*", "0.5", "+", "tf", ".", "cast", "(", "g", ">", "0.0", ",", "risk", ".", "dtype", ")", "\n", "\n", "\n", "f", "=", "tf", ".", "matmul", "(", "event", ",", "tf", ".", "cast", "(", "tf", ".", "transpose", "(", "event", ")", ">", "-", "1", ",", "risk", ".", "dtype", ")", ")", "\n", "f", "=", "tf", ".", "matrix_band_part", "(", "f", ",", "0", ",", "-", "1", ")", "-", "tf", ".", "matrix_band_part", "(", "f", ",", "0", ",", "0", ")", "\n", "\n", "top", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "g", ",", "f", ")", ")", "\n", "bottom", "=", "tf", ".", "reduce_sum", "(", "f", ")", "\n", "\n", "cindex", "=", "top", "/", "bottom", "\n", "\n", "return", "cindex", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.train.ParallelModelCheckpoint.__init__": [[39, 44], ["keras.callbacks.ModelCheckpoint.__init__"], "methods", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.train.ParallelModelCheckpoint.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "filepath", ",", "monitor", "=", "'val_loss'", ",", "verbose", "=", "0", ",", "\n", "save_best_only", "=", "False", ",", "save_weights_only", "=", "False", ",", "\n", "mode", "=", "'auto'", ",", "period", "=", "1", ")", ":", "\n", "        ", "self", ".", "single_model", "=", "model", "\n", "super", "(", "ParallelModelCheckpoint", ",", "self", ")", ".", "__init__", "(", "filepath", ",", "monitor", ",", "verbose", ",", "save_best_only", ",", "save_weights_only", ",", "mode", ",", "period", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.train.ParallelModelCheckpoint.set_model": [[45, 47], ["super().set_model"], "methods", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.train.ParallelModelCheckpoint.set_model"], ["", "def", "set_model", "(", "self", ",", "model", ")", ":", "\n", "        ", "super", "(", "ParallelModelCheckpoint", ",", "self", ")", ".", "set_model", "(", "self", ".", "single_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.train.lr_scheduler": [[24, 36], ["print"], "function", ["None"], ["def", "lr_scheduler", "(", "epoch", ")", ":", "\n", "\n", "    ", "if", "epoch", "<", "50", ":", "\n", "        ", "lr", "=", "1e-4", "\n", "", "elif", "epoch", "<", "100", ":", "\n", "        ", "lr", "=", "5e-5", "\n", "", "elif", "epoch", "<", "200", ":", "\n", "        ", "lr", "=", "1e-5", "\n", "", "else", ":", "\n", "        ", "lr", "=", "1e-6", "\n", "", "print", "(", "'lr: %f'", "%", "lr", ")", "\n", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.train.train": [[49, 162], ["glob.glob", "random.shuffle", "glob.glob", "random.shuffle", "tensorflow.ConfigProto", "keras.backend.tensorflow_backend.set_session", "datagenerators.example_gen", "datagenerators.gen_train", "datagenerators.example_gen", "datagenerators.gen_valid", "os.path.join", "os.path.join", "keras.callbacks.CSVLogger", "keras.callbacks.EarlyStopping", "keras.callbacks.LearningRateScheduler", "os.path.join", "len", "os.path.join", "len", "os.path.isdir", "os.mkdir", "tensorflow.Session", "tensorflow.device", "networks.DeepMTS", "keras.utils.multi_gpu_model", "train.ParallelModelCheckpoint", "keras.callbacks.ModelCheckpoint", "keras.utils.multi_gpu_model.compile", "keras.utils.multi_gpu_model.fit_generator", "networks.DeepMTS.compile", "networks.DeepMTS.fit_generator", "print", "networks.DeepMTS.load_weights", "keras.optimizers.Adam", "keras.optimizers.Adam"], "function", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.example_gen", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.gen_train", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.example_gen", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.gen_valid", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.DeepMTS"], ["", "", "def", "train", "(", "train_dir", ",", "\n", "valid_dir", ",", "\n", "model_dir", ",", "\n", "device", ",", "\n", "lr", ",", "\n", "nb_epochs", ",", "\n", "steps_per_epoch", ",", "\n", "validation_steps", ",", "\n", "batch_size", ",", "\n", "validation_size", ",", "\n", "load_model_file", ",", "\n", "initial_epoch", ")", ":", "\n", "\n", "\n", "# image size", "\n", "    ", "vol_size", "=", "[", "128", ",", "128", ",", "112", "]", "\n", "# Clinical feature size", "\n", "Clinic_size", "=", "1", "\n", "\n", "\n", "# prepare data files", "\n", "train_vol_names", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "train_dir", ",", "'*.npz'", ")", ")", "\n", "assert", "len", "(", "train_vol_names", ")", ">", "0", ",", "\"Could not find any training data\"", "\n", "random", ".", "shuffle", "(", "train_vol_names", ")", "# shuffle volume list", "\n", "\n", "valid_vol_names", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "valid_dir", ",", "'*.npz'", ")", ")", "\n", "assert", "len", "(", "valid_vol_names", ")", ">", "0", ",", "\"Could not find any validation data\"", "\n", "random", ".", "shuffle", "(", "valid_vol_names", ")", "# shuffle volume list", "\n", "\n", "\n", "# prepare model folder", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "model_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "model_dir", ")", "\n", "\n", "\n", "# device handling", "\n", "", "if", "device", "==", "'gpu0'", ":", "\n", "        ", "device", "=", "'/gpu:0'", "\n", "", "if", "device", "==", "'gpu1'", ":", "\n", "        ", "device", "=", "'/gpu:1'", "\n", "", "if", "device", "==", "'multi-gpu'", ":", "\n", "        ", "device", "=", "'/cpu:0'", "\n", "", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "config", ".", "allow_soft_placement", "=", "True", "\n", "set_session", "(", "tf", ".", "Session", "(", "config", "=", "config", ")", ")", "\n", "\n", "\n", "# prepare the model", "\n", "with", "tf", ".", "device", "(", "device", ")", ":", "\n", "        ", "model", "=", "networks", ".", "DeepMTS", "(", "vol_size", ",", "Clinic_size", ")", "\n", "\n", "# load initial weights", "\n", "if", "load_model_file", "!=", "'./'", ":", "\n", "            ", "print", "(", "'loading'", ",", "load_model_file", ")", "\n", "model", ".", "load_weights", "(", "load_model_file", ",", "by_name", "=", "True", ")", "\n", "\n", "# Multiple GPUs used       ", "\n", "", "", "if", "device", "==", "'/cpu:0'", ":", "\n", "        ", "Parallelmodel", "=", "multi_gpu_model", "(", "model", ",", "gpus", "=", "2", ")", "\n", "\n", "\n", "# data generator", "\n", "", "train_example_gen", "=", "datagenerators", ".", "example_gen", "(", "train_vol_names", ",", "batch_size", "=", "batch_size", ",", "balance_class", "=", "True", ")", "\n", "data_gen_train", "=", "datagenerators", ".", "gen_train", "(", "train_example_gen", ",", "Sort", "=", "True", ")", "\n", "\n", "valid_example_gen", "=", "datagenerators", ".", "example_gen", "(", "valid_vol_names", ",", "batch_size", "=", "validation_size", ",", "balance_class", "=", "False", ")", "\n", "data_gen_valid", "=", "datagenerators", ".", "gen_valid", "(", "valid_example_gen", ",", "Sort", "=", "True", ")", "\n", "\n", "\n", "# callback settings", "\n", "save_file_name", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'{epoch:02d}-{val_Survival_Cindex:.3f}-{val_Segmentation_Dice:.3f}.h5'", ")", "\n", "if", "device", "==", "'/cpu:0'", ":", "# Multiple GPUs used   ", "\n", "        ", "save_callback", "=", "ParallelModelCheckpoint", "(", "model", ",", "save_file_name", ",", "save_best_only", "=", "False", ",", "save_weights_only", "=", "True", ",", "monitor", "=", "'val_Survival_Cindex'", ",", "mode", "=", "'max'", ")", "\n", "", "else", ":", "\n", "        ", "save_callback", "=", "ModelCheckpoint", "(", "save_file_name", ",", "save_best_only", "=", "False", ",", "save_weights_only", "=", "True", ",", "monitor", "=", "'val_Survival_Cindex'", ",", "mode", "=", "'max'", ")", "\n", "\n", "", "save_log_name", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'log.csv'", ")", "\n", "csv_logger", "=", "CSVLogger", "(", "save_log_name", ",", "append", "=", "True", ")", "\n", "\n", "early_stopping", "=", "EarlyStopping", "(", "monitor", "=", "'val_Survival_Cindex'", ",", "patience", "=", "50", ",", "mode", "=", "'max'", ")", "\n", "scheduler", "=", "LearningRateScheduler", "(", "lr_scheduler", ")", "\n", "\n", "\n", "# compile settings and fit", "\n", "if", "device", "==", "'/cpu:0'", ":", "# Multiple GPUs used   ", "\n", "        ", "Parallelmodel", ".", "compile", "(", "optimizer", "=", "Adam", "(", "lr", "=", "lr", ")", ",", "\n", "metrics", "=", "{", "'Segmentation'", ":", "metrics", ".", "Dice", ",", "'Survival'", ":", "metrics", ".", "Cindex", "}", ",", "\n", "loss", "=", "[", "losses", ".", "Dice_loss", ",", "losses", ".", "Cox_loss", "]", ",", "\n", "loss_weights", "=", "[", "1.0", ",", "1.0", "]", ")", "\n", "\n", "Parallelmodel", ".", "fit_generator", "(", "data_gen_train", ",", "\n", "validation_data", "=", "data_gen_valid", ",", "\n", "validation_steps", "=", "validation_steps", ",", "\n", "initial_epoch", "=", "initial_epoch", ",", "\n", "epochs", "=", "nb_epochs", ",", "\n", "callbacks", "=", "[", "save_callback", ",", "csv_logger", ",", "early_stopping", ",", "scheduler", "]", ",", "\n", "steps_per_epoch", "=", "steps_per_epoch", ",", "\n", "verbose", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "model", ".", "compile", "(", "optimizer", "=", "Adam", "(", "lr", "=", "lr", ")", ",", "\n", "metrics", "=", "{", "'Segmentation'", ":", "metrics", ".", "Dice", ",", "'Survival'", ":", "metrics", ".", "Cindex", "}", ",", "\n", "loss", "=", "[", "losses", ".", "Dice_loss", ",", "losses", ".", "Cox_loss", "]", ",", "\n", "loss_weights", "=", "[", "1.0", ",", "1.0", "]", ")", "\n", "\n", "model", ".", "fit_generator", "(", "data_gen_train", ",", "\n", "validation_data", "=", "data_gen_valid", ",", "\n", "validation_steps", "=", "validation_steps", ",", "\n", "initial_epoch", "=", "initial_epoch", ",", "\n", "epochs", "=", "nb_epochs", ",", "\n", "callbacks", "=", "[", "save_callback", ",", "csv_logger", ",", "early_stopping", ",", "scheduler", "]", ",", "\n", "steps_per_epoch", "=", "steps_per_epoch", ",", "\n", "verbose", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.test.dice": [[21, 40], ["numpy.zeros", "enumerate", "numpy.unique", "numpy.delete", "len", "numpy.maximum", "numpy.concatenate", "numpy.where", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.logical_and", "numpy.finfo"], "function", ["None"], ["def", "dice", "(", "vol1", ",", "vol2", ",", "labels", "=", "None", ",", "nargout", "=", "1", ")", ":", "\n", "\n", "    ", "if", "labels", "is", "None", ":", "\n", "        ", "labels", "=", "np", ".", "unique", "(", "np", ".", "concatenate", "(", "(", "vol1", ",", "vol2", ")", ")", ")", "\n", "labels", "=", "np", ".", "delete", "(", "labels", ",", "np", ".", "where", "(", "labels", "==", "0", ")", ")", "# remove background", "\n", "\n", "", "dicem", "=", "np", ".", "zeros", "(", "len", "(", "labels", ")", ")", "\n", "for", "idx", ",", "lab", "in", "enumerate", "(", "labels", ")", ":", "\n", "        ", "vol1l", "=", "vol1", "==", "lab", "\n", "vol2l", "=", "vol2", "==", "lab", "\n", "top", "=", "2", "*", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "vol1l", ",", "vol2l", ")", ")", "\n", "bottom", "=", "np", ".", "sum", "(", "vol1l", ")", "+", "np", ".", "sum", "(", "vol2l", ")", "\n", "bottom", "=", "np", ".", "maximum", "(", "bottom", ",", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", "# add epsilon.", "\n", "dicem", "[", "idx", "]", "=", "top", "/", "bottom", "\n", "\n", "", "if", "nargout", "==", "1", ":", "\n", "        ", "return", "dicem", "\n", "", "else", ":", "\n", "        ", "return", "(", "dicem", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.test.test": [[42, 131], ["glob.glob", "glob.glob", "print", "numpy.array", "numpy.array", "lifelines.utils.concordance_index", "lifelines.utils.concordance_index", "print", "os.path.join", "len", "os.path.join", "len", "tensorflow.ConfigProto", "keras.backend.tensorflow_backend.set_session", "tensorflow.device", "networks.DeepMTS", "networks.DeepMTS.load_weights", "datagenerators.load_example_by_name", "np.array.append", "cv2.threshold", "test.dice", "Dice_train_result.append", "Survival_train_result.append", "datagenerators.load_example_by_name", "np.array.append", "cv2.threshold", "test.dice", "Dice_test_result.append", "Survival_test_result.append", "tensorflow.Session", "tensorflow.device", "networks.DeepMTS.predict", "tensorflow.device", "networks.DeepMTS.predict", "numpy.mean", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.networks.DeepMTS", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_example_by_name", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.test.dice", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_example_by_name", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.test.dice"], ["", "", "def", "test", "(", "train_dir", ",", "\n", "test_dir", ",", "\n", "device", ",", "\n", "load_model_file", "\n", ")", ":", "\n", "\n", "# prepare data files", "\n", "    ", "train_vol_names", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "train_dir", ",", "'*.npz'", ")", ")", "\n", "assert", "len", "(", "train_vol_names", ")", ">", "0", ",", "\"Could not find any training data\"", "\n", "test_vol_names", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "test_dir", ",", "'*.npz'", ")", ")", "\n", "assert", "len", "(", "test_vol_names", ")", ">", "0", ",", "\"Could not find any testing data\"", "\n", "\n", "\n", "# image size", "\n", "vol_size", "=", "[", "128", ",", "128", ",", "112", "]", "\n", "# Clinical feature size", "\n", "Clinic_size", "=", "1", "\n", "\n", "\n", "# device handling", "\n", "if", "'gpu'", "in", "device", ":", "\n", "        ", "if", "'0'", "in", "device", ":", "\n", "            ", "device", "=", "'/gpu:0'", "\n", "", "if", "'1'", "in", "device", ":", "\n", "            ", "device", "=", "'/gpu:1'", "\n", "", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "config", ".", "allow_soft_placement", "=", "True", "\n", "set_session", "(", "tf", ".", "Session", "(", "config", "=", "config", ")", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "'/cpu:0'", "\n", "\n", "\n", "# load weights of model", "\n", "", "with", "tf", ".", "device", "(", "device", ")", ":", "\n", "        ", "net", "=", "networks", ".", "DeepMTS", "(", "vol_size", ",", "Clinic_size", ")", "\n", "net", ".", "load_weights", "(", "load_model_file", ")", "\n", "\n", "\n", "# evaluate on training set", "\n", "", "Dice_train_result", "=", "[", "]", "\n", "Survival_train_result", "=", "[", "]", "\n", "Survival_train_label", "=", "[", "]", "\n", "for", "train_image", "in", "train_vol_names", ":", "\n", "\n", "# load subject", "\n", "        ", "PT", ",", "CT", ",", "Seg", ",", "Label", ",", "Clinic", "=", "datagenerators", ".", "load_example_by_name", "(", "train_image", ")", "\n", "Survival_train_label", ".", "append", "(", "Label", ")", "\n", "\n", "with", "tf", ".", "device", "(", "device", ")", ":", "\n", "            ", "pred", "=", "net", ".", "predict", "(", "[", "PT", ",", "CT", ",", "Clinic", "]", ")", "\n", "Seg_pred", "=", "pred", "[", "0", "]", "[", "0", ",", "...", ",", "0", "]", "\n", "Survival_pred", "=", "pred", "[", "1", "]", "[", "0", ",", "0", "]", "\n", "\n", "", "_", ",", "Seg_pred", "=", "cv2", ".", "threshold", "(", "Seg_pred", ",", "0.5", ",", "1", ",", "cv2", ".", "THRESH_BINARY", ")", "\n", "Dice_vals", "=", "dice", "(", "Seg_pred", ",", "Seg", ",", "labels", "=", "[", "1", "]", ")", "\n", "Dice_train_result", ".", "append", "(", "Dice_vals", ")", "\n", "Survival_train_result", ".", "append", "(", "Survival_pred", ")", "\n", "\n", "\n", "# evaluate on testing set     ", "\n", "", "Dice_test_result", "=", "[", "]", "\n", "Survival_test_result", "=", "[", "]", "\n", "Survival_test_label", "=", "[", "]", "\n", "for", "test_image", "in", "test_vol_names", ":", "\n", "\n", "# load subject", "\n", "        ", "PT", ",", "CT", ",", "Seg", ",", "Label", ",", "Clinic", "=", "datagenerators", ".", "load_example_by_name", "(", "test_image", ")", "\n", "Survival_test_label", ".", "append", "(", "Label", ")", "\n", "\n", "with", "tf", ".", "device", "(", "device", ")", ":", "\n", "            ", "pred", "=", "net", ".", "predict", "(", "[", "PT", ",", "CT", ",", "Clinic", "]", ")", "\n", "Seg_pred", "=", "pred", "[", "0", "]", "[", "0", ",", "...", ",", "0", "]", "\n", "Survival_pred", "=", "pred", "[", "1", "]", "[", "0", ",", "0", "]", "\n", "\n", "", "_", ",", "Seg_pred", "=", "cv2", ".", "threshold", "(", "Seg_pred", ",", "0.5", ",", "1", ",", "cv2", ".", "THRESH_BINARY", ")", "\n", "Dice_vals", "=", "dice", "(", "Seg_pred", ",", "Seg", ",", "labels", "=", "[", "1", "]", ")", "\n", "Dice_test_result", ".", "append", "(", "Dice_vals", ")", "\n", "Survival_test_result", ".", "append", "(", "Survival_pred", ")", "\n", "\n", "\n", "# calculat the mean results", "\n", "", "print", "(", "'Dice: {:.3f} ({:.3f})'", ".", "format", "(", "np", ".", "mean", "(", "Dice_train_result", ")", ",", "np", ".", "mean", "(", "Dice_test_result", ")", ")", ")", "\n", "\n", "Survival_train_label", "=", "np", ".", "array", "(", "Survival_train_label", ")", "\n", "Survival_test_label", "=", "np", ".", "array", "(", "Survival_test_label", ")", "\n", "train_cindex", "=", "concordance_index", "(", "Survival_train_label", "[", ":", ",", "0", "]", ",", "-", "Survival_train_result", ",", "Survival_train_label", "[", ":", ",", "1", "]", ")", "\n", "test_cindex", "=", "concordance_index", "(", "Survival_test_label", "[", ":", ",", "0", "]", ",", "-", "Survival_test_result", ",", "Survival_test_label", "[", ":", ",", "1", "]", ")", "\n", "print", "(", "'C-index: {:.3f} ({:.3f})'", ".", "format", "(", "train_cindex", ",", "test_cindex", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.losses.Dice_loss": [[7, 19], ["list", "tensorflow.maximum", "tensorflow.reduce_mean", "len", "range", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "y_pred.get_shape().as_list", "y_pred.get_shape"], "function", ["None"], ["def", "Dice_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "\"\"\"\n    N-D dice for binary segmentation\n    \"\"\"", "\n", "\n", "ndims", "=", "len", "(", "y_pred", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", "-", "2", "\n", "vol_axes", "=", "list", "(", "range", "(", "1", ",", "ndims", "+", "1", ")", ")", "\n", "\n", "top", "=", "2", "*", "tf", ".", "reduce_sum", "(", "y_true", "*", "y_pred", ",", "vol_axes", ")", "\n", "bottom", "=", "tf", ".", "maximum", "(", "tf", ".", "reduce_sum", "(", "y_true", "+", "y_pred", ",", "vol_axes", ")", ",", "1e-5", ")", "\n", "dice", "=", "tf", ".", "reduce_mean", "(", "top", "/", "bottom", ")", "\n", "return", "-", "dice", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.losses.Cox_loss": [[21, 42], ["tensorflow.cast", "tensorflow.exp", "tensorflow.cumsum", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.log", "tensorflow.reduce_sum"], "function", ["None"], ["", "def", "Cox_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "'''\n    Calculate the average Cox negative partial log-likelihood.\n    y_pred is the predicted risk from trained model.\n    y_true is event indicator, event=0 means censored\n    Survival time is not requied as input\n    Samples should be sorted with increasing survial time \n    '''", "\n", "\n", "risk", "=", "y_pred", "\n", "event", "=", "tf", ".", "cast", "(", "y_true", ",", "dtype", "=", "risk", ".", "dtype", ")", "\n", "\n", "risk_exp", "=", "tf", ".", "exp", "(", "risk", ")", "\n", "risk_exp_cumsum", "=", "tf", ".", "cumsum", "(", "risk_exp", ",", "reverse", "=", "True", ")", "\n", "likelihood", "=", "risk", "-", "tf", ".", "log", "(", "risk_exp_cumsum", ")", "\n", "uncensored_likelihood", "=", "tf", ".", "multiply", "(", "likelihood", ",", "event", ")", "\n", "\n", "n_observed", "=", "tf", ".", "reduce_sum", "(", "event", ")", "\n", "cox_loss", "=", "-", "tf", ".", "reduce_sum", "(", "uncensored_likelihood", ")", "/", "n_observed", "\n", "\n", "return", "cox_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.gen_train": [[11, 34], ["next", "datagenerators.Data_augmentation", "datagenerators.Sort_by_time", "datagenerators.Sort_by_time", "datagenerators.Sort_by_time", "datagenerators.Sort_by_time", "datagenerators.Sort_by_time"], "function", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Data_augmentation", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time"], ["def", "gen_train", "(", "gen", ",", "Sort", "=", "True", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "X", "=", "next", "(", "gen", ")", "\n", "PT", "=", "X", "[", "0", "]", "\n", "CT", "=", "X", "[", "1", "]", "\n", "Seg", "=", "X", "[", "2", "]", "\n", "Label", "=", "X", "[", "3", "]", "\n", "Clinic", "=", "X", "[", "4", "]", "\n", "\n", "#data augmentation", "\n", "PT", ",", "CT", ",", "Seg", "=", "Data_augmentation", "(", "PT", ",", "CT", ",", "Seg", ")", "\n", "\n", "# Sort samples by survival time", "\n", "if", "Sort", "==", "True", ":", "\n", "            ", "PT", "=", "Sort_by_time", "(", "PT", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "CT", "=", "Sort_by_time", "(", "CT", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "Seg", "=", "Sort_by_time", "(", "Seg", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "Event", "=", "Sort_by_time", "(", "Label", "[", ":", ",", "1", ":", "]", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "Clinic", "=", "Sort_by_time", "(", "Clinic", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "            ", "Event", "=", "Label", "[", ":", ",", "1", ":", "]", "\n", "\n", "", "yield", "(", "[", "PT", ",", "CT", ",", "Clinic", "]", ",", "[", "Seg", ",", "Event", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.gen_valid": [[36, 56], ["next", "datagenerators.Sort_by_time", "datagenerators.Sort_by_time", "datagenerators.Sort_by_time", "datagenerators.Sort_by_time", "datagenerators.Sort_by_time"], "function", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time"], ["", "", "def", "gen_valid", "(", "gen", ",", "Sort", "=", "True", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "X", "=", "next", "(", "gen", ")", "\n", "PT", "=", "X", "[", "0", "]", "\n", "CT", "=", "X", "[", "1", "]", "\n", "Seg", "=", "X", "[", "2", "]", "\n", "Label", "=", "X", "[", "3", "]", "\n", "Clinic", "=", "X", "[", "4", "]", "\n", "\n", "# Sort samples by survival time", "\n", "if", "Sort", "==", "True", ":", "\n", "            ", "PT", "=", "Sort_by_time", "(", "PT", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "CT", "=", "Sort_by_time", "(", "CT", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "Seg", "=", "Sort_by_time", "(", "Seg", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "Event", "=", "Sort_by_time", "(", "Label", "[", ":", ",", "1", ":", "]", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "Clinic", "=", "Sort_by_time", "(", "Clinic", ",", "Label", "[", ":", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "            ", "Event", "=", "Label", "[", ":", ",", "1", ":", "]", "\n", "\n", "", "yield", "(", "[", "PT", ",", "CT", ",", "Clinic", "]", ",", "[", "Seg", ",", "Event", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.example_gen": [[58, 137], ["range", "range", "range", "range", "range", "numpy.random.randint", "datagenerators.load_volfile", "npz_data.append", "X_data.append", "X_data.append", "return_vals.append", "return_vals.append", "X_data.append", "return_vals.append", "return_vals.append", "numpy.array", "X_data.append", "return_vals.append", "return_vals.append", "X_data.append", "return_vals.append", "return_vals.append", "tuple", "numpy.random.randint", "datagenerators.load_volfile", "len", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "len", "np.random.randint.append", "np.random.randint.append"], "function", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_volfile", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_volfile"], ["", "", "def", "example_gen", "(", "vol_names", ",", "batch_size", "=", "1", ",", "balance_class", "=", "True", ")", ":", "\n", "\n", "    ", "while", "True", ":", "\n", "\n", "        ", "if", "balance_class", "==", "True", ":", "\n", "# manually balance class", "\n", "            ", "idxes", "=", "[", "]", "\n", "num_pos", "=", "num_neg", "=", "0", "\n", "while", "num_pos", "<", "batch_size", "/", "2", "or", "num_neg", "<", "batch_size", "/", "2", ":", "\n", "                ", "idx", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "vol_names", ")", ")", "\n", "idx_Event", "=", "load_volfile", "(", "vol_names", "[", "idx", "]", ",", "np_var", "=", "'Event'", ")", "\n", "if", "idx_Event", "==", "0", "and", "num_neg", "<", "batch_size", "/", "2", ":", "\n", "                    ", "idxes", ".", "append", "(", "idx", ")", "\n", "num_neg", "=", "num_neg", "+", "1", "\n", "", "if", "idx_Event", "==", "1", "and", "num_pos", "<", "batch_size", "/", "2", ":", "\n", "                    ", "idxes", ".", "append", "(", "idx", ")", "\n", "num_pos", "=", "num_pos", "+", "1", "\n", "", "", "", "else", ":", "\n", "            ", "idxes", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "vol_names", ")", ",", "size", "=", "batch_size", ")", "\n", "\n", "# load the selected data", "\n", "", "npz_data", "=", "[", "]", "\n", "for", "idx", "in", "idxes", ":", "\n", "            ", "X", "=", "load_volfile", "(", "vol_names", "[", "idx", "]", ",", "np_var", "=", "'all'", ")", "\n", "npz_data", ".", "append", "(", "X", ")", "\n", "\n", "", "X_data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "X", "=", "npz_data", "[", "i", "]", "[", "'PT'", "]", "\n", "X", "=", "X", "[", "np", ".", "newaxis", ",", "...", ",", "np", ".", "newaxis", "]", "\n", "X_data", ".", "append", "(", "X", ")", "\n", "", "if", "batch_size", ">", "1", ":", "\n", "            ", "return_vals", "=", "[", "np", ".", "concatenate", "(", "X_data", ",", "0", ")", "]", "\n", "", "else", ":", "\n", "            ", "return_vals", "=", "[", "X_data", "[", "0", "]", "]", "\n", "\n", "", "X_data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "X", "=", "npz_data", "[", "i", "]", "[", "'CT'", "]", "\n", "X", "=", "X", "[", "np", ".", "newaxis", ",", "...", ",", "np", ".", "newaxis", "]", "\n", "X_data", ".", "append", "(", "X", ")", "\n", "", "if", "batch_size", ">", "1", ":", "\n", "            ", "return_vals", ".", "append", "(", "np", ".", "concatenate", "(", "X_data", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "return_vals", ".", "append", "(", "X_data", "[", "0", "]", ")", "\n", "\n", "", "X_data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "X", "=", "npz_data", "[", "i", "]", "[", "'Seg'", "]", "\n", "X", "=", "X", "[", "np", ".", "newaxis", ",", "...", ",", "np", ".", "newaxis", "]", "\n", "X_data", ".", "append", "(", "X", ")", "\n", "", "if", "batch_size", ">", "1", ":", "\n", "            ", "return_vals", ".", "append", "(", "np", ".", "concatenate", "(", "X_data", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "return_vals", ".", "append", "(", "X_data", "[", "0", "]", ")", "\n", "\n", "", "X_data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "Time", "=", "npz_data", "[", "i", "]", "[", "'Time'", "]", "\n", "Event", "=", "npz_data", "[", "i", "]", "[", "'Event'", "]", "\n", "X", "=", "np", ".", "array", "(", "[", "Time", ",", "Event", "]", ")", "\n", "X", "=", "X", "[", "np", ".", "newaxis", ",", "...", "]", "\n", "X_data", ".", "append", "(", "X", ")", "\n", "", "if", "batch_size", ">", "1", ":", "\n", "            ", "return_vals", ".", "append", "(", "np", ".", "concatenate", "(", "X_data", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "return_vals", ".", "append", "(", "X_data", "[", "0", "]", ")", "\n", "\n", "", "X_data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "X", "=", "npz_data", "[", "i", "]", "[", "'Clinic'", "]", "\n", "X", "=", "X", "[", "np", ".", "newaxis", ",", "...", "]", "\n", "X_data", ".", "append", "(", "X", ")", "\n", "", "if", "batch_size", ">", "1", ":", "\n", "            ", "return_vals", ".", "append", "(", "np", ".", "concatenate", "(", "X_data", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "            ", "return_vals", ".", "append", "(", "X_data", "[", "0", "]", ")", "\n", "\n", "", "yield", "tuple", "(", "return_vals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_example_by_name": [[139, 162], ["datagenerators.load_volfile", "datagenerators.load_volfile", "return_vals.append", "datagenerators.load_volfile", "return_vals.append", "datagenerators.load_volfile", "datagenerators.load_volfile", "numpy.array", "return_vals.append", "datagenerators.load_volfile", "return_vals.append", "tuple"], "function", ["home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_volfile", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_volfile", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_volfile", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_volfile", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_volfile", "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_volfile"], ["", "", "def", "load_example_by_name", "(", "vol_name", ")", ":", "\n", "\n", "    ", "X", "=", "load_volfile", "(", "vol_name", ",", "np_var", "=", "'PT'", ")", "\n", "X", "=", "X", "[", "np", ".", "newaxis", ",", "...", ",", "np", ".", "newaxis", "]", "\n", "return_vals", "=", "[", "X", "]", "\n", "\n", "X", "=", "load_volfile", "(", "vol_name", ",", "np_var", "=", "'CT'", ")", "\n", "X", "=", "X", "[", "np", ".", "newaxis", ",", "...", ",", "np", ".", "newaxis", "]", "\n", "return_vals", ".", "append", "(", "X", ")", "\n", "\n", "X", "=", "load_volfile", "(", "vol_name", ",", "np_var", "=", "'Seg'", ")", "\n", "return_vals", ".", "append", "(", "X", ")", "\n", "\n", "Time", "=", "load_volfile", "(", "vol_name", ",", "np_var", "=", "'Time'", ")", "\n", "Event", "=", "load_volfile", "(", "vol_name", ",", "np_var", "=", "'Event'", ")", "\n", "X", "=", "np", ".", "array", "(", "[", "Time", ",", "Event", "]", ")", "\n", "return_vals", ".", "append", "(", "X", ")", "\n", "\n", "X", "=", "load_volfile", "(", "vol_name", ",", "np_var", "=", "'Clinic'", ")", "\n", "X", "=", "X", "[", "np", ".", "newaxis", ",", "...", "]", "\n", "return_vals", ".", "append", "(", "X", ")", "\n", "\n", "return", "tuple", "(", "return_vals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.load_volfile": [[167, 191], ["datafile.endswith", "datafile.endswith", "nib.load().get_data", "numpy.load", "nib.load", "numpy.load", "print"], "function", ["None"], ["", "def", "load_volfile", "(", "datafile", ",", "np_var", ")", ":", "\n", "    ", "\"\"\"\n    load volume file\n    formats: nii, nii.gz, mgz, npz\n    \"\"\"", "\n", "assert", "datafile", ".", "endswith", "(", "(", "'.nii'", ",", "'.nii.gz'", ",", "'.mgz'", ",", "'.npz'", ")", ")", ",", "'Unknown data file'", "\n", "\n", "if", "datafile", ".", "endswith", "(", "(", "'.nii'", ",", "'.nii.gz'", ",", "'.mgz'", ")", ")", ":", "\n", "# import nibabel", "\n", "        ", "if", "'nibabel'", "not", "in", "sys", ".", "modules", ":", "\n", "            ", "try", ":", "\n", "                ", "import", "nibabel", "as", "nib", "\n", "", "except", ":", "\n", "                ", "print", "(", "'Failed to import nibabel. need nibabel library for these data file types.'", ")", "\n", "\n", "", "", "X", "=", "nib", ".", "load", "(", "datafile", ")", ".", "get_data", "(", ")", "\n", "\n", "", "else", ":", "# npz", "\n", "        ", "if", "np_var", "==", "'all'", ":", "\n", "            ", "X", "=", "X", "=", "np", ".", "load", "(", "datafile", ")", "\n", "", "else", ":", "\n", "            ", "X", "=", "np", ".", "load", "(", "datafile", ")", "[", "np_var", "]", "\n", "\n", "", "", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Sort_by_time": [[193, 205], ["numpy.argsort", "numpy.zeros", "range", "len"], "function", ["None"], ["", "def", "Sort_by_time", "(", "data", ",", "time", ")", ":", "\n", "    ", "'''\n    Sort samples by survival time\n    Designed for Cox loss function.\n    '''", "\n", "sorted_arg", "=", "np", ".", "argsort", "(", "time", ")", "\n", "sorted_data", "=", "np", ".", "zeros", "(", "data", ".", "shape", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "time", ")", ")", ":", "\n", "        ", "sorted_data", "[", "i", "]", "=", "data", "[", "sorted_arg", "[", "i", "]", "]", "\n", "\n", "", "return", "sorted_data", "\n", "\n"]], "home.repos.pwc.inspect_result.mungomeng_survival-deepmts.src.datagenerators.Data_augmentation": [[210, 278], ["imgaug.augmenters.Sequential", "imgaug.augmenters.Sequential", "numpy.concatenate", "iaa.Sequential.", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.concatenate", "iaa.Sequential.", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.concatenate", "iaa.Sequential.", "numpy.transpose", "numpy.transpose", "numpy.transpose", "range", "cv2.threshold", "imgaug.augmenters.Fliplr", "imgaug.augmenters.Affine", "imgaug.augmenters.Affine", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["None"], ["", "def", "Data_augmentation", "(", "PT", ",", "CT", ",", "Seg", ")", ":", "\n", "\n", "# define augmentation sequence", "\n", "    ", "aug_seq", "=", "iaa", ".", "Sequential", "(", "[", "\n", "# horizontal flips", "\n", "iaa", ".", "Fliplr", "(", "0.5", ")", ",", "\n", "# translate/move them and rotate them.", "\n", "iaa", ".", "Affine", "(", "translate_px", "=", "{", "\"x\"", ":", "[", "-", "10", ",", "10", "]", ",", "\"y\"", ":", "[", "0", ",", "0", "]", "}", ",", "rotate", "=", "(", "-", "5", ",", "5", ")", ")", "\n", "]", ",", "random_order", "=", "True", ")", "# apply augmenters in random order", "\n", "\n", "aug_seq_no_flip", "=", "iaa", ".", "Sequential", "(", "[", "\n", "# translate/move them and rotate them.", "\n", "iaa", ".", "Affine", "(", "translate_px", "=", "{", "\"x\"", ":", "[", "-", "10", ",", "10", "]", ",", "\"y\"", ":", "[", "0", ",", "0", "]", "}", ",", "rotate", "=", "(", "-", "5", ",", "5", ")", ")", "\n", "]", ",", "random_order", "=", "False", ")", "\n", "\n", "# pre-process data shape", "\n", "PT", "=", "PT", "[", "...", ",", "0", "]", "\n", "CT", "=", "CT", "[", "...", ",", "0", "]", "\n", "Seg", "=", "Seg", "[", "...", ",", "0", "]", "\n", "\n", "# flip/translate in x axls, rotate along z axls", "\n", "images", "=", "np", ".", "concatenate", "(", "(", "PT", ",", "CT", ",", "Seg", ")", ",", "-", "1", ")", "\n", "\n", "images_aug", "=", "aug_seq", "(", "images", "=", "images", ")", "# random flipping only occurs in the sagittal axis", "\n", "\n", "PT", "=", "images_aug", "[", "...", ",", "0", ":", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", ")", "]", "\n", "CT", "=", "images_aug", "[", "...", ",", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", ")", ":", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", "*", "2", ")", "]", "\n", "Seg", "=", "images_aug", "[", "...", ",", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", "*", "2", ")", ":", "int", "(", "images_aug", ".", "shape", "[", "3", "]", ")", "]", "\n", "\n", "# translate in z axls, rotate along y axls", "\n", "PT", "=", "np", ".", "transpose", "(", "PT", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "CT", "=", "np", ".", "transpose", "(", "CT", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "Seg", "=", "np", ".", "transpose", "(", "Seg", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "images", "=", "np", ".", "concatenate", "(", "(", "PT", ",", "CT", ",", "Seg", ")", ",", "-", "1", ")", "\n", "\n", "images_aug", "=", "aug_seq_no_flip", "(", "images", "=", "images", ")", "\n", "\n", "PT", "=", "images_aug", "[", "...", ",", "0", ":", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", ")", "]", "\n", "CT", "=", "images_aug", "[", "...", ",", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", ")", ":", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", "*", "2", ")", "]", "\n", "Seg", "=", "images_aug", "[", "...", ",", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", "*", "2", ")", ":", "int", "(", "images_aug", ".", "shape", "[", "3", "]", ")", "]", "\n", "\n", "# translate in y axls, rotate along x axls", "\n", "PT", "=", "np", ".", "transpose", "(", "PT", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "CT", "=", "np", ".", "transpose", "(", "CT", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "Seg", "=", "np", ".", "transpose", "(", "Seg", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "images", "=", "np", ".", "concatenate", "(", "(", "PT", ",", "CT", ",", "Seg", ")", ",", "-", "1", ")", "\n", "\n", "images_aug", "=", "aug_seq_no_flip", "(", "images", "=", "images", ")", "\n", "\n", "PT", "=", "images_aug", "[", "...", ",", "0", ":", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", ")", "]", "\n", "CT", "=", "images_aug", "[", "...", ",", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", ")", ":", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", "*", "2", ")", "]", "\n", "Seg", "=", "images_aug", "[", "...", ",", "int", "(", "images_aug", ".", "shape", "[", "3", "]", "/", "3", "*", "2", ")", ":", "int", "(", "images_aug", ".", "shape", "[", "3", "]", ")", "]", "\n", "\n", "# recover axls", "\n", "PT", "=", "np", ".", "transpose", "(", "PT", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "CT", "=", "np", ".", "transpose", "(", "CT", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "Seg", "=", "np", ".", "transpose", "(", "Seg", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "# reset Seg mask to 1/0", "\n", "for", "i", "in", "range", "(", "Seg", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "_", ",", "Seg", "[", "i", "]", "=", "cv2", ".", "threshold", "(", "Seg", "[", "i", "]", ",", "0.2", ",", "1", ",", "cv2", ".", "THRESH_BINARY", ")", "\n", "\n", "# post-process data shape", "\n", "", "PT_aug", "=", "PT", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "CT_aug", "=", "CT", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "Seg_aug", "=", "Seg", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "\n", "return", "PT_aug", ",", "CT_aug", ",", "Seg_aug", "\n", "\n"]]}