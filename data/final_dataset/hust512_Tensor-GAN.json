{"home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Network.__init__": [[56, 60], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "layer_num", "=", "0", "\n", "self", ".", "weights", "=", "[", "]", "\n", "self", ".", "biases", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Network.conv2d": [[61, 88], ["tensorflow.variable_scope", "atsc.he_init", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.get_variable", "tensorflow.add", "atsc.Network.weights.append", "atsc.Network.biases.append", "tensorflow.nn.conv2d", "str"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d"], ["", "def", "conv2d", "(", "self", ",", "input", ",", "input_dim", ",", "output_dim", ",", "filter_size", ",", "stride", ",", "padding", "=", "'SAME'", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'conv'", "+", "str", "(", "self", ".", "layer_num", ")", ")", ":", "\n", "\n", "            ", "init_w", "=", "he_init", "(", "[", "filter_size", ",", "filter_size", ",", "input_dim", ",", "output_dim", "]", ",", "stride", ")", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\n", "'weight'", ",", "\n", "initializer", "=", "init_w", "\n", ")", "\n", "\n", "init_b", "=", "tf", ".", "zeros", "(", "[", "output_dim", "]", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\n", "'bias'", ",", "\n", "initializer", "=", "init_b", "\n", ")", "\n", "\n", "output", "=", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d", "(", "\n", "input", ",", "\n", "weight", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "\n", "padding", "=", "padding", "\n", ")", ",", "bias", ")", "\n", "\n", "self", ".", "layer_num", "+=", "1", "\n", "self", ".", "weights", ".", "append", "(", "weight", ")", "\n", "self", ".", "biases", ".", "append", "(", "bias", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Network.deconv2d": [[89, 123], ["tensorflow.variable_scope", "input.get_shape().as_list", "atsc.he_init", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.get_variable", "tensorflow.add", "tensorflow.reshape", "atsc.Network.weights.append", "atsc.Network.biases.append", "tensorflow.nn.conv2d_transpose", "str", "input.get_shape", "tensorflow.shape", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init"], ["", "def", "deconv2d", "(", "self", ",", "input", ",", "output_dim", ",", "filter_size", ",", "stride", ",", "padding", "=", "'SAME'", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'deconv'", "+", "str", "(", "self", ".", "layer_num", ")", ")", ":", "\n", "            ", "input_shape", "=", "input", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "init_w", "=", "he_init", "(", "[", "filter_size", ",", "filter_size", ",", "output_dim", ",", "input_shape", "[", "3", "]", "]", ",", "stride", ")", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\n", "'weight'", ",", "\n", "initializer", "=", "init_w", "\n", ")", "\n", "\n", "init_b", "=", "tf", ".", "zeros", "(", "[", "output_dim", "]", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\n", "'bias'", ",", "\n", "initializer", "=", "init_b", "\n", ")", "\n", "\n", "output", "=", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d_transpose", "(", "\n", "value", "=", "input", ",", "\n", "filter", "=", "weight", ",", "\n", "output_shape", "=", "[", "\n", "tf", ".", "shape", "(", "input", ")", "[", "0", "]", ",", "\n", "input_shape", "[", "1", "]", "*", "stride", ",", "\n", "input_shape", "[", "2", "]", "*", "stride", ",", "\n", "output_dim", "\n", "]", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "\n", "padding", "=", "padding", "\n", ")", ",", "bias", ")", "\n", "output", "=", "tf", ".", "reshape", "(", "output", ",", "[", "tf", ".", "shape", "(", "input", ")", "[", "0", "]", ",", "input_shape", "[", "1", "]", "*", "stride", ",", "input_shape", "[", "2", "]", "*", "stride", ",", "output_dim", "]", ")", "\n", "\n", "self", ".", "layer_num", "+=", "1", "\n", "self", ".", "weights", ".", "append", "(", "weight", ")", "\n", "self", ".", "biases", ".", "append", "(", "bias", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Network.batch_norm": [[124, 132], ["tensorflow.variable_scope", "tensorflow.contrib.layers.batch_norm", "str"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.batch_norm"], ["", "def", "batch_norm", "(", "self", ",", "input", ",", "scale", "=", "False", ")", ":", "\n", "        ", "''' batch normalization\n        ArXiv 1502.03167v3 '''", "\n", "with", "tf", ".", "variable_scope", "(", "'batch_norm'", "+", "str", "(", "self", ".", "layer_num", ")", ")", ":", "\n", "            ", "output", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "input", ",", "scale", "=", "scale", ")", "\n", "self", ".", "layer_num", "+=", "1", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Network.dense": [[133, 150], ["tensorflow.variable_scope", "atsc.xavier_init", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.get_variable", "tensorflow.add", "atsc.Network.weights.append", "atsc.Network.biases.append", "input.get_shape().as_list", "tensorflow.matmul", "str", "input.get_shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.xavier_init"], ["", "def", "dense", "(", "self", ",", "input", ",", "output_dim", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'dense'", "+", "str", "(", "self", ".", "layer_num", ")", ")", ":", "\n", "            ", "input_dim", "=", "input", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "\n", "init_w", "=", "xavier_init", "(", "[", "input_dim", ",", "output_dim", "]", ")", "\n", "weight", "=", "tf", ".", "get_variable", "(", "'weight'", ",", "initializer", "=", "init_w", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "init_b", "=", "tf", ".", "zeros", "(", "[", "output_dim", "]", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "'bias'", ",", "initializer", "=", "init_b", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "output", "=", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "input", ",", "weight", ")", ",", "bias", ")", "\n", "\n", "self", ".", "layer_num", "+=", "1", "\n", "self", ".", "weights", ".", "append", "(", "weight", ")", "\n", "self", ".", "biases", ".", "append", "(", "bias", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.__init__": [[154, 208], ["tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "atsc.Atsc.tensor_tsta", "atsc.Atsc.tensor_cl", "atsc.Atsc.tensor_dl", "tensorflow.contrib.opt.ScipyOptimizerInterface", "tensorflow.random_uniform", "tensorflow.sqrt", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "atsc.Atsc.init_D", "numpy.zeros", "numpy.random.rand", "tensorflow.variable_scope", "atsc.Atsc._discriminator", "scope.reuse_variables", "atsc.Atsc._discriminator", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.gradients", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.reduce_mean", "atsc.Atsc._discriminator", "tensorflow.square", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_tsta", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_cl", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_dl", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.init_D", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator"], ["    ", "def", "__init__", "(", "self", ",", "m", ",", "n", ",", "k", ")", ":", "\n", "# size of X: m x n x k", "\n", "# size of D: m x r x k", "\n", "# size of C: r x n x k", "\n", "        ", "self", ".", "m", "=", "m", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "k", "=", "k", "\n", "# self.X_p = tf.placeholder(tf.float32, [batch_size, m, n, k])", "\n", "self", ".", "X_p", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "m", ",", "n", ",", "k", "]", ",", "name", "=", "'X_p'", ")", "\n", "self", ".", "D", "=", "tf", ".", "Variable", "(", "self", ".", "init_D", "(", "params", ".", "patch_size", ",", "params", ".", "r", ")", ",", "name", "=", "'D'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "C", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "[", "params", ".", "r", ",", "n", ",", "k", "]", ")", ",", "name", "=", "'C'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "dual_lambda", "=", "tf", ".", "Variable", "(", "np", ".", "random", ".", "rand", "(", "params", ".", "r", ")", ",", "name", "=", "'lambda'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "disc_vars", "=", "[", "]", "\n", "\n", "# tensor coefficients learning", "\n", "self", ".", "C_tsta", "=", "self", ".", "tensor_tsta", "(", "self", ".", "X_p", ",", "self", ".", "D", ",", "self", ".", "C", ")", "\n", "content_loss", ",", "self", ".", "X_p_recon", "=", "self", ".", "tensor_cl", "(", "self", ".", "X_p", ",", "self", ".", "D", ",", "self", ".", "C", ")", "\n", "\n", "# tensor dictionary learning", "\n", "self", ".", "dl_loss", ",", "self", ".", "D_assign", "=", "self", ".", "tensor_dl", "(", "self", ".", "X_p", ",", "self", ".", "C", ",", "self", ".", "dual_lambda", ")", "\n", "self", ".", "dl_opt", "=", "tf", ".", "contrib", ".", "opt", ".", "ScipyOptimizerInterface", "(", "\n", "self", ".", "dl_loss", ",", "method", "=", "'L-BFGS-B'", ",", "var_to_bounds", "=", "{", "self", ".", "dual_lambda", ":", "(", "0", ",", "np", ".", "infty", ")", "}", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'discriminator'", ")", "as", "scope", ":", "\n", "            ", "disc_real", "=", "self", ".", "_discriminator", "(", "self", ".", "X_p", ")", "\n", "scope", ".", "reuse_variables", "(", ")", "\n", "disc_fake", "=", "self", ".", "_discriminator", "(", "self", ".", "X_p_recon", ")", "\n", "\n", "", "d_loss", "=", "-", "tf", ".", "reduce_mean", "(", "disc_real", ")", "+", "tf", ".", "reduce_mean", "(", "disc_fake", ")", "\n", "g_loss", "=", "-", "tf", ".", "reduce_mean", "(", "disc_fake", ")", "\n", "beta", "=", "tf", ".", "random_uniform", "(", "\n", "shape", "=", "(", "1", ",", ")", ",", "\n", "minval", "=", "0.", ",", "\n", "maxval", "=", "1.", "\n", ")", "\n", "\n", "differences", "=", "self", ".", "X_p", "-", "self", ".", "X_p_recon", "\n", "interpolates", "=", "self", ".", "X_p", "+", "beta", "*", "differences", "\n", "gradients", "=", "tf", ".", "gradients", "(", "self", ".", "_discriminator", "(", "interpolates", ")", ",", "[", "interpolates", "]", ")", "[", "0", "]", "\n", "slopes", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "gradients", ")", ",", "reduction_indices", "=", "[", "1", "]", ")", ")", "\n", "gradient_penalty", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "slopes", "-", "1.", ")", ")", "\n", "\n", "self", ".", "disc_loss", "=", "SIGMA", "*", "(", "d_loss", "+", "LAMBDA", "*", "gradient_penalty", ")", "\n", "self", ".", "disc_opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", "=", "params", ".", "learning_rate", ",", "\n", "beta1", "=", "0.5", ",", "\n", "beta2", "=", "0.9", "\n", ")", ".", "minimize", "(", "self", ".", "disc_loss", ",", "var_list", "=", "self", ".", "disc_vars", ")", "\n", "self", ".", "cl_loss", "=", "content_loss", "+", "SIGMA", "*", "g_loss", "\n", "self", ".", "cl_opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", "=", "params", ".", "learning_rate", ",", "\n", "beta1", "=", "0.5", ",", "\n", "beta2", "=", "0.9", "\n", ")", ".", "minimize", "(", "self", ".", "cl_loss", ",", "var_list", "=", "[", "self", ".", "C", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.tensor_dl": [[210, 241], ["atsc.Atsc.fft", "atsc.Atsc.fft", "tensorflow.matrix_diag", "tensorflow.complex", "tensorflow.concat", "tensorflow.real", "tensorflow.where", "tensorflow.assign", "tensorflow.complex", "tensorflow.complex", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.zeros", "sum", "sum", "atsc.Atsc.ifft", "tensorflow.is_nan", "tensorflow.zeros_like", "tensorflow.real", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.split", "tensorflow.split", "tensorflow.transpose", "tensorflow.transpose", "zip", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.shape", "tensorflow.shape", "tensorflow.trace", "tensorflow.trace", "tensorflow.transpose", "zip", "tensorflow.matmul", "zip", "tensorflow.matmul", "zip", "tensorflow.matmul", "atsc.Atsc.pinv", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose", "atsc.Atsc.pinv", "tensorflow.transpose", "tensorflow.transpose", "atsc.Atsc.pinv"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv"], ["", "def", "tensor_dl", "(", "self", ",", "X_p", ",", "C", ",", "dual_lambda", ")", ":", "\n", "        ", "X_p_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "X_p", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "X_p", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "C_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "C", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "C", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "x_hat_list", "=", "[", "tf", ".", "squeeze", "(", "x", ")", "for", "x", "in", "tf", ".", "split", "(", "X_p_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "c_hat_list", "=", "[", "tf", ".", "squeeze", "(", "c", ")", "for", "c", "in", "tf", ".", "split", "(", "C_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "\n", "cc_hat_list", "=", "[", "tf", ".", "matmul", "(", "c_hat", ",", "tf", ".", "transpose", "(", "c_hat", ")", ")", "for", "c_hat", "in", "c_hat_list", "]", "\n", "xc_hat_list", "=", "[", "tf", ".", "matmul", "(", "x_hat", ",", "tf", ".", "transpose", "(", "c_hat", ")", ")", "for", "(", "x_hat", ",", "c_hat", ")", "\n", "in", "zip", "(", "x_hat_list", ",", "c_hat_list", ")", "]", "\n", "\n", "lambda_diag", "=", "tf", ".", "matrix_diag", "(", "dual_lambda", ")", "\n", "lambda_mat", "=", "tf", ".", "complex", "(", "lambda_diag", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "lambda_diag", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", "\n", "\n", "if", "self", ".", "m", ">", "params", ".", "r", ":", "\n", "            ", "f", "=", "sum", "(", "[", "tf", ".", "trace", "(", "tf", ".", "matmul", "(", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ",", "\n", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "xc_hat", ")", ",", "xc_hat", ")", ")", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "f", "=", "sum", "(", "[", "tf", ".", "trace", "(", "tf", ".", "matmul", "(", "tf", ".", "matmul", "(", "xc_hat", ",", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ")", ",", "\n", "tf", ".", "transpose", "(", "xc_hat", ")", ")", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ")", "\n", "\n", "", "D_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "transpose", "(", "tf", ".", "matmul", "(", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ",", "\n", "tf", ".", "transpose", "(", "xc_hat", ")", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "D_", "=", "tf", ".", "real", "(", "self", ".", "ifft", "(", "D_hat", ")", ")", "\n", "D", "=", "tf", ".", "where", "(", "tf", ".", "is_nan", "(", "D_", ")", ",", "tf", ".", "zeros_like", "(", "D_", ")", ",", "D_", ")", "\n", "D_assign", "=", "tf", ".", "assign", "(", "self", ".", "D", ",", "D", ")", "\n", "min_obj", "=", "tf", ".", "real", "(", "f", ")", "+", "self", ".", "k", "*", "tf", ".", "reduce_sum", "(", "dual_lambda", ")", "\n", "return", "min_obj", ",", "D_assign", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.tensor_tsta": [[242, 266], ["atsc.Atsc.tensor_product", "atsc.Atsc.norm", "atsc.Atsc.tensor_product", "range", "tensorflow.assign", "tensorflow.multiply", "atsc.Atsc.tensor_product", "tensorflow.sign", "tensorflow.maximum", "tensorflow.scalar_mul", "numpy.sqrt", "tensorflow.abs"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product"], ["", "def", "tensor_tsta", "(", "self", ",", "X_p", ",", "D", ",", "C", ")", ":", "\n", "        ", "C0", "=", "C", "\n", "\n", "DD", "=", "self", ".", "tensor_product", "(", "D", ",", "'t'", ",", "D", ",", "''", ")", "\n", "# DD_cmat = blk_circ_mat(DD)", "\n", "# l0 = tf.norm(DD_cmat, 2)", "\n", "l0", "=", "self", ".", "norm", "(", "DD", ")", "\n", "DX", "=", "self", ".", "tensor_product", "(", "D", ",", "'t'", ",", "X_p", ",", "''", ")", "\n", "\n", "J1", "=", "C0", "\n", "t1", "=", "1", "\n", "\n", "for", "i", "in", "range", "(", "params", ".", "tsta_max_iter", ")", ":", "\n", "            ", "l1", "=", "params", ".", "eta", "**", "i", "*", "l0", "\n", "grad_J1", "=", "self", ".", "tensor_product", "(", "DD", ",", "'t'", ",", "J1", ",", "''", ")", "-", "DX", "\n", "temp", "=", "J1", "-", "grad_J1", "/", "l1", "# tf.divide(x, y)", "\n", "C1", "=", "tf", ".", "multiply", "(", "tf", ".", "sign", "(", "temp", ")", ",", "tf", ".", "maximum", "(", "tf", ".", "abs", "(", "temp", ")", "-", "params", ".", "beta", "/", "l1", ",", "0", ")", ")", "\n", "t2", "=", "(", "1", "+", "np", ".", "sqrt", "(", "1", "+", "4", "*", "t1", "**", "2", ")", ")", "/", "2", "\n", "J1", "=", "C1", "+", "tf", ".", "scalar_mul", "(", "(", "t1", "-", "1", ")", "/", "t2", ",", "(", "C1", "-", "C0", ")", ")", "\n", "C0", "=", "C1", "\n", "t1", "=", "t2", "\n", "\n", "", "C_tsta", "=", "tf", ".", "assign", "(", "self", ".", "C", ",", "C1", ")", "\n", "return", "C_tsta", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.tensor_cl": [[267, 272], ["atsc.Atsc.tensor_product", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.abs"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product"], ["", "def", "tensor_cl", "(", "self", ",", "X_p", ",", "D", ",", "C", ")", ":", "\n", "        ", "X_p_recon", "=", "self", ".", "tensor_product", "(", "D", ",", "''", ",", "C", ",", "''", ")", "\n", "content_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "X_p_recon", "-", "X_p", ")", ")", "+", "ALPHA", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "C", ")", ")", "\n", "\n", "return", "content_loss", ",", "X_p_recon", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc._discriminator": [[273, 284], ["atsc.Network", "tensorflow.reshape", "atsc.Network.dense", "atsc.lrelu", "atsc.Network.dense", "atsc.lrelu", "atsc.Network.dense", "numpy.prod"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.dense", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.dense", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.dense"], ["", "def", "_discriminator", "(", "self", ",", "img", ")", ":", "\n", "        ", "discriminator", "=", "Network", "(", ")", "\n", "h", "=", "tf", ".", "reshape", "(", "img", ",", "(", "1", ",", "np", ".", "prod", "(", "(", "self", ".", "m", ",", "self", ".", "n", ",", "self", ".", "k", ")", ")", ")", ")", "\n", "h", "=", "discriminator", ".", "dense", "(", "h", ",", "1024", ")", "\n", "h", "=", "lrelu", "(", "h", ")", "\n", "h", "=", "discriminator", ".", "dense", "(", "h", ",", "256", ")", "\n", "h", "=", "lrelu", "(", "h", ")", "\n", "h", "=", "discriminator", ".", "dense", "(", "h", ",", "1", ")", "\n", "self", ".", "disc_vars", "=", "discriminator", ".", "weights", "+", "discriminator", ".", "biases", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.tensor_product": [[285, 305], ["tensorflow.fft", "tensorflow.fft", "tensorflow.real", "tensorflow.complex", "tensorflow.complex", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.concat", "tensorflow.ifft", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.split", "tensorflow.split", "tensorflow.concat", "tensorflow.shape", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.concat", "tensorflow.concat", "tensorflow.matmul", "zip", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.matmul", "zip", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.matmul", "zip", "tensorflow.matmul", "zip", "tensorflow.transpose"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft"], ["", "def", "tensor_product", "(", "self", ",", "P", ",", "ch1", ",", "Q", ",", "ch2", ")", ":", "\n", "        ", "P_hat", "=", "tf", ".", "fft", "(", "tf", ".", "complex", "(", "P", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "P", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "Q_hat", "=", "tf", ".", "fft", "(", "tf", ".", "complex", "(", "Q", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "Q", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "p_hat_list", "=", "[", "tf", ".", "squeeze", "(", "p", ")", "for", "p", "in", "tf", ".", "split", "(", "P_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "q_hat_list", "=", "[", "tf", ".", "squeeze", "(", "q", ")", "for", "q", "in", "tf", ".", "split", "(", "Q_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "\n", "if", "ch1", "==", "'t'", "and", "ch2", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "p_hat", ")", ",", "tf", ".", "transpose", "(", "q_hat", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "ch1", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "p_hat", ")", ",", "q_hat", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "ch2", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "p_hat", ",", "tf", ".", "transpose", "(", "q_hat", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "p_hat", ",", "q_hat", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "", "return", "tf", ".", "real", "(", "tf", ".", "ifft", "(", "S_hat", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.train": [[306, 347], ["range", "range", "sess.run", "atsc.Atsc.dl_opt.minimize", "sess.run", "sess.run", "sess.run", "block_3d.block_3d_tensor", "range", "range", "atsc.Atsc.dl_opt.minimize", "sess.run", "range", "numpy.shape", "sess.run", "sess.run", "sess.run", "sess.run", "block_3d.block_3d_tensor", "numpy.shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.block_3d_tensor", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.block_3d_tensor"], ["", "def", "train", "(", "self", ",", "sess", ",", "X", ",", "X_p", ",", "iter_num", ")", ":", "\n", "\n", "        ", "for", "i", "in", "range", "(", "params", ".", "sc_max_iter", ")", ":", "\n", "            ", "sess", ".", "run", "(", "self", ".", "C_tsta", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "self", ".", "dl_opt", ".", "minimize", "(", "sess", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "sess", ".", "run", "(", "self", ".", "D_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "sess", ".", "run", "(", "self", ".", "C_tsta", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "X_p_recon", "=", "sess", ".", "run", "(", "self", ".", "X_p_recon", ")", "\n", "X_recon", "=", "block_3d_tensor", "(", "X_p_recon", ",", "np", ".", "shape", "(", "X", ")", ")", "\n", "\n", "# self.save_img(X_recon, './out/atsc_init.png')", "\n", "\n", "", "for", "i", "in", "range", "(", "iter_num", ")", ":", "\n", "# time_start = time.time()", "\n", "# print('Iteration: {} / {}'.format(i+1, iter_num))", "\n", "\n", "            ", "for", "_", "in", "range", "(", "5", ")", ":", "\n", "                ", "sess", ".", "run", "(", "self", ".", "disc_opt", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "# compute tensor coefficients C", "\n", "", "for", "j", "in", "range", "(", "1", ")", ":", "\n", "                ", "_", ",", "loss", "=", "sess", ".", "run", "(", "[", "self", ".", "cl_opt", ",", "self", ".", "cl_loss", "]", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "# compute tensor dictionary D", "\n", "", "self", ".", "dl_opt", ".", "minimize", "(", "sess", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "sess", ".", "run", "(", "self", ".", "D_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "# recover input tensor X", "\n", "for", "j", "in", "range", "(", "1", ")", ":", "\n", "                ", "_", ",", "loss", "=", "sess", ".", "run", "(", "[", "self", ".", "cl_opt", ",", "self", ".", "cl_loss", "]", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "# print(loss)", "\n", "", "if", "i", "%", "10", "==", "0", ":", "\n", "                ", "X_p_recon", "=", "sess", ".", "run", "(", "self", ".", "X_p_recon", ")", "\n", "X_recon", "=", "block_3d_tensor", "(", "X_p_recon", ",", "np", ".", "shape", "(", "X", ")", ")", "\n", "\n", "# self.save_img(X_recon, './out/atsc_{}.png'.format(str(i).zfill(2)))", "\n", "\n", "# time_end = time.time()", "\n", "# print('time:', time_end - time_start, 's')", "\n", "", "", "return", "loss", ",", "X_recon", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.pinv_svd": [[348, 358], ["tensorflow.svd", "tensorflow.greater", "tensorflow.where", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_max", "tensorflow.reciprocal", "tensorflow.zeros", "tensorflow.complex", "tensorflow.matrix_diag", "tensorflow.zeros", "tensorflow.shape", "tensorflow.matrix_diag"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "pinv_svd", "(", "a", ",", "rcond", "=", "1e-15", ")", ":", "\n", "        ", "s", ",", "u", ",", "v", "=", "tf", ".", "svd", "(", "a", ")", "\n", "# Ignore singular values close to zero to prevent numerical overflow", "\n", "limit", "=", "rcond", "*", "tf", ".", "reduce_max", "(", "s", ")", "\n", "non_zero", "=", "tf", ".", "greater", "(", "s", ",", "limit", ")", "\n", "\n", "reciprocal", "=", "tf", ".", "where", "(", "non_zero", ",", "tf", ".", "reciprocal", "(", "s", ")", ",", "tf", ".", "zeros", "(", "s", ".", "shape", ")", ")", "\n", "lhs", "=", "tf", ".", "matmul", "(", "v", ",", "tf", ".", "complex", "(", "tf", ".", "matrix_diag", "(", "reciprocal", ")", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "tf", ".", "matrix_diag", "(", "reciprocal", ")", ")", ")", ")", ")", "\n", "return", "tf", ".", "matmul", "(", "lhs", ",", "u", ",", "transpose_b", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.pinv": [[359, 364], ["tensorflow.py_func", "numpy.linalg.pinv().astype", "numpy.linalg.pinv"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv"], ["", "@", "staticmethod", "\n", "def", "pinv", "(", "a", ")", ":", "\n", "        ", "def", "np_pinv", "(", "a", ")", ":", "\n", "            ", "return", "np", ".", "linalg", ".", "pinv", "(", "a", ")", ".", "astype", "(", "np", ".", "complex64", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_pinv", ",", "[", "a", "]", ",", "tf", ".", "complex64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.fft": [[365, 370], ["tensorflow.py_func", "numpy.fft.fft().astype", "numpy.fft.fft"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft"], ["", "@", "staticmethod", "\n", "def", "fft", "(", "a", ")", ":", "\n", "        ", "def", "np_fft", "(", "a", ")", ":", "\n", "            ", "return", "np", ".", "fft", ".", "fft", "(", "a", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "complex64", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_fft", ",", "[", "a", "]", ",", "tf", ".", "complex64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.ifft": [[371, 376], ["tensorflow.py_func", "numpy.fft.ifft().astype", "numpy.fft.ifft"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft"], ["", "@", "staticmethod", "\n", "def", "ifft", "(", "a", ")", ":", "\n", "        ", "def", "np_ifft", "(", "a", ")", ":", "\n", "            ", "return", "np", ".", "fft", ".", "ifft", "(", "a", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "complex64", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_ifft", ",", "[", "a", "]", ",", "tf", ".", "complex64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.norm": [[377, 390], ["tensorflow.py_func", "numpy.shape", "numpy.zeros", "numpy.reshape", "range", "numpy.linalg.norm().astype", "numpy.transpose", "numpy.roll", "numpy.linalg.norm"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm"], ["", "@", "staticmethod", "\n", "def", "norm", "(", "A", ")", ":", "\n", "        ", "def", "blk_circ_mat_norm", "(", "A", ")", ":", "\n", "            ", "sz_A", "=", "np", ".", "shape", "(", "A", ")", "\n", "dim", "=", "[", "0", ",", "0", "]", "\n", "dim", "[", "0", "]", "=", "sz_A", "[", "0", "]", "*", "sz_A", "[", "2", "]", "\n", "dim", "[", "1", "]", "=", "sz_A", "[", "1", "]", "*", "sz_A", "[", "2", "]", "\n", "A_c", "=", "np", ".", "zeros", "(", "dim", ")", "\n", "A_mat", "=", "np", ".", "reshape", "(", "np", ".", "transpose", "(", "A", ",", "[", "0", ",", "2", ",", "1", "]", ")", ",", "[", "dim", "[", "0", "]", ",", "sz_A", "[", "1", "]", "]", ",", "order", "=", "'F'", ")", "\n", "for", "k", "in", "range", "(", "sz_A", "[", "2", "]", ")", ":", "\n", "                ", "A_c", "[", ":", ",", "k", "*", "sz_A", "[", "1", "]", ":", "(", "k", "+", "1", ")", "*", "sz_A", "[", "1", "]", "]", "=", "np", ".", "roll", "(", "A_mat", ",", "k", "*", "sz_A", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "", "return", "np", ".", "linalg", ".", "norm", "(", "A_c", ",", "2", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "return", "tf", ".", "py_func", "(", "blk_circ_mat_norm", ",", "[", "A", "]", ",", "tf", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.init_D": [[391, 400], ["numpy.sqrt", "range", "numpy.transpose", "numpy.sum", "numpy.reshape", "numpy.random.rand", "numpy.square"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "init_D", "(", "patch_size", ",", "r", ")", ":", "\n", "        ", "D_mat", "=", "np", ".", "random", ".", "rand", "(", "patch_size", "**", "3", ",", "r", ")", "*", "2", "-", "1", "\n", "D_mat_sum", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "D_mat", ")", ",", "axis", "=", "0", ")", ")", "\n", "for", "i", "in", "range", "(", "D_mat_sum", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "D_mat", "[", ":", ",", "i", "]", "/=", "D_mat_sum", "[", "i", "]", "\n", "", "D", "=", "np", ".", "transpose", "(", "np", ".", "reshape", "(", "\n", "D_mat", ",", "[", "patch_size", "**", "2", ",", "patch_size", ",", "params", ".", "r", "]", ",", "order", "=", "'F'", ")", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "return", "D", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.Atsc.save_img": [[401, 413], ["matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.axis", "plt.figure.add_subplot.set_xticklabels", "plt.figure.add_subplot.set_yticklabels", "plt.figure.add_subplot.set_aspect", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "save_img", "(", "img", ",", "file_name", ")", ":", "\n", "        ", "img", "=", "0.5", "*", "img", "+", "0.5", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "5", ",", "15", ")", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "img", ",", "cmap", "=", "'Greys_r'", ")", "\n", "plt", ".", "savefig", "(", "file_name", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.lrelu": [[25, 27], ["tensorflow.maximum"], "function", ["None"], ["def", "lrelu", "(", "x", ",", "alpha", "=", "0.2", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "alpha", "*", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.relu": [[29, 31], ["tensorflow.nn.relu"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.relu"], ["", "def", "relu", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.elu": [[33, 35], ["tensorflow.nn.elu"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.elu"], ["", "def", "elu", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "elu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.xavier_init": [[37, 41], ["tensorflow.random_normal", "numpy.sqrt"], "function", ["None"], ["", "def", "xavier_init", "(", "size", ")", ":", "\n", "    ", "input_dim", "=", "size", "[", "0", "]", "\n", "stddev", "=", "1.", "/", "np", ".", "sqrt", "(", "input_dim", "/", "2.", ")", "\n", "return", "tf", ".", "random_normal", "(", "shape", "=", "size", ",", "stddev", "=", "stddev", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.he_init": [[43, 54], ["tensorflow.sqrt", "tensorflow.random_uniform", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "def", "he_init", "(", "size", ",", "stride", ")", ":", "\n", "    ", "input_dim", "=", "size", "[", "2", "]", "\n", "output_dim", "=", "size", "[", "3", "]", "\n", "filter_size", "=", "size", "[", "0", "]", "\n", "\n", "fan_in", "=", "input_dim", "*", "filter_size", "**", "2", "\n", "fan_out", "=", "output_dim", "*", "filter_size", "**", "2", "/", "(", "stride", "**", "2", ")", "\n", "stddev", "=", "tf", ".", "sqrt", "(", "4.", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "minval", "=", "-", "stddev", "*", "np", ".", "sqrt", "(", "3", ")", "\n", "maxval", "=", "stddev", "*", "np", ".", "sqrt", "(", "3", ")", "\n", "return", "tf", ".", "random_uniform", "(", "shape", "=", "size", ",", "minval", "=", "minval", ",", "maxval", "=", "maxval", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.train_atsc": [[415, 464], ["keras.datasets.cifar10.load_data", "zip", "numpy.random.randint", "block_3d.tensor_block_3d", "numpy.shape", "atsc.Atsc", "tensorflow.Session", "tensorflow.global_variables_initializer", "tf.Session.run", "tensorflow.train.get_checkpoint_state", "range", "tf.Session.close", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "len", "tensorflow.train.Saver", "tf.train.Saver.restore", "print", "numpy.random.randint", "block_3d.tensor_block_3d", "atsc.Atsc.train", "train_data.append", "len", "tensorflow.train.Saver", "tf.train.Saver.save", "print", "atsc.Atsc.save_img", "str().zfill", "x.astype", "str"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.train", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.save_img"], ["", "", "def", "train_atsc", "(", ")", ":", "\n", "    ", "(", "x_train", ",", "y_train", ")", ",", "(", "_", ",", "_", ")", "=", "keras", ".", "datasets", ".", "cifar10", ".", "load_data", "(", ")", "\n", "train_data", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "zip", "(", "x_train", ",", "y_train", ")", ":", "\n", "        ", "if", "y", "==", "1", ":", "\n", "            ", "train_data", ".", "append", "(", "(", "x", ".", "astype", "(", "np", ".", "float32", ")", "-", "127.5", ")", "/", "127.5", ")", "\n", "\n", "# train_data = (train_data.astype(np.float32) - 127.5) / 127.5", "\n", "# X = sio.loadmat('./samples/balloons_101_101_31.mat')['Omsi']", "\n", "# X_s = np.zeros([32, 32, 16])", "\n", "# for i in range(16):", "\n", "#     X_s[:,:,i] = transform.resize(X[:,:,i], (32, 32))", "\n", "# X = X_s", "\n", "", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./out/'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./out/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./backup/'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./backup/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./backup/latest/'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./backup/latest/'", ")", "\n", "# Atsc.save_img(X, './out/origin.png')", "\n", "\n", "", "index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "train_data", ")", ")", "\n", "X", "=", "train_data", "[", "index", "]", "\n", "X_p", "=", "tensor_block_3d", "(", "X", ")", "\n", "m", ",", "n", ",", "k", "=", "np", ".", "shape", "(", "X_p", ")", "\n", "atsc", "=", "Atsc", "(", "m", ",", "n", ",", "k", ")", "\n", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init", ")", "\n", "if", "tf", ".", "train", ".", "get_checkpoint_state", "(", "'./backup/latest/'", ")", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "'./backup/latest/'", ")", "\n", "print", "(", "'********Restore the latest trained parameters.********'", ")", "\n", "\n", "", "for", "step", "in", "range", "(", "100000", ")", ":", "\n", "\n", "        ", "index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "train_data", ")", ")", "\n", "X", "=", "train_data", "[", "index", "]", "\n", "X_p", "=", "tensor_block_3d", "(", "X", ")", "\n", "\n", "loss", ",", "X_recon", "=", "atsc", ".", "train", "(", "sess", ",", "X", ",", "X_p", ",", "1", ")", "\n", "if", "step", "%", "100", "==", "0", ":", "\n", "            ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "save", "(", "sess", ",", "'./backup/latest/'", ",", "write_meta_graph", "=", "False", ")", "\n", "print", "(", "'step:{}, loss:{}'", ".", "format", "(", "step", ",", "loss", ")", ")", "\n", "Atsc", ".", "save_img", "(", "X_recon", ",", "'./out/atsc_{}.png'", ".", "format", "(", "str", "(", "step", ")", ".", "zfill", "(", "8", ")", ")", ")", "\n", "\n", "", "", "sess", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.atsc.eval_atsc": [[465, 525], ["keras.datasets.cifar10.load_data", "zip", "numpy.random.randint", "block_3d.tensor_block_3d", "numpy.shape", "atsc.Atsc", "tensorflow.placeholder", "tensorflow.assign", "tensorflow.Session", "tensorflow.global_variables_initializer", "tf.Session.run", "tensorflow.train.get_checkpoint_state", "numpy.random.randint", "block_3d.tensor_block_3d", "atsc.Atsc.save_img", "tf.Session.run", "tf.Session.run", "numpy.random.randint", "block_3d.tensor_block_3d", "atsc.Atsc.save_img", "tf.Session.run", "tf.Session.run", "tf.Session.run", "tf.Session.run", "block_3d.block_3d_tensor", "atsc.Atsc.save_img", "tf.Session.close", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "len", "tensorflow.train.Saver", "tf.train.Saver.restore", "print", "len", "len", "numpy.shape", "train_data.append", "x.astype"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.save_img", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.save_img", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.block_3d_tensor", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.save_img"], ["", "def", "eval_atsc", "(", ")", ":", "\n", "    ", "(", "x_train", ",", "y_train", ")", ",", "(", "_", ",", "_", ")", "=", "keras", ".", "datasets", ".", "cifar10", ".", "load_data", "(", ")", "\n", "train_data", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "zip", "(", "x_train", ",", "y_train", ")", ":", "\n", "        ", "if", "y", "==", "1", ":", "\n", "            ", "train_data", ".", "append", "(", "(", "x", ".", "astype", "(", "np", ".", "float32", ")", "-", "127.5", ")", "/", "127.5", ")", "\n", "\n", "# train_data = (train_data.astype(np.float32) - 127.5) / 127.5", "\n", "# X = sio.loadmat('./samples/balloons_101_101_31.mat')['Omsi']", "\n", "# X_s = np.zeros([32, 32, 16])", "\n", "# for i in range(16):", "\n", "#     X_s[:,:,i] = transform.resize(X[:,:,i], (32, 32))", "\n", "# X = X_s", "\n", "", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./eval/'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./eval/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./backup/'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./backup/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./backup/latest/'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./backup/latest/'", ")", "\n", "\n", "", "index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "train_data", ")", ")", "\n", "X", "=", "train_data", "[", "index", "]", "\n", "X_p", "=", "tensor_block_3d", "(", "X", ")", "\n", "m", ",", "n", ",", "k", "=", "np", ".", "shape", "(", "X_p", ")", "\n", "atsc", "=", "Atsc", "(", "m", ",", "n", ",", "k", ")", "\n", "C_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "params", ".", "r", ",", "n", ",", "k", "]", ")", "\n", "C_assign", "=", "tf", ".", "assign", "(", "atsc", ".", "C", ",", "C_input", ")", "\n", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init", ")", "\n", "if", "tf", ".", "train", ".", "get_checkpoint_state", "(", "'./backup/latest/'", ")", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "'./backup/latest/'", ")", "\n", "print", "(", "'********Restore the latest trained parameters.********'", ")", "\n", "\n", "", "index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "train_data", ")", ")", "\n", "X", "=", "train_data", "[", "index", "]", "\n", "X_p", "=", "tensor_block_3d", "(", "X", ")", "\n", "Atsc", ".", "save_img", "(", "X", ",", "'eval/img1.png'", ")", "\n", "C1", "=", "sess", ".", "run", "(", "atsc", ".", "C_tsta", ",", "feed_dict", "=", "{", "atsc", ".", "X_p", ":", "X_p", "}", ")", "\n", "C1", "=", "sess", ".", "run", "(", "atsc", ".", "C", ")", "\n", "\n", "index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "train_data", ")", ")", "\n", "X", "=", "train_data", "[", "index", "]", "\n", "X_p", "=", "tensor_block_3d", "(", "X", ")", "\n", "Atsc", ".", "save_img", "(", "X", ",", "'eval/img2.png'", ")", "\n", "C2", "=", "sess", ".", "run", "(", "atsc", ".", "C_tsta", ",", "feed_dict", "=", "{", "atsc", ".", "X_p", ":", "X_p", "}", ")", "\n", "C2", "=", "sess", ".", "run", "(", "atsc", ".", "C", ")", "\n", "\n", "C3", "=", "(", "C1", ")", "\n", "\n", "sess", ".", "run", "(", "C_assign", ",", "feed_dict", "=", "{", "C_input", ":", "C3", "}", ")", "\n", "\n", "X_p_recon", "=", "sess", ".", "run", "(", "atsc", ".", "X_p_recon", ")", "\n", "X_recon", "=", "block_3d_tensor", "(", "X_p_recon", ",", "np", ".", "shape", "(", "X", ")", ")", "\n", "\n", "Atsc", ".", "save_img", "(", "X_recon", ",", "'eval/recon.png'", ")", "\n", "\n", "sess", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.__init__": [[20, 44], ["tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tdsc.Tdsc.tensor_tsta", "tdsc.Tdsc.tensor_dl", "tensorflow.contrib.opt.ScipyOptimizerInterface", "tdsc.Tdsc.tensor_tsta", "tdsc.Tdsc.tensor_product", "tdsc.Tdsc.init_D", "numpy.zeros", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_tsta", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_dl", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_tsta", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.init_D"], ["    ", "def", "__init__", "(", "self", ",", "m", ",", "n", ",", "k", ")", ":", "\n", "# size of X: m x n x k", "\n", "# size of D: m x r x k", "\n", "# size of C: r x n x k", "\n", "        ", "self", ".", "m", "=", "m", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "k", "=", "k", "\n", "# self.X_p = tf.placeholder(tf.float32, [batch_size, m, n, k])", "\n", "self", ".", "X_p", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "m", ",", "n", ",", "k", "]", ")", "\n", "self", ".", "D", "=", "tf", ".", "Variable", "(", "self", ".", "init_D", "(", "params", ".", "patch_size", ",", "params", ".", "r", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "C", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "[", "params", ".", "r", ",", "n", ",", "k", "]", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "dual_lambda", "=", "tf", ".", "Variable", "(", "np", ".", "random", ".", "rand", "(", "params", ".", "r", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "# tensor sparse coding", "\n", "self", ".", "C_assign", "=", "self", ".", "tensor_tsta", "(", "self", ".", "X_p", ",", "self", ".", "D", ",", "self", ".", "C", ")", "\n", "\n", "# tensor dictionry learning", "\n", "self", ".", "dl_loss", ",", "self", ".", "D_assign", "=", "self", ".", "tensor_dl", "(", "self", ".", "X_p", ",", "self", ".", "C", ",", "self", ".", "dual_lambda", ")", "\n", "self", ".", "dl_opt", "=", "tf", ".", "contrib", ".", "opt", ".", "ScipyOptimizerInterface", "(", "\n", "self", ".", "dl_loss", ",", "method", "=", "'L-BFGS-B'", ",", "var_to_bounds", "=", "{", "self", ".", "dual_lambda", ":", "(", "0", ",", "np", ".", "infty", ")", "}", ")", "\n", "\n", "# X reconstruction", "\n", "self", ".", "C_assign", "=", "self", ".", "tensor_tsta", "(", "self", ".", "X_p", ",", "self", ".", "D", ",", "self", ".", "C", ")", "\n", "self", ".", "X_p_recon", "=", "self", ".", "tensor_product", "(", "self", ".", "D", ",", "''", ",", "self", ".", "C", ",", "''", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.tensor_dl": [[45, 76], ["tdsc.Tdsc.fft", "tdsc.Tdsc.fft", "tensorflow.matrix_diag", "tensorflow.complex", "tensorflow.concat", "tensorflow.real", "tensorflow.where", "tensorflow.assign", "tensorflow.complex", "tensorflow.complex", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.zeros", "sum", "sum", "tdsc.Tdsc.ifft", "tensorflow.is_nan", "tensorflow.zeros_like", "tensorflow.real", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.split", "tensorflow.split", "tensorflow.transpose", "tensorflow.transpose", "zip", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.shape", "tensorflow.shape", "tensorflow.trace", "tensorflow.trace", "tensorflow.transpose", "zip", "tensorflow.matmul", "zip", "tensorflow.matmul", "zip", "tensorflow.matmul", "tdsc.Tdsc.pinv", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose", "tdsc.Tdsc.pinv", "tensorflow.transpose", "tensorflow.transpose", "tdsc.Tdsc.pinv"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv"], ["", "def", "tensor_dl", "(", "self", ",", "X_p", ",", "C", ",", "dual_lambda", ")", ":", "\n", "        ", "X_p_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "X_p", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "X_p", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "C_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "C", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "C", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "x_hat_list", "=", "[", "tf", ".", "squeeze", "(", "x", ")", "for", "x", "in", "tf", ".", "split", "(", "X_p_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "c_hat_list", "=", "[", "tf", ".", "squeeze", "(", "c", ")", "for", "c", "in", "tf", ".", "split", "(", "C_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "\n", "cc_hat_list", "=", "[", "tf", ".", "matmul", "(", "c_hat", ",", "tf", ".", "transpose", "(", "c_hat", ")", ")", "for", "c_hat", "in", "c_hat_list", "]", "\n", "xc_hat_list", "=", "[", "tf", ".", "matmul", "(", "x_hat", ",", "tf", ".", "transpose", "(", "c_hat", ")", ")", "for", "(", "x_hat", ",", "c_hat", ")", "\n", "in", "zip", "(", "x_hat_list", ",", "c_hat_list", ")", "]", "\n", "\n", "lambda_diag", "=", "tf", ".", "matrix_diag", "(", "dual_lambda", ")", "\n", "lambda_mat", "=", "tf", ".", "complex", "(", "lambda_diag", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "lambda_diag", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", "\n", "\n", "if", "self", ".", "m", ">", "params", ".", "r", ":", "\n", "            ", "f", "=", "sum", "(", "[", "tf", ".", "trace", "(", "tf", ".", "matmul", "(", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ",", "\n", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "xc_hat", ")", ",", "xc_hat", ")", ")", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "f", "=", "sum", "(", "[", "tf", ".", "trace", "(", "tf", ".", "matmul", "(", "tf", ".", "matmul", "(", "xc_hat", ",", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ")", ",", "\n", "tf", ".", "transpose", "(", "xc_hat", ")", ")", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ")", "\n", "\n", "", "D_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "transpose", "(", "tf", ".", "matmul", "(", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ",", "\n", "tf", ".", "transpose", "(", "xc_hat", ")", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "D_", "=", "tf", ".", "real", "(", "self", ".", "ifft", "(", "D_hat", ")", ")", "\n", "D", "=", "tf", ".", "where", "(", "tf", ".", "is_nan", "(", "D_", ")", ",", "tf", ".", "zeros_like", "(", "D_", ")", ",", "D_", ")", "\n", "D_assign", "=", "tf", ".", "assign", "(", "self", ".", "D", ",", "D", ")", "\n", "min_obj", "=", "tf", ".", "real", "(", "f", ")", "+", "self", ".", "k", "*", "tf", ".", "reduce_sum", "(", "dual_lambda", ")", "\n", "return", "min_obj", ",", "D_assign", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.tensor_tsta": [[77, 102], ["tdsc.Tdsc.tensor_product", "tdsc.Tdsc.norm", "tdsc.Tdsc.tensor_product", "range", "tensorflow.assign", "tensorflow.multiply", "tdsc.Tdsc.tensor_product", "tensorflow.sign", "tensorflow.maximum", "tensorflow.scalar_mul", "numpy.sqrt", "tensorflow.abs"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product"], ["", "def", "tensor_tsta", "(", "self", ",", "X_p", ",", "D", ",", "C", ")", ":", "\n", "        ", "C0", "=", "C", "\n", "\n", "DD", "=", "self", ".", "tensor_product", "(", "D", ",", "'t'", ",", "D", ",", "''", ")", "\n", "# DD_cmat = blk_circ_mat(DD)", "\n", "# l0 = tf.norm(DD_cmat, 2)", "\n", "l0", "=", "self", ".", "norm", "(", "DD", ")", "\n", "DX", "=", "self", ".", "tensor_product", "(", "D", ",", "'t'", ",", "X_p", ",", "''", ")", "\n", "\n", "J1", "=", "C0", "\n", "t1", "=", "1", "\n", "\n", "for", "i", "in", "range", "(", "params", ".", "tsta_max_iter", ")", ":", "\n", "            ", "l1", "=", "params", ".", "eta", "**", "i", "*", "l0", "\n", "grad_J1", "=", "self", ".", "tensor_product", "(", "DD", ",", "'t'", ",", "J1", ",", "''", ")", "-", "DX", "\n", "temp", "=", "J1", "-", "grad_J1", "/", "l1", "# tf.divide(x, y)", "\n", "C1", "=", "tf", ".", "multiply", "(", "tf", ".", "sign", "(", "temp", ")", ",", "tf", ".", "maximum", "(", "tf", ".", "abs", "(", "temp", ")", "-", "params", ".", "beta", "/", "l1", ",", "0", ")", ")", "\n", "t2", "=", "(", "1", "+", "np", ".", "sqrt", "(", "1", "+", "4", "*", "t1", "**", "2", ")", ")", "/", "2", "\n", "J1", "=", "C1", "+", "tf", ".", "scalar_mul", "(", "(", "t1", "-", "1", ")", "/", "t2", ",", "(", "C1", "-", "C0", ")", ")", "\n", "C0", "=", "C1", "\n", "t1", "=", "t2", "\n", "\n", "", "C_assign", "=", "tf", ".", "assign", "(", "self", ".", "C", ",", "C1", ")", "\n", "\n", "return", "C_assign", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.tensor_product": [[103, 123], ["tdsc.Tdsc.fft", "tdsc.Tdsc.fft", "tensorflow.real", "tensorflow.complex", "tensorflow.complex", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.concat", "tdsc.Tdsc.ifft", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.split", "tensorflow.split", "tensorflow.concat", "tensorflow.shape", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.concat", "tensorflow.concat", "tensorflow.matmul", "zip", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.matmul", "zip", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.matmul", "zip", "tensorflow.matmul", "zip", "tensorflow.transpose"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft"], ["", "def", "tensor_product", "(", "self", ",", "P", ",", "ch1", ",", "Q", ",", "ch2", ")", ":", "\n", "        ", "P_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "P", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "P", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "Q_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "Q", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "Q", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "p_hat_list", "=", "[", "tf", ".", "squeeze", "(", "p", ")", "for", "p", "in", "tf", ".", "split", "(", "P_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "q_hat_list", "=", "[", "tf", ".", "squeeze", "(", "q", ")", "for", "q", "in", "tf", ".", "split", "(", "Q_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "\n", "if", "ch1", "==", "'t'", "and", "ch2", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "p_hat", ")", ",", "tf", ".", "transpose", "(", "q_hat", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "ch1", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "p_hat", ")", ",", "q_hat", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "ch2", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "p_hat", ",", "tf", ".", "transpose", "(", "q_hat", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "p_hat", ",", "q_hat", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "", "return", "tf", ".", "real", "(", "self", ".", "ifft", "(", "S_hat", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.train": [[124, 144], ["range", "time.time", "print", "sess.run", "tdsc.Tdsc.dl_opt.minimize", "sess.run", "sess.run", "sess.run", "block_3d.block_3d_tensor", "time.time", "print", "numpy.shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.block_3d_tensor"], ["", "def", "train", "(", "self", ",", "sess", ",", "X", ",", "X_p", ",", "iter_num", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "iter_num", ")", ":", "\n", "            ", "time_start", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Iteration: {} / {}'", ".", "format", "(", "i", ",", "iter_num", ")", ")", "\n", "\n", "# compute tensor coefficients C", "\n", "sess", ".", "run", "(", "self", ".", "C_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "# compute tensor dictionary D", "\n", "self", ".", "dl_opt", ".", "minimize", "(", "sess", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "sess", ".", "run", "(", "self", ".", "D_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "# recover input tensor X", "\n", "sess", ".", "run", "(", "self", ".", "C_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "X_p_recon", "=", "sess", ".", "run", "(", "self", ".", "X_p_recon", ")", "\n", "X_recon", "=", "block_3d_tensor", "(", "X_p_recon", ",", "np", ".", "shape", "(", "X", ")", ")", "\n", "\n", "time_end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'time:'", ",", "time_end", "-", "time_start", ",", "'s'", ")", "\n", "", "return", "X_recon", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.pinv_svd": [[145, 155], ["tensorflow.svd", "tensorflow.greater", "tensorflow.where", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_max", "tensorflow.reciprocal", "tensorflow.zeros", "tensorflow.complex", "tensorflow.matrix_diag", "tensorflow.zeros", "tensorflow.shape", "tensorflow.matrix_diag"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "pinv_svd", "(", "a", ",", "rcond", "=", "1e-15", ")", ":", "\n", "        ", "s", ",", "u", ",", "v", "=", "tf", ".", "svd", "(", "a", ")", "\n", "# Ignore singular values close to zero to prevent numerical overflow", "\n", "limit", "=", "rcond", "*", "tf", ".", "reduce_max", "(", "s", ")", "\n", "non_zero", "=", "tf", ".", "greater", "(", "s", ",", "limit", ")", "\n", "\n", "reciprocal", "=", "tf", ".", "where", "(", "non_zero", ",", "tf", ".", "reciprocal", "(", "s", ")", ",", "tf", ".", "zeros", "(", "s", ".", "shape", ")", ")", "\n", "lhs", "=", "tf", ".", "matmul", "(", "v", ",", "tf", ".", "complex", "(", "tf", ".", "matrix_diag", "(", "reciprocal", ")", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "tf", ".", "matrix_diag", "(", "reciprocal", ")", ")", ")", ")", ")", "\n", "return", "tf", ".", "matmul", "(", "lhs", ",", "u", ",", "transpose_b", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.pinv": [[156, 161], ["tensorflow.py_func", "numpy.linalg.pinv().astype", "numpy.linalg.pinv"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv"], ["", "@", "staticmethod", "\n", "def", "pinv", "(", "a", ")", ":", "\n", "        ", "def", "np_pinv", "(", "a", ")", ":", "\n", "            ", "return", "np", ".", "linalg", ".", "pinv", "(", "a", ")", ".", "astype", "(", "np", ".", "complex64", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_pinv", ",", "[", "a", "]", ",", "tf", ".", "complex64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.fft": [[162, 167], ["tensorflow.py_func", "numpy.fft.fft().astype", "numpy.fft.fft"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft"], ["", "@", "staticmethod", "\n", "def", "fft", "(", "a", ")", ":", "\n", "        ", "def", "np_fft", "(", "a", ")", ":", "\n", "            ", "return", "np", ".", "fft", ".", "fft", "(", "a", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "complex64", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_fft", ",", "[", "a", "]", ",", "tf", ".", "complex64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.ifft": [[168, 173], ["tensorflow.py_func", "numpy.fft.ifft().astype", "numpy.fft.ifft"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft"], ["", "@", "staticmethod", "\n", "def", "ifft", "(", "a", ")", ":", "\n", "        ", "def", "np_ifft", "(", "a", ")", ":", "\n", "            ", "return", "np", ".", "fft", ".", "ifft", "(", "a", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "complex64", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_ifft", ",", "[", "a", "]", ",", "tf", ".", "complex64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.norm": [[174, 187], ["tensorflow.py_func", "numpy.shape", "numpy.zeros", "numpy.reshape", "range", "numpy.linalg.norm().astype", "numpy.transpose", "numpy.roll", "numpy.linalg.norm"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm"], ["", "@", "staticmethod", "\n", "def", "norm", "(", "A", ")", ":", "\n", "        ", "def", "blk_circ_mat_norm", "(", "A", ")", ":", "\n", "            ", "sz_A", "=", "np", ".", "shape", "(", "A", ")", "\n", "dim", "=", "[", "0", ",", "0", "]", "\n", "dim", "[", "0", "]", "=", "sz_A", "[", "0", "]", "*", "sz_A", "[", "2", "]", "\n", "dim", "[", "1", "]", "=", "sz_A", "[", "1", "]", "*", "sz_A", "[", "2", "]", "\n", "A_c", "=", "np", ".", "zeros", "(", "dim", ")", "\n", "A_mat", "=", "np", ".", "reshape", "(", "np", ".", "transpose", "(", "A", ",", "[", "0", ",", "2", ",", "1", "]", ")", ",", "[", "dim", "[", "0", "]", ",", "sz_A", "[", "1", "]", "]", ",", "order", "=", "'F'", ")", "\n", "for", "k", "in", "range", "(", "sz_A", "[", "2", "]", ")", ":", "\n", "                ", "A_c", "[", ":", ",", "k", "*", "sz_A", "[", "1", "]", ":", "(", "k", "+", "1", ")", "*", "sz_A", "[", "1", "]", "]", "=", "np", ".", "roll", "(", "A_mat", ",", "k", "*", "sz_A", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "", "return", "np", ".", "linalg", ".", "norm", "(", "A_c", ",", "2", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "return", "tf", ".", "py_func", "(", "blk_circ_mat_norm", ",", "[", "A", "]", ",", "tf", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.init_D": [[188, 197], ["numpy.sqrt", "range", "numpy.transpose", "numpy.sum", "numpy.reshape", "numpy.random.rand", "numpy.square"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "init_D", "(", "patch_size", ",", "r", ")", ":", "\n", "        ", "D_mat", "=", "np", ".", "random", ".", "rand", "(", "patch_size", "**", "3", ",", "r", ")", "*", "2", "-", "1", "\n", "D_mat_sum", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "D_mat", ")", ",", "axis", "=", "0", ")", ")", "\n", "for", "i", "in", "range", "(", "D_mat_sum", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "D_mat", "[", ":", ",", "i", "]", "/=", "D_mat_sum", "[", "i", "]", "\n", "", "D", "=", "np", ".", "transpose", "(", "np", ".", "reshape", "(", "\n", "D_mat", ",", "[", "patch_size", "**", "2", ",", "patch_size", ",", "params", ".", "r", "]", ",", "order", "=", "'F'", ")", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "return", "D", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.tdsc.Tdsc.save_img": [[198, 209], ["matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.axis", "plt.figure.add_subplot.set_xticklabels", "plt.figure.add_subplot.set_yticklabels", "plt.figure.add_subplot.set_aspect", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "save_img", "(", "img", ",", "file_name", ")", ":", "\n", "        ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "5", ",", "15", ")", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "img", ",", "cmap", "=", "'Greys_r'", ")", "\n", "plt", ".", "savefig", "(", "file_name", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.block_3d.tensor_block_3d": [[10, 27], ["numpy.shape", "int", "numpy.zeros", "range", "numpy.transpose", "range", "numpy.reshape", "range", "numpy.floor", "numpy.reshape", "numpy.floor", "numpy.floor"], "function", ["None"], ["def", "tensor_block_3d", "(", "X", ")", ":", "\n", "    ", "size", "=", "np", ".", "shape", "(", "X", ")", "\n", "psize", "=", "params", ".", "patch_size", "\n", "step", "=", "params", ".", "step", "\n", "total_patch_num", "=", "int", "(", "(", "np", ".", "floor", "(", "(", "size", "[", "0", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "*", "(", "np", ".", "floor", "(", "(", "size", "[", "1", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "*", "(", "np", ".", "floor", "(", "(", "size", "[", "2", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", ")", "\n", "Z", "=", "np", ".", "zeros", "(", "[", "psize", ",", "psize", ",", "psize", ",", "total_patch_num", "]", ")", "\n", "for", "i", "in", "range", "(", "psize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "psize", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "psize", ")", ":", "\n", "                ", "patch", "=", "X", "[", "i", ":", "size", "[", "0", "]", "-", "psize", "+", "i", "+", "1", ",", "j", ":", "size", "[", "1", "]", "-", "psize", "+", "j", "+", "1", ",", "k", ":", "size", "[", "2", "]", "-", "psize", "+", "k", "+", "1", "]", "[", ":", ":", "step", ",", ":", ":", "step", ",", ":", ":", "step", "]", "\n", "Z", "[", "i", ",", "j", ",", "k", ",", ":", "]", "=", "np", ".", "reshape", "(", "patch", ",", "[", "1", ",", "total_patch_num", "]", ",", "order", "=", "'F'", ")", "\n", "\n", "", "", "", "X_p", "=", "np", ".", "transpose", "(", "np", ".", "reshape", "(", "Z", ",", "[", "psize", "**", "2", ",", "psize", ",", "total_patch_num", "]", ",", "order", "=", "'F'", ")", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "\n", "return", "X_p", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.ATSC.block_3d.block_3d_tensor": [[29, 53], ["int", "int", "int", "numpy.zeros", "numpy.zeros", "numpy.reshape", "range", "numpy.transpose", "range", "numpy.floor", "numpy.floor", "numpy.floor", "range", "numpy.shape", "numpy.shape", "numpy.reshape", "numpy.ones"], "function", ["None"], ["", "def", "block_3d_tensor", "(", "X_p", ",", "size", ")", ":", "\n", "    ", "psize", "=", "params", ".", "patch_size", "\n", "step", "=", "params", ".", "step", "\n", "len_r", "=", "int", "(", "np", ".", "floor", "(", "(", "size", "[", "0", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "\n", "len_c", "=", "int", "(", "np", ".", "floor", "(", "(", "size", "[", "1", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "\n", "len_s", "=", "int", "(", "np", ".", "floor", "(", "(", "size", "[", "2", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "\n", "X", "=", "np", ".", "zeros", "(", "size", ")", "\n", "W", "=", "np", ".", "zeros", "(", "size", ")", "\n", "\n", "Z_p", "=", "np", ".", "reshape", "(", "np", ".", "transpose", "(", "X_p", ",", "[", "0", ",", "2", ",", "1", "]", ")", ",", "[", "psize", ",", "psize", ",", "psize", ",", "np", ".", "shape", "(", "X_p", ")", "[", "1", "]", "]", ",", "order", "=", "'F'", ")", "\n", "\n", "for", "i", "in", "range", "(", "psize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "psize", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "psize", ")", ":", "\n", "                ", "shape", "=", "np", ".", "shape", "(", "X", "[", "i", ":", "(", "len_r", "-", "1", ")", "*", "step", "+", "i", "+", "1", ",", "j", ":", "(", "len_c", "-", "1", ")", "*", "step", "+", "j", "+", "1", ",", "k", ":", "(", "len_s", "-", "1", ")", "*", "step", "+", "k", "+", "1", "]", "[", ":", ":", "step", ",", ":", ":", "step", ",", ":", ":", "step", "]", ")", "\n", "X", "[", "i", ":", "(", "len_r", "-", "1", ")", "*", "step", "+", "i", "+", "1", ",", "j", ":", "(", "len_c", "-", "1", ")", "*", "step", "+", "j", "+", "1", ",", "k", ":", "(", "len_s", "-", "1", ")", "*", "step", "+", "k", "+", "1", "]", "[", ":", ":", "step", ",", ":", ":", "step", ",", ":", ":", "step", "]", "+=", "np", ".", "reshape", "(", "Z_p", "[", "i", ",", "j", ",", "k", ",", ":", "]", ",", "shape", ",", "order", "=", "'F'", ")", "\n", "W", "[", "i", ":", "(", "len_r", "-", "1", ")", "*", "step", "+", "i", "+", "1", ",", "j", ":", "(", "len_c", "-", "1", ")", "*", "step", "+", "j", "+", "1", ",", "k", ":", "(", "len_s", "-", "1", ")", "*", "step", "+", "k", "+", "1", "]", "[", ":", ":", "step", ",", ":", ":", "step", ",", ":", ":", "step", "]", "+=", "np", ".", "ones", "(", "shape", ")", "\n", "\n", "", "", "", "X", "=", "X", "/", "W", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.ConvWganGpCifar10.__init__": [[44, 167], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "conv_wgan_gp_cifar10.ConvWganGpCifar10._generator", "conv_wgan_gp_cifar10.ConvWganGpCifar10._discriminator", "conv_wgan_gp_cifar10.ConvWganGpCifar10._discriminator", "conv_wgan_gp_cifar10.ConvWganGpCifar10.downscale", "tensorflow.random_uniform", "tensorflow.sqrt", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.gradients", "tensorflow.reduce_sum", "conv_wgan_gp_cifar10.xavier_init", "tensorflow.zeros", "conv_wgan_gp_cifar10.he_init", "tensorflow.zeros", "conv_wgan_gp_cifar10.he_init", "tensorflow.zeros", "conv_wgan_gp_cifar10.he_init", "tensorflow.zeros", "conv_wgan_gp_cifar10.he_init", "tensorflow.zeros", "conv_wgan_gp_cifar10.he_init", "tensorflow.zeros", "conv_wgan_gp_cifar10.he_init", "tensorflow.zeros", "conv_wgan_gp_cifar10.xavier_init", "tensorflow.zeros", "tensorflow.reduce_mean", "conv_wgan_gp_cifar10.ConvWganGpCifar10._discriminator", "tensorflow.square", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._generator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.downscale", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.xavier_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.xavier_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator"], ["    ", "def", "__init__", "(", "self", ",", "batch_size", ",", "z_shape", ",", "\n", "step_num", ",", "learning_rate", ",", "LAMBDA", ",", "DIM", ")", ":", "\n", "\n", "        ", "self", ".", "z_shape", "=", "z_shape", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "step_num", "=", "step_num", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "DIM", "=", "DIM", "\n", "self", ".", "LAMBDA", "=", "LAMBDA", "\n", "\n", "self", ".", "z", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "z_shape", "]", ",", "name", "=", "'z'", ")", "\n", "self", ".", "xv", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "32", ",", "32", ",", "3", "]", ",", "name", "=", "'xv'", ")", "\n", "self", ".", "x", "=", "tf", ".", "reshape", "(", "self", ".", "xv", ",", "[", "-", "1", ",", "3072", "]", ",", "name", "=", "'x'", ")", "\n", "\n", "# Generator", "\n", "with", "tf", ".", "variable_scope", "(", "'Generator'", ")", ":", "\n", "            ", "self", ".", "G_W1", "=", "tf", ".", "Variable", "(", "\n", "xavier_init", "(", "size", "=", "[", "self", ".", "z_shape", ",", "4", "*", "4", "*", "4", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'mlp_W1'", "\n", ")", "\n", "self", ".", "G_b1", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "4", "*", "4", "*", "4", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'mlp_b1'", "\n", ")", "\n", "\n", "self", ".", "G_W2", "=", "tf", ".", "Variable", "(", "\n", "he_init", "(", "[", "5", ",", "5", ",", "2", "*", "self", ".", "DIM", ",", "4", "*", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'deconv_W2'", "\n", ")", "\n", "self", ".", "G_b2", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "2", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'deconv_b2'", "\n", ")", "\n", "self", ".", "G_W3", "=", "tf", ".", "Variable", "(", "\n", "he_init", "(", "[", "5", ",", "5", ",", "self", ".", "DIM", ",", "2", "*", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'deconv_W3'", "\n", ")", "\n", "self", ".", "G_b3", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'deconv_b3'", "\n", ")", "\n", "self", ".", "G_W4", "=", "tf", ".", "Variable", "(", "\n", "he_init", "(", "[", "5", ",", "5", ",", "3", ",", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'deconv_W4'", "\n", ")", "\n", "self", ".", "G_b4", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "1", "]", ")", ",", "\n", "name", "=", "'deconv_b4'", "\n", ")", "\n", "self", ".", "params_gen", "=", "[", "\n", "self", ".", "G_W1", ",", "self", ".", "G_b1", ",", "\n", "self", ".", "G_W2", ",", "self", ".", "G_b2", ",", "\n", "self", ".", "G_W3", ",", "self", ".", "G_b3", ",", "\n", "self", ".", "G_W4", ",", "self", ".", "G_b4", "\n", "]", "\n", "\n", "# Discriminator", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discriminator'", ")", ":", "\n", "            ", "self", ".", "D_W1", "=", "tf", ".", "Variable", "(", "he_init", "(", "[", "5", ",", "5", ",", "3", ",", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'conv_W1'", "\n", ")", "\n", "self", ".", "D_b1", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "[", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'conv_b1'", "\n", ")", "\n", "self", ".", "D_W2", "=", "tf", ".", "Variable", "(", "he_init", "(", "[", "5", ",", "5", ",", "self", ".", "DIM", ",", "2", "*", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'conv_W2'", "\n", ")", "\n", "self", ".", "D_b2", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "[", "2", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'conv_b2'", "\n", ")", "\n", "self", ".", "D_W3", "=", "tf", ".", "Variable", "(", "he_init", "(", "[", "5", ",", "5", ",", "2", "*", "self", ".", "DIM", ",", "4", "*", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'conv_W3'", "\n", ")", "\n", "self", ".", "D_b3", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "[", "4", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'conv_b3'", "\n", ")", "\n", "self", ".", "D_W4", "=", "tf", ".", "Variable", "(", "\n", "xavier_init", "(", "[", "4", "*", "4", "*", "4", "*", "self", ".", "DIM", ",", "1", "]", ")", ",", "\n", "name", "=", "'mlp_W4'", "\n", ")", "\n", "self", ".", "D_b4", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "1", "]", ")", ",", "\n", "name", "=", "'mlp_b4'", "\n", ")", "\n", "\n", "self", ".", "params_dis", "=", "[", "\n", "self", ".", "D_W1", ",", "self", ".", "D_b1", ",", "\n", "self", ".", "D_W2", ",", "self", ".", "D_b2", ",", "\n", "self", ".", "D_W3", ",", "self", ".", "D_b3", ",", "\n", "self", ".", "D_W4", ",", "self", ".", "D_b4", "\n", "]", "\n", "", "self", ".", "g", "=", "self", ".", "_generator", "(", "self", ".", "z", ")", "\n", "self", ".", "D_real", "=", "self", ".", "_discriminator", "(", "self", ".", "x", ")", "\n", "self", ".", "D_fake", "=", "self", ".", "_discriminator", "(", "self", ".", "g", ")", "\n", "self", ".", "gm", "=", "self", ".", "downscale", "(", "tf", ".", "reshape", "(", "self", ".", "g", ",", "(", "-", "1", ",", "32", ",", "32", ",", "3", ")", ")", ",", "2", ")", "\n", "\n", "self", ".", "loss_dis", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "D_real", ")", "+", "tf", ".", "reduce_mean", "(", "self", ".", "D_fake", ")", "\n", "self", ".", "loss_gen", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "D_fake", ")", "\n", "\n", "alpha", "=", "tf", ".", "random_uniform", "(", "\n", "shape", "=", "[", "self", ".", "batch_size", ",", "1", "]", ",", "\n", "minval", "=", "0.", ",", "\n", "maxval", "=", "1.", "\n", ")", "\n", "\n", "differences", "=", "self", ".", "g", "-", "self", ".", "x", "\n", "interpolates", "=", "self", ".", "x", "+", "alpha", "*", "differences", "\n", "gradients", "=", "tf", ".", "gradients", "(", "self", ".", "_discriminator", "(", "interpolates", ")", ",", "[", "interpolates", "]", ")", "[", "0", "]", "\n", "slopes", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "gradients", ")", ",", "reduction_indices", "=", "[", "1", "]", ")", ")", "\n", "gradient_penalty", "=", "tf", ".", "reduce_mean", "(", "(", "slopes", "-", "1.", ")", "**", "2", ")", "\n", "\n", "self", ".", "loss_dis", "+=", "self", ".", "LAMBDA", "*", "gradient_penalty", "\n", "\n", "self", ".", "opt_dis", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", "=", "self", ".", "learning_rate", ",", "\n", "beta1", "=", "0.5", ",", "\n", "beta2", "=", "0.9", "\n", ")", ".", "minimize", "(", "self", ".", "loss_dis", ",", "var_list", "=", "self", ".", "params_dis", ")", "\n", "self", ".", "opt_gen", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", "=", "self", ".", "learning_rate", ",", "\n", "beta1", "=", "0.5", ",", "\n", "beta2", "=", "0.9", "\n", ")", ".", "minimize", "(", "self", ".", "loss_gen", ",", "var_list", "=", "self", ".", "params_gen", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.ConvWganGpCifar10._generator": [[168, 212], ["conv_wgan_gp_cifar10.lrelu", "tensorflow.reshape", "tensorflow.shape", "conv_wgan_gp_cifar10.lrelu", "tensorflow.shape", "conv_wgan_gp_cifar10.lrelu", "tensorflow.shape", "tensorflow.nn.sigmoid", "tensorflow.reshape", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.matmul", "tensorflow.nn.conv2d_transpose", "tensorflow.nn.conv2d_transpose", "tensorflow.nn.conv2d_transpose", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu"], ["", "def", "_generator", "(", "self", ",", "z", ")", ":", "\n", "        ", "current_input", "=", "z", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "current_input", ",", "self", ".", "G_W1", ")", ",", "self", ".", "G_b1", ")", ")", "\n", "current_output", "=", "tf", ".", "reshape", "(", "current_output", ",", "[", "-", "1", ",", "4", ",", "4", ",", "4", "*", "self", ".", "DIM", "]", ")", "\n", "\n", "current_shape", "=", "tf", ".", "shape", "(", "current_output", ")", "\n", "# shape (4,4,256)", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d_transpose", "(", "\n", "value", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "G_W2", ",", "\n", "output_shape", "=", "tf", ".", "stack", "(", "\n", "[", "current_shape", "[", "0", "]", ",", "2", "*", "current_shape", "[", "1", "]", ",", "2", "*", "current_shape", "[", "2", "]", ",", "2", "*", "self", ".", "DIM", "]", "\n", ")", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "G_b2", ")", "\n", ")", "\n", "# shape (8,8,128)", "\n", "current_shape", "=", "tf", ".", "shape", "(", "current_output", ")", "\n", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d_transpose", "(", "\n", "value", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "G_W3", ",", "\n", "output_shape", "=", "tf", ".", "stack", "(", "\n", "[", "current_shape", "[", "0", "]", ",", "2", "*", "current_shape", "[", "1", "]", ",", "2", "*", "current_shape", "[", "2", "]", ",", "self", ".", "DIM", "]", "\n", ")", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "G_b3", ")", "\n", ")", "\n", "# shape (16,16,64)", "\n", "\n", "current_shape", "=", "tf", ".", "shape", "(", "current_output", ")", "\n", "current_output", "=", "tf", ".", "nn", ".", "sigmoid", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d_transpose", "(", "\n", "value", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "G_W4", ",", "\n", "output_shape", "=", "tf", ".", "stack", "(", "\n", "[", "current_shape", "[", "0", "]", ",", "2", "*", "current_shape", "[", "1", "]", ",", "2", "*", "current_shape", "[", "2", "]", ",", "3", "]", "\n", ")", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "G_b4", ")", "\n", ")", "\n", "return", "tf", ".", "reshape", "(", "current_output", ",", "[", "-", "1", ",", "32", "*", "32", "*", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.ConvWganGpCifar10._discriminator": [[213, 244], ["tensorflow.reshape", "conv_wgan_gp_cifar10.lrelu", "conv_wgan_gp_cifar10.lrelu", "conv_wgan_gp_cifar10.lrelu", "tensorflow.reshape", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.matmul", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d"], ["", "def", "_discriminator", "(", "self", ",", "x", ")", ":", "\n", "        ", "current_input", "=", "tf", ".", "reshape", "(", "x", ",", "[", "-", "1", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d", "(", "\n", "input", "=", "current_input", ",", "\n", "filter", "=", "self", ".", "D_W1", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "D_b1", ")", "\n", ")", "\n", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d", "(", "\n", "input", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "D_W2", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "D_b2", ")", "\n", ")", "\n", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d", "(", "\n", "input", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "D_W3", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "D_b3", ")", "\n", ")", "\n", "\n", "current_output", "=", "tf", ".", "reshape", "(", "current_output", ",", "[", "-", "1", ",", "4", "*", "4", "*", "4", "*", "self", ".", "DIM", "]", ")", "\n", "current_output", "=", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "current_output", ",", "self", ".", "D_W4", ")", ",", "self", ".", "D_b4", ")", "\n", "\n", "return", "current_output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.ConvWganGpCifar10.downscale": [[245, 251], ["numpy.zeros", "range", "tensorflow.constant", "tensorflow.nn.conv2d", "x.get_shape().as_list", "x.get_shape().as_list", "x.get_shape().as_list", "x.get_shape", "x.get_shape", "x.get_shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d"], ["", "def", "downscale", "(", "self", ",", "x", ",", "K", ")", ":", "\n", "        ", "mat", "=", "np", ".", "zeros", "(", "[", "K", ",", "K", ",", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", ",", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "]", ")", "\n", "for", "i", "in", "range", "(", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", ")", ":", "\n", "            ", "mat", "[", ":", ",", ":", ",", "i", ",", "i", "]", "=", "1.0", "/", "K", "**", "2", "\n", "", "filter", "=", "tf", ".", "constant", "(", "mat", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "filter", ",", "strides", "=", "[", "1", ",", "K", ",", "K", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.ConvWganGpCifar10._display": [[252, 265], ["matplotlib.figure", "matplotlib.figure", "matplotlib.GridSpec", "matplotlib.GridSpec", "matplotlib.GridSpec.update", "enumerate", "matplotlib.subplot", "matplotlib.subplot", "matplotlib.axis", "matplotlib.axis", "matplotlib.subplot.set_xticklabels", "matplotlib.subplot.set_yticklabels", "matplotlib.subplot.set_aspect", "matplotlib.imshow", "matplotlib.imshow", "numpy.squeeze"], "methods", ["None"], ["", "def", "_display", "(", "self", ",", "gs", ")", ":", "\n", "\n", "        ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "4", ",", "4", ")", ")", "\n", "graph", "=", "gridspec", ".", "GridSpec", "(", "4", ",", "4", ")", "\n", "graph", ".", "update", "(", "wspace", "=", "0.05", ",", "hspace", "=", "0.05", ")", "\n", "for", "i", ",", "sample", "in", "enumerate", "(", "gs", ")", ":", "\n", "            ", "ax", "=", "plt", ".", "subplot", "(", "graph", "[", "i", "]", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "np", ".", "squeeze", "(", "sample", ")", ",", "cmap", "=", "'Greys_r'", ")", "\n", "", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.ConvWganGpCifar10.train": [[266, 314], ["keras.datasets.cifar10.load_data", "range", "tensorflow.Session", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.train.Saver", "range", "tensorflow.Session.close", "numpy.array", "os.path.exists", "os.makedirs", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "range", "numpy.random.randint", "conv_wgan_gp_cifar10.sample_z", "tensorflow.Session.run", "data.append", "numpy.random.randint", "conv_wgan_gp_cifar10.sample_z", "tensorflow.Session.run", "print", "conv_wgan_gp_cifar10.sample_z", "tensorflow.Session.run", "conv_wgan_gp_cifar10.ConvWganGpCifar10._display", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "tensorflow.train.Saver.save", "str().zfill", "str"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.sample_z", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.sample_z", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.sample_z", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._display"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "(", "x_train", ",", "y_train", ")", ",", "(", "_", ",", "_", ")", "=", "keras", ".", "datasets", ".", "cifar10", ".", "load_data", "(", ")", "\n", "data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "x_train", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "y_train", "[", "i", "]", "==", "1", ":", "\n", "                ", "data", ".", "append", "(", "x_train", "[", "i", "]", ")", "\n", "", "", "data", "=", "np", ".", "array", "(", "data", ")", "/", "255.", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "\n", "disp_step_num", "=", "100", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'out/'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'out/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./backup/'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'./backup/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./backup/cifar10/'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'./backup/cifar10/'", ")", "\n", "\n", "", "for", "step", "in", "range", "(", "self", ".", "step_num", ")", ":", "\n", "            ", "for", "_", "in", "range", "(", "5", ")", ":", "\n", "                ", "indices", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "data", ".", "shape", "[", "0", "]", ",", "batch_size", ")", "\n", "xs", "=", "data", "[", "indices", "]", "\n", "zs", "=", "sample_z", "(", "self", ".", "batch_size", ",", "self", ".", "z_shape", ")", "\n", "_", ",", "l_dis", "=", "sess", ".", "run", "(", "\n", "[", "self", ".", "opt_dis", ",", "self", ".", "loss_dis", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "z", ":", "zs", ",", "self", ".", "xv", ":", "xs", "}", "\n", ")", "\n", "\n", "", "indices", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "data", ".", "shape", "[", "0", "]", ",", "batch_size", ")", "\n", "xs", "=", "data", "[", "indices", "]", "\n", "zs", "=", "sample_z", "(", "self", ".", "batch_size", ",", "self", ".", "z_shape", ")", "\n", "_", ",", "l_gen", "=", "sess", ".", "run", "(", "[", "self", ".", "opt_gen", ",", "self", ".", "loss_gen", "]", ",", "feed_dict", "=", "{", "self", ".", "z", ":", "zs", ",", "self", ".", "xv", ":", "xs", "}", ")", "\n", "\n", "if", "step", "%", "100", "==", "0", ":", "\n", "                ", "print", "(", "'Step: {}, loss_dis = {:.5}, loss_gen = {:.5}'", ".", "format", "(", "step", ",", "l_dis", ",", "l_gen", ")", ")", "\n", "", "if", "step", "%", "disp_step_num", "==", "0", ":", "\n", "                ", "zs", "=", "sample_z", "(", "16", ",", "self", ".", "z_shape", ")", "\n", "gms", "=", "sess", ".", "run", "(", "self", ".", "gm", ",", "feed_dict", "=", "{", "self", ".", "z", ":", "zs", "}", ")", "\n", "fig", "=", "self", ".", "_display", "(", "gms", ")", "\n", "plt", ".", "savefig", "(", "'out/{}.png'", ".", "format", "(", "str", "(", "step", ")", ".", "zfill", "(", "6", ")", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "", "if", "step", "%", "500", "==", "0", ":", "\n", "                ", "saver", ".", "save", "(", "sess", ",", "'./backup/cifar10/'", ",", "write_meta_graph", "=", "False", ")", "\n", "\n", "", "", "sess", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.lrelu": [[14, 16], ["tensorflow.maximum"], "function", ["None"], ["def", "lrelu", "(", "x", ",", "alpha", "=", "0.2", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "alpha", "*", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.xavier_init": [[18, 22], ["tensorflow.random_normal", "tensorflow.sqrt"], "function", ["None"], ["", "def", "xavier_init", "(", "size", ")", ":", "\n", "    ", "in_dim", "=", "size", "[", "0", "]", "\n", "stddev", "=", "1.", "/", "tf", ".", "sqrt", "(", "in_dim", "/", "2.", ")", "\n", "return", "tf", ".", "random_normal", "(", "shape", "=", "size", ",", "stddev", "=", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.he_init": [[24, 36], ["tensorflow.sqrt", "tensorflow.random_uniform", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "def", "he_init", "(", "size", ",", "stride", ")", ":", "\n", "    ", "input_dim", "=", "size", "[", "2", "]", "\n", "output_dim", "=", "size", "[", "3", "]", "\n", "filter_size", "=", "size", "[", "0", "]", "\n", "\n", "fan_in", "=", "input_dim", "*", "filter_size", "**", "2", "\n", "fan_out", "=", "output_dim", "*", "filter_size", "**", "2", "/", "(", "stride", "**", "2", ")", "\n", "stddev", "=", "tf", ".", "sqrt", "(", "4.", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "minval", "=", "-", "stddev", "*", "np", ".", "sqrt", "(", "3", ")", "\n", "maxval", "=", "stddev", "*", "np", ".", "sqrt", "(", "3", ")", "\n", "\n", "return", "tf", ".", "random_uniform", "(", "shape", "=", "size", ",", "minval", "=", "minval", ",", "maxval", "=", "maxval", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_cifar10.sample_z": [[38, 40], ["numpy.random.uniform"], "function", ["None"], ["", "def", "sample_z", "(", "m", ",", "n", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "uniform", "(", "-", "1.", ",", "1.", ",", "size", "=", "[", "m", ",", "n", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.gen_test_data.mnist": [[15, 55], ["conv_wgan_gp_mnist.ConvWganGpMnist", "tensorflow.Session", "tensorflow.global_variables_initializer", "tf.Session.run", "tensorflow.train.Saver", "tensorflow.train.get_checkpoint_state", "conv_wgan_gp_mnist.sample_z", "tf.Session.run", "numpy.zeros", "range", "scipy.savemat", "tf.train.Saver.restore", "print", "Exception", "range", "skimage.transform.resize", "numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.sample_z"], ["def", "mnist", "(", ")", ":", "\n", "    ", "n_samples", "=", "32", "\n", "n_slice", "=", "7", "\n", "n_step", "=", "1", "\n", "img_shape", "=", "(", "28", ",", "28", ",", "1", ")", "\n", "\n", "learning_rate", "=", "1e-4", "\n", "LAMBDA", "=", "10", "\n", "step_num", "=", "100000", "\n", "batch_size", "=", "32", "\n", "\n", "g", "=", "ConvWganGpMnist", "(", "\n", "z_shape", "=", "100", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "step_num", "=", "step_num", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "LAMBDA", "=", "LAMBDA", ",", "\n", "DIM", "=", "64", "\n", ")", "\n", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "\n", "if", "tf", ".", "train", ".", "get_checkpoint_state", "(", "'./backup/mnist/'", ")", ":", "\n", "        ", "saver", ".", "restore", "(", "sess", ",", "'./backup/mnist/'", ")", "\n", "print", "(", "'********Restore the latest trained parameters.********'", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Model does not exist!'", ")", "\n", "\n", "", "zs", "=", "sample_z", "(", "n_samples", ",", "g", ".", "z_shape", ")", "\n", "gms", "=", "sess", ".", "run", "(", "g", ".", "gm", ",", "feed_dict", "=", "{", "g", ".", "z", ":", "zs", "}", ")", "\n", "datas", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "img_shape", "[", "0", "]", ",", "img_shape", "[", "1", "]", ",", "n_slice", ")", ")", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "n_slice", ")", ":", "\n", "            ", "data", "=", "transform", ".", "resize", "(", "np", ".", "squeeze", "(", "gms", "[", "i", "]", ")", ",", "(", "img_shape", "[", "0", "]", ",", "img_shape", "[", "1", "]", ")", ")", "\n", "datas", "[", "i", ",", ":", ",", "0", ":", "(", "img_shape", "[", "0", "]", "-", "n_slice", "+", "n_step", "*", "k", ")", ",", "k", "]", "=", "data", "[", ":", ",", "(", "n_slice", "-", "n_step", "*", "k", ")", ":", "img_shape", "[", "1", "]", "]", "\n", "\n", "", "", "sio", ".", "savemat", "(", "'./data/mnist_test_14_14_7.mat'", ",", "{", "'YY'", ":", "datas", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.gen_test_data.cifar10": [[56, 96], ["conv_wgan_gp_cifar10.ConvWganGpCifar10", "tensorflow.Session", "tensorflow.global_variables_initializer", "tf.Session.run", "tensorflow.train.Saver", "tensorflow.train.get_checkpoint_state", "conv_wgan_gp_mnist.sample_z", "tf.Session.run", "numpy.zeros", "range", "scipy.savemat", "tf.train.Saver.restore", "print", "Exception", "range", "skimage.transform.resize", "numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.sample_z"], ["", "def", "cifar10", "(", ")", ":", "\n", "    ", "n_samples", "=", "32", "\n", "n_slice", "=", "9", "\n", "n_step", "=", "1", "\n", "img_shape", "=", "(", "32", ",", "32", ",", "3", ")", "\n", "\n", "learning_rate", "=", "1e-4", "\n", "LAMBDA", "=", "10", "\n", "step_num", "=", "100000", "\n", "batch_size", "=", "32", "\n", "\n", "g", "=", "ConvWganGpCifar10", "(", "\n", "z_shape", "=", "100", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "step_num", "=", "step_num", ",", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "LAMBDA", "=", "LAMBDA", ",", "\n", "DIM", "=", "64", "\n", ")", "\n", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "\n", "if", "tf", ".", "train", ".", "get_checkpoint_state", "(", "'./backup/cifar10/'", ")", ":", "\n", "        ", "saver", ".", "restore", "(", "sess", ",", "'./backup/cifar10/'", ")", "\n", "print", "(", "'********Restore the latest trained parameters.********'", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Model does not exist!'", ")", "\n", "\n", "", "zs", "=", "sample_z", "(", "n_samples", ",", "g", ".", "z_shape", ")", "\n", "gms", "=", "sess", ".", "run", "(", "g", ".", "gm", ",", "feed_dict", "=", "{", "g", ".", "z", ":", "zs", "}", ")", "\n", "datas", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "img_shape", "[", "0", "]", ",", "img_shape", "[", "1", "]", ",", "n_slice", ")", ")", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "n_slice", "//", "3", ")", ":", "\n", "            ", "data", "=", "transform", ".", "resize", "(", "np", ".", "squeeze", "(", "gms", "[", "i", "]", ")", ",", "(", "img_shape", "[", "0", "]", ",", "img_shape", "[", "1", "]", ")", ")", "\n", "datas", "[", "i", ",", ":", ",", ":", ",", "(", "k", "*", "3", ")", ":", "(", "(", "k", "+", "1", ")", "*", "3", ")", "]", "=", "data", "\n", "\n", "", "", "sio", ".", "savemat", "(", "'./data/cifar10_test_16_16_9.mat'", ",", "{", "'YY'", ":", "datas", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist.__init__": [[43, 165], ["tensorflow.placeholder", "tensorflow.placeholder", "conv_wgan_gp_mnist.ConvWganGpMnist._generator", "conv_wgan_gp_mnist.ConvWganGpMnist._discriminator", "conv_wgan_gp_mnist.ConvWganGpMnist._discriminator", "conv_wgan_gp_mnist.ConvWganGpMnist.downscale", "tensorflow.random_uniform", "tensorflow.sqrt", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.variable_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.gradients", "tensorflow.reduce_sum", "conv_wgan_gp_mnist.xavier_init", "tensorflow.zeros", "conv_wgan_gp_mnist.he_init", "tensorflow.zeros", "conv_wgan_gp_mnist.he_init", "tensorflow.zeros", "conv_wgan_gp_mnist.he_init", "tensorflow.zeros", "conv_wgan_gp_mnist.he_init", "tensorflow.zeros", "conv_wgan_gp_mnist.he_init", "tensorflow.zeros", "conv_wgan_gp_mnist.he_init", "tensorflow.zeros", "conv_wgan_gp_mnist.xavier_init", "tensorflow.zeros", "tensorflow.reduce_mean", "conv_wgan_gp_mnist.ConvWganGpMnist._discriminator", "tensorflow.square", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._generator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.downscale", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.xavier_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.xavier_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator"], ["    ", "def", "__init__", "(", "self", ",", "batch_size", ",", "z_shape", ",", "\n", "step_num", ",", "learning_rate", ",", "LAMBDA", ",", "DIM", ")", ":", "\n", "\n", "        ", "self", ".", "z_shape", "=", "z_shape", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "step_num", "=", "step_num", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "DIM", "=", "DIM", "\n", "self", ".", "LAMBDA", "=", "LAMBDA", "\n", "\n", "self", ".", "z", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "z_shape", "]", ",", "name", "=", "'z'", ")", "\n", "self", ".", "x", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "784", "]", ",", "name", "=", "'x'", ")", "\n", "\n", "# Generator", "\n", "with", "tf", ".", "variable_scope", "(", "'Generator'", ")", ":", "\n", "            ", "self", ".", "G_W1", "=", "tf", ".", "Variable", "(", "\n", "xavier_init", "(", "size", "=", "[", "self", ".", "z_shape", ",", "4", "*", "4", "*", "4", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'mlp_W1'", "\n", ")", "\n", "self", ".", "G_b1", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "4", "*", "4", "*", "4", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'mlp_b1'", "\n", ")", "\n", "\n", "self", ".", "G_W2", "=", "tf", ".", "Variable", "(", "\n", "he_init", "(", "[", "5", ",", "5", ",", "2", "*", "self", ".", "DIM", ",", "4", "*", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'deconv_W2'", "\n", ")", "\n", "self", ".", "G_b2", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "2", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'deconv_b2'", "\n", ")", "\n", "self", ".", "G_W3", "=", "tf", ".", "Variable", "(", "\n", "he_init", "(", "[", "5", ",", "5", ",", "self", ".", "DIM", ",", "2", "*", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'deconv_W3'", "\n", ")", "\n", "self", ".", "G_b3", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'deconv_b3'", "\n", ")", "\n", "self", ".", "G_W4", "=", "tf", ".", "Variable", "(", "\n", "he_init", "(", "[", "5", ",", "5", ",", "1", ",", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'deconv_W4'", "\n", ")", "\n", "self", ".", "G_b4", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "1", "]", ")", ",", "\n", "name", "=", "'deconv_b4'", "\n", ")", "\n", "self", ".", "params_gen", "=", "[", "\n", "self", ".", "G_W1", ",", "self", ".", "G_b1", ",", "\n", "self", ".", "G_W2", ",", "self", ".", "G_b2", ",", "\n", "self", ".", "G_W3", ",", "self", ".", "G_b3", ",", "\n", "self", ".", "G_W4", ",", "self", ".", "G_b4", "\n", "]", "\n", "\n", "# Discriminator", "\n", "", "with", "tf", ".", "variable_scope", "(", "'Discriminator'", ")", ":", "\n", "            ", "self", ".", "D_W1", "=", "tf", ".", "Variable", "(", "he_init", "(", "[", "5", ",", "5", ",", "1", ",", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'conv_W1'", "\n", ")", "\n", "self", ".", "D_b1", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "[", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'conv_b1'", "\n", ")", "\n", "self", ".", "D_W2", "=", "tf", ".", "Variable", "(", "he_init", "(", "[", "5", ",", "5", ",", "self", ".", "DIM", ",", "2", "*", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'conv_W2'", "\n", ")", "\n", "self", ".", "D_b2", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "[", "2", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'conv_b2'", "\n", ")", "\n", "self", ".", "D_W3", "=", "tf", ".", "Variable", "(", "he_init", "(", "[", "5", ",", "5", ",", "2", "*", "self", ".", "DIM", ",", "4", "*", "self", ".", "DIM", "]", ",", "2", ")", ",", "\n", "name", "=", "'conv_W3'", "\n", ")", "\n", "self", ".", "D_b3", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "[", "4", "*", "self", ".", "DIM", "]", ")", ",", "\n", "name", "=", "'conv_b3'", "\n", ")", "\n", "self", ".", "D_W4", "=", "tf", ".", "Variable", "(", "\n", "xavier_init", "(", "[", "4", "*", "4", "*", "4", "*", "self", ".", "DIM", ",", "1", "]", ")", ",", "\n", "name", "=", "'mlp_W4'", "\n", ")", "\n", "self", ".", "D_b4", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros", "(", "[", "1", "]", ")", ",", "\n", "name", "=", "'mlp_b4'", "\n", ")", "\n", "\n", "self", ".", "params_dis", "=", "[", "\n", "self", ".", "D_W1", ",", "self", ".", "D_b1", ",", "\n", "self", ".", "D_W2", ",", "self", ".", "D_b2", ",", "\n", "self", ".", "D_W3", ",", "self", ".", "D_b3", ",", "\n", "self", ".", "D_W4", ",", "self", ".", "D_b4", "\n", "]", "\n", "", "self", ".", "g", "=", "self", ".", "_generator", "(", "self", ".", "z", ")", "\n", "self", ".", "D_real", "=", "self", ".", "_discriminator", "(", "self", ".", "x", ")", "\n", "self", ".", "D_fake", "=", "self", ".", "_discriminator", "(", "self", ".", "g", ")", "\n", "self", ".", "gm", "=", "self", ".", "downscale", "(", "tf", ".", "reshape", "(", "self", ".", "g", ",", "(", "-", "1", ",", "28", ",", "28", ",", "1", ")", ")", ",", "2", ")", "\n", "\n", "self", ".", "loss_dis", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "D_real", ")", "+", "tf", ".", "reduce_mean", "(", "self", ".", "D_fake", ")", "\n", "self", ".", "loss_gen", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "D_fake", ")", "\n", "\n", "alpha", "=", "tf", ".", "random_uniform", "(", "\n", "shape", "=", "[", "self", ".", "batch_size", ",", "1", "]", ",", "\n", "minval", "=", "0.", ",", "\n", "maxval", "=", "1.", "\n", ")", "\n", "\n", "differences", "=", "self", ".", "g", "-", "self", ".", "x", "\n", "interpolates", "=", "self", ".", "x", "+", "alpha", "*", "differences", "\n", "gradients", "=", "tf", ".", "gradients", "(", "self", ".", "_discriminator", "(", "interpolates", ")", ",", "[", "interpolates", "]", ")", "[", "0", "]", "\n", "slopes", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "gradients", ")", ",", "reduction_indices", "=", "[", "1", "]", ")", ")", "\n", "gradient_penalty", "=", "tf", ".", "reduce_mean", "(", "(", "slopes", "-", "1.", ")", "**", "2", ")", "\n", "\n", "self", ".", "loss_dis", "+=", "self", ".", "LAMBDA", "*", "gradient_penalty", "\n", "\n", "self", ".", "opt_dis", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", "=", "self", ".", "learning_rate", ",", "\n", "beta1", "=", "0.5", ",", "\n", "beta2", "=", "0.9", "\n", ")", ".", "minimize", "(", "self", ".", "loss_dis", ",", "var_list", "=", "self", ".", "params_dis", ")", "\n", "self", ".", "opt_gen", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", "=", "self", ".", "learning_rate", ",", "\n", "beta1", "=", "0.5", ",", "\n", "beta2", "=", "0.9", "\n", ")", ".", "minimize", "(", "self", ".", "loss_gen", ",", "var_list", "=", "self", ".", "params_gen", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._generator": [[166, 213], ["conv_wgan_gp_mnist.lrelu", "tensorflow.reshape", "tensorflow.shape", "conv_wgan_gp_mnist.lrelu", "tensorflow.shape", "conv_wgan_gp_mnist.lrelu", "tensorflow.shape", "tensorflow.nn.sigmoid", "tensorflow.reshape", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.matmul", "tensorflow.nn.conv2d_transpose", "tensorflow.nn.conv2d_transpose", "tensorflow.nn.conv2d_transpose", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu"], ["", "def", "_generator", "(", "self", ",", "z", ")", ":", "\n", "        ", "current_input", "=", "z", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "current_input", ",", "self", ".", "G_W1", ")", ",", "self", ".", "G_b1", ")", ")", "\n", "current_output", "=", "tf", ".", "reshape", "(", "current_output", ",", "[", "-", "1", ",", "4", ",", "4", ",", "4", "*", "self", ".", "DIM", "]", ")", "\n", "\n", "current_shape", "=", "tf", ".", "shape", "(", "current_output", ")", "\n", "# shape (4,4,256)", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d_transpose", "(", "\n", "value", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "G_W2", ",", "\n", "output_shape", "=", "tf", ".", "stack", "(", "\n", "[", "current_shape", "[", "0", "]", ",", "2", "*", "current_shape", "[", "1", "]", ",", "2", "*", "current_shape", "[", "2", "]", ",", "2", "*", "self", ".", "DIM", "]", "\n", ")", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "G_b2", ")", "\n", ")", "\n", "# shape (8,8,128)", "\n", "current_output", "=", "current_output", "[", ":", ",", ":", "7", ",", ":", "7", ",", ":", "]", "\n", "current_shape", "=", "tf", ".", "shape", "(", "current_output", ")", "\n", "# shape (7,7,128)", "\n", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d_transpose", "(", "\n", "value", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "G_W3", ",", "\n", "output_shape", "=", "tf", ".", "stack", "(", "\n", "[", "current_shape", "[", "0", "]", ",", "2", "*", "current_shape", "[", "1", "]", ",", "2", "*", "current_shape", "[", "2", "]", ",", "self", ".", "DIM", "]", "\n", ")", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "G_b3", ")", "\n", ")", "\n", "# shape (14,14,64)", "\n", "\n", "current_shape", "=", "tf", ".", "shape", "(", "current_output", ")", "\n", "current_output", "=", "tf", ".", "nn", ".", "sigmoid", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d_transpose", "(", "\n", "value", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "G_W4", ",", "\n", "output_shape", "=", "tf", ".", "stack", "(", "\n", "[", "current_shape", "[", "0", "]", ",", "2", "*", "current_shape", "[", "1", "]", ",", "2", "*", "current_shape", "[", "2", "]", ",", "1", "]", "\n", ")", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "G_b4", ")", "\n", ")", "\n", "# shape (28,28,1)", "\n", "return", "tf", ".", "reshape", "(", "current_output", ",", "[", "-", "1", ",", "784", "]", ")", "\n", "# reshape to one-hot vector", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._discriminator": [[215, 247], ["tensorflow.reshape", "conv_wgan_gp_mnist.lrelu", "conv_wgan_gp_mnist.lrelu", "conv_wgan_gp_mnist.lrelu", "tensorflow.reshape", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.matmul", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d"], ["", "def", "_discriminator", "(", "self", ",", "x", ")", ":", "\n", "        ", "current_input", "=", "tf", ".", "reshape", "(", "x", ",", "[", "-", "1", ",", "28", ",", "28", ",", "1", "]", ")", "\n", "# reshape to (28,28,1) image", "\n", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d", "(", "\n", "input", "=", "current_input", ",", "\n", "filter", "=", "self", ".", "D_W1", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "D_b1", ")", "\n", ")", "\n", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d", "(", "\n", "input", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "D_W2", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "D_b2", ")", "\n", ")", "\n", "\n", "current_output", "=", "lrelu", "(", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d", "(", "\n", "input", "=", "current_output", ",", "\n", "filter", "=", "self", ".", "D_W3", ",", "\n", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", "\n", ")", ",", "self", ".", "D_b3", ")", "\n", ")", "\n", "\n", "current_output", "=", "tf", ".", "reshape", "(", "current_output", ",", "[", "-", "1", ",", "4", "*", "4", "*", "4", "*", "self", ".", "DIM", "]", ")", "\n", "current_output", "=", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "current_output", ",", "self", ".", "D_W4", ")", ",", "self", ".", "D_b4", ")", "\n", "\n", "return", "current_output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist.downscale": [[248, 254], ["numpy.zeros", "range", "tensorflow.constant", "tensorflow.nn.conv2d", "x.get_shape().as_list", "x.get_shape().as_list", "x.get_shape().as_list", "x.get_shape", "x.get_shape", "x.get_shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d"], ["", "def", "downscale", "(", "self", ",", "x", ",", "K", ")", ":", "\n", "        ", "mat", "=", "np", ".", "zeros", "(", "[", "K", ",", "K", ",", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", ",", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "]", ")", "\n", "for", "i", "in", "range", "(", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", ")", ":", "\n", "            ", "mat", "[", ":", ",", ":", ",", "i", ",", "i", "]", "=", "1.0", "/", "K", "**", "2", "\n", "", "filter", "=", "tf", ".", "constant", "(", "mat", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "filter", ",", "strides", "=", "[", "1", ",", "K", ",", "K", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._display": [[255, 268], ["matplotlib.figure", "matplotlib.figure", "matplotlib.GridSpec", "matplotlib.GridSpec", "matplotlib.GridSpec.update", "enumerate", "matplotlib.subplot", "matplotlib.subplot", "matplotlib.axis", "matplotlib.axis", "matplotlib.subplot.set_xticklabels", "matplotlib.subplot.set_yticklabels", "matplotlib.subplot.set_aspect", "matplotlib.imshow", "matplotlib.imshow", "numpy.squeeze"], "methods", ["None"], ["", "def", "_display", "(", "self", ",", "gs", ")", ":", "\n", "\n", "        ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "4", ",", "4", ")", ")", "\n", "graph", "=", "gridspec", ".", "GridSpec", "(", "4", ",", "4", ")", "\n", "graph", ".", "update", "(", "wspace", "=", "0.05", ",", "hspace", "=", "0.05", ")", "\n", "for", "i", ",", "sample", "in", "enumerate", "(", "gs", ")", ":", "\n", "            ", "ax", "=", "plt", ".", "subplot", "(", "graph", "[", "i", "]", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "np", ".", "squeeze", "(", "sample", ")", ",", "cmap", "=", "'Greys_r'", ")", "\n", "", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist.train": [[269, 311], ["input_data.read_data_sets", "tensorflow.Session", "tensorflow.global_variables_initializer", "tensorflow.Session.run", "tensorflow.train.Saver", "range", "tensorflow.Session.close", "os.path.exists", "os.makedirs", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "range", "input_data.read_data_sets.train.next_batch", "conv_wgan_gp_mnist.sample_z", "tensorflow.Session.run", "input_data.read_data_sets.train.next_batch", "conv_wgan_gp_mnist.sample_z", "tensorflow.Session.run", "print", "conv_wgan_gp_mnist.sample_z", "tensorflow.Session.run", "conv_wgan_gp_mnist.ConvWganGpMnist._display", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "tensorflow.train.Saver.save", "str().zfill", "str"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.sample_z", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.sample_z", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.sample_z", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.ConvWganGpMnist._display"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "from", "tensorflow", ".", "examples", ".", "tutorials", ".", "mnist", "import", "input_data", "\n", "data", "=", "input_data", ".", "read_data_sets", "(", "\"MNIST_data\"", ",", "one_hot", "=", "True", ")", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "\n", "disp_step_num", "=", "100", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'out/'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'out/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./backup/'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'./backup/'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'./backup/mnist/'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'./backup/mnist/'", ")", "\n", "\n", "", "for", "step", "in", "range", "(", "self", ".", "step_num", ")", ":", "\n", "            ", "for", "_", "in", "range", "(", "5", ")", ":", "\n", "                ", "xs", ",", "ys", "=", "data", ".", "train", ".", "next_batch", "(", "batch_size", ")", "\n", "zs", "=", "sample_z", "(", "self", ".", "batch_size", ",", "self", ".", "z_shape", ")", "\n", "_", ",", "l_dis", "=", "sess", ".", "run", "(", "\n", "[", "self", ".", "opt_dis", ",", "self", ".", "loss_dis", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "z", ":", "zs", ",", "self", ".", "x", ":", "xs", "}", "\n", ")", "\n", "\n", "", "xs", ",", "ys", "=", "data", ".", "train", ".", "next_batch", "(", "batch_size", ")", "\n", "zs", "=", "sample_z", "(", "self", ".", "batch_size", ",", "self", ".", "z_shape", ")", "\n", "_", ",", "l_gen", "=", "sess", ".", "run", "(", "[", "self", ".", "opt_gen", ",", "self", ".", "loss_gen", "]", ",", "feed_dict", "=", "{", "self", ".", "z", ":", "zs", ",", "self", ".", "x", ":", "xs", "}", ")", "\n", "\n", "if", "step", "%", "100", "==", "0", ":", "\n", "                ", "print", "(", "'Step: {}, loss_dis = {:.5}, loss_gen = {:.5}'", ".", "format", "(", "step", ",", "l_dis", ",", "l_gen", ")", ")", "\n", "", "if", "step", "%", "disp_step_num", "==", "0", ":", "\n", "                ", "zs", "=", "sample_z", "(", "16", ",", "self", ".", "z_shape", ")", "\n", "gms", "=", "sess", ".", "run", "(", "self", ".", "gm", ",", "feed_dict", "=", "{", "self", ".", "z", ":", "zs", "}", ")", "\n", "fig", "=", "self", ".", "_display", "(", "gms", ")", "\n", "plt", ".", "savefig", "(", "'out/{}.png'", ".", "format", "(", "str", "(", "step", ")", ".", "zfill", "(", "6", ")", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "", "if", "step", "%", "500", "==", "0", ":", "\n", "                ", "saver", ".", "save", "(", "sess", ",", "'./backup/mnist/'", ",", "write_meta_graph", "=", "False", ")", "\n", "\n", "", "", "sess", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.lrelu": [[13, 15], ["tensorflow.maximum"], "function", ["None"], ["def", "lrelu", "(", "x", ",", "alpha", "=", "0.2", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "alpha", "*", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.xavier_init": [[17, 21], ["tensorflow.random_normal", "tensorflow.sqrt"], "function", ["None"], ["", "def", "xavier_init", "(", "size", ")", ":", "\n", "    ", "in_dim", "=", "size", "[", "0", "]", "\n", "stddev", "=", "1.", "/", "tf", ".", "sqrt", "(", "in_dim", "/", "2.", ")", "\n", "return", "tf", ".", "random_normal", "(", "shape", "=", "size", ",", "stddev", "=", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.he_init": [[23, 35], ["tensorflow.sqrt", "tensorflow.random_uniform", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "def", "he_init", "(", "size", ",", "stride", ")", ":", "\n", "    ", "input_dim", "=", "size", "[", "2", "]", "\n", "output_dim", "=", "size", "[", "3", "]", "\n", "filter_size", "=", "size", "[", "0", "]", "\n", "\n", "fan_in", "=", "input_dim", "*", "filter_size", "**", "2", "\n", "fan_out", "=", "output_dim", "*", "filter_size", "**", "2", "/", "(", "stride", "**", "2", ")", "\n", "stddev", "=", "tf", ".", "sqrt", "(", "4.", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "minval", "=", "-", "stddev", "*", "np", ".", "sqrt", "(", "3", ")", "\n", "maxval", "=", "stddev", "*", "np", ".", "sqrt", "(", "3", ")", "\n", "\n", "return", "tf", ".", "random_uniform", "(", "shape", "=", "size", ",", "minval", "=", "minval", ",", "maxval", "=", "maxval", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.conv_wgan_gp_mnist.sample_z": [[37, 39], ["numpy.random.uniform"], "function", ["None"], ["", "def", "sample_z", "(", "m", ",", "n", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "uniform", "(", "-", "1.", ",", "1.", ",", "size", "=", "[", "m", ",", "n", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.draw_pic.mnist": [[12, 28], ["matplotlib.figure", "matplotlib.GridSpec", "gridspec.GridSpec.update", "enumerate", "matplotlib.savefig", "matplotlib.close", "scipy.loadmat", "matplotlib.subplot", "matplotlib.axis", "plt.subplot.set_xticklabels", "plt.subplot.set_yticklabels", "plt.subplot.set_aspect", "matplotlib.imshow", "numpy.squeeze"], "function", ["None"], ["def", "mnist", "(", ")", ":", "\n", "    ", "row", ",", "col", "=", "4", ",", "8", "\n", "data", "=", "sio", ".", "loadmat", "(", "'./data/mnist_results.mat'", ")", "[", "'res'", "]", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "col", ",", "row", ")", ")", "\n", "graph", "=", "gridspec", ".", "GridSpec", "(", "row", ",", "col", ")", "\n", "graph", ".", "update", "(", "wspace", "=", "0.05", ",", "hspace", "=", "0.05", ")", "\n", "for", "i", ",", "sample", "in", "enumerate", "(", "data", ")", ":", "\n", "        ", "ax", "=", "plt", ".", "subplot", "(", "graph", "[", "i", "]", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "np", ".", "squeeze", "(", "sample", ")", ",", "cmap", "=", "'Greys_r'", ")", "\n", "\n", "", "plt", ".", "savefig", "(", "'mnist_tgan.png'", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.draw_pic.cifar10": [[31, 47], ["matplotlib.figure", "matplotlib.GridSpec", "gridspec.GridSpec.update", "enumerate", "matplotlib.savefig", "matplotlib.close", "scipy.loadmat", "matplotlib.subplot", "matplotlib.axis", "plt.subplot.set_xticklabels", "plt.subplot.set_yticklabels", "plt.subplot.set_aspect", "matplotlib.imshow", "numpy.squeeze"], "function", ["None"], ["", "def", "cifar10", "(", ")", ":", "\n", "    ", "row", ",", "col", "=", "4", ",", "8", "\n", "data", "=", "sio", ".", "loadmat", "(", "'./data/cifar10_results.mat'", ")", "[", "'res'", "]", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "col", ",", "row", ")", ")", "\n", "graph", "=", "gridspec", ".", "GridSpec", "(", "row", ",", "col", ")", "\n", "graph", ".", "update", "(", "wspace", "=", "0.05", ",", "hspace", "=", "0.05", ")", "\n", "for", "i", ",", "sample", "in", "enumerate", "(", "data", ")", ":", "\n", "        ", "ax", "=", "plt", ".", "subplot", "(", "graph", "[", "i", "]", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "np", ".", "squeeze", "(", "sample", ")", ",", "cmap", "=", "'Greys_r'", ")", "\n", "\n", "", "plt", ".", "savefig", "(", "'cifar10_tgan.png'", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.__init__": [[50, 54], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "layer_num", "=", "0", "\n", "self", ".", "weights", "=", "[", "]", "\n", "self", ".", "biases", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d": [[55, 81], ["tensorflow.variable_scope", "GAN.he_init", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.get_variable", "tensorflow.add", "GAN.Network.weights.append", "GAN.Network.biases.append", "tensorflow.nn.conv2d", "str"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d"], ["", "def", "conv2d", "(", "self", ",", "input", ",", "input_dim", ",", "output_dim", ",", "filter_size", ",", "stride", ",", "padding", "=", "'SAME'", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'conv'", "+", "str", "(", "self", ".", "layer_num", ")", ")", ":", "\n", "            ", "init_w", "=", "he_init", "(", "[", "filter_size", ",", "filter_size", ",", "input_dim", ",", "output_dim", "]", ",", "stride", ")", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\n", "'weight'", ",", "\n", "initializer", "=", "init_w", "\n", ")", "\n", "\n", "init_b", "=", "tf", ".", "zeros", "(", "[", "output_dim", "]", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\n", "'bias'", ",", "\n", "initializer", "=", "init_b", "\n", ")", "\n", "\n", "output", "=", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d", "(", "\n", "input", ",", "\n", "weight", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "\n", "padding", "=", "padding", "\n", ")", ",", "bias", ")", "\n", "\n", "self", ".", "layer_num", "+=", "1", "\n", "self", ".", "weights", ".", "append", "(", "weight", ")", "\n", "self", ".", "biases", ".", "append", "(", "bias", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.deconv2d": [[82, 117], ["tensorflow.variable_scope", "input.get_shape().as_list", "GAN.he_init", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.get_variable", "tensorflow.add", "tensorflow.reshape", "GAN.Network.weights.append", "GAN.Network.biases.append", "tensorflow.nn.conv2d_transpose", "str", "input.get_shape", "tensorflow.shape", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init"], ["", "def", "deconv2d", "(", "self", ",", "input", ",", "output_dim", ",", "filter_size", ",", "stride", ",", "padding", "=", "'SAME'", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'deconv'", "+", "str", "(", "self", ".", "layer_num", ")", ")", ":", "\n", "            ", "input_shape", "=", "input", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "init_w", "=", "he_init", "(", "[", "filter_size", ",", "filter_size", ",", "output_dim", ",", "input_shape", "[", "3", "]", "]", ",", "stride", ")", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\n", "'weight'", ",", "\n", "initializer", "=", "init_w", "\n", ")", "\n", "\n", "init_b", "=", "tf", ".", "zeros", "(", "[", "output_dim", "]", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\n", "'bias'", ",", "\n", "initializer", "=", "init_b", "\n", ")", "\n", "\n", "output", "=", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d_transpose", "(", "\n", "value", "=", "input", ",", "\n", "filter", "=", "weight", ",", "\n", "output_shape", "=", "[", "\n", "tf", ".", "shape", "(", "input", ")", "[", "0", "]", ",", "\n", "input_shape", "[", "1", "]", "*", "stride", ",", "\n", "input_shape", "[", "2", "]", "*", "stride", ",", "\n", "output_dim", "\n", "]", ",", "\n", "strides", "=", "[", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "\n", "padding", "=", "padding", "\n", ")", ",", "bias", ")", "\n", "output", "=", "tf", ".", "reshape", "(", "output", ",", "\n", "[", "tf", ".", "shape", "(", "input", ")", "[", "0", "]", ",", "input_shape", "[", "1", "]", "*", "stride", ",", "input_shape", "[", "2", "]", "*", "stride", ",", "output_dim", "]", ")", "\n", "\n", "self", ".", "layer_num", "+=", "1", "\n", "self", ".", "weights", ".", "append", "(", "weight", ")", "\n", "self", ".", "biases", ".", "append", "(", "bias", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.batch_norm": [[118, 126], ["tensorflow.variable_scope", "tensorflow.contrib.layers.batch_norm", "str"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.batch_norm"], ["", "def", "batch_norm", "(", "self", ",", "input", ",", "scale", "=", "False", ")", ":", "\n", "        ", "''' batch normalization\n        ArXiv 1502.03167v3 '''", "\n", "with", "tf", ".", "variable_scope", "(", "'batch_norm'", "+", "str", "(", "self", ".", "layer_num", ")", ")", ":", "\n", "            ", "output", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "input", ",", "scale", "=", "scale", ")", "\n", "self", ".", "layer_num", "+=", "1", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.dense": [[127, 144], ["tensorflow.variable_scope", "GAN.xavier_init", "tensorflow.get_variable", "tensorflow.zeros", "tensorflow.get_variable", "tensorflow.add", "GAN.Network.weights.append", "GAN.Network.biases.append", "input.get_shape().as_list", "tensorflow.matmul", "str", "input.get_shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.xavier_init"], ["", "def", "dense", "(", "self", ",", "input", ",", "output_dim", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'dense'", "+", "str", "(", "self", ".", "layer_num", ")", ")", ":", "\n", "            ", "input_dim", "=", "input", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "\n", "init_w", "=", "xavier_init", "(", "[", "input_dim", ",", "output_dim", "]", ")", "\n", "weight", "=", "tf", ".", "get_variable", "(", "'weight'", ",", "initializer", "=", "init_w", ")", "\n", "\n", "init_b", "=", "tf", ".", "zeros", "(", "[", "output_dim", "]", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "'bias'", ",", "initializer", "=", "init_b", ")", "\n", "\n", "output", "=", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "input", ",", "weight", ")", ",", "bias", ")", "\n", "\n", "self", ".", "layer_num", "+=", "1", "\n", "self", ".", "weights", ".", "append", "(", "weight", ")", "\n", "self", ".", "biases", ".", "append", "(", "bias", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.residual_block": [[145, 159], ["tensorflow.variable_scope", "range", "GAN.Network.deconv2d", "GAN.Network.batch_norm", "tensorflow.nn.relu", "GAN.Network.deconv2d", "GAN.Network.batch_norm", "tensorflow.add"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.deconv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.batch_norm", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.relu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.deconv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.batch_norm"], ["", "def", "residual_block", "(", "self", ",", "input", ",", "output_dim", ",", "filter_size", ",", "n_blocks", "=", "5", ")", ":", "\n", "        ", "output", "=", "input", "\n", "with", "tf", ".", "variable_scope", "(", "'residual_block'", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "n_blocks", ")", ":", "\n", "                ", "bypass", "=", "output", "\n", "output", "=", "self", ".", "deconv2d", "(", "output", ",", "output_dim", ",", "filter_size", ",", "1", ")", "\n", "output", "=", "self", ".", "batch_norm", "(", "output", ")", "\n", "output", "=", "tf", ".", "nn", ".", "relu", "(", "output", ")", "\n", "\n", "output", "=", "self", ".", "deconv2d", "(", "output", ",", "output_dim", ",", "filter_size", ",", "1", ")", "\n", "output", "=", "self", ".", "batch_norm", "(", "output", ")", "\n", "output", "=", "tf", ".", "add", "(", "output", ",", "bypass", ")", "\n", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.pixel_shuffle": [[160, 175], ["tensorflow.split", "tensorflow.concat", "tensorflow.concat.get_shape().as_list", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.split", "tensorflow.concat", "tensorflow.split", "tensorflow.concat", "tensorflow.reshape", "tensorflow.shape", "GAN.Network.pixel_shuffle.PS"], "methods", ["None"], ["", "def", "pixel_shuffle", "(", "self", ",", "x", ",", "r", ",", "n_split", ")", ":", "\n", "        ", "def", "PS", "(", "x", ",", "r", ")", ":", "\n", "            ", "bs", ",", "a", ",", "b", ",", "c", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "bs", "=", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", "\n", "x", "=", "tf", ".", "reshape", "(", "x", ",", "(", "bs", ",", "a", ",", "b", ",", "r", ",", "r", ")", ")", "\n", "x", "=", "tf", ".", "transpose", "(", "x", ",", "(", "0", ",", "1", ",", "2", ",", "4", ",", "3", ")", ")", "\n", "x", "=", "tf", ".", "split", "(", "x", ",", "a", ",", "1", ")", "\n", "x", "=", "tf", ".", "concat", "(", "[", "tf", ".", "squeeze", "(", "x_", ",", "axis", "=", "1", ")", "for", "x_", "in", "x", "]", ",", "2", ")", "\n", "x", "=", "tf", ".", "split", "(", "x", ",", "b", ",", "1", ")", "\n", "x", "=", "tf", ".", "concat", "(", "[", "tf", ".", "squeeze", "(", "x_", ",", "axis", "=", "1", ")", "for", "x_", "in", "x", "]", ",", "2", ")", "\n", "return", "tf", ".", "reshape", "(", "x", ",", "(", "bs", ",", "a", "*", "r", ",", "b", "*", "r", ",", "1", ")", ")", "\n", "\n", "", "xc", "=", "tf", ".", "split", "(", "x", ",", "n_split", ",", "3", ")", "\n", "xc", "=", "tf", ".", "concat", "(", "[", "PS", "(", "x_", ",", "r", ")", "for", "x_", "in", "xc", "]", ",", "3", ")", "\n", "return", "xc", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.__init__": [[178, 236], ["tensorflow.placeholder", "tensorflow.placeholder", "GAN.GAN.downscale", "tensorflow.random_uniform", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.sqrt", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.variable_scope", "GAN.GAN.generator", "tensorflow.variable_scope", "GAN.GAN.discriminator", "scope.reuse_variables", "GAN.GAN.discriminator", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.gradients", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "numpy.prod", "numpy.prod", "GAN.GAN.discriminator", "tensorflow.square", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.downscale", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.generator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.discriminator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.discriminator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.discriminator"], ["    ", "def", "__init__", "(", "self", ",", "img_shape", ",", "latent_dim", ")", ":", "\n", "        ", "self", ".", "img_shape", "=", "img_shape", "\n", "self", ".", "latent_dim", "=", "latent_dim", "\n", "# self.learning_rate = learning_rate", "\n", "# self.vgg = VGG19(None, None, None)", "\n", "\n", "self", ".", "G_params", "=", "[", "]", "\n", "self", ".", "D_params", "=", "[", "]", "\n", "\n", "self", ".", "y", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "\n", "[", "None", ",", "self", ".", "img_shape", "[", "0", "]", "*", "2", ",", "self", ".", "img_shape", "[", "1", "]", "*", "2", ",", "self", ".", "img_shape", "[", "2", "]", "]", ",", "\n", "name", "=", "'x'", "\n", ")", "\n", "self", ".", "z", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "latent_dim", "]", ",", "name", "=", "'z'", ")", "\n", "self", ".", "x", "=", "self", ".", "downscale", "(", "self", ".", "y", ",", "2", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'generator'", ")", ":", "\n", "            ", "self", ".", "g", "=", "self", ".", "generator", "(", "self", ".", "z", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'discriminator'", ")", "as", "scope", ":", "\n", "            ", "self", ".", "D_real", "=", "self", ".", "discriminator", "(", "self", ".", "x", ")", "\n", "scope", ".", "reuse_variables", "(", ")", "\n", "self", ".", "D_fake", "=", "self", ".", "discriminator", "(", "self", ".", "g", ")", "\n", "\n", "", "disc_loss", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "D_real", ")", "+", "tf", ".", "reduce_mean", "(", "self", ".", "D_fake", ")", "\n", "gen_loss", "=", "-", "tf", ".", "reduce_mean", "(", "self", ".", "D_fake", ")", "\n", "\n", "alpha", "=", "tf", ".", "random_uniform", "(", "\n", "# shape=[self.batch_size, 1],", "\n", "shape", "=", "(", "tf", ".", "shape", "(", "self", ".", "y", ")", "[", "0", "]", ",", "1", ")", ",", "\n", "minval", "=", "0.", ",", "\n", "maxval", "=", "1.", "\n", ")", "\n", "\n", "x_", "=", "tf", ".", "reshape", "(", "self", ".", "x", ",", "[", "-", "1", ",", "np", ".", "prod", "(", "self", ".", "img_shape", ")", "]", ")", "\n", "g_", "=", "tf", ".", "reshape", "(", "self", ".", "g", ",", "[", "-", "1", ",", "np", ".", "prod", "(", "self", ".", "img_shape", ")", "]", ")", "\n", "\n", "differences", "=", "x_", "-", "g_", "\n", "interpolates", "=", "x_", "+", "alpha", "*", "differences", "\n", "interpolates", "=", "tf", ".", "reshape", "(", "interpolates", ",", "(", "-", "1", ",", "self", ".", "img_shape", "[", "0", "]", ",", "self", ".", "img_shape", "[", "1", "]", ",", "self", ".", "img_shape", "[", "2", "]", ")", ")", "\n", "gradients", "=", "tf", ".", "gradients", "(", "self", ".", "discriminator", "(", "interpolates", ")", ",", "[", "interpolates", "]", ")", "[", "0", "]", "\n", "slopes", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "gradients", ")", ",", "reduction_indices", "=", "[", "1", "]", ")", ")", "\n", "gradient_penalty", "=", "tf", ".", "reduce_mean", "(", "(", "slopes", "-", "1.", ")", "**", "2", ")", "\n", "\n", "self", ".", "D_loss", "=", "disc_loss", "+", "LAMBDA", "*", "gradient_penalty", "\n", "# self.G_loss = content_loss + self.SIGMA * gen_loss", "\n", "self", ".", "G_loss", "=", "gen_loss", "\n", "\n", "self", ".", "D_opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "beta1", "=", "0.5", ",", "\n", "beta2", "=", "0.9", "\n", ")", ".", "minimize", "(", "self", ".", "D_loss", ",", "var_list", "=", "self", ".", "D_params", ")", "\n", "self", ".", "G_opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", "=", "learning_rate", ",", "\n", "beta1", "=", "0.5", ",", "\n", "beta2", "=", "0.9", "\n", ")", ".", "minimize", "(", "self", ".", "G_loss", ",", "var_list", "=", "self", ".", "G_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.generator": [[237, 256], ["GAN.Network", "GAN.lrelu", "tensorflow.reshape", "GAN.lrelu", "GAN.lrelu", "GAN.Network.deconv2d", "tensorflow.nn.sigmoid", "GAN.Network.dense", "GAN.Network.deconv2d", "GAN.Network.deconv2d", "numpy.prod", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.deconv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.dense", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.deconv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.deconv2d"], ["", "def", "generator", "(", "self", ",", "z", ")", ":", "\n", "        ", "G", "=", "Network", "(", ")", "\n", "# Network.deconv2d(input, input_shape, output_dim, filter_size, stride)", "\n", "# h = G.dense(z, np.prod((self.img_shape[0], self.img_shape[1], 64)))", "\n", "h", "=", "lrelu", "(", "G", ".", "dense", "(", "z", ",", "np", ".", "prod", "(", "(", "4", ",", "4", ",", "256", ")", ")", ")", ")", "\n", "# h = tf.reshape(h, (tf.shape(h)[0], self.img_shape[0], self.img_shape[1], 64))", "\n", "h", "=", "tf", ".", "reshape", "(", "h", ",", "(", "tf", ".", "shape", "(", "h", ")", "[", "0", "]", ",", "4", ",", "4", ",", "256", ")", ")", "\n", "h", "=", "lrelu", "(", "G", ".", "deconv2d", "(", "h", ",", "128", ",", "5", ",", "2", ")", ")", "\n", "h", "=", "h", "[", ":", ",", ":", "7", ",", ":", "7", ",", ":", "]", "\n", "h", "=", "lrelu", "(", "G", ".", "deconv2d", "(", "h", ",", "64", ",", "5", ",", "2", ")", ")", "\n", "\n", "# h = G.residual_block(h, 64, 3, 2)", "\n", "\n", "h", "=", "G", ".", "deconv2d", "(", "h", ",", "self", ".", "img_shape", "[", "2", "]", ",", "3", ",", "1", ")", "\n", "h", "=", "tf", ".", "nn", ".", "sigmoid", "(", "h", ")", "\n", "\n", "self", ".", "G_params", "=", "G", ".", "weights", "+", "G", ".", "biases", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.discriminator": [[257, 284], ["GAN.Network", "GAN.Network.conv2d", "GAN.lrelu", "range", "GAN.Network.batch_norm", "tensorflow.reshape", "GAN.Network.dense", "GAN.lrelu", "GAN.Network.dense", "GAN.Network.conv2d", "GAN.lrelu", "GAN.Network.batch_norm", "len", "GAN.Network.batch_norm"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.batch_norm", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.dense", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.dense", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.batch_norm", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.batch_norm"], ["", "def", "discriminator", "(", "self", ",", "x", ")", ":", "\n", "        ", "D", "=", "Network", "(", ")", "\n", "# Network.conv2d(input, output_dim, filter_size, stride, padding='SAME')", "\n", "h", "=", "D", ".", "conv2d", "(", "x", ",", "self", ".", "img_shape", "[", "2", "]", ",", "32", ",", "5", ",", "2", ")", "\n", "h", "=", "lrelu", "(", "h", ")", "\n", "\n", "# h = D.conv2d(h, 64, 64, 3, 1)", "\n", "# h = lrelu(h)", "\n", "# h = D.batch_norm(h)", "\n", "\n", "map_nums", "=", "[", "32", ",", "64", ",", "128", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "map_nums", ")", "-", "1", ")", ":", "\n", "            ", "h", "=", "D", ".", "conv2d", "(", "h", ",", "map_nums", "[", "i", "]", ",", "map_nums", "[", "i", "+", "1", "]", ",", "5", ",", "2", ")", "\n", "h", "=", "lrelu", "(", "h", ")", "\n", "h", "=", "D", ".", "batch_norm", "(", "h", ")", "\n", "\n", "", "h_shape", "=", "h", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "h", "=", "tf", ".", "reshape", "(", "h", ",", "[", "-", "1", ",", "h_shape", "[", "1", "]", "*", "h_shape", "[", "2", "]", "*", "h_shape", "[", "3", "]", "]", ")", "\n", "h", "=", "D", ".", "dense", "(", "h", ",", "1024", ")", "\n", "h", "=", "lrelu", "(", "h", ")", "\n", "\n", "h", "=", "D", ".", "dense", "(", "h", ",", "1", ")", "\n", "\n", "self", ".", "D_params", "=", "D", ".", "weights", "+", "D", ".", "biases", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.downscale": [[285, 291], ["numpy.zeros", "range", "tensorflow.constant", "tensorflow.nn.conv2d"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.Network.conv2d"], ["", "def", "downscale", "(", "self", ",", "x", ",", "K", ")", ":", "\n", "        ", "mat", "=", "np", ".", "zeros", "(", "[", "K", ",", "K", ",", "self", ".", "img_shape", "[", "2", "]", ",", "self", ".", "img_shape", "[", "2", "]", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "img_shape", "[", "2", "]", ")", ":", "\n", "            ", "mat", "[", ":", ",", ":", ",", "i", ",", "i", "]", "=", "1.0", "/", "K", "**", "2", "\n", "", "filter", "=", "tf", ".", "constant", "(", "mat", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "filter", ",", "strides", "=", "[", "1", ",", "K", ",", "K", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.vgg19_loss": [[292, 305], ["GAN.GAN.vgg.build_model", "GAN.GAN.vgg.build_model", "range", "tensorflow.reduce_mean", "tensorflow.constant", "tensorflow.constant", "len", "tensorflow.nn.l2_loss"], "methods", ["None"], ["", "def", "vgg19_loss", "(", "self", ",", "x", ",", "g", ")", ":", "\n", "        ", "_", ",", "real_phi", "=", "self", ".", "vgg", ".", "build_model", "(", "x", ",", "tf", ".", "constant", "(", "False", ")", ",", "False", ")", "\n", "_", ",", "fake_phi", "=", "self", ".", "vgg", ".", "build_model", "(", "g", ",", "tf", ".", "constant", "(", "False", ")", ",", "True", ")", "\n", "\n", "loss", "=", "None", "\n", "for", "i", "in", "range", "(", "len", "(", "real_phi", ")", ")", ":", "\n", "            ", "l2_loss", "=", "tf", ".", "nn", ".", "l2_loss", "(", "real_phi", "[", "i", "]", "-", "fake_phi", "[", "i", "]", ")", "\n", "if", "loss", "is", "None", ":", "\n", "                ", "loss", "=", "l2_loss", "\n", "", "else", ":", "\n", "                ", "loss", "+=", "l2_loss", "\n", "\n", "", "", "return", "tf", ".", "reduce_mean", "(", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.reconstruction_loss": [[306, 309], ["tensorflow.reduce_sum", "tensorflow.square"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "reconstruction_loss", "(", "x", ",", "g", ")", ":", "\n", "        ", "return", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "x", "-", "g", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.lrelu": [[18, 20], ["tensorflow.maximum"], "function", ["None"], ["def", "lrelu", "(", "x", ",", "alpha", "=", "0.2", ")", ":", "\n", "    ", "return", "tf", ".", "maximum", "(", "alpha", "*", "x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.relu": [[22, 24], ["tensorflow.nn.relu"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.relu"], ["", "def", "relu", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.elu": [[26, 28], ["tensorflow.nn.elu"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.elu"], ["", "def", "elu", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "elu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.xavier_init": [[30, 34], ["tensorflow.random_normal", "tensorflow.sqrt"], "function", ["None"], ["", "def", "xavier_init", "(", "size", ")", ":", "\n", "    ", "input_dim", "=", "size", "[", "0", "]", "\n", "stddev", "=", "1.", "/", "tf", ".", "sqrt", "(", "input_dim", "/", "2.", ")", "\n", "return", "tf", ".", "random_normal", "(", "shape", "=", "size", ",", "stddev", "=", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.he_init": [[36, 47], ["tensorflow.sqrt", "tensorflow.random_uniform", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "def", "he_init", "(", "size", ",", "stride", ")", ":", "\n", "    ", "input_dim", "=", "size", "[", "2", "]", "\n", "output_dim", "=", "size", "[", "3", "]", "\n", "filter_size", "=", "size", "[", "0", "]", "\n", "\n", "fan_in", "=", "input_dim", "*", "filter_size", "**", "2", "\n", "fan_out", "=", "output_dim", "*", "filter_size", "**", "2", "/", "(", "stride", "**", "2", ")", "\n", "stddev", "=", "tf", ".", "sqrt", "(", "4.", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "minval", "=", "-", "stddev", "*", "np", ".", "sqrt", "(", "3", ")", "\n", "maxval", "=", "stddev", "*", "np", ".", "sqrt", "(", "3", ")", "\n", "return", "tf", ".", "random_uniform", "(", "shape", "=", "size", ",", "minval", "=", "minval", ",", "maxval", "=", "maxval", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.show_result": [[311, 341], ["numpy.squeeze", "numpy.squeeze", "numpy.squeeze", "matplotlib.figure", "plt.figure.add_subplot", "matplotlib.axis", "fig.add_subplot.set_xticklabels", "fig.add_subplot.set_yticklabels", "fig.add_subplot.set_aspect", "matplotlib.imshow", "plt.figure.add_subplot", "matplotlib.axis", "fig.add_subplot.set_xticklabels", "fig.add_subplot.set_yticklabels", "fig.add_subplot.set_aspect", "matplotlib.imshow", "plt.figure.add_subplot", "matplotlib.axis", "fig.add_subplot.set_xticklabels", "fig.add_subplot.set_yticklabels", "fig.add_subplot.set_aspect", "matplotlib.imshow", "matplotlib.savefig", "str().zfill", "str"], "function", ["None"], ["", "", "def", "show_result", "(", "xs", ",", "zs", ",", "gs", ")", ":", "\n", "    ", "zs", "=", "np", ".", "squeeze", "(", "zs", ")", "\n", "xs", "=", "np", ".", "squeeze", "(", "xs", ")", "\n", "gs", "=", "np", ".", "squeeze", "(", "gs", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "5", ",", "15", ")", ")", "\n", "\n", "#graph = gridspec.GridSpec(1, 3)", "\n", "#graph.update(wspace=0.5, hspace=0.5)", "\n", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "131", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "zs", ",", "cmap", "=", "'Greys_r'", ")", "\n", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "132", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "gs", ",", "cmap", "=", "'Greys_r'", ")", "\n", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "133", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "xs", ",", "cmap", "=", "'Greys_r'", ")", "\n", "plt", ".", "savefig", "(", "'./out/{}.png'", ".", "format", "(", "str", "(", "step", ")", ".", "zfill", "(", "6", ")", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.__init__": [[26, 62], ["keras.optimizers.Adam", "aae.AdversarialAutoencoder.build_discriminator", "aae.AdversarialAutoencoder.discriminator.compile", "aae.AdversarialAutoencoder.build_encoder", "aae.AdversarialAutoencoder.build_decoder", "keras.layers.Input", "aae.AdversarialAutoencoder.encoder", "aae.AdversarialAutoencoder.decoder", "aae.AdversarialAutoencoder.discriminator", "keras.models.Model", "aae.AdversarialAutoencoder.adversarial_autoencoder.compile"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.build_discriminator", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.build_encoder", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.build_decoder", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.GAN.GAN.discriminator"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "img_rows", "=", "28", "\n", "self", ".", "img_cols", "=", "28", "\n", "self", ".", "channels", "=", "1", "\n", "self", ".", "img_shape", "=", "(", "self", ".", "img_rows", ",", "self", ".", "img_cols", ",", "self", ".", "channels", ")", "\n", "self", ".", "latent_dim", "=", "10", "\n", "\n", "optimizer", "=", "Adam", "(", "0.0002", ",", "0.5", ")", "\n", "\n", "# Build and compile the discriminator", "\n", "self", ".", "discriminator", "=", "self", ".", "build_discriminator", "(", ")", "\n", "self", ".", "discriminator", ".", "compile", "(", "loss", "=", "'binary_crossentropy'", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "\n", "# Build the encoder / decoder", "\n", "self", ".", "encoder", "=", "self", ".", "build_encoder", "(", ")", "\n", "self", ".", "decoder", "=", "self", ".", "build_decoder", "(", ")", "\n", "\n", "img", "=", "Input", "(", "shape", "=", "self", ".", "img_shape", ")", "\n", "# The generator takes the image, encodes it and reconstructs it", "\n", "# from the encoding", "\n", "encoded_repr", "=", "self", ".", "encoder", "(", "img", ")", "\n", "reconstructed_img", "=", "self", ".", "decoder", "(", "encoded_repr", ")", "\n", "\n", "# For the adversarial_autoencoder model we will only train the generator", "\n", "self", ".", "discriminator", ".", "trainable", "=", "False", "\n", "\n", "# The discriminator determines validity of the encoding", "\n", "validity", "=", "self", ".", "discriminator", "(", "encoded_repr", ")", "\n", "\n", "# The adversarial_autoencoder model  (stacked generator and discriminator)", "\n", "self", ".", "adversarial_autoencoder", "=", "Model", "(", "img", ",", "[", "reconstructed_img", ",", "validity", "]", ")", "\n", "self", ".", "adversarial_autoencoder", ".", "compile", "(", "loss", "=", "[", "'mse'", ",", "'binary_crossentropy'", "]", ",", "\n", "loss_weights", "=", "[", "0.999", ",", "0.001", "]", ",", "\n", "optimizer", "=", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.build_encoder": [[64, 81], ["keras.layers.Input", "keras.models.Model", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.Dense", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.Dense", "keras.layers.Dense"], "methods", ["None"], ["", "def", "build_encoder", "(", "self", ")", ":", "\n", "# Encoder", "\n", "\n", "        ", "img", "=", "Input", "(", "shape", "=", "self", ".", "img_shape", ")", "\n", "\n", "h", "=", "Flatten", "(", ")", "(", "img", ")", "\n", "h", "=", "Dense", "(", "512", ")", "(", "h", ")", "\n", "h", "=", "LeakyReLU", "(", "alpha", "=", "0.2", ")", "(", "h", ")", "\n", "h", "=", "Dense", "(", "512", ")", "(", "h", ")", "\n", "h", "=", "LeakyReLU", "(", "alpha", "=", "0.2", ")", "(", "h", ")", "\n", "mu", "=", "Dense", "(", "self", ".", "latent_dim", ")", "(", "h", ")", "\n", "log_var", "=", "Dense", "(", "self", ".", "latent_dim", ")", "(", "h", ")", "\n", "# latent_repr = merge([mu, log_var],", "\n", "#         mode=lambda p: p[0] + K.random_normal(K.shape(p[0])) * K.exp(p[1] / 2),", "\n", "#         output_shape=lambda p: p[0])", "\n", "# return Model(img, latent_repr)", "\n", "return", "Model", "(", "img", ",", "log_var", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.build_decoder": [[82, 99], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.summary", "keras.layers.Input", "keras.models.Sequential.", "keras.models.Model", "keras.layers.Dense", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.Dense", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.Dense", "keras.layers.Reshape", "numpy.prod"], "methods", ["None"], ["", "def", "build_decoder", "(", "self", ")", ":", "\n", "\n", "        ", "model", "=", "Sequential", "(", ")", "\n", "\n", "model", ".", "add", "(", "Dense", "(", "512", ",", "input_dim", "=", "self", ".", "latent_dim", ")", ")", "\n", "model", ".", "add", "(", "LeakyReLU", "(", "alpha", "=", "0.2", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "512", ")", ")", "\n", "model", ".", "add", "(", "LeakyReLU", "(", "alpha", "=", "0.2", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "np", ".", "prod", "(", "self", ".", "img_shape", ")", ",", "activation", "=", "'tanh'", ")", ")", "\n", "model", ".", "add", "(", "Reshape", "(", "self", ".", "img_shape", ")", ")", "\n", "\n", "model", ".", "summary", "(", ")", "\n", "\n", "z", "=", "Input", "(", "shape", "=", "(", "self", ".", "latent_dim", ",", ")", ")", "\n", "img", "=", "model", "(", "z", ")", "\n", "\n", "return", "Model", "(", "z", ",", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.build_discriminator": [[100, 115], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.summary", "keras.layers.Input", "keras.models.Sequential.", "keras.models.Model", "keras.layers.Dense", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.Dense", "keras.layers.advanced_activations.LeakyReLU", "keras.layers.Dense"], "methods", ["None"], ["", "def", "build_discriminator", "(", "self", ")", ":", "\n", "\n", "        ", "model", "=", "Sequential", "(", ")", "\n", "\n", "model", ".", "add", "(", "Dense", "(", "512", ",", "input_dim", "=", "self", ".", "latent_dim", ")", ")", "\n", "model", ".", "add", "(", "LeakyReLU", "(", "alpha", "=", "0.2", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "256", ")", ")", "\n", "model", ".", "add", "(", "LeakyReLU", "(", "alpha", "=", "0.2", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "1", ",", "activation", "=", "\"sigmoid\"", ")", ")", "\n", "model", ".", "summary", "(", ")", "\n", "\n", "encoded_repr", "=", "Input", "(", "shape", "=", "(", "self", ".", "latent_dim", ",", ")", ")", "\n", "validity", "=", "model", "(", "encoded_repr", ")", "\n", "\n", "return", "Model", "(", "encoded_repr", ",", "validity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.train": [[116, 160], ["keras.datasets.mnist.load_data", "numpy.expand_dims", "numpy.ones", "numpy.zeros", "range", "numpy.random.randint", "aae.AdversarialAutoencoder.encoder.predict", "numpy.random.normal", "aae.AdversarialAutoencoder.discriminator.train_on_batch", "aae.AdversarialAutoencoder.discriminator.train_on_batch", "aae.AdversarialAutoencoder.adversarial_autoencoder.train_on_batch", "numpy.expand_dims.astype", "numpy.add", "print", "aae.AdversarialAutoencoder.sample_images"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.sample_images"], ["", "def", "train", "(", "self", ",", "epochs", ",", "batch_size", "=", "128", ",", "sample_interval", "=", "50", ")", ":", "\n", "\n", "# Load the dataset", "\n", "        ", "(", "X_train", ",", "_", ")", ",", "(", "_", ",", "_", ")", "=", "mnist", ".", "load_data", "(", ")", "\n", "\n", "# Rescale -1 to 1", "\n", "X_train", "=", "(", "X_train", ".", "astype", "(", "np", ".", "float32", ")", "-", "127.5", ")", "/", "127.5", "\n", "X_train", "=", "np", ".", "expand_dims", "(", "X_train", ",", "axis", "=", "3", ")", "\n", "\n", "# Adversarial ground truths", "\n", "valid", "=", "np", ".", "ones", "(", "(", "batch_size", ",", "1", ")", ")", "\n", "fake", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "1", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "\n", "# ---------------------", "\n", "#  Train Discriminator", "\n", "# ---------------------", "\n", "\n", "# Select a random batch of images", "\n", "            ", "idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "X_train", ".", "shape", "[", "0", "]", ",", "batch_size", ")", "\n", "imgs", "=", "X_train", "[", "idx", "]", "\n", "\n", "latent_fake", "=", "self", ".", "encoder", ".", "predict", "(", "imgs", ")", "\n", "latent_real", "=", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "batch_size", ",", "self", ".", "latent_dim", ")", ")", "\n", "\n", "# Train the discriminator", "\n", "d_loss_real", "=", "self", ".", "discriminator", ".", "train_on_batch", "(", "latent_real", ",", "valid", ")", "\n", "d_loss_fake", "=", "self", ".", "discriminator", ".", "train_on_batch", "(", "latent_fake", ",", "fake", ")", "\n", "d_loss", "=", "0.5", "*", "np", ".", "add", "(", "d_loss_real", ",", "d_loss_fake", ")", "\n", "\n", "# ---------------------", "\n", "#  Train Generator", "\n", "# ---------------------", "\n", "\n", "# Train the generator", "\n", "g_loss", "=", "self", ".", "adversarial_autoencoder", ".", "train_on_batch", "(", "imgs", ",", "[", "imgs", ",", "valid", "]", ")", "\n", "\n", "\n", "# If at save interval => save generated image samples", "\n", "if", "epoch", "%", "sample_interval", "==", "0", ":", "\n", "# Plot the progress", "\n", "                ", "print", "(", "\"%d [D loss: %f, acc: %.2f%%] [G loss: %f, mse: %f]\"", "%", "(", "epoch", ",", "d_loss", "[", "0", "]", ",", "100", "*", "d_loss", "[", "1", "]", ",", "g_loss", "[", "0", "]", ",", "g_loss", "[", "1", "]", ")", ")", "\n", "self", ".", "sample_images", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.sample_images": [[161, 182], ["numpy.random.normal", "aae.AdversarialAutoencoder.decoder.predict", "matplotlib.figure", "matplotlib.figure", "matplotlib.GridSpec", "matplotlib.GridSpec", "matplotlib.GridSpec.update", "enumerate", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "matplotlib.subplot", "matplotlib.subplot", "matplotlib.axis", "matplotlib.axis", "matplotlib.subplot.set_xticklabels", "matplotlib.subplot.set_yticklabels", "matplotlib.subplot.set_aspect", "matplotlib.imshow", "matplotlib.imshow", "numpy.squeeze"], "methods", ["None"], ["", "", "", "def", "sample_images", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "row", ",", "col", "=", "4", ",", "8", "\n", "\n", "z", "=", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "row", "*", "col", ",", "self", ".", "latent_dim", ")", ")", "\n", "gen_imgs", "=", "self", ".", "decoder", ".", "predict", "(", "z", ")", "\n", "\n", "gen_imgs", "=", "0.5", "*", "gen_imgs", "+", "0.5", "\n", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "col", ",", "row", ")", ")", "\n", "graph", "=", "gridspec", ".", "GridSpec", "(", "row", ",", "col", ")", "\n", "graph", ".", "update", "(", "wspace", "=", "0.05", ",", "hspace", "=", "0.05", ")", "\n", "for", "i", ",", "sample", "in", "enumerate", "(", "gen_imgs", ")", ":", "\n", "            ", "ax", "=", "plt", ".", "subplot", "(", "graph", "[", "i", "]", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "np", ".", "squeeze", "(", "sample", ")", ",", "cmap", "=", "'Greys_r'", ")", "\n", "\n", "", "plt", ".", "savefig", "(", "'images/mnist_{}.png'", ".", "format", "(", "epoch", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.aae.AdversarialAutoencoder.save_model": [[183, 196], ["aae.AdversarialAutoencoder.save_model.save"], "methods", ["None"], ["", "def", "save_model", "(", "self", ")", ":", "\n", "\n", "        ", "def", "save", "(", "model", ",", "model_name", ")", ":", "\n", "            ", "model_path", "=", "\"saved_model/%s.json\"", "%", "model_name", "\n", "weights_path", "=", "\"saved_model/%s_weights.hdf5\"", "%", "model_name", "\n", "options", "=", "{", "\"file_arch\"", ":", "model_path", ",", "\n", "\"file_weight\"", ":", "weights_path", "}", "\n", "json_string", "=", "model", ".", "to_json", "(", ")", "\n", "open", "(", "options", "[", "'file_arch'", "]", ",", "'w'", ")", ".", "write", "(", "json_string", ")", "\n", "model", ".", "save_weights", "(", "options", "[", "'file_weight'", "]", ")", "\n", "\n", "", "save", "(", "self", ".", "generator", ",", "\"aae_generator\"", ")", "\n", "save", "(", "self", ".", "discriminator", ",", "\"aae_discriminator\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.gen_training_data.mnist": [[16, 31], ["keras.datasets.mnist.load_data", "len", "numpy.zeros", "range", "scipy.savemat", "range"], "function", ["None"], ["def", "mnist", "(", ")", ":", "\n", "    ", "n_slice", "=", "7", "\n", "n_step", "=", "1", "\n", "img_shape", "=", "(", "28", ",", "28", ",", "1", ")", "\n", "\n", "(", "x_train", ",", "y_train", ")", ",", "(", "_", ",", "_", ")", "=", "keras", ".", "datasets", ".", "mnist", ".", "load_data", "(", ")", "\n", "x_train", "=", "x_train", "/", "255.", "\n", "n_sample", "=", "len", "(", "x_train", ")", "\n", "datas", "=", "np", ".", "zeros", "(", "(", "n_sample", ",", "img_shape", "[", "0", "]", ",", "img_shape", "[", "1", "]", ",", "n_slice", ")", ")", "\n", "for", "i", "in", "range", "(", "n_sample", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "n_slice", ")", ":", "\n", "            ", "data", "=", "x_train", "[", "i", "]", "\n", "datas", "[", "i", ",", ":", ",", "0", ":", "(", "img_shape", "[", "0", "]", "-", "n_slice", "+", "n_step", "*", "k", ")", ",", "k", "]", "=", "data", "[", ":", ",", "(", "n_slice", "-", "n_step", "*", "k", ")", ":", "img_shape", "[", "1", "]", "]", "\n", "\n", "", "", "sio", ".", "savemat", "(", "'./data/mnist_28_28_7.mat'", ",", "{", "'XX'", ":", "datas", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.TGAN.gen_training_data.cifar10": [[33, 52], ["keras.datasets.cifar10.load_data", "range", "len", "numpy.zeros", "range", "scipy.savemat", "range", "data_train.append"], "function", ["None"], ["", "def", "cifar10", "(", ")", ":", "\n", "    ", "n_slice", "=", "9", "\n", "n_step", "=", "1", "\n", "img_shape", "=", "(", "32", ",", "32", ",", "3", ")", "\n", "\n", "(", "x_train", ",", "y_train", ")", ",", "(", "_", ",", "_", ")", "=", "keras", ".", "datasets", ".", "cifar10", ".", "load_data", "(", ")", "\n", "x_train", "=", "x_train", "/", "255.", "\n", "data_train", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "x_train", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "if", "y_train", "[", "i", "]", "==", "1", ":", "\n", "            ", "data_train", ".", "append", "(", "x_train", "[", "i", "]", ")", "\n", "", "", "n_sample", "=", "len", "(", "data_train", ")", "\n", "datas", "=", "np", ".", "zeros", "(", "(", "n_sample", ",", "img_shape", "[", "0", "]", ",", "img_shape", "[", "1", "]", ",", "n_slice", ")", ")", "\n", "for", "i", "in", "range", "(", "n_sample", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "n_slice", "//", "3", ")", ":", "\n", "            ", "data", "=", "data_train", "[", "i", "]", "\n", "datas", "[", "i", ",", ":", ",", ":", ",", "(", "3", "*", "k", ")", ":", "(", "3", "*", "(", "k", "+", "1", ")", ")", "]", "=", "data", "\n", "\n", "", "", "sio", ".", "savemat", "(", "'./data/cifar10_32_32_9.mat'", ",", "{", "'XX'", ":", "datas", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.tensor_tsta.tensor_tsta": [[6, 36], ["numpy.shape", "tensor_product.tensor_product", "tensor_tsta.blk_circ_mat", "numpy.linalg.norm", "tensor_product.tensor_product", "range", "numpy.multiply", "tensor_product.tensor_product", "numpy.abs", "numpy.sign", "numpy.where", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.tensor_tsta.blk_circ_mat", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product"], ["def", "tensor_tsta", "(", "X", ",", "D", ",", "C0", ")", ":", "\n", "\n", "    ", "_", ",", "n", ",", "k", "=", "np", ".", "shape", "(", "X", ")", "\n", "\n", "D_t_D", "=", "tensor_product", "(", "D", ",", "'t'", ",", "D", ",", "''", ")", "\n", "\n", "D_c", "=", "blk_circ_mat", "(", "D_t_D", ")", "\n", "l0", "=", "np", ".", "linalg", ".", "norm", "(", "D_c", ",", "2", ")", "\n", "\n", "D_t_X", "=", "tensor_product", "(", "D", ",", "'t'", ",", "X", ",", "''", ")", "\n", "\n", "J1", "=", "C0", "\n", "t1", "=", "1", "\n", "#fobj = np.zeros(params.max_iter)", "\n", "\n", "for", "i", "in", "range", "(", "params", ".", "tsta_max_iter", ")", ":", "\n", "        ", "l1", "=", "params", ".", "eta", "**", "i", "*", "l0", "\n", "grad_J1", "=", "tensor_product", "(", "D_t_D", ",", "'t'", ",", "J1", ",", "''", ")", "-", "D_t_X", "\n", "temp1", "=", "J1", "-", "grad_J1", "/", "l1", "\n", "temp2", "=", "np", ".", "abs", "(", "temp1", ")", "-", "params", ".", "beta", "/", "l1", "\n", "temp2", "[", "np", ".", "where", "(", "temp2", "<", "0", ")", "]", "=", "0", "\n", "C1", "=", "np", ".", "multiply", "(", "np", ".", "sign", "(", "temp1", ")", ",", "temp2", ")", "\n", "t2", "=", "(", "1", "+", "np", ".", "sqrt", "(", "1", "+", "4", "*", "t1", "**", "2", ")", ")", "/", "2", "\n", "J1", "=", "C1", "+", "(", "(", "t1", "-", "1", ")", "/", "t2", ")", "*", "(", "C1", "-", "C0", ")", "\n", "C0", "=", "C1", "\n", "t1", "=", "t2", "\n", "#fobj[i] = obj_fun(X, D0, B1)", "\n", "", "C", "=", "C1", "\n", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.tensor_tsta.obj_fun": [[37, 42], ["tensor_product.tensor_product", "numpy.sum", "numpy.linalg.norm", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm"], ["", "def", "obj_fun", "(", "X", ",", "D", ",", "C", ")", ":", "\n", "    ", "diff", "=", "X", "-", "tensor_product", "(", "D", ",", "''", ",", "C", ",", "''", ")", "\n", "fobj", "=", "0.5", "*", "np", ".", "linalg", ".", "norm", "(", "diff", ")", "**", "2", "+", "params", ".", "beta", "*", "np", ".", "sum", "(", "np", ".", "abs", "(", "C", ")", ")", "\n", "\n", "return", "fobj", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.tensor_tsta.blk_circ_mat": [[43, 54], ["numpy.shape", "numpy.zeros", "numpy.reshape", "range", "numpy.transpose", "numpy.roll"], "function", ["None"], ["", "def", "blk_circ_mat", "(", "A", ")", ":", "\n", "    ", "sz_A", "=", "np", ".", "shape", "(", "A", ")", "\n", "dim", "=", "[", "0", ",", "0", "]", "\n", "dim", "[", "0", "]", "=", "sz_A", "[", "0", "]", "*", "sz_A", "[", "2", "]", "\n", "dim", "[", "1", "]", "=", "sz_A", "[", "1", "]", "*", "sz_A", "[", "2", "]", "\n", "A_c", "=", "np", ".", "zeros", "(", "dim", ")", "\n", "A_mat", "=", "np", ".", "reshape", "(", "np", ".", "transpose", "(", "A", ",", "[", "0", ",", "2", ",", "1", "]", ")", ",", "[", "dim", "[", "0", "]", ",", "sz_A", "[", "1", "]", "]", ",", "order", "=", "'F'", ")", "\n", "for", "k", "in", "range", "(", "sz_A", "[", "2", "]", ")", ":", "\n", "        ", "A_c", "[", ":", ",", "k", "*", "sz_A", "[", "1", "]", ":", "(", "k", "+", "1", ")", "*", "sz_A", "[", "1", "]", "]", "=", "np", ".", "roll", "(", "A_mat", ",", "k", "*", "sz_A", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "\n", "", "return", "A_c", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.init.init_D": [[10, 18], ["numpy.sqrt", "range", "numpy.transpose", "numpy.sum", "numpy.reshape", "numpy.random.rand", "numpy.square"], "function", ["None"], ["def", "init_D", "(", "patch_size", ",", "r", ")", ":", "\n", "    ", "D_mat", "=", "np", ".", "random", ".", "rand", "(", "patch_size", "**", "3", ",", "r", ")", "*", "2", "-", "1", "\n", "D_mat_sum", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "D_mat", ")", ",", "axis", "=", "0", ")", ")", "\n", "for", "i", "in", "range", "(", "D_mat_sum", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "D_mat", "[", ":", ",", "i", "]", "/=", "D_mat_sum", "[", "i", "]", "\n", "", "D", "=", "np", ".", "transpose", "(", "np", ".", "reshape", "(", "D_mat", ",", "[", "patch_size", "**", "2", ",", "patch_size", ",", "params", ".", "r", "]", ",", "order", "=", "'F'", ")", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "return", "D", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.main.save_img": [[20, 31], ["matplotlib.pyplot.figure", "plt.figure.add_subplot", "matplotlib.pyplot.axis", "fig.add_subplot.set_xticklabels", "fig.add_subplot.set_yticklabels", "fig.add_subplot.set_aspect", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "function", ["None"], ["def", "save_img", "(", "img", ",", "file_name", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "5", ",", "15", ")", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "# plt.imshow(img, cmap='Greys_r')", "\n", "plt", ".", "imshow", "(", "img", ")", "\n", "plt", ".", "savefig", "(", "file_name", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.main.tdsc": [[33, 57], ["numpy.shape", "numpy.fft.fft", "init.init_D", "numpy.zeros", "range", "os.path.exists", "os.mkdir", "time.time", "print", "tensor_tsta.tensor_tsta", "tensor_dl.tensor_dl", "tensor_tsta.tensor_tsta", "time.time", "print"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.init_D", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_tsta", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_dl", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_tsta"], ["", "def", "tdsc", "(", "X_p", ")", ":", "\n", "\n", "    ", "size_X_p", "=", "np", ".", "shape", "(", "X_p", ")", "\n", "X_p_hat", "=", "np", ".", "fft", ".", "fft", "(", "X_p", ",", "axis", "=", "-", "1", ")", "\n", "\n", "D", "=", "init_D", "(", "hp", ".", "patch_size", ",", "hp", ".", "r", ")", "\n", "C", "=", "np", ".", "zeros", "(", "[", "hp", ".", "r", ",", "size_X_p", "[", "1", "]", ",", "size_X_p", "[", "2", "]", "]", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'./out/'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./out/'", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "hp", ".", "sc_max_iter", ")", ":", "\n", "        ", "time_start", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Iteration: {} / {}'", ".", "format", "(", "i", ",", "hp", ".", "sc_max_iter", ")", ")", "\n", "\n", "C", "=", "tensor_tsta", "(", "X_p", ",", "D", ",", "C", ")", "\n", "D", "=", "tensor_dl", "(", "X_p_hat", ",", "C", ",", "hp", ".", "r", ")", "\n", "\n", "C", "=", "tensor_tsta", "(", "X_p", ",", "D", ",", "C", ")", "\n", "\n", "time_end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'time:'", ",", "time_end", "-", "time_start", ",", "'s'", ")", "\n", "\n", "", "return", "D", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.main.sample_cifar10": [[59, 82], ["keras.datasets.cifar10.load_data", "numpy.zeros", "range", "numpy.random.randint", "block_3d.tensor_block_3d", "len", "block_3d.tensor_block_3d", "range", "len", "x_train.astype", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d"], ["", "def", "sample_cifar10", "(", "n_samples", "=", "10000", ")", ":", "\n", "    ", "(", "x_train", ",", "y_train", ")", ",", "(", "_", ",", "_", ")", "=", "keras", ".", "datasets", ".", "cifar10", ".", "load_data", "(", ")", "\n", "x_train", "=", "(", "x_train", ".", "astype", "(", "np", ".", "float32", ")", "-", "127.5", ")", "/", "127.5", "\n", "X_p", "=", "np", ".", "zeros", "(", "(", "hp", ".", "patch_size", "*", "hp", ".", "patch_size", ",", "n_samples", ",", "hp", ".", "patch_size", ")", ")", "\n", "count", "=", "0", "\n", "#\u84c4\u6c34\u6c60\u62bd\u6837\u7b97\u6cd5", "\n", "for", "i", "in", "range", "(", "len", "(", "x_train", ")", ")", ":", "\n", "        ", "img_p", "=", "tensor_block_3d", "(", "x_train", "[", "i", "]", ")", "\n", "cur_count", "=", "img_p", ".", "shape", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "cur_count", ")", ":", "\n", "            ", "if", "count", "<", "n_samples", ":", "\n", "                ", "X_p", "[", ":", ",", "count", ",", ":", "]", "=", "img_p", "[", ":", ",", "j", ",", ":", "]", "\n", "", "else", ":", "\n", "                ", "k", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "count", ")", "\n", "if", "k", "<", "n_samples", ":", "\n", "                    ", "X_p", "[", ":", ",", "k", ",", ":", "]", "=", "img_p", "[", ":", ",", "j", ",", ":", "]", "\n", "", "", "count", "+=", "1", "\n", "\n", "", "", "idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "x_train", ")", ")", "\n", "img", "=", "x_train", "[", "idx", "]", "\n", "img_p", "=", "tensor_block_3d", "(", "img", ")", "\n", "\n", "return", "X_p", ",", "img", ",", "img_p", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.tensor_dl.tensor_dl": [[11, 45], ["numpy.fft.fft", "numpy.shape", "numpy.zeros", "numpy.zeros", "range", "tuple", "scipy.optimize.minimize", "numpy.diag", "numpy.zeros", "range", "numpy.fft.ifft", "numpy.real", "numpy.abs", "numpy.matmul", "numpy.matmul", "tensor_dl.fobj_dict_dual", "numpy.squeeze", "numpy.squeeze", "numpy.matmul", "numpy.transpose", "numpy.random.rand", "numpy.linalg.pinv", "numpy.where", "range", "len", "numpy.isnan"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.tensor_dl.fobj_dict_dual", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv"], ["def", "tensor_dl", "(", "X_hat", ",", "C", ",", "r", ")", ":", "\n", "    ", "C_hat", "=", "np", ".", "fft", ".", "fft", "(", "C", ",", "axis", "=", "-", "1", ")", "# mabe incorrect", "\n", "dual_lambda", "=", "10", "*", "np", ".", "abs", "(", "np", ".", "random", ".", "rand", "(", "r", ",", "1", ")", ")", "\n", "m", ",", "_", ",", "k", "=", "np", ".", "shape", "(", "X_hat", ")", "\n", "\n", "CC_t", "=", "np", ".", "zeros", "(", "[", "r", ",", "r", ",", "k", "]", ",", "dtype", "=", "complex", ")", "\n", "XC_t", "=", "np", ".", "zeros", "(", "[", "m", ",", "r", ",", "k", "]", ",", "dtype", "=", "complex", ")", "\n", "\n", "for", "kk", "in", "range", "(", "k", ")", ":", "\n", "        ", "x_hat_k", "=", "X_hat", "[", ":", ",", ":", ",", "kk", "]", "\n", "c_hat_k", "=", "C_hat", "[", ":", ",", ":", ",", "kk", "]", "\n", "\n", "CC_t", "[", ":", ",", ":", ",", "kk", "]", "=", "np", ".", "matmul", "(", "c_hat_k", ",", "c_hat_k", ".", "T", ")", "\n", "XC_t", "[", ":", ",", ":", ",", "kk", "]", "=", "np", ".", "matmul", "(", "x_hat_k", ",", "c_hat_k", ".", "T", ")", "\n", "\n", "", "bnds", "=", "tuple", "(", "(", "0", ",", "np", ".", "infty", ")", "for", "_", "in", "range", "(", "len", "(", "dual_lambda", ")", ")", ")", "\n", "fun", "=", "lambda", "x", ":", "fobj_dict_dual", "(", "x", ",", "XC_t", ",", "CC_t", ",", "k", ")", "\n", "\n", "res", "=", "minimize", "(", "fun", ",", "dual_lambda", ",", "method", "=", "'L-BFGS-B'", ",", "bounds", "=", "bnds", ")", "\n", "\n", "LAMBDA", "=", "np", ".", "diag", "(", "res", ".", "x", ")", "\n", "D_hat", "=", "np", ".", "zeros", "(", "[", "m", ",", "r", ",", "k", "]", ",", "dtype", "=", "complex", ")", "\n", "\n", "for", "kk", "in", "range", "(", "k", ")", ":", "\n", "        ", "CC_t_k", "=", "np", ".", "squeeze", "(", "CC_t", "[", ":", ",", ":", ",", "kk", "]", ")", "\n", "XC_t_k", "=", "np", ".", "squeeze", "(", "XC_t", "[", ":", ",", ":", ",", "kk", "]", ")", "\n", "D_hat_k_t", "=", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "pinv", "(", "CC_t_k", "+", "LAMBDA", ")", ",", "XC_t_k", ".", "T", ")", "\n", "D_hat", "[", ":", ",", ":", ",", "kk", "]", "=", "np", ".", "transpose", "(", "D_hat_k_t", ")", "\n", "\n", "", "D", "=", "np", ".", "fft", ".", "ifft", "(", "D_hat", ",", "axis", "=", "-", "1", ")", "\n", "D", "[", "np", ".", "where", "(", "np", ".", "isnan", "(", "D", ")", "==", "True", ")", "]", "=", "0", "\n", "D", "=", "np", ".", "real", "(", "D", ")", "\n", "\n", "return", "D", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.tensor_dl.fobj_dict_dual": [[47, 69], ["len", "numpy.diag", "range", "numpy.shape", "numpy.linalg.pinv", "numpy.real", "numpy.trace", "numpy.trace", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv"], ["", "def", "fobj_dict_dual", "(", "x", ",", "XC_t", ",", "CC_t", ",", "k", ")", ":", "\n", "    ", "m", "=", "np", ".", "shape", "(", "XC_t", ")", "[", "0", "]", "\n", "r", "=", "len", "(", "x", ")", "\n", "LAMBDA", "=", "np", ".", "diag", "(", "x", ")", "\n", "\n", "f", "=", "0", "\n", "# g = np.zeros([r, 1])", "\n", "# H = np.zeros([r, r])", "\n", "\n", "for", "kk", "in", "range", "(", "k", ")", ":", "\n", "        ", "XC_t_k", "=", "XC_t", "[", ":", ",", ":", ",", "kk", "]", "\n", "CC_t_k", "=", "CC_t", "[", ":", ",", ":", ",", "kk", "]", "\n", "CC_t_inv", "=", "np", ".", "linalg", ".", "pinv", "(", "CC_t_k", "+", "LAMBDA", ")", "\n", "\n", "if", "m", ">", "r", ":", "\n", "            ", "f", "+=", "np", ".", "trace", "(", "np", ".", "matmul", "(", "CC_t_inv", ",", "np", ".", "matmul", "(", "XC_t_k", ".", "T", ",", "XC_t_k", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "f", "+=", "np", ".", "trace", "(", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "XC_t_k", ",", "CC_t_inv", ")", ",", "XC_t_k", ".", "T", ")", ")", "\n", "\n", "", "f", "=", "np", ".", "real", "(", "f", "+", "k", "*", "np", ".", "sum", "(", "x", ")", ")", "\n", "\n", "", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.tensor_product.tensor_product": [[3, 39], ["numpy.shape", "numpy.shape", "numpy.zeros", "numpy.fft.fft", "numpy.fft.fft", "numpy.real", "range", "numpy.fft.ifft", "numpy.matmul", "range", "numpy.transpose", "numpy.transpose", "numpy.matmul", "range", "range", "numpy.transpose", "numpy.matmul", "numpy.matmul", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft"], ["def", "tensor_product", "(", "A", ",", "ch1", ",", "B", ",", "ch2", ")", ":", "\n", "    ", "dim", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "sz_A", "=", "np", ".", "shape", "(", "A", ")", "\n", "sz_B", "=", "np", ".", "shape", "(", "B", ")", "\n", "dim", "[", "2", "]", "=", "sz_A", "[", "2", "]", "\n", "\n", "if", "ch1", "==", "'t'", ":", "\n", "        ", "dim", "[", "0", "]", "=", "sz_A", "[", "1", "]", "\n", "", "else", ":", "\n", "        ", "dim", "[", "0", "]", "=", "sz_A", "[", "0", "]", "\n", "\n", "", "if", "ch2", "==", "'t'", ":", "\n", "        ", "dim", "[", "1", "]", "=", "sz_B", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "dim", "[", "1", "]", "=", "sz_B", "[", "1", "]", "\n", "\n", "", "S_hat", "=", "np", ".", "zeros", "(", "dim", ",", "dtype", "=", "complex", ")", "\n", "A_hat", "=", "np", ".", "fft", ".", "fft", "(", "A", ",", "axis", "=", "-", "1", ")", "\n", "B_hat", "=", "np", ".", "fft", ".", "fft", "(", "B", ",", "axis", "=", "-", "1", ")", "\n", "\n", "if", "ch1", "==", "'t'", "and", "ch2", "==", "'t'", ":", "\n", "        ", "for", "k", "in", "range", "(", "dim", "[", "2", "]", ")", ":", "\n", "            ", "S_hat", "[", ":", ",", ":", ",", "k", "]", "=", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "A_hat", "[", ":", ",", ":", ",", "k", "]", ")", ",", "np", ".", "transpose", "(", "B_hat", "[", ":", ",", ":", ",", "k", "]", ")", ")", "\n", "", "", "elif", "ch1", "==", "'t'", ":", "\n", "        ", "for", "k", "in", "range", "(", "dim", "[", "2", "]", ")", ":", "\n", "            ", "S_hat", "[", ":", ",", ":", ",", "k", "]", "=", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "A_hat", "[", ":", ",", ":", ",", "k", "]", ")", ",", "B_hat", "[", ":", ",", ":", ",", "k", "]", ")", "\n", "", "", "elif", "ch2", "==", "'t'", ":", "\n", "        ", "for", "k", "in", "range", "(", "dim", "[", "2", "]", ")", ":", "\n", "            ", "S_hat", "[", ":", ",", ":", ",", "k", "]", "=", "np", ".", "matmul", "(", "A_hat", "[", ":", ",", ":", ",", "k", "]", ",", "np", ".", "transpose", "(", "B_hat", "[", ":", ",", ":", ",", "k", "]", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "for", "k", "in", "range", "(", "dim", "[", "2", "]", ")", ":", "\n", "            ", "S_hat", "[", ":", ",", ":", ",", "k", "]", "=", "np", ".", "matmul", "(", "A_hat", "[", ":", ",", ":", ",", "k", "]", ",", "B_hat", "[", ":", ",", ":", ",", "k", "]", ")", "\n", "\n", "", "", "S", "=", "np", ".", "real", "(", "np", ".", "fft", ".", "ifft", "(", "S_hat", ",", "axis", "=", "-", "1", ")", ")", "\n", "\n", "return", "S", "\n", "", ""]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d": [[10, 27], ["numpy.shape", "int", "numpy.zeros", "range", "numpy.transpose", "range", "numpy.reshape", "range", "numpy.floor", "numpy.reshape", "numpy.floor", "numpy.floor"], "function", ["None"], ["def", "tensor_block_3d", "(", "X", ")", ":", "\n", "    ", "size", "=", "np", ".", "shape", "(", "X", ")", "\n", "psize", "=", "params", ".", "patch_size", "\n", "step", "=", "params", ".", "step", "\n", "total_patch_num", "=", "int", "(", "(", "np", ".", "floor", "(", "(", "size", "[", "0", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "*", "(", "np", ".", "floor", "(", "(", "size", "[", "1", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "*", "(", "np", ".", "floor", "(", "(", "size", "[", "2", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", ")", "\n", "Z", "=", "np", ".", "zeros", "(", "[", "psize", ",", "psize", ",", "psize", ",", "total_patch_num", "]", ")", "\n", "for", "i", "in", "range", "(", "psize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "psize", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "psize", ")", ":", "\n", "                ", "patch", "=", "X", "[", "i", ":", "size", "[", "0", "]", "-", "psize", "+", "i", "+", "1", ",", "j", ":", "size", "[", "1", "]", "-", "psize", "+", "j", "+", "1", ",", "k", ":", "size", "[", "2", "]", "-", "psize", "+", "k", "+", "1", "]", "[", ":", ":", "step", ",", ":", ":", "step", ",", ":", ":", "step", "]", "\n", "Z", "[", "i", ",", "j", ",", "k", ",", ":", "]", "=", "np", ".", "reshape", "(", "patch", ",", "[", "1", ",", "total_patch_num", "]", ",", "order", "=", "'F'", ")", "\n", "\n", "", "", "", "X_p", "=", "np", ".", "transpose", "(", "np", ".", "reshape", "(", "Z", ",", "[", "psize", "**", "2", ",", "psize", ",", "total_patch_num", "]", ",", "order", "=", "'F'", ")", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "\n", "return", "X_p", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.block_3d_tensor": [[29, 53], ["int", "int", "int", "numpy.zeros", "numpy.zeros", "numpy.reshape", "range", "numpy.transpose", "range", "numpy.floor", "numpy.floor", "numpy.floor", "range", "numpy.shape", "numpy.shape", "numpy.reshape", "numpy.ones"], "function", ["None"], ["", "def", "block_3d_tensor", "(", "X_p", ",", "size", ")", ":", "\n", "    ", "psize", "=", "params", ".", "patch_size", "\n", "step", "=", "params", ".", "step", "\n", "len_r", "=", "int", "(", "np", ".", "floor", "(", "(", "size", "[", "0", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "\n", "len_c", "=", "int", "(", "np", ".", "floor", "(", "(", "size", "[", "1", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "\n", "len_s", "=", "int", "(", "np", ".", "floor", "(", "(", "size", "[", "2", "]", "-", "psize", ")", "/", "step", ")", "+", "1", ")", "\n", "X", "=", "np", ".", "zeros", "(", "size", ")", "\n", "W", "=", "np", ".", "zeros", "(", "size", ")", "\n", "\n", "Z_p", "=", "np", ".", "reshape", "(", "np", ".", "transpose", "(", "X_p", ",", "[", "0", ",", "2", ",", "1", "]", ")", ",", "[", "psize", ",", "psize", ",", "psize", ",", "np", ".", "shape", "(", "X_p", ")", "[", "1", "]", "]", ",", "order", "=", "'F'", ")", "\n", "\n", "for", "i", "in", "range", "(", "psize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "psize", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "psize", ")", ":", "\n", "                ", "shape", "=", "np", ".", "shape", "(", "X", "[", "i", ":", "(", "len_r", "-", "1", ")", "*", "step", "+", "i", "+", "1", ",", "j", ":", "(", "len_c", "-", "1", ")", "*", "step", "+", "j", "+", "1", ",", "k", ":", "(", "len_s", "-", "1", ")", "*", "step", "+", "k", "+", "1", "]", "[", ":", ":", "step", ",", ":", ":", "step", ",", ":", ":", "step", "]", ")", "\n", "X", "[", "i", ":", "(", "len_r", "-", "1", ")", "*", "step", "+", "i", "+", "1", ",", "j", ":", "(", "len_c", "-", "1", ")", "*", "step", "+", "j", "+", "1", ",", "k", ":", "(", "len_s", "-", "1", ")", "*", "step", "+", "k", "+", "1", "]", "[", ":", ":", "step", ",", ":", ":", "step", ",", ":", ":", "step", "]", "+=", "np", ".", "reshape", "(", "Z_p", "[", "i", ",", "j", ",", "k", ",", ":", "]", ",", "shape", ",", "order", "=", "'F'", ")", "\n", "W", "[", "i", ":", "(", "len_r", "-", "1", ")", "*", "step", "+", "i", "+", "1", ",", "j", ":", "(", "len_c", "-", "1", ")", "*", "step", "+", "j", "+", "1", ",", "k", ":", "(", "len_s", "-", "1", ")", "*", "step", "+", "k", "+", "1", "]", "[", ":", ":", "step", ",", ":", ":", "step", ",", ":", ":", "step", "]", "+=", "np", ".", "ones", "(", "shape", ")", "\n", "\n", "", "", "", "X", "=", "X", "/", "W", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.train.train_balloon": [[22, 40], ["tdsc.Tdsc.save_img", "tensor_block_3d", "numpy.shape", "tdsc.Tdsc", "tensorflow.Session", "tensorflow.global_variables_initializer", "tf.Session.run", "tdsc.Tdsc.train", "tf.Session.close", "scipy.loadmat", "os.path.exists", "os.mkdir"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.save_img", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.train"], ["def", "train_balloon", "(", ")", ":", "\n", "    ", "X", "=", "sio", ".", "loadmat", "(", "'../samples/balloons_101_101_31.mat'", ")", "[", "'Omsi'", "]", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'./out/'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./out/'", ")", "\n", "\n", "", "Tdsc", ".", "save_img", "(", "X", "[", ":", ",", ":", ",", "2", "]", ",", "'./out/origin.png'", ")", "\n", "\n", "X_p", "=", "tensor_block_3d", "(", "X", ")", "\n", "m", ",", "n", ",", "k", "=", "np", ".", "shape", "(", "X_p", ")", "\n", "tdsc", "=", "Tdsc", "(", "m", ",", "n", ",", "k", ")", "\n", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init", ")", "\n", "\n", "tdsc", ".", "train", "(", "sess", ",", "X_p", ",", "X", ",", "params", ".", "sc_max_iter", ")", "\n", "\n", "sess", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.train.train_cifar10": [[42, 66], ["keras.datasets.cifar10.load_data", "numpy.random.randint", "print", "tdsc.Tdsc.save_img", "tensor_block_3d", "numpy.shape", "tdsc.Tdsc", "tensorflow.Session", "tensorflow.global_variables_initializer", "tf.Session.run", "range", "tf.Session.close", "os.path.exists", "os.mkdir", "tdsc.Tdsc.train", "tdsc.Tdsc.save_img", "train_data.astype", "str().zfill", "str"], "function", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.save_img", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.tensor_block_3d", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.train", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.save_img"], ["", "def", "train_cifar10", "(", ")", ":", "\n", "    ", "(", "train_data", ",", "_", ")", ",", "(", "_", ",", "_", ")", "=", "keras", ".", "datasets", ".", "cifar10", ".", "load_data", "(", ")", "\n", "train_data", "=", "(", "train_data", ".", "astype", "(", "np", ".", "float32", ")", "-", "127.5", ")", "/", "127.5", "\n", "index", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "train_data", ".", "shape", "[", "0", "]", ")", "\n", "print", "(", "index", ")", "\n", "X", "=", "train_data", "[", "index", "]", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'./out/'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./out/'", ")", "\n", "\n", "", "Tdsc", ".", "save_img", "(", "X", ",", "'./out/origin.png'", ")", "\n", "\n", "X_p", "=", "tensor_block_3d", "(", "X", ")", "\n", "m", ",", "n", ",", "k", "=", "np", ".", "shape", "(", "X_p", ")", "\n", "tdsc", "=", "Tdsc", "(", "m", ",", "n", ",", "k", ")", "\n", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init", ")", "\n", "\n", "for", "i", "in", "range", "(", "params", ".", "sc_max_iter", ")", ":", "\n", "        ", "X_recon", "=", "tdsc", ".", "train", "(", "sess", ",", "X_p", ",", "X", ",", "1", ")", "\n", "Tdsc", ".", "save_img", "(", "X_recon", ",", "'./out/{}.png'", ".", "format", "(", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", ")", ")", "\n", "\n", "", "sess", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.__init__": [[19, 43], ["tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tdsc.Tdsc.tensor_tsta", "tdsc.Tdsc.tensor_dl", "tensorflow.contrib.opt.ScipyOptimizerInterface", "tdsc.Tdsc.tensor_tsta", "tdsc.Tdsc.tensor_product", "tdsc.Tdsc.init_D", "numpy.zeros", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_tsta", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_dl", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_tsta", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.init_D"], ["\n", "    ", "def", "__init__", "(", "self", ",", "m", ",", "n", ",", "k", ")", ":", "\n", "# size of X: m x n x k", "\n", "# size of D: m x r x k", "\n", "# size of C: r x n x k", "\n", "        ", "self", ".", "m", "=", "m", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "k", "=", "k", "\n", "# self.X_p = tf.placeholder(tf.float32, [batch_size, m, n, k])", "\n", "self", ".", "X_p", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "m", ",", "n", ",", "k", "]", ")", "\n", "self", ".", "D", "=", "tf", ".", "Variable", "(", "self", ".", "init_D", "(", "params", ".", "patch_size", ",", "params", ".", "r", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "C", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "[", "params", ".", "r", ",", "n", ",", "k", "]", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "dual_lambda", "=", "tf", ".", "Variable", "(", "np", ".", "random", ".", "rand", "(", "params", ".", "r", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "# tensor sparse coding", "\n", "self", ".", "C_assign", "=", "self", ".", "tensor_tsta", "(", "self", ".", "X_p", ",", "self", ".", "D", ",", "self", ".", "C", ")", "\n", "\n", "# tensor dictionry learning", "\n", "self", ".", "dl_loss", ",", "self", ".", "D_assign", "=", "self", ".", "tensor_dl", "(", "self", ".", "X_p", ",", "self", ".", "C", ",", "self", ".", "dual_lambda", ")", "\n", "self", ".", "dl_opt", "=", "tf", ".", "contrib", ".", "opt", ".", "ScipyOptimizerInterface", "(", "\n", "self", ".", "dl_loss", ",", "method", "=", "'L-BFGS-B'", ",", "var_to_bounds", "=", "{", "self", ".", "dual_lambda", ":", "(", "0", ",", "np", ".", "infty", ")", "}", ")", "\n", "\n", "# X reconstruction", "\n", "self", ".", "C_assign", "=", "self", ".", "tensor_tsta", "(", "self", ".", "X_p", ",", "self", ".", "D", ",", "self", ".", "C", ")", "\n", "self", ".", "X_p_recon", "=", "self", ".", "tensor_product", "(", "self", ".", "D", ",", "''", ",", "self", ".", "C", ",", "''", ")", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.tensor_dl": [[44, 75], ["tdsc.Tdsc.fft", "tdsc.Tdsc.fft", "tensorflow.matrix_diag", "tensorflow.complex", "tensorflow.concat", "tensorflow.real", "tensorflow.where", "tensorflow.assign", "tensorflow.complex", "tensorflow.complex", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.zeros", "sum", "sum", "tdsc.Tdsc.ifft", "tensorflow.is_nan", "tensorflow.zeros_like", "tensorflow.real", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.split", "tensorflow.split", "tensorflow.transpose", "tensorflow.transpose", "zip", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.shape", "tensorflow.shape", "tensorflow.trace", "tensorflow.trace", "tensorflow.transpose", "zip", "tensorflow.matmul", "zip", "tensorflow.matmul", "zip", "tensorflow.matmul", "tdsc.Tdsc.pinv", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose", "tdsc.Tdsc.pinv", "tensorflow.transpose", "tensorflow.transpose", "tdsc.Tdsc.pinv"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv"], ["\n", "", "def", "tensor_dl", "(", "self", ",", "X_p", ",", "C", ",", "dual_lambda", ")", ":", "\n", "        ", "X_p_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "X_p", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "X_p", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "C_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "C", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "C", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "x_hat_list", "=", "[", "tf", ".", "squeeze", "(", "x", ")", "for", "x", "in", "tf", ".", "split", "(", "X_p_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "c_hat_list", "=", "[", "tf", ".", "squeeze", "(", "c", ")", "for", "c", "in", "tf", ".", "split", "(", "C_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "\n", "cc_hat_list", "=", "[", "tf", ".", "matmul", "(", "c_hat", ",", "tf", ".", "transpose", "(", "c_hat", ")", ")", "for", "c_hat", "in", "c_hat_list", "]", "\n", "xc_hat_list", "=", "[", "tf", ".", "matmul", "(", "x_hat", ",", "tf", ".", "transpose", "(", "c_hat", ")", ")", "for", "(", "x_hat", ",", "c_hat", ")", "\n", "in", "zip", "(", "x_hat_list", ",", "c_hat_list", ")", "]", "\n", "\n", "lambda_diag", "=", "tf", ".", "matrix_diag", "(", "dual_lambda", ")", "\n", "lambda_mat", "=", "tf", ".", "complex", "(", "lambda_diag", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "lambda_diag", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", "\n", "\n", "if", "self", ".", "m", ">", "params", ".", "r", ":", "\n", "            ", "f", "=", "sum", "(", "[", "tf", ".", "trace", "(", "tf", ".", "matmul", "(", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ",", "\n", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "xc_hat", ")", ",", "xc_hat", ")", ")", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "f", "=", "sum", "(", "[", "tf", ".", "trace", "(", "tf", ".", "matmul", "(", "tf", ".", "matmul", "(", "xc_hat", ",", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ")", ",", "\n", "tf", ".", "transpose", "(", "xc_hat", ")", ")", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ")", "\n", "\n", "", "D_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "transpose", "(", "tf", ".", "matmul", "(", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ",", "\n", "tf", ".", "transpose", "(", "xc_hat", ")", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "D_", "=", "tf", ".", "real", "(", "self", ".", "ifft", "(", "D_hat", ")", ")", "\n", "D", "=", "tf", ".", "where", "(", "tf", ".", "is_nan", "(", "D_", ")", ",", "tf", ".", "zeros_like", "(", "D_", ")", ",", "D_", ")", "\n", "D_assign", "=", "tf", ".", "assign", "(", "self", ".", "D", ",", "D", ")", "\n", "min_obj", "=", "tf", ".", "real", "(", "f", ")", "+", "self", ".", "k", "*", "tf", ".", "reduce_sum", "(", "dual_lambda", ")", "\n", "return", "min_obj", ",", "D_assign", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.tensor_tsta": [[76, 101], ["tdsc.Tdsc.tensor_product", "tdsc.Tdsc.norm", "tdsc.Tdsc.tensor_product", "range", "tensorflow.assign", "tensorflow.multiply", "tdsc.Tdsc.tensor_product", "tensorflow.sign", "tensorflow.maximum", "tensorflow.scalar_mul", "numpy.sqrt", "tensorflow.abs"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product"], ["\n", "", "def", "tensor_tsta", "(", "self", ",", "X_p", ",", "D", ",", "C", ")", ":", "\n", "        ", "C0", "=", "C", "\n", "\n", "DD", "=", "self", ".", "tensor_product", "(", "D", ",", "'t'", ",", "D", ",", "''", ")", "\n", "# DD_cmat = blk_circ_mat(DD)", "\n", "# l0 = tf.norm(DD_cmat, 2)", "\n", "l0", "=", "self", ".", "norm", "(", "DD", ")", "\n", "DX", "=", "self", ".", "tensor_product", "(", "D", ",", "'t'", ",", "X_p", ",", "''", ")", "\n", "\n", "J1", "=", "C0", "\n", "t1", "=", "1", "\n", "\n", "for", "i", "in", "range", "(", "params", ".", "tsta_max_iter", ")", ":", "\n", "            ", "l1", "=", "params", ".", "eta", "**", "i", "*", "l0", "\n", "grad_J1", "=", "self", ".", "tensor_product", "(", "DD", ",", "'t'", ",", "J1", ",", "''", ")", "-", "DX", "\n", "temp", "=", "J1", "-", "grad_J1", "/", "l1", "# tf.divide(x, y)", "\n", "C1", "=", "tf", ".", "multiply", "(", "tf", ".", "sign", "(", "temp", ")", ",", "tf", ".", "maximum", "(", "tf", ".", "abs", "(", "temp", ")", "-", "params", ".", "beta", "/", "l1", ",", "0", ")", ")", "\n", "t2", "=", "(", "1", "+", "np", ".", "sqrt", "(", "1", "+", "4", "*", "t1", "**", "2", ")", ")", "/", "2", "\n", "J1", "=", "C1", "+", "tf", ".", "scalar_mul", "(", "(", "t1", "-", "1", ")", "/", "t2", ",", "(", "C1", "-", "C0", ")", ")", "\n", "C0", "=", "C1", "\n", "t1", "=", "t2", "\n", "\n", "", "C_assign", "=", "tf", ".", "assign", "(", "self", ".", "C", ",", "C1", ")", "\n", "\n", "return", "C_assign", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.tensor_product": [[102, 122], ["tdsc.Tdsc.fft", "tdsc.Tdsc.fft", "tensorflow.real", "tensorflow.complex", "tensorflow.complex", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.concat", "tdsc.Tdsc.ifft", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.split", "tensorflow.split", "tensorflow.concat", "tensorflow.shape", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.concat", "tensorflow.concat", "tensorflow.matmul", "zip", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.matmul", "zip", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.matmul", "zip", "tensorflow.matmul", "zip", "tensorflow.transpose"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft"], ["\n", "", "def", "tensor_product", "(", "self", ",", "P", ",", "ch1", ",", "Q", ",", "ch2", ")", ":", "\n", "        ", "P_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "P", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "P", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "Q_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "Q", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "Q", ")", ",", "dtype", "=", "tf", ".", "float32", ")", ")", ")", "\n", "p_hat_list", "=", "[", "tf", ".", "squeeze", "(", "p", ")", "for", "p", "in", "tf", ".", "split", "(", "P_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "q_hat_list", "=", "[", "tf", ".", "squeeze", "(", "q", ")", "for", "q", "in", "tf", ".", "split", "(", "Q_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "\n", "if", "ch1", "==", "'t'", "and", "ch2", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "p_hat", ")", ",", "tf", ".", "transpose", "(", "q_hat", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "ch1", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "p_hat", ")", ",", "q_hat", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "ch2", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "p_hat", ",", "tf", ".", "transpose", "(", "q_hat", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "p_hat", ",", "q_hat", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "", "return", "tf", ".", "real", "(", "self", ".", "ifft", "(", "S_hat", ")", ")", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.train": [[123, 143], ["range", "time.time", "print", "sess.run", "tdsc.Tdsc.dl_opt.minimize", "sess.run", "sess.run", "sess.run", "block_3d_tensor", "time.time", "print", "numpy.shape"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.block_3d_tensor"], ["\n", "", "def", "train", "(", "self", ",", "sess", ",", "X", ",", "X_p", ",", "iter_num", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "iter_num", ")", ":", "\n", "            ", "time_start", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Iteration: {} / {}'", ".", "format", "(", "i", ",", "iter_num", ")", ")", "\n", "\n", "# compute tensor coefficients C", "\n", "sess", ".", "run", "(", "self", ".", "C_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "# compute tensor dictionary D", "\n", "self", ".", "dl_opt", ".", "minimize", "(", "sess", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "sess", ".", "run", "(", "self", ".", "D_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "# recover input tensor X", "\n", "sess", ".", "run", "(", "self", ".", "C_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "X_p_recon", "=", "sess", ".", "run", "(", "self", ".", "X_p_recon", ")", "\n", "X_recon", "=", "block_3d_tensor", "(", "X_p_recon", ",", "np", ".", "shape", "(", "X", ")", ")", "\n", "\n", "time_end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'time:'", ",", "time_end", "-", "time_start", ",", "'s'", ")", "\n", "", "return", "X_recon", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.pinv_svd": [[144, 154], ["tensorflow.svd", "tensorflow.greater", "tensorflow.where", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_max", "tensorflow.reciprocal", "tensorflow.zeros", "tensorflow.complex", "tensorflow.matrix_diag", "tensorflow.zeros", "tensorflow.shape", "tensorflow.matrix_diag"], "methods", ["None"], ["\n", "", "@", "staticmethod", "\n", "def", "pinv_svd", "(", "a", ",", "rcond", "=", "1e-15", ")", ":", "\n", "        ", "s", ",", "u", ",", "v", "=", "tf", ".", "svd", "(", "a", ")", "\n", "# Ignore singular values close to zero to prevent numerical overflow", "\n", "limit", "=", "rcond", "*", "tf", ".", "reduce_max", "(", "s", ")", "\n", "non_zero", "=", "tf", ".", "greater", "(", "s", ",", "limit", ")", "\n", "\n", "reciprocal", "=", "tf", ".", "where", "(", "non_zero", ",", "tf", ".", "reciprocal", "(", "s", ")", ",", "tf", ".", "zeros", "(", "s", ".", "shape", ")", ")", "\n", "lhs", "=", "tf", ".", "matmul", "(", "v", ",", "tf", ".", "complex", "(", "tf", ".", "matrix_diag", "(", "reciprocal", ")", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "tf", ".", "matrix_diag", "(", "reciprocal", ")", ")", ")", ")", ")", "\n", "return", "tf", ".", "matmul", "(", "lhs", ",", "u", ",", "transpose_b", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.pinv": [[155, 158], ["tensorflow.py_func"], "methods", ["None"], ["\n", "", "@", "staticmethod", "\n", "def", "pinv", "(", "a", ")", ":", "\n", "        ", "def", "np_pinv", "(", "a", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.fft": [[159, 164], ["tensorflow.py_func", "numpy.fft.fft"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft"], ["            ", "return", "np", ".", "linalg", ".", "pinv", "(", "a", ")", ".", "astype", "(", "np", ".", "complex64", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_pinv", ",", "[", "a", "]", ",", "tf", ".", "complex64", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "fft", "(", "a", ")", ":", "\n", "        ", "def", "np_fft", "(", "a", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.ifft": [[165, 170], ["tensorflow.py_func", "numpy.fft.ifft"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft"], ["            ", "return", "np", ".", "fft", ".", "fft", "(", "a", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "complex64", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_fft", ",", "[", "a", "]", ",", "tf", ".", "complex64", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "ifft", "(", "a", ")", ":", "\n", "        ", "def", "np_ifft", "(", "a", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.norm": [[171, 184], ["tensorflow.py_func", "numpy.shape", "numpy.zeros", "numpy.reshape", "range", "numpy.linalg.norm", "numpy.transpose", "numpy.roll"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm"], ["            ", "return", "np", ".", "fft", ".", "ifft", "(", "a", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "complex64", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_ifft", ",", "[", "a", "]", ",", "tf", ".", "complex64", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "norm", "(", "A", ")", ":", "\n", "        ", "def", "blk_circ_mat_norm", "(", "A", ")", ":", "\n", "            ", "sz_A", "=", "np", ".", "shape", "(", "A", ")", "\n", "dim", "=", "[", "0", ",", "0", "]", "\n", "dim", "[", "0", "]", "=", "sz_A", "[", "0", "]", "*", "sz_A", "[", "2", "]", "\n", "dim", "[", "1", "]", "=", "sz_A", "[", "1", "]", "*", "sz_A", "[", "2", "]", "\n", "A_c", "=", "np", ".", "zeros", "(", "dim", ")", "\n", "A_mat", "=", "np", ".", "reshape", "(", "np", ".", "transpose", "(", "A", ",", "[", "0", ",", "2", ",", "1", "]", ")", ",", "[", "dim", "[", "0", "]", ",", "sz_A", "[", "1", "]", "]", ",", "order", "=", "'F'", ")", "\n", "for", "k", "in", "range", "(", "sz_A", "[", "2", "]", ")", ":", "\n", "                ", "A_c", "[", ":", ",", "k", "*", "sz_A", "[", "1", "]", ":", "(", "k", "+", "1", ")", "*", "sz_A", "[", "1", "]", "]", "=", "np", ".", "roll", "(", "A_mat", ",", "k", "*", "sz_A", "[", "0", "]", ",", "axis", "=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.init_D": [[185, 194], ["numpy.sqrt", "range", "numpy.transpose", "numpy.sum", "numpy.reshape", "numpy.random.rand", "numpy.square"], "methods", ["None"], ["", "return", "np", ".", "linalg", ".", "norm", "(", "A_c", ",", "2", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "return", "tf", ".", "py_func", "(", "blk_circ_mat_norm", ",", "[", "A", "]", ",", "tf", ".", "float32", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "init_D", "(", "patch_size", ",", "r", ")", ":", "\n", "        ", "D_mat", "=", "np", ".", "random", ".", "rand", "(", "patch_size", "**", "3", ",", "r", ")", "*", "2", "-", "1", "\n", "D_mat_sum", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "D_mat", ")", ",", "axis", "=", "0", ")", ")", "\n", "for", "i", "in", "range", "(", "D_mat_sum", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "D_mat", "[", ":", ",", "i", "]", "/=", "D_mat_sum", "[", "i", "]", "\n", "", "D", "=", "np", ".", "transpose", "(", "np", ".", "reshape", "(", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc.Tdsc.save_img": [[195, 206], ["matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.axis", "plt.figure.add_subplot.set_xticklabels", "plt.figure.add_subplot.set_yticklabels", "plt.figure.add_subplot.set_aspect", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "methods", ["None"], ["D_mat", ",", "[", "patch_size", "**", "2", ",", "patch_size", ",", "params", ".", "r", "]", ",", "order", "=", "'F'", ")", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "return", "D", "\n", "\n", "", "@", "staticmethod", "\n", "def", "save_img", "(", "img", ",", "file_name", ")", ":", "\n", "        ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "5", ",", "15", ")", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "img", ",", "cmap", "=", "'Greys_r'", ")", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.__init__": [[22, 49], ["tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tdsc_mse.TdscMse.tensor_tsta", "tdsc_mse.TdscMse.tensor_cl", "tensorflow.train.AdamOptimizer().minimize", "tdsc_mse.TdscMse.tensor_dl", "tensorflow.contrib.opt.ScipyOptimizerInterface", "tdsc_mse.TdscMse.init_D", "numpy.zeros", "numpy.random.rand", "tensorflow.train.AdamOptimizer"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_tsta", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_cl", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_dl", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.init_D"], ["    ", "def", "__init__", "(", "self", ",", "m", ",", "n", ",", "k", ")", ":", "\n", "# size of X: m x n x k", "\n", "# size of D: m x r x k", "\n", "# size of C: r x n x k", "\n", "        ", "self", ".", "m", "=", "m", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "k", "=", "k", "\n", "# self.X_p = tf.placeholder(tf.float32, [batch_size, m, n, k])", "\n", "self", ".", "X_p", "=", "tf", ".", "placeholder", "(", "tf", ".", "float64", ",", "[", "m", ",", "n", ",", "k", "]", ")", "\n", "self", ".", "D", "=", "tf", ".", "Variable", "(", "self", ".", "init_D", "(", "params", ".", "patch_size", ",", "params", ".", "r", ")", ",", "dtype", "=", "tf", ".", "float64", ")", "\n", "self", ".", "C", "=", "tf", ".", "Variable", "(", "np", ".", "zeros", "(", "[", "params", ".", "r", ",", "n", ",", "k", "]", ")", ",", "dtype", "=", "tf", ".", "float64", ")", "\n", "self", ".", "dual_lambda", "=", "tf", ".", "Variable", "(", "np", ".", "random", ".", "rand", "(", "params", ".", "r", ")", ",", "dtype", "=", "tf", ".", "float64", ")", "\n", "\n", "# tensor coefficients learning", "\n", "self", ".", "C_tsta", "=", "self", ".", "tensor_tsta", "(", "self", ".", "X_p", ",", "self", ".", "D", ",", "self", ".", "C", ")", "\n", "content_loss", ",", "self", ".", "X_p_recon", "=", "self", ".", "tensor_cl", "(", "self", ".", "X_p", ",", "self", ".", "D", ",", "self", ".", "C", ")", "\n", "self", ".", "cl_loss", "=", "content_loss", "\n", "self", ".", "cl_opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", "=", "params", ".", "learning_rate", ",", "\n", "beta1", "=", "0.5", ",", "\n", "beta2", "=", "0.9", "\n", ")", ".", "minimize", "(", "self", ".", "cl_loss", ",", "var_list", "=", "[", "self", ".", "C", "]", ")", "\n", "\n", "# tensor dictionary learning", "\n", "self", ".", "dl_loss", ",", "self", ".", "D_assign", "=", "self", ".", "tensor_dl", "(", "self", ".", "X_p", ",", "self", ".", "C", ",", "self", ".", "dual_lambda", ")", "\n", "self", ".", "dl_opt", "=", "tf", ".", "contrib", ".", "opt", ".", "ScipyOptimizerInterface", "(", "\n", "self", ".", "dl_loss", ",", "method", "=", "'L-BFGS-B'", ",", "var_to_bounds", "=", "{", "self", ".", "dual_lambda", ":", "(", "0", ",", "np", ".", "infty", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_dl": [[50, 81], ["tdsc_mse.TdscMse.fft", "tdsc_mse.TdscMse.fft", "tensorflow.matrix_diag", "tensorflow.complex", "tensorflow.concat", "tensorflow.real", "tensorflow.where", "tensorflow.assign", "tensorflow.complex", "tensorflow.complex", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.zeros", "sum", "sum", "tdsc_mse.TdscMse.ifft", "tensorflow.is_nan", "tensorflow.zeros_like", "tensorflow.real", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.split", "tensorflow.split", "tensorflow.transpose", "tensorflow.transpose", "zip", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.shape", "tensorflow.shape", "tensorflow.trace", "tensorflow.trace", "tensorflow.transpose", "zip", "tensorflow.matmul", "zip", "tensorflow.matmul", "zip", "tensorflow.matmul", "tdsc_mse.TdscMse.pinv", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose", "tdsc_mse.TdscMse.pinv", "tensorflow.transpose", "tensorflow.transpose", "tdsc_mse.TdscMse.pinv"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv"], ["", "def", "tensor_dl", "(", "self", ",", "X_p", ",", "C", ",", "dual_lambda", ")", ":", "\n", "        ", "X_p_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "X_p", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "X_p", ")", ",", "dtype", "=", "tf", ".", "float64", ")", ")", ")", "\n", "C_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "C", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "C", ")", ",", "dtype", "=", "tf", ".", "float64", ")", ")", ")", "\n", "x_hat_list", "=", "[", "tf", ".", "squeeze", "(", "x", ")", "for", "x", "in", "tf", ".", "split", "(", "X_p_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "c_hat_list", "=", "[", "tf", ".", "squeeze", "(", "c", ")", "for", "c", "in", "tf", ".", "split", "(", "C_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "\n", "cc_hat_list", "=", "[", "tf", ".", "matmul", "(", "c_hat", ",", "tf", ".", "transpose", "(", "c_hat", ")", ")", "for", "c_hat", "in", "c_hat_list", "]", "\n", "xc_hat_list", "=", "[", "tf", ".", "matmul", "(", "x_hat", ",", "tf", ".", "transpose", "(", "c_hat", ")", ")", "for", "(", "x_hat", ",", "c_hat", ")", "\n", "in", "zip", "(", "x_hat_list", ",", "c_hat_list", ")", "]", "\n", "\n", "lambda_diag", "=", "tf", ".", "matrix_diag", "(", "dual_lambda", ")", "\n", "lambda_mat", "=", "tf", ".", "complex", "(", "lambda_diag", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "lambda_diag", ")", ",", "dtype", "=", "tf", ".", "float64", ")", ")", "\n", "\n", "if", "self", ".", "m", ">", "params", ".", "r", ":", "\n", "            ", "f", "=", "sum", "(", "[", "tf", ".", "trace", "(", "tf", ".", "matmul", "(", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ",", "\n", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "xc_hat", ")", ",", "xc_hat", ")", ")", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "f", "=", "sum", "(", "[", "tf", ".", "trace", "(", "tf", ".", "matmul", "(", "tf", ".", "matmul", "(", "xc_hat", ",", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ")", ",", "\n", "tf", ".", "transpose", "(", "xc_hat", ")", ")", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ")", "\n", "\n", "", "D_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "transpose", "(", "tf", ".", "matmul", "(", "self", ".", "pinv", "(", "cc_hat", "+", "lambda_mat", ")", ",", "\n", "tf", ".", "transpose", "(", "xc_hat", ")", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "cc_hat", ",", "xc_hat", ")", "in", "zip", "(", "cc_hat_list", ",", "xc_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "D_", "=", "tf", ".", "real", "(", "self", ".", "ifft", "(", "D_hat", ")", ")", "\n", "D", "=", "tf", ".", "where", "(", "tf", ".", "is_nan", "(", "D_", ")", ",", "tf", ".", "zeros_like", "(", "D_", ")", ",", "D_", ")", "\n", "D_assign", "=", "tf", ".", "assign", "(", "self", ".", "D", ",", "D", ")", "\n", "min_obj", "=", "tf", ".", "real", "(", "f", ")", "+", "self", ".", "k", "*", "tf", ".", "reduce_sum", "(", "dual_lambda", ")", "\n", "return", "min_obj", ",", "D_assign", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_tsta": [[82, 106], ["tdsc_mse.TdscMse.tensor_product", "tdsc_mse.TdscMse.norm", "tdsc_mse.TdscMse.tensor_product", "range", "tensorflow.assign", "tensorflow.multiply", "tdsc_mse.TdscMse.tensor_product", "tensorflow.sign", "tensorflow.maximum", "tensorflow.scalar_mul", "numpy.sqrt", "tensorflow.abs"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product"], ["", "def", "tensor_tsta", "(", "self", ",", "X_p", ",", "D", ",", "C", ")", ":", "\n", "        ", "C0", "=", "C", "\n", "\n", "DD", "=", "self", ".", "tensor_product", "(", "D", ",", "'t'", ",", "D", ",", "''", ")", "\n", "# DD_cmat = blk_circ_mat(DD)", "\n", "# l0 = tf.norm(DD_cmat, 2)", "\n", "l0", "=", "self", ".", "norm", "(", "DD", ")", "\n", "DX", "=", "self", ".", "tensor_product", "(", "D", ",", "'t'", ",", "X_p", ",", "''", ")", "\n", "\n", "J1", "=", "C0", "\n", "t1", "=", "1", "\n", "\n", "for", "i", "in", "range", "(", "params", ".", "tsta_max_iter", ")", ":", "\n", "            ", "l1", "=", "params", ".", "eta", "**", "i", "*", "l0", "\n", "grad_J1", "=", "self", ".", "tensor_product", "(", "DD", ",", "'t'", ",", "J1", ",", "''", ")", "-", "DX", "\n", "temp", "=", "J1", "-", "grad_J1", "/", "l1", "# tf.divide(x, y)", "\n", "C1", "=", "tf", ".", "multiply", "(", "tf", ".", "sign", "(", "temp", ")", ",", "tf", ".", "maximum", "(", "tf", ".", "abs", "(", "temp", ")", "-", "params", ".", "beta", "/", "l1", ",", "0", ")", ")", "\n", "t2", "=", "(", "1", "+", "np", ".", "sqrt", "(", "1", "+", "4", "*", "t1", "**", "2", ")", ")", "/", "2", "\n", "J1", "=", "C1", "+", "tf", ".", "scalar_mul", "(", "(", "t1", "-", "1", ")", "/", "t2", ",", "(", "C1", "-", "C0", ")", ")", "\n", "C0", "=", "C1", "\n", "t1", "=", "t2", "\n", "\n", "", "C_tsta", "=", "tf", ".", "assign", "(", "self", ".", "C", ",", "C1", ")", "\n", "return", "C_tsta", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_cl": [[107, 112], ["tdsc_mse.TdscMse.tensor_product", "tensorflow.reduce_sum", "tensorflow.square"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product"], ["", "def", "tensor_cl", "(", "self", ",", "X_p", ",", "D", ",", "C", ")", ":", "\n", "        ", "X_p_recon", "=", "self", ".", "tensor_product", "(", "D", ",", "''", ",", "C", ",", "''", ")", "\n", "content_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "X_p_recon", "-", "X_p", ")", ")", "\n", "\n", "return", "content_loss", ",", "X_p_recon", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.tensor_product": [[113, 133], ["tdsc_mse.TdscMse.fft", "tdsc_mse.TdscMse.fft", "tensorflow.real", "tensorflow.complex", "tensorflow.complex", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.concat", "tdsc_mse.TdscMse.ifft", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.split", "tensorflow.split", "tensorflow.concat", "tensorflow.shape", "tensorflow.shape", "tensorflow.expand_dims", "tensorflow.concat", "tensorflow.concat", "tensorflow.matmul", "zip", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.matmul", "zip", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.matmul", "zip", "tensorflow.matmul", "zip", "tensorflow.transpose"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft"], ["", "def", "tensor_product", "(", "self", ",", "P", ",", "ch1", ",", "Q", ",", "ch2", ")", ":", "\n", "        ", "P_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "P", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "P", ")", ",", "dtype", "=", "tf", ".", "float64", ")", ")", ")", "\n", "Q_hat", "=", "self", ".", "fft", "(", "tf", ".", "complex", "(", "Q", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "Q", ")", ",", "dtype", "=", "tf", ".", "float64", ")", ")", ")", "\n", "p_hat_list", "=", "[", "tf", ".", "squeeze", "(", "p", ")", "for", "p", "in", "tf", ".", "split", "(", "P_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "q_hat_list", "=", "[", "tf", ".", "squeeze", "(", "q", ")", "for", "q", "in", "tf", ".", "split", "(", "Q_hat", ",", "self", ".", "k", ",", "axis", "=", "-", "1", ")", "]", "\n", "\n", "if", "ch1", "==", "'t'", "and", "ch2", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "p_hat", ")", ",", "tf", ".", "transpose", "(", "q_hat", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "ch1", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "p_hat", ")", ",", "q_hat", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "ch2", "==", "'t'", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "p_hat", ",", "tf", ".", "transpose", "(", "q_hat", ")", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "S_hat", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "tf", ".", "matmul", "(", "p_hat", ",", "q_hat", ")", ",", "axis", "=", "-", "1", ")", "\n", "for", "(", "p_hat", ",", "q_hat", ")", "in", "zip", "(", "p_hat_list", ",", "q_hat_list", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "", "return", "tf", ".", "real", "(", "self", ".", "ifft", "(", "S_hat", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.train": [[134, 163], ["sess.run", "tdsc_mse.TdscMse.dl_opt.minimize", "sess.run", "sess.run", "range", "time.time", "print", "range", "tdsc_mse.TdscMse.dl_opt.minimize", "sess.run", "range", "sess.run", "block_3d_tensor", "tdsc_mse.TdscMse.save_img", "time.time", "print", "sess.run", "print", "sess.run", "numpy.shape", "str().zfill", "str"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.2DSC.block_3d.block_3d_tensor", "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.save_img"], ["", "def", "train", "(", "self", ",", "sess", ",", "X_p", ",", "X", ",", "iter_num", ")", ":", "\n", "        ", "sess", ".", "run", "(", "self", ".", "C_tsta", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "self", ".", "dl_opt", ".", "minimize", "(", "sess", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "sess", ".", "run", "(", "self", ".", "D_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "sess", ".", "run", "(", "self", ".", "C_tsta", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "for", "i", "in", "range", "(", "iter_num", ")", ":", "\n", "            ", "time_start", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Iteration: {} / {}'", ".", "format", "(", "i", ",", "params", ".", "sc_max_iter", ")", ",", ")", "\n", "\n", "# compute tensor coefficients C", "\n", "for", "j", "in", "range", "(", "50", ")", ":", "\n", "                ", "_", ",", "loss", "=", "sess", ".", "run", "(", "[", "self", ".", "cl_opt", ",", "self", ".", "cl_loss", "]", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "print", "(", "loss", ")", "\n", "\n", "# compute tensor dictionary D", "\n", "", "self", ".", "dl_opt", ".", "minimize", "(", "sess", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "sess", ".", "run", "(", "self", ".", "D_assign", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "\n", "# recover input tensor X", "\n", "for", "j", "in", "range", "(", "50", ")", ":", "\n", "                ", "sess", ".", "run", "(", "self", ".", "cl_opt", ",", "feed_dict", "=", "{", "self", ".", "X_p", ":", "X_p", "}", ")", "\n", "", "X_p_recon", "=", "sess", ".", "run", "(", "self", ".", "X_p_recon", ")", "\n", "X_recon", "=", "block_3d_tensor", "(", "X_p_recon", ",", "np", ".", "shape", "(", "X", ")", ")", "\n", "\n", "self", ".", "save_img", "(", "X_recon", "[", ":", ",", ":", ",", "2", "]", ",", "'./out/{}.png'", ".", "format", "(", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", ")", ")", "\n", "\n", "time_end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'time:'", ",", "time_end", "-", "time_start", ",", "'s'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv_svd": [[164, 174], ["tensorflow.svd", "tensorflow.greater", "tensorflow.where", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.reduce_max", "tensorflow.reciprocal", "tensorflow.zeros", "tensorflow.complex", "tensorflow.matrix_diag", "tensorflow.zeros", "tensorflow.shape", "tensorflow.matrix_diag"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "pinv_svd", "(", "a", ",", "rcond", "=", "1e-15", ")", ":", "\n", "        ", "s", ",", "u", ",", "v", "=", "tf", ".", "svd", "(", "a", ")", "\n", "# Ignore singular values close to zero to prevent numerical overflow", "\n", "limit", "=", "rcond", "*", "tf", ".", "reduce_max", "(", "s", ")", "\n", "non_zero", "=", "tf", ".", "greater", "(", "s", ",", "limit", ")", "\n", "\n", "reciprocal", "=", "tf", ".", "where", "(", "non_zero", ",", "tf", ".", "reciprocal", "(", "s", ")", ",", "tf", ".", "zeros", "(", "s", ".", "shape", ")", ")", "\n", "lhs", "=", "tf", ".", "matmul", "(", "v", ",", "tf", ".", "complex", "(", "tf", ".", "matrix_diag", "(", "reciprocal", ")", ",", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "tf", ".", "matrix_diag", "(", "reciprocal", ")", ")", ")", ")", ")", "\n", "return", "tf", ".", "matmul", "(", "lhs", ",", "u", ",", "transpose_b", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.pinv": [[175, 178], ["tensorflow.py_func"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "pinv", "(", "a", ")", ":", "\n", "        ", "return", "tf", ".", "py_func", "(", "np", ".", "linalg", ".", "pinv", ",", "[", "a", "]", ",", "tf", ".", "complex128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft": [[179, 184], ["tensorflow.py_func", "numpy.fft.fft"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.fft"], ["", "@", "staticmethod", "\n", "def", "fft", "(", "a", ")", ":", "\n", "        ", "def", "np_fft", "(", "a", ")", ":", "\n", "            ", "return", "np", ".", "fft", ".", "fft", "(", "a", ",", "axis", "=", "-", "1", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_fft", ",", "[", "a", "]", ",", "tf", ".", "complex128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft": [[185, 190], ["tensorflow.py_func", "numpy.fft.ifft"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.ifft"], ["", "@", "staticmethod", "\n", "def", "ifft", "(", "a", ")", ":", "\n", "        ", "def", "np_ifft", "(", "a", ")", ":", "\n", "            ", "return", "np", ".", "fft", ".", "ifft", "(", "a", ",", "axis", "=", "-", "1", ")", "\n", "", "return", "tf", ".", "py_func", "(", "np_ifft", ",", "[", "a", "]", ",", "tf", ".", "complex128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm": [[191, 204], ["tensorflow.py_func", "numpy.shape", "numpy.zeros", "numpy.reshape", "range", "numpy.linalg.norm", "numpy.transpose", "numpy.roll"], "methods", ["home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.norm"], ["", "@", "staticmethod", "\n", "def", "norm", "(", "A", ")", ":", "\n", "        ", "def", "blk_circ_mat_norm", "(", "A", ")", ":", "\n", "            ", "sz_A", "=", "np", ".", "shape", "(", "A", ")", "\n", "dim", "=", "[", "0", ",", "0", "]", "\n", "dim", "[", "0", "]", "=", "sz_A", "[", "0", "]", "*", "sz_A", "[", "2", "]", "\n", "dim", "[", "1", "]", "=", "sz_A", "[", "1", "]", "*", "sz_A", "[", "2", "]", "\n", "A_c", "=", "np", ".", "zeros", "(", "dim", ")", "\n", "A_mat", "=", "np", ".", "reshape", "(", "np", ".", "transpose", "(", "A", ",", "[", "0", ",", "2", ",", "1", "]", ")", ",", "[", "dim", "[", "0", "]", ",", "sz_A", "[", "1", "]", "]", ",", "order", "=", "'F'", ")", "\n", "for", "k", "in", "range", "(", "sz_A", "[", "2", "]", ")", ":", "\n", "                ", "A_c", "[", ":", ",", "k", "*", "sz_A", "[", "1", "]", ":", "(", "k", "+", "1", ")", "*", "sz_A", "[", "1", "]", "]", "=", "np", ".", "roll", "(", "A_mat", ",", "k", "*", "sz_A", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "", "return", "np", ".", "linalg", ".", "norm", "(", "A_c", ",", "2", ")", "\n", "", "return", "tf", ".", "py_func", "(", "blk_circ_mat_norm", ",", "[", "A", "]", ",", "tf", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.init_D": [[205, 214], ["numpy.sqrt", "range", "numpy.transpose", "numpy.sum", "numpy.reshape", "numpy.random.rand", "numpy.square"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "init_D", "(", "patch_size", ",", "r", ")", ":", "\n", "        ", "D_mat", "=", "np", ".", "random", ".", "rand", "(", "patch_size", "**", "3", ",", "r", ")", "*", "2", "-", "1", "\n", "D_mat_sum", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "D_mat", ")", ",", "axis", "=", "0", ")", ")", "\n", "for", "i", "in", "range", "(", "D_mat_sum", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "D_mat", "[", ":", ",", "i", "]", "/=", "D_mat_sum", "[", "i", "]", "\n", "", "D", "=", "np", ".", "transpose", "(", "np", ".", "reshape", "(", "\n", "D_mat", ",", "[", "patch_size", "**", "2", ",", "patch_size", ",", "params", ".", "r", "]", ",", "order", "=", "'F'", ")", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "return", "D", "\n", "\n"]], "home.repos.pwc.inspect_result.hust512_Tensor-GAN.tensorflow.tdsc_mse.TdscMse.save_img": [[215, 226], ["matplotlib.pyplot.figure", "matplotlib.pyplot.figure.add_subplot", "matplotlib.pyplot.axis", "plt.figure.add_subplot.set_xticklabels", "plt.figure.add_subplot.set_yticklabels", "plt.figure.add_subplot.set_aspect", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "save_img", "(", "img", ",", "file_name", ")", ":", "\n", "        ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "5", ",", "15", ")", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "plt", ".", "imshow", "(", "img", ",", "cmap", "=", "'Greys_r'", ")", "\n", "plt", ".", "savefig", "(", "file_name", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n"]]}