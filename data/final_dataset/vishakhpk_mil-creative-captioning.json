{"home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.__init__": [[90, 92], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.initializer": [[93, 96], ["fairseq.data.encoders.gpt2_bpe.get_encoder"], "methods", ["None"], ["", "def", "initializer", "(", "self", ")", ":", "\n", "        ", "global", "bpe", "\n", "bpe", "=", "get_encoder", "(", "self", ".", "args", ".", "encoder_json", ",", "self", ".", "args", ".", "vocab_bpe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.encode": [[97, 101], ["bpe.encode", "list", "map"], "methods", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.encode"], ["", "def", "encode", "(", "self", ",", "line", ")", ":", "\n", "        ", "global", "bpe", "\n", "ids", "=", "bpe", ".", "encode", "(", "line", ")", "\n", "return", "list", "(", "map", "(", "str", ",", "ids", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.decode": [[102, 105], ["bpe.decode"], "methods", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.decode"], ["", "def", "decode", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "global", "bpe", "\n", "return", "bpe", ".", "decode", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.encode_lines": [[106, 118], ["line.strip.strip.strip", "multiprocessing_bpe_encoder.MultiprocessingEncoder.encode", "enc_lines.append", "len"], "methods", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.encode"], ["", "def", "encode_lines", "(", "self", ",", "lines", ")", ":", "\n", "        ", "\"\"\"\n        Encode a set of lines. All lines will be encoded together.\n        \"\"\"", "\n", "enc_lines", "=", "[", "]", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "len", "(", "line", ")", "==", "0", "and", "not", "self", ".", "args", ".", "keep_empty", ":", "\n", "                ", "return", "[", "\"EMPTY\"", ",", "None", "]", "\n", "", "tokens", "=", "self", ".", "encode", "(", "line", ")", "\n", "enc_lines", ".", "append", "(", "\" \"", ".", "join", "(", "tokens", ")", ")", "\n", "", "return", "[", "\"PASS\"", ",", "enc_lines", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.decode_lines": [[119, 125], ["map", "dec_lines.append", "line.strip().split", "multiprocessing_bpe_encoder.MultiprocessingEncoder.decode", "line.strip"], "methods", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.decode"], ["", "def", "decode_lines", "(", "self", ",", "lines", ")", ":", "\n", "        ", "dec_lines", "=", "[", "]", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "tokens", "=", "map", "(", "int", ",", "line", ".", "strip", "(", ")", ".", "split", "(", ")", ")", "\n", "dec_lines", ".", "append", "(", "self", ".", "decode", "(", "tokens", ")", ")", "\n", "", "return", "[", "\"PASS\"", ",", "dec_lines", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.main": [[18, 86], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "len", "len", "contextlib.ExitStack", "multiprocessing_bpe_encoder.MultiprocessingEncoder", "multiprocessing.Pool", "multiprocessing.Pool.imap", "collections.Counter", "enumerate", "collections.Counter.most_common", "zip", "print", "stack.enter_context", "stack.enter_context", "zip", "print", "open", "open", "print"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "\"\"\"\n    Helper script to encode raw text with the GPT-2 BPE using multiple processes.\n    The encoder.json and vocab.bpe files can be obtained here:\n    - https://dl.fbaipublicfiles.com/fairseq/gpt2_bpe/encoder.json\n    - https://dl.fbaipublicfiles.com/fairseq/gpt2_bpe/vocab.bpe\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--encoder-json\"", ",", "\n", "help", "=", "'path to encoder.json'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--vocab-bpe\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to vocab.bpe'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--inputs\"", ",", "\n", "nargs", "=", "\"+\"", ",", "\n", "default", "=", "[", "'-'", "]", ",", "\n", "help", "=", "\"input files to filter/encode\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--outputs\"", ",", "\n", "nargs", "=", "\"+\"", ",", "\n", "default", "=", "[", "'-'", "]", ",", "\n", "help", "=", "\"path to save encoded outputs\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--keep-empty\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "help", "=", "\"keep empty lines\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\"--workers\"", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "assert", "len", "(", "args", ".", "inputs", ")", "==", "len", "(", "args", ".", "outputs", ")", ",", "\"number of input and output paths should match\"", "\n", "\n", "with", "contextlib", ".", "ExitStack", "(", ")", "as", "stack", ":", "\n", "        ", "inputs", "=", "[", "\n", "stack", ".", "enter_context", "(", "open", "(", "input", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", ")", "\n", "if", "input", "!=", "\"-\"", "else", "sys", ".", "stdin", "\n", "for", "input", "in", "args", ".", "inputs", "\n", "]", "\n", "outputs", "=", "[", "\n", "stack", ".", "enter_context", "(", "open", "(", "output", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", ")", "\n", "if", "output", "!=", "\"-\"", "else", "sys", ".", "stdout", "\n", "for", "output", "in", "args", ".", "outputs", "\n", "]", "\n", "\n", "encoder", "=", "MultiprocessingEncoder", "(", "args", ")", "\n", "pool", "=", "Pool", "(", "args", ".", "workers", ",", "initializer", "=", "encoder", ".", "initializer", ")", "\n", "encoded_lines", "=", "pool", ".", "imap", "(", "encoder", ".", "encode_lines", ",", "zip", "(", "*", "inputs", ")", ",", "100", ")", "\n", "\n", "stats", "=", "Counter", "(", ")", "\n", "for", "i", ",", "(", "filt", ",", "enc_lines", ")", "in", "enumerate", "(", "encoded_lines", ",", "start", "=", "1", ")", ":", "\n", "            ", "if", "filt", "==", "\"PASS\"", ":", "\n", "                ", "for", "enc_line", ",", "output_h", "in", "zip", "(", "enc_lines", ",", "outputs", ")", ":", "\n", "                    ", "print", "(", "enc_line", ",", "file", "=", "output_h", ")", "\n", "", "", "else", ":", "\n", "                ", "stats", "[", "\"num_filtered_\"", "+", "filt", "]", "+=", "1", "\n", "", "if", "i", "%", "10000", "==", "0", ":", "\n", "                ", "print", "(", "\"processed {} lines\"", ".", "format", "(", "i", ")", ",", "file", "=", "sys", ".", "stderr", ")", "\n", "\n", "", "", "for", "k", ",", "v", "in", "stats", ".", "most_common", "(", ")", ":", "\n", "            ", "print", "(", "\"[{}] filtered {} lines\"", ".", "format", "(", "k", ",", "v", ")", ",", "file", "=", "sys", ".", "stderr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler._interactive_running": [[384, 400], ["print", "re.sub", "bart.fill_mask", "range", "print", "SHARED[].observe", "SHARED[].act", "print", "len", "model_res[].append", "[].numpy().item", "[].numpy"], "methods", ["None"], ["def", "_interactive_running", "(", "self", ",", "opt", ",", "reply_text", ",", "model_idx", "=", "0", ")", ":", "\n", "        ", "reply", "=", "{", "'episode_done'", ":", "False", ",", "'text'", ":", "reply_text", "}", "\n", "print", "(", "\"reply: \"", ",", "reply", ")", "\n", "if", "model_idx", "==", "1", ":", "\n", "            ", "reply", "[", "'text'", "]", "=", "re", ".", "sub", "(", "\"<replace>.*?</replace>\"", ",", "\"<mask>\"", ",", "reply", "[", "'text'", "]", ",", "flags", "=", "re", ".", "DOTALL", ")", "\n", "beams", "=", "bart", ".", "fill_mask", "(", "[", "reply", "[", "'text'", "]", "]", ",", "topk", "=", "3", ",", "beam", "=", "5", ")", "\n", "model_res", "=", "{", "}", "\n", "model_res", "[", "'beam_texts'", "]", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "beams", "[", "0", "]", ")", ")", ":", "\n", "                ", "model_res", "[", "'beam_texts'", "]", ".", "append", "(", "(", "beams", "[", "0", "]", "[", "i", "]", "[", "0", "]", ",", "beams", "[", "0", "]", "[", "i", "]", "[", "1", "]", ".", "numpy", "(", ")", ".", "item", "(", ")", ")", ")", "\n", "", "print", "(", "\"Using baseline\"", ")", "\n", "", "else", ":", "\n", "            ", "SHARED", "[", "'agent'", "]", ".", "observe", "(", "reply", ")", "\n", "model_res", "=", "SHARED", "[", "'agent'", "]", ".", "act", "(", ")", "\n", "print", "(", "\"Using finetuned\"", ")", "\n", "", "return", "model_res", "#, baseline_res", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler.do_HEAD": [[401, 408], ["interactive_web.MyHandler.send_response", "interactive_web.MyHandler.send_header", "interactive_web.MyHandler.end_headers"], "methods", ["None"], ["", "def", "do_HEAD", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Handle HEAD requests.\n        \"\"\"", "\n", "self", ".", "send_response", "(", "200", ")", "\n", "self", ".", "send_header", "(", "'Content-type'", ",", "'text/html'", ")", "\n", "self", ".", "end_headers", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler.do_POST": [[409, 466], ["int", "interactive_web.MyHandler.rfile.read", "parlai.info", "interactive_web.MyHandler.decode", "json.loads.split", "temp[].find", "interactive_web.MyHandler._interactive_running", "print", "interactive_web.MyHandler.send_response", "interactive_web.MyHandler.send_header", "interactive_web.MyHandler.end_headers", "json.dumps", "interactive_web.MyHandler.wfile.write", "SHARED[].reset", "len", "print", "params.split", "print", "int", "SHARED.get", "bytes", "int", "interactive_web.MyHandler.rfile.read", "parlai.info", "interactive_web.MyHandler.decode", "json.loads", "print", "pickle.dump", "interactive_web.MyHandler.send_response", "interactive_web.MyHandler.send_header", "interactive_web.MyHandler.end_headers", "SHARED[].reset", "interactive_web.MyHandler.wfile.write", "interactive_web.MyHandler._respond", "len", "interactive_web.MyHandler.headers[].split", "len", "open", "bytes", "interactive_web.MyHandler.decode", "params.split", "interactive_web.MyHandler.decode", "str", "len", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.decode", "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler._interactive_running", "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.decode", "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler._respond", "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.decode", "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.model_training.multiprocessing_bpe_encoder.MultiprocessingEncoder.decode"], ["", "def", "do_POST", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Handle POST request, especially replying to a chat message.\n        \"\"\"", "\n", "if", "self", ".", "path", "==", "'/interact'", ":", "\n", "            ", "content_length", "=", "int", "(", "self", ".", "headers", "[", "'Content-Length'", "]", ")", "\n", "body", "=", "self", ".", "rfile", ".", "read", "(", "content_length", ")", "\n", "logging", ".", "info", "(", "\"POST request,\\nPath: \"", "+", "str", "(", "self", ".", "path", ")", "+", "\"\\nHeaders:\\n\"", "+", "str", "(", "self", ".", "headers", ")", "+", "\"\\n\\nBody:\\n\"", "+", "body", ".", "decode", "(", "'utf-8'", ")", "+", "\"\\n\"", ")", "\n", "#print(\"Received: \", body.decode('utf-8'))", "\n", "temp", "=", "body", ".", "decode", "(", "'utf-8'", ")", "\n", "temp", "=", "temp", ".", "split", "(", "\"####\"", ")", "\n", "assert", "len", "(", "temp", ")", "==", "2", "\n", "index", "=", "temp", "[", "0", "]", ".", "find", "(", "temp", "[", "1", "]", ")", "\n", "if", "index", "==", "-", "1", "or", "len", "(", "temp", "[", "1", "]", ")", "==", "0", ":", "\n", "                ", "ip", "=", "temp", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "ip", "=", "temp", "[", "0", "]", "[", ":", "index", "]", "+", "\"<mask>\"", "+", "temp", "[", "0", "]", "[", "index", "+", "len", "(", "temp", "[", "1", "]", ")", ":", "]", "\n", "#print(\"Input: \", ip)", "\n", "", "try", ":", "\n", "                ", "params", "=", "self", ".", "headers", "[", "'Referer'", "]", ".", "split", "(", "\"?\"", ")", "[", "-", "1", "]", "\n", "if", "\"&\"", "in", "params", ":", "\n", "                    ", "params", "=", "params", ".", "split", "(", "\"&\"", ")", "[", "0", "]", "\n", "", "assert", "\"=\"", "in", "params", ",", "print", "(", "\"Params Error \"", ",", "params", ")", "\n", "temp", "=", "params", ".", "split", "(", "\"=\"", ")", "\n", "assert", "len", "(", "temp", ")", "==", "2", ",", "print", "(", "\"Params Length Error \"", ",", "temp", ")", "\n", "model_idx", "=", "int", "(", "temp", "[", "-", "1", "]", ")", "\n", "", "except", ":", "\n", "                ", "model_idx", "=", "0", "\n", "", "model_response", "=", "self", ".", "_interactive_running", "(", "\n", "SHARED", ".", "get", "(", "'opt'", ")", ",", "ip", ",", "#body.decode('utf-8')", "\n", "model_idx", "\n", ")", "\n", "print", "(", "\"Model response: \"", ",", "model_response", ")", "\n", "#print(\"Baseline response: \", baseline_response[0][0])", "\n", "#print(\"Model response: \", model_response)", "\n", "self", ".", "send_response", "(", "200", ")", "\n", "self", ".", "send_header", "(", "'Content-type'", ",", "'application/json'", ")", "\n", "self", ".", "end_headers", "(", ")", "\n", "json_str", "=", "json", ".", "dumps", "(", "model_response", ")", "\n", "self", ".", "wfile", ".", "write", "(", "bytes", "(", "json_str", ",", "'utf-8'", ")", ")", "\n", "SHARED", "[", "'agent'", "]", ".", "reset", "(", ")", "\n", "", "elif", "self", ".", "path", "==", "'/reset'", ":", "\n", "            ", "content_length", "=", "int", "(", "self", ".", "headers", "[", "'Content-Length'", "]", ")", "\n", "body", "=", "self", ".", "rfile", ".", "read", "(", "content_length", ")", "\n", "logging", ".", "info", "(", "\"POST request,\\nPath: \"", "+", "str", "(", "self", ".", "path", ")", "+", "\"\\nHeaders:\\n\"", "+", "str", "(", "self", ".", "headers", ")", "+", "\"\\n\\nBody:\\n\"", "+", "body", ".", "decode", "(", "'utf-8'", ")", "+", "\"\\n\"", ")", "\n", "#print(\"Received: \", body.decode('utf-8'))", "\n", "temp", "=", "body", ".", "decode", "(", "'utf-8'", ")", "\n", "temp", "=", "json", ".", "loads", "(", "temp", ")", "\n", "print", "(", "\"Received complete logs \"", ",", "temp", ")", "\n", "pickle", ".", "dump", "(", "temp", ",", "open", "(", "\"./Process-Results/\"", "+", "temp", "[", "'UUID'", "]", "+", "\".pkl\"", ",", "\"wb\"", ")", ")", "\n", "self", ".", "send_response", "(", "200", ")", "\n", "self", ".", "send_header", "(", "'Content-type'", ",", "'application/json'", ")", "\n", "self", ".", "end_headers", "(", ")", "\n", "SHARED", "[", "'agent'", "]", ".", "reset", "(", ")", "\n", "self", ".", "wfile", ".", "write", "(", "bytes", "(", "\"{}\"", ",", "'utf-8'", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "_respond", "(", "{", "'status'", ":", "500", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler.do_GET": [[467, 482], ["parlai.info", "interactive_web.MyHandler._respond", "interactive_web.MyHandler._respond", "str", "str"], "methods", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler._respond", "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler._respond"], ["", "", "def", "do_GET", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Respond to GET request, especially the initial load.\n        \"\"\"", "\n", "logging", ".", "info", "(", "\"GET request,\\nPath: \"", "+", "str", "(", "self", ".", "path", ")", "+", "\"\\nHeaders:\\n\"", "+", "str", "(", "self", ".", "headers", ")", "+", "\"\\n\"", ")", "\n", "\n", "paths", "=", "{", "\n", "'/'", ":", "{", "'status'", ":", "200", "}", ",", "\n", "'/favicon.ico'", ":", "{", "'status'", ":", "202", "}", ",", "# Need for chrome", "\n", "'/pic.png'", ":", "{", "'status'", ":", "200", "}", ",", "\n", "}", "\n", "if", "self", ".", "path", "in", "paths", ":", "\n", "            ", "self", ".", "_respond", "(", "paths", "[", "self", ".", "path", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_respond", "(", "{", "'status'", ":", "500", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler._handle_http": [[483, 508], ["interactive_web.MyHandler.send_response", "interactive_web.MyHandler.send_header", "interactive_web.MyHandler.end_headers", "WEB_HTML.format", "bytes", "interactive_web.MyHandler.send_header", "interactive_web.MyHandler.end_headers", "open", "open.read", "open.close", "print", "params.split", "print", "int", "interactive_web.MyHandler.headers[].split", "len", "os.listdir", "random.choice", "params.split", "os.listdir", "len", "os.listdir"], "methods", ["None"], ["", "", "def", "_handle_http", "(", "self", ",", "status_code", ",", "path", ",", "text", "=", "None", ")", ":", "\n", "        ", "self", ".", "send_response", "(", "status_code", ")", "\n", "dir_name", "=", "\"./Image-Source/\"", "\n", "if", "path", "[", "-", "3", ":", "]", "==", "\"png\"", ":", "\n", "            ", "try", ":", "\n", "                ", "params", "=", "self", ".", "headers", "[", "'Referer'", "]", ".", "split", "(", "\"?\"", ")", "[", "-", "1", "]", "\n", "if", "\"&\"", "in", "params", ":", "\n", "                    ", "params", "=", "params", ".", "split", "(", "\"&\"", ")", "[", "-", "1", "]", "\n", "", "assert", "\"=\"", "in", "params", ",", "print", "(", "\"Params Error \"", ",", "params", ")", "\n", "temp", "=", "params", ".", "split", "(", "\"=\"", ")", "\n", "assert", "len", "(", "temp", ")", "==", "2", ",", "print", "(", "\"Params Length Error \"", ",", "temp", ")", "\n", "idx", "=", "int", "(", "temp", "[", "-", "1", "]", ")", "\n", "filename", "=", "os", ".", "listdir", "(", "dir_name", ")", "[", "idx", "%", "(", "len", "(", "os", ".", "listdir", "(", "dir_name", ")", ")", ")", "]", "\n", "", "except", ":", "\n", "                ", "filename", "=", "random", ".", "choice", "(", "os", ".", "listdir", "(", "dir_name", ")", ")", "\n", "", "self", ".", "send_header", "(", "'Content-type'", ",", "'image/png'", ")", "\n", "self", ".", "end_headers", "(", ")", "\n", "image_file", "=", "open", "(", "dir_name", "+", "\"/\"", "+", "filename", ",", "\"rb\"", ")", "\n", "file_data", "=", "image_file", ".", "read", "(", ")", "\n", "image_file", ".", "close", "(", ")", "\n", "return", "file_data", "\n", "", "self", ".", "send_header", "(", "'Content-type'", ",", "'text/html'", ")", "\n", "self", ".", "end_headers", "(", ")", "\n", "content", "=", "WEB_HTML", ".", "format", "(", "STYLE_SHEET", ",", "FONT_AWESOME", ")", "\n", "return", "bytes", "(", "content", ",", "'UTF-8'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler._respond": [[509, 513], ["interactive_web.wait", "interactive_web.MyHandler._handle_http", "interactive_web.MyHandler.wfile.write"], "methods", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.wait", "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.MyHandler._handle_http"], ["", "def", "_respond", "(", "self", ",", "opts", ")", ":", "\n", "        ", "wait", "(", ")", "\n", "response", "=", "self", ".", "_handle_http", "(", "opts", "[", "'status'", "]", ",", "self", ".", "path", ")", "\n", "self", ".", "wfile", ".", "write", "(", "response", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.InteractiveWeb.setup_args": [[572, 575], ["interactive_web.setup_interweb_args"], "methods", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.setup_interweb_args"], ["    ", "@", "classmethod", "\n", "def", "setup_args", "(", "cls", ")", ":", "\n", "        ", "return", "setup_interweb_args", "(", "SHARED", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.InteractiveWeb.run": [[576, 578], ["interactive_web.interactive_web"], "methods", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.interactive_web"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "return", "interactive_web", "(", "self", ".", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.setup_interweb_args": [[515, 529], ["parlai.scripts.interactive.setup_args", "parlai.scripts.interactive.setup_args.add_argument", "parlai.scripts.interactive.setup_args.add_argument"], "function", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.InteractiveWeb.setup_args"], ["", "", "def", "setup_interweb_args", "(", "shared", ")", ":", "\n", "    ", "\"\"\"\n    Build and parse CLI opts.\n    \"\"\"", "\n", "parser", "=", "setup_args", "(", ")", "\n", "parser", ".", "description", "=", "'Interactive chat with a model in a web browser'", "\n", "parser", ".", "add_argument", "(", "'--port'", ",", "type", "=", "int", ",", "default", "=", "PORT", ",", "help", "=", "'Port to listen on.'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--host'", ",", "\n", "default", "=", "HOST_NAME", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Host from which allow requests, use 0.0.0.0 to allow all IPs'", ",", "\n", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.shutdown": [[531, 536], ["SHARED.clear", "SHARED[].shutdown"], "function", ["home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.shutdown"], ["", "def", "shutdown", "(", ")", ":", "\n", "    ", "global", "SHARED", "\n", "if", "'server'", "in", "SHARED", ":", "\n", "        ", "SHARED", "[", "'server'", "]", ".", "shutdown", "(", ")", "\n", "", "SHARED", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.wait": [[538, 542], ["SHARED.get", "time.sleep"], "function", ["None"], ["", "def", "wait", "(", ")", ":", "\n", "    ", "global", "SHARED", "\n", "while", "not", "SHARED", ".", "get", "(", "'ready'", ")", ":", "\n", "        ", "time", ".", "sleep", "(", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vishakhpk_mil-creative-captioning.interface.interactive_web.interactive_web": [[544, 568], ["parlai.core.agents.create_agent", "parlai.core.agents.create_agent.opt.log", "parlai.core.worlds.create_task", "http.server.ThreadingHTTPServer", "parlai.info", "http.server.ThreadingHTTPServer.server_close", "SHARED.get", "http.server.ThreadingHTTPServer.serve_forever"], "function", ["None"], ["", "", "def", "interactive_web", "(", "opt", ")", ":", "\n", "    ", "global", "SHARED", "\n", "\n", "opt", "[", "'task'", "]", "=", "'parlai.agents.local_human.local_human:LocalHumanAgent'", "\n", "\n", "# Create model and assign it to the specified task", "\n", "agent", "=", "create_agent", "(", "opt", ",", "requireModelExists", "=", "True", ")", "\n", "agent", ".", "opt", ".", "log", "(", ")", "\n", "SHARED", "[", "'opt'", "]", "=", "agent", ".", "opt", "\n", "SHARED", "[", "'agent'", "]", "=", "agent", "\n", "\n", "SHARED", "[", "'world'", "]", "=", "create_task", "(", "SHARED", ".", "get", "(", "'opt'", ")", ",", "SHARED", "[", "'agent'", "]", ")", "\n", "\n", "MyHandler", ".", "protocol_version", "=", "'HTTP/1.0'", "\n", "httpd", "=", "ThreadingHTTPServer", "(", "(", "opt", "[", "'host'", "]", ",", "opt", "[", "'port'", "]", ")", ",", "MyHandler", ")", "\n", "SHARED", "[", "'server'", "]", "=", "httpd", "\n", "logging", ".", "info", "(", "'http://{}:{}/'", ".", "format", "(", "opt", "[", "'host'", "]", ",", "opt", "[", "'port'", "]", ")", ")", "\n", "\n", "try", ":", "\n", "        ", "SHARED", "[", "'ready'", "]", "=", "True", "\n", "httpd", ".", "serve_forever", "(", ")", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "        ", "pass", "\n", "", "httpd", ".", "server_close", "(", ")", "\n", "\n"]]}