{"home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_RAF-DB_tl.my_generator": [[48, 75], ["keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "numpy.unique", "sklearn.utils.class_weight.compute_class_weight", "dict", "enumerate"], "function", ["None"], ["def", "my_generator", "(", "gen_args", ",", "b_size", ",", "im_size", ")", ":", "\n", "\n", "        ", "\"\"\"\n            Function to create data bach generators which balance and perform data augmentation on each batch.\n            Parameters: \n                gen_args: arguments of generator, dictionary \n                b_size: ssize of each batch, scalar\n                im_size: image dimension (width, height), tuple\n            Returns:\n                train_it: train batch generator\n                val_it: validation batch generator\n                test_it: test batch generator\n                class_weights_dict: estimated class weights for unbalanced datasets\n        \"\"\"", "\n", "\n", "data_aug_gen", "=", "ImageDataGenerator", "(", "**", "gen_args", ")", "\n", "train_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/RAF_occ/train/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "val_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/RAF_occ/validation/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "\n", "\n", "classes", "=", "np", ".", "unique", "(", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights", "=", "class_weight", ".", "compute_class_weight", "(", "'balanced'", ",", "classes", ",", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights_dict", "=", "dict", "(", "enumerate", "(", "class_weights", ")", ")", "\n", "\n", "return", "train_it", ",", "val_it", ",", "class_weights_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_s.plot_accuracy": [[40, 60], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["def", "plot_accuracy", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the accuracy vs. epoch of a model\n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'accuracy'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_accuracy'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Accuracy'", ")", "\n", "plt", ".", "title", "(", "'Accuracy Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_s.plot_loss": [[61, 81], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_loss", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the loss vs. epoch of a model given the output of its fit \n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'loss'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_loss'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "title", "(", "'Loss Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_s.plot_precision_recall": [[82, 117], ["accuracy_score", "print", "recall_score", "precision_score", "pandas.DataFrame", "df[].astype", "df.melt.melt", "matplotlib.figure", "sb.barplot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.show", "labels.index", "labels.index", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_precision_recall", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the precision and recall of a model per class.\n        Parameters:\n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "acc", "=", "accuracy_score", "(", "targets", ",", "preds", ")", "\n", "print", "(", "'Accuracy:'", ",", "acc", ")", "\n", "\n", "# Check whether we are predicting class labels or indices.", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "labs", "=", "[", "i", "for", "i", "in", "labels", "if", "i", "in", "preds", "or", "i", "in", "targets", "]", "\n", "x", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labs", "]", "\n", "", "else", ":", "\n", "        ", "labs", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labels", "if", "\n", "labels", ".", "index", "(", "i", ")", "in", "preds", "or", "labels", ".", "index", "(", "i", ")", "in", "targets", "]", "\n", "x", "=", "labs", "\n", "\n", "", "recalls", "=", "recall_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "precisions", "=", "precision_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "np", ".", "c_", "[", "x", ",", "recalls", ",", "precisions", "]", ",", "\n", "columns", "=", "[", "'labels'", ",", "'Recalls'", ",", "'Precisions'", "]", ")", "\n", "df", "[", "'labels'", "]", "=", "df", "[", "'labels'", "]", ".", "astype", "(", "int", ")", "\n", "df", "=", "df", ".", "melt", "(", "id_vars", "=", "'labels'", ")", "\n", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "sb", ".", "barplot", "(", "x", "=", "'labels'", ",", "y", "=", "'value'", ",", "hue", "=", "'variable'", ",", "data", "=", "df", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'lower right'", ")", "\n", "plt", ".", "xlabel", "(", "\"Class\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Score\"", ")", "\n", "plt", ".", "title", "(", "\"The precision and recall on each class\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_s.plot_wrong_predictions_heatmap": [[118, 148], ["pandas.DataFrame", "pandas.crosstab", "numpy.arange", "numpy.arange", "matplotlib.get_cmap", "matplotlib.figure", "sb.heatmap", "sb.heatmap.set_title", "matplotlib.tight_layout", "matplotlib.show", "pd.crosstab.values.max", "numpy.ceil", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_wrong_predictions_heatmap", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot a heatmap of the number of wrong prediction per pair of classes.\n        Parameters:    \n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "targets", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "targets", "]", "\n", "preds", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "preds", "]", "\n", "\n", "", "pred_table", "=", "pd", ".", "DataFrame", "(", "\n", "np", ".", "c_", "[", "targets", ",", "preds", "]", ",", "columns", "=", "[", "'Real'", ",", "'Prediction'", "]", ")", "\n", "pred_table", "=", "pred_table", "[", "pred_table", "[", "'Real'", "]", "!=", "pred_table", "[", "'Prediction'", "]", "]", "\n", "hm_matrix", "=", "pd", ".", "crosstab", "(", "pred_table", "[", "'Real'", "]", ",", "pred_table", "[", "'Prediction'", "]", ")", "\n", "\n", "max_tick", "=", "hm_matrix", ".", "values", ".", "max", "(", ")", "+", "1", "\n", "ticks", "=", "np", ".", "arange", "(", "0", ",", "max_tick", ",", "np", ".", "ceil", "(", "max_tick", "/", "10", ")", ")", "\n", "boundaries", "=", "np", ".", "arange", "(", "-", "0.5", ",", "max_tick", ")", "\n", "cmap", "=", "plt", ".", "get_cmap", "(", "\"Reds\"", ",", "max_tick", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "ax", "=", "sb", ".", "heatmap", "(", "hm_matrix", ",", "annot", "=", "True", ",", "linewidths", "=", "0.01", ",", "\n", "cmap", "=", "cmap", ",", "linecolor", "=", "'k'", ",", "\n", "cbar_kws", "=", "{", "\"ticks\"", ":", "ticks", ",", "\"boundaries\"", ":", "boundaries", "}", ")", "\n", "ax", ".", "set_title", "(", "\"Number of wrong predictions for each pair of target and \"", "+", "\n", "\"predicted values\"", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_s.my_generator": [[152, 182], ["keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "numpy.unique", "sklearn.utils.class_weight.compute_class_weight", "dict", "enumerate"], "function", ["None"], ["", "def", "my_generator", "(", "gen_args", ",", "b_size", "=", "64", ",", "im_size", "=", "(", "224", ",", "224", ")", ")", ":", "\n", "\n", "        ", "\"\"\"\n            Function to create data bach generators which balance and perform data augmentation on each batch.\n            Parameters: \n                gen_args: arguments of generator, dictionary \n                b_size: ssize of each batch, scalar\n                im_size: image dimension (width, height), tuple\n            Returns:\n                train_it: train batch generator\n                val_it: validation batch generator\n                test_it: test batch generator\n                class_weights_dict: estimated class weights for unbalanced datasets\n        \"\"\"", "\n", "\n", "\n", "data_aug_gen", "=", "ImageDataGenerator", "(", "**", "gen_args", ")", "\n", "train_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/train/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "val_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/validation/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "test_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/test/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "\n", "\n", "classes", "=", "np", ".", "unique", "(", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights", "=", "class_weight", ".", "compute_class_weight", "(", "'balanced'", ",", "classes", ",", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights_dict", "=", "dict", "(", "enumerate", "(", "class_weights", ")", ")", "\n", "\n", "return", "train_it", ",", "val_it", ",", "test_it", ",", "class_weights_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_tl.plot_accuracy": [[41, 61], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["def", "plot_accuracy", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the accuracy vs. epoch of a model\n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'accuracy'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_accuracy'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Accuracy'", ")", "\n", "plt", ".", "title", "(", "'Accuracy Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_tl.plot_loss": [[62, 82], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_loss", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the loss vs. epoch of a model given the output of its fit \n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'loss'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_loss'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "title", "(", "'Loss Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_tl.plot_precision_recall": [[83, 118], ["sklearn.metrics.accuracy_score", "print", "sklearn.metrics.recall_score", "sklearn.metrics.precision_score", "pandas.DataFrame", "df[].astype", "df.melt.melt", "matplotlib.figure", "sb.barplot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.show", "labels.index", "labels.index", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_precision_recall", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the precision and recall of a model per class.\n        Parameters:\n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "acc", "=", "accuracy_score", "(", "targets", ",", "preds", ")", "\n", "print", "(", "'Accuracy:'", ",", "acc", ")", "\n", "\n", "# Check whether we are predicting class labels or indices.", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "labs", "=", "[", "i", "for", "i", "in", "labels", "if", "i", "in", "preds", "or", "i", "in", "targets", "]", "\n", "x", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labs", "]", "\n", "", "else", ":", "\n", "        ", "labs", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labels", "if", "\n", "labels", ".", "index", "(", "i", ")", "in", "preds", "or", "labels", ".", "index", "(", "i", ")", "in", "targets", "]", "\n", "x", "=", "labs", "\n", "\n", "", "recalls", "=", "recall_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "precisions", "=", "precision_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "np", ".", "c_", "[", "x", ",", "recalls", ",", "precisions", "]", ",", "\n", "columns", "=", "[", "'labels'", ",", "'Recalls'", ",", "'Precisions'", "]", ")", "\n", "df", "[", "'labels'", "]", "=", "df", "[", "'labels'", "]", ".", "astype", "(", "int", ")", "\n", "df", "=", "df", ".", "melt", "(", "id_vars", "=", "'labels'", ")", "\n", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "sb", ".", "barplot", "(", "x", "=", "'labels'", ",", "y", "=", "'value'", ",", "hue", "=", "'variable'", ",", "data", "=", "df", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'lower right'", ")", "\n", "plt", ".", "xlabel", "(", "\"Class\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Score\"", ")", "\n", "plt", ".", "title", "(", "\"The precision and recall on each class\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_tl.plot_wrong_predictions_heatmap": [[119, 149], ["pandas.DataFrame", "pandas.crosstab", "numpy.arange", "numpy.arange", "matplotlib.get_cmap", "matplotlib.figure", "sb.heatmap", "sb.heatmap.set_title", "matplotlib.tight_layout", "matplotlib.show", "pd.crosstab.values.max", "numpy.ceil", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_wrong_predictions_heatmap", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot a heatmap of the number of wrong prediction per pair of classes.\n        Parameters:    \n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "targets", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "targets", "]", "\n", "preds", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "preds", "]", "\n", "\n", "", "pred_table", "=", "pd", ".", "DataFrame", "(", "\n", "np", ".", "c_", "[", "targets", ",", "preds", "]", ",", "columns", "=", "[", "'Real'", ",", "'Prediction'", "]", ")", "\n", "pred_table", "=", "pred_table", "[", "pred_table", "[", "'Real'", "]", "!=", "pred_table", "[", "'Prediction'", "]", "]", "\n", "hm_matrix", "=", "pd", ".", "crosstab", "(", "pred_table", "[", "'Real'", "]", ",", "pred_table", "[", "'Prediction'", "]", ")", "\n", "\n", "max_tick", "=", "hm_matrix", ".", "values", ".", "max", "(", ")", "+", "1", "\n", "ticks", "=", "np", ".", "arange", "(", "0", ",", "max_tick", ",", "np", ".", "ceil", "(", "max_tick", "/", "10", ")", ")", "\n", "boundaries", "=", "np", ".", "arange", "(", "-", "0.5", ",", "max_tick", ")", "\n", "cmap", "=", "plt", ".", "get_cmap", "(", "\"Reds\"", ",", "max_tick", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "ax", "=", "sb", ".", "heatmap", "(", "hm_matrix", ",", "annot", "=", "True", ",", "linewidths", "=", "0.01", ",", "\n", "cmap", "=", "cmap", ",", "linecolor", "=", "'k'", ",", "\n", "cbar_kws", "=", "{", "\"ticks\"", ":", "ticks", ",", "\"boundaries\"", ":", "boundaries", "}", ")", "\n", "ax", ".", "set_title", "(", "\"Number of wrong predictions for each pair of target and \"", "+", "\n", "\"predicted values\"", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_tl.my_generator": [[152, 182], ["keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "numpy.unique", "sklearn.utils.class_weight.compute_class_weight", "dict", "enumerate"], "function", ["None"], ["", "def", "my_generator", "(", "gen_args", ",", "b_size", "=", "64", ",", "im_size", "=", "(", "224", ",", "224", ")", ")", ":", "\n", "\n", "        ", "\"\"\"\n            Function to create data bach generators which balance and perform data augmentation on each batch.\n            Parameters: \n                gen_args: arguments of generator, dictionary \n                b_size: ssize of each batch, scalar\n                im_size: image dimension (width, height), tuple\n            Returns:\n                train_it: train batch generator\n                val_it: validation batch generator\n                test_it: test batch generator\n                class_weights_dict: estimated class weights for unbalanced datasets\n        \"\"\"", "\n", "\n", "\n", "data_aug_gen", "=", "ImageDataGenerator", "(", "**", "gen_args", ")", "\n", "train_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/train/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "val_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/validation/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "test_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/test/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "\n", "\n", "classes", "=", "np", ".", "unique", "(", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights", "=", "class_weight", ".", "compute_class_weight", "(", "'balanced'", ",", "classes", ",", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights_dict", "=", "dict", "(", "enumerate", "(", "class_weights", ")", ")", "\n", "\n", "return", "train_it", ",", "val_it", ",", "test_it", ",", "class_weights_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_s.plot_accuracy": [[39, 59], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["def", "plot_accuracy", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the accuracy vs. epoch of a model\n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'accuracy'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_accuracy'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Accuracy'", ")", "\n", "plt", ".", "title", "(", "'Accuracy Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_s.plot_loss": [[60, 80], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_loss", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the loss vs. epoch of a model given the output of its fit \n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'loss'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_loss'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "title", "(", "'Loss Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_s.plot_precision_recall": [[81, 116], ["sklearn.metrics.accuracy_score", "print", "sklearn.metrics.recall_score", "sklearn.metrics.precision_score", "pandas.DataFrame", "df[].astype", "df.melt.melt", "matplotlib.figure", "sb.barplot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.show", "labels.index", "labels.index", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_precision_recall", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the precision and recall of a model per class.\n        Parameters:\n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "acc", "=", "accuracy_score", "(", "targets", ",", "preds", ")", "\n", "print", "(", "'Accuracy:'", ",", "acc", ")", "\n", "\n", "# Check whether we are predicting class labels or indices.", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "labs", "=", "[", "i", "for", "i", "in", "labels", "if", "i", "in", "preds", "or", "i", "in", "targets", "]", "\n", "x", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labs", "]", "\n", "", "else", ":", "\n", "        ", "labs", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labels", "if", "\n", "labels", ".", "index", "(", "i", ")", "in", "preds", "or", "labels", ".", "index", "(", "i", ")", "in", "targets", "]", "\n", "x", "=", "labs", "\n", "\n", "", "recalls", "=", "recall_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "precisions", "=", "precision_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "np", ".", "c_", "[", "x", ",", "recalls", ",", "precisions", "]", ",", "\n", "columns", "=", "[", "'labels'", ",", "'Recalls'", ",", "'Precisions'", "]", ")", "\n", "df", "[", "'labels'", "]", "=", "df", "[", "'labels'", "]", ".", "astype", "(", "int", ")", "\n", "df", "=", "df", ".", "melt", "(", "id_vars", "=", "'labels'", ")", "\n", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "sb", ".", "barplot", "(", "x", "=", "'labels'", ",", "y", "=", "'value'", ",", "hue", "=", "'variable'", ",", "data", "=", "df", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'lower right'", ")", "\n", "plt", ".", "xlabel", "(", "\"Class\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Score\"", ")", "\n", "plt", ".", "title", "(", "\"The precision and recall on each class\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_s.plot_wrong_predictions_heatmap": [[117, 147], ["pandas.DataFrame", "pandas.crosstab", "numpy.arange", "numpy.arange", "matplotlib.get_cmap", "matplotlib.figure", "sb.heatmap", "sb.heatmap.set_title", "matplotlib.tight_layout", "matplotlib.show", "pd.crosstab.values.max", "numpy.ceil", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_wrong_predictions_heatmap", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot a heatmap of the number of wrong prediction per pair of classes.\n        Parameters:    \n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "targets", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "targets", "]", "\n", "preds", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "preds", "]", "\n", "\n", "", "pred_table", "=", "pd", ".", "DataFrame", "(", "\n", "np", ".", "c_", "[", "targets", ",", "preds", "]", ",", "columns", "=", "[", "'Real'", ",", "'Prediction'", "]", ")", "\n", "pred_table", "=", "pred_table", "[", "pred_table", "[", "'Real'", "]", "!=", "pred_table", "[", "'Prediction'", "]", "]", "\n", "hm_matrix", "=", "pd", ".", "crosstab", "(", "pred_table", "[", "'Real'", "]", ",", "pred_table", "[", "'Prediction'", "]", ")", "\n", "\n", "max_tick", "=", "hm_matrix", ".", "values", ".", "max", "(", ")", "+", "1", "\n", "ticks", "=", "np", ".", "arange", "(", "0", ",", "max_tick", ",", "np", ".", "ceil", "(", "max_tick", "/", "10", ")", ")", "\n", "boundaries", "=", "np", ".", "arange", "(", "-", "0.5", ",", "max_tick", ")", "\n", "cmap", "=", "plt", ".", "get_cmap", "(", "\"Reds\"", ",", "max_tick", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "ax", "=", "sb", ".", "heatmap", "(", "hm_matrix", ",", "annot", "=", "True", ",", "linewidths", "=", "0.01", ",", "\n", "cmap", "=", "cmap", ",", "linecolor", "=", "'k'", ",", "\n", "cbar_kws", "=", "{", "\"ticks\"", ":", "ticks", ",", "\"boundaries\"", ":", "boundaries", "}", ")", "\n", "ax", ".", "set_title", "(", "\"Number of wrong predictions for each pair of target and \"", "+", "\n", "\"predicted values\"", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_FERPlus_s.my_generator": [[150, 180], ["keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "numpy.unique", "sklearn.utils.class_weight.compute_class_weight", "dict", "enumerate"], "function", ["None"], ["", "def", "my_generator", "(", "gen_args", ",", "b_size", "=", "64", ",", "im_size", "=", "(", "224", ",", "224", ")", ")", ":", "\n", "\n", "        ", "\"\"\"\n            Function to create data bach generators which balance and perform data augmentation on each batch.\n            Parameters: \n                gen_args: arguments of generator, dictionary \n                b_size: ssize of each batch, scalar\n                im_size: image dimension (width, height), tuple\n            Returns:\n                train_it: train batch generator\n                val_it: validation batch generator\n                test_it: test batch generator\n                class_weights_dict: estimated class weights for unbalanced datasets\n        \"\"\"", "\n", "\n", "\n", "data_aug_gen", "=", "ImageDataGenerator", "(", "**", "gen_args", ")", "\n", "train_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/train/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "val_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/validation/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "test_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/test/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "\n", "\n", "classes", "=", "np", ".", "unique", "(", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights", "=", "class_weight", ".", "compute_class_weight", "(", "'balanced'", ",", "classes", ",", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights_dict", "=", "dict", "(", "enumerate", "(", "class_weights", ")", ")", "\n", "\n", "return", "train_it", ",", "val_it", ",", "test_it", ",", "class_weights_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_tl.my_generator": [[44, 73], ["keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "numpy.unique", "sklearn.utils.class_weight.compute_class_weight", "dict", "enumerate"], "function", ["None"], ["def", "my_generator", "(", "gen_args", ",", "b_size", "=", "64", ",", "im_size", "=", "(", "224", ",", "224", ")", ")", ":", "\n", "\n", "        ", "\"\"\"\n            Function to create data bach generators which balance and perform data augmentation on each batch.\n            Parameters: \n                gen_args: arguments of generator, dictionary \n                b_size: ssize of each batch, scalar\n                im_size: image dimension (width, height), tuple\n            Returns:\n                train_it: train batch generator\n                val_it: validation batch generator\n                test_it: test batch generator\n                class_weights_dict: estimated class weights for unbalanced datasets\n        \"\"\"", "\n", "\n", "data_aug_gen", "=", "ImageDataGenerator", "(", "**", "gen_args", ")", "\n", "train_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/train/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "val_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/validation/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "test_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/FERPlus_occ/test/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "\n", "\n", "classes", "=", "np", ".", "unique", "(", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights", "=", "class_weight", ".", "compute_class_weight", "(", "'balanced'", ",", "classes", ",", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights_dict", "=", "dict", "(", "enumerate", "(", "class_weights", ")", ")", "\n", "\n", "return", "train_it", ",", "val_it", ",", "test_it", ",", "class_weights_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_tl.plot_accuracy": [[77, 97], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_accuracy", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the accuracy vs. epoch of a model\n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'accuracy'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_accuracy'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Accuracy'", ")", "\n", "plt", ".", "title", "(", "'Accuracy Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_tl.plot_loss": [[98, 118], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_loss", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the loss vs. epoch of a model given the output of its fit \n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'loss'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_loss'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "title", "(", "'Loss Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_tl.plot_precision_recall": [[119, 154], ["sklearn.metrics.accuracy_score", "print", "sklearn.metrics.recall_score", "sklearn.metrics.precision_score", "pandas.DataFrame", "df[].astype", "df.melt.melt", "matplotlib.figure", "sb.barplot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.show", "labels.index", "labels.index", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_precision_recall", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the precision and recall of a model per class.\n        Parameters:\n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "acc", "=", "accuracy_score", "(", "targets", ",", "preds", ")", "\n", "print", "(", "'Accuracy:'", ",", "acc", ")", "\n", "\n", "# Check whether we are predicting class labels or indices.", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "labs", "=", "[", "i", "for", "i", "in", "labels", "if", "i", "in", "preds", "or", "i", "in", "targets", "]", "\n", "x", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labs", "]", "\n", "", "else", ":", "\n", "        ", "labs", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labels", "if", "\n", "labels", ".", "index", "(", "i", ")", "in", "preds", "or", "labels", ".", "index", "(", "i", ")", "in", "targets", "]", "\n", "x", "=", "labs", "\n", "\n", "", "recalls", "=", "recall_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "precisions", "=", "precision_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "np", ".", "c_", "[", "x", ",", "recalls", ",", "precisions", "]", ",", "\n", "columns", "=", "[", "'labels'", ",", "'Recalls'", ",", "'Precisions'", "]", ")", "\n", "df", "[", "'labels'", "]", "=", "df", "[", "'labels'", "]", ".", "astype", "(", "int", ")", "\n", "df", "=", "df", ".", "melt", "(", "id_vars", "=", "'labels'", ")", "\n", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "sb", ".", "barplot", "(", "x", "=", "'labels'", ",", "y", "=", "'value'", ",", "hue", "=", "'variable'", ",", "data", "=", "df", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'lower right'", ")", "\n", "plt", ".", "xlabel", "(", "\"Class\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Score\"", ")", "\n", "plt", ".", "title", "(", "\"The precision and recall on each class\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_FERPlus_tl.plot_wrong_predictions_heatmap": [[155, 185], ["pandas.DataFrame", "pandas.crosstab", "numpy.arange", "numpy.arange", "matplotlib.get_cmap", "matplotlib.figure", "sb.heatmap", "sb.heatmap.set_title", "matplotlib.tight_layout", "matplotlib.show", "pd.crosstab.values.max", "numpy.ceil", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_wrong_predictions_heatmap", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot a heatmap of the number of wrong prediction per pair of classes.\n        Parameters:    \n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "targets", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "targets", "]", "\n", "preds", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "preds", "]", "\n", "\n", "", "pred_table", "=", "pd", ".", "DataFrame", "(", "\n", "np", ".", "c_", "[", "targets", ",", "preds", "]", ",", "columns", "=", "[", "'Real'", ",", "'Prediction'", "]", ")", "\n", "pred_table", "=", "pred_table", "[", "pred_table", "[", "'Real'", "]", "!=", "pred_table", "[", "'Prediction'", "]", "]", "\n", "hm_matrix", "=", "pd", ".", "crosstab", "(", "pred_table", "[", "'Real'", "]", ",", "pred_table", "[", "'Prediction'", "]", ")", "\n", "\n", "max_tick", "=", "hm_matrix", ".", "values", ".", "max", "(", ")", "+", "1", "\n", "ticks", "=", "np", ".", "arange", "(", "0", ",", "max_tick", ",", "np", ".", "ceil", "(", "max_tick", "/", "10", ")", ")", "\n", "boundaries", "=", "np", ".", "arange", "(", "-", "0.5", ",", "max_tick", ")", "\n", "cmap", "=", "plt", ".", "get_cmap", "(", "\"Reds\"", ",", "max_tick", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "ax", "=", "sb", ".", "heatmap", "(", "hm_matrix", ",", "annot", "=", "True", ",", "linewidths", "=", "0.01", ",", "\n", "cmap", "=", "cmap", ",", "linecolor", "=", "'k'", ",", "\n", "cbar_kws", "=", "{", "\"ticks\"", ":", "ticks", ",", "\"boundaries\"", ":", "boundaries", "}", ")", "\n", "ax", ".", "set_title", "(", "\"Number of wrong predictions for each pair of target and \"", "+", "\n", "\"predicted values\"", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_RAF-DB_tl.my_generator": [[49, 76], ["keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "numpy.unique", "sklearn.utils.class_weight.compute_class_weight", "dict", "enumerate"], "function", ["None"], ["def", "my_generator", "(", "gen_args", ",", "b_size", "=", "64", ",", "im_size", "=", "(", "224", ",", "224", ")", ")", ":", "\n", "\n", "        ", "\"\"\"\n            Function to create data bach generators which balance and perform data augmentation on each batch.\n            Parameters: \n                gen_args: arguments of generator, dictionary \n                b_size: ssize of each batch, scalar\n                im_size: image dimension (width, height), tuple\n            Returns:\n                train_it: train batch generator\n                val_it: validation batch generator\n                test_it: test batch generator\n                class_weights_dict: estimated class weights for unbalanced datasets\n        \"\"\"", "\n", "\n", "data_aug_gen", "=", "ImageDataGenerator", "(", "**", "gen_args", ")", "\n", "train_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/RAF_occ/train/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "val_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/RAF_occ/validation/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "\n", "\n", "classes", "=", "np", ".", "unique", "(", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights", "=", "class_weight", ".", "compute_class_weight", "(", "'balanced'", ",", "classes", ",", "trn_lbls", "[", "'target'", "]", ")", "\n", "class_weights_dict", "=", "dict", "(", "enumerate", "(", "class_weights", ")", ")", "\n", "\n", "return", "train_it", ",", "val_it", ",", "test_it", ",", "class_weights_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_AffectNet_tl.my_generator": [[45, 66], ["keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory"], "function", ["None"], ["def", "my_generator", "(", "gen_args", ",", "b_size", "=", "64", ",", "im_size", "=", "(", "224", ",", "224", ")", ")", ":", "\n", "\n", "        ", "\"\"\"\n            Function to create data bach generators which balance and perform data augmentation on each batch.\n            Parameters: \n                gen_args: arguments of generator, dictionary \n                b_size: ssize of each batch, scalar\n                im_size: image dimension (width, height), tuple\n            Returns:\n                train_it: train batch generator\n                val_it: validation batch generator\n        \"\"\"", "\n", "\n", "\n", "data_aug_gen", "=", "ImageDataGenerator", "(", "**", "gen_args", ")", "\n", "train_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/AffectNet_occ_cropped_grayscale/train/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "val_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/AffectNet_occ_cropped_grayscale/validation/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "\n", "return", "train_it", ",", "val_it", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_AffectNet_tl.plot_accuracy": [[69, 89], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_accuracy", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the accuracy vs. epoch of a model\n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'accuracy'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_accuracy'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Accuracy'", ")", "\n", "plt", ".", "title", "(", "'Accuracy Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_AffectNet_tl.plot_loss": [[90, 110], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_loss", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the loss vs. epoch of a model given the output of its fit \n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'loss'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_loss'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "title", "(", "'Loss Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_AffectNet_tl.plot_precision_recall": [[111, 146], ["accuracy_score", "print", "recall_score", "precision_score", "pandas.DataFrame", "df[].astype", "df.melt.melt", "matplotlib.figure", "sb.barplot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.show", "labels.index", "labels.index", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_precision_recall", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the precision and recall of a model per class.\n        Parameters:\n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "acc", "=", "accuracy_score", "(", "targets", ",", "preds", ")", "\n", "print", "(", "'Accuracy:'", ",", "acc", ")", "\n", "\n", "# Check whether we are predicting class labels or indices.", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "labs", "=", "[", "i", "for", "i", "in", "labels", "if", "i", "in", "preds", "or", "i", "in", "targets", "]", "\n", "x", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labs", "]", "\n", "", "else", ":", "\n", "        ", "labs", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labels", "if", "\n", "labels", ".", "index", "(", "i", ")", "in", "preds", "or", "labels", ".", "index", "(", "i", ")", "in", "targets", "]", "\n", "x", "=", "labs", "\n", "\n", "", "recalls", "=", "recall_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "precisions", "=", "precision_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "np", ".", "c_", "[", "x", ",", "recalls", ",", "precisions", "]", ",", "\n", "columns", "=", "[", "'labels'", ",", "'Recalls'", ",", "'Precisions'", "]", ")", "\n", "df", "[", "'labels'", "]", "=", "df", "[", "'labels'", "]", ".", "astype", "(", "int", ")", "\n", "df", "=", "df", ".", "melt", "(", "id_vars", "=", "'labels'", ")", "\n", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "sb", ".", "barplot", "(", "x", "=", "'labels'", ",", "y", "=", "'value'", ",", "hue", "=", "'variable'", ",", "data", "=", "df", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'lower right'", ")", "\n", "plt", ".", "xlabel", "(", "\"Class\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Score\"", ")", "\n", "plt", ".", "title", "(", "\"The precision and recall on each class\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.VGGFace_AffectNet_tl.plot_wrong_predictions_heatmap": [[147, 177], ["pandas.DataFrame", "pandas.crosstab", "numpy.arange", "numpy.arange", "matplotlib.get_cmap", "matplotlib.figure", "sb.heatmap", "sb.heatmap.set_title", "matplotlib.tight_layout", "matplotlib.show", "pd.crosstab.values.max", "numpy.ceil", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_wrong_predictions_heatmap", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot a heatmap of the number of wrong prediction per pair of classes.\n        Parameters:    \n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "targets", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "targets", "]", "\n", "preds", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "preds", "]", "\n", "\n", "", "pred_table", "=", "pd", ".", "DataFrame", "(", "\n", "np", ".", "c_", "[", "targets", ",", "preds", "]", ",", "columns", "=", "[", "'Real'", ",", "'Prediction'", "]", ")", "\n", "pred_table", "=", "pred_table", "[", "pred_table", "[", "'Real'", "]", "!=", "pred_table", "[", "'Prediction'", "]", "]", "\n", "hm_matrix", "=", "pd", ".", "crosstab", "(", "pred_table", "[", "'Real'", "]", ",", "pred_table", "[", "'Prediction'", "]", ")", "\n", "\n", "max_tick", "=", "hm_matrix", ".", "values", ".", "max", "(", ")", "+", "1", "\n", "ticks", "=", "np", ".", "arange", "(", "0", ",", "max_tick", ",", "np", ".", "ceil", "(", "max_tick", "/", "10", ")", ")", "\n", "boundaries", "=", "np", ".", "arange", "(", "-", "0.5", ",", "max_tick", ")", "\n", "cmap", "=", "plt", ".", "get_cmap", "(", "\"Reds\"", ",", "max_tick", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "ax", "=", "sb", ".", "heatmap", "(", "hm_matrix", ",", "annot", "=", "True", ",", "linewidths", "=", "0.01", ",", "\n", "cmap", "=", "cmap", ",", "linecolor", "=", "'k'", ",", "\n", "cbar_kws", "=", "{", "\"ticks\"", ":", "ticks", ",", "\"boundaries\"", ":", "boundaries", "}", ")", "\n", "ax", ".", "set_title", "(", "\"Number of wrong predictions for each pair of target and \"", "+", "\n", "\"predicted values\"", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_AffectNet_tl.my_generator": [[48, 69], ["keras.preprocessing.image.ImageDataGenerator", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory", "keras.preprocessing.image.ImageDataGenerator.flow_from_directory"], "function", ["None"], ["def", "my_generator", "(", "gen_args", ",", "b_size", "=", "64", ",", "im_size", "=", "(", "224", ",", "224", ")", ")", ":", "\n", "\n", "        ", "\"\"\"\n            Function to create data bach generators which balance and perform data augmentation on each batch.\n            Parameters: \n                gen_args: arguments of generator, dictionary \n                b_size: ssize of each batch, scalar\n                im_size: image dimension (width, height), tuple\n            Returns:\n                train_it: train batch generator\n                val_it: validation batch generator\n        \"\"\"", "\n", "\n", "\n", "data_aug_gen", "=", "ImageDataGenerator", "(", "**", "gen_args", ")", "\n", "train_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/AffectNet_occ_cropped_grayscale/train/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "val_it", "=", "data_aug_gen", ".", "flow_from_directory", "(", "'/home/ubuntu/Notebooks/Datasets/AffectNet_occ_cropped_grayscale/validation/'", ",", "class_mode", "=", "'categorical'", ",", "\n", "batch_size", "=", "b_size", ",", "target_size", "=", "im_size", ")", "\n", "\n", "return", "train_it", ",", "val_it", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_AffectNet_tl.plot_accuracy": [[115, 135], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_accuracy", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the accuracy vs. epoch of a model\n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'accuracy'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_accuracy'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Accuracy'", ")", "\n", "plt", ".", "title", "(", "'Accuracy Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_AffectNet_tl.plot_loss": [[136, 156], ["numpy.arange", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.xticks", "matplotlib.legend", "matplotlib.show", "len"], "function", ["None"], ["", "def", "plot_loss", "(", "model_out", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the loss vs. epoch of a model given the output of its fit \n        Parameters:\n            model_out: the output of the fit function of the model\n    \"\"\"", "\n", "trn_accs", "=", "model_out", "[", "'loss'", "]", "\n", "val_accs", "=", "model_out", "[", "'val_loss'", "]", "\n", "epochs", "=", "np", ".", "arange", "(", "len", "(", "trn_accs", ")", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "5", ")", ")", "\n", "plt", ".", "plot", "(", "trn_accs", ")", "\n", "plt", ".", "plot", "(", "val_accs", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "title", "(", "'Loss Curve'", ")", "\n", "plt", ".", "xticks", "(", "ticks", "=", "epochs", ",", "labels", "=", "epochs", "+", "1", ")", "\n", "plt", ".", "legend", "(", "[", "'Training'", ",", "'Validation'", "]", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_AffectNet_tl.plot_precision_recall": [[157, 192], ["accuracy_score", "print", "recall_score", "precision_score", "pandas.DataFrame", "df[].astype", "df.melt.melt", "matplotlib.figure", "sb.barplot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.show", "labels.index", "labels.index", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_precision_recall", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot the precision and recall of a model per class.\n        Parameters:\n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "acc", "=", "accuracy_score", "(", "targets", ",", "preds", ")", "\n", "print", "(", "'Accuracy:'", ",", "acc", ")", "\n", "\n", "# Check whether we are predicting class labels or indices.", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "labs", "=", "[", "i", "for", "i", "in", "labels", "if", "i", "in", "preds", "or", "i", "in", "targets", "]", "\n", "x", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labs", "]", "\n", "", "else", ":", "\n", "        ", "labs", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "labels", "if", "\n", "labels", ".", "index", "(", "i", ")", "in", "preds", "or", "labels", ".", "index", "(", "i", ")", "in", "targets", "]", "\n", "x", "=", "labs", "\n", "\n", "", "recalls", "=", "recall_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "precisions", "=", "precision_score", "(", "targets", ",", "preds", ",", "average", "=", "None", ",", "labels", "=", "labs", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "np", ".", "c_", "[", "x", ",", "recalls", ",", "precisions", "]", ",", "\n", "columns", "=", "[", "'labels'", ",", "'Recalls'", ",", "'Precisions'", "]", ")", "\n", "df", "[", "'labels'", "]", "=", "df", "[", "'labels'", "]", ".", "astype", "(", "int", ")", "\n", "df", "=", "df", ".", "melt", "(", "id_vars", "=", "'labels'", ")", "\n", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "sb", ".", "barplot", "(", "x", "=", "'labels'", ",", "y", "=", "'value'", ",", "hue", "=", "'variable'", ",", "data", "=", "df", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'lower right'", ")", "\n", "plt", ".", "xlabel", "(", "\"Class\"", ")", "\n", "plt", ".", "ylabel", "(", "\"Score\"", ")", "\n", "plt", ".", "title", "(", "\"The precision and recall on each class\"", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bita-github_MRP-FER.None.ResNet50_AffectNet_tl.plot_wrong_predictions_heatmap": [[193, 223], ["pandas.DataFrame", "pandas.crosstab", "numpy.arange", "numpy.arange", "matplotlib.get_cmap", "matplotlib.figure", "sb.heatmap", "sb.heatmap.set_title", "matplotlib.tight_layout", "matplotlib.show", "pd.crosstab.values.max", "numpy.ceil", "labels.index", "labels.index"], "function", ["None"], ["", "def", "plot_wrong_predictions_heatmap", "(", "targets", ",", "preds", ")", ":", "\n", "    ", "\"\"\"\n        Function to plot a heatmap of the number of wrong prediction per pair of classes.\n        Parameters:    \n            targets: the target values, list\n            preds: the predicted values, list\n    \"\"\"", "\n", "if", "preds", "[", "0", "]", "in", "labels", ":", "\n", "        ", "targets", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "targets", "]", "\n", "preds", "=", "[", "labels", ".", "index", "(", "i", ")", "for", "i", "in", "preds", "]", "\n", "\n", "", "pred_table", "=", "pd", ".", "DataFrame", "(", "\n", "np", ".", "c_", "[", "targets", ",", "preds", "]", ",", "columns", "=", "[", "'Real'", ",", "'Prediction'", "]", ")", "\n", "pred_table", "=", "pred_table", "[", "pred_table", "[", "'Real'", "]", "!=", "pred_table", "[", "'Prediction'", "]", "]", "\n", "hm_matrix", "=", "pd", ".", "crosstab", "(", "pred_table", "[", "'Real'", "]", ",", "pred_table", "[", "'Prediction'", "]", ")", "\n", "\n", "max_tick", "=", "hm_matrix", ".", "values", ".", "max", "(", ")", "+", "1", "\n", "ticks", "=", "np", ".", "arange", "(", "0", ",", "max_tick", ",", "np", ".", "ceil", "(", "max_tick", "/", "10", ")", ")", "\n", "boundaries", "=", "np", ".", "arange", "(", "-", "0.5", ",", "max_tick", ")", "\n", "cmap", "=", "plt", ".", "get_cmap", "(", "\"Reds\"", ",", "max_tick", ")", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "ax", "=", "sb", ".", "heatmap", "(", "hm_matrix", ",", "annot", "=", "True", ",", "linewidths", "=", "0.01", ",", "\n", "cmap", "=", "cmap", ",", "linecolor", "=", "'k'", ",", "\n", "cbar_kws", "=", "{", "\"ticks\"", ":", "ticks", ",", "\"boundaries\"", ":", "boundaries", "}", ")", "\n", "ax", ".", "set_title", "(", "\"Number of wrong predictions for each pair of target and \"", "+", "\n", "\"predicted values\"", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]]}