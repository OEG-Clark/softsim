{"home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.create_arg_parser": [[29, 46], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.offline_texture_swapping.parse_args"], ["def", "create_arg_parser", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Evaluation setup'", ")", "\n", "parser", ".", "add_argument", "(", "'--model_name'", ",", "type", "=", "str", ",", "default", "=", "'SRCNN'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "'./storage/best_psnr_SRCNN_per.pt'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_base'", ",", "type", "=", "str", ",", "default", "=", "'/content/gdrive/My Drive/Texture_transfer/zenodo1/'", ")", "\n", "\n", "## single file test parameters", "\n", "parser", ".", "add_argument", "(", "'--single'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--file_path'", ",", "default", "=", "'None'", ")", "\n", "parser", ".", "add_argument", "(", "'--slice_no'", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "'--data'", ",", "default", "=", "'sag'", ",", "help", "=", "'sag, axial'", ")", "\n", "parser", ".", "add_argument", "(", "'--ref'", ",", "default", "=", "'sag'", ",", "help", "=", "'sag, axial'", ")", "\n", "parser", ".", "add_argument", "(", "'--save'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--visualize'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_csv'", ",", "action", "=", "'store_true'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.load_model": [[47, 53], ["torch.load", "evaluate.build_model", "build_model.load_state_dict"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.build_model"], ["", "def", "load_model", "(", "args1", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "args1", ".", "ckpt", ")", "\n", "args", "=", "checkpoint", "[", "'args'", "]", "\n", "netG", "=", "build_model", "(", "args", ",", "args1", ".", "model_name", ")", "\n", "netG", ".", "load_state_dict", "(", "checkpoint", "[", "'netG'", "]", ")", "\n", "return", "checkpoint", ",", "netG", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.create_datasets": [[54, 73], ["datasets.Reference_dataset_vol.ReferenceDataset_vol"], "function", ["None"], ["", "def", "create_datasets", "(", "args", ",", "args1", ")", ":", "\n", "\n", "# if args.texture:", "\n", "    ", "if", "args1", ".", "ref", "==", "'sag'", ":", "\n", "        ", "if", "args1", ".", "data", "==", "'sag'", ":", "\n", "            ", "eval_path", "=", "args1", ".", "data_base", "+", "'val_map/'", "\n", "", "else", ":", "\n", "            ", "eval_path", "=", "args1", ".", "data_base", "+", "'val_1_map/'", "\n", "", "", "else", ":", "\n", "        ", "if", "args1", ".", "data", "==", "'sag'", ":", "\n", "            ", "eval_path", "=", "args1", ".", "data_base", "+", "'val_map_axial/'", "\n", "", "else", ":", "\n", "            ", "eval_path", "=", "args1", ".", "data_base", "+", "'val_1_map_axial/'", "\n", "", "", "dev_data", "=", "ReferenceDataset_vol", "(", "eval_path", ")", "\n", "# else:", "\n", "\n", "#     eval_path = args1.data_base+'val/'", "\n", "#     dev_data = BasicDataset_vol(eval_path)", "\n", "return", "dev_data", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.create_data_loaders": [[74, 85], ["evaluate.create_datasets", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.create_datasets"], ["", "def", "create_data_loaders", "(", "args", ",", "args1", ")", ":", "\n", "\n", "    ", "dev_data", "=", "create_datasets", "(", "args", ",", "args1", ")", "\n", "\n", "dev_loader", "=", "DataLoader", "(", "\n", "dataset", "=", "dev_data", ",", "\n", "batch_size", "=", "1", ",", "\n", "#num_workers=64,", "\n", "#pin_memory=True,", "\n", ")", "\n", "return", "dev_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.build_model": [[86, 107], ["print", "models.srcnn.SRCNN_basic().to", "models.srcnn.SRCNN_TextureTransfer().to", "models.RCAN.make_model().to", "models.RCAN_Texture_transfer.make_model_TT().to", "models.RFDN.make_model_RFDN().to", "models.RFDN.make_model_RFDN_TT().to", "models.SRNTT.SRNTT().to", "models.pix2pix.GeneratorUNet().to", "models.srcnn.SRCNN_basic", "models.srcnn.SRCNN_TextureTransfer", "models.RCAN.make_model", "models.RCAN_Texture_transfer.make_model_TT", "models.RFDN.make_model_RFDN", "models.RFDN.make_model_RFDN_TT", "models.SRNTT.SRNTT", "models.pix2pix.GeneratorUNet"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.make_model", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.make_model_TT", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.make_model_RFDN", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.make_model_RFDN_TT"], ["", "def", "build_model", "(", "args", ",", "model_name", ")", ":", "\n", "    ", "if", "model_name", "==", "'SRCNN'", ":", "\n", "        ", "netG", "=", "SRCNN_basic", "(", ")", ".", "to", "(", "device", ")", "\n", "", "if", "model_name", "==", "'SRCNN_TT'", ":", "\n", "        ", "netG", "=", "SRCNN_TextureTransfer", "(", ")", ".", "to", "(", "device", ")", "\n", "", "if", "model_name", "==", "'RCAN'", ":", "\n", "        ", "netG", "=", "make_model", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "", "if", "model_name", "==", "'RCAN_TT'", ":", "\n", "        ", "netG", "=", "make_model_TT", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "", "if", "model_name", "==", "'RFDN'", ":", "\n", "        ", "netG", "=", "make_model_RFDN", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "", "if", "model_name", "==", "'RFDN_TT'", ":", "\n", "        ", "netG", "=", "make_model_RFDN_TT", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "", "if", "model_name", "==", "'SRNTT'", ":", "\n", "        ", "netG", "=", "SRNTT", "(", ")", ".", "to", "(", "device", ")", "\n", "", "if", "model_name", "==", "'pix2pix'", ":", "\n", "        ", "netG", "=", "GeneratorUNet", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "print", "(", "\"Model: \"", ",", "model_name", ")", "\n", "\n", "return", "netG", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.test_single_b": [[108, 135], ["enumerate", "print", "batch[].to().cpu().numpy", "batch[].to().cpu().numpy", "batch[].to().cpu().numpy", "skimage.measure.compare_psnr", "skimage.metrics.structural_similarity", "numpy.save", "numpy.save", "numpy.save", "imresize.imresize", "imresize.imresize", "batch[].to().cpu", "batch[].to().cpu", "batch[].to().cpu", "batch[].to", "batch[].to", "batch[].to"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to"], ["", "def", "test_single_b", "(", "args1", ",", "dev_loader", ")", ":", "\n", "    ", "slno", "=", "args1", ".", "slice_no", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "dev_loader", ",", "1", ")", ":", "\n", "        ", "if", "i", "!=", "slno", ":", "\n", "            ", "continue", "\n", "\n", "", "img_hr", "=", "batch", "[", "'img_hr'", "]", ".", "to", "(", "device", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "img_lr", "=", "batch", "[", "'img_lr'", "]", ".", "to", "(", "device", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "img_lr_up", "=", "batch", "[", "'img_lr_up'", "]", ".", "to", "(", "device", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "args1", ".", "model_name", "==", "'bilinear'", ":", "\n", "            ", "img_sr", "=", "imresize", "(", "img_lr", "[", "0", ",", "0", "]", ",", "4", ",", "method", "=", "'bilinear'", ")", "\n", "", "else", ":", "\n", "            ", "img_sr", "=", "imresize", "(", "img_lr", "[", "0", ",", "0", "]", ",", "4", ",", "method", "=", "'bicubic'", ")", "\n", "", "psnr", "=", "compare_psnr", "(", "img_hr", "[", "0", ",", "0", "]", ",", "img_sr", ")", "\n", "ssim", "=", "SS", "(", "img_sr", ",", "img_hr", "[", "0", ",", "0", "]", ")", "\n", "break", "\n", "", "print", "(", "'PSNR - '", ",", "psnr", ",", "' SSIM - '", ",", "ssim", ")", "\n", "if", "args1", ".", "visualize", ":", "\n", "# Visualize", "\n", "        ", "sr", "=", "img_sr", "\n", "hr", "=", "img_hr", "[", "0", ",", "0", "]", "\n", "lr", "=", "img_lr_up", "[", "0", ",", "0", "]", "\n", "np", ".", "save", "(", "'./results/LR_up.npy'", ",", "lr", ")", "\n", "np", ".", "save", "(", "'./results/HR.npy'", ",", "hr", ")", "\n", "np", ".", "save", "(", "'./results/SR.npy'", ",", "sr", ")", "\n", "\n", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.test_single": [[136, 182], ["enumerate", "print", "batch[].to", "batch[].to", "batch[].to", "netG.cpu().numpy", "batch[].to.cpu().numpy", "batch[].to.cpu().numpy", "numpy.save", "numpy.save", "numpy.save", "batch[].to", "batch[].to", "netG.eval", "torch.no_grad", "netG", "losses.metrics.PSNR", "losses.metrics.SSIM", "torch.no_grad", "losses.metrics.PSNR", "losses.metrics.SSIM", "netG.cpu", "batch[].to.cpu", "batch[].to.cpu", "batch[].to.float", "batch[].to.float", "netG.clamp", "netG.clamp", "netG", "netG", "netG.clamp", "netG.clamp", "batch[].to.float", "batch[].to.float"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.PSNR", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.SSIM", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.PSNR", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.SSIM"], ["", "def", "test_single", "(", "args", ",", "args1", ",", "netG", ",", "dev_loader", ")", ":", "\n", "    ", "slno", "=", "args1", ".", "slice_no", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "dev_loader", ",", "1", ")", ":", "\n", "        ", "if", "i", "!=", "slno", ":", "\n", "            ", "continue", "\n", "\n", "", "img_hr", "=", "batch", "[", "'img_hr'", "]", ".", "to", "(", "device", ")", "\n", "img_lr", "=", "batch", "[", "'img_lr'", "]", ".", "to", "(", "device", ")", "\n", "img_lr_up", "=", "batch", "[", "'img_lr_up'", "]", ".", "to", "(", "device", ")", "\n", "if", "args", ".", "texture", ":", "\n", "            ", "maps", "=", "batch", "[", "'maps'", "]", ".", "to", "(", "device", ")", "\n", "weights", "=", "batch", "[", "'weights'", "]", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "img_sr", "=", "netG", "(", "img_lr", ".", "float", "(", ")", ",", "img_lr_up", ",", "maps", ",", "weights", ".", "float", "(", ")", ")", "\n", "psnr", "=", "PSNR", "(", "img_hr", ",", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ")", "\n", "ssim", "=", "SSIM", "(", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ",", "img_hr", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "netG", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "if", "args1", ".", "model_name", "==", "'RCAN'", "or", "args1", ".", "model_name", "==", "'RFDN'", ":", "\n", "                    ", "img_sr", "=", "netG", "(", "img_lr", ".", "float", "(", ")", ")", "\n", "\n", "", "else", ":", "\n", "                    ", "img_sr", "=", "netG", "(", "img_lr_up", ".", "float", "(", ")", ")", "\n", "# print(img_sr.cpu().shape)", "\n", "# print(img_hr.cpu().shape)", "\n", "", "psnr", "=", "PSNR", "(", "img_hr", ",", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ")", "\n", "ssim", "=", "SSIM", "(", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ",", "img_hr", ")", "\n", "", "", "break", "\n", "\n", "", "print", "(", "'PSNR - '", ",", "psnr", ",", "' SSIM - '", ",", "ssim", ")", "\n", "if", "args1", ".", "visualize", ":", "\n", "# Visualize", "\n", "\n", "        ", "sr", "=", "img_sr", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "sr", "=", "sr", "[", "0", ",", "0", "]", "\n", "hr", "=", "img_hr", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "hr", "=", "hr", "[", "0", ",", "0", "]", "\n", "lr", "=", "img_lr_up", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "lr", "=", "lr", "[", "0", ",", "0", "]", "\n", "np", ".", "save", "(", "'./results/LR_up.npy'", ",", "lr", ")", "\n", "np", ".", "save", "(", "'./results/HR.npy'", ",", "hr", ")", "\n", "np", ".", "save", "(", "'./results/SR.npy'", ",", "sr", ")", "\n", "\n", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.test_all": [[183, 225], ["numpy.zeros", "len", "len", "print", "tqdm.tqdm", "enumerate", "numpy.argmax", "numpy.argmax", "len", "batch[].to", "batch[].to", "batch[].to", "pbar.update", "len", "batch[].to", "batch[].to", "netG.eval", "torch.no_grad", "netG", "losses.metrics.PSNR", "losses.metrics.SSIM", "torch.no_grad", "losses.metrics.PSNR", "losses.metrics.SSIM", "batch[].to.float", "batch[].to.float", "netG.clamp", "netG.clamp", "netG", "netG", "netG.clamp", "netG.clamp", "batch[].to.float", "batch[].to.float"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.PSNR", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.SSIM", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.PSNR", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.SSIM"], ["", "def", "test_all", "(", "args", ",", "netG", ",", "dev_loader", ")", ":", "\n", "    ", "val_psnr", ",", "val_ssim", ",", "val_mse", "=", "0", ",", "0", ",", "0", "\n", "results", "=", "np", ".", "zeros", "(", "(", "len", "(", "dev_loader", ")", ",", "3", ")", ")", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "dev_loader", ")", ",", "desc", "=", "'validating'", ",", "unit", "=", "'img'", ")", "as", "pbar", ":", "\n", "        ", "for", "i", ",", "batch", "in", "enumerate", "(", "dev_loader", ",", "1", ")", ":", "\n", "            ", "results", "[", "i", "-", "1", ",", "0", "]", "=", "i", "-", "1", ";", "\n", "img_hr", "=", "batch", "[", "'img_hr'", "]", ".", "to", "(", "device", ")", "\n", "img_lr", "=", "batch", "[", "'img_lr'", "]", ".", "to", "(", "device", ")", "\n", "img_lr_up", "=", "batch", "[", "'img_lr_up'", "]", ".", "to", "(", "device", ")", "\n", "if", "args", ".", "texture", ":", "\n", "                ", "maps", "=", "batch", "[", "'maps'", "]", ".", "to", "(", "device", ")", "\n", "weights", "=", "batch", "[", "'weights'", "]", ".", "to", "(", "device", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "img_sr", "=", "netG", "(", "img_lr", ".", "float", "(", ")", ",", "img_lr_up", ",", "maps", ",", "weights", ".", "float", "(", ")", ")", "\n", "psnr", "=", "PSNR", "(", "img_hr", ",", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ")", "\n", "ssim", "=", "SSIM", "(", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ",", "img_hr", ")", "\n", "val_psnr", "+=", "psnr", "\n", "val_ssim", "+=", "ssim", "\n", "results", "[", "i", "-", "1", ",", "1", "]", "=", "psnr", "\n", "results", "[", "i", "-", "1", ",", "2", "]", "=", "ssim", "\n", "", "", "else", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "if", "args1", ".", "model_name", "==", "'RCAN'", "or", "args1", ".", "model_name", "==", "'RFDN'", ":", "\n", "                        ", "img_sr", "=", "netG", "(", "img_lr", ".", "float", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "img_sr", "=", "netG", "(", "img_lr_up", ".", "float", "(", ")", ")", "\n", "", "psnr", "=", "PSNR", "(", "img_hr", ",", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ")", "\n", "ssim", "=", "SSIM", "(", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ",", "img_hr", ")", "\n", "val_psnr", "+=", "psnr", "\n", "val_ssim", "+=", "ssim", "\n", "results", "[", "i", "-", "1", ",", "1", "]", "=", "psnr", "\n", "results", "[", "i", "-", "1", ",", "2", "]", "=", "ssim", "\n", "\n", "\n", "", "", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "val_psnr", "/=", "len", "(", "dev_loader", ")", "\n", "val_ssim", "/=", "len", "(", "dev_loader", ")", "\n", "\n", "print", "(", "f'Evaluating: PSNR:{val_psnr:.4f}, SSIM:{val_ssim:.4f}'", ")", "\n", "return", "np", ".", "argmax", "(", "results", "[", ":", ",", "1", "]", ")", ",", "np", ".", "argmax", "(", "results", "[", ":", ",", "2", "]", ")", ",", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.main": [[227, 249], ["print", "evaluate.create_data_loaders", "evaluate.load_model", "print", "evaluate.test_single_b", "print", "evaluate.test_single", "evaluate.test_all", "print", "print", "numpy.savetxt", "numpy.savetxt"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.create_data_loaders", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.load_model", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.test_single_b", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.test_single", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.evaluate.test_all"], ["", "def", "main", "(", "args1", ")", ":", "\n", "\n", "    ", "print", "(", "'Loading from checkpoint '", ",", "args1", ".", "ckpt", ")", "\n", "dev_loader", "=", "create_data_loaders", "(", "None", ",", "args1", ")", "\n", "if", "args1", ".", "model_name", "==", "'bicubic'", "or", "args1", ".", "model_name", "==", "'bilinear'", ":", "\n", "        ", "if", "args1", ".", "single", ":", "\n", "            ", "print", "(", "'Testing single slice...'", ")", "\n", "test_single_b", "(", "args1", ",", "dev_loader", ")", "\n", "", "", "else", ":", "\n", "        ", "checkpoint", ",", "netG", "=", "load_model", "(", "args1", ")", "\n", "args", "=", "checkpoint", "[", "'args'", "]", "\n", "\n", "if", "args1", ".", "single", ":", "\n", "            ", "print", "(", "'Testing single slice...'", ")", "\n", "test_single", "(", "args", ",", "args1", ",", "netG", ",", "dev_loader", ")", "\n", "", "else", ":", "\n", "            ", "max_psnr", ",", "max_ssim", ",", "results", "=", "test_all", "(", "args", ",", "netG", ",", "dev_loader", ")", "\n", "print", "(", "'Slice of max_psnr '", ",", "max_psnr", ")", "\n", "print", "(", "'Slice of max_ssim '", ",", "max_ssim", ")", "\n", "if", "args1", ".", "save_csv", ":", "\n", "                ", "np", ".", "savetxt", "(", "\"results/result_all.npy\"", ",", "results", ")", "\n", "np", ".", "savetxt", "(", "\"results/result_all.csv\"", ",", "results", ",", "delimiter", "=", "\",\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.offline_texture_swapping.parse_args": [[23, 32], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.offline_texture_swapping.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--input_path'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--save_path'", ",", "type", "=", "str", ",", "default", "=", "'/content/gdrive/My Drive/Texture_transfer/zenodo1/train_map/2/'", ")", "\n", "parser", ".", "add_argument", "(", "'--ref_path'", ",", "default", "=", "'/content/gdrive/My Drive/Texture_transfer/zenodo/ref/zenodo_ref_axial.h5'", ")", "\n", "parser", ".", "add_argument", "(", "'--patch_size'", ",", "default", "=", "3", ")", "\n", "parser", ".", "add_argument", "(", "'--stride'", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--debug'", ",", "action", "=", "'store_true'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.offline_texture_swapping.main": [[34, 109], ["datasets.swapping_dataset.SwappingDataset", "torch.utils.data.DataLoader", "models.swapper.Swapper().to", "kymatio.torch.Scattering2D", "torch.cuda.is_available", "enumerate", "os.path.exists", "os.makedirs", "kymatio.torch.Scattering2D.cuda", "tqdm.tqdm", "h5py.File", "len", "kymatio.torch.Scattering2D", "torch.cuda.is_available", "torch.autograd.Variable().to", "torch.autograd.Variable().to", "torch.autograd.Variable().to", "kymatio.torch.Scattering2D.forward().squeeze", "collections.OrderedDict", "collections.OrderedDict", "Swapper().to.", "h5py.File.create_dataset", "h5py.File.create_dataset", "h5py.File.close", "models.swapper.Swapper", "kymatio.torch.Scattering2D.cuda", "kymatio.torch.Scattering2D.forward().squeeze", "kymatio.torch.Scattering2D.forward().squeeze", "range", "str", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "kymatio.torch.Scattering2D.forward", "kymatio.torch.Scattering2D.forward().squeeze", "kymatio.torch.Scattering2D.forward().squeeze", "batch[].to", "batch[].to", "batch[].to", "kymatio.torch.Scattering2D.forward", "kymatio.torch.Scattering2D.forward", "str", "str", "kymatio.torch.Scattering2D.forward", "kymatio.torch.Scattering2D.forward", "str", "str"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.forward", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.forward", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.forward", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.forward", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.forward"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "save_path", ")", "\n", "", "dataset", "=", "SwappingDataset", "(", "\n", "input_path", "=", "args", ".", "input_path", ",", "ref_path", "=", "args", ".", "ref_path", ")", "\n", "dataloader", "=", "DataLoader", "(", "dataset", ")", "\n", "# model = VGG(model_type='vgg19').to(device)", "\n", "swapper", "=", "Swapper", "(", "args", ".", "patch_size", ",", "args", ".", "stride", ")", ".", "to", "(", "device", ")", "\n", "\n", "J", "=", "2", "\n", "P", "=", "400", "#272,400", "\n", "Q", "=", "400", "#480,400", "\n", "\n", "scattering2", "=", "Scattering2D", "(", "J", ",", "shape", "=", "(", "P", ",", "Q", ")", ")", "#, backend='torch_skcuda')", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "scattering2", ".", "cuda", "(", ")", "\n", "\n", "", "for", "i", ",", "batch", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ",", "1", ")", ":", "\n", "\n", "\n", "# n=int(i/1000)+1", "\n", "        ", "path", "=", "args", ".", "save_path", "+", "'slice_'", "+", "str", "(", "i", ")", "+", "'.h5'", "\n", "hf", "=", "h5py", ".", "File", "(", "path", ",", "'w'", ")", "\n", "ln", "=", "len", "(", "batch", "[", "'img_ref'", "]", ".", "shape", ")", "\n", "num", "=", "batch", "[", "'img_ref'", "]", ".", "shape", "[", "1", "]", "\n", "# print(N)", "\n", "M", "=", "batch", "[", "'img_in'", "]", ".", "shape", "[", "1", "]", "\n", "N", "=", "batch", "[", "'img_in'", "]", ".", "shape", "[", "2", "]", "\n", "scattering1", "=", "Scattering2D", "(", "J", ",", "shape", "=", "(", "M", ",", "N", ")", ")", "#, backend='torch_skcuda')", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "scattering1", ".", "cuda", "(", ")", "\n", "", "img_in", "=", "Variable", "(", "batch", "[", "'img_in'", "]", ".", "to", "(", "device", ")", ",", "requires_grad", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "img_ref", "=", "Variable", "(", "batch", "[", "'img_ref'", "]", ".", "to", "(", "device", ")", ",", "requires_grad", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "img_ref_blur", "=", "Variable", "(", "batch", "[", "'img_ref_blur'", "]", ".", "to", "(", "device", ")", ",", "requires_grad", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "\n", "# print(img_in.cpu().shape)", "\n", "\n", "map_in", "=", "scattering1", ".", "forward", "(", "img_in", ")", ".", "squeeze", "(", ")", "\n", "map_ref", "=", "OrderedDict", "(", ")", "\n", "map_ref_blur", "=", "OrderedDict", "(", ")", "\n", "if", "ln", "==", "3", ":", "\n", "            ", "ref", "=", "scattering2", ".", "forward", "(", "img_ref", "[", "0", "]", ")", ".", "squeeze", "(", ")", "\n", "ref_blur", "=", "scattering2", ".", "forward", "(", "img_ref_blur", "[", "0", "]", ")", ".", "squeeze", "(", ")", "\n", "map_ref", "[", "str", "(", "1", ")", "]", "=", "ref", "\n", "map_ref_blur", "[", "str", "(", "1", ")", "]", "=", "ref_blur", "\n", "\n", "", "else", ":", "\n", "            ", "for", "n", "in", "range", "(", "num", ")", ":", "\n", "                ", "ref", "=", "scattering2", ".", "forward", "(", "img_ref", "[", "0", ",", "n", "]", ")", ".", "squeeze", "(", ")", "\n", "# print(ref.shape)", "\n", "ref_blur", "=", "scattering2", ".", "forward", "(", "img_ref_blur", "[", "0", ",", "n", "]", ")", ".", "squeeze", "(", ")", "\n", "map_ref", "[", "str", "(", "n", "+", "1", ")", "]", "=", "ref", "\n", "map_ref_blur", "[", "str", "(", "n", "+", "1", ")", "]", "=", "ref_blur", "\n", "# if n==0:", "\n", "#     r=ref.numpy()", "\n", "#     rb=ref_blur.numpy()", "\n", "#     i =map_in.numpy()", "\n", "#     np.save('check/map_ref.npy',r[0])", "\n", "#     np.save('check/map_ref_blur.npy',rb[0])", "\n", "#     np.save('check/map_in.npy',i[0])", "\n", "# map_ref = scattering2.forward(img_ref).squeeze()", "\n", "# map_ref_blur = scattering2.forward(img_ref_blur).squeeze()", "\n", "# map_in = model(img_in, TARGET_LAYERS)", "\n", "# map_ref = model(img_ref, TARGET_LAYERS)", "\n", "# map_ref_blur = model(img_ref_blur, TARGET_LAYERS)", "\n", "# print(map_in['relu1_1'].shape)", "\n", "", "", "maps", ",", "weights", ",", "correspondences", "=", "swapper", "(", "map_in", ",", "map_ref", ",", "map_ref_blur", ")", "\n", "# mp=n.array(maps['tex1'])", "\n", "# np.save('check/map_swapped.npy',mp[0])", "\n", "hf", ".", "create_dataset", "(", "'tex1'", ",", "data", "=", "maps", "[", "'tex1'", "]", ")", "\n", "hf", ".", "create_dataset", "(", "'weights'", ",", "data", "=", "weights", ")", "\n", "# hf.create_dataset('correspondences', data=correspondences)", "\n", "hf", ".", "close", "(", ")", "\n", "if", "args", ".", "debug", "and", "i", "==", "10", ":", "\n", "            ", "break", "\n", "# if i == 2:", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.build_model": [[32, 39], ["models.RFDN.make_model_RFDN_TTL().to", "print", "models.RFDN.make_model_RFDN_TTL"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.make_model_RFDN_TTL"], ["def", "build_model", "(", "args", ")", ":", "\n", "    ", "netG", "=", "make_model_RFDN_TTL", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "# netG = SRNTT().to(device)", "\n", "# netG = SRCNN_TextureTransfer().to(device)", "\n", "# netG = UDSR(4).to(device)", "\n", "print", "(", "\"Model: RCAN_TTL \"", ")", "\n", "return", "netG", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.pre_train": [[41, 75], ["print", "range", "train.evaluate", "utils.save_model", "print", "tqdm.tqdm", "enumerate", "len", "batch[].to", "batch[].to", "torch.autograd.Variable().to", "batch[].to", "batch[].to", "netG", "optimizer_G.zero_grad", "criterion_rec", "criterion_rec.backward", "optimizer_G.step", "criterion_rec.item", "writer.add_scalar", "pbar.update", "str", "len", "Variable().to.float", "batch[].to.float", "criterion_rec.item", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.evaluate", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.save_model", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to"], ["", "def", "pre_train", "(", "args", ",", "netG", ",", "optimizer_G", ",", "criterion_rec", ",", "train_loader", ",", "dev_loader", ")", ":", "\n", "\n", "    ", "print", "(", "'Pre-training for '", ",", "args", ".", "n_epochs_init", ",", "' epochs'", ")", "\n", "step", "=", "0", "\n", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "n_epochs_init", "+", "1", ")", ":", "\n", "        ", "epoch_loss", "=", "0", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "train_loader", ")", ",", "desc", "=", "'Pre-train'", ",", "unit", "=", "'img'", ")", "as", "pbar", ":", "\n", "            ", "for", "i", ",", "batch", "in", "enumerate", "(", "train_loader", ",", "1", ")", ":", "\n", "                ", "img_hr", "=", "batch", "[", "'img_hr'", "]", ".", "to", "(", "device", ")", "\n", "img_lr_up", "=", "batch", "[", "'img_lr_up'", "]", ".", "to", "(", "device", ")", "\n", "img_lr", "=", "Variable", "(", "batch", "[", "'img_lr'", "]", ",", "requires_grad", "=", "True", ")", ".", "to", "(", "device", ")", "\n", "maps", "=", "batch", "[", "'maps'", "]", ".", "to", "(", "device", ")", "\n", "weights", "=", "batch", "[", "'weights'", "]", ".", "to", "(", "device", ")", "\n", "\n", "\"\"\" train G \"\"\"", "\n", "\n", "img_sr", "=", "netG", "(", "img_lr", ".", "float", "(", ")", ",", "img_lr_up", ",", "maps", ",", "weights", ".", "float", "(", ")", ")", "\n", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "g_loss", "=", "criterion_rec", "(", "img_sr", ",", "img_hr", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "epoch_loss", "+=", "g_loss", ".", "item", "(", ")", "\n", "# tbar.update(1)", "\n", "\"\"\" logging \"\"\"", "\n", "writer", ".", "add_scalar", "(", "'pre/g_loss'", ",", "g_loss", ".", "item", "(", ")", ",", "step", ")", "\n", "step", "+=", "1", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "pre_netG_path", "=", "args", ".", "exp_dir", "+", "'pre_netG_'", "+", "str", "(", "epoch", ")", "+", "'.pth'", "\n", "psnr", ",", "ssim", ",", "mse", "=", "evaluate", "(", "args", ",", "epoch", ",", "netG", ",", "dev_loader", ",", "False", ")", "\n", "save_model", "(", "args", ",", "pre_netG_path", ",", "epoch", ",", "netG", ",", "optimizer_G", ",", "psnr", ",", "ssim", ",", "mse", ")", "\n", "\n", "tot_loss", "=", "epoch_loss", "/", "len", "(", "train_loader", ")", "\n", "print", "(", "f\"Pre-training: Epoch {epoch} - Loss : {tot_loss}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.train": [[76, 136], ["losses.texture_loss.TextureLoss().to", "losses.perceptual_loss.PerceptualLoss().to", "losses.texture_loss.gradient_loss().to", "torch.nn.MSELoss", "print", "len", "tqdm.tqdm", "enumerate", "len", "losses.texture_loss.TextureLoss", "losses.perceptual_loss.PerceptualLoss", "losses.texture_loss.gradient_loss", "batch[].to", "batch[].to", "torch.autograd.Variable().to", "optimizer_G.zero_grad", "g_loss.backward", "optimizer_G.step", "g_loss.item", "writer.add_scalar", "pbar.update", "len", "batch[].to", "batch[].to", "netG", "TextureLoss().to.", "criterion_rec", "PerceptualLoss().to.", "netG", "criterion_rec", "PerceptualLoss().to.", "g_loss.item", "writer.add_scalar", "torch.autograd.Variable", "Variable().to.float", "batch[].to.float", "Variable().to.float", "criterion_tex.item"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to"], ["", "", "def", "train", "(", "args", ",", "epoch", ",", "netG", ",", "train_loader", ",", "optimizer_G", ",", "criterion_rec", ")", ":", "\n", "\n", "    ", "step", "=", "(", "epoch", "-", "1", ")", "*", "len", "(", "train_loader", ")", "\n", "epoch_loss", "=", "0", "\n", "criterion_tex", "=", "TextureLoss", "(", "args", ".", "use_weights", ")", ".", "to", "(", "device", ")", "\n", "criterion_per", "=", "PerceptualLoss", "(", ")", ".", "to", "(", "device", ")", "\n", "criterion_grad", "=", "gradient_loss", "(", ")", ".", "to", "(", "device", ")", "\n", "criterion_l2", "=", "nn", ".", "MSELoss", "(", ")", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "train_loader", ")", ",", "desc", "=", "'Training'", ",", "unit", "=", "'img'", ")", "as", "pbar", ":", "\n", "        ", "for", "i", ",", "batch", "in", "enumerate", "(", "train_loader", ",", "1", ")", ":", "\n", "            ", "img_hr", "=", "batch", "[", "'img_hr'", "]", ".", "to", "(", "device", ")", "\n", "img_lr_up", "=", "batch", "[", "'img_lr_up'", "]", ".", "to", "(", "device", ")", "\n", "img_lr", "=", "Variable", "(", "batch", "[", "'img_lr'", "]", ",", "requires_grad", "=", "True", ")", ".", "to", "(", "device", ")", "\n", "# img_lr_2x = batch['img_lr_up2x'].to(device)", "\n", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "# Train G", "\n", "\n", "if", "args", ".", "texture", ":", "\n", "                ", "maps", "=", "batch", "[", "'maps'", "]", ".", "to", "(", "device", ")", "\n", "weights", "=", "batch", "[", "'weights'", "]", ".", "to", "(", "device", ")", "\n", "# print(img_lr.cpu().shape)", "\n", "# print(img_lr_up.cpu().shape)", "\n", "img_sr", "=", "netG", "(", "img_lr", ".", "float", "(", ")", ",", "img_lr_up", ",", "maps", ",", "weights", ".", "float", "(", ")", ")", "\n", "# print(img_sr.cpu().shape)", "\n", "# print(img_hr.cpu().shape)", "\n", "loss_tex", "=", "criterion_tex", "(", "img_sr", ",", "maps", ",", "weights", ",", "False", ")", "\n", "loss_rec", "=", "criterion_rec", "(", "img_sr", ",", "img_hr", ")", "\n", "loss_per", "=", "criterion_per", "(", "img_sr", ",", "img_hr", ")", "\n", "# loss_dr = criterion_rec(img_dr,img_lr)", "\n", "# loss_grad = criterion_grad(img_sr,img_hr)", "\n", "g_loss", "=", "(", "loss_rec", "*", "args", ".", "lambda_rec", "+", "loss_tex", "*", "args", ".", "lambda_tex", "+", "loss_per", "*", "args", ".", "lambda_per", ")", "#+loss_dr*args.lambda_grad)", "\n", "", "else", ":", "\n", "                ", "img_sr", "=", "netG", "(", "img_lr", ".", "float", "(", ")", ")", "\n", "loss_rec", "=", "criterion_rec", "(", "img_sr", ",", "img_hr", ")", "\n", "loss_per", "=", "criterion_per", "(", "img_sr", ",", "img_hr", ")", "\n", "# y1,y2,y3 = netG(img_lr_up.float())", "\n", "# loss_1 = criterion_l2(y1,img_lr_up)", "\n", "# loss_2 = criterion_l2(y2,img_lr_up2x)", "\n", "# loss_3 = criterion_l2(y3,img_hr)", "\n", "g_loss", "=", "(", "loss_rec", "*", "args", ".", "lambda_rec", "+", "loss_per", "*", "args", ".", "lambda_per", ")", "\n", "# g_loss = loss_1 + loss_2 + loss_3", "\n", "\n", "\n", "\n", "", "g_loss", ".", "backward", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "epoch_loss", "+=", "g_loss", ".", "item", "(", ")", "\n", "# tbar.update(1)", "\n", "\"\"\" logging \"\"\"", "\n", "writer", ".", "add_scalar", "(", "'train/g_loss'", ",", "g_loss", ".", "item", "(", ")", ",", "step", ")", "\n", "# writer.add_scalar('train/loss_rec', loss_rec.item(), step)", "\n", "# writer.add_scalar('train/loss_per', loss_per.item(), step)", "\n", "if", "args", ".", "texture", ":", "\n", "                ", "writer", ".", "add_scalar", "(", "'train/loss_tex'", ",", "loss_tex", ".", "item", "(", ")", ",", "step", ")", "\n", "", "step", "+=", "1", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "tot_loss", "=", "epoch_loss", "/", "len", "(", "train_loader", ")", "\n", "print", "(", "f\"Training : Epoch {epoch} - Loss : {tot_loss}\"", ")", "\n", "return", "netG", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.evaluate": [[137, 176], ["torch.nn.MSELoss().to", "len", "len", "len", "print", "tqdm.tqdm", "enumerate", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "torch.nn.MSELoss", "batch[].to", "batch[].to", "batch[].to", "pbar.update", "len", "batch[].to", "batch[].to", "torch.no_grad", "torch.no_grad", "netG", "losses.metrics.PSNR", "losses.metrics.SSIM", "nn.MSELoss().to.", "torch.no_grad", "torch.no_grad", "netG", "losses.metrics.PSNR", "losses.metrics.SSIM", "nn.MSELoss().to.", "batch[].to.float", "batch[].to.float", "netG.clamp", "netG.clamp", "netG.clamp", "batch[].to.float", "netG.clamp", "netG.clamp", "netG.clamp"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.PSNR", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.SSIM", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.PSNR", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.SSIM"], ["", "def", "evaluate", "(", "args", ",", "epoch", ",", "netG", ",", "dev_loader", ",", "logging", "=", "True", ")", ":", "\n", "    ", "val_psnr", ",", "val_ssim", ",", "val_mse", "=", "0", ",", "0", ",", "0", "\n", "MSE", "=", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "device", ")", "\n", "# tbar = tqdm(total=len(dev_loader))", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "dev_loader", ")", ",", "desc", "=", "'validating'", ",", "unit", "=", "'img'", ")", "as", "pbar", ":", "\n", "        ", "for", "i", ",", "batch", "in", "enumerate", "(", "dev_loader", ",", "1", ")", ":", "\n", "            ", "img_hr", "=", "batch", "[", "'img_hr'", "]", ".", "to", "(", "device", ")", "\n", "img_lr", "=", "batch", "[", "'img_lr'", "]", ".", "to", "(", "device", ")", "\n", "img_lr_up", "=", "batch", "[", "'img_lr_up'", "]", ".", "to", "(", "device", ")", "\n", "if", "args", ".", "texture", ":", "\n", "                ", "maps", "=", "batch", "[", "'maps'", "]", ".", "to", "(", "device", ")", "\n", "weights", "=", "batch", "[", "'weights'", "]", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "img_sr", "=", "netG", "(", "img_lr", ".", "float", "(", ")", ",", "img_lr_up", ",", "maps", ",", "weights", ".", "float", "(", ")", ")", "\n", "val_psnr", "+=", "PSNR", "(", "img_hr", ",", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ")", "\n", "val_ssim", "+=", "SSIM", "(", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ",", "img_hr", ")", "\n", "val_mse", "+=", "MSE", "(", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ",", "img_hr", ")", "\n", "", "", "else", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "img_sr", "=", "netG", "(", "img_lr", ".", "float", "(", ")", ")", "\n", "val_psnr", "+=", "PSNR", "(", "img_hr", ",", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ")", "\n", "val_ssim", "+=", "SSIM", "(", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ",", "img_hr", ")", "\n", "val_mse", "+=", "MSE", "(", "img_sr", ".", "clamp", "(", "0", ",", "1", ")", ",", "img_hr", ")", "\n", "\n", "\n", "", "", "pbar", ".", "update", "(", "1", ")", "\n", "# Logging", "\n", "", "", "if", "logging", "==", "True", ":", "\n", "\n", "        ", "writer", ".", "add_scalar", "(", "'val/psnr'", ",", "val_psnr", ",", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'val/ssim'", ",", "val_ssim", ",", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'val/mse'", ",", "val_mse", ",", "epoch", ")", "\n", "\n", "", "val_psnr", "/=", "len", "(", "dev_loader", ")", "\n", "val_ssim", "/=", "len", "(", "dev_loader", ")", "\n", "val_mse", "/=", "len", "(", "dev_loader", ")", "\n", "# tbar.close()", "\n", "print", "(", "f'Validating: Epoch {epoch} PSNR:{val_psnr:.4f}, SSIM:{val_ssim:.4f}, MSE:{val_mse:.4f}'", ")", "\n", "return", "val_psnr", ",", "val_ssim", ",", "val_mse", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.main": [[177, 229], ["utils.create_data_loaders", "train.build_model", "torch.nn.L1Loss().to", "torch.optim.lr_scheduler.StepLR", "range", "utils.build_optim", "print", "utils.load_model", "int", "train.train", "train.evaluate", "torch.optim.lr_scheduler.StepLR.step", "utils.save_model", "torch.nn.L1Loss", "train.parameters", "print", "str", "len"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.create_data_loaders", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.build_model", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.build_optim", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.load_model", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.train", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.train.evaluate", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.save_model"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "train_loader", ",", "dev_loader", "=", "create_data_loaders", "(", "args", ")", "\n", "netG", "=", "build_model", "(", "args", ")", "\n", "\n", "# define criteria", "\n", "criterion_rec", "=", "nn", ".", "L1Loss", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "# Pretrain for certain epochs", "\n", "if", "args", ".", "netG_pre", "is", "None", ":", "\n", "        ", "\"\"\" pretrain \"\"\"", "\n", "start_epoch", "=", "0", "\n", "best_psnr", "=", "0", "\n", "best_ssim", "=", "0", "\n", "best_mse", "=", "1e9", "\n", "optimizer_G", "=", "build_optim", "(", "args", ",", "netG", ".", "parameters", "(", ")", ")", "\n", "# pre_train(args, netG, netD, optimizer_G,optimizer_D, criterion_rec,train_loader,dev_loader)", "\n", "if", "args", ".", "texture", ":", "\n", "            ", "pass", "\n", "# pre_train(args, netG, optimizer_G,criterion_rec,train_loader,dev_loader)", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "'Loading from checkpoint '", ",", "args", ".", "netG_pre", ")", "\n", "checkpoint", ",", "netG", ",", "optimizer_G", "=", "load_model", "(", "args", ".", "netG_pre", ",", "netG", ")", "\n", "args", "=", "checkpoint", "[", "'args'", "]", "\n", "best_psnr", "=", "checkpoint", "[", "'best_PSNR'", "]", "\n", "best_ssim", "=", "checkpoint", "[", "'best_SSIM'", "]", "\n", "best_mse", "=", "checkpoint", "[", "'MSE'", "]", "\n", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "\n", "\n", "#Scheduler", "\n", "", "scheduler_G", "=", "StepLR", "(", "optimizer_G", ",", "int", "(", "args", ".", "n_epochs", "*", "len", "(", "train_loader", ")", "/", "2", ")", ",", "0.1", ")", "\n", "# scheduler_G = StepLR(optimizer_G,args.lr_step_size, args.lr_gamma)", "\n", "#Actual training with all losses", "\n", "\n", "for", "epoch", "in", "range", "(", "start_epoch", "+", "1", ",", "start_epoch", "+", "args", ".", "n_epochs", "+", "1", ")", ":", "\n", "        ", "is_best_psnr", "=", "False", "\n", "is_best_ssim", "=", "False", "\n", "netG", "=", "train", "(", "args", ",", "epoch", ",", "netG", ",", "train_loader", ",", "optimizer_G", ",", "criterion_rec", ")", "\n", "psnr", ",", "ssim", ",", "mse", "=", "evaluate", "(", "args", ",", "epoch", ",", "netG", ",", "dev_loader", ")", "\n", "scheduler_G", ".", "step", "(", ")", "\n", "net_path", "=", "args", ".", "exp_dir", "+", "'model_'", "+", "str", "(", "epoch", ")", "+", "'.pt'", "\n", "if", "psnr", ">", "best_psnr", ":", "\n", "            ", "print", "(", "'psnr '", ",", "psnr", ",", "'best psnr '", ",", "best_psnr", ")", "\n", "is_best_psnr", "=", "True", "\n", "best_psnr", "=", "psnr", "\n", "", "if", "ssim", ">", "best_ssim", ":", "\n", "            ", "is_best_ssim", "=", "True", "\n", "best_ssim", "=", "ssim", "\n", "", "save_model", "(", "args", ",", "net_path", ",", "epoch", ",", "netG", ",", "optimizer_G", ",", "psnr", ",", "ssim", ",", "mse", ",", "best_ssim", ",", "best_psnr", ",", "is_best_ssim", ",", "is_best_psnr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.create_datasets": [[11, 34], ["datasets.Reference_dataset_vol.ReferenceDataset_vol", "datasets.Reference_dataset_vol.ReferenceDataset_vol", "datasets.Basic_dataset_vol.BasicDataset_vol", "datasets.Basic_dataset_vol.BasicDataset_vol"], "function", ["None"], ["def", "create_datasets", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "texture", ":", "\n", "        ", "train_path", "=", "args", ".", "data_base", "+", "'train_map/'", "\n", "eval_path", "=", "args", ".", "data_base", "+", "'val_map/'", "\n", "train_data", "=", "ReferenceDataset_vol", "(", "train_path", ")", "\n", "dev_data", "=", "ReferenceDataset_vol", "(", "eval_path", ")", "\n", "\n", "# dev_path=args.dataroot+'/'+args.data_name+'/data/val.h5'", "\n", "# map_path_dev = args.dataroot+'/'+args.data_name+'/val_map/slice_'", "\n", "# train_path=args.dataroot+'/'+args.data_name+'/data/train.h5'", "\n", "# map_path_train = args.dataroot+'/'+args.data_name+'/train_map/'", "\n", "# train_data = ReferenceDataset(train_path,map_path_train)", "\n", "# dev_data = ReferenceDataset(dev_path,map_path_dev,True)", "\n", "# train_data = ReferenceDataset(args.dataroot,args.data_name)", "\n", "# dev_data = ReferenceDataset(args.dataroot,args.data_name,True)", "\n", "", "else", ":", "\n", "# train_data = BasicDataset(args.dataroot,args.data_name,args.scale_factor,False)", "\n", "# dev_data = BasicDataset(args.dataroot,args.data_name,args.scale_factor,True)", "\n", "        ", "train_path", "=", "args", ".", "data_base", "+", "'train/'", "\n", "eval_path", "=", "args", ".", "data_base", "+", "'val/'", "\n", "train_data", "=", "BasicDataset_vol", "(", "train_path", ",", "args", ".", "data_size", ")", "\n", "dev_data", "=", "BasicDataset_vol", "(", "eval_path", ",", "args", ".", "data_size", ")", "\n", "", "return", "dev_data", ",", "train_data", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.create_data_loaders": [[35, 51], ["utils.create_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.create_datasets"], ["", "def", "create_data_loaders", "(", "args", ")", ":", "\n", "    ", "dev_data", ",", "train_data", "=", "create_datasets", "(", "args", ")", "\n", "train_loader", "=", "DataLoader", "(", "\n", "dataset", "=", "train_data", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "#num_workers=64,", "\n", "#pin_memory=True,", "\n", ")", "\n", "dev_loader", "=", "DataLoader", "(", "\n", "dataset", "=", "dev_data", ",", "\n", "batch_size", "=", "1", ",", "\n", "#num_workers=64,", "\n", "#pin_memory=True,", "\n", ")", "\n", "return", "train_loader", ",", "dev_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.save_model_gan": [[53, 80], ["torch.save", "shutil.copyfile", "shutil.copyfile", "shutil.copyfile", "netG.state_dict", "netD.state_dict", "optimizer_G.state_dict", "optimizer_D.state_dict"], "function", ["None"], ["", "def", "save_model_gan", "(", "args", ",", "path", ",", "epoch", ",", "netG", ",", "netD", ",", "optimizer_G", ",", "optimizer_D", ",", "psnr", ",", "ssim", ",", "mse", ",", "best_ssim", ",", "best_psnr", ",", "is_best_ssim", "=", "False", ",", "is_best_psnr", "=", "False", ")", ":", "\n", "\n", "    ", "out", "=", "torch", ".", "save", "(", "\n", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'args'", ":", "args", ",", "\n", "'netG'", ":", "netG", ".", "state_dict", "(", ")", ",", "\n", "'netD'", ":", "netD", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_G'", ":", "optimizer_G", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_D'", ":", "optimizer_D", ".", "state_dict", "(", ")", ",", "\n", "'PSNR'", ":", "psnr", ",", "\n", "'SSIM'", ":", "ssim", ",", "\n", "'MSE'", ":", "mse", ",", "\n", "'best_PSNR'", ":", "best_psnr", ",", "\n", "'best_SSIM'", ":", "best_ssim", "\n", "#'exp_dir':exp_dir", "\n", "}", ",", "\n", "path", "\n", ")", "\n", "path_last", "=", "args", ".", "storage", "+", "'last_epoch_'", "+", "args", ".", "model_name", "+", "'.pt'", "\n", "shutil", ".", "copyfile", "(", "path", ",", "path_last", ")", "\n", "if", "is_best_psnr", ":", "\n", "        ", "path_psnr", "=", "args", ".", "storage", "+", "'best_psnr_'", "+", "args", ".", "model_name", "+", "'.pt'", "\n", "shutil", ".", "copyfile", "(", "path", ",", "path_psnr", ")", "\n", "", "if", "is_best_ssim", ":", "\n", "        ", "path_mse", "=", "args", ".", "storage", "+", "'best_ssim_'", "+", "args", ".", "model_name", "+", "'.pt'", "\n", "shutil", ".", "copyfile", "(", "path", ",", "path_mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.load_model_gan": [[81, 92], ["torch.load", "netG.load_state_dict", "netD.load_state_dict", "utils.build_optim", "build_optim.load_state_dict", "utils.build_optim", "build_optim.load_state_dict", "netG.parameters", "netD.parameters"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.build_optim", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.build_optim"], ["", "", "def", "load_model_gan", "(", "checkpoint_file", ",", "netG", ",", "netD", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_file", ")", "\n", "args", "=", "checkpoint", "[", "'args'", "]", "\n", "netG", ".", "load_state_dict", "(", "checkpoint", "[", "'netG'", "]", ")", "\n", "netD", ".", "load_state_dict", "(", "checkpoint", "[", "'netD'", "]", ")", "\n", "optimizer_G", "=", "build_optim", "(", "args", ",", "netG", ".", "parameters", "(", ")", ")", "\n", "optimizer_G", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_G'", "]", ")", "\n", "optimizer_D", "=", "build_optim", "(", "args", ",", "netD", ".", "parameters", "(", ")", ")", "\n", "optimizer_D", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_D'", "]", ")", "\n", "\n", "return", "checkpoint", ",", "netG", ",", "netD", ",", "optimizer_G", ",", "optimizer_D", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.build_optim": [[93, 99], ["torch.optim.Adam", "torch.optim.SGD"], "function", ["None"], ["", "def", "build_optim", "(", "args", ",", "params", ")", ":", "\n", "    ", "if", "args", ".", "optimizer", "==", "'ADAM'", ":", "\n", "        ", "optimizer_G", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "args", ".", "lr", ",", "betas", "=", "(", "args", ".", "beta1", ",", "args", ".", "beta2", ")", ",", "eps", "=", "args", ".", "epsilon", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "return", "optimizer_G", "\n", "", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "        ", "optimizer_G", "=", "torch", ".", "optim", ".", "SGD", "(", "params", ",", "args", ".", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.save_model": [[100, 125], ["torch.save", "shutil.copyfile", "shutil.copyfile", "shutil.copyfile", "netG.state_dict", "optimizer_G.state_dict"], "function", ["None"], ["", "", "def", "save_model", "(", "args", ",", "path", ",", "epoch", ",", "netG", ",", "optimizer_G", ",", "psnr", ",", "ssim", ",", "mse", ",", "best_ssim", ",", "best_psnr", ",", "is_best_ssim", "=", "False", ",", "is_best_psnr", "=", "False", ")", ":", "\n", "\n", "    ", "out", "=", "torch", ".", "save", "(", "\n", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'args'", ":", "args", ",", "\n", "'netG'", ":", "netG", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_G'", ":", "optimizer_G", ".", "state_dict", "(", ")", ",", "\n", "'PSNR'", ":", "psnr", ",", "\n", "'SSIM'", ":", "ssim", ",", "\n", "'MSE'", ":", "mse", ",", "\n", "'best_PSNR'", ":", "best_psnr", ",", "\n", "'best_SSIM'", ":", "best_ssim", "\n", "#'exp_dir':exp_dir", "\n", "}", ",", "\n", "path", "\n", ")", "\n", "path_last", "=", "args", ".", "storage", "+", "'last_epoch_'", "+", "args", ".", "model_name", "+", "'.pt'", "\n", "shutil", ".", "copyfile", "(", "path", ",", "path_last", ")", "\n", "if", "is_best_psnr", ":", "\n", "        ", "path_psnr", "=", "args", ".", "storage", "+", "'best_psnr_'", "+", "args", ".", "model_name", "+", "'.pt'", "\n", "shutil", ".", "copyfile", "(", "path", ",", "path_psnr", ")", "\n", "", "if", "is_best_ssim", ":", "\n", "        ", "path_mse", "=", "args", ".", "storage", "+", "'best_ssim_'", "+", "args", ".", "model_name", "+", "'.pt'", "\n", "shutil", ".", "copyfile", "(", "path", ",", "path_mse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.load_model": [[127, 134], ["torch.load", "netG.load_state_dict", "utils.build_optim", "build_optim.load_state_dict", "netG.parameters"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.None.utils.build_optim"], ["", "", "def", "load_model", "(", "checkpoint_file", ",", "netG", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_file", ")", "\n", "args", "=", "checkpoint", "[", "'args'", "]", "\n", "netG", ".", "load_state_dict", "(", "checkpoint", "[", "'netG'", "]", ")", "\n", "optimizer_G", "=", "build_optim", "(", "args", ",", "netG", ".", "parameters", "(", ")", ")", "\n", "optimizer_G", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_G'", "]", ")", "\n", "return", "checkpoint", ",", "netG", ",", "optimizer_G", "\n", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.datasets.Reference_dataset_vol.ReferenceDataset_vol.__init__": [[19, 33], ["torch.utils.data.Dataset.__init__", "os.walk", "sorted", "torchvision.transforms.Compose", "os.path.join", "paths.append", "sorted", "torchvision.transforms.ToTensor", "os.path.join", "os.listdir", "os.path.isfile", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["def", "__init__", "(", "self", ",", "mypath", ")", ":", "\n", "\n", "        ", "super", "(", "ReferenceDataset_vol", ",", "self", ")", ".", "__init__", "(", ")", "\n", "for", "_", ",", "directory", ",", "_", "in", "walk", "(", "mypath", ")", ":", "\n", "            ", "dirs", "=", "directory", "\n", "break", "\n", "", "paths", "=", "[", "]", "\n", "self", ".", "files", "=", "[", "]", "\n", "for", "d", "in", "sorted", "(", "dirs", ")", ":", "\n", "            ", "path", "=", "join", "(", "mypath", ",", "d", ")", "\n", "paths", ".", "append", "(", "path", ")", "\n", "self", ".", "files", "=", "self", ".", "files", "+", "sorted", "(", "[", "join", "(", "path", ",", "f", ")", "for", "f", "in", "listdir", "(", "path", ")", "if", "isfile", "(", "join", "(", "path", ",", "f", ")", ")", "]", ")", "\n", "\n", "", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.datasets.Reference_dataset_vol.ReferenceDataset_vol.__getitem__": [[34, 50], ["h5py.File", "numpy.array", "Reference_dataset_vol.ReferenceDataset_vol.transforms", "Reference_dataset_vol.ReferenceDataset_vol.transforms", "Reference_dataset_vol.ReferenceDataset_vol.transforms", "numpy.array", "torchvision.transforms.functional.to_tensor().transpose", "Reference_dataset_vol.ReferenceDataset_vol.transforms", "numpy.array", "numpy.array", "numpy.array", "Reference_dataset_vol.ReferenceDataset_vol.type", "Reference_dataset_vol.ReferenceDataset_vol.type", "Reference_dataset_vol.ReferenceDataset_vol.type", "torchvision.transforms.functional.to_tensor().transpose.type", "Reference_dataset_vol.ReferenceDataset_vol.type", "torchvision.transforms.functional.to_tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "fname", "=", "self", ".", "files", "[", "index", "]", "\n", "with", "h5py", ".", "File", "(", "fname", ",", "'r'", ")", "as", "data", ":", "\n", "            ", "hr", "=", "np", ".", "array", "(", "data", "[", "'HR'", "]", ")", "\n", "img_hr", "=", "self", ".", "transforms", "(", "hr", "[", "0", "]", ")", "\n", "# print('test ',np.array(data['LR']).shape)", "\n", "img_lr", "=", "self", ".", "transforms", "(", "np", ".", "array", "(", "data", "[", "'LR'", "]", ")", ")", "\n", "img_lr_up", "=", "self", ".", "transforms", "(", "np", ".", "array", "(", "data", "[", "'LR_up'", "]", ")", ")", "\n", "tex", "=", "np", ".", "array", "(", "data", "[", "'tex1'", "]", ")", "\n", "tex", "=", "TF", ".", "to_tensor", "(", "tex", ")", ".", "transpose", "(", "1", ",", "0", ")", "\n", "weights", "=", "self", ".", "transforms", "(", "np", ".", "array", "(", "data", "[", "'weights'", "]", ")", ")", "\n", "return", "{", "'img_hr'", ":", "img_hr", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "'img_lr'", ":", "img_lr", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "\n", "'img_lr_up'", ":", "img_lr_up", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "\n", "'maps'", ":", "tex", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "\n", "'weights'", ":", "weights", ".", "type", "(", "torch", ".", "FloatTensor", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.datasets.Reference_dataset_vol.ReferenceDataset_vol.__len__": [[51, 53], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.datasets.swapping_dataset.SwappingDataset.__init__": [[14, 27], ["torch.utils.data.Dataset.__init__", "h5py.File", "h5py.File"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["def", "__init__", "(", "self", ",", "input_path", ",", "ref_path", ")", ":", "\n", "\n", "        ", "super", "(", "SwappingDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "ip", "=", "h5py", ".", "File", "(", "input_path", ",", "'r'", ")", "\n", "ref", "=", "h5py", ".", "File", "(", "ref_path", ",", "'r'", ")", "\n", "self", ".", "LR", "=", "ip", "[", "'LR'", "]", "\n", "self", ".", "LR_up", "=", "ip", "[", "'LR_up'", "]", "\n", "self", ".", "HR", "=", "ip", "[", "'HR'", "]", "\n", "self", ".", "refLR_up", "=", "ref", "[", "'LR_up'", "]", "\n", "self", ".", "refHR", "=", "ref", "[", "'HR'", "]", "\n", "self", ".", "len", "=", "self", ".", "LR", ".", "shape", "[", "0", "]", "\n", "#self.ref_len=self.refLR_up.shape[0]", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.datasets.swapping_dataset.SwappingDataset.__getitem__": [[29, 41], ["numpy.array", "numpy.array", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor().type", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img_in", "=", "self", ".", "HR", "[", "index", ",", "0", "]", "\n", "img_in_lr", "=", "self", ".", "LR", "[", "index", ",", "0", "]", "\n", "img_in_up", "=", "self", ".", "LR_up", "[", "index", ",", "0", "]", "\n", "#ref_index=int(index%self.ref_len) #As we use same reference for all volumes", "\n", "img_ref", "=", "np", ".", "array", "(", "self", ".", "refHR", ")", "\n", "img_ref_up", "=", "np", ".", "array", "(", "self", ".", "refLR_up", ")", "\n", "\n", "return", "{", "'img_in'", ":", "torch", ".", "Tensor", "(", "img_in_up", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "\n", "'img_ref'", ":", "torch", ".", "Tensor", "(", "img_ref", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "\n", "'img_ref_blur'", ":", "torch", ".", "Tensor", "(", "img_ref_up", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.datasets.swapping_dataset.SwappingDataset.__len__": [[42, 44], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.datasets.Basic_dataset_vol.BasicDataset_vol.__init__": [[18, 29], ["torch.utils.data.Dataset.__init__", "torchvision.transforms.Compose", "sorted", "torchvision.transforms.ToTensor", "os.path.join", "h5py.File", "os.listdir", "os.path.isfile", "os.path.join", "range"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["def", "__init__", "(", "self", ",", "path", ",", "percent", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicDataset_vol", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "percent", "=", "percent", "\n", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "examples", "=", "[", "]", "\n", "files", "=", "sorted", "(", "[", "join", "(", "path", ",", "f", ")", "for", "f", "in", "listdir", "(", "path", ")", "if", "isfile", "(", "join", "(", "path", ",", "f", ")", ")", "]", ")", "\n", "for", "fname", "in", "files", ":", "\n", "            ", "with", "h5py", ".", "File", "(", "fname", ",", "'r'", ")", "as", "hf", ":", "\n", "                ", "fsvol", "=", "hf", "[", "'LR'", "]", "\n", "num_slices", "=", "fsvol", ".", "shape", "[", "0", "]", "\n", "self", ".", "examples", "+=", "[", "(", "fname", ",", "slice", ")", "for", "slice", "in", "range", "(", "num_slices", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.datasets.Basic_dataset_vol.BasicDataset_vol.__getitem__": [[33, 46], ["h5py.File", "numpy.array", "numpy.array", "numpy.array", "Basic_dataset_vol.BasicDataset_vol.transforms", "Basic_dataset_vol.BasicDataset_vol.transforms", "Basic_dataset_vol.BasicDataset_vol.transforms", "Basic_dataset_vol.BasicDataset_vol.type", "Basic_dataset_vol.BasicDataset_vol.type", "Basic_dataset_vol.BasicDataset_vol.type"], "methods", ["None"], ["", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "fname", ",", "slice", "=", "self", ".", "examples", "[", "index", "]", "\n", "with", "h5py", ".", "File", "(", "fname", ",", "'r'", ")", "as", "data", ":", "\n", "            ", "img_hr", "=", "np", ".", "array", "(", "data", "[", "'HR'", "]", ")", "\n", "img_lr", "=", "np", ".", "array", "(", "data", "[", "'LR'", "]", ")", "\n", "img_lr_up", "=", "np", ".", "array", "(", "data", "[", "'LR_up'", "]", ")", "\n", "hr", "=", "self", ".", "transforms", "(", "img_hr", "[", "slice", ",", "0", "]", ")", "\n", "lr", "=", "self", ".", "transforms", "(", "img_lr", "[", "slice", ",", "0", "]", ")", "\n", "lr_up", "=", "self", ".", "transforms", "(", "img_lr_up", "[", "slice", ",", "0", "]", ")", "\n", "\n", "return", "{", "'img_hr'", ":", "hr", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "'img_lr'", ":", "lr", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "\n", "'img_lr_up'", ":", "lr_up", ".", "type", "(", "torch", ".", "FloatTensor", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.datasets.Basic_dataset_vol.BasicDataset_vol.__len__": [[47, 49], ["numpy.ceil().astype", "numpy.ceil", "len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "ceil", "(", "len", "(", "self", ".", "examples", ")", "*", "self", ".", "percent", ")", ".", "astype", "(", "int", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.Upsampler.__init__": [[26, 44], ["torch.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "math.log", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "act", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "act"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "scale", ",", "n_feat", ",", "bn", "=", "False", ",", "act", "=", "False", ",", "bias", "=", "True", ")", ":", "\n", "\n", "        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# Is scale = 2^n?", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "4", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "act", "(", ")", ")", "\n", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "9", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "act", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "super", "(", "Upsampler", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.CALayer.__init__": [[48, 58], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "reduction", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.CALayer.forward": [[60, 64], ["RCAN_Texture_transfer.CALayer.avg_pool", "RCAN_Texture_transfer.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.RCAB.__init__": [[67, 80], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "modules_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_body.append", "RCAN_Texture_transfer.CALayer", "conv", "modules_body.append", "modules_body.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "RCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "modules_body", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "modules_body", ".", "append", "(", "act", ")", "\n", "", "modules_body", ".", "append", "(", "CALayer", "(", "n_feat", ",", "reduction", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.RCAB.forward": [[81, 86], ["RCAN_Texture_transfer.RCAB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "#res = self.body(x).mul(self.res_scale)", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.ResidualGroup.__init__": [[89, 98], ["torch.Module.__init__", "modules_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "RCAN_Texture_transfer.RCAB", "conv", "range", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "res_scale", ",", "n_resblocks", ")", ":", "\n", "        ", "super", "(", "ResidualGroup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "\n", "RCAB", "(", "\n", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", "for", "_", "in", "range", "(", "n_resblocks", ")", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.ResidualGroup.forward": [[99, 103], ["RCAN_Texture_transfer.ResidualGroup.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.RCAN.__init__": [[106, 140], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "conv", "conv", "modules_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "RCAN_Texture_transfer.ResidualGroup", "conv", "RCAN_Texture_transfer.Upsampler", "conv", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "range", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "default_conv", ")", ":", "\n", "        ", "super", "(", "RCAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "n_resgroups", "=", "args", ".", "n_resgroups", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "reduction", "=", "args", ".", "reduction", "\n", "scale", "=", "4", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# define head module", "\n", "modules_head", "=", "[", "conv", "(", "1", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "self", ".", "Tex_conv", "=", "conv", "(", "n_feats", "+", "81", ",", "n_feats", ",", "kernel_size", ")", "\n", "self", ".", "Tex_conv1", "=", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", "\n", "# define body module", "\n", "modules_body", "=", "[", "\n", "ResidualGroup", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "reduction", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", ",", "n_resblocks", "=", "n_resblocks", ")", "for", "_", "in", "range", "(", "n_resgroups", ")", "]", "\n", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "modules_tail", "=", "[", "\n", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "1", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "modules_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "modules_tail", ")", "\n", "if", "args", ".", "use_weights", ":", "\n", "            ", "self", ".", "a", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "b", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.RCAN.forward": [[141, 159], ["RCAN_Texture_transfer.RCAN.head", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "RCAN_Texture_transfer.RCAN.Tex_conv1", "RCAN_Texture_transfer.RCAN.body", "RCAN_Texture_transfer.RCAN.tail", "hasattr", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "RCAN_Texture_transfer.RCAN.Tex_conv", "torch.pad", "torch.pad", "torch.pad"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "x_up", ",", "maps", ",", "weights", "=", "None", ")", ":", "\n", "\n", "#compute weighted maps", "\n", "        ", "if", "hasattr", "(", "self", ",", "'a'", ")", "and", "weights", "is", "not", "None", ":", "\n", "            ", "weights_scaled", "=", "F", ".", "pad", "(", "weights", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", "*", "self", ".", "a", "+", "self", ".", "b", "\n", "maps", "*=", "torch", ".", "sigmoid", "(", "weights_scaled", ")", "\n", "\n", "", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "res", "=", "torch", ".", "cat", "(", "[", "x", ",", "maps", "]", ",", "1", ")", "\n", "res", "=", "self", ".", "Tex_conv1", "(", "self", ".", "Tex_conv", "(", "res", ")", ")", "\n", "res", "=", "self", ".", "body", "(", "res", ")", "\n", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "+=", "x_up", "\n", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.prepare": [[7, 14], ["torch.device", "torch.device", "torch.device", "tensor.half.to", "RCAN_Texture_transfer.prepare._prepare"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to"], ["def", "prepare", "(", "self", ",", "l", ",", "volatile", "=", "False", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "self", ".", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "def", "_prepare", "(", "tensor", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "_l", ")", "for", "_l", "in", "l", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.default_conv": [[15, 19], ["torch.Conv2d"], "function", ["None"], ["", "def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN_Texture_transfer.make_model_TT": [[21, 23], ["RCAN_Texture_transfer.RCAN"], "function", ["None"], ["", "def", "make_model_TT", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "RCAN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.vgg.VGG.__init__": [[77, 102], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torchvision.VGG.register_buffer", "torchvision.VGG.register_buffer", "vgg.insert_bn", "collections.OrderedDict", "torchvision.VGG.parameters", "getattr", "model_type.replace", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "zip"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.vgg.insert_bn"], ["def", "__init__", "(", "self", ",", "model_type", ":", "str", ",", "requires_grad", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "features", "=", "getattr", "(", "vgg", ",", "model_type", ")", "(", "True", ")", ".", "features", "\n", "self", ".", "names", "=", "NAMES", "[", "model_type", ".", "replace", "(", "'_bn'", ",", "''", ")", "]", "\n", "if", "'bn'", "in", "model_type", ":", "\n", "            ", "self", ".", "names", "=", "insert_bn", "(", "self", ".", "names", ")", "\n", "\n", "", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "zip", "(", "self", ".", "names", ",", "features", ")", "\n", "]", ")", ")", "\n", "\n", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "self", ".", "register_buffer", "(", "\n", "name", "=", "'vgg_mean'", ",", "\n", "tensor", "=", "torch", ".", "tensor", "(", "[", "[", "[", "0.485", "]", "]", ",", "[", "[", "0.456", "]", "]", ",", "[", "[", "0.406", "]", "]", "]", ",", "\n", "requires_grad", "=", "False", ")", "\n", ")", "\n", "self", ".", "register_buffer", "(", "\n", "name", "=", "'vgg_std'", ",", "\n", "tensor", "=", "torch", ".", "tensor", "(", "[", "[", "[", "0.229", "]", "]", ",", "[", "[", "0.224", "]", "]", ",", "[", "[", "0.225", "]", "]", "]", ",", "\n", "requires_grad", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.vgg.VGG.z_score": [[104, 108], ["x.div.div.sub", "x.div.div.div", "torchvision.VGG.vgg_mean.detach", "torchvision.VGG.vgg_std.detach"], "methods", ["None"], ["", "def", "z_score", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "sub", "(", "self", ".", "vgg_mean", ".", "detach", "(", ")", ")", "\n", "x", "=", "x", ".", "div", "(", "self", ".", "vgg_std", ".", "detach", "(", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.vgg.VGG.forward": [[109, 141], ["all", "torchvision.VGG.z_score", "collections.OrderedDict", "torchvision.VGG.net._modules.items", "torch.all", "torch.all", "torch.all", "torch.all", "torch.all", "torch.all", "torch.all", "torch.all", "warnings.warn", "layer", "layer.float", "collections.OrderedDict.update", "len", "len"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.vgg.VGG.z_score"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "targets", ":", "list", ")", "->", "dict", ":", "\n", "        ", "\"\"\"\n        Parameters\n        ---\n        x : torch.Tensor\n            The input tensor normalized to [0, 1].\n        target : list of str\n            The layer names you want to pick up.\n        Returns\n        ---\n        out_dict : dict of torch.Tensor\n            The dictionary of tensors you specified.\n            The elements are ordered by the original VGG order. \n        \"\"\"", "\n", "\n", "assert", "all", "(", "[", "t", "in", "self", ".", "names", "for", "t", "in", "targets", "]", ")", ",", "'Specified name does not exist.'", "\n", "\n", "if", "torch", ".", "all", "(", "x", "<", "0.", ")", "and", "torch", ".", "all", "(", "x", ">", "1.", ")", ":", "\n", "            ", "warnings", ".", "warn", "(", "'input tensor is not normalize to [0, 1].'", ")", "\n", "\n", "", "x", "=", "self", ".", "z_score", "(", "x", ")", "\n", "\n", "out_dict", "=", "OrderedDict", "(", ")", "\n", "for", "key", ",", "layer", "in", "self", ".", "net", ".", "_modules", ".", "items", "(", ")", ":", "\n", "            ", "x", "=", "layer", "(", "x", ".", "float", "(", ")", ")", "\n", "if", "key", "in", "targets", ":", "\n", "                ", "out_dict", ".", "update", "(", "{", "key", ":", "x", "}", ")", "\n", "", "if", "len", "(", "out_dict", ")", "==", "len", "(", "targets", ")", ":", "# to reduce wasting computation", "\n", "                ", "break", "\n", "\n", "", "", "return", "out_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.vgg.insert_bn": [[48, 64], ["names_bn.append", "name.replace", "names_bn.append"], "function", ["None"], ["def", "insert_bn", "(", "names", ":", "list", ")", ":", "\n", "    ", "\"\"\"\n    Inserts bn layer after each conv.\n\n    Parameters\n    ---\n    names : list\n        The list of layer names.\n    \"\"\"", "\n", "names_bn", "=", "[", "]", "\n", "for", "name", "in", "names", ":", "\n", "        ", "names_bn", ".", "append", "(", "name", ")", "\n", "if", "'conv'", "in", "name", ":", "\n", "            ", "pos", "=", "name", ".", "replace", "(", "'conv'", ",", "''", ")", "\n", "names_bn", ".", "append", "(", "'bn'", "+", "pos", ")", "\n", "", "", "return", "names_bn", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.ShortcutBlock.__init__": [[70, 73], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "submodule", ")", ":", "\n", "        ", "super", "(", "ShortcutBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sub", "=", "submodule", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.ShortcutBlock.forward": [[74, 77], ["block.ShortcutBlock.sub"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "x", "+", "self", ".", "sub", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.ESA.__init__": [[104, 116], ["torch.Module.__init__", "conv", "conv", "conv", "conv", "conv", "conv", "conv", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ",", "conv", ")", ":", "\n", "        ", "super", "(", "ESA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "f", "=", "n_feats", "//", "4", "\n", "self", ".", "conv1", "=", "conv", "(", "n_feats", ",", "f", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "conv_f", "=", "conv", "(", "f", ",", "f", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "conv_max", "=", "conv", "(", "f", ",", "f", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "f", ",", "f", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "f", ",", "f", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3_", "=", "conv", "(", "f", ",", "f", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4", "=", "conv", "(", "f", ",", "n_feats", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.ESA.forward": [[117, 130], ["block.ESA.conv1", "block.ESA.conv2", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "block.ESA.relu", "block.ESA.relu", "block.ESA.conv3_", "torch.interpolate", "torch.interpolate", "torch.interpolate", "block.ESA.conv_f", "block.ESA.conv4", "block.ESA.sigmoid", "block.ESA.conv_max", "block.ESA.conv3", "x.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "c1_", "=", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "c1", "=", "self", ".", "conv2", "(", "c1_", ")", "\n", "v_max", "=", "F", ".", "max_pool2d", "(", "c1", ",", "kernel_size", "=", "7", ",", "stride", "=", "3", ")", "\n", "v_range", "=", "self", ".", "relu", "(", "self", ".", "conv_max", "(", "v_max", ")", ")", "\n", "c3", "=", "self", ".", "relu", "(", "self", ".", "conv3", "(", "v_range", ")", ")", "\n", "c3", "=", "self", ".", "conv3_", "(", "c3", ")", "\n", "c3", "=", "F", ".", "interpolate", "(", "c3", ",", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "cf", "=", "self", ".", "conv_f", "(", "c1_", ")", "\n", "c4", "=", "self", ".", "conv4", "(", "c3", "+", "cf", ")", "\n", "m", "=", "self", ".", "sigmoid", "(", "c4", ")", "\n", "\n", "return", "x", "*", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.degradation_block.__init__": [[132, 137], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ngf", "=", "64", ")", ":", "\n", "        ", "super", "(", "degradation_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "nn", ".", "Conv2d", "(", "1", ",", "ngf", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.degradation_block.forward": [[139, 145], ["block.degradation_block.conv1", "block.degradation_block.conv2", "block.degradation_block.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "h", "=", "self", ".", "conv1", "(", "x", ")", "\n", "h", "=", "self", ".", "conv2", "(", "h", ")", "\n", "h", "=", "self", ".", "conv3", "(", "h", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.RFDB.__init__": [[147, 161], ["torch.Module.__init__", "block.conv_layer", "block.conv_layer", "block.conv_layer", "block.conv_layer", "block.conv_layer", "block.conv_layer", "block.conv_layer", "block.activation", "block.conv_layer", "block.ESA"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.activation", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "distillation_rate", "=", "0.25", ")", ":", "\n", "        ", "super", "(", "RFDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dc", "=", "self", ".", "distilled_channels", "=", "in_channels", "//", "2", "\n", "self", ".", "rc", "=", "self", ".", "remaining_channels", "=", "in_channels", "\n", "self", ".", "c1_d", "=", "conv_layer", "(", "in_channels", ",", "self", ".", "dc", ",", "1", ")", "\n", "self", ".", "c1_r", "=", "conv_layer", "(", "in_channels", ",", "self", ".", "rc", ",", "3", ")", "\n", "self", ".", "c2_d", "=", "conv_layer", "(", "self", ".", "remaining_channels", ",", "self", ".", "dc", ",", "1", ")", "\n", "self", ".", "c2_r", "=", "conv_layer", "(", "self", ".", "remaining_channels", ",", "self", ".", "rc", ",", "3", ")", "\n", "self", ".", "c3_d", "=", "conv_layer", "(", "self", ".", "remaining_channels", ",", "self", ".", "dc", ",", "1", ")", "\n", "self", ".", "c3_r", "=", "conv_layer", "(", "self", ".", "remaining_channels", ",", "self", ".", "rc", ",", "3", ")", "\n", "self", ".", "c4", "=", "conv_layer", "(", "self", ".", "remaining_channels", ",", "self", ".", "dc", ",", "3", ")", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "self", ".", "c5", "=", "conv_layer", "(", "self", ".", "dc", "*", "4", ",", "in_channels", ",", "1", ")", "\n", "self", ".", "esa", "=", "ESA", "(", "in_channels", ",", "nn", ".", "Conv2d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.RFDB.forward": [[162, 181], ["block.RFDB.act", "block.RFDB.c1_r", "block.RFDB.act", "block.RFDB.act", "block.RFDB.c2_r", "block.RFDB.act", "block.RFDB.act", "block.RFDB.c3_r", "block.RFDB.act", "block.RFDB.act", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "block.RFDB.esa", "block.RFDB.c1_d", "block.RFDB.c2_d", "block.RFDB.c3_d", "block.RFDB.c4", "block.RFDB.c5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "distilled_c1", "=", "self", ".", "act", "(", "self", ".", "c1_d", "(", "input", ")", ")", "\n", "r_c1", "=", "(", "self", ".", "c1_r", "(", "input", ")", ")", "\n", "r_c1", "=", "self", ".", "act", "(", "r_c1", "+", "input", ")", "\n", "\n", "distilled_c2", "=", "self", ".", "act", "(", "self", ".", "c2_d", "(", "r_c1", ")", ")", "\n", "r_c2", "=", "(", "self", ".", "c2_r", "(", "r_c1", ")", ")", "\n", "r_c2", "=", "self", ".", "act", "(", "r_c2", "+", "r_c1", ")", "\n", "\n", "distilled_c3", "=", "self", ".", "act", "(", "self", ".", "c3_d", "(", "r_c2", ")", ")", "\n", "r_c3", "=", "(", "self", ".", "c3_r", "(", "r_c2", ")", ")", "\n", "r_c3", "=", "self", ".", "act", "(", "r_c3", "+", "r_c2", ")", "\n", "\n", "r_c4", "=", "self", ".", "act", "(", "self", ".", "c4", "(", "r_c3", ")", ")", "\n", "\n", "out", "=", "torch", ".", "cat", "(", "[", "distilled_c1", ",", "distilled_c2", ",", "distilled_c3", ",", "r_c4", "]", ",", "dim", "=", "1", ")", "\n", "out_fused", "=", "self", ".", "esa", "(", "self", ".", "c5", "(", "out", ")", ")", "\n", "\n", "return", "out_fused", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer": [[7, 11], ["torch.Conv2d", "int"], "function", ["None"], ["def", "conv_layer", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ")", ":", "\n", "    ", "padding", "=", "int", "(", "(", "kernel_size", "-", "1", ")", "/", "2", ")", "*", "dilation", "\n", "return", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "True", ",", "dilation", "=", "dilation", ",", "\n", "groups", "=", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm": [[13, 22], ["norm_type.lower.lower", "torch.BatchNorm2d", "torch.InstanceNorm2d", "NotImplementedError"], "function", ["None"], ["", "def", "norm", "(", "norm_type", ",", "nc", ")", ":", "\n", "    ", "norm_type", "=", "norm_type", ".", "lower", "(", ")", "\n", "if", "norm_type", "==", "'batch'", ":", "\n", "        ", "layer", "=", "nn", ".", "BatchNorm2d", "(", "nc", ",", "affine", "=", "True", ")", "\n", "", "elif", "norm_type", "==", "'instance'", ":", "\n", "        ", "layer", "=", "nn", ".", "InstanceNorm2d", "(", "nc", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'normalization layer [{:s}] is not found'", ".", "format", "(", "norm_type", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad": [[24, 35], ["pad_type.lower.lower", "torch.ReflectionPad2d", "torch.ReplicationPad2d", "NotImplementedError"], "function", ["None"], ["", "def", "pad", "(", "pad_type", ",", "padding", ")", ":", "\n", "    ", "pad_type", "=", "pad_type", ".", "lower", "(", ")", "\n", "if", "padding", "==", "0", ":", "\n", "        ", "return", "None", "\n", "", "if", "pad_type", "==", "'reflect'", ":", "\n", "        ", "layer", "=", "nn", ".", "ReflectionPad2d", "(", "padding", ")", "\n", "", "elif", "pad_type", "==", "'replicate'", ":", "\n", "        ", "layer", "=", "nn", ".", "ReplicationPad2d", "(", "padding", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'padding layer [{:s}] is not implemented'", ".", "format", "(", "pad_type", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.get_valid_padding": [[37, 41], ["None"], "function", ["None"], ["", "def", "get_valid_padding", "(", "kernel_size", ",", "dilation", ")", ":", "\n", "    ", "kernel_size", "=", "kernel_size", "+", "(", "kernel_size", "-", "1", ")", "*", "(", "dilation", "-", "1", ")", "\n", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", "\n", "return", "padding", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_block": [[43, 54], ["block.get_valid_padding", "torch.Conv2d", "block.sequential", "block.pad", "block.activation", "block.norm"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.get_valid_padding", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.sequential", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.activation", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm"], ["", "def", "conv_block", "(", "in_nc", ",", "out_nc", ",", "kernel_size", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "True", ",", "\n", "pad_type", "=", "'zero'", ",", "norm_type", "=", "None", ",", "act_type", "=", "'relu'", ")", ":", "\n", "    ", "padding", "=", "get_valid_padding", "(", "kernel_size", ",", "dilation", ")", "\n", "p", "=", "pad", "(", "pad_type", ",", "padding", ")", "if", "pad_type", "and", "pad_type", "!=", "'zero'", "else", "None", "\n", "padding", "=", "padding", "if", "pad_type", "==", "'zero'", "else", "0", "\n", "\n", "c", "=", "nn", ".", "Conv2d", "(", "in_nc", ",", "out_nc", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "bias", "=", "bias", ",", "groups", "=", "groups", ")", "\n", "a", "=", "activation", "(", "act_type", ")", "if", "act_type", "else", "None", "\n", "n", "=", "norm", "(", "norm_type", ",", "out_nc", ")", "if", "norm_type", "else", "None", "\n", "return", "sequential", "(", "p", ",", "c", ",", "n", ",", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.activation": [[56, 67], ["act_type.lower.lower", "torch.ReLU", "torch.LeakyReLU", "torch.PReLU", "NotImplementedError"], "function", ["None"], ["", "def", "activation", "(", "act_type", ",", "inplace", "=", "True", ",", "neg_slope", "=", "0.05", ",", "n_prelu", "=", "1", ")", ":", "\n", "    ", "act_type", "=", "act_type", ".", "lower", "(", ")", "\n", "if", "act_type", "==", "'relu'", ":", "\n", "        ", "layer", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "", "elif", "act_type", "==", "'lrelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "LeakyReLU", "(", "neg_slope", ",", "inplace", ")", "\n", "", "elif", "act_type", "==", "'prelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "PReLU", "(", "num_parameters", "=", "n_prelu", ",", "init", "=", "neg_slope", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'activation layer [{:s}] is not found'", ".", "format", "(", "act_type", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.mean_channels": [[78, 82], ["torch.sum().sum", "torch.dim", "torch.sum", "torch.size", "torch.size", "torch.F"], "function", ["None"], ["", "", "def", "mean_channels", "(", "F", ")", ":", "\n", "    ", "assert", "(", "F", ".", "dim", "(", ")", "==", "4", ")", "\n", "spatial_sum", "=", "F", ".", "sum", "(", "3", ",", "keepdim", "=", "True", ")", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "\n", "return", "spatial_sum", "/", "(", "F", ".", "size", "(", "2", ")", "*", "F", ".", "size", "(", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.stdv_channels": [[83, 88], ["block.mean_channels", "F_variance.pow", "torch.dim", "torch.size", "torch.size"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.mean_channels"], ["", "def", "stdv_channels", "(", "F", ")", ":", "\n", "    ", "assert", "(", "F", ".", "dim", "(", ")", "==", "4", ")", "\n", "F_mean", "=", "mean_channels", "(", "F", ")", "\n", "F_variance", "=", "(", "F", "-", "F_mean", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "3", ",", "keepdim", "=", "True", ")", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "/", "(", "F", ".", "size", "(", "2", ")", "*", "F", ".", "size", "(", "3", ")", ")", "\n", "return", "F_variance", ".", "pow", "(", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.sequential": [[89, 102], ["torch.Sequential", "len", "isinstance", "isinstance", "NotImplementedError", "module.children", "isinstance", "modules.append", "modules.append"], "function", ["None"], ["", "def", "sequential", "(", "*", "args", ")", ":", "\n", "    ", "if", "len", "(", "args", ")", "==", "1", ":", "\n", "        ", "if", "isinstance", "(", "args", "[", "0", "]", ",", "OrderedDict", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'sequential does not support OrderedDict input.'", ")", "\n", "", "return", "args", "[", "0", "]", "\n", "", "modules", "=", "[", "]", "\n", "for", "module", "in", "args", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "Sequential", ")", ":", "\n", "            ", "for", "submodule", "in", "module", ".", "children", "(", ")", ":", "\n", "                ", "modules", ".", "append", "(", "submodule", ")", "\n", "", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "Module", ")", ":", "\n", "            ", "modules", ".", "append", "(", "module", ")", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pixelshuffle_block": [[184, 188], ["block.conv_layer", "torch.PixelShuffle", "block.sequential"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.sequential"], ["", "", "def", "pixelshuffle_block", "(", "in_channels", ",", "out_channels", ",", "upscale_factor", "=", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "    ", "conv", "=", "conv_layer", "(", "in_channels", ",", "out_channels", "*", "(", "upscale_factor", "**", "2", ")", ",", "kernel_size", ",", "stride", ")", "\n", "pixel_shuffle", "=", "nn", ".", "PixelShuffle", "(", "upscale_factor", ")", "\n", "return", "sequential", "(", "conv", ",", "pixel_shuffle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.RFDN.__init__": [[20, 36], ["torch.Module.__init__", "models.conv_layer", "models.RFDB", "models.RFDB", "models.RFDB", "models.RFDB", "models.conv_block", "models.conv_layer", "upsample_block"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_block", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer"], ["    ", "def", "__init__", "(", "self", ",", "in_nc", "=", "1", ",", "nf", "=", "50", ",", "num_modules", "=", "4", ",", "out_nc", "=", "1", ",", "upscale", "=", "4", ")", ":", "\n", "        ", "super", "(", "RFDN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fea_conv", "=", "B", ".", "conv_layer", "(", "in_nc", ",", "nf", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "B1", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "B2", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "B3", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "B4", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "c", "=", "B", ".", "conv_block", "(", "nf", "*", "num_modules", ",", "nf", ",", "kernel_size", "=", "1", ",", "act_type", "=", "'lrelu'", ")", "\n", "\n", "self", ".", "LR_conv", "=", "B", ".", "conv_layer", "(", "nf", ",", "nf", ",", "kernel_size", "=", "3", ")", "\n", "\n", "upsample_block", "=", "B", ".", "pixelshuffle_block", "\n", "self", ".", "upsampler", "=", "upsample_block", "(", "nf", ",", "out_nc", ",", "upscale_factor", "=", "4", ")", "\n", "self", ".", "scale_idx", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.RFDN.forward": [[38, 51], ["RFDN.RFDN.fea_conv", "RFDN.RFDN.B1", "RFDN.RFDN.B2", "RFDN.RFDN.B3", "RFDN.RFDN.B4", "RFDN.RFDN.c", "RFDN.RFDN.upsampler", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "RFDN.RFDN.LR_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out_fea", "=", "self", ".", "fea_conv", "(", "input", ")", "\n", "out_B1", "=", "self", ".", "B1", "(", "out_fea", ")", "\n", "out_B2", "=", "self", ".", "B2", "(", "out_B1", ")", "\n", "out_B3", "=", "self", ".", "B3", "(", "out_B2", ")", "\n", "out_B4", "=", "self", ".", "B4", "(", "out_B3", ")", "\n", "\n", "out_B", "=", "self", ".", "c", "(", "torch", ".", "cat", "(", "[", "out_B1", ",", "out_B2", ",", "out_B3", ",", "out_B4", "]", ",", "dim", "=", "1", ")", ")", "\n", "out_lr", "=", "self", ".", "LR_conv", "(", "out_B", ")", "+", "out_fea", "\n", "\n", "output", "=", "self", ".", "upsampler", "(", "out_lr", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.RFDN.set_scale": [[52, 54], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "scale_idx", ")", ":", "\n", "        ", "self", ".", "scale_idx", "=", "scale_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.RFDN_TT.__init__": [[57, 76], ["torch.Module.__init__", "models.conv_layer", "models.conv_layer", "models.RFDB", "models.RFDB", "models.RFDB", "models.RFDB", "models.conv_block", "models.conv_layer", "upsample_block", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_block", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer"], ["    ", "def", "__init__", "(", "self", ",", "in_nc", "=", "1", ",", "nf", "=", "50", ",", "num_modules", "=", "4", ",", "out_nc", "=", "1", ",", "upscale", "=", "4", ")", ":", "\n", "        ", "super", "(", "RFDN_TT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fea_conv", "=", "B", ".", "conv_layer", "(", "in_nc", ",", "nf", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "fea_conv_tt", "=", "B", ".", "conv_layer", "(", "nf", "+", "81", ",", "nf", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "B1", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "B2", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "B3", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "B4", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "c", "=", "B", ".", "conv_block", "(", "nf", "*", "num_modules", ",", "nf", ",", "kernel_size", "=", "1", ",", "act_type", "=", "'lrelu'", ")", "\n", "\n", "self", ".", "LR_conv", "=", "B", ".", "conv_layer", "(", "nf", ",", "nf", ",", "kernel_size", "=", "3", ")", "\n", "# self.degradation_block = B.degradation_block(64)", "\n", "upsample_block", "=", "B", ".", "pixelshuffle_block", "\n", "self", ".", "upsampler", "=", "upsample_block", "(", "nf", ",", "out_nc", ",", "upscale_factor", "=", "4", ")", "\n", "self", ".", "scale_idx", "=", "0", "\n", "\n", "self", ".", "a", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "b", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.RFDN_TT.forward": [[78, 99], ["RFDN.RFDN_TT.fea_conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "RFDN.RFDN_TT.fea_conv_tt", "RFDN.RFDN_TT.B1", "RFDN.RFDN_TT.B2", "RFDN.RFDN_TT.B3", "RFDN.RFDN_TT.B4", "RFDN.RFDN_TT.c", "RFDN.RFDN_TT.upsampler", "hasattr", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "RFDN.RFDN_TT.LR_conv", "torch.pad", "torch.pad", "torch.pad"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad"], ["", "def", "forward", "(", "self", ",", "input", ",", "input_up", ",", "maps", ",", "weights", ")", ":", "\n", "\n", "#compute weighted maps", "\n", "        ", "if", "hasattr", "(", "self", ",", "'a'", ")", "and", "weights", "is", "not", "None", ":", "\n", "            ", "weights_scaled", "=", "F", ".", "pad", "(", "weights", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", "*", "self", ".", "a", "+", "self", ".", "b", "\n", "maps", "*=", "torch", ".", "sigmoid", "(", "weights_scaled", ")", "\n", "", "out_fea", "=", "self", ".", "fea_conv", "(", "input", ")", "\n", "res", "=", "torch", ".", "cat", "(", "[", "out_fea", ",", "maps", "]", ",", "1", ")", "\n", "out_fea", "=", "self", ".", "fea_conv_tt", "(", "res", ")", "\n", "out_B1", "=", "self", ".", "B1", "(", "out_fea", ")", "\n", "out_B2", "=", "self", ".", "B2", "(", "out_B1", ")", "\n", "out_B3", "=", "self", ".", "B3", "(", "out_B2", ")", "\n", "out_B4", "=", "self", ".", "B4", "(", "out_B3", ")", "\n", "\n", "out_B", "=", "self", ".", "c", "(", "torch", ".", "cat", "(", "[", "out_B1", ",", "out_B2", ",", "out_B3", ",", "out_B4", "]", ",", "dim", "=", "1", ")", ")", "\n", "out_lr", "=", "self", ".", "LR_conv", "(", "out_B", ")", "+", "out_fea", "\n", "\n", "output", "=", "self", ".", "upsampler", "(", "out_lr", ")", "\n", "# dr = self.degradation_block(output)", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.RFDN_TT.set_scale": [[100, 102], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "scale_idx", ")", ":", "\n", "        ", "self", ".", "scale_idx", "=", "scale_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.RFDN_TTL.__init__": [[104, 123], ["torch.Module.__init__", "models.conv_layer", "models.conv_layer", "models.RFDB", "models.RFDB", "models.RFDB", "models.RFDB", "models.conv_block", "models.conv_layer", "upsample_block", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_block", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.conv_layer"], ["    ", "def", "__init__", "(", "self", ",", "in_nc", "=", "1", ",", "nf", "=", "50", ",", "num_modules", "=", "4", ",", "out_nc", "=", "1", ",", "upscale", "=", "4", ")", ":", "\n", "        ", "super", "(", "RFDN_TTL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fea_conv", "=", "B", ".", "conv_layer", "(", "in_nc", ",", "nf", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "fea_conv_tt", "=", "B", ".", "conv_layer", "(", "nf", "+", "81", ",", "nf", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "B1", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "B2", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "B3", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "B4", "=", "B", ".", "RFDB", "(", "in_channels", "=", "nf", ")", "\n", "self", ".", "c", "=", "B", ".", "conv_block", "(", "nf", "*", "num_modules", ",", "nf", ",", "kernel_size", "=", "1", ",", "act_type", "=", "'lrelu'", ")", "\n", "\n", "self", ".", "LR_conv", "=", "B", ".", "conv_layer", "(", "nf", ",", "nf", ",", "kernel_size", "=", "3", ")", "\n", "# self.degradation_block = B.degradation_block(64)", "\n", "upsample_block", "=", "B", ".", "pixelshuffle_block", "\n", "self", ".", "upsampler", "=", "upsample_block", "(", "nf", ",", "out_nc", ",", "upscale_factor", "=", "4", ")", "\n", "self", ".", "scale_idx", "=", "0", "\n", "\n", "self", ".", "a", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "b", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.RFDN_TTL.forward": [[125, 146], ["RFDN.RFDN_TTL.fea_conv", "RFDN.RFDN_TTL.B1", "RFDN.RFDN_TTL.B2", "RFDN.RFDN_TTL.B3", "RFDN.RFDN_TTL.B4", "RFDN.RFDN_TTL.c", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "RFDN.RFDN_TTL.fea_conv_tt", "RFDN.RFDN_TTL.upsampler", "hasattr", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "RFDN.RFDN_TTL.LR_conv", "torch.pad", "torch.pad", "torch.pad"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad"], ["", "def", "forward", "(", "self", ",", "input", ",", "input_up", ",", "maps", ",", "weights", ")", ":", "\n", "\n", "#compute weighted maps", "\n", "        ", "if", "hasattr", "(", "self", ",", "'a'", ")", "and", "weights", "is", "not", "None", ":", "\n", "            ", "weights_scaled", "=", "F", ".", "pad", "(", "weights", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", "*", "self", ".", "a", "+", "self", ".", "b", "\n", "maps", "*=", "torch", ".", "sigmoid", "(", "weights_scaled", ")", "\n", "", "out_fea", "=", "self", ".", "fea_conv", "(", "input", ")", "\n", "out_B1", "=", "self", ".", "B1", "(", "out_fea", ")", "\n", "out_B2", "=", "self", ".", "B2", "(", "out_B1", ")", "\n", "out_B3", "=", "self", ".", "B3", "(", "out_B2", ")", "\n", "out_B4", "=", "self", ".", "B4", "(", "out_B3", ")", "\n", "\n", "out_B", "=", "self", ".", "c", "(", "torch", ".", "cat", "(", "[", "out_B1", ",", "out_B2", ",", "out_B3", ",", "out_B4", "]", ",", "dim", "=", "1", ")", ")", "\n", "res", "=", "torch", ".", "cat", "(", "[", "out_B", ",", "maps", "]", ",", "1", ")", "\n", "out_TT", "=", "self", ".", "fea_conv_tt", "(", "res", ")", "\n", "out_lr", "=", "self", ".", "LR_conv", "(", "out_TT", ")", "+", "out_fea", "\n", "\n", "output", "=", "self", ".", "upsampler", "(", "out_lr", ")", "\n", "# dr = self.degradation_block(output)", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.RFDN_TTL.set_scale": [[147, 149], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "scale_idx", ")", ":", "\n", "        ", "self", ".", "scale_idx", "=", "scale_idx", "", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.make_model_RFDN": [[6, 9], ["RFDN.RFDN"], "function", ["None"], ["def", "make_model_RFDN", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "model", "=", "RFDN", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.make_model_RFDN_TT": [[10, 13], ["RFDN.RFDN_TT"], "function", ["None"], ["", "def", "make_model_RFDN_TT", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "model", "=", "RFDN_TT", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RFDN.make_model_RFDN_TTL": [[14, 17], ["RFDN.RFDN_TTL"], "function", ["None"], ["", "def", "make_model_RFDN_TTL", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "model", "=", "RFDN_TTL", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.__init__": [[19, 24], ["super().__init__", "torch.device", "torch.device", "torch.device", "torch.device"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["def", "__init__", "(", "self", ",", "patch_size", ":", "int", "=", "3", ",", "stride", ":", "int", "=", "1", ")", ":", "\n", "        ", "super", "(", "Swapper", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.__call__": [[25, 69], ["len", "collections.OrderedDict", "collections.OrderedDict", "range", "swapper.Swapper.swap", "map_ref.keys", "swapper.Swapper.match", "weights.to().numpy.to().numpy.to().numpy", "collections.OrderedDict.to().numpy", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "weights.to().numpy.to().numpy.to", "collections.OrderedDict.to", "str"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.swap", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.match", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to"], ["", "def", "__call__", "(", "self", ",", "map_in", ":", "OrderedDict", ",", "map_ref", ":", "OrderedDict", ",", "map_ref_blur", ":", "OrderedDict", ",", "is_weight", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ---\n        map_in : OrderedDict\n        map_ref : OrderedDict\n        map_ref_blur : OrderedDict\n        is_weight : bool, optional\n            whethere weights is output.\n\n        Returns\n        ---\n        maps : dict of np.array\n            swapped feature maps for each layer.\n        weights : np.array\n            weight maps for each layer if `is_weight`'s True, otherwise `None`.\n        max_idx : np.array\n            index maps of the most similar patch for each position and layer.\n        \"\"\"", "\n", "N", "=", "len", "(", "map_ref", ".", "keys", "(", ")", ")", "\n", "max_idx", "=", "OrderedDict", "(", ")", "\n", "weights", "=", "OrderedDict", "(", ")", "\n", "wgts", ",", "ids", ",", "Slice", ",", "identity", "=", "None", ",", "None", ",", "None", ",", "None", "\n", "\n", "for", "n", "in", "range", "(", "N", ")", ":", "\n", "            ", "max_idx", ",", "max_val", ",", "weights", "=", "self", ".", "match", "(", "map_in", ",", "map_ref_blur", "[", "str", "(", "n", "+", "1", ")", "]", ",", "is_weight", ")", "\n", "if", "wgts", "is", "None", ":", "\n", "                ", "wgts", "=", "weights", "\n", "ids", "=", "max_idx", "\n", "Slice", "=", "torch", ".", "ones", "(", "wgts", ".", "shape", ")", "\n", "identity", "=", "torch", ".", "ones", "(", "wgts", ".", "shape", ")", "\n", "", "else", ":", "\n", "                ", "index", "=", "weights", ">", "wgts", "\n", "# print('type ',type(index))", "\n", "wgts", "[", "index", "]", "=", "weights", "[", "index", "]", "\n", "ids", "[", "index", "]", "=", "max_idx", "[", "index", "]", "\n", "Slice", "[", "index", "]", "=", "(", "n", "+", "1", ")", "*", "identity", "[", "index", "]", "\n", "", "", "maps", "=", "self", ".", "swap", "(", "map_in", ",", "map_ref", ",", "ids", ",", "Slice", ")", "\n", "\n", "if", "is_weight", ":", "\n", "            ", "weights", "=", "weights", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", "\n", "\n", "", "return", "maps", ",", "weights", ",", "max_idx", ".", "to", "(", "'cpu'", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.match": [[70, 127], ["map_in.squeeze", "swapper.Swapper.sample_patches", "map_ref_blur.squeeze", "swapper.Swapper.sample_patches", "int", "range", "swapper.Swapper.norm", "swapper.Swapper.norm", "torch.conv2d", "torch.conv2d", "torch.conv2d.squeeze().max", "swapper.Swapper.compute_weights().reshape", "map_in.squeeze.unsqueeze", "batch.permute", "torch.conv2d.squeeze", "swapper.Swapper.compute_weights"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.sample_patches", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.sample_patches", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.compute_weights"], ["", "def", "match", "(", "self", ",", "map_in", ":", "OrderedDict", ",", "map_ref_blur", ":", "OrderedDict", ",", "is_weight", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Patch matching between content and condition images.\n\n        Parameters\n        ---\n        content : torch.Tensor\n            The VGG feature map of the content image, shape: (C, H, W)\n        patch_condition : torch.Tensor\n            The decomposed patches of the condition image,\n            shape: (C, patch_size, patch_size, n_patches)\n\n        Returns\n        ---\n        max_idx : torch.Tensor\n            The indices of the most similar patches\n        max_val : torch.Tensor\n            The pixel value within max_idx.\n        \"\"\"", "\n", "\n", "content", "=", "map_in", ".", "squeeze", "(", "0", ")", "\n", "patch_content", "=", "self", ".", "sample_patches", "(", "content", ")", "# patch decomposition", "\n", "patch_content", "/=", "patch_content", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "(", "0", ",", "1", ",", "2", ")", ")", "+", "1e-5", "# normalize content and condition", "\n", "\n", "\n", "condition", "=", "map_ref_blur", ".", "squeeze", "(", "0", ")", "\n", "patch_condition", "=", "self", ".", "sample_patches", "(", "condition", ")", "# patch decomposition", "\n", "patch_condition", "/=", "patch_condition", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "(", "0", ",", "1", ",", "2", ")", ")", "+", "1e-5", "# normalize content and condition", "\n", "\n", "_", ",", "H", ",", "W", "=", "content", ".", "shape", "\n", "batch_size", "=", "int", "(", "1024.", "**", "2", "*", "512", "/", "(", "H", "*", "W", ")", ")", "#Not necessary, we can specify any big nummber", "\n", "n_patches", "=", "patch_condition", ".", "shape", "[", "-", "1", "]", "\n", "\n", "max_idx", ",", "max_val", "=", "None", ",", "None", "\n", "for", "idx", "in", "range", "(", "0", ",", "n_patches", ",", "batch_size", ")", ":", "\n", "            ", "batch", "=", "patch_condition", "[", "...", ",", "idx", ":", "idx", "+", "batch_size", "]", "\n", "corr", "=", "F", ".", "conv2d", "(", "content", ".", "unsqueeze", "(", "0", ")", ",", "\n", "batch", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", ",", "\n", "stride", "=", "self", ".", "stride", ")", "\n", "\n", "max_val_tmp", ",", "max_idx_tmp", "=", "corr", ".", "squeeze", "(", "0", ")", ".", "max", "(", "dim", "=", "0", ")", "\n", "\n", "if", "max_idx", "is", "None", ":", "\n", "                ", "max_idx", ",", "max_val", "=", "max_idx_tmp", ",", "max_val_tmp", "\n", "", "else", ":", "\n", "                ", "indices", "=", "max_val_tmp", ">", "max_val", "\n", "max_val", "[", "indices", "]", "=", "max_val_tmp", "[", "indices", "]", "\n", "max_idx", "[", "indices", "]", "=", "max_idx_tmp", "[", "indices", "]", "+", "idx", "\n", "\n", "\n", "", "", "if", "is_weight", ":", "# weight calculation", "\n", "            ", "weight", "=", "self", ".", "compute_weights", "(", "\n", "patch_content", ",", "patch_condition", ")", ".", "reshape", "(", "max_idx", ".", "shape", ")", "\n", "", "else", ":", "\n", "            ", "weight", "=", "None", "\n", "\n", "", "return", "max_idx", ",", "max_val", ",", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.sample_patches": [[128, 158], ["inputs.unfold().unfold().reshape().permute", "inputs.unfold().unfold().reshape", "inputs.unfold().unfold", "inputs.unfold"], "methods", ["None"], ["", "def", "sample_patches", "(", "self", ",", "inputs", ":", "torch", ".", "Tensor", ",", "patch_size", ":", "int", "=", "None", ",", "stride", ":", "int", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Patch sampler for feature maps.\n\n        Parameters\n        ---\n        inputs : torch.Tensor\n            the input feature maps, shape: (c, h, w).\n        patch_size : int, optional\n            the spatial size of sampled patches\n        stride : int, optional\n            the stride of sampling.\n\n        Returns\n        ---\n        patches : torch.Tensor\n            extracted patches, shape: (c, patch_size, patch_size, n_patches).\n        \"\"\"", "\n", "\n", "if", "patch_size", "is", "None", ":", "\n", "            ", "patch_size", "=", "self", ".", "patch_size", "\n", "", "if", "stride", "is", "None", ":", "\n", "            ", "stride", "=", "self", ".", "stride", "\n", "# print(inputs.shape)", "\n", "", "c", ",", "h", ",", "w", "=", "inputs", ".", "shape", "\n", "patches", "=", "inputs", ".", "unfold", "(", "1", ",", "patch_size", ",", "stride", ")", ".", "unfold", "(", "2", ",", "patch_size", ",", "stride", ")", ".", "reshape", "(", "c", ",", "-", "1", ",", "patch_size", ",", "patch_size", ")", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "return", "patches", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.compute_weights": [[159, 189], ["patch_content.reshape", "patch_condition.reshape", "int", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.max", "torch.max", "torch.max", "torch.max", "numpy.sqrt", "patch_content.reshape.transpose", "patch_content.reshape.transpose"], "methods", ["None"], ["", "def", "compute_weights", "(", "self", ",", "\n", "patch_content", ":", "torch", ".", "Tensor", ",", "\n", "patch_condition", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        Compute weights\n\n        Parameters\n        ---\n        patch_content : torch.Tensor\n            The decomposed patches of the content image,\n            shape: (C, patch_size, patch_size, n_patches)\n        patch_condition : torch.Tensor\n            The decomposed patches of the condition image,\n            shape: (C, patch_size, patch_size, n_patches)\n        \"\"\"", "\n", "\n", "# reshape patches to (C * patch_size ** 2, n_patches)", "\n", "content_vec", "=", "patch_content", ".", "reshape", "(", "-", "1", ",", "patch_content", ".", "shape", "[", "-", "1", "]", ")", "\n", "style_vec", "=", "patch_condition", ".", "reshape", "(", "-", "1", ",", "patch_condition", ".", "shape", "[", "-", "1", "]", ")", "\n", "\n", "# compute matmul between content and condition,", "\n", "# output shape is (n_patches_content, n_patches_condition)", "\n", "# print(content_vec.transpose(0, 1).shape, style_vec.shape)", "\n", "N", "=", "int", "(", "np", ".", "sqrt", "(", "content_vec", ".", "transpose", "(", "0", ",", "1", ")", ".", "shape", "[", "0", "]", ")", ")", "\n", "# if N<40:", "\n", "corr", "=", "torch", ".", "matmul", "(", "content_vec", ".", "transpose", "(", "0", ",", "1", ")", ",", "style_vec", ")", "\n", "\n", "# the best match over condition patches", "\n", "weights", ",", "_", "=", "torch", ".", "max", "(", "corr", ",", "dim", "=", "-", "1", ")", "\n", "return", "weights", "\n", "# else:", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.swap": [[197, 238], ["map_in.squeeze", "collections.OrderedDict", "range", "torch.zeros_like().to", "torch.zeros_like().to", "torch.zeros_like().to", "torch.zeros_like().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "swapped_maps.update", "len", "map_ref[].squeeze", "swapper.Swapper.sample_patches", "range", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "map_ref.keys", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros_like().to.cpu().numpy", "torch.zeros_like().to.cpu().numpy", "str", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "str", "torch.zeros_like().to.cpu", "torch.zeros_like().to.cpu", "str", "int"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.sample_patches"], ["", "def", "swap", "(", "self", ",", "\n", "map_in", ":", "OrderedDict", ",", "\n", "map_ref", ":", "OrderedDict", ",", "\n", "max_idx", ":", "torch", ".", "Tensor", ",", "Slice", ")", "->", "dict", ":", "\n", "        ", "\"\"\"\n        Feature swapping\n\n        Parameter\n        ---\n        map_in : namedtuple\n        map_ref : namedtuple\n        max_idx : namedtuple\n        \"\"\"", "\n", "\n", "swapped_maps", "=", "{", "}", "\n", "#         for idx, layer in enumerate(['relu3_1', 'relu2_1', 'relu1_1']):", "\n", "_patch_size", "=", "self", ".", "patch_size", "\n", "_stride", "=", "self", ".", "stride", "\n", "\n", "content", "=", "map_in", ".", "squeeze", "(", "0", ")", "\n", "patches_style", "=", "OrderedDict", "(", ")", "\n", "for", "n", "in", "range", "(", "len", "(", "map_ref", ".", "keys", "(", ")", ")", ")", ":", "\n", "            ", "style", "=", "map_ref", "[", "str", "(", "n", "+", "1", ")", "]", ".", "squeeze", "(", ")", "\n", "patches_style", "[", "str", "(", "n", "+", "1", ")", "]", "=", "self", ".", "sample_patches", "(", "style", ",", "_patch_size", ",", "_stride", ")", "\n", "\n", "", "target_map", "=", "torch", ".", "zeros_like", "(", "content", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "count_map", "=", "torch", ".", "zeros", "(", "target_map", ".", "shape", "[", "1", ":", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "max_idx", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "max_idx", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "_i", ",", "_j", "=", "i", ",", "j", "\n", "selected_patch", "=", "patches_style", "[", "str", "(", "int", "(", "Slice", "[", "_i", ",", "_j", "]", ")", ")", "]", "\n", "target_map", "[", ":", ",", "_i", ":", "_i", "+", "_patch_size", ",", "_j", ":", "_j", "+", "_patch_size", "]", "+=", "selected_patch", "[", "...", ",", "max_idx", "[", "i", ",", "j", "]", "]", "\n", "count_map", "[", "_i", ":", "_i", "+", "_patch_size", ",", "_j", ":", "_j", "+", "_patch_size", "]", "+=", "1", "\n", "", "", "target_map", "/=", "count_map", "\n", "\n", "assert", "not", "torch", ".", "isnan", "(", "target_map", ")", ".", "any", "(", ")", "\n", "\n", "swapped_maps", ".", "update", "(", "{", "'tex1'", ":", "target_map", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "}", ")", "\n", "\n", "return", "swapped_maps", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to": [[239, 242], ["None"], "methods", ["None"], ["", "def", "to", "(", "self", ",", "device", ")", ":", "\n", "        ", "self", ".", "device", "=", "device", "\n", "return", "self", "", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.Upsampler.__init__": [[25, 43], ["torch.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "math.log", "conv", "torch.PixelShuffle", "m.append", "m.append", "conv", "torch.PixelShuffle", "m.append", "m.append", "torch.BatchNorm2d", "act", "torch.BatchNorm2d", "act"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "scale", ",", "n_feat", ",", "bn", "=", "False", ",", "act", "=", "False", ",", "bias", "=", "True", ")", ":", "\n", "\n", "        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# Is scale = 2^n?", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "4", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "act", "(", ")", ")", "\n", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "9", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "act", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "super", "(", "Upsampler", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.CALayer.__init__": [[46, 56], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "reduction", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.CALayer.forward": [[58, 62], ["RCAN.CALayer.avg_pool", "RCAN.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.RCAB.__init__": [[65, 78], ["torch.ReLU", "torch.Module.__init__", "range", "modules_body.append", "torch.Sequential", "modules_body.append", "RCAN.CALayer", "conv", "modules_body.append", "modules_body.append", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "RCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "modules_body", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "modules_body", ".", "append", "(", "act", ")", "\n", "", "modules_body", ".", "append", "(", "CALayer", "(", "n_feat", ",", "reduction", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.RCAB.forward": [[79, 84], ["RCAN.RCAB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "#res = self.body(x).mul(self.res_scale)", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.ResidualGroup.__init__": [[87, 96], ["torch.Module.__init__", "modules_body.append", "torch.Sequential", "RCAN.RCAB", "conv", "range", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "res_scale", ",", "n_resblocks", ")", ":", "\n", "        ", "super", "(", "ResidualGroup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "\n", "RCAB", "(", "\n", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", "for", "_", "in", "range", "(", "n_resblocks", ")", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.ResidualGroup.forward": [[97, 101], ["RCAN.ResidualGroup.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.RCAN.__init__": [[104, 134], ["torch.Module.__init__", "torch.ReLU", "modules_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "RCAN.ResidualGroup", "conv", "RCAN.Upsampler", "conv", "range"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "default_conv", ")", ":", "\n", "        ", "super", "(", "RCAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "n_resgroups", "=", "args", ".", "n_resgroups", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "reduction", "=", "args", ".", "reduction", "\n", "scale", "=", "4", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# define head module", "\n", "modules_head", "=", "[", "conv", "(", "1", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "modules_body", "=", "[", "\n", "ResidualGroup", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "reduction", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", ",", "n_resblocks", "=", "n_resblocks", ")", "for", "_", "in", "range", "(", "n_resgroups", ")", "]", "\n", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "modules_tail", "=", "[", "\n", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "1", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "modules_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "modules_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.RCAN.forward": [[135, 145], ["RCAN.RCAN.head", "RCAN.RCAN.body", "RCAN.RCAN.tail"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.prepare": [[6, 13], ["torch.device", "tensor.half.to", "RCAN.prepare._prepare"], "function", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to"], ["def", "prepare", "(", "self", ",", "l", ",", "volatile", "=", "False", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "self", ".", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "def", "_prepare", "(", "tensor", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "_l", ")", "for", "_l", "in", "l", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.default_conv": [[14, 18], ["torch.Conv2d"], "function", ["None"], ["", "def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.RCAN.make_model": [[20, 22], ["RCAN.RCAN"], "function", ["None"], ["", "def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "RCAN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.__init__.init_weights": [[18, 40], ["net.apply", "hasattr", "torch.normal_", "hasattr", "torch.constant_", "torch.normal_", "torch.constant_", "torch.xavier_normal_", "torch.kaiming_normal_", "torch.orthogonal_", "NotImplementedError"], "function", ["None"], ["def", "init_weights", "(", "net", ",", "init_type", "=", "'normal'", ",", "init_gain", "=", "0.02", ")", ":", "\n", "    ", "def", "init_func", "(", "m", ")", ":", "\n", "        ", "name", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "m", ",", "'weight'", ")", "and", "(", "'Conv'", "in", "name", "or", "'Linear'", "in", "name", ")", ":", "\n", "            ", "if", "init_type", "==", "'normal'", ":", "\n", "                ", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "0.0", ",", "init_gain", ")", "\n", "", "elif", "init_type", "==", "'xavier'", ":", "\n", "                ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "init_gain", ")", "\n", "", "elif", "init_type", "==", "'kaiming'", ":", "\n", "                ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ".", "data", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "", "elif", "init_type", "==", "'orthogonal'", ":", "\n", "                ", "init", ".", "orthogonal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "init_gain", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", "\n", "f'initialization method [{init_type}] is not implemented'", ")", "\n", "", "if", "hasattr", "(", "m", ",", "'bias'", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "", "", "elif", "'BatchNorm2d'", "in", "name", ":", "\n", "            ", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "1.0", ",", "init_gain", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n", "", "", "net", ".", "apply", "(", "init_func", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.srcnn.SRCNN_TextureTransfer.__init__": [[47, 69], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.init_weights", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.__init__.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "ngf", "=", "64", ",", "use_weights", "=", "False", ")", ":", "\n", "        ", "super", "(", "SRCNN_TextureTransfer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "ngf", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "(", "ngf", "//", "2", ")", "+", "81", ",", "ngf", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "nn", ".", "PixelShuffle", "(", "2", ")", "\n", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "nn", ".", "PixelShuffle", "(", "2", ")", "\n", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", "//", "2", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "\n", ")", "\n", "models", ".", "init_weights", "(", "self", ",", "init_type", "=", "'normal'", ",", "init_gain", "=", "0.02", ")", "\n", "if", "use_weights", ":", "\n", "            ", "self", ".", "a", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "b", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "", "def", "forward", "(", "self", ",", "x", ",", "x_up", ",", "maps", ",", "weights", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.srcnn.SRCNN_TextureTransfer.forward": [[69, 84], ["srcnn.SRCNN_TextureTransfer.conv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "srcnn.SRCNN_TextureTransfer.conv2", "srcnn.SRCNN_TextureTransfer.conv3", "srcnn.SRCNN_TextureTransfer.conv4", "hasattr", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "srcnn.SRCNN_TextureTransfer.conv5", "torch.pad", "torch.pad", "torch.pad"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "x_up", ",", "maps", ",", "weights", "=", "None", ")", ":", "\n", "# compute weighted maps", "\n", "        ", "if", "hasattr", "(", "self", ",", "'a'", ")", "and", "weights", "is", "not", "None", ":", "\n", "            ", "weights_scaled", "=", "F", ".", "pad", "(", "weights", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", "*", "self", ".", "a", "+", "self", ".", "b", "\n", "maps", "*=", "torch", ".", "sigmoid", "(", "weights_scaled", ")", "\n", "\n", "", "h", "=", "self", ".", "conv1", "(", "x", ")", "\n", "h", "=", "torch", ".", "cat", "(", "[", "h", ",", "maps", "]", ",", "1", ")", "\n", "h", "=", "self", ".", "conv2", "(", "h", ")", "\n", "h", "=", "self", ".", "conv3", "(", "h", ")", "\n", "# h = torch.cat([h, maps], 1)", "\n", "h", "=", "self", ".", "conv4", "(", "h", ")", "\n", "h", "=", "self", ".", "conv5", "(", "h", ")", "+", "x_up", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.srcnn.SRCNN_basic.__init__": [[86, 95], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.init_weights", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.__init__.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "ngf", "=", "64", ")", ":", "\n", "        ", "super", "(", "SRCNN_basic", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "ngf", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", "//", "2", ",", "ngf", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", "//", "2", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ")", "\n", "models", ".", "init_weights", "(", "self", ",", "init_type", "=", "'normal'", ",", "init_gain", "=", "0.02", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.srcnn.SRCNN_basic.forward": [[96, 104], ["srcnn.SRCNN_basic.conv1", "srcnn.SRCNN_basic.conv2", "srcnn.SRCNN_basic.conv3", "srcnn.SRCNN_basic.conv4", "srcnn.SRCNN_basic.conv5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "h", "=", "self", ".", "conv1", "(", "x", ")", "\n", "h", "=", "self", ".", "conv2", "(", "h", ")", "\n", "h", "=", "self", ".", "conv3", "(", "h", ")", "\n", "h", "=", "self", ".", "conv4", "(", "h", ")", "\n", "h", "=", "self", ".", "conv5", "(", "h", ")", "+", "x", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.srcnn.SRCNN_TextureTransfer1.__init__": [[107, 132], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.init_weights", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.__init__.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "ngf", "=", "64", ",", "use_weights", "=", "False", ")", ":", "\n", "        ", "super", "(", "SRCNN_TextureTransfer1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "ngf", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "\n", ")", "\n", "self", ".", "upsampler", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "217", ",", "217", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "nn", ".", "PixelShuffle", "(", "2", ")", "\n", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "(", "ngf", "//", "2", ")", "+", "217", ",", "ngf", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "nn", ".", "PixelShuffle", "(", "2", ")", "\n", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "nn", ".", "PixelShuffle", "(", "2", ")", "\n", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", ",", "ngf", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "ngf", "//", "2", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "True", ")", ",", "\n", ")", "\n", "models", ".", "init_weights", "(", "self", ",", "init_type", "=", "'normal'", ",", "init_gain", "=", "0.02", ")", "\n", "if", "use_weights", ":", "\n", "            ", "self", ".", "a", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "b", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "", "", "def", "forward", "(", "self", ",", "x", ",", "x_up", ",", "maps", ",", "weights", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.srcnn.SRCNN_TextureTransfer1.forward": [[132, 148], ["srcnn.SRCNN_TextureTransfer1.conv1", "srcnn.SRCNN_TextureTransfer1.upsampler", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "srcnn.SRCNN_TextureTransfer1.conv2", "srcnn.SRCNN_TextureTransfer1.conv3", "srcnn.SRCNN_TextureTransfer1.conv4", "hasattr", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "srcnn.SRCNN_TextureTransfer1.conv5", "torch.pad", "torch.pad", "torch.pad"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "x_up", ",", "maps", ",", "weights", "=", "None", ")", ":", "\n", "# compute weighted maps", "\n", "        ", "if", "hasattr", "(", "self", ",", "'a'", ")", "and", "weights", "is", "not", "None", ":", "\n", "            ", "weights_scaled", "=", "F", ".", "pad", "(", "weights", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", "*", "self", ".", "a", "+", "self", ".", "b", "\n", "maps", "*=", "torch", ".", "sigmoid", "(", "weights_scaled", ")", "\n", "\n", "", "h", "=", "self", ".", "conv1", "(", "x", ")", "\n", "mp", "=", "self", ".", "upsampler", "(", "maps", ")", "\n", "h", "=", "torch", ".", "cat", "(", "[", "h", ",", "mp", "]", ",", "1", ")", "\n", "h", "=", "self", ".", "conv2", "(", "h", ")", "\n", "h", "=", "self", ".", "conv3", "(", "h", ")", "\n", "# h = torch.cat([h, maps], 1)", "\n", "h", "=", "self", ".", "conv4", "(", "h", ")", "\n", "h", "=", "self", ".", "conv5", "(", "h", ")", "+", "x_up", "\n", "\n", "return", "h", "", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.perceptual_loss.PerceptualLoss.__init__": [[22, 33], ["torch.Module.__init__", "models.VGG"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["def", "__init__", "(", "self", ",", "\n", "model_type", ":", "str", "=", "'vgg19'", ",", "\n", "target_layer", ":", "str", "=", "'relu5_1'", ",", "\n", "norm_type", ":", "str", "=", "'fro'", ")", ":", "\n", "        ", "super", "(", "PerceptualLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "norm_type", "in", "[", "'mse'", ",", "'fro'", "]", "\n", "\n", "self", ".", "model", "=", "VGG", "(", "model_type", "=", "model_type", ")", "\n", "self", ".", "target_layer", "=", "target_layer", "\n", "self", ".", "norm_type", "=", "norm_type", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.perceptual_loss.PerceptualLoss.forward": [[34, 49], ["perceptual_loss.PerceptualLoss.model().values", "perceptual_loss.PerceptualLoss.model().values", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "perceptual_loss.PerceptualLoss.model", "perceptual_loss.PerceptualLoss.model", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x_feat", ",", "*", "_", "=", "self", ".", "model", "(", "x", ",", "[", "self", ".", "target_layer", "]", ")", ".", "values", "(", ")", "\n", "sx", "=", "x_feat", ".", "shape", "\n", "x_feat", "=", "x_feat", "/", "(", "sx", "[", "0", "]", "*", "sx", "[", "1", "]", "*", "sx", "[", "2", "]", "*", "sx", "[", "3", "]", ")", "\n", "y_feat", ",", "*", "_", "=", "self", ".", "model", "(", "y", ",", "[", "self", ".", "target_layer", "]", ")", ".", "values", "(", ")", "\n", "sy", "=", "y_feat", ".", "shape", "\n", "y_feat", "=", "y_feat", "/", "(", "sy", "[", "0", "]", "*", "sy", "[", "1", "]", "*", "sy", "[", "2", "]", "*", "sy", "[", "3", "]", ")", "\n", "# frobenius norm in the paper, but mse loss is actually used in", "\n", "# https://github.com/ZZUTK/SRNTT/blob/master/SRNTT/model.py#L376.", "\n", "if", "self", ".", "norm_type", "==", "'mse'", ":", "\n", "            ", "loss", "=", "F", ".", "mse_loss", "(", "x_feat", ",", "y_feat", ")", "\n", "", "elif", "self", ".", "norm_type", "==", "'fro'", ":", "\n", "            ", "loss", "=", "torch", ".", "norm", "(", "x_feat", "-", "y_feat", ",", "p", "=", "'fro'", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.perceptual_loss.TVLoss.__init__": [[51, 54], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "tv_loss_weight", "=", "1", ")", ":", "\n", "        ", "super", "(", "TVLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tv_loss_weight", "=", "tv_loss_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.perceptual_loss.TVLoss.forward": [[55, 64], ["perceptual_loss.TVLoss.tensor_size", "perceptual_loss.TVLoss.tensor_size", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "x.size", "x.size", "x.size", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.GAN_loss.TVLoss.tensor_size", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.GAN_loss.TVLoss.tensor_size"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "h_x", "=", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "w_x", "=", "x", ".", "size", "(", ")", "[", "3", "]", "\n", "count_h", "=", "self", ".", "tensor_size", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", ")", "\n", "count_w", "=", "self", ".", "tensor_size", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", ")", "\n", "h_tv", "=", "torch", ".", "pow", "(", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "-", "x", "[", ":", ",", ":", ",", ":", "h_x", "-", "1", ",", ":", "]", ")", ",", "2", ")", ".", "sum", "(", ")", "\n", "w_tv", "=", "torch", ".", "pow", "(", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "-", "x", "[", ":", ",", ":", ",", ":", ",", ":", "w_x", "-", "1", "]", ")", ",", "2", ")", ".", "sum", "(", ")", "\n", "return", "self", ".", "tv_loss_weight", "*", "2", "*", "(", "h_tv", "/", "count_h", "+", "w_tv", "/", "count_w", ")", "/", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.perceptual_loss.TVLoss.tensor_size": [[65, 68], ["t.size", "t.size", "t.size"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "tensor_size", "(", "t", ")", ":", "\n", "        ", "return", "t", ".", "size", "(", ")", "[", "1", "]", "*", "t", ".", "size", "(", ")", "[", "2", "]", "*", "t", ".", "size", "(", ")", "[", "3", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.SSIM": [[7, 15], ["enumerate", "zip", "c[].squeeze().cpu().numpy", "c[].squeeze().cpu().numpy", "skimage.metrics.structural_similarity", "c[].squeeze().cpu", "c[].squeeze().cpu", "c[].squeeze", "c[].squeeze"], "function", ["None"], ["def", "SSIM", "(", "input", ",", "target", ")", ":", "\n", "    ", "s", "=", "0.0", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "zip", "(", "input", ",", "target", ")", ")", ":", "\n", "        ", "ip", "=", "c", "[", "0", "]", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "op", "=", "c", "[", "1", "]", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "s", "=", "s", "+", "ssim", "(", "ip", ",", "op", ")", "\n", "\n", "", "return", "s", "/", "(", "i", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.metrics.PSNR": [[16, 25], ["enumerate", "zip", "c[].squeeze().cpu().numpy", "c[].squeeze().cpu().numpy", "skimage.measure.compare_psnr", "c[].squeeze().cpu", "c[].squeeze().cpu", "c[].squeeze", "c[].squeeze"], "function", ["None"], ["", "def", "PSNR", "(", "input", ",", "target", ")", ":", "\n", "    ", "s", "=", "0.0", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "zip", "(", "input", ",", "target", ")", ")", ":", "\n", "        ", "ip", "=", "c", "[", "0", "]", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "op", "=", "c", "[", "1", "]", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "# mse = F.mse_loss(c[0], c[1], reduction='mean')", "\n", "# psnr = 10 * log10(1 / mse.item())", "\n", "s", "=", "s", "+", "compare_psnr", "(", "ip", ",", "op", ")", "\n", "", "return", "s", "/", "(", "i", "+", "1", ")", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.GAN_loss.GeneratorLoss.__init__": [[8, 18], ["torch.nn.Module.__init__", "torchvision.models.vgg.vgg19", "torch.nn.Sequential().eval", "torch.nn.Sequential().eval", "torch.nn.Sequential().eval.parameters", "torch.device", "torch.device", "torch.device", "torch.device", "torch.nn.MSELoss", "torch.nn.MSELoss", "GAN_loss.TVLoss", "torch.nn.Sequential", "torch.nn.Sequential", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "list"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "GeneratorLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg", "=", "vgg19", "(", "pretrained", "=", "True", ")", "\n", "loss_network", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "vgg", ".", "features", ")", "[", ":", "23", "]", ")", ".", "eval", "(", ")", "\n", "for", "param", "in", "loss_network", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda:0'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "self", ".", "loss_network", "=", "loss_network", "\n", "self", ".", "mse_loss", "=", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "tv_loss", "=", "TVLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.GAN_loss.GeneratorLoss.forward": [[20, 32], ["out_images.repeat().to", "target_images.repeat().to", "GAN_loss.GeneratorLoss.mse_loss", "GAN_loss.GeneratorLoss.mse_loss", "GAN_loss.GeneratorLoss.tv_loss", "GAN_loss.GeneratorLoss.loss_network", "GAN_loss.GeneratorLoss.loss_network", "out_images.repeat", "target_images.repeat"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to"], ["", "def", "forward", "(", "self", ",", "out_images", ",", "target_images", ")", ":", "\n", "# Adversarial Loss", "\n", "# adversarial_loss = torch.mean(1 - out_labels)", "\n", "# Perception Loss", "\n", "        ", "ip", "=", "out_images", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "out", "=", "target_images", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "perception_loss", "=", "self", ".", "mse_loss", "(", "self", ".", "loss_network", "(", "ip", ")", ",", "self", ".", "loss_network", "(", "out", ")", ")", "\n", "# Image Loss", "\n", "image_loss", "=", "self", ".", "mse_loss", "(", "out_images", ",", "target_images", ")", "\n", "# TV Loss", "\n", "tv_loss", "=", "self", ".", "tv_loss", "(", "out_images", ")", "\n", "return", "image_loss", "+", "0.006", "*", "perception_loss", "+", "2e-8", "*", "tv_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.GAN_loss.TVLoss.__init__": [[35, 38], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "tv_loss_weight", "=", "1", ")", ":", "\n", "        ", "super", "(", "TVLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tv_loss_weight", "=", "tv_loss_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.GAN_loss.TVLoss.forward": [[39, 48], ["GAN_loss.TVLoss.tensor_size", "GAN_loss.TVLoss.tensor_size", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "x.size", "x.size", "x.size", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.GAN_loss.TVLoss.tensor_size", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.GAN_loss.TVLoss.tensor_size"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "h_x", "=", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "w_x", "=", "x", ".", "size", "(", ")", "[", "3", "]", "\n", "count_h", "=", "self", ".", "tensor_size", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", ")", "\n", "count_w", "=", "self", ".", "tensor_size", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", ")", "\n", "h_tv", "=", "torch", ".", "pow", "(", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "-", "x", "[", ":", ",", ":", ",", ":", "h_x", "-", "1", ",", ":", "]", ")", ",", "2", ")", ".", "sum", "(", ")", "\n", "w_tv", "=", "torch", ".", "pow", "(", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "-", "x", "[", ":", ",", ":", ",", ":", ",", ":", "w_x", "-", "1", "]", ")", ",", "2", ")", ".", "sum", "(", ")", "\n", "return", "self", ".", "tv_loss_weight", "*", "2", "*", "(", "h_tv", "/", "count_h", "+", "w_tv", "/", "count_w", ")", "/", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.GAN_loss.TVLoss.tensor_size": [[49, 52], ["t.size", "t.size", "t.size"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "tensor_size", "(", "t", ")", ":", "\n", "        ", "return", "t", ".", "size", "(", ")", "[", "1", "]", "*", "t", ".", "size", "(", ")", "[", "2", "]", "*", "t", ".", "size", "(", ")", "[", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.TextureLoss.__init__": [[25, 33], ["torch.Module.__init__", "texture_loss.TextureLoss.register_buffer", "texture_loss.TextureLoss.register_buffer", "models.VGG().to", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "models.VGG"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.swapper.Swapper.to"], ["def", "__init__", "(", "self", ",", "use_weights", "=", "False", ")", ":", "\n", "        ", "super", "(", "TextureLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_weights", "=", "use_weights", "\n", "\n", "self", ".", "register_buffer", "(", "'a'", ",", "torch", ".", "tensor", "(", "1", ",", "requires_grad", "=", "False", ")", ")", "\n", "self", ".", "register_buffer", "(", "'b'", ",", "torch", ".", "tensor", "(", "0", ",", "requires_grad", "=", "False", ")", ")", "\n", "self", ".", "model", "=", "VGG", "(", "model_type", "=", "'vgg19'", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "TARGET_LAYERS", "=", "[", "'relu1_1'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.TextureLoss.forward": [[34, 65], ["texture_loss.TextureLoss.model", "kymatio.torch.Scattering2D", "kymatio.torch.Scattering2D.cuda", "kymatio.torch.Scattering2D.forward().squeeze", "torch.pad", "torch.pad", "torch.pad", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "texture_loss.TextureLoss.b.detach", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "kymatio.torch.Scattering2D.forward", "texture_loss.TextureLoss.a.detach", "texture_loss.gram_matrix", "texture_loss.gram_matrix"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.pad", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.models.block.norm", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.forward", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gram_matrix", "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gram_matrix"], ["", "def", "forward", "(", "self", ",", "x", ",", "maps", ",", "weights", ",", "vgg", "=", "False", ")", ":", "\n", "\n", "\n", "        ", "_", ",", "_", ",", "M", ",", "N", "=", "x", ".", "shape", "\n", "if", "vgg", ":", "\n", "            ", "out", "=", "self", ".", "model", "(", "x", ",", "self", ".", "TARGET_LAYERS", ")", "\n", "x_feat", "=", "out", "[", "'relu1_1'", "]", "\n", "", "else", ":", "\n", "            ", "scattering", "=", "Scattering2D", "(", "2", ",", "shape", "=", "(", "M", ",", "N", ")", ")", "\n", "scattering", ".", "cuda", "(", ")", "\n", "x_feat", "=", "scattering", ".", "forward", "(", "x", ")", ".", "squeeze", "(", ")", "\n", "\n", "\n", "", "_", ",", "N", ",", "R", ",", "C", "=", "x_feat", ".", "shape", "\n", "\n", "if", "self", ".", "use_weights", ":", "\n", "            ", "weights_scaled", "=", "F", ".", "pad", "(", "weights", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", "\n", "\n", "# compute coefficients", "\n", "coeff", "=", "weights_scaled", "*", "self", ".", "a", ".", "detach", "(", ")", "+", "self", ".", "b", ".", "detach", "(", ")", "\n", "coeff", "=", "torch", ".", "sigmoid", "(", "coeff", ")", "\n", "\n", "# weighting features and swapped maps", "\n", "maps", "=", "maps", "*", "coeff", "\n", "x_feat", "=", "x_feat", "*", "coeff", "\n", "# print(x_feat.shape)", "\n", "\n", "# for small scale", "\n", "", "loss", "=", "torch", ".", "norm", "(", "gram_matrix", "(", "x_feat", ")", "-", "gram_matrix", "(", "maps", ")", ")", "/", "4.", "/", "(", "(", "R", "*", "C", "*", "N", ")", "**", "2", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__": [[88, 91], ["torch.Module.__init__", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss"], "methods", ["home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "gradient_loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss", "=", "nn", ".", "L1Loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gradient_loss.forward": [[92, 103], ["enumerate", "zip", "c[].unsqueeze", "c[].unsqueeze", "canny.canny", "canny.canny", "texture_loss.gradient_loss.loss", "texture_loss.gradient_loss.loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ",", "Y", ")", ":", "\n", "        ", "error1", ",", "error2", "=", "0", ",", "0", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "zip", "(", "X", ",", "Y", ")", ")", ":", "\n", "            ", "ip", "=", "c", "[", "0", "]", ".", "unsqueeze", "(", "0", ")", "\n", "op", "=", "c", "[", "1", "]", ".", "unsqueeze", "(", "0", ")", "\n", "# print(ip.shape,op.shape)", "\n", "grad_true", ",", "orientation_true", "=", "canny", ".", "canny", "(", "ip", ",", "device", ")", "\n", "grad_pred", ",", "orientation_pred", "=", "canny", ".", "canny", "(", "op", ",", "device", ")", "\n", "error1", "+=", "self", ".", "loss", "(", "grad_true", ",", "grad_pred", ")", "\n", "error2", "+=", "self", ".", "loss", "(", "orientation_true", ",", "orientation_pred", ")", "\n", "", "return", "error1", "+", "error2", "", "", "", ""]], "home.repos.pwc.inspect_result.Madhu081096_Reference-based-MRI-superresolution-using-texture-transfer.losses.texture_loss.gram_matrix": [[11, 19], ["features.size", "features.view", "torch.bmm", "torch.bmm", "torch.bmm", "features.view.transpose"], "function", ["None"], ["def", "gram_matrix", "(", "features", ")", ":", "\n", "    ", "N", ",", "C", ",", "H", ",", "W", "=", "features", ".", "size", "(", ")", "\n", "feat_reshaped", "=", "features", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", "\n", "\n", "# Use torch.bmm for batch multiplication of matrices", "\n", "gram", "=", "torch", ".", "bmm", "(", "feat_reshaped", ",", "feat_reshaped", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "\n", "return", "gram", "\n", "\n"]]}