{"home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Compose.__init__": [[29, 31], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Compose.__call__": [[32, 36], ["t"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "img", "=", "t", "(", "img", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.ToTensor.__call__": [[45, 86], ["isinstance", "torch.ByteTensor.view", "torch.ByteTensor.transpose().transpose().contiguous", "isinstance", "torch.from_numpy", "torch.ByteTensor.float().div", "isinstance", "numpy.zeros", "pic.copyto", "torch.from_numpy", "torch.from_numpy", "torch.ByteTensor.float().div", "pic.transpose", "numpy.array", "torch.from_numpy", "torch.ByteTensor", "len", "torch.ByteTensor.transpose().transpose", "torch.ByteTensor.float", "numpy.array", "torch.ByteStorage.from_buffer", "torch.ByteTensor.float", "pic.tobytes", "torch.ByteTensor.transpose"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "pic", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            pic (PIL.Image or numpy.ndarray): Image to be converted to tensor.\n\n        Returns:\n            Tensor: Converted image.\n        \"\"\"", "\n", "if", "isinstance", "(", "pic", ",", "np", ".", "ndarray", ")", ":", "\n", "# handle numpy array", "\n", "            ", "img", "=", "torch", ".", "from_numpy", "(", "pic", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "# backward compatibility", "\n", "return", "img", ".", "float", "(", ")", ".", "div", "(", "255", ")", "\n", "\n", "", "if", "accimage", "is", "not", "None", "and", "isinstance", "(", "pic", ",", "accimage", ".", "Image", ")", ":", "\n", "            ", "nppic", "=", "np", ".", "zeros", "(", "[", "pic", ".", "channels", ",", "pic", ".", "height", ",", "pic", ".", "width", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pic", ".", "copyto", "(", "nppic", ")", "\n", "return", "torch", ".", "from_numpy", "(", "nppic", ")", "\n", "\n", "# handle PIL Image", "\n", "", "if", "pic", ".", "mode", "==", "'I'", ":", "\n", "            ", "img", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "pic", ",", "np", ".", "int32", ",", "copy", "=", "False", ")", ")", "\n", "", "elif", "pic", ".", "mode", "==", "'I;16'", ":", "\n", "            ", "img", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "pic", ",", "np", ".", "int16", ",", "copy", "=", "False", ")", ")", "\n", "", "else", ":", "\n", "            ", "img", "=", "torch", ".", "ByteTensor", "(", "torch", ".", "ByteStorage", ".", "from_buffer", "(", "pic", ".", "tobytes", "(", ")", ")", ")", "\n", "# PIL image mode: 1, L, P, I, F, RGB, YCbCr, RGBA, CMYK", "\n", "", "if", "pic", ".", "mode", "==", "'YCbCr'", ":", "\n", "            ", "nchannel", "=", "3", "\n", "", "elif", "pic", ".", "mode", "==", "'I;16'", ":", "\n", "            ", "nchannel", "=", "1", "\n", "", "else", ":", "\n", "            ", "nchannel", "=", "len", "(", "pic", ".", "mode", ")", "\n", "", "img", "=", "img", ".", "view", "(", "pic", ".", "size", "[", "1", "]", ",", "pic", ".", "size", "[", "0", "]", ",", "nchannel", ")", "\n", "# put it from HWC to CHW format", "\n", "# yikes, this transpose takes 80% of the loading time/CPU", "\n", "img", "=", "img", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "0", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "if", "isinstance", "(", "img", ",", "torch", ".", "ByteTensor", ")", ":", "\n", "            ", "return", "img", ".", "float", "(", ")", ".", "div", "(", "255", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.ToPILImage.__call__": [[95, 127], ["isinstance", "torch.is_tensor", "isinstance", "PIL.Image.fromarray", "pic.mul().byte.mul().byte.mul().byte", "numpy.transpose", "pic.mul().byte.mul().byte.numpy", "pic.mul().byte.mul().byte.mul"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "pic", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            pic (Tensor or numpy.ndarray): Image to be converted to PIL.Image.\n\n        Returns:\n            PIL.Image: Image converted to PIL.Image.\n\n        \"\"\"", "\n", "npimg", "=", "pic", "\n", "mode", "=", "None", "\n", "if", "isinstance", "(", "pic", ",", "torch", ".", "FloatTensor", ")", ":", "\n", "            ", "pic", "=", "pic", ".", "mul", "(", "255", ")", ".", "byte", "(", ")", "\n", "", "if", "torch", ".", "is_tensor", "(", "pic", ")", ":", "\n", "            ", "npimg", "=", "np", ".", "transpose", "(", "pic", ".", "numpy", "(", ")", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "", "assert", "isinstance", "(", "npimg", ",", "np", ".", "ndarray", ")", ",", "'pic should be Tensor or ndarray'", "\n", "if", "npimg", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "            ", "npimg", "=", "npimg", "[", ":", ",", ":", ",", "0", "]", "\n", "\n", "if", "npimg", ".", "dtype", "==", "np", ".", "uint8", ":", "\n", "                ", "mode", "=", "'L'", "\n", "", "if", "npimg", ".", "dtype", "==", "np", ".", "int16", ":", "\n", "                ", "mode", "=", "'I;16'", "\n", "", "if", "npimg", ".", "dtype", "==", "np", ".", "int32", ":", "\n", "                ", "mode", "=", "'I'", "\n", "", "elif", "npimg", ".", "dtype", "==", "np", ".", "float32", ":", "\n", "                ", "mode", "=", "'F'", "\n", "", "", "else", ":", "\n", "            ", "if", "npimg", ".", "dtype", "==", "np", ".", "uint8", ":", "\n", "                ", "mode", "=", "'RGB'", "\n", "", "", "assert", "mode", "is", "not", "None", ",", "'{} is not supported'", ".", "format", "(", "npimg", ".", "dtype", ")", "\n", "return", "Image", ".", "fromarray", "(", "npimg", ",", "mode", "=", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Normalize.__init__": [[142, 145], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Normalize.__call__": [[146, 158], ["zip", "t.sub_().div_", "t.sub_"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            tensor (Tensor): Tensor image of size (C, H, W) to be normalized.\n\n        Returns:\n            Tensor: Normalized image.\n        \"\"\"", "\n", "# TODO: make efficient", "\n", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "tensor", ",", "self", ".", "mean", ",", "self", ".", "std", ")", ":", "\n", "            ", "t", ".", "sub_", "(", "m", ")", ".", "div_", "(", "s", ")", "\n", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Scale.__init__": [[173, 177], ["isinstance", "isinstance", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "assert", "isinstance", "(", "size", ",", "int", ")", "or", "(", "isinstance", "(", "size", ",", "collections", ".", "Iterable", ")", "and", "len", "(", "size", ")", "==", "2", ")", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Scale.__call__": [[178, 200], ["isinstance", "img.resize", "int", "img.resize", "int", "img.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL.Image): Image to be scaled.\n\n        Returns:\n            PIL.Image: Rescaled image.\n        \"\"\"", "\n", "if", "isinstance", "(", "self", ".", "size", ",", "int", ")", ":", "\n", "            ", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "(", "w", "<=", "h", "and", "w", "==", "self", ".", "size", ")", "or", "(", "h", "<=", "w", "and", "h", "==", "self", ".", "size", ")", ":", "\n", "                ", "return", "img", "\n", "", "if", "w", "<", "h", ":", "\n", "                ", "ow", "=", "self", ".", "size", "\n", "oh", "=", "int", "(", "self", ".", "size", "*", "h", "/", "w", ")", "\n", "return", "img", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "self", ".", "interpolation", ")", "\n", "", "else", ":", "\n", "                ", "oh", "=", "self", ".", "size", "\n", "ow", "=", "int", "(", "self", ".", "size", "*", "w", "/", "h", ")", "\n", "return", "img", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "self", ".", "interpolation", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "img", ".", "resize", "(", "self", ".", "size", ",", "self", ".", "interpolation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.CenterCrop.__init__": [[211, 216], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.CenterCrop.__call__": [[217, 230], ["int", "int", "img.crop", "round", "round"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL.Image): Image to be cropped.\n\n        Returns:\n            PIL.Image: Cropped image.\n        \"\"\"", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "x1", "=", "int", "(", "round", "(", "(", "w", "-", "tw", ")", "/", "2.", ")", ")", "\n", "y1", "=", "int", "(", "round", "(", "(", "h", "-", "th", ")", "/", "2.", ")", ")", "\n", "return", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "tw", ",", "y1", "+", "th", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Pad.__init__": [[241, 246], ["isinstance", "isinstance", "isinstance", "isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "padding", ",", "fill", "=", "0", ")", ":", "\n", "        ", "assert", "isinstance", "(", "padding", ",", "numbers", ".", "Number", ")", "\n", "assert", "isinstance", "(", "fill", ",", "numbers", ".", "Number", ")", "or", "isinstance", "(", "fill", ",", "str", ")", "or", "isinstance", "(", "fill", ",", "tuple", ")", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "fill", "=", "fill", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Pad.__call__": [[247, 256], ["PIL.ImageOps.expand"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL.Image): Image to be padded.\n\n        Returns:\n            PIL.Image: Padded image.\n        \"\"\"", "\n", "return", "ImageOps", ".", "expand", "(", "img", ",", "border", "=", "self", ".", "padding", ",", "fill", "=", "self", ".", "fill", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Lambda.__init__": [[265, 268], ["isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "lambd", ")", ":", "\n", "        ", "assert", "isinstance", "(", "lambd", ",", "types", ".", "LambdaType", ")", "\n", "self", ".", "lambd", "=", "lambd", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.Lambda.__call__": [[269, 271], ["transforms.Lambda.lambd"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "self", ".", "lambd", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.RandomCrop.__init__": [[286, 292], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "padding", "=", "0", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "self", ".", "padding", "=", "padding", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.RandomCrop.__call__": [[293, 315], ["random.randint", "random.randint", "PIL.ImageOps.expand.crop", "PIL.ImageOps.expand", "PIL.ImageOps.expand.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL.Image): Image to be cropped.\n\n        Returns:\n            PIL.Image: Cropped image.\n        \"\"\"", "\n", "if", "self", ".", "padding", ">", "0", ":", "\n", "            ", "img", "=", "ImageOps", ".", "expand", "(", "img", ",", "border", "=", "self", ".", "padding", ",", "fill", "=", "0", ")", "\n", "\n", "", "w", ",", "h", "=", "img", ".", "size", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "if", "w", "==", "tw", "and", "h", "==", "th", ":", "\n", "            ", "return", "img", "\n", "\n", "", "if", "w", "<", "tw", "or", "h", "<", "th", ":", "\n", "            ", "return", "img", ".", "resize", "(", "(", "tw", ",", "th", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "\n", "", "x1", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "tw", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "th", ")", "\n", "return", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "tw", ",", "y1", "+", "th", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.RandomHorizontalFlip.__call__": [[320, 331], ["random.random", "img.transpose"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL.Image): Image to be flipped.\n\n        Returns:\n            PIL.Image: Randomly flipped image.\n        \"\"\"", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "return", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.RandomSizedCrop.__init__": [[346, 349], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.transforms.RandomSizedCrop.__call__": [[350, 375], ["range", "transforms.Scale", "transforms.CenterCrop", "CenterCrop.", "random.uniform", "int", "int", "Scale.", "random.uniform", "round", "round", "random.random", "random.randint", "random.randint", "img.crop.crop.crop", "img.crop.crop.resize", "math.sqrt", "math.sqrt"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "for", "attempt", "in", "range", "(", "10", ")", ":", "\n", "            ", "area", "=", "img", ".", "size", "[", "0", "]", "*", "img", ".", "size", "[", "1", "]", "\n", "target_area", "=", "random", ".", "uniform", "(", "0.08", ",", "1.0", ")", "*", "area", "\n", "aspect_ratio", "=", "random", ".", "uniform", "(", "3.", "/", "4", ",", "4.", "/", "3", ")", "\n", "\n", "w", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "*", "aspect_ratio", ")", ")", ")", "\n", "h", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "/", "aspect_ratio", ")", ")", ")", "\n", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "                ", "w", ",", "h", "=", "h", ",", "w", "\n", "\n", "", "if", "w", "<=", "img", ".", "size", "[", "0", "]", "and", "h", "<=", "img", ".", "size", "[", "1", "]", ":", "\n", "                ", "x1", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "size", "[", "0", "]", "-", "w", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "size", "[", "1", "]", "-", "h", ")", "\n", "\n", "img", "=", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "w", ",", "y1", "+", "h", ")", ")", "\n", "assert", "(", "img", ".", "size", "==", "(", "w", ",", "h", ")", ")", "\n", "\n", "return", "img", ".", "resize", "(", "(", "self", ".", "size", ",", "self", ".", "size", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "\n", "# Fallback", "\n", "", "", "scale", "=", "Scale", "(", "self", ".", "size", ",", "interpolation", "=", "self", ".", "interpolation", ")", "\n", "crop", "=", "CenterCrop", "(", "self", ".", "size", ")", "\n", "return", "crop", "(", "scale", "(", "img", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.getGroundTruth": [[23, 36], ["os.path.isfile", "cv2.imread"], "function", ["None"], ["def", "getGroundTruth", "(", "fileNameGT", ")", ":", "\n", "    ", "'''\n    Returns the ground truth maps for roadArea and the validArea \n    :param fileNameGT:\n    '''", "\n", "# Read GT", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "fileNameGT", ")", ",", "'Cannot find: %s'", "%", "fileNameGT", "\n", "full_gt", "=", "cv2", ".", "imread", "(", "fileNameGT", ",", "cv2", ".", "CV_LOAD_IMAGE_UNCHANGED", ")", "\n", "#attention: OpenCV reads in as BGR, so first channel has Blue / road GT", "\n", "roadArea", "=", "full_gt", "[", ":", ",", ":", ",", "0", "]", ">", "0", "\n", "validArea", "=", "full_gt", "[", ":", ",", ":", ",", "2", "]", ">", "0", "\n", "\n", "return", "roadArea", ",", "validArea", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.overlayImageWithConfidence": [[38, 55], ["in_image.copy", "in_image.copy().astype", "in_image.copy"], "function", ["None"], ["", "def", "overlayImageWithConfidence", "(", "in_image", ",", "conf", ",", "vis_channel", "=", "1", ",", "threshold", "=", "0.5", ")", ":", "\n", "    ", "'''\n    \n    :param in_image:\n    :param conf:\n    :param vis_channel:\n    :param threshold:\n    '''", "\n", "if", "in_image", ".", "dtype", "==", "'uint8'", ":", "\n", "        ", "visImage", "=", "in_image", ".", "copy", "(", ")", ".", "astype", "(", "'f4'", ")", "/", "255", "\n", "", "else", ":", "\n", "        ", "visImage", "=", "in_image", ".", "copy", "(", ")", "\n", "\n", "", "channelPart", "=", "visImage", "[", ":", ",", ":", ",", "vis_channel", "]", "*", "(", "conf", ">", "threshold", ")", "-", "conf", "\n", "channelPart", "[", "channelPart", "<", "0", "]", "=", "0", "\n", "visImage", "[", ":", ",", ":", ",", "vis_channel", "]", "=", "visImage", "[", ":", ",", ":", ",", "vis_channel", "]", "*", "(", "conf", "<=", "threshold", ")", "+", "(", "conf", ">", "threshold", ")", "*", "conf", "+", "channelPart", "\n", "return", "visImage", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.evalExp": [[56, 108], ["numpy.concatenate", "list", "sum", "numpy.cumsum", "numpy.flipud", "len", "len", "numpy.any", "numpy.any", "numpy.histogram", "validMap.any", "numpy.histogram", "numpy.cumsum", "numpy.any", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.any", "numpy.any", "numpy.flipud", "len", "len"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.HistogramMaskLoss.histogram", "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.HistogramMaskLoss.histogram"], ["", "def", "evalExp", "(", "gtBin", ",", "cur_prob", ",", "thres", ",", "validMap", "=", "None", ",", "validArea", "=", "None", ")", ":", "\n", "    ", "'''\n    Does the basic pixel based evaluation!\n    :param gtBin:\n    :param cur_prob:\n    :param thres:\n    :param validMap:\n    '''", "\n", "\n", "assert", "len", "(", "cur_prob", ".", "shape", ")", "==", "2", ",", "'Wrong size of input prob map'", "\n", "assert", "len", "(", "gtBin", ".", "shape", ")", "==", "2", ",", "'Wrong size of input prob map'", "\n", "thresInf", "=", "np", ".", "concatenate", "(", "(", "[", "-", "np", ".", "Inf", "]", ",", "thres", ",", "[", "np", ".", "Inf", "]", ")", ")", "\n", "\n", "#Merge validMap with validArea", "\n", "if", "np", ".", "any", "(", "validMap", ")", "!=", "None", ":", "\n", "        ", "if", "np", ".", "any", "(", "validArea", ")", "!=", "None", ":", "\n", "            ", "validMap", "=", "(", "validMap", "==", "True", ")", "&", "(", "validArea", "==", "True", ")", "\n", "", "", "elif", "np", ".", "any", "(", "validArea", ")", "!=", "None", ":", "\n", "        ", "validMap", "=", "validArea", "\n", "\n", "# histogram of false negatives", "\n", "", "if", "np", ".", "any", "(", "validMap", ")", "!=", "None", ":", "\n", "#valid_array = cur_prob[(validMap == False)]", "\n", "        ", "fnArray", "=", "cur_prob", "[", "(", "gtBin", "==", "True", ")", "&", "(", "validMap", "==", "True", ")", "]", "\n", "", "else", ":", "\n", "        ", "fnArray", "=", "cur_prob", "[", "(", "gtBin", "==", "True", ")", "]", "\n", "#f = np.histogram(fnArray,bins=thresInf)", "\n", "", "fnHist", "=", "np", ".", "histogram", "(", "fnArray", ",", "bins", "=", "thresInf", ")", "[", "0", "]", "\n", "fn_list", "=", "list", "(", "fnHist", ")", "\n", "fn_sum", "=", "sum", "(", "fn_list", "[", "2", ":", "]", ")", "\n", "fnCum", "=", "np", ".", "cumsum", "(", "fnHist", ")", "\n", "FN", "=", "fnCum", "[", "0", ":", "0", "+", "len", "(", "thres", ")", "]", ";", "\n", "\n", "if", "validMap", ".", "any", "(", ")", "!=", "None", ":", "\n", "        ", "fpArray", "=", "cur_prob", "[", "(", "gtBin", "==", "False", ")", "&", "(", "validMap", "==", "True", ")", "]", "\n", "", "else", ":", "\n", "        ", "fpArray", "=", "cur_prob", "[", "(", "gtBin", "==", "False", ")", "]", "\n", "\n", "", "fpHist", "=", "np", ".", "histogram", "(", "fpArray", ",", "bins", "=", "thresInf", ")", "[", "0", "]", "\n", "fpCum", "=", "np", ".", "flipud", "(", "np", ".", "cumsum", "(", "np", ".", "flipud", "(", "fpHist", ")", ")", ")", "\n", "FP", "=", "fpCum", "[", "1", ":", "1", "+", "len", "(", "thres", ")", "]", "\n", "\n", "# count labels and protos", "\n", "#posNum = fnArray.shape[0]", "\n", "#negNum = fpArray.shape[0]", "\n", "if", "np", ".", "any", "(", "validMap", ")", "!=", "None", ":", "\n", "        ", "posNum", "=", "np", ".", "sum", "(", "(", "gtBin", "==", "True", ")", "&", "(", "validMap", "==", "True", ")", ")", "\n", "negNum", "=", "np", ".", "sum", "(", "(", "gtBin", "==", "False", ")", "&", "(", "validMap", "==", "True", ")", ")", "\n", "", "else", ":", "\n", "        ", "posNum", "=", "np", ".", "sum", "(", "gtBin", "==", "True", ")", "\n", "negNum", "=", "np", ".", "sum", "(", "gtBin", "==", "False", ")", "\n", "", "return", "FN", ",", "FP", ",", "posNum", ",", "negNum", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.pxEval_maximizeFMeasure": [[109, 190], ["valid.all", "len", "F.argmax", "numpy.zeros", "metric.calcEvalMeasures", "float", "numpy.any"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.calcEvalMeasures"], ["", "def", "pxEval_maximizeFMeasure", "(", "totalPosNum", ",", "totalNegNum", ",", "totalFN", ",", "totalFP", ",", "thresh", "=", "None", ")", ":", "\n", "    ", "'''\n\n    @param totalPosNum: scalar\n    @param totalNegNum: scalar\n    @param totalFN: vector\n    @param totalFP: vector\n    @param thresh: vector\n    '''", "\n", "\n", "#Calc missing stuff", "\n", "totalTP", "=", "totalPosNum", "-", "totalFN", "\n", "totalTN", "=", "totalNegNum", "-", "totalFP", "\n", "\n", "\n", "valid", "=", "(", "totalTP", ">=", "0", ")", "&", "(", "totalTN", ">=", "0", ")", "\n", "assert", "valid", ".", "all", "(", ")", ",", "'Detected invalid elements in eval'", "\n", "\n", "recall", "=", "totalTP", "/", "float", "(", "totalPosNum", ")", "\n", "precision", "=", "totalTP", "/", "(", "totalTP", "+", "totalFP", "+", "1e-10", ")", "\n", "\n", "selector_invalid", "=", "(", "recall", "==", "0", ")", "&", "(", "precision", "==", "0", ")", "\n", "recall", "=", "recall", "[", "~", "selector_invalid", "]", "\n", "precision", "=", "precision", "[", "~", "selector_invalid", "]", "\n", "\n", "maxValidIndex", "=", "len", "(", "precision", ")", "\n", "\n", "#Pascal VOC average precision", "\n", "''''''", "'''\n    AvgPrec = 0\n    counter = 0\n    for i in np.arange(0,1.1,0.1):\n        ind = np.where(recall>=i)\n        if ind == None:\n            continue\n        pmax = max(precision[ind])\n        AvgPrec += pmax\n        counter += 1\n    AvgPrec = AvgPrec/counter\n    '''", "''''''", "\n", "# F-measure operation point", "\n", "beta", "=", "1.0", "\n", "betasq", "=", "beta", "**", "2", "\n", "F", "=", "(", "1", "+", "betasq", ")", "*", "(", "precision", "*", "recall", ")", "/", "(", "(", "betasq", "*", "precision", ")", "+", "recall", "+", "1e-10", ")", "\n", "index", "=", "F", ".", "argmax", "(", ")", "\n", "MaxF", "=", "F", "[", "index", "]", "\n", "\n", "recall_bst", "=", "recall", "[", "index", "]", "\n", "precision_bst", "=", "precision", "[", "index", "]", "\n", "\n", "TP", "=", "totalTP", "[", "index", "]", "\n", "TN", "=", "totalTN", "[", "index", "]", "\n", "FP", "=", "totalFP", "[", "index", "]", "\n", "FN", "=", "totalFN", "[", "index", "]", "\n", "valuesMaxF", "=", "np", ".", "zeros", "(", "(", "1", ",", "4", ")", ",", "'u4'", ")", "\n", "valuesMaxF", "[", "0", ",", "0", "]", "=", "TP", "\n", "valuesMaxF", "[", "0", ",", "1", "]", "=", "TN", "\n", "valuesMaxF", "[", "0", ",", "2", "]", "=", "FP", "\n", "valuesMaxF", "[", "0", ",", "3", "]", "=", "FN", "\n", "\n", "#ACC = (totalTP+ totalTN)/(totalPosNum+totalNegNum)", "\n", "prob_eval_scores", "=", "calcEvalMeasures", "(", "valuesMaxF", ")", "\n", "#prob_eval_scores['AvgPrec'] = AvgPrec", "\n", "prob_eval_scores", "[", "'MaxF'", "]", "=", "MaxF", "\n", "\n", "#prob_eval_scores['totalFN'] = totalFN", "\n", "#prob_eval_scores['totalFP'] = totalFP", "\n", "prob_eval_scores", "[", "'totalPosNum'", "]", "=", "totalPosNum", "\n", "prob_eval_scores", "[", "'totalNegNum'", "]", "=", "totalNegNum", "\n", "\n", "prob_eval_scores", "[", "'precision'", "]", "=", "precision", "\n", "prob_eval_scores", "[", "'recall'", "]", "=", "recall", "\n", "#prob_eval_scores['precision_bst'] = precision_bst", "\n", "#prob_eval_scores['recall_bst'] = recall_bst", "\n", "prob_eval_scores", "[", "'thresh'", "]", "=", "thresh", "\n", "if", "np", ".", "any", "(", "thresh", ")", "!=", "None", ":", "\n", "        ", "BestThresh", "=", "thresh", "[", "index", "]", "\n", "prob_eval_scores", "[", "'BestThresh'", "]", "=", "BestThresh", "\n", "\n", "#return a dict", "\n", "", "return", "prob_eval_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.calcEvalMeasures": [[192, 236], ["evalDict[].astype", "evalDict[].astype", "evalDict[].astype", "evalDict[].astype", "dict"], "function", ["None"], ["", "def", "calcEvalMeasures", "(", "evalDict", ",", "tag", "=", "'_wp'", ")", ":", "\n", "    ", "'''\n    \n    :param evalDict:\n    :param tag:\n    '''", "\n", "# array mode!", "\n", "TP", "=", "evalDict", "[", ":", ",", "0", "]", ".", "astype", "(", "'f4'", ")", "\n", "TN", "=", "evalDict", "[", ":", ",", "1", "]", ".", "astype", "(", "'f4'", ")", "\n", "FP", "=", "evalDict", "[", ":", ",", "2", "]", ".", "astype", "(", "'f4'", ")", "\n", "FN", "=", "evalDict", "[", ":", ",", "3", "]", ".", "astype", "(", "'f4'", ")", "\n", "Q", "=", "TP", "/", "(", "TP", "+", "FP", "+", "FN", ")", "\n", "P", "=", "TP", "+", "FN", "\n", "N", "=", "TN", "+", "FP", "\n", "TPR", "=", "TP", "/", "P", "\n", "FPR", "=", "FP", "/", "N", "\n", "FNR", "=", "FN", "/", "P", "\n", "TNR", "=", "TN", "/", "N", "\n", "A", "=", "(", "TP", "+", "TN", ")", "/", "(", "P", "+", "N", ")", "\n", "precision", "=", "TP", "/", "(", "TP", "+", "FP", ")", "\n", "recall", "=", "TP", "/", "P", "\n", "#numSamples = TP + TN + FP + FN", "\n", "correct_rate", "=", "A", "\n", "\n", "# F-measure", "\n", "#beta = 1.0", "\n", "#betasq = beta**2", "\n", "#F_max = (1 + betasq) * (precision * recall)/((betasq * precision) + recall + 1e-10)", "\n", "\n", "outDict", "=", "dict", "(", ")", "\n", "\n", "outDict", "[", "'TP'", "+", "tag", "]", "=", "TP", "\n", "outDict", "[", "'FP'", "+", "tag", "]", "=", "FP", "\n", "outDict", "[", "'FN'", "+", "tag", "]", "=", "FN", "\n", "outDict", "[", "'TN'", "+", "tag", "]", "=", "TN", "\n", "outDict", "[", "'Q'", "+", "tag", "]", "=", "Q", "\n", "outDict", "[", "'A'", "+", "tag", "]", "=", "A", "\n", "outDict", "[", "'TPR'", "+", "tag", "]", "=", "TPR", "\n", "outDict", "[", "'FPR'", "+", "tag", "]", "=", "FPR", "\n", "outDict", "[", "'FNR'", "+", "tag", "]", "=", "FNR", "\n", "outDict", "[", "'PRE'", "+", "tag", "]", "=", "precision", "\n", "outDict", "[", "'REC'", "+", "tag", "]", "=", "recall", "\n", "outDict", "[", "'correct_rate'", "+", "tag", "]", "=", "correct_rate", "\n", "return", "outDict", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.setFigLinesBW": [[237, 244], ["fig.get_axes", "metric.setAxLinesBW"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.setAxLinesBW"], ["", "def", "setFigLinesBW", "(", "fig", ")", ":", "\n", "    ", "\"\"\"\n    Take each axes in the figure, and for each line in the axes, make the\n    line viewable in black and white.\n    \"\"\"", "\n", "for", "ax", "in", "fig", ".", "get_axes", "(", ")", ":", "\n", "        ", "setAxLinesBW", "(", "ax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.setAxLinesBW": [[245, 291], ["ax.get_lines", "line.get_color", "line.set_dashes", "line.set_marker", "line.set_markersize"], "function", ["None"], ["", "", "def", "setAxLinesBW", "(", "ax", ")", ":", "\n", "    ", "\"\"\"\n    Take each Line2D in the axes, ax, and convert the line style to be\n    suitable for black and white viewing.\n    \"\"\"", "\n", "MARKERSIZE", "=", "3", "\n", "\n", "#     COLORMAP = {", "\n", "#         'r': {'marker': None, 'dash': (None,None)},", "\n", "#         'g': {'marker': None, 'dash': [5,2]},", "\n", "#         'm': {'marker': None, 'dash': [11,3]},", "\n", "#         'b': {'marker': None, 'dash': [6,3,2,3]},", "\n", "#         'c': {'marker': None, 'dash': [1,3]},", "\n", "#         'y': {'marker': None, 'dash': [5,3,1,2,1,10]},", "\n", "#         'k': {'marker': 'o', 'dash': (None,None)} #[1,2,1,10]}", "\n", "#         }", "\n", "''''''", "'''\n    COLORMAP = {\n        'r': {'marker': \"None\", 'dash': (None,None)},\n        'g': {'marker': \"None\", 'dash': [5,2]},\n        'm': {'marker': \"None\", 'dash': [11,3]},\n        'b': {'marker': \"None\", 'dash': [6,3,2,3]},\n        'c': {'marker': \"None\", 'dash': [1,3]},\n        'y': {'marker': \"None\", 'dash': [5,3,1,2,1,10]},\n        'k': {'marker': 'o', 'dash': (None,None)} #[1,2,1,10]}\n        }\n    '''", "''''''", "\n", "\n", "COLORMAP", "=", "{", "\n", "'r'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'g'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'m'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'b'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'c'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'y'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'k'", ":", "{", "'marker'", ":", "'o'", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", "#[1,2,1,10]}", "\n", "}", "\n", "\n", "\n", "for", "line", "in", "ax", ".", "get_lines", "(", ")", ":", "\n", "        ", "origColor", "=", "line", ".", "get_color", "(", ")", "\n", "#line.set_color('black')", "\n", "\n", "line", ".", "set_dashes", "(", "COLORMAP", "[", "origColor", "]", "[", "'dash'", "]", ")", "\n", "line", ".", "set_marker", "(", "COLORMAP", "[", "origColor", "]", "[", "'marker'", "]", ")", "\n", "line", ".", "set_markersize", "(", "MARKERSIZE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.plotPrecisionRecall": [[292, 358], ["metric.setFigLinesBW", "pylab.ylabel", "pylab.xlabel", "pylab.xlim", "pylab.xticks", "pylab.ylim", "pylab.yticks", "pylab.figure", "numpy.array", "numpy.array", "pylab.plot", "pylab.plot", "pylab.legend", "pylab.title", "type", "pylab.savefig", "pylab.close", "pylab.figure.clear", "pylab.savefig"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.setFigLinesBW"], ["", "", "def", "plotPrecisionRecall", "(", "precision", ",", "recall", ",", "outFileName", ",", "benchmark_pr", "=", "None", ",", "Fig", "=", "None", ",", "drawCol", "=", "0", ",", "textLabel", "=", "None", ",", "title", "=", "None", ",", "fontsize1", "=", "14", ",", "fontsize2", "=", "10", ",", "linewidth", "=", "3", ")", ":", "\n", "    ", "'''\n    \n    :param precision:\n    :param recall:\n    :param outFileName:\n    :param Fig:\n    :param drawCol:\n    :param textLabel:\n    :param fontsize1:\n    :param fontsize2:\n    :param linewidth:\n    '''", "\n", "\n", "clearFig", "=", "False", "\n", "\n", "if", "Fig", "==", "None", ":", "\n", "        ", "Fig", "=", "pylab", ".", "figure", "(", ")", "\n", "clearFig", "=", "True", "\n", "\n", "#tableString = 'Algo avgprec Fmax prec recall accuracy fpr Q(TonITS)\\n'", "\n", "", "linecol", "=", "[", "'r'", ",", "'m'", ",", "'b'", ",", "'c'", "]", "\n", "#if we are evaluating SP, then BL is available", "\n", "#sectionName = 'Evaluation_'+tag+'PxProb'", "\n", "#fullEvalFile = os.path.join(eval_dir,evalName)", "\n", "#Precision,Recall,evalString = readEvaluation(fullEvalFile,sectionName,AlgoLabel)", "\n", "\n", "if", "benchmark_pr", "!=", "None", ":", "\n", "\n", "        ", "benchmark_recall", "=", "np", ".", "array", "(", "benchmark_pr", "[", "'recall'", "]", ")", "\n", "benchmark_precision", "=", "np", ".", "array", "(", "benchmark_pr", "[", "'precision'", "]", ")", "\n", "pylab", ".", "plot", "(", "100", "*", "benchmark_recall", ",", "100", "*", "benchmark_precision", ",", "linewidth", "=", "linewidth", ",", "color", "=", "linecol", "[", "drawCol", "]", ",", "label", "=", "textLabel", ")", "\n", "\n", "", "else", ":", "\n", "\n", "        ", "pylab", ".", "plot", "(", "100", "*", "recall", ",", "100", "*", "precision", ",", "linewidth", "=", "2", ",", "color", "=", "linecol", "[", "drawCol", "]", ",", "label", "=", "textLabel", ")", "\n", "\n", "#writing out PrecRecall curves as graphic", "\n", "", "setFigLinesBW", "(", "Fig", ")", "\n", "if", "textLabel", "!=", "None", ":", "\n", "        ", "pylab", ".", "legend", "(", "loc", "=", "'lower left'", ",", "prop", "=", "{", "'size'", ":", "fontsize2", "}", ")", "\n", "\n", "", "if", "title", "!=", "None", ":", "\n", "        ", "pylab", ".", "title", "(", "title", ",", "fontsize", "=", "fontsize1", ")", "\n", "\n", "#pylab.title(title,fontsize=24)", "\n", "", "pylab", ".", "ylabel", "(", "'Precision [%]'", ",", "fontsize", "=", "fontsize1", ")", "\n", "pylab", ".", "xlabel", "(", "'Recall [%]'", ",", "fontsize", "=", "fontsize1", ")", "\n", "\n", "pylab", ".", "xlim", "(", "0", ",", "100", ")", "\n", "pylab", ".", "xticks", "(", "[", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", ",", "90", ",", "100", "]", ",", "\n", "(", "'0'", ",", "''", ",", "'0.20'", ",", "''", ",", "'0.40'", ",", "''", ",", "'0.60'", ",", "''", ",", "'0.80'", ",", "''", ",", "'1.0'", ")", ",", "fontsize", "=", "fontsize2", ")", "\n", "pylab", ".", "ylim", "(", "0", ",", "100", ")", "\n", "pylab", ".", "yticks", "(", "[", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", ",", "90", ",", "100", "]", ",", "\n", "(", "'0'", ",", "''", ",", "'0.20'", ",", "''", ",", "'0.40'", ",", "''", ",", "'0.60'", ",", "''", ",", "'0.80'", ",", "''", ",", "'1.0'", ")", ",", "fontsize", "=", "fontsize2", ")", "\n", "\n", "#pylab.grid(True)", "\n", "# ", "\n", "if", "type", "(", "outFileName", ")", "!=", "list", ":", "\n", "        ", "pylab", ".", "savefig", "(", "outFileName", ")", "\n", "", "else", ":", "\n", "        ", "for", "outFn", "in", "outFileName", ":", "\n", "            ", "pylab", ".", "savefig", "(", "outFn", ")", "\n", "", "", "if", "clearFig", ":", "\n", "        ", "pylab", ".", "close", "(", ")", "\n", "Fig", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.eval_image": [[359, 370], ["metric.evalExp", "numpy.array", "range"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.evalExp"], ["", "", "def", "eval_image", "(", "gt_image", ",", "cnn_image", ")", ":", "\n", "    ", "\"\"\".\"\"\"", "\n", "thresh", "=", "np", ".", "array", "(", "range", "(", "0", ",", "256", ")", ")", "/", "255.0", "\n", "road_gt", "=", "gt_image", "[", ":", ",", ":", "]", ">", "0", "\n", "valid_gt", "=", "gt_image", "[", ":", ",", ":", "]", ">", "0", "\n", "\n", "FN", ",", "FP", ",", "posNum", ",", "negNum", "=", "evalExp", "(", "road_gt", ",", "cnn_image", ",", "\n", "thresh", ",", "validMap", "=", "None", ",", "\n", "validArea", "=", "valid_gt", ")", "\n", "\n", "return", "FN", ",", "FP", ",", "posNum", ",", "negNum", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.eval_image_rewrite": [[371, 381], ["metric.evalExp", "numpy.array", "range"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.evalExp"], ["", "def", "eval_image_rewrite", "(", "gt_image", ",", "prob", ",", "cl_index", ")", ":", "\n", "\n", "    ", "thresh", "=", "np", ".", "array", "(", "range", "(", "0", ",", "256", ")", ")", "/", "255.0", "\n", "cl_gt", "=", "gt_image", "[", ":", ",", ":", "]", "==", "cl_index", "\n", "valid_gt", "=", "gt_image", "[", ":", ",", ":", "]", "!=", "255", "\n", "\n", "FN", ",", "FP", ",", "posNum", ",", "negNum", "=", "evalExp", "(", "cl_gt", ",", "prob", ",", "\n", "thresh", ",", "validMap", "=", "None", ",", "\n", "validArea", "=", "valid_gt", ")", "\n", "return", "FN", ",", "FP", ",", "posNum", ",", "negNum", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.save_PTZ_metric2disk": [[382, 399], ["list", "list", "open", "open.write", "open.close", "json.dumps"], "function", ["None"], ["", "def", "save_PTZ_metric2disk", "(", "metrics", ",", "save_path", ")", ":", "\n", "\n", "    ", "import", "json", "\n", "#metric_dict= {}", "\n", "recall_", "=", "list", "(", "metrics", "[", "'metric'", "]", "[", "'recall'", "]", ")", "\n", "precision_", "=", "list", "(", "metrics", "[", "'metric'", "]", "[", "'precision'", "]", ")", "\n", "f_score", "=", "metrics", "[", "'metric'", "]", "[", "'MaxF'", "]", "\n", "try", ":", "\n", "        ", "iu", "=", "metrics", "[", "'metric'", "]", "[", "'iu'", "]", "\n", "", "except", "KeyError", ":", "\n", "        ", "iu", "=", "0.0", "\n", "", "cont_embedding", "=", "metrics", "[", "'contrast_embedding'", "]", "\n", "metric_", "=", "{", "'recall'", ":", "recall_", ",", "'precision'", ":", "precision_", ",", "'f-score'", ":", "f_score", ",", "'iu'", ":", "iu", ",", "\n", "'contrast_embedding'", ":", "cont_embedding", "}", "\n", "file_", "=", "open", "(", "save_path", "+", "'/metric.json'", ",", "'w'", ")", "\n", "file_", ".", "write", "(", "json", ".", "dumps", "(", "metric_", ",", "ensure_ascii", "=", "False", ",", "indent", "=", "2", ")", ")", "\n", "file_", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.save_metric2disk": [[400, 420], ["len", "range", "open", "open.write", "open.close", "list", "list", "metric_dict.setdefault", "json.dumps"], "function", ["None"], ["", "def", "save_metric2disk", "(", "metrics", ",", "save_path", ")", ":", "\n", "\n", "    ", "import", "json", "\n", "length", "=", "len", "(", "metrics", ")", "\n", "metric_dict", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "        ", "recall_", "=", "list", "(", "metrics", "[", "i", "]", "[", "'metric'", "]", "[", "'recall'", "]", ")", "\n", "name", "=", "metrics", "[", "i", "]", "[", "'name'", "]", "\n", "precision_", "=", "list", "(", "metrics", "[", "i", "]", "[", "'metric'", "]", "[", "'precision'", "]", ")", "\n", "f_score", "=", "metrics", "[", "i", "]", "[", "'metric'", "]", "[", "'MaxF'", "]", "\n", "try", ":", "\n", "            ", "iu", "=", "metrics", "[", "i", "]", "[", "'metric'", "]", "[", "'iu'", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "iu", "=", "0.0", "\n", "", "metric_", "=", "{", "'name'", ":", "name", ",", "'recall'", ":", "recall_", ",", "'precision'", ":", "precision_", ",", "'f-score'", ":", "f_score", ",", "'iu'", ":", "iu", "}", "\n", "metric_dict", ".", "setdefault", "(", "i", ",", "metric_", ")", "\n", "\n", "", "file_", "=", "open", "(", "save_path", "+", "'/metric.json'", ",", "'w'", ")", "\n", "file_", ".", "write", "(", "json", ".", "dumps", "(", "metric_dict", ",", "ensure_ascii", "=", "False", ",", "indent", "=", "2", ")", ")", "\n", "file_", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.load_metric_json": [[421, 428], ["open", "json.load"], "function", ["None"], ["", "def", "load_metric_json", "(", "json_path", ")", ":", "\n", "    ", "import", "json", "\n", "\n", "with", "open", "(", "json_path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "metric", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "return", "metric", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric._fast_hist": [[429, 435], ["numpy.bincount().reshape", "numpy.bincount", "label_true[].astype"], "function", ["None"], ["", "def", "_fast_hist", "(", "label_true", ",", "label_pred", ",", "n_class", ")", ":", "\n", "    ", "mask", "=", "(", "label_true", ">=", "0", ")", "&", "(", "label_true", "<", "n_class", ")", "\n", "hist", "=", "np", ".", "bincount", "(", "\n", "n_class", "*", "label_true", "[", "mask", "]", ".", "astype", "(", "int", ")", "+", "\n", "label_pred", "[", "mask", "]", ",", "minlength", "=", "n_class", "**", "2", ")", ".", "reshape", "(", "n_class", ",", "n_class", ")", "\n", "return", "hist", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.scores": [[437, 460], ["numpy.zeros", "zip", "numpy.nanmean", "numpy.nanmean", "dict", "metric._fast_hist", "numpy.diag().sum", "np.zeros.sum", "numpy.diag", "np.zeros.sum", "numpy.diag", "np.zeros.sum", "np.zeros.sum", "zip", "lt.flatten", "lp.flatten", "numpy.diag", "range", "numpy.diag", "np.zeros.sum", "np.zeros.sum"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric._fast_hist"], ["", "def", "scores", "(", "label_trues", ",", "label_preds", ",", "n_class", ")", ":", "\n", "    ", "\"\"\"Returns accuracy score evaluation result.\n      - overall accuracy\n      - mean accuracy\n      - mean IU\n      - fwavacc\n    \"\"\"", "\n", "hist", "=", "np", ".", "zeros", "(", "(", "n_class", ",", "n_class", ")", ")", "\n", "for", "lt", ",", "lp", "in", "zip", "(", "label_trues", ",", "label_preds", ")", ":", "\n", "        ", "hist", "+=", "_fast_hist", "(", "lt", ".", "flatten", "(", ")", ",", "lp", ".", "flatten", "(", ")", ",", "n_class", ")", "\n", "", "acc", "=", "np", ".", "diag", "(", "hist", ")", ".", "sum", "(", ")", "/", "hist", ".", "sum", "(", ")", "\n", "acc_cls", "=", "np", ".", "diag", "(", "hist", ")", "/", "hist", ".", "sum", "(", "axis", "=", "1", ")", "\n", "acc_cls", "=", "np", ".", "nanmean", "(", "acc_cls", ")", "\n", "iu", "=", "np", ".", "diag", "(", "hist", ")", "/", "(", "hist", ".", "sum", "(", "axis", "=", "1", ")", "+", "hist", ".", "sum", "(", "axis", "=", "0", ")", "-", "np", ".", "diag", "(", "hist", ")", ")", "\n", "mean_iu", "=", "np", ".", "nanmean", "(", "iu", ")", "\n", "freq", "=", "hist", ".", "sum", "(", "axis", "=", "1", ")", "/", "hist", ".", "sum", "(", ")", "\n", "fwavacc", "=", "(", "freq", "[", "freq", ">", "0", "]", "*", "iu", "[", "freq", ">", "0", "]", ")", ".", "sum", "(", ")", "\n", "cls_iu", "=", "dict", "(", "zip", "(", "range", "(", "n_class", ")", ",", "iu", ")", ")", "\n", "\n", "return", "{", "'Overall Acc:'", ":", "acc", ",", "\n", "'Mean Acc :'", ":", "acc_cls", ",", "\n", "'FreqW Acc :'", ":", "fwavacc", ",", "\n", "'Mean IoU :'", ":", "mean_iu", ",", "}", ",", "cls_iu", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.metric.RMS_Contrast": [[461, 469], ["numpy.resize", "numpy.mean", "numpy.std"], "function", ["None"], ["", "def", "RMS_Contrast", "(", "dist_map", ")", ":", "\n", "\n", "    ", "n", ",", "c", ",", "h", ",", "w", "=", "dist_map", ".", "shape", "\n", "dist_map_l", "=", "np", ".", "resize", "(", "dist_map", ",", "(", "n", "*", "c", "*", "h", "*", "w", ")", ")", "\n", "mean", "=", "np", ".", "mean", "(", "dist_map_l", ",", "axis", "=", "0", ")", "\n", "std", "=", "np", ".", "std", "(", "dist_map_l", ",", "axis", "=", "0", ",", "ddof", "=", "1", ")", "\n", "contrast", "=", "std", "/", "mean", "\n", "return", "contrast", "", "", ""]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.setFigLinesBW": [[6, 13], ["fig.get_axes", "plot_contrast_sensitive.setAxLinesBW"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.setAxLinesBW"], ["def", "setFigLinesBW", "(", "fig", ")", ":", "\n", "    ", "\"\"\"\n    Take each axes in the figure, and for each line in the axes, make the\n    line viewable in black and white.\n    \"\"\"", "\n", "for", "ax", "in", "fig", ".", "get_axes", "(", ")", ":", "\n", "        ", "setAxLinesBW", "(", "ax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.setAxLinesBW": [[14, 34], ["ax.get_lines", "line.get_color", "line.set_dashes", "line.set_marker", "line.set_markersize"], "function", ["None"], ["", "", "def", "setAxLinesBW", "(", "ax", ")", ":", "\n", "    ", "\"\"\"\n    Take each Line2D in the axes, ax, and convert the line style to be\n    suitable for black and white viewing.\n    \"\"\"", "\n", "MARKERSIZE", "=", "3", "\n", "COLORMAP", "=", "{", "\n", "'r'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'g'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'m'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'b'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'c'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'y'", ":", "{", "'marker'", ":", "\"None\"", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", ",", "\n", "'k'", ":", "{", "'marker'", ":", "'None'", ",", "'dash'", ":", "(", "None", ",", "None", ")", "}", "# [1,2,1,10]}", "\n", "}", "\n", "for", "line", "in", "ax", ".", "get_lines", "(", ")", ":", "\n", "        ", "origColor", "=", "line", ".", "get_color", "(", ")", "\n", "line", ".", "set_dashes", "(", "COLORMAP", "[", "origColor", "]", "[", "'dash'", "]", ")", "\n", "line", ".", "set_marker", "(", "COLORMAP", "[", "origColor", "]", "[", "'marker'", "]", ")", "\n", "line", ".", "set_markersize", "(", "MARKERSIZE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.get_csf_ls": [[35, 45], ["os.path.join", "range", "os.path.join", "utils.load_metric_json", "str", "csf_conv5_ls.append", "csf_fc6_ls.append", "csf_fc7_ls.append", "x.append"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.load_metric_json"], ["", "", "def", "get_csf_ls", "(", "base_dir", ",", "number", ")", ":", "\n", "\n", "    ", "CSF_dir", "=", "os", ".", "path", ".", "join", "(", "base_dir", ")", "\n", "csf_conv5_ls", ",", "csf_fc6_ls", ",", "csf_fc7_ls", ",", "x", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "number", ")", ":", "\n", "        ", "CSF_sub_dir", "=", "os", ".", "path", ".", "join", "(", "CSF_dir", ",", "str", "(", "i", ")", ",", "'metric.json'", ")", "\n", "CSF", "=", "util", ".", "load_metric_json", "(", "CSF_sub_dir", ")", "\n", "csf_conv5", ",", "csf_fc6", ",", "csf_fc7", "=", "CSF", "[", "'contrast_conv5'", "]", ",", "CSF", "[", "'contrast_fc'", "]", ",", "CSF", "[", "'contrast_embedding'", "]", "\n", "csf_conv5_ls", ".", "append", "(", "csf_conv5", ")", ",", "csf_fc6_ls", ".", "append", "(", "csf_fc6", ")", ",", "csf_fc7_ls", ".", "append", "(", "csf_fc7", ")", ",", "x", ".", "append", "(", "i", ")", "\n", "", "return", "csf_conv5_ls", ",", "csf_fc6_ls", ",", "csf_fc7_ls", ",", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.main": [[46, 68], ["os.path.join", "os.path.join", "plot_contrast_sensitive.get_csf_ls", "plot_contrast_sensitive.get_csf_ls", "pylab.figure", "plot_contrast_sensitive.setFigLinesBW", "pylab.plot", "pylab.plot", "pylab.plot", "pylab.plot", "pylab.plot", "pylab.plot", "pylab.legend", "pylab.ylabel", "pylab.xlabel", "pylab.savefig"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.get_csf_ls", "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.get_csf_ls", "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.plot_contrast_sensitive.setFigLinesBW"], ["", "def", "main", "(", ")", ":", "\n", "\n", "    ", "l2_base_dir", "=", "'/media/admin228/00027E210001A5BD/train_pytorch/change_detection/CMU/prediction_cons/l2_5,6,7/roc'", "\n", "cos_base_dir", "=", "'/media/admin228/00027E210001A5BD/train_pytorch/change_detection/CMU/prediction_cons/dist_cos_new_5,6,7/roc'", "\n", "CSF_dir", "=", "os", ".", "path", ".", "join", "(", "l2_base_dir", ")", "\n", "CSF_fig_dir", "=", "os", ".", "path", ".", "join", "(", "l2_base_dir", ",", "'fig.png'", ")", "\n", "end_number", "=", "22", "\n", "csf_conv5_l2_ls", ",", "csf_fc6_l2_ls", ",", "csf_fc7_l2_ls", ",", "x_l2", "=", "get_csf_ls", "(", "l2_base_dir", ",", "end_number", ")", "\n", "csf_conv5_cos_ls", ",", "csf_fc6_cos_ls", ",", "csf_fc7_cos_ls", ",", "x_cos", "=", "get_csf_ls", "(", "cos_base_dir", ",", "end_number", ")", "\n", "Fig", "=", "pylab", ".", "figure", "(", ")", "\n", "setFigLinesBW", "(", "Fig", ")", "\n", "#pylab.plot(x,csf_conv4_ls, color='k',label= 'conv4')", "\n", "pylab", ".", "plot", "(", "x_l2", ",", "csf_conv5_l2_ls", ",", "color", "=", "'m'", ",", "label", "=", "'l2:conv5'", ")", "\n", "pylab", ".", "plot", "(", "x_l2", ",", "csf_fc6_l2_ls", ",", "color", "=", "'b'", ",", "label", "=", "'l2:fc6'", ")", "\n", "pylab", ".", "plot", "(", "x_l2", ",", "csf_fc7_l2_ls", ",", "color", "=", "'g'", ",", "label", "=", "'l2:fc7'", ")", "\n", "pylab", ".", "plot", "(", "x_cos", ",", "csf_conv5_cos_ls", ",", "color", "=", "'c'", ",", "label", "=", "'cos:conv5'", ")", "\n", "pylab", ".", "plot", "(", "x_cos", ",", "csf_fc6_cos_ls", ",", "color", "=", "'r'", ",", "label", "=", "'cos:fc6'", ")", "\n", "pylab", ".", "plot", "(", "x_cos", ",", "csf_fc7_cos_ls", ",", "color", "=", "'y'", ",", "label", "=", "'cos:fc7'", ")", "\n", "pylab", ".", "legend", "(", "loc", "=", "'lower right'", ",", "prop", "=", "{", "'size'", ":", "10", "}", ")", "\n", "pylab", ".", "ylabel", "(", "'RMS Contrast'", ",", "fontsize", "=", "14", ")", "\n", "pylab", ".", "xlabel", "(", "'Epoch'", ",", "fontsize", "=", "14", ")", "\n", "pylab", ".", "savefig", "(", "CSF_fig_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.load_deeplab_v2": [[14, 21], ["deeplab_v2.deeplab_vgg_v2", "torch.load", "torch.load", "torch.load", "deeplab_v2.deeplab_vgg_v2.load_state_dict", "print"], "function", ["None"], ["def", "load_deeplab_v2", "(", "model_file", ")", ":", "\n", "\n", "    ", "model", "=", "deeplab_v2", ".", "deeplab_vgg_v2", "(", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "print", "(", "'deeplabv2 has been load'", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.load_pretrain_model": [[22, 29], ["torchvision.models.vgg16", "torch.load", "torch.load", "torch.load", "torchvision.models.vgg16.load_state_dict", "print"], "function", ["None"], ["", "def", "load_pretrain_model", "(", "model_file", ")", ":", "\n", "\n", "   ", "model", "=", "torchvision", ".", "models", ".", "vgg16", "(", "pretrained", "=", "False", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "print", "(", "'model has been load'", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.load_pretrain_coco_attention_model": [[30, 37], ["model.Deeplab_MS_Att_Scale", "torch.load", "torch.load", "torch.load", "attmodel.Deeplab_MS_Att_Scale.load_state_dict", "print"], "function", ["None"], ["", "def", "load_pretrain_coco_attention_model", "(", "model_file", ")", ":", "\n", "\n", "    ", "model", "=", "attmodel", ".", "Deeplab_MS_Att_Scale", "(", "class_number", "=", "91", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "print", "(", "'model has been load'", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.load_deeplab_pretrain_model": [[38, 45], ["model.vgg1024", "torch.load", "torch.load", "torch.load", "vgg.vgg1024.load_state_dict", "print"], "function", ["None"], ["", "def", "load_deeplab_pretrain_model", "(", "model_file", ")", ":", "\n", "\n", "   ", "model", "=", "vgg", ".", "vgg1024", "(", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "print", "(", "'model has been load'", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.load_deeplab_best_metric_model": [[46, 53], ["deeplab.deeplab", "torch.load", "torch.load", "torch.load", "deeplab.deeplab.load_state_dict", "print"], "function", ["None"], ["", "def", "load_deeplab_best_metric_model", "(", "model_file", ")", ":", "\n", "\n", "    ", "model", "=", "deeplab", ".", "deeplab", "(", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", "[", "'state_dict'", "]", ")", "\n", "print", "(", "'model has been load'", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.check_dir": [[54, 58], ["os.path.exists", "os.mkdir"], "function", ["None"], ["", "def", "check_dir", "(", "dir", ")", ":", "\n", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.adjust_learning_rate": [[59, 65], ["None"], "function", ["None"], ["", "", "def", "adjust_learning_rate", "(", "learning_rate", ",", "optimizer", ",", "step", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by 10 every 30 epochs\"\"\"", "\n", "lr", "=", "learning_rate", "*", "(", "0.1", "**", "(", "step", "//", "20000", ")", ")", "\n", "#print(str(lr))", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.adaptive_select_gamma": [[66, 74], ["None"], "function", ["None"], ["", "", "def", "adaptive_select_gamma", "(", "epoch", ")", ":", "\n", "\n", "#gammas = [0,0.5,1,2,5]", "\n", "    ", "if", "epoch", ">=", "10", ":", "\n", "        ", "gamma", "=", "4", "\n", "", "else", ":", "\n", "        ", "gamma", "=", "0", "\n", "", "return", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.poly_lr_scheduler": [[75, 89], ["None"], "function", ["None"], ["", "def", "poly_lr_scheduler", "(", "optimizer", ",", "init_lr", ",", "iter", ",", "lr_decay_iter", "=", "1", ",", "max_iter", "=", "30000", ",", "power", "=", "0.9", ",", ")", ":", "\n", "    ", "\"\"\"Polynomial decay of learning rate\n        :param init_lr is base learning rate\n        :param iter is a current iteration\n        :param lr_decay_iter how frequently decay occurs, default is 1\n        :param max_iter is number of maximum iterations\n        :param power is a polymomial power\n\n    \"\"\"", "\n", "if", "iter", "%", "lr_decay_iter", "or", "iter", ">", "max_iter", ":", "\n", "        ", "return", "optimizer", "\n", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "init_lr", "*", "(", "1", "-", "iter", "/", "max_iter", ")", "**", "power", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.save2json": [[90, 94], ["open", "open.write", "open.close", "json.dumps"], "function", ["None"], ["", "", "def", "save2json", "(", "metric_dict", ",", "save_path", ")", ":", "\n", "    ", "file_", "=", "open", "(", "save_path", ",", "'w'", ")", "\n", "file_", ".", "write", "(", "json", ".", "dumps", "(", "metric_dict", ",", "ensure_ascii", "=", "False", ",", "indent", "=", "2", ")", ")", "\n", "file_", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.load_metric_json": [[95, 99], ["open", "json.load"], "function", ["None"], ["", "def", "load_metric_json", "(", "json_path", ")", ":", "\n", "    ", "with", "open", "(", "json_path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "metric", "=", "json", ".", "load", "(", "f", ")", "\n", "", "return", "metric", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.init_metric_for_testing_different_threshold_cd2014": [[100, 116], ["numpy.zeros", "numpy.zeros", "metric_for_conds.setdefault", "metric_for_conds.setdefault", "metric_for_conds.setdefault", "metric_for_conds.setdefault", "metric_for_various_camera_conditions.setdefault", "numpy.array", "range"], "function", ["None"], ["", "def", "init_metric_for_testing_different_threshold_cd2014", "(", ")", ":", "\n", "\n", "    ", "metric_for_various_camera_conditions", "=", "{", "}", "\n", "condition_names", "=", "[", "'continuousPan'", ",", "'intermittentPan'", ",", "'twoPositionPTZCam'", ",", "'zoomInZoomOut'", "]", "\n", "for", "name", "in", "condition_names", ":", "\n", "        ", "metric_for_conds", "=", "{", "}", "\n", "thresh", "=", "np", ".", "array", "(", "range", "(", "0", ",", "256", ")", ")", "/", "255.0", "\n", "total_fp", "=", "np", ".", "zeros", "(", "thresh", ".", "shape", ")", "\n", "total_fn", "=", "np", ".", "zeros", "(", "thresh", ".", "shape", ")", "\n", "metric_for_conds", ".", "setdefault", "(", "'total_fp'", ",", "total_fp", ")", "\n", "metric_for_conds", ".", "setdefault", "(", "'total_fn'", ",", "total_fn", ")", "\n", "metric_for_conds", ".", "setdefault", "(", "'total_posnum'", ",", "0", ")", "\n", "metric_for_conds", ".", "setdefault", "(", "'total_negnum'", ",", "0", ")", "\n", "metric_for_various_camera_conditions", ".", "setdefault", "(", "name", ",", "metric_for_conds", ")", "\n", "\n", "", "return", "metric_for_various_camera_conditions", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.init_metric_for_class_for_cd2014": [[117, 139], ["range", "metric_for_various_condition.setdefault", "int", "numpy.zeros", "numpy.zeros", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_class.setdefault", "numpy.array", "range"], "function", ["None"], ["", "def", "init_metric_for_class_for_cd2014", "(", "number_class", ")", ":", "\n", "\n", "    ", "metric_for_various_condition", "=", "{", "}", "\n", "condition_names", "=", "[", "'badWeather'", ",", "'baseline'", ",", "'cameraJitter'", ",", "'dynamicBackground'", ",", "'intermittentObjectMotion'", ",", "\n", "'lowFramerate'", ",", "'nightVideos'", ",", "'PTZ'", ",", "'shadow'", ",", "'thermal'", ",", "'turbulence'", "]", "\n", "for", "names", "in", "condition_names", ":", "\n", "        ", "metric_for_class", "=", "{", "}", "\n", "#name = ['NoChange', 'Change']", "\n", "for", "i", "in", "range", "(", "int", "(", "number_class", ")", ")", ":", "\n", "            ", "metric_for_each", "=", "{", "}", "\n", "thresh", "=", "np", ".", "array", "(", "range", "(", "0", ",", "256", ")", ")", "/", "255.0", "\n", "total_fp", "=", "np", ".", "zeros", "(", "thresh", ".", "shape", ")", "\n", "total_fn", "=", "np", ".", "zeros", "(", "thresh", ".", "shape", ")", "\n", "#metric_for_each.setdefault('name', name[i])", "\n", "metric_for_each", ".", "setdefault", "(", "'total_fp'", ",", "total_fp", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_fn'", ",", "total_fn", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_posnum'", ",", "0", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_negnum'", ",", "0", ")", "\n", "metric_for_class", ".", "setdefault", "(", "i", ",", "metric_for_each", ")", "\n", "", "metric_for_various_condition", ".", "setdefault", "(", "names", ",", "metric_for_class", ")", "\n", "\n", "", "return", "metric_for_various_condition", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.init_metric_for_class_for_cmu": [[140, 154], ["range", "numpy.zeros", "numpy.zeros", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_class.setdefault", "numpy.array", "range"], "function", ["None"], ["", "def", "init_metric_for_class_for_cmu", "(", "number_class", ")", ":", "\n", "\n", "    ", "metric_for_class", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "number_class", ")", ":", "\n", "        ", "metric_for_each", "=", "{", "}", "\n", "thresh", "=", "np", ".", "array", "(", "range", "(", "0", ",", "256", ")", ")", "/", "255.0", "\n", "total_fp", "=", "np", ".", "zeros", "(", "thresh", ".", "shape", ")", "\n", "total_fn", "=", "np", ".", "zeros", "(", "thresh", ".", "shape", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_fp'", ",", "total_fp", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_fn'", ",", "total_fn", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_posnum'", ",", "0", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_negnum'", ",", "0", ")", "\n", "metric_for_class", ".", "setdefault", "(", "i", ",", "metric_for_each", ")", "\n", "", "return", "metric_for_class", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.init_metric_for_class": [[155, 173], ["range", "int", "numpy.zeros", "numpy.zeros", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_each.setdefault", "metric_for_class.setdefault", "numpy.array", "range"], "function", ["None"], ["", "def", "init_metric_for_class", "(", "number_class", ")", ":", "\n", "\n", "    ", "metric_for_class", "=", "{", "}", "\n", "name", "=", "[", "'NoChange'", ",", "'Change'", "]", "\n", "for", "i", "in", "range", "(", "int", "(", "number_class", ")", ")", ":", "\n", "\n", "        ", "metric_for_each", "=", "{", "}", "\n", "thresh", "=", "np", ".", "array", "(", "range", "(", "0", ",", "256", ")", ")", "/", "255.0", "\n", "total_fp", "=", "np", ".", "zeros", "(", "thresh", ".", "shape", ")", "\n", "total_fn", "=", "np", ".", "zeros", "(", "thresh", ".", "shape", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'name'", ",", "name", "[", "i", "]", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_fp'", ",", "total_fp", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_fn'", ",", "total_fn", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_posnum'", ",", "0", ")", "\n", "metric_for_each", ".", "setdefault", "(", "'total_negnum'", ",", "0", ")", "\n", "metric_for_class", ".", "setdefault", "(", "i", ",", "metric_for_each", ")", "\n", "\n", "", "return", "metric_for_class", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.attention_weights_collection": [[174, 190], ["range", "numpy.reshape", "numpy.max", "loc_weights_dict.setdefault", "np.reshape.reshape", "np.reshape.reshape"], "function", ["None"], ["", "def", "attention_weights_collection", "(", "attention_weights", ")", ":", "\n", "\n", "    ", "loc_weights_dict", "=", "{", "}", "\n", "locs", ",", "height", ",", "width", "=", "attention_weights", ".", "shape", "\n", "for", "idx", "in", "range", "(", "locs", ")", ":", "\n", "       ", "loc_weights", "=", "attention_weights", "[", "idx", ",", ":", ",", ":", "]", "\n", "loc_attention_vec", "=", "np", ".", "reshape", "(", "loc_weights", ",", "(", "height", "*", "width", ")", ")", "\n", "max_", "=", "np", ".", "max", "(", "loc_attention_vec", ",", "axis", "=", "0", ")", "\n", "if", "max_", "!=", "0", ":", "\n", "           ", "loc_attention_vec", "=", "loc_attention_vec", "/", "max_", "\n", "loc_attention", "=", "loc_attention_vec", ".", "reshape", "(", "height", ",", "width", ")", "\n", "", "else", ":", "\n", "           ", "loc_attention", "=", "loc_attention_vec", ".", "reshape", "(", "height", ",", "width", ")", "\n", "", "loc_weights_dict", ".", "setdefault", "(", "idx", ",", "loc_attention", ")", "\n", "\n", "", "return", "loc_weights_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.attention_weights_visulize": [[191, 200], ["weights_dict.iteritems", "cv2.resize", "cv2.applyColorMap", "cv2.imwrite", "numpy.uint8", "str"], "function", ["None"], ["", "def", "attention_weights_visulize", "(", "weights_dict", ",", "original_img", ",", "save_base_path", ")", ":", "\n", "\n", "    ", "for", "idx", ",", "loc_attention_weight_vec", "in", "weights_dict", ".", "iteritems", "(", ")", ":", "\n", "\n", "        ", "height", ",", "width", ",", "channel", "=", "original_img", ".", "shape", "\n", "alpha_att_map", "=", "cv2", ".", "resize", "(", "loc_attention_weight_vec", ",", "(", "width", ",", "height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "alpha_att_map_", "=", "cv2", ".", "applyColorMap", "(", "np", ".", "uint8", "(", "255", "*", "alpha_att_map", ")", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "fuse_heat_map", "=", "0.6", "*", "alpha_att_map_", "+", "0.4", "*", "original_img", "\n", "cv2", ".", "imwrite", "(", "save_base_path", "+", "'_'", "+", "str", "(", "idx", ")", "+", "'.jpg'", ",", "fuse_heat_map", ")", "\n", "#print idx", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.various_scale_attention_weights_visualize": [[202, 218], ["range", "len", "len", "cv2.resize", "cv2.applyColorMap", "cv2.imwrite", "cv2.imwrite", "numpy.uint8", "str", "str", "str", "str"], "function", ["None"], ["", "", "def", "various_scale_attention_weights_visualize", "(", "spatial_weights", ",", "original_img1", ",", "original_img2", ",", "save_base_path", ",", "filename", ")", ":", "\n", "\n", "    ", "nchannel", ",", "height", ",", "width", "=", "spatial_weights", ".", "shape", "\n", "scale_list", "=", "[", "'common'", ",", "'t0'", ",", "'t1'", "]", "\n", "original_imgs", "=", "[", "original_img1", ",", "original_img1", ",", "original_img2", "]", "\n", "assert", "len", "(", "scale_list", ")", "==", "len", "(", "spatial_weights", ")", "\n", "for", "idx", "in", "range", "(", "nchannel", ")", ":", "\n", "\n", "        ", "height_img", ",", "width_img", ",", "channel", "=", "original_imgs", "[", "idx", "]", ".", "shape", "\n", "scale_x", "=", "spatial_weights", "[", "idx", "]", "\n", "scale_name", "=", "scale_list", "[", "idx", "]", "\n", "scalex_x_att_map", "=", "cv2", ".", "resize", "(", "scale_x", ",", "(", "width_img", ",", "height_img", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "scalex_x_att_map_", "=", "cv2", ".", "applyColorMap", "(", "np", ".", "uint8", "(", "255", "*", "scalex_x_att_map", ")", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "fuse_scale_att_map", "=", "0.6", "*", "scalex_x_att_map_", "+", "0.4", "*", "original_imgs", "[", "idx", "]", "\n", "cv2", ".", "imwrite", "(", "save_base_path", "+", "'_'", "+", "str", "(", "filename", ")", "+", "'_origin_'", "+", "str", "(", "scale_name", ")", "+", "'.jpg'", ",", "scalex_x_att_map_", ")", "\n", "cv2", ".", "imwrite", "(", "save_base_path", "+", "'_'", "+", "str", "(", "filename", ")", "+", "'_fuse_'", "+", "str", "(", "scale_name", ")", "+", "'.jpg'", ",", "fuse_scale_att_map", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.utils.utils.resize_label": [[219, 230], ["numpy.expand_dims", "numpy.zeros", "torch.Upsample", "torch.autograd.Variable", "nn.Upsample.data.numpy", "numpy.array", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "nn.Upsample.", "numpy.squeeze"], "function", ["None"], ["", "", "def", "resize_label", "(", "label", ",", "size", ")", ":", "\n", "\n", "    ", "label", "=", "np", ".", "expand_dims", "(", "label", ",", "axis", "=", "0", ")", "\n", "label_resized", "=", "np", ".", "zeros", "(", "(", "1", ",", "label", ".", "shape", "[", "0", "]", ",", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "interp", "=", "nn", ".", "Upsample", "(", "size", "=", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "#interp = nn.Upsample(size=(size[0], size[1]),mode='bilinear',align_corners=True)", "\n", "#labelVar = torch.from_numpy(label).float()", "\n", "labelVar", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "label", ")", ".", "float", "(", ")", ")", "\n", "label_resized", "[", ":", ",", ":", ",", ":", ",", ":", "]", "=", "interp", "(", "labelVar", ")", ".", "data", ".", "numpy", "(", ")", "\n", "label_resized", "=", "np", ".", "array", "(", "label_resized", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "return", "torch", ".", "from_numpy", "(", "np", ".", "squeeze", "(", "label_resized", ",", "axis", "=", "0", ")", ")", ".", "float", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.ConstractiveThresholdHingeLoss.__init__": [[9, 13], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hingethresh", "=", "0.0", ",", "margin", "=", "2.0", ")", ":", "\n", "        ", "super", "(", "ConstractiveThresholdHingeLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "threshold", "=", "hingethresh", "\n", "self", ".", "margin", "=", "margin", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.ConstractiveThresholdHingeLoss.forward": [[14, 24], ["torch.pairwise_distance", "torch.pairwise_distance", "torch.pairwise_distance", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "out_vec_t0", ",", "out_vec_t1", ",", "label", ")", ":", "\n", "\n", "        ", "distance", "=", "F", ".", "pairwise_distance", "(", "out_vec_t0", ",", "out_vec_t1", ",", "p", "=", "2", ")", "\n", "similar_pair", "=", "torch", ".", "clamp", "(", "distance", "-", "self", ".", "threshold", ",", "min", "=", "0.0", ")", "\n", "dissimilar_pair", "=", "torch", ".", "clamp", "(", "self", ".", "margin", "-", "distance", ",", "min", "=", "0.0", ")", "\n", "#dissimilar_pair = torch.clamp(self.margin-(distance-self.threshold),min=0.0)", "\n", "constractive_thresh_loss", "=", "torch", ".", "sum", "(", "\n", "(", "1", "-", "label", ")", "*", "torch", ".", "pow", "(", "similar_pair", ",", "2", ")", "+", "label", "*", "torch", ".", "pow", "(", "dissimilar_pair", ",", "2", ")", "\n", ")", "\n", "return", "constractive_thresh_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.ConstractiveLoss.__init__": [[27, 31], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "margin", "=", "2.0", ",", "dist_flag", "=", "'l2'", ")", ":", "\n", "        ", "super", "(", "ConstractiveLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "margin", "=", "margin", "\n", "self", ".", "dist_flag", "=", "dist_flag", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.ConstractiveLoss.various_distance": [[32, 42], ["torch.pairwise_distance", "torch.pairwise_distance", "torch.pairwise_distance", "torch.pairwise_distance", "torch.pairwise_distance", "torch.pairwise_distance", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity"], "methods", ["None"], ["", "def", "various_distance", "(", "self", ",", "out_vec_t0", ",", "out_vec_t1", ")", ":", "\n", "\n", "        ", "if", "self", ".", "dist_flag", "==", "'l2'", ":", "\n", "            ", "distance", "=", "F", ".", "pairwise_distance", "(", "out_vec_t0", ",", "out_vec_t1", ",", "p", "=", "2", ")", "\n", "", "if", "self", ".", "dist_flag", "==", "'l1'", ":", "\n", "            ", "distance", "=", "F", ".", "pairwise_distance", "(", "out_vec_t0", ",", "out_vec_t1", ",", "p", "=", "1", ")", "\n", "", "if", "self", ".", "dist_flag", "==", "'cos'", ":", "\n", "            ", "similarity", "=", "F", ".", "cosine_similarity", "(", "out_vec_t0", ",", "out_vec_t1", ")", "\n", "distance", "=", "1", "-", "2", "*", "similarity", "/", "np", ".", "pi", "\n", "", "return", "distance", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.ConstractiveLoss.forward": [[43, 51], ["loss.ConstractiveLoss.various_distance", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.HistogramMaskLoss.various_distance"], ["", "def", "forward", "(", "self", ",", "out_vec_t0", ",", "out_vec_t1", ",", "label", ")", ":", "\n", "\n", "#distance = F.pairwise_distance(out_vec_t0,out_vec_t1,p=2)", "\n", "        ", "distance", "=", "self", ".", "various_distance", "(", "out_vec_t0", ",", "out_vec_t1", ")", "\n", "#distance = 1 - F.cosine_similarity(out_vec_t0,out_vec_t1)", "\n", "constractive_loss", "=", "torch", ".", "sum", "(", "(", "1", "-", "label", ")", "*", "torch", ".", "pow", "(", "distance", ",", "2", ")", "+", "label", "*", "torch", ".", "pow", "(", "torch", ".", "clamp", "(", "self", ".", "margin", "-", "distance", ",", "min", "=", "0.0", ")", ",", "2", ")", ")", "\n", "return", "constractive_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.ConstractiveMaskLoss.__init__": [[54, 61], ["torch.Module.__init__", "loss.ConstractiveThresholdHingeLoss", "loss.ConstractiveLoss"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "thresh_flag", "=", "False", ",", "hinge_thresh", "=", "0.0", ",", "dist_flag", "=", "'l2'", ")", ":", "\n", "        ", "super", "(", "ConstractiveMaskLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "thresh_flag", ":", "\n", "            ", "self", ".", "sample_constractive_loss", "=", "ConstractiveThresholdHingeLoss", "(", "margin", "=", "2.0", ",", "hingethresh", "=", "hinge_thresh", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "sample_constractive_loss", "=", "ConstractiveLoss", "(", "margin", "=", "2.0", ",", "dist_flag", "=", "dist_flag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.ConstractiveMaskLoss.forward": [[62, 73], ["torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "loss.ConstractiveMaskLoss.ConstractiveMaskLoss.sample_constractive_loss", "out_t0.view", "out_t1.view", "numpy.array", "ground_truth.data.cpu().numpy", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "ground_truth.data.cpu", "torch.from_numpy.view", "torch.from_numpy.view", "torch.from_numpy.view"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "out_t0", ",", "out_t1", ",", "ground_truth", ")", ":", "\n", "\n", "#out_t0 = out_t0.permute(0,2,3,1)", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "out_t0", ".", "data", ".", "shape", "\n", "out_t0_rz", "=", "torch", ".", "transpose", "(", "out_t0", ".", "view", "(", "c", ",", "h", "*", "w", ")", ",", "1", ",", "0", ")", "\n", "out_t1_rz", "=", "torch", ".", "transpose", "(", "out_t1", ".", "view", "(", "c", ",", "h", "*", "w", ")", ",", "1", ",", "0", ")", "\n", "gt_tensor", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "ground_truth", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "np", ".", "float32", ")", ")", "\n", "gt_rz", "=", "Variable", "(", "torch", ".", "transpose", "(", "gt_tensor", ".", "view", "(", "1", ",", "h", "*", "w", ")", ",", "1", ",", "0", ")", ")", ".", "cuda", "(", ")", "\n", "#gt_rz = Variable(torch.transpose(ground_truth.view(1,h*w),1,0))", "\n", "loss", "=", "self", ".", "sample_constractive_loss", "(", "out_t0_rz", ",", "out_t1_rz", ",", "gt_rz", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.LogDetDivergence.__init__": [[76, 82], ["torch.Module.__init__", "dict", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "model.named_parameters", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.identity"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "param_name", ",", "dim", "=", "512", ")", ":", "\n", "        ", "super", "(", "LogDetDivergence", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "param_name", "=", "param_name", "\n", "self", ".", "param_dict", "=", "dict", "(", "model", ".", "named_parameters", "(", ")", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "identity_matrix", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "np", ".", "identity", "(", "self", ".", "dim", ")", ")", ".", "float", "(", ")", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.LogDetDivergence.select_param": [[83, 89], ["loss.LogDetDivergence.param_dict.items"], "methods", ["None"], ["", "def", "select_param", "(", "self", ")", ":", "\n", "\n", "        ", "for", "layer_name", ",", "layer_param", "in", "self", ".", "param_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "self", ".", "param_name", "in", "layer_name", ":", "\n", "                ", "if", "'weight'", "in", "layer_name", ":", "\n", "                    ", "return", "layer_param", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.LogDetDivergence.forward": [[90, 100], ["loss.LogDetDivergence.select_param", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.trace", "torch.trace", "torch.trace", "torch.trace", "torch.trace", "torch.trace", "torch.trace", "torch.trace", "torch.trace", "torch.logdet", "torch.logdet", "torch.logdet", "torch.logdet", "torch.logdet", "torch.logdet", "torch.logdet", "torch.logdet", "torch.logdet", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.Mahalanobis_Constraint.select_param"], ["", "", "", "", "def", "forward", "(", "self", ")", ":", "\n", "\n", "        ", "constrainted_matrix", "=", "self", ".", "select_param", "(", ")", "\n", "matrix_", "=", "torch", ".", "squeeze", "(", "torch", ".", "squeeze", "(", "constrainted_matrix", ",", "dim", "=", "2", ")", ",", "dim", "=", "2", ")", "\n", "matrix_t", "=", "torch", ".", "t", "(", "matrix_", ")", "\n", "matrixs", "=", "torch", ".", "mm", "(", "matrix_t", ",", "matrix_", ")", "\n", "trace_", "=", "torch", ".", "trace", "(", "torch", ".", "mm", "(", "matrixs", ",", "torch", ".", "inverse", "(", "matrixs", ")", ")", ")", "\n", "log_det", "=", "torch", ".", "logdet", "(", "matrixs", ")", "\n", "maha_loss", "=", "trace_", "-", "log_det", "\n", "return", "maha_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.Mahalanobis_Constraint.__init__": [[102, 108], ["torch.Module.__init__", "dict", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "model.named_parameters", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.identity"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "param_name", ",", "dim", "=", "512", ")", ":", "\n", "        ", "super", "(", "Mahalanobis_Constraint", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "param_name", "=", "param_name", "\n", "self", ".", "param_dict", "=", "dict", "(", "model", ".", "named_parameters", "(", ")", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "identity_matrix", "=", "Variable", "(", "torch", ".", "from_numpy", "(", "np", ".", "identity", "(", "self", ".", "dim", ")", ")", ".", "float", "(", ")", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.Mahalanobis_Constraint.select_param": [[109, 115], ["loss.Mahalanobis_Constraint.param_dict.items"], "methods", ["None"], ["", "def", "select_param", "(", "self", ")", ":", "\n", "\n", "        ", "for", "layer_name", ",", "layer_param", "in", "self", ".", "param_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "self", ".", "param_name", "in", "layer_name", ":", "\n", "                ", "if", "'weight'", "in", "layer_name", ":", "\n", "                    ", "return", "layer_param", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.Mahalanobis_Constraint.forward": [[116, 124], ["loss.Mahalanobis_Constraint.select_param", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.Mahalanobis_Constraint.select_param"], ["", "", "", "", "def", "forward", "(", "self", ")", ":", "\n", "\n", "        ", "constrainted_matrix", "=", "self", ".", "select_param", "(", ")", "\n", "matrxi_", "=", "torch", ".", "squeeze", "(", "torch", ".", "squeeze", "(", "constrainted_matrix", ",", "dim", "=", "2", ")", ",", "dim", "=", "2", ")", "\n", "matrxi_t", "=", "torch", ".", "t", "(", "matrxi_", ")", "\n", "matrxi_contrainted", "=", "(", "torch", ".", "mm", "(", "matrxi_t", ",", "matrxi_", ")", "-", "self", ".", "identity_matrix", ")", ".", "view", "(", "self", ".", "dim", "**", "2", ")", "\n", "regularizer", "=", "torch", ".", "pow", "(", "matrxi_contrainted", ",", "2", ")", ".", "sum", "(", "dim", "=", "0", ")", "\n", "return", "regularizer", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.SampleHistogramLoss.__init__": [[126, 131], ["torch.Module.__init__", "torch.range().view().cuda", "torch.range().view().cuda", "torch.range().view().cuda", "torch.range().view().cuda", "torch.range().view().cuda", "torch.range().view().cuda", "torch.range().view().cuda", "torch.range().view().cuda", "torch.range().view().cuda", "loss.SampleHistogramLoss.t.size", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_steps", ")", ":", "\n", "        ", "super", "(", "SampleHistogramLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "step", "=", "1.0", "/", "(", "num_steps", "-", "1", ")", "\n", "self", ".", "t", "=", "torch", ".", "range", "(", "0", ",", "1", ",", "self", ".", "step", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "self", ".", "tsize", "=", "self", ".", "t", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.SampleHistogramLoss.forward": [[132, 141], ["s_repeat.clone", "s_repeat.clone.sum", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat_t0", ",", "feat_t1", ",", "label", ")", ":", "\n", "        ", "def", "histogram", "(", "inds", ",", "size", ")", ":", "\n", "            ", "s_repeat_", "=", "s_repeat", ".", "clone", "(", ")", "\n", "indsa", "=", "(", "delta_repeat", "==", "(", "self", ".", "t", "-", "self", ".", "step", ")", ")", "&", "inds", "\n", "indsb", "=", "(", "delta_repeat", "==", "self", ".", "t", ")", "&", "inds", "\n", "s_repeat_", "[", "~", "(", "indsb", "|", "indsa", ")", "]", "=", "0", "\n", "s_repeat_", "[", "indsa", "]", "=", "(", "s_repeat_", "-", "Variable", "(", "self", ".", "t", ")", "+", "self", ".", "step", ")", "[", "indsa", "]", "/", "self", ".", "step", "\n", "s_repeat_", "[", "indsb", "]", "=", "(", "-", "s_repeat_", "+", "Variable", "(", "self", ".", "t", ")", "+", "self", ".", "step", ")", "[", "indsb", "]", "/", "self", ".", "step", "\n", "return", "s_repeat_", ".", "sum", "(", "1", ")", "/", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.BhattacharyyaDistance.__init__": [[143, 145], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BhattacharyyaDistance", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.BhattacharyyaDistance.forward": [[146, 150], ["torch.sqrt().sum", "torch.sqrt().sum", "torch.sqrt().sum", "torch.sqrt().sum", "torch.sqrt().sum", "torch.sqrt().sum", "torch.sqrt().sum", "torch.sqrt().sum", "torch.sqrt().sum", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "hist1", ",", "hist2", ")", ":", "\n", "\n", "        ", "bh_dist", "=", "(", "torch", ".", "sqrt", "(", "hist1", "*", "hist2", ")", ")", ".", "sum", "(", ")", "\n", "return", "bh_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.KLCoefficient.__init__": [[152, 154], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "KLCoefficient", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.KLCoefficient.forward": [[155, 160], ["torch.kl_div", "torch.kl_div", "torch.kl_div"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "hist1", ",", "hist2", ")", ":", "\n", "\n", "        ", "kl", "=", "F", ".", "kl_div", "(", "hist1", ",", "hist2", ")", "\n", "dist", "=", "1.", "/", "1", "+", "kl", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.HistogramMaskLoss.__init__": [[162, 168], ["torch.Module.__init__", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "torch.range().view", "loss.KLCoefficient", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range", "torch.range"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_steps", ",", "dist_flag", "=", "'l2'", ")", ":", "\n", "        ", "super", "(", "HistogramMaskLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "step", "=", "1.0", "/", "(", "num_steps", "-", "1", ")", "\n", "self", ".", "t", "=", "torch", ".", "range", "(", "0", ",", "1", ",", "self", ".", "step", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "self", ".", "dist_flag", "=", "dist_flag", "\n", "self", ".", "distance", "=", "KLCoefficient", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.HistogramMaskLoss.various_distance": [[169, 176], ["torch.pairwise_distance", "torch.pairwise_distance", "torch.pairwise_distance", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity"], "methods", ["None"], ["", "def", "various_distance", "(", "self", ",", "out_vec_t0", ",", "out_vec_t1", ")", ":", "\n", "        ", "if", "self", ".", "dist_flag", "==", "'l2'", ":", "\n", "            ", "distance", "=", "F", ".", "pairwise_distance", "(", "out_vec_t0", ",", "out_vec_t1", ",", "p", "=", "2", ")", "\n", "", "if", "self", ".", "dist_flag", "==", "'cos'", ":", "\n", "            ", "similarity", "=", "F", ".", "cosine_similarity", "(", "out_vec_t0", ",", "out_vec_t1", ")", "\n", "distance", "=", "1", "-", "2", "*", "similarity", "/", "np", ".", "pi", "\n", "", "return", "distance", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.HistogramMaskLoss.histogram": [[177, 179], ["None"], "methods", ["None"], ["", "def", "histogram", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.HistogramMaskLoss.forward": [[180, 200], ["torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "ground_truth.view().data.cpu().numpy", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "loss.HistogramMaskLoss.HistogramMaskLoss.distance", "feat_t0.view", "feat_t1.view", "numpy.squeeze", "numpy.squeeze", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "loss.HistogramMaskLoss.HistogramMaskLoss.various_distance", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "ground_truth.view().data.cpu", "numpy.where", "numpy.where", "pos_dist_ls.data.cpu().numpy", "neg_dist_ls.data.cpu().numpy", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.histc", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "pos_dist_ls.data.cpu", "neg_dist_ls.data.cpu", "ground_truth.view"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.loss.HistogramMaskLoss.various_distance"], ["", "def", "forward", "(", "self", ",", "feat_t0", ",", "feat_t1", ",", "ground_truth", ")", ":", "\n", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "feat_t0", ".", "data", ".", "shape", "\n", "out_t0_rz", "=", "torch", ".", "transpose", "(", "feat_t0", ".", "view", "(", "c", ",", "h", "*", "w", ")", ",", "1", ",", "0", ")", "\n", "out_t1_rz", "=", "torch", ".", "transpose", "(", "feat_t1", ".", "view", "(", "c", ",", "h", "*", "w", ")", ",", "1", ",", "0", ")", "\n", "gt_np", "=", "ground_truth", ".", "view", "(", "h", "*", "w", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "#### inspired by Source code from Histogram loss ###", "\n", "### get all pos in positive pairs and negative pairs ###", "\n", "pos_inds_np", ",", "neg_inds_np", "=", "np", ".", "squeeze", "(", "np", ".", "where", "(", "gt_np", "==", "0", ")", ",", "1", ")", ",", "np", ".", "squeeze", "(", "np", ".", "where", "(", "gt_np", "!=", "0", ")", ",", "1", ")", "\n", "pos_size", ",", "neg_size", "=", "pos_inds_np", ".", "shape", "[", "0", "]", ",", "neg_inds_np", ".", "shape", "[", "0", "]", "\n", "pos_inds", ",", "neg_inds", "=", "torch", ".", "from_numpy", "(", "pos_inds_np", ")", ".", "cuda", "(", ")", ",", "torch", ".", "from_numpy", "(", "neg_inds_np", ")", ".", "cuda", "(", ")", "\n", "### get similarities(l2 distance) for all position ###", "\n", "distance", "=", "torch", ".", "squeeze", "(", "self", ".", "various_distance", "(", "out_t0_rz", ",", "out_t1_rz", ")", ",", "dim", "=", "1", ")", "\n", "### build similarity histogram of positive pairs and negative pairs ###", "\n", "pos_dist_ls", ",", "neg_dist_ls", "=", "distance", "[", "pos_inds", "]", ",", "distance", "[", "neg_inds", "]", "\n", "pos_dist_ls_t", ",", "neg_dist_ls_t", "=", "torch", ".", "from_numpy", "(", "pos_dist_ls", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "torch", ".", "from_numpy", "(", "neg_dist_ls", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "hist_pos", "=", "Variable", "(", "torch", ".", "histc", "(", "pos_dist_ls_t", ",", "bins", "=", "100", ",", "min", "=", "0", ",", "max", "=", "1", ")", "/", "pos_size", ",", "requires_grad", "=", "True", ")", "\n", "hist_neg", "=", "Variable", "(", "torch", ".", "histc", "(", "neg_dist_ls_t", ",", "bins", "=", "100", ",", "min", "=", "0", ",", "max", "=", "1", ")", "/", "neg_size", ",", "requires_grad", "=", "True", ")", "\n", "loss", "=", "self", ".", "distance", "(", "hist_pos", ",", "hist_neg", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.FeatureCorrelation.__init__": [[8, 11], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", ")", ":", "\n", "        ", "super", "(", "FeatureCorrelation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.FeatureCorrelation.forward": [[12, 21], ["feature_A.transpose().contiguous().view.transpose().contiguous().view.size", "feature_A.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "feature_B.view().transpose.view().transpose.view().transpose", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm.view().transpose().transpose", "torch.bmm.view().transpose().transpose", "feature_A.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "feature_B.view().transpose.view().transpose.view", "torch.bmm.view().transpose", "torch.bmm.view().transpose", "feature_A.transpose().contiguous().view.transpose().contiguous().view.transpose", "torch.bmm.view", "torch.bmm.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feature_A", ",", "feature_B", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "feature_A", ".", "size", "(", ")", "\n", "# reshape features for matrix multiplication", "\n", "feature_A", "=", "feature_A", ".", "transpose", "(", "2", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "c", ",", "h", "*", "w", ")", "\n", "feature_B", "=", "feature_B", ".", "view", "(", "b", ",", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "# perform matrix mult.", "\n", "feature_mul", "=", "torch", ".", "bmm", "(", "feature_B", ",", "feature_A", ")", "\n", "correlation_tensor", "=", "self", ".", "scale", "*", "feature_mul", ".", "view", "(", "b", ",", "h", ",", "w", ",", "h", "*", "w", ")", ".", "transpose", "(", "2", ",", "3", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "return", "correlation_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.l2normalization.__init__": [[23, 27], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", ")", ":", "\n", "\n", "        ", "super", "(", "l2normalization", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.l2normalization.forward": [[28, 34], ["x.pow().sum().clamp().rsqrt().expand_as", "x.pow().sum().clamp().rsqrt", "x.pow().sum().clamp", "x.pow().sum", "x.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "dim", "=", "1", ")", ":", "\n", "        ", "'''out = scale * x / sqrt(\\sum x_i^2)'''", "\n", "#f = x.data.cpu().numpy()", "\n", "#scal = self.scale * x * x.pow(2).sum(dim).clamp(min=1e-12).rsqrt().expand_as(x)", "\n", "#sca = scal.data.cpu().numpy()", "\n", "return", "self", ".", "scale", "*", "x", "*", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", ")", ".", "clamp", "(", "min", "=", "1e-12", ")", ".", "rsqrt", "(", ")", ".", "expand_as", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.l1normalization.__init__": [[36, 39], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", ")", ":", "\n", "        ", "super", "(", "l1normalization", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.l1normalization.forward": [[40, 43], ["x.pow().sum().clamp().rsqrt().expand_as", "x.pow().sum().clamp().rsqrt", "x.pow().sum().clamp", "x.pow().sum", "x.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "dim", "=", "1", ")", ":", "\n", "# out = scale * x / sum(abs(x))", "\n", "        ", "return", "self", ".", "scale", "*", "x", "*", "x", ".", "pow", "(", "1", ")", ".", "sum", "(", "dim", ")", ".", "clamp", "(", "min", "=", "1e-12", ")", ".", "rsqrt", "(", ")", ".", "expand_as", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.scale_feature.__init__": [[45, 48], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", ")", ":", "\n", "        ", "super", "(", "scale_feature", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.scale_feature.forward": [[49, 51], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "scale", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.Mahalanobis_Distance.__init__": [[53, 55], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Mahalanobis_Distance", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.Mahalanobis_Distance.cal_con": [[56, 58], ["None"], "methods", ["None"], ["", "def", "cal_con", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.Mahalanobis_Distance.cal_invert_matrix": [[59, 61], ["None"], "methods", ["None"], ["", "def", "cal_invert_matrix", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.layer.function.Mahalanobis_Distance.forward": [[62, 64], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "dis_abs", "=", "x1", "-", "x2", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.Dataset.__init__": [[72, 83], ["numpy.loadtxt", "TSUNAMI.Dataset.get_img_label_path_pairs"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.get_img_label_path_pairs"], ["    ", "def", "__init__", "(", "self", ",", "img_path", ",", "label_path", ",", "file_name_txt_path", ",", "split_flag", ",", "transform", "=", "True", ",", "transform_med", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "label_path", "=", "label_path", "\n", "self", ".", "img_path", "=", "img_path", "\n", "#self.img2_path = img2_path", "\n", "self", ".", "img_txt_path", "=", "file_name_txt_path", "\n", "self", ".", "imgs_path_list", "=", "np", ".", "loadtxt", "(", "self", ".", "img_txt_path", ",", "dtype", "=", "str", ")", "\n", "self", ".", "flag", "=", "split_flag", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "transform_med", "=", "transform_med", "\n", "self", ".", "img_label_path_pairs", "=", "self", ".", "get_img_label_path_pairs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.Dataset.get_img_label_path_pairs": [[84, 113], ["enumerate", "enumerate", "open", "os.path.join", "os.path.join", "os.path.join", "img_label_pair_list.setdefault", "open", "os.path.join", "os.path.join", "os.path.join", "img_label_pair_list.setdefault", "did.strip().split", "did.strip().split", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex"], "methods", ["None"], ["", "def", "get_img_label_path_pairs", "(", "self", ")", ":", "\n", "\n", "        ", "img_label_pair_list", "=", "{", "}", "\n", "if", "self", ".", "flag", "==", "'train'", ":", "\n", "            ", "for", "idx", ",", "did", "in", "enumerate", "(", "open", "(", "self", ".", "img_txt_path", ")", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "image1_name", ",", "image2_name", ",", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "\n", "", "except", "ValueError", ":", "# Adhoc for test.", "\n", "                    ", "image_name", "=", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", "\n", "", "extract_name", "=", "image1_name", "[", "image1_name", ".", "rindex", "(", "'/'", ")", "+", "1", ":", "image1_name", ".", "rindex", "(", "'.'", ")", "]", "\n", "img1_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image1_name", ")", "\n", "img2_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image2_name", ")", "\n", "lbl_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_path", ",", "mask_name", ")", "\n", "img_label_pair_list", ".", "setdefault", "(", "idx", ",", "[", "img1_file", ",", "img2_file", ",", "lbl_file", ",", "extract_name", "]", ")", "\n", "\n", "", "", "if", "self", ".", "flag", "==", "'val'", ":", "\n", "            ", "self", ".", "label_ext", "=", "'.png'", "\n", "for", "idx", ",", "did", "in", "enumerate", "(", "open", "(", "self", ".", "img_txt_path", ")", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "image1_name", ",", "image2_name", ",", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "\n", "", "except", "ValueError", ":", "# Adhoc for test.", "\n", "                    ", "image_name", "=", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", "\n", "", "extract_name", "=", "image1_name", "[", "image1_name", ".", "rindex", "(", "'/'", ")", "+", "1", ":", "image1_name", ".", "rindex", "(", "'.'", ")", "]", "\n", "img1_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image1_name", ")", "\n", "img2_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image2_name", ")", "\n", "lbl_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_path", ",", "mask_name", ")", "\n", "img_label_pair_list", ".", "setdefault", "(", "idx", ",", "[", "img1_file", ",", "img2_file", ",", "lbl_file", ",", "extract_name", "]", ")", "\n", "\n", "", "", "return", "img_label_pair_list", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.Dataset.data_transform": [[114, 128], ["torch.from_numpy().float.astype", "torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy().float.astype", "torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "data_transform", "(", "self", ",", "img1", ",", "img2", ",", "lbl", ")", ":", "\n", "        ", "img1", "=", "img1", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# RGB -> BGR", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img1", "-=", "(", "128.793", ",", "108.267", ",", "98.685", ")", "\n", "img1", "=", "img1", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img1", "=", "torch", ".", "from_numpy", "(", "img1", ")", ".", "float", "(", ")", "\n", "img2", "=", "img2", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# RGB -> BGR", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "-=", "(", "166.814", ",", "136.916", ",", "122.396", ")", "\n", "img2", "=", "img2", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img2", "=", "torch", ".", "from_numpy", "(", "img2", ")", ".", "float", "(", ")", "\n", "lbl", "=", "torch", ".", "from_numpy", "(", "lbl", ")", ".", "long", "(", ")", "\n", "#lbl_reverse = torch.from_numpy(lbl_reverse).long()", "\n", "return", "img1", ",", "img2", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.Dataset.__getitem__": [[129, 159], ["PIL.Image.open", "PIL.Image.open", "numpy.array", "numpy.array", "numpy.array", "TSUNAMI.Dataset.transform_med", "TSUNAMI.Dataset.transform_med", "PIL.Image.open", "numpy.array", "PIL.Image.open", "numpy.array", "TSUNAMI.Dataset.data_transform", "str", "int", "int", "TSUNAMI.Dataset.transform_med", "TSUNAMI.Dataset.transform_med"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.data_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img1_path", ",", "img2_path", ",", "label_path", ",", "filename", "=", "self", ".", "img_label_path_pairs", "[", "index", "]", "\n", "####### load images #############", "\n", "img1", "=", "Image", ".", "open", "(", "img1_path", ")", "\n", "img2", "=", "Image", ".", "open", "(", "img2_path", ")", "\n", "height", ",", "width", ",", "_", "=", "np", ".", "array", "(", "img1", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "shape", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "           ", "img1", "=", "self", ".", "transform_med", "(", "img1", ")", "\n", "img2", "=", "self", ".", "transform_med", "(", "img2", ")", "\n", "", "img1", "=", "np", ".", "array", "(", "img1", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img2", "=", "np", ".", "array", "(", "img2", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "####### load labels ############", "\n", "if", "self", ".", "flag", "==", "'train'", ":", "\n", "\n", "            ", "label", "=", "Image", ".", "open", "(", "label_path", ")", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "                ", "label", "=", "self", ".", "transform_med", "(", "label", ")", "\n", "", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "if", "self", ".", "flag", "==", "'val'", ":", "\n", "            ", "label", "=", "Image", ".", "open", "(", "label_path", ")", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "               ", "label", "=", "self", ".", "transform_med", "(", "label", ")", "\n", "", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "img1", ",", "img2", ",", "label", "=", "self", ".", "data_transform", "(", "img1", ",", "img2", ",", "label", ")", "\n", "\n", "", "return", "img1", ",", "img2", ",", "label", ",", "str", "(", "filename", ")", ",", "int", "(", "height", ")", ",", "int", "(", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.Dataset.__len__": [[160, 163], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\n", "        ", "return", "len", "(", "self", ".", "img_label_path_pairs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.is_image_file": [[17, 19], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.pil_loader": [[20, 25], ["open", "PIL.Image.open", "img.convert"], "function", ["None"], ["", "def", "pil_loader", "(", "path", ")", ":", "\n", "# open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "            ", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.accimage_loader": [[26, 33], ["accimage.Image", "TSUNAMI.pil_loader"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.pil_loader"], ["", "", "", "def", "accimage_loader", "(", "path", ")", ":", "\n", "    ", "import", "accimage", "\n", "try", ":", "\n", "        ", "return", "accimage", ".", "Image", "(", "path", ")", "\n", "", "except", "IOError", ":", "\n", "# Potentially a decoding problem, fall back to PIL.Image", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.default_loader": [[34, 40], ["get_image_backend", "TSUNAMI.accimage_loader", "TSUNAMI.pil_loader"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.accimage_loader", "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.pil_loader"], ["", "", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "from", "torchvision", "import", "get_image_backend", "\n", "if", "get_image_backend", "(", ")", "==", "'accimage'", ":", "\n", "        ", "return", "accimage_loader", "(", "path", ")", "\n", "", "else", ":", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.get_pascal_labels": [[41, 43], ["numpy.asarray"], "function", ["None"], ["", "", "def", "get_pascal_labels", "(", ")", ":", "\n", "    ", "return", "np", ".", "asarray", "(", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "255", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.TSUNAMI.decode_segmap": [[44, 65], ["TSUNAMI.get_pascal_labels", "temp.copy", "temp.copy", "temp.copy", "range", "numpy.zeros", "matplotlib.imshow", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.get_pascal_labels"], ["", "def", "decode_segmap", "(", "temp", ",", "plot", "=", "False", ")", ":", "\n", "\n", "    ", "label_colours", "=", "get_pascal_labels", "(", ")", "\n", "r", "=", "temp", ".", "copy", "(", ")", "\n", "g", "=", "temp", ".", "copy", "(", ")", "\n", "b", "=", "temp", ".", "copy", "(", ")", "\n", "for", "l", "in", "range", "(", "0", ",", "2", ")", ":", "\n", "        ", "r", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "0", "]", "\n", "g", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "1", "]", "\n", "b", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "2", "]", "\n", "\n", "", "rgb", "=", "np", ".", "zeros", "(", "(", "temp", ".", "shape", "[", "0", "]", ",", "temp", ".", "shape", "[", "1", "]", ",", "3", ")", ")", "\n", "rgb", "[", ":", ",", ":", ",", "0", "]", "=", "r", "\n", "rgb", "[", ":", ",", ":", ",", "1", "]", "=", "g", "\n", "rgb", "[", ":", ",", ":", ",", "2", "]", "=", "b", "\n", "#rgb = np.resize(rgb,(321,321,3))", "\n", "if", "plot", ":", "\n", "        ", "plt", ".", "imshow", "(", "rgb", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.Dataset.__init__": [[86, 97], ["numpy.loadtxt", "CD2014.Dataset.get_img_label_path_pairs"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.get_img_label_path_pairs"], ["    ", "def", "__init__", "(", "self", ",", "img_path", ",", "label_path", ",", "file_name_txt_path", ",", "split_flag", ",", "transform", "=", "True", ",", "transform_med", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "label_path", "=", "label_path", "\n", "self", ".", "img_path", "=", "img_path", "\n", "#self.img2_path = img2_path", "\n", "self", ".", "img_txt_path", "=", "file_name_txt_path", "\n", "self", ".", "imgs_path_list", "=", "np", ".", "loadtxt", "(", "self", ".", "img_txt_path", ",", "dtype", "=", "str", ")", "\n", "self", ".", "flag", "=", "split_flag", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "transform_med", "=", "transform_med", "\n", "self", ".", "img_label_path_pairs", "=", "self", ".", "get_img_label_path_pairs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.Dataset.get_img_label_path_pairs": [[98, 137], ["enumerate", "enumerate", "enumerate", "open", "os.path.join", "os.path.join", "os.path.join", "img_label_pair_list.setdefault", "open", "os.path.join", "os.path.join", "os.path.join", "img_label_pair_list.setdefault", "open", "did.strip().split", "os.path.join", "os.path.join", "img_label_pair_list.setdefault", "did.strip().split", "did.strip().split", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex", "did.strip", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex"], "methods", ["None"], ["", "def", "get_img_label_path_pairs", "(", "self", ")", ":", "\n", "\n", "        ", "img_label_pair_list", "=", "{", "}", "\n", "if", "self", ".", "flag", "==", "'train'", ":", "\n", "            ", "for", "idx", ",", "did", "in", "enumerate", "(", "open", "(", "self", ".", "img_txt_path", ")", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "image1_name", ",", "image2_name", ",", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "\n", "", "except", "ValueError", ":", "# Adhoc for test.", "\n", "                    ", "image_name", "=", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", "\n", "", "extract_name", "=", "image1_name", "[", "image1_name", ".", "rindex", "(", "'/'", ")", "+", "1", ":", "image1_name", ".", "rindex", "(", "'.'", ")", "]", "\n", "#print extract_name", "\n", "img1_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image1_name", ")", "\n", "img2_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image2_name", ")", "\n", "lbl_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_path", ",", "mask_name", ")", "\n", "img_label_pair_list", ".", "setdefault", "(", "idx", ",", "[", "img1_file", ",", "img2_file", ",", "lbl_file", ",", "image2_name", "]", ")", "\n", "\n", "", "", "if", "self", ".", "flag", "==", "'val'", ":", "\n", "            ", "self", ".", "label_ext", "=", "'.png'", "\n", "for", "idx", ",", "did", "in", "enumerate", "(", "open", "(", "self", ".", "img_txt_path", ")", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "image1_name", ",", "image2_name", ",", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "\n", "", "except", "ValueError", ":", "# Adhoc for test.", "\n", "                    ", "image_name", "=", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", "\n", "", "extract_name", "=", "image1_name", "[", "image1_name", ".", "rindex", "(", "'/'", ")", "+", "1", ":", "image1_name", ".", "rindex", "(", "'.'", ")", "]", "\n", "#print extract_name", "\n", "img1_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image1_name", ")", "\n", "img2_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image2_name", ")", "\n", "lbl_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_path", ",", "mask_name", ")", "\n", "img_label_pair_list", ".", "setdefault", "(", "idx", ",", "[", "img1_file", ",", "img2_file", ",", "lbl_file", ",", "image2_name", "]", ")", "\n", "\n", "", "", "if", "self", ".", "flag", "==", "'test'", ":", "\n", "\n", "            ", "for", "idx", ",", "did", "in", "enumerate", "(", "open", "(", "self", ".", "img_txt_path", ")", ")", ":", "\n", "              ", "image1_name", ",", "image2_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "\n", "img1_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image1_name", ")", "\n", "img2_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image2_name", ")", "\n", "img_label_pair_list", ".", "setdefault", "(", "idx", ",", "[", "img1_file", ",", "img2_file", ",", "None", ",", "image2_name", "]", ")", "\n", "\n", "", "", "return", "img_label_pair_list", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.Dataset.data_transform": [[138, 153], ["torch.from_numpy().float.astype", "torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy().float.astype", "torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "data_transform", "(", "self", ",", "img1", ",", "img2", ",", "lbl", ")", ":", "\n", "        ", "img1", "=", "img1", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# RGB -> BGR", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img1", "-=", "cfg", ".", "T0_MEAN_VALUE", "\n", "img1", "=", "img1", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img1", "=", "torch", ".", "from_numpy", "(", "img1", ")", ".", "float", "(", ")", "\n", "img2", "=", "img2", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# RGB -> BGR", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "-=", "cfg", ".", "T1_MEAN_VALUE", "\n", "img2", "=", "img2", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img2", "=", "torch", ".", "from_numpy", "(", "img2", ")", ".", "float", "(", ")", "\n", "if", "self", ".", "flag", "!=", "'test'", ":", "\n", "          ", "lbl", "=", "torch", ".", "from_numpy", "(", "lbl", ")", ".", "long", "(", ")", "\n", "#lbl_reverse = torch.from_numpy(lbl_reverse).long()", "\n", "", "return", "img1", ",", "img2", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.Dataset.__getitem__": [[154, 188], ["PIL.Image.open", "PIL.Image.open", "numpy.array", "numpy.array", "numpy.array", "CD2014.Dataset.transform_med", "CD2014.Dataset.transform_med", "PIL.Image.open", "numpy.array", "numpy.zeros", "CD2014.Dataset.data_transform", "str", "int", "int", "CD2014.Dataset.transform_med"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.data_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img1_path", ",", "img2_path", ",", "label_path", ",", "filename", "=", "self", ".", "img_label_path_pairs", "[", "index", "]", "\n", "####### load images #############", "\n", "img1", "=", "Image", ".", "open", "(", "img1_path", ")", "\n", "img2", "=", "Image", ".", "open", "(", "img2_path", ")", "\n", "#print filename", "\n", "height", ",", "width", ",", "_", "=", "np", ".", "array", "(", "img1", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "shape", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "           ", "img1", "=", "self", ".", "transform_med", "(", "img1", ")", "\n", "img2", "=", "self", ".", "transform_med", "(", "img2", ")", "\n", "", "img1", "=", "np", ".", "array", "(", "img1", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img2", "=", "np", ".", "array", "(", "img2", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "####### load labels ############", "\n", "if", "self", ".", "flag", "==", "'train'", "or", "self", ".", "flag", "==", "'val'", ":", "\n", "\n", "            ", "label", "=", "Image", ".", "open", "(", "label_path", ")", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "                ", "label", "=", "self", ".", "transform_med", "(", "label", ")", "\n", "", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "else", ":", "\n", "            ", "label", "=", "np", ".", "zeros", "(", "(", "height", ",", "width", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "img1", ",", "img2", ",", "label", "=", "self", ".", "data_transform", "(", "img1", ",", "img2", ",", "label", ")", "\n", "\n", "", "''''''", "'''\n        if self.flag == 'val':\n            label = Image.open(label_path)\n            if self.transform_med != None:\n               label = self.transform_med(label)\n            label = np.array(label,dtype=np.int32)\n        '''", "''''''", "\n", "return", "img1", ",", "img2", ",", "label", ",", "str", "(", "filename", ")", ",", "int", "(", "height", ")", ",", "int", "(", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.Dataset.__len__": [[189, 192], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\n", "        ", "return", "len", "(", "self", ".", "img_label_path_pairs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.is_image_file": [[18, 20], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.pil_loader": [[21, 26], ["open", "PIL.Image.open", "img.convert"], "function", ["None"], ["", "def", "pil_loader", "(", "path", ")", ":", "\n", "# open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "            ", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.accimage_loader": [[27, 34], ["accimage.Image", "CD2014.pil_loader"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.pil_loader"], ["", "", "", "def", "accimage_loader", "(", "path", ")", ":", "\n", "    ", "import", "accimage", "\n", "try", ":", "\n", "        ", "return", "accimage", ".", "Image", "(", "path", ")", "\n", "", "except", "IOError", ":", "\n", "# Potentially a decoding problem, fall back to PIL.Image", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.default_loader": [[35, 41], ["get_image_backend", "CD2014.accimage_loader", "CD2014.pil_loader"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.accimage_loader", "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.pil_loader"], ["", "", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "from", "torchvision", "import", "get_image_backend", "\n", "if", "get_image_backend", "(", ")", "==", "'accimage'", ":", "\n", "        ", "return", "accimage_loader", "(", "path", ")", "\n", "", "else", ":", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.colorize_mask": [[49, 55], ["PIL.Image.fromarray().convert", "Image.fromarray().convert.putpalette", "PIL.Image.fromarray", "mask.astype"], "function", ["None"], ["def", "colorize_mask", "(", "mask", ")", ":", "\n", "# mask: numpy array of the mask", "\n", "    ", "new_mask", "=", "Image", ".", "fromarray", "(", "mask", ".", "astype", "(", "np", ".", "uint8", ")", ")", ".", "convert", "(", "'P'", ")", "\n", "new_mask", ".", "putpalette", "(", "palette", ")", "\n", "\n", "return", "new_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.get_pascal_labels": [[56, 58], ["numpy.asarray"], "function", ["None"], ["", "def", "get_pascal_labels", "(", ")", ":", "\n", "    ", "return", "np", ".", "asarray", "(", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "255", ",", "255", ",", "255", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CD2014.decode_segmap": [[59, 80], ["CD2014.get_pascal_labels", "temp.copy", "temp.copy", "temp.copy", "range", "numpy.zeros", "matplotlib.imshow", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.get_pascal_labels"], ["", "def", "decode_segmap", "(", "temp", ",", "plot", "=", "False", ")", ":", "\n", "\n", "    ", "label_colours", "=", "get_pascal_labels", "(", ")", "\n", "r", "=", "temp", ".", "copy", "(", ")", "\n", "g", "=", "temp", ".", "copy", "(", ")", "\n", "b", "=", "temp", ".", "copy", "(", ")", "\n", "for", "l", "in", "range", "(", "0", ",", "2", ")", ":", "\n", "        ", "r", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "0", "]", "\n", "g", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "1", "]", "\n", "b", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "2", "]", "\n", "\n", "", "rgb", "=", "np", ".", "zeros", "(", "(", "temp", ".", "shape", "[", "0", "]", ",", "temp", ".", "shape", "[", "1", "]", ",", "3", ")", ")", "\n", "rgb", "[", ":", ",", ":", ",", "0", "]", "=", "r", "\n", "rgb", "[", ":", ",", ":", ",", "1", "]", "=", "g", "\n", "rgb", "[", ":", ",", ":", ",", "2", "]", "=", "b", "\n", "#rgb = np.resize(rgb,(321,321,3))", "\n", "if", "plot", ":", "\n", "        ", "plt", ".", "imshow", "(", "rgb", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.Dataset.__init__": [[82, 93], ["numpy.loadtxt", "CMU.Dataset.get_img_label_path_pairs"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.get_img_label_path_pairs"], ["    ", "def", "__init__", "(", "self", ",", "img_path", ",", "label_path", ",", "file_name_txt_path", ",", "split_flag", ",", "transform", "=", "True", ",", "transform_med", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "label_path", "=", "label_path", "\n", "self", ".", "img_path", "=", "img_path", "\n", "#self.img2_path = img2_path", "\n", "self", ".", "img_txt_path", "=", "file_name_txt_path", "\n", "self", ".", "imgs_path_list", "=", "np", ".", "loadtxt", "(", "self", ".", "img_txt_path", ",", "dtype", "=", "str", ")", "\n", "self", ".", "flag", "=", "split_flag", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "transform_med", "=", "transform_med", "\n", "self", ".", "img_label_path_pairs", "=", "self", ".", "get_img_label_path_pairs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.Dataset.get_img_label_path_pairs": [[94, 123], ["enumerate", "enumerate", "open", "os.path.join", "os.path.join", "os.path.join", "img_label_pair_list.setdefault", "open", "os.path.join", "os.path.join", "os.path.join", "img_label_pair_list.setdefault", "did.strip().split", "did.strip().split", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex"], "methods", ["None"], ["", "def", "get_img_label_path_pairs", "(", "self", ")", ":", "\n", "\n", "        ", "img_label_pair_list", "=", "{", "}", "\n", "if", "self", ".", "flag", "==", "'train'", ":", "\n", "            ", "for", "idx", ",", "did", "in", "enumerate", "(", "open", "(", "self", ".", "img_txt_path", ")", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "image1_name", ",", "image2_name", ",", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "\n", "", "except", "ValueError", ":", "# Adhoc for test.", "\n", "                    ", "image_name", "=", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", "\n", "", "extract_name", "=", "image1_name", "[", "image1_name", ".", "rindex", "(", "'/'", ")", "+", "1", ":", "image1_name", ".", "rindex", "(", "'.'", ")", "]", "\n", "img1_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image1_name", ")", "\n", "img2_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image2_name", ")", "\n", "lbl_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_path", ",", "mask_name", ")", "\n", "img_label_pair_list", ".", "setdefault", "(", "idx", ",", "[", "img1_file", ",", "img2_file", ",", "lbl_file", ",", "image2_name", "]", ")", "\n", "\n", "", "", "if", "self", ".", "flag", "==", "'val'", ":", "\n", "            ", "self", ".", "label_ext", "=", "'.png'", "\n", "for", "idx", ",", "did", "in", "enumerate", "(", "open", "(", "self", ".", "img_txt_path", ")", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "image1_name", ",", "image2_name", ",", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "\n", "", "except", "ValueError", ":", "# Adhoc for test.", "\n", "                    ", "image_name", "=", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", "\n", "", "extract_name", "=", "image1_name", "[", "image1_name", ".", "rindex", "(", "'/'", ")", "+", "1", ":", "image1_name", ".", "rindex", "(", "'.'", ")", "]", "\n", "img1_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image1_name", ")", "\n", "img2_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image2_name", ")", "\n", "lbl_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_path", ",", "mask_name", ")", "\n", "img_label_pair_list", ".", "setdefault", "(", "idx", ",", "[", "img1_file", ",", "img2_file", ",", "lbl_file", ",", "image2_name", "]", ")", "\n", "\n", "", "", "return", "img_label_pair_list", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.Dataset.data_transform": [[124, 138], ["torch.from_numpy().float.astype", "torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy().float.astype", "torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "data_transform", "(", "self", ",", "img1", ",", "img2", ",", "lbl", ")", ":", "\n", "        ", "img1", "=", "img1", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# RGB -> BGR", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img1", "-=", "cfg", ".", "T0_MEAN_VALUE", "\n", "img1", "=", "img1", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img1", "=", "torch", ".", "from_numpy", "(", "img1", ")", ".", "float", "(", ")", "\n", "img2", "=", "img2", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# RGB -> BGR", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "-=", "cfg", ".", "T1_MEAN_VALUE", "\n", "img2", "=", "img2", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img2", "=", "torch", ".", "from_numpy", "(", "img2", ")", ".", "float", "(", ")", "\n", "lbl", "=", "torch", ".", "from_numpy", "(", "lbl", ")", ".", "long", "(", ")", "\n", "#lbl_reverse = torch.from_numpy(lbl_reverse).long()", "\n", "return", "img1", ",", "img2", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.Dataset.__getitem__": [[139, 169], ["PIL.Image.open", "PIL.Image.open", "numpy.array", "numpy.array", "numpy.array", "CMU.Dataset.transform_med", "CMU.Dataset.transform_med", "PIL.Image.open", "numpy.array", "PIL.Image.open", "numpy.array", "CMU.Dataset.data_transform", "str", "int", "int", "CMU.Dataset.transform_med", "CMU.Dataset.transform_med"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.data_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img1_path", ",", "img2_path", ",", "label_path", ",", "filename", "=", "self", ".", "img_label_path_pairs", "[", "index", "]", "\n", "####### load images #############", "\n", "img1", "=", "Image", ".", "open", "(", "img1_path", ")", "\n", "img2", "=", "Image", ".", "open", "(", "img2_path", ")", "\n", "height", ",", "width", ",", "_", "=", "np", ".", "array", "(", "img1", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "shape", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "           ", "img1", "=", "self", ".", "transform_med", "(", "img1", ")", "\n", "img2", "=", "self", ".", "transform_med", "(", "img2", ")", "\n", "", "img1", "=", "np", ".", "array", "(", "img1", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img2", "=", "np", ".", "array", "(", "img2", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "####### load labels ############", "\n", "if", "self", ".", "flag", "==", "'train'", ":", "\n", "\n", "            ", "label", "=", "Image", ".", "open", "(", "label_path", ")", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "                ", "label", "=", "self", ".", "transform_med", "(", "label", ")", "\n", "", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "if", "self", ".", "flag", "==", "'val'", ":", "\n", "            ", "label", "=", "Image", ".", "open", "(", "label_path", ")", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "               ", "label", "=", "self", ".", "transform_med", "(", "label", ")", "\n", "", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "img1", ",", "img2", ",", "label", "=", "self", ".", "data_transform", "(", "img1", ",", "img2", ",", "label", ")", "\n", "\n", "", "return", "img1", ",", "img2", ",", "label", ",", "str", "(", "filename", ")", ",", "int", "(", "height", ")", ",", "int", "(", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.Dataset.__len__": [[170, 173], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\n", "        ", "return", "len", "(", "self", ".", "img_label_path_pairs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.is_image_file": [[18, 20], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.pil_loader": [[21, 26], ["open", "PIL.Image.open", "img.convert"], "function", ["None"], ["", "def", "pil_loader", "(", "path", ")", ":", "\n", "# open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "            ", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.accimage_loader": [[27, 34], ["accimage.Image", "CMU.pil_loader"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.pil_loader"], ["", "", "", "def", "accimage_loader", "(", "path", ")", ":", "\n", "    ", "import", "accimage", "\n", "try", ":", "\n", "        ", "return", "accimage", ".", "Image", "(", "path", ")", "\n", "", "except", "IOError", ":", "\n", "# Potentially a decoding problem, fall back to PIL.Image", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.default_loader": [[35, 41], ["get_image_backend", "CMU.accimage_loader", "CMU.pil_loader"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.accimage_loader", "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.pil_loader"], ["", "", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "from", "torchvision", "import", "get_image_backend", "\n", "if", "get_image_backend", "(", ")", "==", "'accimage'", ":", "\n", "        ", "return", "accimage_loader", "(", "path", ")", "\n", "", "else", ":", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.colorize_mask": [[44, 50], ["PIL.Image.fromarray().convert", "Image.fromarray().convert.putpalette", "PIL.Image.fromarray", "mask.astype"], "function", ["None"], ["def", "colorize_mask", "(", "mask", ")", ":", "\n", "# mask: numpy array of the mask", "\n", "    ", "new_mask", "=", "Image", ".", "fromarray", "(", "mask", ".", "astype", "(", "np", ".", "uint8", ")", ")", ".", "convert", "(", "'P'", ")", "\n", "new_mask", ".", "putpalette", "(", "palette", ")", "\n", "\n", "return", "new_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.get_pascal_labels": [[51, 53], ["numpy.asarray"], "function", ["None"], ["", "def", "get_pascal_labels", "(", ")", ":", "\n", "    ", "return", "np", ".", "asarray", "(", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "255", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.CMU.decode_segmap": [[54, 75], ["CMU.get_pascal_labels", "temp.copy", "temp.copy", "temp.copy", "range", "numpy.zeros", "matplotlib.imshow", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.get_pascal_labels"], ["", "def", "decode_segmap", "(", "temp", ",", "plot", "=", "False", ")", ":", "\n", "\n", "    ", "label_colours", "=", "get_pascal_labels", "(", ")", "\n", "r", "=", "temp", ".", "copy", "(", ")", "\n", "g", "=", "temp", ".", "copy", "(", ")", "\n", "b", "=", "temp", ".", "copy", "(", ")", "\n", "for", "l", "in", "range", "(", "0", ",", "2", ")", ":", "\n", "        ", "r", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "0", "]", "\n", "g", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "1", "]", "\n", "b", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "2", "]", "\n", "\n", "", "rgb", "=", "np", ".", "zeros", "(", "(", "temp", ".", "shape", "[", "0", "]", ",", "temp", ".", "shape", "[", "1", "]", ",", "3", ")", ")", "\n", "rgb", "[", ":", ",", ":", ",", "0", "]", "=", "r", "\n", "rgb", "[", ":", ",", ":", ",", "1", "]", "=", "g", "\n", "rgb", "[", ":", ",", ":", ",", "2", "]", "=", "b", "\n", "#rgb = np.resize(rgb,(321,321,3))", "\n", "if", "plot", ":", "\n", "        ", "plt", ".", "imshow", "(", "rgb", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.__init__": [[72, 83], ["numpy.loadtxt", "GSV.Dataset.get_img_label_path_pairs"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.get_img_label_path_pairs"], ["    ", "def", "__init__", "(", "self", ",", "img_path", ",", "label_path", ",", "file_name_txt_path", ",", "split_flag", ",", "transform", "=", "True", ",", "transform_med", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "label_path", "=", "label_path", "\n", "self", ".", "img_path", "=", "img_path", "\n", "#self.img2_path = img2_path", "\n", "self", ".", "img_txt_path", "=", "file_name_txt_path", "\n", "self", ".", "imgs_path_list", "=", "np", ".", "loadtxt", "(", "self", ".", "img_txt_path", ",", "dtype", "=", "str", ")", "\n", "self", ".", "flag", "=", "split_flag", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "transform_med", "=", "transform_med", "\n", "self", ".", "img_label_path_pairs", "=", "self", ".", "get_img_label_path_pairs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.get_img_label_path_pairs": [[84, 113], ["enumerate", "enumerate", "open", "os.path.join", "os.path.join", "os.path.join", "img_label_pair_list.setdefault", "open", "os.path.join", "os.path.join", "os.path.join", "img_label_pair_list.setdefault", "did.strip().split", "did.strip().split", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex", "did.strip", "image1_name.rindex"], "methods", ["None"], ["", "def", "get_img_label_path_pairs", "(", "self", ")", ":", "\n", "\n", "        ", "img_label_pair_list", "=", "{", "}", "\n", "if", "self", ".", "flag", "==", "'train'", ":", "\n", "            ", "for", "idx", ",", "did", "in", "enumerate", "(", "open", "(", "self", ".", "img_txt_path", ")", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "image1_name", ",", "image2_name", ",", "mask_name", ",", "mask_reverse_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "\n", "", "except", "ValueError", ":", "# Adhoc for test.", "\n", "                    ", "image_name", "=", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", "\n", "", "extract_name", "=", "image1_name", "[", "image1_name", ".", "rindex", "(", "'/'", ")", "+", "1", ":", "image1_name", ".", "rindex", "(", "'.'", ")", "]", "\n", "img1_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image1_name", ")", "\n", "img2_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image2_name", ")", "\n", "lbl_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_path", ",", "mask_name", ")", "\n", "img_label_pair_list", ".", "setdefault", "(", "idx", ",", "[", "img1_file", ",", "img2_file", ",", "lbl_file", ",", "extract_name", "]", ")", "\n", "\n", "", "", "if", "self", ".", "flag", "==", "'val'", ":", "\n", "            ", "self", ".", "label_ext", "=", "'.png'", "\n", "for", "idx", ",", "did", "in", "enumerate", "(", "open", "(", "self", ".", "img_txt_path", ")", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "image1_name", ",", "image2_name", ",", "mask_name", ",", "mask_reverse_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "\n", "", "except", "ValueError", ":", "# Adhoc for test.", "\n", "                    ", "image_name", "=", "mask_name", "=", "did", ".", "strip", "(", "\"\\n\"", ")", "\n", "", "extract_name", "=", "image1_name", "[", "image1_name", ".", "rindex", "(", "'/'", ")", "+", "1", ":", "image1_name", ".", "rindex", "(", "'.'", ")", "]", "\n", "img1_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image1_name", ")", "\n", "img2_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_path", ",", "image2_name", ")", "\n", "lbl_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_path", ",", "mask_name", ")", "\n", "img_label_pair_list", ".", "setdefault", "(", "idx", ",", "[", "img1_file", ",", "img2_file", ",", "lbl_file", ",", "extract_name", "]", ")", "\n", "\n", "", "", "return", "img_label_pair_list", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.data_transform": [[114, 128], ["torch.from_numpy().float.astype", "torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy().float.astype", "torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "data_transform", "(", "self", ",", "img1", ",", "img2", ",", "lbl", ")", ":", "\n", "        ", "img1", "=", "img1", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# RGB -> BGR", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img1", "-=", "cfg", ".", "T0_MEAN_VALUE", "\n", "img1", "=", "img1", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img1", "=", "torch", ".", "from_numpy", "(", "img1", ")", ".", "float", "(", ")", "\n", "img2", "=", "img2", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "# RGB -> BGR", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "-=", "cfg", ".", "T1_MEAN_VALUE", "\n", "img2", "=", "img2", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "img2", "=", "torch", ".", "from_numpy", "(", "img2", ")", ".", "float", "(", ")", "\n", "lbl", "=", "torch", ".", "from_numpy", "(", "lbl", ")", ".", "long", "(", ")", "\n", "#lbl_reverse = torch.from_numpy(lbl_reverse).long()", "\n", "return", "img1", ",", "img2", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.__getitem__": [[129, 159], ["PIL.Image.open", "PIL.Image.open", "numpy.array", "numpy.array", "numpy.array", "GSV.Dataset.transform_med", "GSV.Dataset.transform_med", "PIL.Image.open", "numpy.array", "PIL.Image.open", "numpy.array", "GSV.Dataset.data_transform", "str", "int", "int", "GSV.Dataset.transform_med", "GSV.Dataset.transform_med"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.data_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img1_path", ",", "img2_path", ",", "label_path", ",", "filename", "=", "self", ".", "img_label_path_pairs", "[", "index", "]", "\n", "####### load images #############", "\n", "img1", "=", "Image", ".", "open", "(", "img1_path", ")", "\n", "img2", "=", "Image", ".", "open", "(", "img2_path", ")", "\n", "height", ",", "width", ",", "_", "=", "np", ".", "array", "(", "img1", ",", "dtype", "=", "np", ".", "uint8", ")", ".", "shape", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "           ", "img1", "=", "self", ".", "transform_med", "(", "img1", ")", "\n", "img2", "=", "self", ".", "transform_med", "(", "img2", ")", "\n", "", "img1", "=", "np", ".", "array", "(", "img1", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "img2", "=", "np", ".", "array", "(", "img2", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "####### load labels ############", "\n", "if", "self", ".", "flag", "==", "'train'", ":", "\n", "\n", "            ", "label", "=", "Image", ".", "open", "(", "label_path", ")", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "                ", "label", "=", "self", ".", "transform_med", "(", "label", ")", "\n", "", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "if", "self", ".", "flag", "==", "'val'", ":", "\n", "            ", "label", "=", "Image", ".", "open", "(", "label_path", ")", "\n", "if", "self", ".", "transform_med", "!=", "None", ":", "\n", "               ", "label", "=", "self", ".", "transform_med", "(", "label", ")", "\n", "", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "img1", ",", "img2", ",", "label", "=", "self", ".", "data_transform", "(", "img1", ",", "img2", ",", "label", ")", "\n", "\n", "", "return", "img1", ",", "img2", ",", "label", ",", "str", "(", "filename", ")", ",", "int", "(", "height", ")", ",", "int", "(", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.Dataset.__len__": [[160, 163], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\n", "        ", "return", "len", "(", "self", ".", "img_label_path_pairs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.is_image_file": [[18, 20], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.pil_loader": [[21, 26], ["open", "PIL.Image.open", "img.convert"], "function", ["None"], ["", "def", "pil_loader", "(", "path", ")", ":", "\n", "# open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "            ", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.accimage_loader": [[27, 34], ["accimage.Image", "GSV.pil_loader"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.pil_loader"], ["", "", "", "def", "accimage_loader", "(", "path", ")", ":", "\n", "    ", "import", "accimage", "\n", "try", ":", "\n", "        ", "return", "accimage", ".", "Image", "(", "path", ")", "\n", "", "except", "IOError", ":", "\n", "# Potentially a decoding problem, fall back to PIL.Image", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.default_loader": [[35, 41], ["get_image_backend", "GSV.accimage_loader", "GSV.pil_loader"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.accimage_loader", "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.pil_loader"], ["", "", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "from", "torchvision", "import", "get_image_backend", "\n", "if", "get_image_backend", "(", ")", "==", "'accimage'", ":", "\n", "        ", "return", "accimage_loader", "(", "path", ")", "\n", "", "else", ":", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.get_pascal_labels": [[42, 44], ["numpy.asarray"], "function", ["None"], ["", "", "def", "get_pascal_labels", "(", ")", ":", "\n", "    ", "return", "np", ".", "asarray", "(", "[", "[", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "255", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.decode_segmap": [[45, 66], ["GSV.get_pascal_labels", "temp.copy", "temp.copy", "temp.copy", "range", "numpy.zeros", "matplotlib.imshow", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.dataset.GSV.get_pascal_labels"], ["", "def", "decode_segmap", "(", "temp", ",", "plot", "=", "False", ")", ":", "\n", "\n", "    ", "label_colours", "=", "get_pascal_labels", "(", ")", "\n", "r", "=", "temp", ".", "copy", "(", ")", "\n", "g", "=", "temp", ".", "copy", "(", ")", "\n", "b", "=", "temp", ".", "copy", "(", ")", "\n", "for", "l", "in", "range", "(", "0", ",", "2", ")", ":", "\n", "        ", "r", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "0", "]", "\n", "g", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "1", "]", "\n", "b", "[", "temp", "==", "l", "]", "=", "label_colours", "[", "l", ",", "2", "]", "\n", "\n", "", "rgb", "=", "np", ".", "zeros", "(", "(", "temp", ".", "shape", "[", "0", "]", ",", "temp", ".", "shape", "[", "1", "]", ",", "3", ")", ")", "\n", "rgb", "[", ":", ",", ":", ",", "0", "]", "=", "r", "\n", "rgb", "[", ":", ",", ":", ",", "1", "]", "=", "g", "\n", "rgb", "[", ":", ",", ":", ",", "2", "]", "=", "b", "\n", "#rgb = np.resize(rgb,(321,321,3))", "\n", "if", "plot", ":", "\n", "        ", "plt", ".", "imshow", "(", "rgb", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.deeplab_msc_coco.deeplab.__init__": [[15, 69], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "deeplab", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "fc6", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "3", ",", "dilation", "=", "12", ",", "padding", "=", "12", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", ")", "\n", ")", "\n", "self", ".", "fc7", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.deeplab_msc_coco.deeplab.forward": [[71, 82], ["deeplab_msc_coco.deeplab.conv1", "deeplab_msc_coco.deeplab.conv2", "deeplab_msc_coco.deeplab.conv3", "deeplab_msc_coco.deeplab.conv4", "deeplab_msc_coco.deeplab.conv5", "deeplab_msc_coco.deeplab.fc6", "deeplab_msc_coco.deeplab.fc7"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "input", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "x", "=", "self", ".", "fc6", "(", "x", ")", "\n", "fc7_features", "=", "self", ".", "fc7", "(", "x", ")", "\n", "#out = self.fc8(x)", "\n", "return", "fc7_features", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.deeplab_msc_coco.Deeplab_MS_Att_Scale.__init__": [[85, 97], ["torch.Module.__init__", "deeplab_msc_coco.deeplab", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "class_number", "=", "21", ")", ":", "\n", "        ", "super", "(", "Deeplab_MS_Att_Scale", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "truck_branch", "=", "deeplab", "(", ")", "\n", "self", ".", "scale_attention_branch", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "1024", "*", "3", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "3", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n", "self", ".", "fc8", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "class_number", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.deeplab_msc_coco.Deeplab_MS_Att_Scale.forward": [[98, 132], ["torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "deeplab_msc_coco.Deeplab_MS_Att_Scale.interp1", "deeplab_msc_coco.Deeplab_MS_Att_Scale.interp2", "deeplab_msc_coco.Deeplab_MS_Att_Scale.truck_branch", "deeplab_msc_coco.Deeplab_MS_Att_Scale.truck_branch", "deeplab_msc_coco.Deeplab_MS_Att_Scale.truck_branch", "out.append", "out.append", "out.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.softmax", "torch.softmax", "torch.softmax", "deeplab_msc_coco.Deeplab_MS_Att_Scale.fc8", "deeplab_msc_coco.Deeplab_MS_Att_Scale.interp3", "deeplab_msc_coco.Deeplab_MS_Att_Scale.interp3", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "x.size", "deeplab_msc_coco.Deeplab_MS_Att_Scale.interp3", "deeplab_msc_coco.Deeplab_MS_Att_Scale.interp3", "deeplab_msc_coco.Deeplab_MS_Att_Scale.scale_attention_branch", "deeplab_msc_coco.Deeplab_MS_Att_Scale.fc8", "deeplab_msc_coco.Deeplab_MS_Att_Scale.fc8", "deeplab_msc_coco.Deeplab_MS_Att_Scale.size", "deeplab_msc_coco.Deeplab_MS_Att_Scale.size", "scale_att_mask[].expand_as", "scale_att_mask[].expand_as", "scale_att_mask[].expand_as", "deeplab_msc_coco.outS", "deeplab_msc_coco.outS", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.deeplab_msc_coco.outS", "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.deeplab_msc_coco.outS"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "input_size", "=", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "self", ".", "interp1", "=", "nn", ".", "Upsample", "(", "size", "=", "(", "int", "(", "input_size", "*", "0.75", ")", "+", "1", ",", "int", "(", "input_size", "*", "0.75", ")", "+", "1", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "self", ".", "interp2", "=", "nn", ".", "Upsample", "(", "size", "=", "(", "int", "(", "input_size", "*", "0.5", ")", "+", "1", ",", "int", "(", "input_size", "*", "0.5", ")", "+", "1", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "self", ".", "interp3", "=", "nn", ".", "Upsample", "(", "size", "=", "(", "outS", "(", "input_size", ")", ",", "outS", "(", "input_size", ")", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "out", "=", "[", "]", "\n", "x75", "=", "self", ".", "interp1", "(", "x", ")", "\n", "x50", "=", "self", ".", "interp2", "(", "x", ")", "\n", "\n", "fc7_x", "=", "self", ".", "truck_branch", "(", "x", ")", "\n", "fc7_x75", "=", "self", ".", "truck_branch", "(", "x75", ")", "\n", "fc7_x50", "=", "self", ".", "truck_branch", "(", "x50", ")", "\n", "\n", "out", ".", "append", "(", "fc7_x", ")", "\n", "out", ".", "append", "(", "self", ".", "interp3", "(", "fc7_x75", ")", ")", "\n", "out", ".", "append", "(", "self", ".", "interp3", "(", "fc7_x50", ")", ")", "\n", "out_cat", "=", "torch", ".", "cat", "(", "out", ",", "dim", "=", "1", ")", "\n", "#out_cat = torch.stack(out,dim=1)", "\n", "#print out_cat.size()", "\n", "scale_att_mask", "=", "F", ".", "softmax", "(", "self", ".", "scale_attention_branch", "(", "out_cat", ")", ")", "\n", "\n", "score_x", "=", "self", ".", "fc8", "(", "fc7_x", ")", "\n", "score_x50", "=", "self", ".", "interp3", "(", "self", ".", "fc8", "(", "fc7_x50", ")", ")", "\n", "score_x75", "=", "self", ".", "interp3", "(", "self", ".", "fc8", "(", "fc7_x75", ")", ")", "\n", "assert", "score_x", ".", "size", "(", ")", "==", "score_x50", ".", "size", "(", ")", "\n", "\n", "score_att_x", "=", "torch", ".", "mul", "(", "score_x", ",", "scale_att_mask", "[", ":", ",", "0", ",", ":", ",", ":", "]", ".", "expand_as", "(", "score_x", ")", ")", "\n", "score_att_x_075", "=", "torch", ".", "mul", "(", "score_x75", ",", "scale_att_mask", "[", ":", ",", "1", ",", ":", ",", ":", "]", ".", "expand_as", "(", "score_x75", ")", ")", "\n", "score_att_x_050", "=", "torch", ".", "mul", "(", "score_x50", ",", "scale_att_mask", "[", ":", ",", "2", ",", ":", ",", ":", "]", ".", "expand_as", "(", "score_x50", ")", ")", "\n", "\n", "score_final", "=", "score_att_x", "+", "score_att_x_075", "+", "score_att_x_050", "\n", "#out_final = F.upsample_bilinear(score_final, x.size()[2:])", "\n", "return", "score_final", ",", "scale_att_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.deeplab_msc_coco.Deeplab_MS_Att_Scale.init_parameters_from_deeplab": [[133, 168], ["enumerate", "pretrain_vgg16_1024.truck_branch.fc6[].weight.data.view", "pretrain_vgg16_1024.truck_branch.fc6[].bias.data.view", "pretrain_vgg16_1024.truck_branch.fc7[].weight.data.view", "pretrain_vgg16_1024.truck_branch.fc7[].bias.data.view", "deeplab_msc_coco.Deeplab_MS_Att_Scale.fc8.weight.data.normal_", "deeplab_msc_coco.Deeplab_MS_Att_Scale.fc8.bias.data.fill_", "zip", "zip", "deeplab_msc_coco.Deeplab_MS_Att_Scale.truck_branch.fc6[].weight.size", "deeplab_msc_coco.Deeplab_MS_Att_Scale.truck_branch.fc6[].bias.size", "deeplab_msc_coco.Deeplab_MS_Att_Scale.truck_branch.fc7[].weight.size", "deeplab_msc_coco.Deeplab_MS_Att_Scale.truck_branch.fc7[].bias.size", "isinstance", "isinstance", "l1.weight.size", "l2.weight.size", "l1.bias.size", "l2.bias.size"], "methods", ["None"], ["", "def", "init_parameters_from_deeplab", "(", "self", ",", "pretrain_vgg16_1024", ")", ":", "\n", "\n", "##### init parameter using pretrain vgg16 model ###########", "\n", "        ", "conv_blocks", "=", "[", "self", ".", "truck_branch", ".", "conv1", ",", "\n", "self", ".", "truck_branch", ".", "conv2", ",", "\n", "self", ".", "truck_branch", ".", "conv3", ",", "\n", "self", ".", "truck_branch", ".", "conv4", ",", "\n", "self", ".", "truck_branch", ".", "conv5", "]", "\n", "\n", "pretrain_conv_blocks", "=", "[", "pretrain_vgg16_1024", ".", "truck_branch", ".", "conv1", ",", "\n", "pretrain_vgg16_1024", ".", "truck_branch", ".", "conv2", ",", "\n", "pretrain_vgg16_1024", ".", "truck_branch", ".", "conv3", ",", "\n", "pretrain_vgg16_1024", ".", "truck_branch", ".", "conv4", ",", "\n", "pretrain_vgg16_1024", ".", "truck_branch", ".", "conv5", "]", "\n", "\n", "for", "idx", ",", "(", "conv_block", ",", "pretrain_conv_block", ")", "in", "enumerate", "(", "zip", "(", "conv_blocks", ",", "pretrain_conv_blocks", ")", ")", ":", "\n", "            ", "for", "l1", ",", "l2", "in", "zip", "(", "pretrain_conv_block", ",", "conv_block", ")", ":", "\n", "                ", "if", "isinstance", "(", "l1", ",", "nn", ".", "Conv2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "Conv2d", ")", ":", "\n", "# print idx, l1, l2", "\n", "                    ", "assert", "l1", ".", "weight", ".", "size", "(", ")", "==", "l2", ".", "weight", ".", "size", "(", ")", "\n", "assert", "l1", ".", "bias", ".", "size", "(", ")", "==", "l2", ".", "bias", ".", "size", "(", ")", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "\n", "\n", "####### init fc parameters (transplant) ##############", "\n", "", "", "", "self", ".", "truck_branch", ".", "fc6", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", ".", "truck_branch", ".", "fc6", "[", "0", "]", ".", "weight", ".", "data", ".", "view", "(", "self", ".", "truck_branch", ".", "fc6", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "truck_branch", ".", "fc6", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", ".", "truck_branch", ".", "fc6", "[", "0", "]", ".", "bias", ".", "data", ".", "view", "(", "self", ".", "truck_branch", ".", "fc6", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "self", ".", "truck_branch", ".", "fc7", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", ".", "truck_branch", ".", "fc7", "[", "0", "]", ".", "weight", ".", "data", ".", "view", "(", "self", ".", "truck_branch", ".", "fc7", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "truck_branch", ".", "fc7", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", ".", "truck_branch", ".", "fc7", "[", "0", "]", ".", "bias", ".", "data", ".", "view", "(", "self", ".", "truck_branch", ".", "fc7", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "self", ".", "scale_attention_branch", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", ".", "scale_attention_branch", "[", "0", "]", ".", "weight", ".", "data", "\n", "self", ".", "scale_attention_branch", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", ".", "scale_attention_branch", "[", "0", "]", ".", "bias", ".", "data", "\n", "self", ".", "scale_attention_branch", "[", "3", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", ".", "scale_attention_branch", "[", "3", "]", ".", "weight", ".", "data", "\n", "self", ".", "scale_attention_branch", "[", "3", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", ".", "scale_attention_branch", "[", "3", "]", ".", "bias", ".", "data", "\n", "self", ".", "fc8", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "fc8", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.deeplab_msc_coco.outS": [[6, 12], ["int", "int", "numpy.ceil"], "function", ["None"], ["def", "outS", "(", "i", ")", ":", "\n", "    ", "i", "=", "int", "(", "i", ")", "\n", "i", "=", "(", "i", "+", "1", ")", "/", "2", "\n", "i", "=", "int", "(", "np", ".", "ceil", "(", "(", "i", "+", "1", ")", "/", "2.0", ")", ")", "\n", "i", "=", "(", "i", "+", "1", ")", "/", "2", "\n", "return", "i", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.vgg1024.vgg1024.__init__": [[8, 22], ["torch.Module.__init__", "vgg1024.vgg1024._make_layers", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__", "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.vgg1024.vgg1024._make_layers"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "super", "(", "vgg1024", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "'D'", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "1024", ",", "3", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "1024", ",", "1024", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "#nn.AvgPool2d(kernel_size=3,stride=3),", "\n", "nn", ".", "Conv2d", "(", "1024", ",", "21", ",", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.vgg1024.vgg1024.forward": [[24, 29], ["vgg1024.vgg1024.features", "vgg1024.vgg1024.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "features", "(", "input", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.vgg1024.vgg1024._make_layers": [[30, 48], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ",", "batch_norm", "=", "False", ")", ":", "\n", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "v", "in", "cfg", ":", "\n", "            ", "if", "v", "==", "'M'", "or", "v", "==", "'A'", ":", "\n", "                ", "if", "v", "==", "'M'", ":", "\n", "                   ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                    ", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "]", "\n", "", "", "else", ":", "\n", "                ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.vgg1024.vgg1024.init_parameters": [[49, 76], ["list", "enumerate", "pretrain_vgg16.classifier[].weight.data.view", "pretrain_vgg16.classifier[].bias.data.view", "pretrain_vgg16.classifier[].weight.data.view", "pretrain_vgg16.classifier[].bias.data.view", "pretrain_vgg16_1024.features.children", "zip", "vgg1024.vgg1024.fc6[].weight.size", "vgg1024.vgg1024.fc6[].bias.size", "vgg1024.vgg1024.fc7[].weight.size", "vgg1024.vgg1024.fc7[].bias.size", "isinstance", "isinstance", "l1.weight.size", "l2.weight.size", "l1.bias.size", "l2.bias.size"], "methods", ["None"], ["", "def", "init_parameters", "(", "self", ",", "pretrain_vgg16_1024", ")", ":", "\n", "\n", "##### init parameter using pretrain vgg16 model ###########", "\n", "        ", "conv_blocks", "=", "[", "self", ".", "conv1", ",", "\n", "self", ".", "conv2", ",", "\n", "self", ".", "conv3", ",", "\n", "self", ".", "conv4", ",", "\n", "self", ".", "conv5", "]", "\n", "\n", "ranges", "=", "[", "[", "0", ",", "4", "]", ",", "[", "5", ",", "9", "]", ",", "[", "10", ",", "16", "]", ",", "[", "17", ",", "23", "]", ",", "[", "24", ",", "29", "]", "]", "\n", "features", "=", "list", "(", "pretrain_vgg16_1024", ".", "features", ".", "children", "(", ")", ")", "\n", "\n", "for", "idx", ",", "conv_block", "in", "enumerate", "(", "conv_blocks", ")", ":", "\n", "            ", "for", "l1", ",", "l2", "in", "zip", "(", "features", "[", "ranges", "[", "idx", "]", "[", "0", "]", ":", "ranges", "[", "idx", "]", "[", "1", "]", "]", ",", "conv_block", ")", ":", "\n", "                ", "if", "isinstance", "(", "l1", ",", "nn", ".", "Conv2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "Conv2d", ")", ":", "\n", "# print idx, l1, l2", "\n", "                    ", "assert", "l1", ".", "weight", ".", "size", "(", ")", "==", "l2", ".", "weight", ".", "size", "(", ")", "\n", "assert", "l1", ".", "bias", ".", "size", "(", ")", "==", "l2", ".", "bias", ".", "size", "(", ")", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "\n", "\n", "####### init fc parameters (transplant) ##############", "\n", "\n", "", "", "", "self", ".", "fc6", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16", ".", "classifier", "[", "0", "]", ".", "weight", ".", "data", ".", "view", "(", "self", ".", "fc6", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "fc6", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16", ".", "classifier", "[", "0", "]", ".", "bias", ".", "data", ".", "view", "(", "self", ".", "fc6", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "self", ".", "fc7", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16", ".", "classifier", "[", "3", "]", ".", "weight", ".", "data", ".", "view", "(", "self", ".", "fc7", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "fc7", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16", ".", "classifier", "[", "3", "]", ".", "bias", ".", "data", ".", "view", "(", "self", ".", "fc7", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.model.vgg1024.vgg_1024": [[84, 88], ["VGG", "make_layers"], "function", ["None"], ["def", "vgg_1024", "(", ")", ":", "\n", "\n", "    ", "model", "=", "VGG", "(", "make_layers", "(", "cfg", "[", "'D'", "]", ")", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.fcn32s_tiny.fcn32s.__init__": [[10, 59], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Softmax2d", "torch.Softmax2d", "torch.Softmax2d", "torch.Softmax2d", "layer.l2normalization"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "distance_flag", ")", ":", "\n", "\n", "        ", "super", "(", "fcn32s", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", ")", "\n", "self", ".", "embedding_layer", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", "\n", "if", "distance_flag", "==", "'softmax'", ":", "\n", "           ", "self", ".", "fc8", "=", "nn", ".", "Softmax2d", "(", ")", "\n", "", "if", "distance_flag", "==", "'l2'", ":", "\n", "           ", "self", ".", "fc8", "=", "fun", ".", "l2normalization", "(", "scale", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.fcn32s_tiny.fcn32s.forward": [[60, 70], ["fcn32s_tiny.fcn32s.conv1", "fcn32s_tiny.fcn32s.conv2", "fcn32s_tiny.fcn32s.conv3", "fcn32s_tiny.fcn32s.conv4", "fcn32s_tiny.fcn32s.conv5", "fcn32s_tiny.fcn32s.embedding_layer", "fcn32s_tiny.fcn32s.fc8"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "x", "=", "self", ".", "embedding_layer", "(", "x", ")", "\n", "embedding_feature", "=", "self", ".", "fc8", "(", "x", ")", "\n", "return", "embedding_feature", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.fcn32s_tiny.SiameseNet.__init__": [[72, 75], ["torch.Module.__init__", "fcn32s_tiny.fcn32s"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "distance_flag", "=", "'softmax'", ")", ":", "\n", "        ", "super", "(", "SiameseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "CNN", "=", "fcn32s", "(", "distance_flag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.fcn32s_tiny.SiameseNet.forward": [[76, 80], ["fcn32s_tiny.SiameseNet.CNN", "fcn32s_tiny.SiameseNet.CNN"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "t0", ",", "t1", ")", ":", "\n", "        ", "out_t0_conv5", "=", "self", ".", "CNN", "(", "t0", ")", "\n", "out_t1_conv5", "=", "self", ".", "CNN", "(", "t1", ")", "\n", "return", "[", "out_t0_conv5", ",", "out_t1_conv5", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.fcn32s_tiny.SiameseNet.init_parameters": [[81, 107], ["list", "enumerate", "torch.kaiming_uniform", "torch.kaiming_uniform", "torch.kaiming_uniform", "torch.kaiming_uniform", "torch.constant", "torch.constant", "torch.constant", "torch.constant", "pretrain_vgg16.features.children", "zip", "isinstance", "isinstance", "l1.weight.size", "l2.weight.size", "l1.bias.size", "l2.bias.size"], "methods", ["None"], ["", "def", "init_parameters", "(", "self", ",", "pretrain_vgg16", ")", ":", "\n", "\n", "##### init parameter using pretrain vgg16 model ###########", "\n", "        ", "conv_blocks", "=", "[", "self", ".", "CNN", ".", "conv1", ",", "\n", "self", ".", "CNN", ".", "conv2", ",", "\n", "self", ".", "CNN", ".", "conv3", ",", "\n", "self", ".", "CNN", ".", "conv4", ",", "\n", "self", ".", "CNN", ".", "conv5", "]", "\n", "\n", "ranges", "=", "[", "[", "0", ",", "4", "]", ",", "[", "5", ",", "9", "]", ",", "[", "10", ",", "16", "]", ",", "[", "17", ",", "23", "]", ",", "[", "24", ",", "29", "]", "]", "\n", "features", "=", "list", "(", "pretrain_vgg16", ".", "features", ".", "children", "(", ")", ")", "\n", "\n", "for", "idx", ",", "conv_block", "in", "enumerate", "(", "conv_blocks", ")", ":", "\n", "            ", "for", "l1", ",", "l2", "in", "zip", "(", "features", "[", "ranges", "[", "idx", "]", "[", "0", "]", ":", "ranges", "[", "idx", "]", "[", "1", "]", "]", ",", "conv_block", ")", ":", "\n", "                ", "if", "isinstance", "(", "l1", ",", "nn", ".", "Conv2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "Conv2d", ")", ":", "\n", "# print idx, l1, l2", "\n", "                    ", "assert", "l1", ".", "weight", ".", "size", "(", ")", "==", "l2", ".", "weight", ".", "size", "(", ")", "\n", "assert", "l1", ".", "bias", ".", "size", "(", ")", "==", "l2", ".", "bias", ".", "size", "(", ")", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "\n", "\n", "", "", "", "init", ".", "kaiming_uniform", "(", "self", ".", "CNN", ".", "embedding_layer", ".", "weight", ".", "data", ",", "mode", "=", "'fan_in'", ")", "\n", "init", ".", "constant", "(", "self", ".", "CNN", ".", "embedding_layer", ".", "bias", ".", "data", ",", "0", ")", "\n", "\n", "####### init fc parameters (transplant) ##############", "\n", "''''''"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.fcn32s_tiny.get_upsampling_weight": [[119, 133], ["numpy.zeros", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "abs", "abs", "range", "range"], "function", ["None"], ["", "", "def", "get_upsampling_weight", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ")", ":", "\n", "    ", "\"\"\"Make a 2D bilinear kernel suitable for upsampling\"\"\"", "\n", "factor", "=", "(", "kernel_size", "+", "1", ")", "//", "2", "\n", "if", "kernel_size", "%", "2", "==", "1", ":", "\n", "        ", "center", "=", "factor", "-", "1", "\n", "", "else", ":", "\n", "        ", "center", "=", "factor", "-", "0.5", "\n", "", "og", "=", "np", ".", "ogrid", "[", ":", "kernel_size", ",", ":", "kernel_size", "]", "\n", "filt", "=", "(", "1", "-", "abs", "(", "og", "[", "0", "]", "-", "center", ")", "/", "factor", ")", "*", "(", "1", "-", "abs", "(", "og", "[", "1", "]", "-", "center", ")", "/", "factor", ")", "\n", "weight", "=", "np", ".", "zeros", "(", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "kernel_size", ")", ",", "\n", "dtype", "=", "np", ".", "float64", ")", "\n", "weight", "[", "range", "(", "in_channels", ")", ",", "range", "(", "out_channels", ")", ",", ":", ",", ":", "]", "=", "filt", "\n", "return", "torch", ".", "from_numpy", "(", "weight", ")", ".", "float", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.deeplab_V2.__init__": [[28, 117], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "deeplab_V2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "3", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "64", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "128", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "128", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "256", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "\n", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "3", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "####### multi-scale contexts #######", "\n", "####### dialtion = 6 ##########", "\n", "self", ".", "fc6_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "3", ",", "dilation", "=", "6", ",", "padding", "=", "6", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "p", "=", "0.5", ")", "\n", ")", "\n", "self", ".", "fc7_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "p", "=", "0.5", ")", "\n", ")", "\n", "####### dialtion = 12 ##########", "\n", "self", ".", "fc6_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "3", ",", "dilation", "=", "12", ",", "padding", "=", "12", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "p", "=", "0.5", ")", "\n", ")", "\n", "self", ".", "fc7_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "p", "=", "0.5", ")", "\n", ")", "\n", "####### dialtion = 18 ##########", "\n", "self", ".", "fc6_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "3", ",", "dilation", "=", "18", ",", "padding", "=", "18", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "p", "=", "0.5", ")", "\n", ")", "\n", "self", ".", "fc7_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "p", "=", "0.5", ")", "\n", ")", "\n", "####### dialtion = 24 ##########", "\n", "self", ".", "fc6_4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "512", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "3", ",", "dilation", "=", "24", ",", "padding", "=", "24", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "p", "=", "0.5", ")", "\n", ")", "\n", "self", ".", "fc7_4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "1024", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "p", "=", "0.5", ")", "\n", ")", "\n", "self", ".", "embedding_layer", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "512", ",", "kernel_size", "=", "1", ")", "\n", "#self.fc8 = nn.Softmax2d()", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.deeplab_V2.forward": [[120, 142], ["deeplab_v2.deeplab_V2.conv1", "deeplab_v2.deeplab_V2.conv2", "deeplab_v2.deeplab_V2.conv3", "deeplab_v2.deeplab_V2.conv4", "deeplab_v2.deeplab_V2.conv5", "deeplab_v2.deeplab_V2.fc6_1", "deeplab_v2.deeplab_V2.fc7_1", "deeplab_v2.deeplab_V2.fc6_2", "deeplab_v2.deeplab_V2.fc7_2", "deeplab_v2.deeplab_V2.fc6_3", "deeplab_v2.deeplab_V2.fc7_3", "deeplab_v2.deeplab_V2.fc6_4", "deeplab_v2.deeplab_V2.fc7_4", "deeplab_v2.deeplab_V2.embedding_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "conv3_feature", "=", "self", ".", "conv3", "(", "x", ")", "\n", "conv4_feature", "=", "self", ".", "conv4", "(", "conv3_feature", ")", "\n", "conv5_feature", "=", "self", ".", "conv5", "(", "conv4_feature", ")", "\n", "fc6_1", "=", "self", ".", "fc6_1", "(", "conv5_feature", ")", "\n", "fc7_1", "=", "self", ".", "fc7_1", "(", "fc6_1", ")", "\n", "fc6_2", "=", "self", ".", "fc6_2", "(", "conv5_feature", ")", "\n", "fc7_2", "=", "self", ".", "fc7_2", "(", "fc6_2", ")", "\n", "fc6_3", "=", "self", ".", "fc6_3", "(", "conv5_feature", ")", "\n", "fc7_3", "=", "self", ".", "fc7_3", "(", "fc6_3", ")", "\n", "fc6_4", "=", "self", ".", "fc6_4", "(", "conv5_feature", ")", "\n", "fc7_4", "=", "self", ".", "fc7_4", "(", "fc6_4", ")", "\n", "fc_feature", "=", "fc7_1", "+", "fc7_2", "+", "fc7_3", "+", "fc7_4", "\n", "#conv5_feature = self.fc8(x)", "\n", "#fc7_feature = self.fc8(fc)", "\n", "embedding_feature", "=", "self", ".", "embedding_layer", "(", "fc_feature", ")", "\n", "#score_final_up = F.upsample_bilinear(score_final,size[2:])", "\n", "#return conv4_feature,conv5_feature,fc_feature,embedding_feature", "\n", "return", "conv5_feature", ",", "fc_feature", ",", "embedding_feature", "\n", "#return fc_feature, embedding_feature", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__": [[147, 154], ["torch.Module.__init__", "deeplab_v2.deeplab_V2", "layer.l2normalization", "torch.Softmax2d", "torch.Softmax2d", "torch.Softmax2d", "torch.Softmax2d"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "norm_flag", "=", "'l2'", ")", ":", "\n", "        ", "super", "(", "SiameseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "CNN", "=", "deeplab_V2", "(", ")", "\n", "if", "norm_flag", "==", "'l2'", ":", "\n", "           ", "self", ".", "norm", "=", "fun", ".", "l2normalization", "(", "scale", "=", "1", ")", "\n", "", "if", "norm_flag", "==", "'exp'", ":", "\n", "            ", "self", ".", "norm", "=", "nn", ".", "Softmax2d", "(", ")", "\n", "", "", "''''''"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.forward": [[165, 173], ["deeplab_v2.SiameseNet.CNN", "deeplab_v2.SiameseNet.CNN", "deeplab_v2.SiameseNet.norm", "deeplab_v2.SiameseNet.norm", "deeplab_v2.SiameseNet.norm", "deeplab_v2.SiameseNet.norm", "deeplab_v2.SiameseNet.norm", "deeplab_v2.SiameseNet.norm"], "methods", ["None"], ["def", "forward", "(", "self", ",", "t0", ",", "t1", ")", ":", "\n", "\n", "        ", "out_t0_conv5", ",", "out_t0_fc7", ",", "out_t0_embedding", "=", "self", ".", "CNN", "(", "t0", ")", "\n", "out_t1_conv5", ",", "out_t1_fc7", ",", "out_t1_embedding", "=", "self", ".", "CNN", "(", "t1", ")", "\n", "out_t0_conv5_norm", ",", "out_t1_conv5_norm", "=", "self", ".", "norm", "(", "out_t0_conv5", ")", ",", "self", ".", "norm", "(", "out_t1_conv5", ")", "\n", "out_t0_fc7_norm", ",", "out_t1_fc7_norm", "=", "self", ".", "norm", "(", "out_t0_fc7", ")", ",", "self", ".", "norm", "(", "out_t1_fc7", ")", "\n", "out_t0_embedding_norm", ",", "out_t1_embedding_norm", "=", "self", ".", "norm", "(", "out_t0_embedding", ")", ",", "self", ".", "norm", "(", "out_t1_embedding", ")", "\n", "return", "[", "out_t0_conv5_norm", ",", "out_t1_conv5_norm", "]", ",", "[", "out_t0_fc7_norm", ",", "out_t1_fc7_norm", "]", ",", "[", "out_t0_embedding_norm", ",", "out_t1_embedding_norm", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.init_parameters_from_deeplab": [[196, 237], ["deeplab_v2.convert_dict_names_for_fucking_faults", "sorted", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "pretrain_vgg16_1024[].view", "convert_dict_names_for_fucking_faults.keys", "deeplab_v2.SiameseNet.CNN.fc6_1[].weight.size", "deeplab_v2.SiameseNet.CNN.fc6_1[].bias.size", "deeplab_v2.SiameseNet.CNN.fc7_1[].weight.size", "deeplab_v2.SiameseNet.CNN.fc7_1[].bias.size", "deeplab_v2.SiameseNet.CNN.fc6_2[].weight.size", "deeplab_v2.SiameseNet.CNN.fc6_2[].bias.size", "deeplab_v2.SiameseNet.CNN.fc7_2[].weight.size", "deeplab_v2.SiameseNet.CNN.fc7_2[].bias.size", "deeplab_v2.SiameseNet.CNN.fc6_3[].weight.size", "deeplab_v2.SiameseNet.CNN.fc6_3[].bias.size", "deeplab_v2.SiameseNet.CNN.fc7_3[].weight.size", "deeplab_v2.SiameseNet.CNN.fc7_3[].bias.size", "deeplab_v2.SiameseNet.CNN.fc6_4[].weight.size", "deeplab_v2.SiameseNet.CNN.fc6_4[].bias.size", "deeplab_v2.SiameseNet.CNN.fc7_4[].weight.size", "deeplab_v2.SiameseNet.CNN.fc7_4[].bias.size", "int", "int"], "methods", ["home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.convert_dict_names_for_fucking_faults"], ["def", "init_parameters_from_deeplab", "(", "self", ",", "pretrain_vgg16_1024", ")", ":", "\n", "\n", "##### init parameter using pretrain vgg16 model ###########", "\n", "        ", "pretrain_dict_names", "=", "convert_dict_names_for_fucking_faults", "(", ")", "\n", "keys", "=", "sorted", "(", "pretrain_dict_names", ".", "keys", "(", ")", ")", "\n", "conv_blocks", "=", "[", "self", ".", "CNN", ".", "conv1", ",", "\n", "self", ".", "CNN", ".", "conv2", ",", "\n", "self", ".", "CNN", ".", "conv3", ",", "\n", "self", ".", "CNN", ".", "conv4", ",", "\n", "self", ".", "CNN", ".", "conv5", "]", "\n", "ranges", "=", "[", "[", "0", ",", "2", "]", ",", "[", "0", ",", "2", "]", ",", "[", "0", ",", "2", ",", "4", "]", ",", "[", "0", ",", "2", ",", "4", "]", ",", "[", "0", ",", "2", ",", "4", "]", "]", "\n", "for", "key", "in", "keys", ":", "\n", "            ", "dic_name", "=", "pretrain_dict_names", "[", "key", "]", "\n", "base_conv_name", ",", "conv_index", ",", "sub_index", "=", "dic_name", "[", ":", "5", "]", ",", "int", "(", "dic_name", "[", "4", "]", ")", ",", "int", "(", "dic_name", "[", "-", "1", "]", ")", "\n", "conv_blocks", "[", "conv_index", "-", "1", "]", "[", "ranges", "[", "sub_index", "-", "1", "]", "[", "sub_index", "-", "1", "]", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", "[", "key", "+", "'.weight'", "]", "\n", "conv_blocks", "[", "conv_index", "-", "1", "]", "[", "ranges", "[", "sub_index", "-", "1", "]", "[", "sub_index", "-", "1", "]", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", "[", "key", "+", "'.bias'", "]", "\n", "\n", "####### init fc parameters (transplant) ##############", "\n", "", "self", ".", "CNN", ".", "fc6_1", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc6_1.0.weight'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc6_1", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc6_1", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc6_1.0.bias'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc6_1", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "CNN", ".", "fc7_1", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc7_1.0.weight'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc7_1", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc7_1", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc7_1.0.bias'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc7_1", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "CNN", ".", "fc6_2", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc6_2.0.weight'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc6_2", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc6_2", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc6_2.0.bias'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc6_2", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "CNN", ".", "fc7_2", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc7_2.0.weight'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc7_2", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc7_2", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc7_2.0.bias'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc7_2", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "CNN", ".", "fc6_3", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc6_3.0.weight'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc6_3", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc6_3", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc6_3.0.bias'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc6_3", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "CNN", ".", "fc7_3", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc7_3.0.weight'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc7_3", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc7_3", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc7_3.0.bias'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc7_3", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "CNN", ".", "fc6_4", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc6_4.0.weight'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc6_4", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc6_4", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc6_4.0.bias'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc6_4", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "CNN", ".", "fc7_4", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc7_4.0.weight'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc7_4", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc7_4", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", "[", "'fc7_4.0.bias'", "]", ".", "view", "(", "self", ".", "CNN", ".", "fc7_4", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.SiameseNet.init_parameters": [[241, 268], ["list", "enumerate", "pretrain_vgg16_1024.classifier[].weight.data.view", "pretrain_vgg16_1024.classifier[].bias.data.view", "pretrain_vgg16_1024.classifier[].weight.data.view", "pretrain_vgg16_1024.classifier[].bias.data.view", "pretrain_vgg16_1024.features.children", "zip", "deeplab_v2.SiameseNet.CNN.fc6[].weight.size", "deeplab_v2.SiameseNet.CNN.fc6[].bias.size", "deeplab_v2.SiameseNet.CNN.fc7[].weight.size", "deeplab_v2.SiameseNet.CNN.fc7[].bias.size", "isinstance", "isinstance", "l1.weight.size", "l2.weight.size", "l1.bias.size", "l2.bias.size"], "methods", ["None"], ["", "def", "init_parameters", "(", "self", ",", "pretrain_vgg16_1024", ")", ":", "\n", "\n", "##### init parameter using pretrain vgg16 model ###########", "\n", "        ", "conv_blocks", "=", "[", "self", ".", "CNN", ".", "conv1", ",", "\n", "self", ".", "CNN", ".", "conv2", ",", "\n", "self", ".", "CNN", ".", "conv3", ",", "\n", "self", ".", "CNN", ".", "conv4", ",", "\n", "self", ".", "CNN", ".", "conv5", "]", "\n", "\n", "ranges", "=", "[", "[", "0", ",", "4", "]", ",", "[", "5", ",", "9", "]", ",", "[", "10", ",", "16", "]", ",", "[", "17", ",", "23", "]", ",", "[", "24", ",", "29", "]", "]", "\n", "features", "=", "list", "(", "pretrain_vgg16_1024", ".", "features", ".", "children", "(", ")", ")", "\n", "for", "idx", ",", "conv_block", "in", "enumerate", "(", "conv_blocks", ")", ":", "\n", "            ", "for", "l1", ",", "l2", "in", "zip", "(", "features", "[", "ranges", "[", "idx", "]", "[", "0", "]", ":", "ranges", "[", "idx", "]", "[", "1", "]", "]", ",", "conv_block", ")", ":", "\n", "                ", "if", "isinstance", "(", "l1", ",", "nn", ".", "Conv2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "Conv2d", ")", ":", "\n", "# print idx, l1, l2", "\n", "                    ", "assert", "l1", ".", "weight", ".", "size", "(", ")", "==", "l2", ".", "weight", ".", "size", "(", ")", "\n", "assert", "l1", ".", "bias", ".", "size", "(", ")", "==", "l2", ".", "bias", ".", "size", "(", ")", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "\n", "\n", "####### init fc parameters (transplant) ##############", "\n", "\n", "", "", "", "self", ".", "CNN", ".", "fc6", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", ".", "classifier", "[", "0", "]", ".", "weight", ".", "data", ".", "view", "(", "self", ".", "CNN", ".", "fc6", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc6", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", ".", "classifier", "[", "0", "]", ".", "bias", ".", "data", ".", "view", "(", "self", ".", "CNN", ".", "fc6", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "CNN", ".", "fc7", "[", "0", "]", ".", "weight", ".", "data", "=", "pretrain_vgg16_1024", ".", "classifier", "[", "3", "]", ".", "weight", ".", "data", ".", "view", "(", "self", ".", "CNN", ".", "fc7", "[", "0", "]", ".", "weight", ".", "size", "(", ")", ")", "\n", "self", ".", "CNN", ".", "fc7", "[", "0", "]", ".", "bias", ".", "data", "=", "pretrain_vgg16_1024", ".", "classifier", "[", "3", "]", ".", "bias", ".", "data", ".", "view", "(", "self", ".", "CNN", ".", "fc7", "[", "0", "]", ".", "bias", ".", "size", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gmayday1997_ChangeDet.siameseNet.deeplab_v2.convert_dict_names_for_fucking_faults": [[7, 26], ["None"], "function", ["None"], ["def", "convert_dict_names_for_fucking_faults", "(", ")", ":", "\n", "\n", "   ", "deeplab_v2_dict_names_mapping", "=", "{", "\n", "\n", "'conv1.0'", ":", "'conv1_1'", ",", "\n", "'conv1.2'", ":", "'conv1_2'", ",", "\n", "'conv2.0'", ":", "'conv2_1'", ",", "\n", "'conv2.2'", ":", "'conv2_2'", ",", "\n", "'conv3.0'", ":", "'conv3_1'", ",", "\n", "'conv3.2'", ":", "'conv3_2'", ",", "\n", "'conv3.4'", ":", "'conv3_3'", ",", "\n", "'conv4.0'", ":", "'conv4_1'", ",", "\n", "'conv4.2'", ":", "'conv4_2'", ",", "\n", "'conv4.4'", ":", "'conv4_3'", ",", "\n", "'conv5.0'", ":", "'conv5_1'", ",", "\n", "'conv5.2'", ":", "'conv5_2'", ",", "\n", "'conv5.4'", ":", "'conv5_3'", "}", "\n", "\n", "return", "deeplab_v2_dict_names_mapping", "\n", "\n"]]}