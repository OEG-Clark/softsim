{"home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.customData.__init__": [[52, 60], ["open", "input_file.readlines", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "int", "line.strip().split", "line.strip().split", "line.strip", "line.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_path", ",", "txt_path", ",", "dataset", "=", "''", ",", "data_transforms", "=", "None", ",", "loader", "=", "default_loader", ")", ":", "\n", "        ", "with", "open", "(", "txt_path", ")", "as", "input_file", ":", "\n", "            ", "lines", "=", "input_file", ".", "readlines", "(", ")", "\n", "self", ".", "img_name", "=", "[", "os", ".", "path", ".", "join", "(", "img_path", ",", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "0", "]", ")", "for", "line", "in", "lines", "]", "\n", "self", ".", "img_label", "=", "[", "int", "(", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "-", "1", "]", ")", "for", "line", "in", "lines", "]", "\n", "", "self", ".", "data_transforms", "=", "data_transforms", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.customData.__len__": [[61, 63], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.customData.__getitem__": [[64, 75], ["main.customData.loader", "print"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "img_name", "=", "self", ".", "img_name", "[", "item", "]", "\n", "label", "=", "self", ".", "img_label", "[", "item", "]", "\n", "img", "=", "self", ".", "loader", "(", "img_name", ")", "\n", "\n", "if", "self", ".", "data_transforms", "is", "not", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "img", "=", "self", ".", "data_transforms", "[", "self", ".", "dataset", "]", "(", "img", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"Cannot transform image: {}\"", ".", "format", "(", "img_name", ")", ")", "\n", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.default_loader": [[36, 50], ["random.randint", "cv2.imread", "cv2.resize", "cv2.resize", "numpy.zeros", "torch.tensor", "torch.tensor", "torch.tensor", "np.zeros.astype"], "function", ["None"], ["def", "default_loader", "(", "path", ")", ":", "\n", "\n", "    ", "size", "=", "random", ".", "randint", "(", "64", ",", "256", ")", "\n", "\n", "im", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "size", ",", "size", ")", ")", "\n", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "512", ",", "512", ")", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "3", ",", "512", ",", "512", ")", ")", "\n", "ims", "[", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "img_tensor", "=", "torch", ".", "tensor", "(", "ims", ".", "astype", "(", "'float32'", ")", ")", "\n", "\n", "return", "img_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.test0": [[110, 129], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["def", "test0", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "100", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/stargan/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "128", ",", "128", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "100.0", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.test1": [[130, 157], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["", "def", "test1", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ",", "10100", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/prog-gan-cele/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "'''rate=95\n     encode_param=[int(cv2.IMWRITE_JPEG_QUALITY),rate]\n     result,im=cv2.imencode('.jpg',im,encode_param)\n     im=cv2.imdecode(im,1)\n     if random.randint(0,1)==0:\n       im=cv2.resize(im,(64,64))\n     im=cv2.resize(im,(512,512))'''", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "1024", ",", "1024", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.test2": [[158, 177], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["", "def", "test2", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "100", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/dcgan/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "64", ",", "64", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "100.0", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.test3": [[179, 199], ["model.eval", "glob.glob", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "torch.autograd.Variable", "output.detach().cpu().numpy.detach"], "function", ["None"], ["", "def", "test3", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "paths", "=", "glob", ".", "glob", "(", "root", "+", "'pngdata/celeba-low-res/20????.png'", ")", "\n", "for", "path", "in", "paths", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "178", ",", "178", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('1',pred)", "\n", "if", "pred", "==", "1", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "131.0", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.test4": [[200, 226], ["model.eval", "range", "cv2.imread", "cv2.imencode", "cv2.imdecode", "cv2.resize", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "int", "random.randint", "cv2.resize", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["", "def", "test4", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "100", ",", "150", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/ffhq/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "rate", "=", "95", "\n", "encode_param", "=", "[", "int", "(", "cv2", ".", "IMWRITE_JPEG_QUALITY", ")", ",", "rate", "]", "\n", "result", ",", "im", "=", "cv2", ".", "imencode", "(", "'.jpg'", ",", "im", ",", "encode_param", ")", "\n", "im", "=", "cv2", ".", "imdecode", "(", "im", ",", "1", ")", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "       ", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "64", ",", "64", ")", ")", "\n", "", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "512", ",", "512", ")", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "512", ",", "512", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "1", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.test5": [[227, 253], ["model.eval", "range", "cv2.imread", "cv2.imencode", "cv2.imdecode", "cv2.resize", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "int", "random.randint", "cv2.resize", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["", "def", "test5", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "100", ",", "150", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/style-ffhq/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "rate", "=", "95", "\n", "encode_param", "=", "[", "int", "(", "cv2", ".", "IMWRITE_JPEG_QUALITY", ")", ",", "rate", "]", "\n", "result", ",", "im", "=", "cv2", ".", "imencode", "(", "'.jpg'", ",", "im", ",", "encode_param", ")", "\n", "im", "=", "cv2", ".", "imdecode", "(", "im", ",", "1", ")", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "       ", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "64", ",", "64", ")", ")", "\n", "", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "512", ",", "512", ")", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "512", ",", "512", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.test6": [[255, 275], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["", "def", "test6", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ",", "10050", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/style-cele/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "1024", ",", "1024", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.test7": [[278, 298], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str", "torch.autograd.Variable", "output.detach().cpu().numpy.detach"], "function", ["None"], ["", "def", "test7", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ",", "10040", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/celeba-1024/'", "+", "str", "(", "i", ")", "+", "'.jpg'", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "1024", ",", "1024", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "1", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "40.0", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.main.get_lr": [[304, 309], ["None"], "function", ["None"], ["", "def", "get_lr", "(", "optimizer", ")", ":", "\n", "  ", "lr", "=", "[", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "    ", "lr", "+=", "[", "param_group", "[", "'lr'", "]", "]", "\n", "", "return", "lr", "\n", "", "epochs", "=", "5", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.BasicBlock.__init__": [[34, 51], ["torch.Module.__init__", "resnet18_gram.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet18_gram.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.BasicBlock.forward": [[52, 69], ["resnet18_gram.BasicBlock.conv1", "resnet18_gram.BasicBlock.bn1", "resnet18_gram.BasicBlock.relu", "resnet18_gram.BasicBlock.conv2", "resnet18_gram.BasicBlock.bn2", "resnet18_gram.BasicBlock.relu", "resnet18_gram.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.GramMatrix.forward": [[72, 87], ["input.size", "input.view", "input.view.transpose", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "G.unsqueeze.unsqueeze.unsqueeze", "G.unsqueeze.unsqueeze.div"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "a", ",", "b", ",", "c", ",", "d", "=", "input", ".", "size", "(", ")", "# a=batch size(=1)", "\n", "# b=number of feature maps", "\n", "# (c,d)=dimensions of a f. map (N=c*d)", "\n", "\n", "features", "=", "input", ".", "view", "(", "a", ",", "b", ",", "c", "*", "d", ")", "# resise F_XL into \\hat F_XL", "\n", "#print (features.size(),features.transpose(1,2).size())", "\n", "#G = torch.bmm(features, features.transpose(1,2))  # compute the gram product", "\n", "a", "=", "features", ".", "transpose", "(", "1", ",", "2", ")", "\n", "G", "=", "torch", ".", "bmm", "(", "features", ",", "a", ")", "\n", "#print (G.size)", "\n", "# we 'normalize' the values of the gram matrix", "\n", "# by dividing by the number of element in each feature maps.", "\n", "G", "=", "G", ".", "unsqueeze", "(", "1", ")", "\n", "return", "G", ".", "div", "(", "b", "*", "c", "*", "d", ")", "\n", "", "", "class", "ScaleLayer", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.ScaleLayer.__init__": [[89, 92], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__"], ["   ", "def", "__init__", "(", "self", ",", "init_value", "=", "1", ")", ":", "\n", "       ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "[", "init_value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.ScaleLayer.forward": [[93, 95], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "       ", "return", "input", "*", "self", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.Bottleneck.__init__": [[99, 115], ["torch.Module.__init__", "resnet18_gram.conv1x1", "norm_layer", "resnet18_gram.conv3x3", "norm_layer", "resnet18_gram.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.Bottleneck.forward": [[116, 137], ["resnet18_gram.Bottleneck.conv1", "resnet18_gram.Bottleneck.bn1", "resnet18_gram.Bottleneck.relu", "resnet18_gram.Bottleneck.conv2", "resnet18_gram.Bottleneck.bn2", "resnet18_gram.Bottleneck.relu", "resnet18_gram.Bottleneck.conv3", "resnet18_gram.Bottleneck.bn3", "resnet18_gram.Bottleneck.relu", "resnet18_gram.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.ResNet.__init__": [[141, 255], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet18_gram.ResNet._make_layer", "resnet18_gram.ResNet._make_layer", "resnet18_gram.ResNet._make_layer", "resnet18_gram.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "resnet18_gram.GramMatrix", "resnet18_gram.ScaleLayer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "resnet18_gram.ResNet.modules", "len", "ValueError", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "isinstance", "resnet18_gram.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "#self.fc = nn.Linear(512 * block.expansion, num_classes)", "\n", "self", ".", "gram", "=", "GramMatrix", "(", ")", "\n", "self", ".", "scale", "=", "ScaleLayer", "(", ")", "\n", "self", ".", "fcnewr", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "704", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "2", ")", ",", "\n", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", ")", "\n", "\n", "\n", "self", ".", "conv_interi_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv_inter0_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "conv_inter1_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "conv_inter2_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv_inter3_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "self", ".", "conv_inter4_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "256", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "gi_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "gi_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g0_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g0_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g_fc1r", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g_fc2r", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "\n", "self", ".", "g2_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g2_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g3_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g3_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g4_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g4_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.ResNet._make_layer": [[256, 279], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet18_gram.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.ResNet.forward": [[280, 368], ["resnet18_gram.ResNet.conv1", "resnet18_gram.ResNet.bn1", "resnet18_gram.ResNet.relu", "resnet18_gram.ResNet.maxpool", "resnet18_gram.ResNet.layer1", "resnet18_gram.ResNet.layer2", "resnet18_gram.ResNet.layer3", "resnet18_gram.ResNet.layer4", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_interi_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.gi_fc1", "resnet18_gram.ResNet.gi_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter0_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g0_fc1", "resnet18_gram.ResNet.g0_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter1_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g_fc1r", "resnet18_gram.ResNet.g_fc2r", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter2_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g2_fc1", "resnet18_gram.ResNet.g2_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter3_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g3_fc1", "resnet18_gram.ResNet.g3_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter4_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g4_fc1", "resnet18_gram.ResNet.g4_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet18_gram.ResNet.fcnewr", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x3", "=", "x", "\n", "x", "=", "self", ".", "conv1", "(", "x3", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x4", "=", "self", ".", "relu", "(", "x", ")", "\n", "x5", "=", "self", ".", "maxpool", "(", "x4", ")", "\n", "\n", "\n", "x6", "=", "self", ".", "layer1", "(", "x5", ")", "\n", "x7", "=", "self", ".", "layer2", "(", "x6", ")", "\n", "x8", "=", "self", ".", "layer3", "(", "x7", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x8", ")", "\n", "\n", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "\n", "gi", "=", "self", ".", "conv_interi_0", "(", "x3", ")", "\n", "\n", "gi", "=", "self", ".", "gram", "(", "gi", ")", "\n", "\n", "gi", "=", "self", ".", "gi_fc1", "(", "gi", ")", "\n", "gi", "=", "self", ".", "gi_fc2", "(", "gi", ")", "\n", "gi", "=", "self", ".", "avgpool", "(", "gi", ")", "\n", "gi", "=", "gi", ".", "view", "(", "gi", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "g0", "=", "self", ".", "conv_inter0_0", "(", "x4", ")", "\n", "\n", "g0", "=", "self", ".", "gram", "(", "g0", ")", "\n", "\n", "g0", "=", "self", ".", "g0_fc1", "(", "g0", ")", "\n", "g0", "=", "self", ".", "g0_fc2", "(", "g0", ")", "\n", "g0", "=", "self", ".", "avgpool", "(", "g0", ")", "\n", "g0", "=", "g0", ".", "view", "(", "g0", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "g1", "=", "self", ".", "conv_inter1_0", "(", "x5", ")", "\n", "\n", "g1", "=", "self", ".", "gram", "(", "g1", ")", "\n", "\n", "g1", "=", "self", ".", "g_fc1r", "(", "g1", ")", "\n", "g1", "=", "self", ".", "g_fc2r", "(", "g1", ")", "\n", "g1", "=", "self", ".", "avgpool", "(", "g1", ")", "\n", "g1", "=", "g1", ".", "view", "(", "g1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "g2", "=", "self", ".", "conv_inter2_0", "(", "x6", ")", "\n", "\n", "g2", "=", "self", ".", "gram", "(", "g2", ")", "\n", "\n", "g2", "=", "self", ".", "g2_fc1", "(", "g2", ")", "\n", "g2", "=", "self", ".", "g2_fc2", "(", "g2", ")", "\n", "g2", "=", "self", ".", "avgpool", "(", "g2", ")", "\n", "g2", "=", "g2", ".", "view", "(", "g2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "g3", "=", "self", ".", "conv_inter3_0", "(", "x7", ")", "\n", "\n", "g3", "=", "self", ".", "gram", "(", "g3", ")", "\n", "\n", "g3", "=", "self", ".", "g3_fc1", "(", "g3", ")", "\n", "g3", "=", "self", ".", "g3_fc2", "(", "g3", ")", "\n", "g3", "=", "self", ".", "avgpool", "(", "g3", ")", "\n", "g3", "=", "g3", ".", "view", "(", "g3", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "g4", "=", "self", ".", "conv_inter4_0", "(", "x8", ")", "\n", "\n", "g4", "=", "self", ".", "gram", "(", "g4", ")", "\n", "\n", "g4", "=", "self", ".", "g4_fc1", "(", "g4", ")", "\n", "g4", "=", "self", ".", "g4_fc2", "(", "g4", ")", "\n", "g4", "=", "self", ".", "avgpool", "(", "g4", ")", "\n", "g4", "=", "g4", ".", "view", "(", "g4", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "gi", "=", "self", ".", "scale", "(", "gi", ")", "\n", "g0", "=", "self", ".", "scale", "(", "g0", ")", "\n", "g1", "=", "self", ".", "scale", "(", "g1", ")", "\n", "g2", "=", "self", ".", "scale", "(", "g2", ")", "\n", "g3", "=", "self", ".", "scale", "(", "g3", ")", "\n", "g4", "=", "self", ".", "scale", "(", "g4", ")", "\n", "'''a=np.unique(x.cpu().detach().numpy())\n        b=np.unique(gi.cpu().detach().numpy())\n        c=np.unique(g0.cpu().detach().numpy())\n        d=np.unique(g1.cpu().detach().numpy())\n        e=np.unique(g2.cpu().detach().numpy())\n        f=np.unique(g3.cpu().detach().numpy())\n        g=np.unique(g4.cpu().detach().numpy())\n        print (a,b,c,d,e,f,g)\n        exit()'''", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "gi", ",", "g0", ",", "g1", ",", "g2", ",", "g3", ",", "g4", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "fcnewr", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.conv3x3": [[20, 24], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.conv1x1": [[26, 29], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.resnet18": [[370, 380], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ",", "strict", "=", "False", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.resnet34": [[382, 392], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.resnet50": [[394, 404], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.resnet101": [[406, 416], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.resnet152": [[418, 428], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.resnext50_32x4d": [[430, 435], ["resnet18_gram.ResNet"], "function", ["None"], ["", "def", "resnext50_32x4d", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "groups", "=", "32", ",", "width_per_group", "=", "4", ",", "**", "kwargs", ")", "\n", "# if pretrained:", "\n", "#     model.load_state_dict(model_zoo.load_url(model_urls['resnext50_32x4d']))", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-ffhq.resnet18_gram.resnext101_32x8d": [[437, 442], ["resnet18_gram.ResNet"], "function", ["None"], ["", "def", "resnext101_32x8d", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "groups", "=", "32", ",", "width_per_group", "=", "8", ",", "**", "kwargs", ")", "\n", "# if pretrained:", "\n", "#     model.load_state_dict(model_zoo.load_url(model_urls['resnext101_32x8d']))", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.customData.__init__": [[52, 60], ["open", "input_file.readlines", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "int", "line.strip().split", "line.strip().split", "line.strip", "line.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_path", ",", "txt_path", ",", "dataset", "=", "''", ",", "data_transforms", "=", "None", ",", "loader", "=", "default_loader", ")", ":", "\n", "        ", "with", "open", "(", "txt_path", ")", "as", "input_file", ":", "\n", "            ", "lines", "=", "input_file", ".", "readlines", "(", ")", "\n", "self", ".", "img_name", "=", "[", "os", ".", "path", ".", "join", "(", "img_path", ",", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "0", "]", ")", "for", "line", "in", "lines", "]", "\n", "self", ".", "img_label", "=", "[", "int", "(", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "-", "1", "]", ")", "for", "line", "in", "lines", "]", "\n", "", "self", ".", "data_transforms", "=", "data_transforms", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.customData.__len__": [[61, 63], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.customData.__getitem__": [[64, 75], ["main.customData.loader", "print"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "img_name", "=", "self", ".", "img_name", "[", "item", "]", "\n", "label", "=", "self", ".", "img_label", "[", "item", "]", "\n", "img", "=", "self", ".", "loader", "(", "img_name", ")", "\n", "\n", "if", "self", ".", "data_transforms", "is", "not", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "img", "=", "self", ".", "data_transforms", "[", "self", ".", "dataset", "]", "(", "img", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"Cannot transform image: {}\"", ".", "format", "(", "img_name", ")", ")", "\n", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.default_loader": [[36, 50], ["random.randint", "cv2.imread", "cv2.resize", "cv2.resize", "numpy.zeros", "torch.tensor", "torch.tensor", "torch.tensor", "np.zeros.astype"], "function", ["None"], ["def", "default_loader", "(", "path", ")", ":", "\n", "\n", "    ", "size", "=", "random", ".", "randint", "(", "64", ",", "256", ")", "\n", "\n", "im", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "size", ",", "size", ")", ")", "\n", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "512", ",", "512", ")", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "3", ",", "512", ",", "512", ")", ")", "\n", "ims", "[", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "img_tensor", "=", "torch", ".", "tensor", "(", "ims", ".", "astype", "(", "'float32'", ")", ")", "\n", "\n", "return", "img_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.test0": [[125, 144], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "100.0", "\n", "\n", "", "def", "test1", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ",", "10100", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/prog-gan-cele/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "'''rate=95\n     encode_param=[int(cv2.IMWRITE_JPEG_QUALITY),rate]\n     result,im=cv2.imencode('.jpg',im,encode_param)\n     im=cv2.imdecode(im,1)\n     if random.randint(0,1)==0:\n       im=cv2.resize(im,(64,64))\n     im=cv2.resize(im,(512,512))'''", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "1024", ",", "1024", ")", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.test1": [[145, 172], ["model.eval", "range", "cv2.imread", "cv2.imencode", "cv2.imdecode", "cv2.resize", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "int", "random.randint", "cv2.resize", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n", "", "def", "test2", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "100", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/dcgan/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "64", ",", "64", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.test2": [[173, 192], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "100.0", "\n", "\n", "\n", "", "def", "test3", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "paths", "=", "glob", ".", "glob", "(", "root", "+", "'pngdata/celeba-low-res/20????.png'", ")", "\n", "for", "path", "in", "paths", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "178", ",", "178", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.test3": [[194, 214], ["model.eval", "glob.glob", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "torch.autograd.Variable", "output.detach().cpu().numpy.detach"], "function", ["None"], ["pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('1',pred)", "\n", "if", "pred", "==", "1", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "131.0", "\n", "\n", "", "def", "test4", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "100", ",", "150", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/ffhq/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "rate", "=", "95", "\n", "encode_param", "=", "[", "int", "(", "cv2", ".", "IMWRITE_JPEG_QUALITY", ")", ",", "rate", "]", "\n", "result", ",", "im", "=", "cv2", ".", "imencode", "(", "'.jpg'", ",", "im", ",", "encode_param", ")", "\n", "im", "=", "cv2", ".", "imdecode", "(", "im", ",", "1", ")", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "       ", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "64", ",", "64", ")", ")", "\n", "", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "512", ",", "512", ")", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "512", ",", "512", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.test4": [[215, 235], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "1", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n", "", "def", "test5", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "100", ",", "150", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/style-ffhq/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "rate", "=", "95", "\n", "encode_param", "=", "[", "int", "(", "cv2", ".", "IMWRITE_JPEG_QUALITY", ")", ",", "rate", "]", "\n", "result", ",", "im", "=", "cv2", ".", "imencode", "(", "'.jpg'", ",", "im", ",", "encode_param", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.test5": [[236, 256], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["im", "=", "cv2", ".", "imdecode", "(", "im", ",", "1", ")", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "       ", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "64", ",", "64", ")", ")", "\n", "", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "512", ",", "512", ")", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "512", ",", "512", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n", "\n", "", "def", "test6", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.test6": [[258, 285], ["model.eval", "range", "cv2.imread", "cv2.imencode", "cv2.imdecode", "cv2.resize", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "int", "random.randint", "cv2.resize", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ",", "10050", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/style-cele/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "1024", ",", "1024", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n", "\n", "\n", "", "def", "test7", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ",", "10040", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/celeba-1024/'", "+", "str", "(", "i", ")", "+", "'.jpg'", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "1024", ",", "1024", ")", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.test7": [[288, 315], ["model.eval", "range", "cv2.imread", "cv2.imencode", "cv2.imdecode", "cv2.resize", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "int", "random.randint", "cv2.resize", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str", "torch.autograd.Variable", "output.detach().cpu().numpy.detach"], "function", ["None"], ["ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "1", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "40.0", "\n", "\n", "", "lr", "=", "0.00001", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "  ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n", "\n", "", "def", "get_lr", "(", "optimizer", ")", ":", "\n", "  ", "lr", "=", "[", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "    ", "lr", "+=", "[", "param_group", "[", "'lr'", "]", "]", "\n", "", "return", "lr", "\n", "", "epochs", "=", "5", "\n", "steps", "=", "0", "\n", "running_loss", "=", "0", "\n", "print_every", "=", "1000", "\n", "train_losses", ",", "test_losses", "=", "[", "]", ",", "[", "]", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.main.adjust_learning_rate": [[318, 325], ["None"], "function", ["None"], ["\n", "    ", "for", "inputs", ",", "labels", "in", "dataloders", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "steps", "+=", "1", "\n", "inputs", ",", "labels", "=", "inputs", ".", "to", "(", "device", ")", ",", "labels", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "logps", "=", "model", ".", "forward", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "logps", ",", "labels", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.BasicBlock.__init__": [[34, 51], ["torch.Module.__init__", "resnet18_gram.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet18_gram.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.BasicBlock.forward": [[52, 69], ["resnet18_gram.BasicBlock.conv1", "resnet18_gram.BasicBlock.bn1", "resnet18_gram.BasicBlock.relu", "resnet18_gram.BasicBlock.conv2", "resnet18_gram.BasicBlock.bn2", "resnet18_gram.BasicBlock.relu", "resnet18_gram.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.GramMatrix.forward": [[72, 87], ["input.size", "input.view", "input.view.transpose", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "G.unsqueeze.unsqueeze.unsqueeze", "G.unsqueeze.unsqueeze.div"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "a", ",", "b", ",", "c", ",", "d", "=", "input", ".", "size", "(", ")", "# a=batch size(=1)", "\n", "# b=number of feature maps", "\n", "# (c,d)=dimensions of a f. map (N=c*d)", "\n", "\n", "features", "=", "input", ".", "view", "(", "a", ",", "b", ",", "c", "*", "d", ")", "# resise F_XL into \\hat F_XL", "\n", "#print (features.size(),features.transpose(1,2).size())", "\n", "#G = torch.bmm(features, features.transpose(1,2))  # compute the gram product", "\n", "a", "=", "features", ".", "transpose", "(", "1", ",", "2", ")", "\n", "G", "=", "torch", ".", "bmm", "(", "features", ",", "a", ")", "\n", "#print (G.size)", "\n", "# we 'normalize' the values of the gram matrix", "\n", "# by dividing by the number of element in each feature maps.", "\n", "G", "=", "G", ".", "unsqueeze", "(", "1", ")", "\n", "return", "G", ".", "div", "(", "b", "*", "c", "*", "d", ")", "\n", "", "", "class", "ScaleLayer", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.ScaleLayer.__init__": [[89, 92], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__"], ["   ", "def", "__init__", "(", "self", ",", "init_value", "=", "1", ")", ":", "\n", "       ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "[", "init_value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.ScaleLayer.forward": [[93, 95], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "       ", "return", "input", "*", "self", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.Bottleneck.__init__": [[99, 115], ["torch.Module.__init__", "resnet18_gram.conv1x1", "norm_layer", "resnet18_gram.conv3x3", "norm_layer", "resnet18_gram.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.Bottleneck.forward": [[116, 137], ["resnet18_gram.Bottleneck.conv1", "resnet18_gram.Bottleneck.bn1", "resnet18_gram.Bottleneck.relu", "resnet18_gram.Bottleneck.conv2", "resnet18_gram.Bottleneck.bn2", "resnet18_gram.Bottleneck.relu", "resnet18_gram.Bottleneck.conv3", "resnet18_gram.Bottleneck.bn3", "resnet18_gram.Bottleneck.relu", "resnet18_gram.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.ResNet.__init__": [[141, 255], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet18_gram.ResNet._make_layer", "resnet18_gram.ResNet._make_layer", "resnet18_gram.ResNet._make_layer", "resnet18_gram.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "resnet18_gram.GramMatrix", "resnet18_gram.ScaleLayer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "resnet18_gram.ResNet.modules", "len", "ValueError", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "isinstance", "resnet18_gram.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "#self.fc = nn.Linear(512 * block.expansion, num_classes)", "\n", "self", ".", "gram", "=", "GramMatrix", "(", ")", "\n", "self", ".", "scale", "=", "ScaleLayer", "(", ")", "\n", "self", ".", "fcnewr", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "704", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "2", ")", ",", "\n", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", ")", "\n", "\n", "\n", "self", ".", "conv_interi_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv_inter0_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "conv_inter1_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "conv_inter2_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv_inter3_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "self", ".", "conv_inter4_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "256", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "gi_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "gi_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g0_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g0_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g_fc1r", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g_fc2r", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "\n", "self", ".", "g2_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g2_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g3_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g3_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g4_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g4_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.ResNet._make_layer": [[256, 279], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet18_gram.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.ResNet.forward": [[280, 368], ["resnet18_gram.ResNet.conv1", "resnet18_gram.ResNet.bn1", "resnet18_gram.ResNet.relu", "resnet18_gram.ResNet.maxpool", "resnet18_gram.ResNet.layer1", "resnet18_gram.ResNet.layer2", "resnet18_gram.ResNet.layer3", "resnet18_gram.ResNet.layer4", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_interi_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.gi_fc1", "resnet18_gram.ResNet.gi_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter0_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g0_fc1", "resnet18_gram.ResNet.g0_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter1_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g_fc1r", "resnet18_gram.ResNet.g_fc2r", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter2_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g2_fc1", "resnet18_gram.ResNet.g2_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter3_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g3_fc1", "resnet18_gram.ResNet.g3_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter4_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g4_fc1", "resnet18_gram.ResNet.g4_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet18_gram.ResNet.fcnewr", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x3", "=", "x", "\n", "x", "=", "self", ".", "conv1", "(", "x3", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x4", "=", "self", ".", "relu", "(", "x", ")", "\n", "x5", "=", "self", ".", "maxpool", "(", "x4", ")", "\n", "\n", "\n", "x6", "=", "self", ".", "layer1", "(", "x5", ")", "\n", "x7", "=", "self", ".", "layer2", "(", "x6", ")", "\n", "x8", "=", "self", ".", "layer3", "(", "x7", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x8", ")", "\n", "\n", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "\n", "gi", "=", "self", ".", "conv_interi_0", "(", "x3", ")", "\n", "\n", "gi", "=", "self", ".", "gram", "(", "gi", ")", "\n", "\n", "gi", "=", "self", ".", "gi_fc1", "(", "gi", ")", "\n", "gi", "=", "self", ".", "gi_fc2", "(", "gi", ")", "\n", "gi", "=", "self", ".", "avgpool", "(", "gi", ")", "\n", "gi", "=", "gi", ".", "view", "(", "gi", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "g0", "=", "self", ".", "conv_inter0_0", "(", "x4", ")", "\n", "\n", "g0", "=", "self", ".", "gram", "(", "g0", ")", "\n", "\n", "g0", "=", "self", ".", "g0_fc1", "(", "g0", ")", "\n", "g0", "=", "self", ".", "g0_fc2", "(", "g0", ")", "\n", "g0", "=", "self", ".", "avgpool", "(", "g0", ")", "\n", "g0", "=", "g0", ".", "view", "(", "g0", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "g1", "=", "self", ".", "conv_inter1_0", "(", "x5", ")", "\n", "\n", "g1", "=", "self", ".", "gram", "(", "g1", ")", "\n", "\n", "g1", "=", "self", ".", "g_fc1r", "(", "g1", ")", "\n", "g1", "=", "self", ".", "g_fc2r", "(", "g1", ")", "\n", "g1", "=", "self", ".", "avgpool", "(", "g1", ")", "\n", "g1", "=", "g1", ".", "view", "(", "g1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "g2", "=", "self", ".", "conv_inter2_0", "(", "x6", ")", "\n", "\n", "g2", "=", "self", ".", "gram", "(", "g2", ")", "\n", "\n", "g2", "=", "self", ".", "g2_fc1", "(", "g2", ")", "\n", "g2", "=", "self", ".", "g2_fc2", "(", "g2", ")", "\n", "g2", "=", "self", ".", "avgpool", "(", "g2", ")", "\n", "g2", "=", "g2", ".", "view", "(", "g2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "g3", "=", "self", ".", "conv_inter3_0", "(", "x7", ")", "\n", "\n", "g3", "=", "self", ".", "gram", "(", "g3", ")", "\n", "\n", "g3", "=", "self", ".", "g3_fc1", "(", "g3", ")", "\n", "g3", "=", "self", ".", "g3_fc2", "(", "g3", ")", "\n", "g3", "=", "self", ".", "avgpool", "(", "g3", ")", "\n", "g3", "=", "g3", ".", "view", "(", "g3", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "g4", "=", "self", ".", "conv_inter4_0", "(", "x8", ")", "\n", "\n", "g4", "=", "self", ".", "gram", "(", "g4", ")", "\n", "\n", "g4", "=", "self", ".", "g4_fc1", "(", "g4", ")", "\n", "g4", "=", "self", ".", "g4_fc2", "(", "g4", ")", "\n", "g4", "=", "self", ".", "avgpool", "(", "g4", ")", "\n", "g4", "=", "g4", ".", "view", "(", "g4", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "gi", "=", "self", ".", "scale", "(", "gi", ")", "\n", "g0", "=", "self", ".", "scale", "(", "g0", ")", "\n", "g1", "=", "self", ".", "scale", "(", "g1", ")", "\n", "g2", "=", "self", ".", "scale", "(", "g2", ")", "\n", "g3", "=", "self", ".", "scale", "(", "g3", ")", "\n", "g4", "=", "self", ".", "scale", "(", "g4", ")", "\n", "'''a=np.unique(x.cpu().detach().numpy())\n        b=np.unique(gi.cpu().detach().numpy())\n        c=np.unique(g0.cpu().detach().numpy())\n        d=np.unique(g1.cpu().detach().numpy())\n        e=np.unique(g2.cpu().detach().numpy())\n        f=np.unique(g3.cpu().detach().numpy())\n        g=np.unique(g4.cpu().detach().numpy())\n        print (a,b,c,d,e,f,g)\n        exit()'''", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "gi", ",", "g0", ",", "g1", ",", "g2", ",", "g3", ",", "g4", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "fcnewr", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.conv3x3": [[20, 24], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.conv1x1": [[26, 29], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.resnet18": [[370, 380], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ",", "strict", "=", "False", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.resnet34": [[382, 392], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.resnet50": [[394, 404], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.resnet101": [[406, 416], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.resnet152": [[418, 428], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.resnext50_32x4d": [[430, 435], ["resnet18_gram.ResNet"], "function", ["None"], ["", "def", "resnext50_32x4d", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "groups", "=", "32", ",", "width_per_group", "=", "4", ",", "**", "kwargs", ")", "\n", "# if pretrained:", "\n", "#     model.load_state_dict(model_zoo.load_url(model_urls['resnext50_32x4d']))", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.stylegan-celeba.resnet18_gram.resnext101_32x8d": [[437, 442], ["resnet18_gram.ResNet"], "function", ["None"], ["", "def", "resnext101_32x8d", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "groups", "=", "32", ",", "width_per_group", "=", "8", ",", "**", "kwargs", ")", "\n", "# if pretrained:", "\n", "#     model.load_state_dict(model_zoo.load_url(model_urls['resnext101_32x8d']))", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.customData.__init__": [[52, 60], ["open", "input_file.readlines", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "int", "line.strip().split", "line.strip().split", "line.strip", "line.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_path", ",", "txt_path", ",", "dataset", "=", "''", ",", "data_transforms", "=", "None", ",", "loader", "=", "default_loader", ")", ":", "\n", "        ", "with", "open", "(", "txt_path", ")", "as", "input_file", ":", "\n", "            ", "lines", "=", "input_file", ".", "readlines", "(", ")", "\n", "self", ".", "img_name", "=", "[", "os", ".", "path", ".", "join", "(", "img_path", ",", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "0", "]", ")", "for", "line", "in", "lines", "]", "\n", "self", ".", "img_label", "=", "[", "int", "(", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "-", "1", "]", ")", "for", "line", "in", "lines", "]", "\n", "", "self", ".", "data_transforms", "=", "data_transforms", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.customData.__len__": [[61, 63], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.customData.__getitem__": [[64, 75], ["main.customData.loader", "print"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "img_name", "=", "self", ".", "img_name", "[", "item", "]", "\n", "label", "=", "self", ".", "img_label", "[", "item", "]", "\n", "img", "=", "self", ".", "loader", "(", "img_name", ")", "\n", "\n", "if", "self", ".", "data_transforms", "is", "not", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "img", "=", "self", ".", "data_transforms", "[", "self", ".", "dataset", "]", "(", "img", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"Cannot transform image: {}\"", ".", "format", "(", "img_name", ")", ")", "\n", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.default_loader": [[36, 50], ["random.randint", "cv2.imread", "cv2.resize", "cv2.resize", "numpy.zeros", "torch.tensor", "torch.tensor", "torch.tensor", "np.zeros.astype"], "function", ["None"], ["def", "default_loader", "(", "path", ")", ":", "\n", "\n", "    ", "size", "=", "random", ".", "randint", "(", "64", ",", "256", ")", "\n", "\n", "im", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "size", ",", "size", ")", ")", "\n", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "512", ",", "512", ")", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "3", ",", "512", ",", "512", ")", ")", "\n", "ims", "[", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "img_tensor", "=", "torch", ".", "tensor", "(", "ims", ".", "astype", "(", "'float32'", ")", ")", "\n", "\n", "return", "img_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.test0": [[124, 143], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "100.0", "\n", "\n", "", "def", "test1", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ",", "10100", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/prog-gan-cele/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "'''rate=95\n     encode_param=[int(cv2.IMWRITE_JPEG_QUALITY),rate]\n     result,im=cv2.imencode('.jpg',im,encode_param)\n     im=cv2.imdecode(im,1)\n     if random.randint(0,1)==0:\n       im=cv2.resize(im,(64,64))\n     im=cv2.resize(im,(512,512))'''", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.test1": [[144, 171], ["model.eval", "range", "cv2.imread", "cv2.imencode", "cv2.imdecode", "cv2.resize", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "int", "random.randint", "cv2.resize", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "1024", ",", "1024", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n", "", "def", "test2", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "100", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/dcgan/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "64", ",", "64", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.test2": [[172, 191], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "100.0", "\n", "\n", "\n", "", "def", "test3", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "paths", "=", "glob", ".", "glob", "(", "root", "+", "'pngdata/celeba-low-res/20????.png'", ")", "\n", "for", "path", "in", "paths", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "178", ",", "178", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.test3": [[193, 213], ["model.eval", "glob.glob", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "torch.autograd.Variable", "output.detach().cpu().numpy.detach"], "function", ["None"], ["output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('1',pred)", "\n", "if", "pred", "==", "1", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "131.0", "\n", "\n", "", "def", "test4", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "100", ",", "150", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/ffhq/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "rate", "=", "95", "\n", "encode_param", "=", "[", "int", "(", "cv2", ".", "IMWRITE_JPEG_QUALITY", ")", ",", "rate", "]", "\n", "result", ",", "im", "=", "cv2", ".", "imencode", "(", "'.jpg'", ",", "im", ",", "encode_param", ")", "\n", "im", "=", "cv2", ".", "imdecode", "(", "im", ",", "1", ")", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "       ", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "64", ",", "64", ")", ")", "\n", "", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "512", ",", "512", ")", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "512", ",", "512", ")", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.test4": [[214, 234], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "1", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n", "", "def", "test5", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "100", ",", "150", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/style-ffhq/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "rate", "=", "95", "\n", "encode_param", "=", "[", "int", "(", "cv2", ".", "IMWRITE_JPEG_QUALITY", ")", ",", "rate", "]", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.test5": [[235, 255], ["model.eval", "range", "cv2.imread", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["result", ",", "im", "=", "cv2", ".", "imencode", "(", "'.jpg'", ",", "im", ",", "encode_param", ")", "\n", "im", "=", "cv2", ".", "imdecode", "(", "im", ",", "1", ")", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "       ", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "64", ",", "64", ")", ")", "\n", "", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "512", ",", "512", ")", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "512", ",", "512", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n", "\n", "", "def", "test6", "(", "model", ")", ":", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.test6": [[257, 284], ["model.eval", "range", "cv2.imread", "cv2.imencode", "cv2.imdecode", "cv2.resize", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "int", "random.randint", "cv2.resize", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str().zfill", "torch.autograd.Variable", "output.detach().cpu().numpy.detach", "str"], "function", ["None"], ["\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ",", "10050", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/style-cele/'", "+", "str", "(", "i", ")", ".", "zfill", "(", "6", ")", "+", "'.png'", ")", "\n", "ims", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "1024", ",", "1024", ")", ")", "\n", "ims", "[", "0", ",", "0", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "0", "]", "\n", "ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "0", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "50.0", "\n", "\n", "\n", "\n", "", "def", "test7", "(", "model", ")", ":", "\n", "  ", "model", ".", "eval", "(", ")", "\n", "\n", "gt", "=", "0", "\n", "corr", "=", "0", "\n", "for", "i", "in", "range", "(", "10000", ",", "10040", ")", ":", "\n", "     ", "im", "=", "cv2", ".", "imread", "(", "root", "+", "'pngdata/data/celeba-1024/'", "+", "str", "(", "i", ")", "+", "'.jpg'", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.test7": [[287, 314], ["model.eval", "range", "cv2.imread", "cv2.imencode", "cv2.imdecode", "cv2.resize", "numpy.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.autograd.Variable().float().cuda", "model", "output.detach().cpu().numpy.detach().cpu().numpy", "numpy.argmax", "int", "random.randint", "cv2.resize", "torch.tensor", "torch.tensor", "torch.tensor", "torch.autograd.Variable().float", "output.detach().cpu().numpy.detach().cpu", "str", "torch.autograd.Variable", "output.detach().cpu().numpy.detach"], "function", ["None"], ["ims", "[", "0", ",", "1", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "1", "]", "\n", "ims", "[", "0", ",", "2", ",", ":", ",", ":", "]", "=", "im", "[", ":", ",", ":", ",", "2", "]", "\n", "image_tensor", "=", "torch", ".", "tensor", "(", "ims", ")", ".", "float", "(", ")", "\n", "inputs", "=", "Variable", "(", "image_tensor", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "output", "=", "output", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred", "=", "np", ".", "argmax", "(", "output", ")", "\n", "#print ('0',pred)", "\n", "if", "pred", "==", "1", ":", "\n", "        ", "corr", "+=", "1", "\n", "", "", "return", "corr", "/", "40.0", "\n", "\n", "", "lr", "=", "0.00001", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "  ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n", "\n", "", "def", "get_lr", "(", "optimizer", ")", ":", "\n", "  ", "lr", "=", "[", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "    ", "lr", "+=", "[", "param_group", "[", "'lr'", "]", "]", "\n", "", "return", "lr", "\n", "", "epochs", "=", "5", "\n", "steps", "=", "0", "\n", "running_loss", "=", "0", "\n", "print_every", "=", "1000", "\n", "train_losses", ",", "test_losses", "=", "[", "]", ",", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.main.get_lr": [[320, 325], ["None"], "function", ["None"], ["        ", "model", ".", "train", "(", ")", "\n", "steps", "+=", "1", "\n", "inputs", ",", "labels", "=", "inputs", ".", "to", "(", "device", ")", ",", "labels", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "logps", "=", "model", ".", "forward", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "logps", ",", "labels", ")", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.BasicBlock.__init__": [[34, 51], ["torch.Module.__init__", "resnet18_gram.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet18_gram.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.BasicBlock.forward": [[52, 69], ["resnet18_gram.BasicBlock.conv1", "resnet18_gram.BasicBlock.bn1", "resnet18_gram.BasicBlock.relu", "resnet18_gram.BasicBlock.conv2", "resnet18_gram.BasicBlock.bn2", "resnet18_gram.BasicBlock.relu", "resnet18_gram.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.GramMatrix.forward": [[72, 87], ["input.size", "input.view", "input.view.transpose", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "G.unsqueeze.unsqueeze.unsqueeze", "G.unsqueeze.unsqueeze.div"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "a", ",", "b", ",", "c", ",", "d", "=", "input", ".", "size", "(", ")", "# a=batch size(=1)", "\n", "# b=number of feature maps", "\n", "# (c,d)=dimensions of a f. map (N=c*d)", "\n", "\n", "features", "=", "input", ".", "view", "(", "a", ",", "b", ",", "c", "*", "d", ")", "# resise F_XL into \\hat F_XL", "\n", "#print (features.size(),features.transpose(1,2).size())", "\n", "#G = torch.bmm(features, features.transpose(1,2))  # compute the gram product", "\n", "a", "=", "features", ".", "transpose", "(", "1", ",", "2", ")", "\n", "G", "=", "torch", ".", "bmm", "(", "features", ",", "a", ")", "\n", "#print (G.size)", "\n", "# we 'normalize' the values of the gram matrix", "\n", "# by dividing by the number of element in each feature maps.", "\n", "G", "=", "G", ".", "unsqueeze", "(", "1", ")", "\n", "return", "G", ".", "div", "(", "b", "*", "c", "*", "d", ")", "\n", "", "", "class", "ScaleLayer", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ScaleLayer.__init__": [[89, 92], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__"], ["   ", "def", "__init__", "(", "self", ",", "init_value", "=", "1", ")", ":", "\n", "       ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "[", "init_value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ScaleLayer.forward": [[93, 95], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "       ", "return", "input", "*", "self", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.Bottleneck.__init__": [[99, 115], ["torch.Module.__init__", "resnet18_gram.conv1x1", "norm_layer", "resnet18_gram.conv3x3", "norm_layer", "resnet18_gram.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.Bottleneck.forward": [[116, 137], ["resnet18_gram.Bottleneck.conv1", "resnet18_gram.Bottleneck.bn1", "resnet18_gram.Bottleneck.relu", "resnet18_gram.Bottleneck.conv2", "resnet18_gram.Bottleneck.bn2", "resnet18_gram.Bottleneck.relu", "resnet18_gram.Bottleneck.conv3", "resnet18_gram.Bottleneck.bn3", "resnet18_gram.Bottleneck.relu", "resnet18_gram.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__": [[141, 255], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet18_gram.ResNet._make_layer", "resnet18_gram.ResNet._make_layer", "resnet18_gram.ResNet._make_layer", "resnet18_gram.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "resnet18_gram.GramMatrix", "resnet18_gram.ScaleLayer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "resnet18_gram.ResNet.modules", "len", "ValueError", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "isinstance", "resnet18_gram.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.__init__", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer", "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "#self.fc = nn.Linear(512 * block.expansion, num_classes)", "\n", "self", ".", "gram", "=", "GramMatrix", "(", ")", "\n", "self", ".", "scale", "=", "ScaleLayer", "(", ")", "\n", "self", ".", "fcnewr", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "704", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "2", ")", ",", "\n", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", ")", "\n", "\n", "\n", "self", ".", "conv_interi_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv_inter0_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "conv_inter1_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "conv_inter2_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv_inter3_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "self", ".", "conv_inter4_0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "256", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "\n", "\n", "self", ".", "gi_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "gi_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g0_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g0_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g_fc1r", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g_fc2r", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "\n", "self", ".", "g2_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g2_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g3_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g3_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "g4_fc1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "16", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "g4_fc2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet._make_layer": [[256, 279], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet18_gram.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.ResNet.forward": [[280, 368], ["resnet18_gram.ResNet.conv1", "resnet18_gram.ResNet.bn1", "resnet18_gram.ResNet.relu", "resnet18_gram.ResNet.maxpool", "resnet18_gram.ResNet.layer1", "resnet18_gram.ResNet.layer2", "resnet18_gram.ResNet.layer3", "resnet18_gram.ResNet.layer4", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_interi_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.gi_fc1", "resnet18_gram.ResNet.gi_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter0_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g0_fc1", "resnet18_gram.ResNet.g0_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter1_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g_fc1r", "resnet18_gram.ResNet.g_fc2r", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter2_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g2_fc1", "resnet18_gram.ResNet.g2_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter3_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g3_fc1", "resnet18_gram.ResNet.g3_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.conv_inter4_0", "resnet18_gram.ResNet.gram", "resnet18_gram.ResNet.g4_fc1", "resnet18_gram.ResNet.g4_fc2", "resnet18_gram.ResNet.avgpool", "resnet18_gram.ResNet.view", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "resnet18_gram.ResNet.scale", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet18_gram.ResNet.fcnewr", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size", "resnet18_gram.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x3", "=", "x", "\n", "x", "=", "self", ".", "conv1", "(", "x3", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x4", "=", "self", ".", "relu", "(", "x", ")", "\n", "x5", "=", "self", ".", "maxpool", "(", "x4", ")", "\n", "\n", "\n", "x6", "=", "self", ".", "layer1", "(", "x5", ")", "\n", "x7", "=", "self", ".", "layer2", "(", "x6", ")", "\n", "x8", "=", "self", ".", "layer3", "(", "x7", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x8", ")", "\n", "\n", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "\n", "gi", "=", "self", ".", "conv_interi_0", "(", "x3", ")", "\n", "\n", "gi", "=", "self", ".", "gram", "(", "gi", ")", "\n", "\n", "gi", "=", "self", ".", "gi_fc1", "(", "gi", ")", "\n", "gi", "=", "self", ".", "gi_fc2", "(", "gi", ")", "\n", "gi", "=", "self", ".", "avgpool", "(", "gi", ")", "\n", "gi", "=", "gi", ".", "view", "(", "gi", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "g0", "=", "self", ".", "conv_inter0_0", "(", "x4", ")", "\n", "\n", "g0", "=", "self", ".", "gram", "(", "g0", ")", "\n", "\n", "g0", "=", "self", ".", "g0_fc1", "(", "g0", ")", "\n", "g0", "=", "self", ".", "g0_fc2", "(", "g0", ")", "\n", "g0", "=", "self", ".", "avgpool", "(", "g0", ")", "\n", "g0", "=", "g0", ".", "view", "(", "g0", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "g1", "=", "self", ".", "conv_inter1_0", "(", "x5", ")", "\n", "\n", "g1", "=", "self", ".", "gram", "(", "g1", ")", "\n", "\n", "g1", "=", "self", ".", "g_fc1r", "(", "g1", ")", "\n", "g1", "=", "self", ".", "g_fc2r", "(", "g1", ")", "\n", "g1", "=", "self", ".", "avgpool", "(", "g1", ")", "\n", "g1", "=", "g1", ".", "view", "(", "g1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "g2", "=", "self", ".", "conv_inter2_0", "(", "x6", ")", "\n", "\n", "g2", "=", "self", ".", "gram", "(", "g2", ")", "\n", "\n", "g2", "=", "self", ".", "g2_fc1", "(", "g2", ")", "\n", "g2", "=", "self", ".", "g2_fc2", "(", "g2", ")", "\n", "g2", "=", "self", ".", "avgpool", "(", "g2", ")", "\n", "g2", "=", "g2", ".", "view", "(", "g2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "g3", "=", "self", ".", "conv_inter3_0", "(", "x7", ")", "\n", "\n", "g3", "=", "self", ".", "gram", "(", "g3", ")", "\n", "\n", "g3", "=", "self", ".", "g3_fc1", "(", "g3", ")", "\n", "g3", "=", "self", ".", "g3_fc2", "(", "g3", ")", "\n", "g3", "=", "self", ".", "avgpool", "(", "g3", ")", "\n", "g3", "=", "g3", ".", "view", "(", "g3", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "g4", "=", "self", ".", "conv_inter4_0", "(", "x8", ")", "\n", "\n", "g4", "=", "self", ".", "gram", "(", "g4", ")", "\n", "\n", "g4", "=", "self", ".", "g4_fc1", "(", "g4", ")", "\n", "g4", "=", "self", ".", "g4_fc2", "(", "g4", ")", "\n", "g4", "=", "self", ".", "avgpool", "(", "g4", ")", "\n", "g4", "=", "g4", ".", "view", "(", "g4", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "gi", "=", "self", ".", "scale", "(", "gi", ")", "\n", "g0", "=", "self", ".", "scale", "(", "g0", ")", "\n", "g1", "=", "self", ".", "scale", "(", "g1", ")", "\n", "g2", "=", "self", ".", "scale", "(", "g2", ")", "\n", "g3", "=", "self", ".", "scale", "(", "g3", ")", "\n", "g4", "=", "self", ".", "scale", "(", "g4", ")", "\n", "'''a=np.unique(x.cpu().detach().numpy())\n        b=np.unique(gi.cpu().detach().numpy())\n        c=np.unique(g0.cpu().detach().numpy())\n        d=np.unique(g1.cpu().detach().numpy())\n        e=np.unique(g2.cpu().detach().numpy())\n        f=np.unique(g3.cpu().detach().numpy())\n        g=np.unique(g4.cpu().detach().numpy())\n        print (a,b,c,d,e,f,g)\n        exit()'''", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "gi", ",", "g0", ",", "g1", ",", "g2", ",", "g3", ",", "g4", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "fcnewr", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv3x3": [[20, 24], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.conv1x1": [[26, 29], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.resnet18": [[370, 380], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ",", "strict", "=", "False", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.resnet34": [[382, 392], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.resnet50": [[394, 404], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.resnet101": [[406, 416], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.resnet152": [[418, 428], ["resnet18_gram.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.resnext50_32x4d": [[430, 435], ["resnet18_gram.ResNet"], "function", ["None"], ["", "def", "resnext50_32x4d", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "groups", "=", "32", ",", "width_per_group", "=", "4", ",", "**", "kwargs", ")", "\n", "# if pretrained:", "\n", "#     model.load_state_dict(model_zoo.load_url(model_urls['resnext50_32x4d']))", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.liuzhengzhe_Global_Texture_Enhancement_for_Fake_Face_Detection_in_the-Wild.pggan-celeba.resnet18_gram.resnext101_32x8d": [[437, 442], ["resnet18_gram.ResNet"], "function", ["None"], ["", "def", "resnext101_32x8d", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "groups", "=", "32", ",", "width_per_group", "=", "8", ",", "**", "kwargs", ")", "\n", "# if pretrained:", "\n", "#     model.load_state_dict(model_zoo.load_url(model_urls['resnext101_32x8d']))", "\n", "return", "model", "\n", "", ""]]}