{"home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.generate_rotations.options": [[20, 43], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "options", "(", "argv", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PointNet-LK'", ")", "\n", "\n", "# required.", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--outfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'FILENAME'", ",", "help", "=", "'output filename (.csv)'", ")", "# the perturbation file for 'test_pointlk.py'", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--dataset-path'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the input dataset'", ")", "# like '/path/to/ModelNet40'", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "'--categoryfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the categories to be tested'", ")", "# eg. './sampledata/modelnet40_half1.txt'", "\n", "\n", "# settings for input data", "\n", "parser", ".", "add_argument", "(", "'--deg'", ",", "default", "=", "60", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'T'", ",", "help", "=", "'fixed degree of rotation (perturbations) (default: 60)'", ")", "\n", "parser", ".", "add_argument", "(", "'--max-trans'", ",", "default", "=", "0.3", ",", "type", "=", "float", ",", "\n", "help", "=", "'max translation in each axis (default: 0.3)'", ")", "\n", "parser", ".", "add_argument", "(", "'--format'", ",", "default", "=", "'wv'", ",", "choices", "=", "[", "'wv'", ",", "'wt'", "]", ",", "\n", "help", "=", "'output format (default: wv (twist-vector), wt means rotation- and translation-vector)'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset-type'", ",", "default", "=", "'modelnet'", ",", "choices", "=", "[", "'modelnet'", "]", ",", "\n", "metavar", "=", "'DATASET'", ",", "help", "=", "'dataset type (default: modelnet)'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.generate_rotations.main": [[44, 68], ["generate_rotations.get_datasets", "len", "torch.randn", "torch.randn", "numpy.savetxt", "torch.rand", "torch.rand", "ptlk.so3.exp", "torch.zeros", "torch.zeros", "ptlk.se3.log", "torch.cat", "torch.cat", "torch.randn.norm"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.get_datasets", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log"], ["", "def", "main", "(", "args", ")", ":", "\n", "# dataset", "\n", "    ", "testset", "=", "get_datasets", "(", "args", ")", "\n", "batch_size", "=", "len", "(", "testset", ")", "\n", "\n", "amp", "=", "args", ".", "deg", "*", "math", ".", "pi", "/", "180.0", "\n", "w", "=", "torch", ".", "randn", "(", "batch_size", ",", "3", ")", "\n", "w", "=", "w", "/", "w", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "*", "amp", "\n", "t", "=", "torch", ".", "rand", "(", "batch_size", ",", "3", ")", "*", "args", ".", "max_trans", "\n", "\n", "if", "args", ".", "format", "==", "'wv'", ":", "\n", "# the output: twist vectors.", "\n", "        ", "R", "=", "ptlk", ".", "so3", ".", "exp", "(", "w", ")", "# (N, 3) --> (N, 3, 3)", "\n", "G", "=", "torch", ".", "zeros", "(", "batch_size", ",", "4", ",", "4", ")", "\n", "G", "[", ":", ",", "3", ",", "3", "]", "=", "1", "\n", "G", "[", ":", ",", "0", ":", "3", ",", "0", ":", "3", "]", "=", "R", "\n", "G", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "t", "\n", "\n", "x", "=", "ptlk", ".", "se3", ".", "log", "(", "G", ")", "# --> (N, 6)", "\n", "", "else", ":", "\n", "# rotation-vector and translation-vector", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "w", ",", "t", ")", ",", "dim", "=", "1", ")", "\n", "\n", "", "numpy", ".", "savetxt", "(", "args", ".", "outfile", ",", "x", ",", "delimiter", "=", "','", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.generate_rotations.get_datasets": [[69, 88], ["categories.sort", "torchvision.transforms.Compose", "ptlk.data.datasets.ModelNet", "line.rstrip", "open", "range", "ptlk.data.transforms.Mesh2Points", "ptlk.data.transforms.OnUnitCube", "len"], "function", ["None"], ["", "def", "get_datasets", "(", "args", ")", ":", "\n", "\n", "    ", "cinfo", "=", "None", "\n", "if", "args", ".", "categoryfile", ":", "\n", "#categories = numpy.loadtxt(args.categoryfile, dtype=str, delimiter=\"\\n\").tolist()", "\n", "        ", "categories", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "open", "(", "args", ".", "categoryfile", ")", "]", "\n", "categories", ".", "sort", "(", ")", "\n", "c_to_idx", "=", "{", "categories", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "categories", ")", ")", "}", "\n", "cinfo", "=", "(", "categories", ",", "c_to_idx", ")", "\n", "\n", "", "if", "args", ".", "dataset_type", "==", "'modelnet'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "ptlk", ".", "data", ".", "transforms", ".", "Mesh2Points", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "OnUnitCube", "(", ")", ",", "]", ")", "\n", "\n", "testdata", "=", "ptlk", ".", "data", ".", "datasets", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "0", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "\n", "", "return", "testdata", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.icp.ICP.__init__": [[49, 58], ["scipy.spatial.KDTree"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "p0", ",", "p1", ")", ":", "\n", "        ", "\"\"\" p0.shape == (N, 3)\n            p1.shape == (N, 3)\n        \"\"\"", "\n", "self", ".", "p0", "=", "p0", "\n", "self", ".", "p1", "=", "p1", "\n", "leafsize", "=", "1000", "\n", "self", ".", "nearest", "=", "KDTree", "(", "self", ".", "p0", ",", "leafsize", "=", "leafsize", ")", "\n", "self", ".", "g_series", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.icp.ICP.compute": [[59, 87], ["numpy.eye", "numpy.copy", "numpy.zeros", "range", "icp._icp_find_rigid_transform", "numpy.copy", "icp._icp_Rt_to_matrix", "numpy.dot", "numpy.copy", "icp.ICP.nearest.query", "numpy.sum", "numpy.dot", "numpy.abs"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.icp._icp_find_rigid_transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.icp._icp_Rt_to_matrix"], ["", "def", "compute", "(", "self", ",", "max_iter", ")", ":", "\n", "        ", "ftol", "=", "1.0e-7", "\n", "dim_k", "=", "self", ".", "p0", ".", "shape", "[", "1", "]", "\n", "g", "=", "np", ".", "eye", "(", "dim_k", "+", "1", ",", "dtype", "=", "self", ".", "p0", ".", "dtype", ")", "\n", "p", "=", "np", ".", "copy", "(", "self", ".", "p1", ")", "\n", "\n", "self", ".", "g_series", "=", "np", ".", "zeros", "(", "(", "max_iter", "+", "1", ",", "dim_k", "+", "1", ",", "dim_k", "+", "1", ")", ",", "dtype", "=", "g", ".", "dtype", ")", "\n", "self", ".", "g_series", "[", "0", ",", ":", ",", ":", "]", "=", "g", "\n", "\n", "itr", "=", "-", "1", "\n", "for", "itr", "in", "range", "(", "max_iter", ")", ":", "\n", "            ", "neighbor_idx", "=", "self", ".", "nearest", ".", "query", "(", "p", ")", "[", "1", "]", "\n", "targets", "=", "self", ".", "p0", "[", "neighbor_idx", "]", "\n", "R", ",", "t", "=", "_icp_find_rigid_transform", "(", "p", ",", "targets", ")", "\n", "\n", "new_p", "=", "np", ".", "dot", "(", "R", ",", "p", ".", "T", ")", ".", "T", "+", "t", "\n", "if", "np", ".", "sum", "(", "np", ".", "abs", "(", "p", "-", "new_p", ")", ")", "<", "ftol", ":", "\n", "                ", "break", "\n", "\n", "", "p", "=", "np", ".", "copy", "(", "new_p", ")", "\n", "dg", "=", "_icp_Rt_to_matrix", "(", "R", ",", "t", ")", "\n", "new_g", "=", "np", ".", "dot", "(", "dg", ",", "g", ")", "\n", "g", "=", "np", ".", "copy", "(", "new_g", ")", "\n", "self", ".", "g_series", "[", "itr", "+", "1", ",", ":", ",", ":", "]", "=", "g", "\n", "\n", "", "self", ".", "g_series", "[", "(", "itr", "+", "1", ")", ":", ",", ":", ",", ":", "]", "=", "g", "\n", "\n", "return", "g", ",", "p", ",", "(", "itr", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.icp._icp_find_rigid_transform": [[16, 37], ["numpy.mean", "numpy.mean", "numpy.dot", "numpy.linalg.svd", "numpy.dot", "numpy.copy", "numpy.copy", "numpy.linalg.det", "numpy.dot", "numpy.dot"], "function", ["None"], ["def", "_icp_find_rigid_transform", "(", "p_from", ",", "p_target", ")", ":", "\n", "    ", "A", ",", "B", "=", "np", ".", "copy", "(", "p_from", ")", ",", "np", ".", "copy", "(", "p_target", ")", "\n", "\n", "centroid_A", "=", "np", ".", "mean", "(", "A", ",", "axis", "=", "0", ")", "\n", "centroid_B", "=", "np", ".", "mean", "(", "B", ",", "axis", "=", "0", ")", "\n", "\n", "A", "-=", "centroid_A", "\n", "B", "-=", "centroid_B", "\n", "\n", "H", "=", "np", ".", "dot", "(", "A", ".", "T", ",", "B", ")", "\n", "U", ",", "S", ",", "Vt", "=", "np", ".", "linalg", ".", "svd", "(", "H", ")", "\n", "R", "=", "np", ".", "dot", "(", "Vt", ".", "T", ",", "U", ".", "T", ")", "\n", "\n", "# special reflection case", "\n", "if", "np", ".", "linalg", ".", "det", "(", "R", ")", "<", "0", ":", "\n", "        ", "Vt", "[", "2", ",", ":", "]", "*=", "-", "1", "\n", "R", "=", "np", ".", "dot", "(", "Vt", ".", "T", ",", "U", ".", "T", ")", "\n", "\n", "", "t", "=", "np", ".", "dot", "(", "-", "R", ",", "centroid_A", ")", "+", "centroid_B", "\n", "\n", "return", "R", ",", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.icp._icp_Rt_to_matrix": [[38, 44], ["numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.expand_dims", "numpy.zeros_like", "numpy.ones", "numpy.expand_dims"], "function", ["None"], ["", "def", "_icp_Rt_to_matrix", "(", "R", ",", "t", ")", ":", "\n", "# matrix M = [R, t; 0, 1]", "\n", "    ", "Rt", "=", "np", ".", "concatenate", "(", "(", "R", ",", "np", ".", "expand_dims", "(", "t", ".", "T", ",", "axis", "=", "-", "1", ")", ")", ",", "axis", "=", "1", ")", "\n", "a", "=", "np", ".", "concatenate", "(", "(", "np", ".", "zeros_like", "(", "t", ")", ",", "np", ".", "ones", "(", "1", ")", ")", ")", "\n", "M", "=", "np", ".", "concatenate", "(", "(", "Rt", ",", "np", ".", "expand_dims", "(", "a", ",", "axis", "=", "0", ")", ")", ",", "axis", "=", "0", ")", "\n", "return", "M", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.icp.icp_test": [[90, 135], ["numpy.array", "numpy.array", "A.astype.astype", "icp.ICP", "icp.ICP.compute", "print", "print", "print", "print", "print", "print", "plt.figure", "plt.figure.add_subplot", "fig.add_subplot.set_label", "fig.add_subplot.set_label", "fig.add_subplot.set_label", "fig.add_subplot.plot", "fig.add_subplot.plot", "fig.add_subplot.plot", "plt.show", "numpy.vstack", "numpy.dot", "numpy.dot", "Y.reshape", "X.reshape", "Z.reshape", "cos", "sin", "cos", "sin"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.icp.ICP.compute", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.plot", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.plot", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.plot"], ["", "", "def", "icp_test", "(", ")", ":", "\n", "    ", "from", "math", "import", "sin", ",", "cos", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "from", "mpl_toolkits", ".", "mplot3d", "import", "Axes3D", "\n", "\n", "Y", ",", "X", "=", "np", ".", "mgrid", "[", "0", ":", "100", ":", "5", ",", "0", ":", "100", ":", "5", "]", "\n", "Z", "=", "Y", "**", "2", "+", "X", "**", "2", "\n", "A", "=", "np", ".", "vstack", "(", "[", "Y", ".", "reshape", "(", "-", "1", ")", ",", "X", ".", "reshape", "(", "-", "1", ")", ",", "Z", ".", "reshape", "(", "-", "1", ")", "]", ")", ".", "T", "\n", "\n", "R", "=", "np", ".", "array", "(", "[", "\n", "[", "cos", "(", "-", "0.279", ")", ",", "-", "sin", "(", "-", "0.279", ")", ",", "0", "]", ",", "\n", "[", "sin", "(", "-", "0.279", ")", ",", "cos", "(", "-", "0.279", ")", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "\n", "]", ")", "\n", "#R = np.eye(3)", "\n", "\n", "t", "=", "np", ".", "array", "(", "[", "5.0", ",", "20.0", ",", "10.0", "]", ")", "\n", "#t = np.array([0.0, 0.0, 0.0])", "\n", "\n", "B", "=", "np", ".", "dot", "(", "R", ",", "A", ".", "T", ")", ".", "T", "+", "t", "\n", "A", "=", "A", ".", "astype", "(", "B", ".", "dtype", ")", "\n", "\n", "icp", "=", "ICP", "(", "A", ",", "B", ")", "\n", "matrix", ",", "points", ",", "itr", "=", "icp", ".", "compute", "(", "10", ")", "\n", "\n", "print", "(", "itr", ")", "\n", "print", "(", "icp", ".", "g_series", ")", "\n", "print", "(", "icp", ".", "g_series", "[", "itr", "]", ")", "\n", "print", "(", "matrix", ")", "\n", "print", "(", "R", ".", "T", ")", "\n", "print", "(", "np", ".", "dot", "(", "-", "R", ".", "T", ",", "t", ")", ")", "\n", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "#ax = Axes3D(fig)", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ",", "projection", "=", "'3d'", ")", "\n", "\n", "ax", ".", "set_label", "(", "\"x - axis\"", ")", "\n", "ax", ".", "set_label", "(", "\"y - axis\"", ")", "\n", "ax", ".", "set_label", "(", "\"z - axis\"", ")", "\n", "\n", "ax", ".", "plot", "(", "A", "[", ":", ",", "1", "]", ",", "A", "[", ":", ",", "0", "]", ",", "A", "[", ":", ",", "2", "]", ",", "\"o\"", ",", "color", "=", "\"#cccccc\"", ",", "ms", "=", "4", ",", "mew", "=", "0.5", ")", "\n", "ax", ".", "plot", "(", "points", "[", ":", ",", "1", "]", ",", "points", "[", ":", ",", "0", "]", ",", "points", "[", ":", ",", "2", "]", ",", "\"o\"", ",", "color", "=", "\"#00cccc\"", ",", "ms", "=", "4", ",", "mew", "=", "0.5", ")", "\n", "ax", ".", "plot", "(", "B", "[", ":", ",", "0", "]", ",", "B", "[", ":", ",", "1", "]", ",", "B", "[", ":", ",", "2", "]", ",", "\"o\"", ",", "color", "=", "\"#ff0000\"", ",", "ms", "=", "4", ",", "mew", "=", "0.5", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.Action.__init__": [[103, 119], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "filename", "=", "args", ".", "outfile", "\n", "# PointNet", "\n", "self", ".", "transfer_from", "=", "args", ".", "transfer_from", "\n", "self", ".", "dim_k", "=", "args", ".", "dim_k", "\n", "self", ".", "sym_fn", "=", "None", "\n", "if", "args", ".", "symfn", "==", "'max'", ":", "\n", "            ", "self", ".", "sym_fn", "=", "ptlk", ".", "pointnet", ".", "symfn_max", "\n", "", "elif", "args", ".", "symfn", "==", "'avg'", ":", "\n", "            ", "self", ".", "sym_fn", "=", "ptlk", ".", "pointnet", ".", "symfn_avg", "\n", "# LK", "\n", "", "self", ".", "delta", "=", "args", ".", "delta", "\n", "self", ".", "max_iter", "=", "args", ".", "max_iter", "\n", "self", ".", "xtol", "=", "1.0e-7", "\n", "self", ".", "p0_zero_mean", "=", "True", "\n", "self", ".", "p1_zero_mean", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.Action.create_model": [[120, 123], ["test_pointlk.Action.create_pointnet_features", "test_pointlk.Action.create_from_pointnet_features"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_pointnet_features", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_from_pointnet_features"], ["", "def", "create_model", "(", "self", ")", ":", "\n", "        ", "ptnet", "=", "self", ".", "create_pointnet_features", "(", ")", "\n", "return", "self", ".", "create_from_pointnet_features", "(", "ptnet", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.Action.create_pointnet_features": [[124, 129], ["ptlk.pointnet.PointNet_features", "os.path.isfile", "ptlk.pointnet.PointNet_features.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "create_pointnet_features", "(", "self", ")", ":", "\n", "        ", "ptnet", "=", "ptlk", ".", "pointnet", ".", "PointNet_features", "(", "self", ".", "dim_k", ",", "use_tnet", "=", "False", ",", "sym_fn", "=", "self", ".", "sym_fn", ")", "\n", "if", "self", ".", "transfer_from", "and", "os", ".", "path", ".", "isfile", "(", "self", ".", "transfer_from", ")", ":", "\n", "            ", "ptnet", ".", "load_state_dict", "(", "torch", ".", "load", "(", "self", ".", "transfer_from", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "", "return", "ptnet", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.Action.create_from_pointnet_features": [[130, 132], ["ptlk.pointlk.PointLK"], "methods", ["None"], ["", "def", "create_from_pointnet_features", "(", "self", ",", "ptnet", ")", ":", "\n", "        ", "return", "ptlk", ".", "pointlk", ".", "PointLK", "(", "ptnet", ",", "self", ".", "delta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.Action.eval_1__header": [[133, 138], ["print", "fout.flush", "map"], "methods", ["None"], ["", "def", "eval_1__header", "(", "self", ",", "fout", ")", ":", "\n", "        ", "cols", "=", "[", "'h_w1'", ",", "'h_w2'", ",", "'h_w3'", ",", "'h_v1'", ",", "'h_v2'", ",", "'h_v3'", ",", "'g_w1'", ",", "'g_w2'", ",", "'g_w3'", ",", "'g_v1'", ",", "'g_v2'", ",", "'g_v3'", "]", "# h: estimated, g: ground-truth twist vectors", "\n", "print", "(", "','", ".", "join", "(", "map", "(", "str", ",", "cols", ")", ")", ",", "file", "=", "fout", ")", "\n", "fout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.Action.eval_1__write": [[139, 149], ["ptlk.se3.log", "ptlk.se3.log", "range", "fout.flush", "ptlk.se3.log.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.cpu().numpy().tolist", "torch.cat.cpu().numpy().tolist", "print", "torch.cat.cpu().numpy", "torch.cat.cpu().numpy", "map", "torch.cat.cpu", "torch.cat.cpu"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log"], ["", "def", "eval_1__write", "(", "self", ",", "fout", ",", "ig_gt", ",", "g_hat", ")", ":", "\n", "        ", "x_hat", "=", "ptlk", ".", "se3", ".", "log", "(", "g_hat", ")", "# --> [-1, 6]", "\n", "mx_gt", "=", "ptlk", ".", "se3", ".", "log", "(", "ig_gt", ")", "# --> [-1, 6]", "\n", "for", "i", "in", "range", "(", "x_hat", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "x_hat1", "=", "x_hat", "[", "i", "]", "# [6]", "\n", "mx_gt1", "=", "mx_gt", "[", "i", "]", "# [6]", "\n", "vals", "=", "torch", ".", "cat", "(", "(", "x_hat1", ",", "-", "mx_gt1", ")", ")", "# [12]", "\n", "valn", "=", "vals", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "print", "(", "','", ".", "join", "(", "map", "(", "str", ",", "valn", ")", ")", ",", "file", "=", "fout", ")", "\n", "", "fout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.Action.eval_1": [[150, 168], ["model.eval", "open", "test_pointlk.Action.eval_1__header", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "test_pointlk.Action.do_estimate", "igt.cpu().contiguous().view", "test_pointlk.Action.cpu().contiguous().view", "test_pointlk.Action.cpu().contiguous().view.bmm", "ptlk.se3.log", "ptlk.se3.log.norm", "ptlk.se3.log.norm.mean", "test_pointlk.Action.eval_1__write", "LOGGER.info", "len", "igt.cpu().contiguous", "test_pointlk.Action.cpu().contiguous", "igt.cpu", "test_pointlk.Action.cpu"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.eval_1__header", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.do_estimate", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.eval_1__write"], ["", "def", "eval_1", "(", "self", ",", "model", ",", "testloader", ",", "device", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "with", "open", "(", "self", ".", "filename", ",", "'w'", ")", "as", "fout", ":", "\n", "            ", "self", ".", "eval_1__header", "(", "fout", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "i", ",", "data", "in", "enumerate", "(", "testloader", ")", ":", "\n", "                    ", "p0", ",", "p1", ",", "igt", "=", "data", "\n", "res", "=", "self", ".", "do_estimate", "(", "p0", ",", "p1", ",", "model", ",", "device", ")", "# --> [1, 4, 4]", "\n", "ig_gt", "=", "igt", ".", "cpu", "(", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "# --> [1, 4, 4]", "\n", "g_hat", "=", "res", ".", "cpu", "(", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "# --> [1, 4, 4]", "\n", "\n", "dg", "=", "g_hat", ".", "bmm", "(", "ig_gt", ")", "# if correct, dg == identity matrix.", "\n", "dx", "=", "ptlk", ".", "se3", ".", "log", "(", "dg", ")", "# --> [1, 6] (if corerct, dx == zero vector)", "\n", "dn", "=", "dx", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", "# --> [1]", "\n", "dm", "=", "dn", ".", "mean", "(", ")", "\n", "\n", "self", ".", "eval_1__write", "(", "fout", ",", "ig_gt", ",", "g_hat", ")", "\n", "LOGGER", ".", "info", "(", "'test, %d/%d, %f'", ",", "i", ",", "len", "(", "testloader", ")", ",", "dm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.Action.do_estimate": [[170, 179], ["p0.to.to.to", "p1.to.to.to", "ptlk.pointlk.PointLK.do_forward"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.do_forward"], ["", "", "", "", "def", "do_estimate", "(", "self", ",", "p0", ",", "p1", ",", "model", ",", "device", ")", ":", "\n", "        ", "p0", "=", "p0", ".", "to", "(", "device", ")", "# template (1, N, 3)", "\n", "p1", "=", "p1", ".", "to", "(", "device", ")", "# source (1, M, 3)", "\n", "r", "=", "ptlk", ".", "pointlk", ".", "PointLK", ".", "do_forward", "(", "model", ",", "p0", ",", "p1", ",", "self", ".", "max_iter", ",", "self", ".", "xtol", ",", "self", ".", "p0_zero_mean", ",", "self", ".", "p1_zero_mean", ")", "\n", "#r = model(p0, p1, self.max_iter)", "\n", "est_g", "=", "model", ".", "g", "# (1, 4, 4)", "\n", "\n", "return", "est_g", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.options": [[25, 68], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "options", "(", "argv", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PointNet-LK'", ")", "\n", "\n", "# required.", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--outfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'FILENAME'", ",", "help", "=", "'output filename (.csv)'", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--dataset-path'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the input dataset'", ")", "# like '/path/to/ModelNet40'", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "'--categoryfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the categories to be tested'", ")", "# eg. './sampledata/modelnet40_half1.txt'", "\n", "parser", ".", "add_argument", "(", "'-p'", ",", "'--perturbations'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the perturbation file'", ")", "# see. generate_perturbations.py", "\n", "\n", "# settings for input data", "\n", "parser", ".", "add_argument", "(", "'--dataset-type'", ",", "default", "=", "'modelnet'", ",", "choices", "=", "[", "'modelnet'", "]", ",", "\n", "metavar", "=", "'DATASET'", ",", "help", "=", "'dataset type (default: modelnet)'", ")", "\n", "parser", ".", "add_argument", "(", "'--format'", ",", "default", "=", "'wv'", ",", "choices", "=", "[", "'wv'", ",", "'wt'", "]", ",", "\n", "help", "=", "'perturbation format (default: wv (twist)) (wt: rotation and translation)'", ")", "# the output is always in twist format", "\n", "\n", "# settings for PointNet-LK", "\n", "parser", ".", "add_argument", "(", "'--max-iter'", ",", "default", "=", "20", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'max-iter on LK. (default: 20)'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrained'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to trained model file (default: null (no-use))'", ")", "\n", "parser", ".", "add_argument", "(", "'--transfer-from'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to classifier feature (default: null (no-use))'", ")", "\n", "parser", ".", "add_argument", "(", "'--dim-k'", ",", "default", "=", "1024", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'K'", ",", "help", "=", "'dim. of the feature vector (default: 1024)'", ")", "\n", "parser", ".", "add_argument", "(", "'--symfn'", ",", "default", "=", "'max'", ",", "choices", "=", "[", "'max'", ",", "'avg'", "]", ",", "\n", "help", "=", "'symmetric function (default: max)'", ")", "\n", "parser", ".", "add_argument", "(", "'--delta'", ",", "default", "=", "1.0e-2", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'step size for approx. Jacobian (default: 1.0e-2)'", ")", "\n", "\n", "# settings for on testing", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--logfile'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'LOGNAME'", ",", "help", "=", "'path to logfile (default: null (no logging))'", ")", "\n", "parser", ".", "add_argument", "(", "'-j'", ",", "'--workers'", ",", "default", "=", "4", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of data loading workers (default: 4)'", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "'cpu'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'DEVICE'", ",", "help", "=", "'use CUDA if available (default: cpu)'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.main": [[69, 76], ["test_pointlk.get_datasets", "test_pointlk.Action", "test_pointlk.run"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.get_datasets", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.run"], ["", "def", "main", "(", "args", ")", ":", "\n", "# dataset", "\n", "    ", "testset", "=", "get_datasets", "(", "args", ")", "\n", "\n", "# testing", "\n", "act", "=", "Action", "(", "args", ")", "\n", "run", "(", "args", ",", "testset", ",", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.run": [[78, 100], ["torch.device", "torch.device", "LOGGER.debug", "action.create_model", "action.create_model.to", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "LOGGER.debug", "action.eval_1", "LOGGER.debug", "torch.cuda.is_available", "torch.cuda.is_available", "os.getpid", "os.path.isfile", "action.create_model.load_state_dict", "torch.load", "torch.load"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_model", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.eval_1"], ["", "def", "run", "(", "args", ",", "testset", ",", "action", ")", ":", "\n", "    ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "args", ".", "device", "=", "'cpu'", "\n", "", "args", ".", "device", "=", "torch", ".", "device", "(", "args", ".", "device", ")", "\n", "\n", "LOGGER", ".", "debug", "(", "'Testing (PID=%d), %s'", ",", "os", ".", "getpid", "(", ")", ",", "args", ")", "\n", "\n", "model", "=", "action", ".", "create_model", "(", ")", "\n", "if", "args", ".", "pretrained", ":", "\n", "        ", "assert", "os", ".", "path", ".", "isfile", "(", "args", ".", "pretrained", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "pretrained", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# dataloader", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "\n", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "# testing", "\n", "LOGGER", ".", "debug", "(", "'tests, begin'", ")", "\n", "action", ".", "eval_1", "(", "model", ",", "testloader", ",", "args", ".", "device", ")", "\n", "LOGGER", ".", "debug", "(", "'tests, end'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_pointlk.get_datasets": [[181, 210], ["categories.sort", "numpy.loadtxt", "torchvision.transforms.Compose", "ptlk.data.datasets.ModelNet", "ptlk.data.datasets.CADset4tracking_fixed_perturbation", "line.rstrip", "open", "range", "ptlk.data.transforms.Mesh2Points", "ptlk.data.transforms.OnUnitCube", "len"], "function", ["None"], ["", "", "def", "get_datasets", "(", "args", ")", ":", "\n", "\n", "    ", "cinfo", "=", "None", "\n", "if", "args", ".", "categoryfile", ":", "\n", "#categories = numpy.loadtxt(args.categoryfile, dtype=str, delimiter=\"\\n\").tolist()", "\n", "        ", "categories", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "open", "(", "args", ".", "categoryfile", ")", "]", "\n", "categories", ".", "sort", "(", ")", "\n", "c_to_idx", "=", "{", "categories", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "categories", ")", ")", "}", "\n", "cinfo", "=", "(", "categories", ",", "c_to_idx", ")", "\n", "\n", "", "perturbations", "=", "None", "\n", "fmt_trans", "=", "False", "\n", "if", "args", ".", "perturbations", ":", "\n", "        ", "perturbations", "=", "numpy", ".", "loadtxt", "(", "args", ".", "perturbations", ",", "delimiter", "=", "','", ")", "\n", "", "if", "args", ".", "format", "==", "'wt'", ":", "\n", "        ", "fmt_trans", "=", "True", "\n", "\n", "", "if", "args", ".", "dataset_type", "==", "'modelnet'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "ptlk", ".", "data", ".", "transforms", ".", "Mesh2Points", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "OnUnitCube", "(", ")", ",", "]", ")", "\n", "\n", "testdata", "=", "ptlk", ".", "data", ".", "datasets", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "0", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "\n", "testset", "=", "ptlk", ".", "data", ".", "datasets", ".", "CADset4tracking_fixed_perturbation", "(", "testdata", ",", "perturbations", ",", "fmt_trans", "=", "fmt_trans", ")", "\n", "\n", "", "return", "testset", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.Action.__init__": [[156, 165], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "num_classes", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "dim_k", "=", "args", ".", "dim_k", "\n", "self", ".", "use_tnet", "=", "args", ".", "use_tnet", "\n", "self", ".", "sym_fn", "=", "None", "\n", "if", "args", ".", "symfn", "==", "'max'", ":", "\n", "            ", "self", ".", "sym_fn", "=", "ptlk", ".", "pointnet", ".", "symfn_max", "\n", "", "elif", "args", ".", "symfn", "==", "'avg'", ":", "\n", "            ", "self", ".", "sym_fn", "=", "ptlk", ".", "pointnet", ".", "symfn_avg", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.Action.create_model": [[166, 169], ["ptlk.pointnet.PointNet_features", "ptlk.pointnet.PointNet_classifier"], "methods", ["None"], ["", "", "def", "create_model", "(", "self", ")", ":", "\n", "        ", "feat", "=", "ptlk", ".", "pointnet", ".", "PointNet_features", "(", "self", ".", "dim_k", ",", "self", ".", "use_tnet", ",", "self", ".", "sym_fn", ")", "\n", "return", "ptlk", ".", "pointnet", ".", "PointNet_classifier", "(", "self", ".", "num_classes", ",", "feat", ",", "self", ".", "dim_k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.Action.train_1": [[170, 194], ["model.train", "enumerate", "train_classifier.Action.compute_loss", "optimizer.zero_grad", "loss.backward", "optimizer.step", "loss.item", "output.size", "output.max", "ag.sum", "ag.sum.item", "float", "float"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.compute_loss", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.ExpMap.backward"], ["", "def", "train_1", "(", "self", ",", "model", ",", "trainloader", ",", "optimizer", ",", "device", ")", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "vloss", "=", "0.0", "\n", "pred", "=", "0.0", "\n", "count", "=", "0", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "            ", "target", ",", "output", ",", "loss", "=", "self", ".", "compute_loss", "(", "model", ",", "data", ",", "device", ")", "\n", "# forward + backward + optimize", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "loss1", "=", "loss", ".", "item", "(", ")", "\n", "vloss", "+=", "loss1", "\n", "count", "+=", "output", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred1", "=", "output", ".", "max", "(", "dim", "=", "1", ")", "\n", "ag", "=", "(", "pred1", "==", "target", ")", "\n", "am", "=", "ag", ".", "sum", "(", ")", "\n", "pred", "+=", "am", ".", "item", "(", ")", "\n", "\n", "", "running_loss", "=", "float", "(", "vloss", ")", "/", "count", "\n", "accuracy", "=", "float", "(", "pred", ")", "/", "count", "\n", "return", "running_loss", ",", "accuracy", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.Action.eval_1": [[195, 216], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "float", "float", "train_classifier.Action.compute_loss", "loss.item", "output.size", "output.max", "ag.sum", "ag.sum.item"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.compute_loss"], ["", "def", "eval_1", "(", "self", ",", "model", ",", "testloader", ",", "device", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "vloss", "=", "0.0", "\n", "pred", "=", "0.0", "\n", "count", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "data", "in", "enumerate", "(", "testloader", ")", ":", "\n", "                ", "target", ",", "output", ",", "loss", "=", "self", ".", "compute_loss", "(", "model", ",", "data", ",", "device", ")", "\n", "\n", "loss1", "=", "loss", ".", "item", "(", ")", "\n", "vloss", "+=", "loss1", "\n", "count", "+=", "output", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred1", "=", "output", ".", "max", "(", "dim", "=", "1", ")", "\n", "ag", "=", "(", "pred1", "==", "target", ")", "\n", "am", "=", "ag", ".", "sum", "(", ")", "\n", "pred", "+=", "am", ".", "item", "(", ")", "\n", "\n", "", "", "ave_loss", "=", "float", "(", "vloss", ")", "/", "count", "\n", "accuracy", "=", "float", "(", "pred", ")", "/", "count", "\n", "return", "ave_loss", ",", "accuracy", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.Action.compute_loss": [[217, 227], ["points.to.to.to", "target.to.to.to", "model", "model.loss"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.PointNet_classifier.loss"], ["", "def", "compute_loss", "(", "self", ",", "model", ",", "data", ",", "device", ")", ":", "\n", "        ", "points", ",", "target", "=", "data", "\n", "\n", "points", "=", "points", ".", "to", "(", "device", ")", "\n", "target", "=", "target", ".", "to", "(", "device", ")", "\n", "\n", "output", "=", "model", "(", "points", ")", "\n", "loss", "=", "model", ".", "loss", "(", "output", ",", "target", ")", "\n", "\n", "return", "target", ",", "output", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.ShapeNet2_transform_coordinate.__init__": [[230, 232], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "def", "__call__", "(", "self", ",", "mesh", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.ShapeNet2_transform_coordinate.__call__": [[232, 234], ["mesh.clone().rot_x", "mesh.clone"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.rot_x", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.clone"], ["", "def", "__call__", "(", "self", ",", "mesh", ")", ":", "\n", "        ", "return", "mesh", ".", "clone", "(", ")", ".", "rot_x", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.options": [[26, 73], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "options", "(", "argv", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PointNet classifier'", ")", "\n", "\n", "# required.", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--outfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'BASENAME'", ",", "help", "=", "'output filename (prefix)'", ")", "# result: ${BASENAME}_feat_best.pth", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--dataset-path'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the input dataset'", ")", "# like '/path/to/ModelNet40'", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "'--categoryfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the categories to be trained'", ")", "# eg. './sampledata/modelnet40_half1.txt'", "\n", "\n", "# settings for input data", "\n", "parser", ".", "add_argument", "(", "'--dataset-type'", ",", "default", "=", "'modelnet'", ",", "choices", "=", "[", "'modelnet'", ",", "'shapenet2'", "]", ",", "\n", "metavar", "=", "'DATASET'", ",", "help", "=", "'dataset type (default: modelnet)'", ")", "\n", "parser", ".", "add_argument", "(", "'--num-points'", ",", "default", "=", "1024", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'points in point-cloud (default: 1024)'", ")", "\n", "\n", "# settings for PointNet", "\n", "parser", ".", "add_argument", "(", "'--use-tnet'", ",", "dest", "=", "'use_tnet'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'flag for setting up PointNet with TNet'", ")", "\n", "parser", ".", "add_argument", "(", "'--dim-k'", ",", "default", "=", "1024", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'K'", ",", "help", "=", "'dim. of the feature vector (default: 1024)'", ")", "\n", "parser", ".", "add_argument", "(", "'--symfn'", ",", "default", "=", "'max'", ",", "choices", "=", "[", "'max'", ",", "'avg'", "]", ",", "\n", "help", "=", "'symmetric function (default: max)'", ")", "\n", "\n", "# settings for on training", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--logfile'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'LOGNAME'", ",", "help", "=", "'path to logfile (default: null (no logging))'", ")", "\n", "parser", ".", "add_argument", "(", "'-j'", ",", "'--workers'", ",", "default", "=", "4", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of data loading workers (default: 4)'", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch-size'", ",", "default", "=", "32", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'mini-batch size (default: 32)'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "default", "=", "200", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of total epochs to run'", ")", "\n", "parser", ".", "add_argument", "(", "'--start-epoch'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'manual epoch number (useful on restarts)'", ")", "\n", "parser", ".", "add_argument", "(", "'--optimizer'", ",", "default", "=", "'Adam'", ",", "choices", "=", "[", "'Adam'", ",", "'SGD'", "]", ",", "\n", "metavar", "=", "'METHOD'", ",", "help", "=", "'name of an optimizer (default: Adam)'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to latest checkpoint (default: null (no-use))'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrained'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to pretrained model file (default: null (no-use))'", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "'cuda:0'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'DEVICE'", ",", "help", "=", "'use CUDA if available'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.main": [[74, 82], ["train_classifier.get_datasets", "len", "train_classifier.Action", "train_classifier.run"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.get_datasets", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.run"], ["", "def", "main", "(", "args", ")", ":", "\n", "# dataset", "\n", "    ", "trainset", ",", "testset", "=", "get_datasets", "(", "args", ")", "\n", "num_classes", "=", "len", "(", "trainset", ".", "classes", ")", "\n", "\n", "# training", "\n", "act", "=", "Action", "(", "args", ",", "num_classes", ")", "\n", "run", "(", "args", ",", "trainset", ",", "testset", ",", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.run": [[84, 150], ["torch.device", "torch.device", "LOGGER.debug", "action.create_model", "action.create_model.to", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "float", "filter", "LOGGER.debug", "range", "LOGGER.debug", "torch.cuda.is_available", "torch.cuda.is_available", "os.getpid", "os.path.isfile", "action.create_model.load_state_dict", "os.path.isfile", "torch.load", "torch.load", "action.create_model.load_state_dict", "action.create_model.parameters", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD.load_state_dict", "action.train_1", "action.eval_1", "min", "LOGGER.info", "train_classifier.save_checkpoint", "train_classifier.save_checkpoint", "train_classifier.save_checkpoint", "torch.load", "torch.load", "action.create_model.state_dict", "torch.optim.SGD.state_dict", "train_classifier.save_checkpoint", "train_classifier.save_checkpoint", "train_classifier.save_checkpoint", "action.create_model.state_dict", "action.create_model.features.state_dict", "action.create_model.state_dict", "action.create_model.features.state_dict"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_model", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.train_1", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.eval_1", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint"], ["", "def", "run", "(", "args", ",", "trainset", ",", "testset", ",", "action", ")", ":", "\n", "    ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "args", ".", "device", "=", "'cpu'", "\n", "", "args", ".", "device", "=", "torch", ".", "device", "(", "args", ".", "device", ")", "\n", "\n", "LOGGER", ".", "debug", "(", "'Trainer (PID=%d), %s'", ",", "os", ".", "getpid", "(", ")", ",", "args", ")", "\n", "\n", "model", "=", "action", ".", "create_model", "(", ")", "\n", "if", "args", ".", "pretrained", ":", "\n", "        ", "assert", "os", ".", "path", ".", "isfile", "(", "args", ".", "pretrained", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "pretrained", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "checkpoint", "=", "None", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "assert", "os", ".", "path", ".", "isfile", "(", "args", ".", "resume", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "\n", "# dataloader", "\n", "", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "# optimizer", "\n", "min_loss", "=", "float", "(", "'inf'", ")", "\n", "learnable_params", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", "\n", "if", "args", ".", "optimizer", "==", "'Adam'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "learnable_params", ")", "\n", "", "else", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "learnable_params", ",", "lr", "=", "0.1", ")", "\n", "\n", "", "if", "checkpoint", "is", "not", "None", ":", "\n", "        ", "min_loss", "=", "checkpoint", "[", "'min_loss'", "]", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "\n", "# training", "\n", "", "LOGGER", ".", "debug", "(", "'train, begin'", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "#scheduler.step()", "\n", "\n", "        ", "running_loss", ",", "running_info", "=", "action", ".", "train_1", "(", "model", ",", "trainloader", ",", "optimizer", ",", "args", ".", "device", ")", "\n", "val_loss", ",", "val_info", "=", "action", ".", "eval_1", "(", "model", ",", "testloader", ",", "args", ".", "device", ")", "\n", "\n", "is_best", "=", "val_loss", "<", "min_loss", "\n", "min_loss", "=", "min", "(", "val_loss", ",", "min_loss", ")", "\n", "\n", "LOGGER", ".", "info", "(", "'epoch, %04d, %f, %f, %f, %f'", ",", "epoch", "+", "1", ",", "running_loss", ",", "val_loss", ",", "running_info", ",", "val_info", ")", "\n", "snap", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'min_loss'", ":", "min_loss", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "}", "\n", "if", "is_best", ":", "\n", "            ", "save_checkpoint", "(", "snap", ",", "args", ".", "outfile", ",", "'snap_best'", ")", "\n", "save_checkpoint", "(", "model", ".", "state_dict", "(", ")", ",", "args", ".", "outfile", ",", "'model_best'", ")", "\n", "save_checkpoint", "(", "model", ".", "features", ".", "state_dict", "(", ")", ",", "args", ".", "outfile", ",", "'feat_best'", ")", "\n", "\n", "", "save_checkpoint", "(", "snap", ",", "args", ".", "outfile", ",", "'snap_last'", ")", "\n", "save_checkpoint", "(", "model", ".", "state_dict", "(", ")", ",", "args", ".", "outfile", ",", "'model_last'", ")", "\n", "save_checkpoint", "(", "model", ".", "features", ".", "state_dict", "(", ")", ",", "args", ".", "outfile", ",", "'feat_last'", ")", "\n", "\n", "", "LOGGER", ".", "debug", "(", "'train, end'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.save_checkpoint": [[151, 153], ["torch.save", "torch.save"], "function", ["None"], ["", "def", "save_checkpoint", "(", "state", ",", "filename", ",", "suffix", ")", ":", "\n", "    ", "torch", ".", "save", "(", "state", ",", "'{}_{}.pth'", ".", "format", "(", "filename", ",", "suffix", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_classifier.get_datasets": [[235, 271], ["categories.sort", "torchvision.transforms.Compose", "ptlk.data.datasets.ModelNet", "ptlk.data.datasets.ModelNet", "line.rstrip", "torchvision.transforms.Compose", "ptlk.data.datasets.ShapeNet2", "ptlk.data.datasets.ShapeNet2.split", "open", "range", "ptlk.data.transforms.Mesh2Points", "ptlk.data.transforms.OnUnitCube", "ptlk.data.transforms.Resampler", "ptlk.data.transforms.RandomRotatorZ", "ptlk.data.transforms.RandomJitter", "len", "train_classifier.ShapeNet2_transform_coordinate", "ptlk.data.transforms.Mesh2Points", "ptlk.data.transforms.OnUnitCube", "ptlk.data.transforms.Resampler", "ptlk.data.transforms.RandomRotatorZ", "ptlk.data.transforms.RandomJitter"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.split"], ["", "", "def", "get_datasets", "(", "args", ")", ":", "\n", "\n", "    ", "cinfo", "=", "None", "\n", "if", "args", ".", "categoryfile", ":", "\n", "#categories = numpy.loadtxt(args.categoryfile, dtype=str, delimiter=\"\\n\").tolist()", "\n", "        ", "categories", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "open", "(", "args", ".", "categoryfile", ")", "]", "\n", "categories", ".", "sort", "(", ")", "\n", "c_to_idx", "=", "{", "categories", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "categories", ")", ")", "}", "\n", "cinfo", "=", "(", "categories", ",", "c_to_idx", ")", "\n", "\n", "", "if", "args", ".", "dataset_type", "==", "'modelnet'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "ptlk", ".", "data", ".", "transforms", ".", "Mesh2Points", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "OnUnitCube", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "Resampler", "(", "args", ".", "num_points", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "RandomRotatorZ", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "RandomJitter", "(", ")", "]", ")", "\n", "\n", "trainset", "=", "ptlk", ".", "data", ".", "datasets", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "1", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "testset", "=", "ptlk", ".", "data", ".", "datasets", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "0", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "\n", "", "elif", "args", ".", "dataset_type", "==", "'shapenet2'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "ShapeNet2_transform_coordinate", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "Mesh2Points", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "OnUnitCube", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "Resampler", "(", "args", ".", "num_points", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "RandomRotatorZ", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "RandomJitter", "(", ")", "]", ")", "\n", "\n", "dataset", "=", "ptlk", ".", "data", ".", "datasets", ".", "ShapeNet2", "(", "args", ".", "dataset_path", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "trainset", ",", "testset", "=", "dataset", ".", "split", "(", "0.8", ")", "\n", "\n", "", "return", "trainset", ",", "testset", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.generate_perturbations.options": [[18, 41], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "options", "(", "argv", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PointNet-LK'", ")", "\n", "\n", "# required.", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--outfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'FILENAME'", ",", "help", "=", "'output filename (.csv)'", ")", "# the perturbation file for 'test_pointlk.py'", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--dataset-path'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the input dataset'", ")", "# like '/path/to/ModelNet40'", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "'--categoryfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the categories to be tested'", ")", "# eg. './sampledata/modelnet40_half1.txt'", "\n", "\n", "# settings for input data", "\n", "parser", ".", "add_argument", "(", "'--mag'", ",", "default", "=", "1.0", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'T'", ",", "help", "=", "'mag. of twist-vectors (perturbations) (default: 1.0)'", ")", "\n", "parser", ".", "add_argument", "(", "'--mag-randomry'", ",", "dest", "=", "'mag_randomly'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'flag to no-fix mag. of twist-vectors'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-translation'", ",", "dest", "=", "'no_translation'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'generate twist-vectors as (w, 0) (rotation-only)'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset-type'", ",", "default", "=", "'modelnet'", ",", "choices", "=", "[", "'modelnet'", "]", ",", "\n", "metavar", "=", "'DATASET'", ",", "help", "=", "'dataset type (default: modelnet)'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.generate_perturbations.main": [[42, 57], ["generate_perturbations.get_datasets", "len", "numpy.savetxt", "ptlk.data.datasets.CADset4tracking_fixed_perturbation.generate_perturbations", "ptlk.data.datasets.CADset4tracking_fixed_perturbation.generate_rotations"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.get_datasets", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.generate_perturbations", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.generate_rotations"], ["", "def", "main", "(", "args", ")", ":", "\n", "# dataset", "\n", "    ", "testset", "=", "get_datasets", "(", "args", ")", "\n", "batch_size", "=", "len", "(", "testset", ")", "\n", "\n", "if", "not", "args", ".", "no_translation", ":", "\n", "        ", "x", "=", "ptlk", ".", "data", ".", "datasets", ".", "CADset4tracking_fixed_perturbation", ".", "generate_perturbations", "(", "batch_size", ",", "args", ".", "mag", ",", "randomly", "=", "args", ".", "mag_randomly", ")", "\n", "", "else", ":", "\n", "        ", "x", "=", "ptlk", ".", "data", ".", "datasets", ".", "CADset4tracking_fixed_perturbation", ".", "generate_rotations", "(", "batch_size", ",", "args", ".", "mag", ",", "randomly", "=", "args", ".", "mag_randomly", ")", "\n", "\n", "", "numpy", ".", "savetxt", "(", "args", ".", "outfile", ",", "x", ",", "delimiter", "=", "','", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.generate_perturbations.get_datasets": [[58, 77], ["categories.sort", "torchvision.transforms.Compose", "ptlk.data.datasets.ModelNet", "line.rstrip", "open", "range", "ptlk.data.transforms.Mesh2Points", "ptlk.data.transforms.OnUnitCube", "len"], "function", ["None"], ["", "def", "get_datasets", "(", "args", ")", ":", "\n", "\n", "    ", "cinfo", "=", "None", "\n", "if", "args", ".", "categoryfile", ":", "\n", "#categories = numpy.loadtxt(args.categoryfile, dtype=str, delimiter=\"\\n\").tolist()", "\n", "        ", "categories", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "open", "(", "args", ".", "categoryfile", ")", "]", "\n", "categories", ".", "sort", "(", ")", "\n", "c_to_idx", "=", "{", "categories", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "categories", ")", ")", "}", "\n", "cinfo", "=", "(", "categories", ",", "c_to_idx", ")", "\n", "\n", "", "if", "args", ".", "dataset_type", "==", "'modelnet'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "ptlk", ".", "data", ".", "transforms", ".", "Mesh2Points", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "OnUnitCube", "(", ")", ",", "]", ")", "\n", "\n", "testdata", "=", "ptlk", ".", "data", ".", "datasets", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "0", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "\n", "", "return", "testdata", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.__init__": [[86, 90], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "filename", "=", "args", ".", "outfile", "\n", "# ICP", "\n", "self", ".", "max_iter", "=", "args", ".", "max_iter", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.eval_1__header": [[91, 96], ["print", "fout.flush", "map"], "methods", ["None"], ["", "def", "eval_1__header", "(", "self", ",", "fout", ")", ":", "\n", "        ", "cols", "=", "[", "'h_w1'", ",", "'h_w2'", ",", "'h_w3'", ",", "'h_v1'", ",", "'h_v2'", ",", "'h_v3'", ",", "'g_w1'", ",", "'g_w2'", ",", "'g_w3'", ",", "'g_v1'", ",", "'g_v2'", ",", "'g_v3'", "]", "# h: estimated, g: ground-truth twist vectors", "\n", "print", "(", "','", ".", "join", "(", "map", "(", "str", ",", "cols", ")", ")", ",", "file", "=", "fout", ")", "\n", "fout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.eval_1__write": [[97, 107], ["ptlk.se3.log", "ptlk.se3.log", "range", "fout.flush", "ptlk.se3.log.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.cpu().numpy().tolist", "torch.cat.cpu().numpy().tolist", "print", "torch.cat.cpu().numpy", "torch.cat.cpu().numpy", "map", "torch.cat.cpu", "torch.cat.cpu"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log"], ["", "def", "eval_1__write", "(", "self", ",", "fout", ",", "ig_gt", ",", "g_hat", ")", ":", "\n", "        ", "x_hat", "=", "ptlk", ".", "se3", ".", "log", "(", "g_hat", ")", "# --> [-1, 6]", "\n", "mx_gt", "=", "ptlk", ".", "se3", ".", "log", "(", "ig_gt", ")", "# --> [-1, 6]", "\n", "for", "i", "in", "range", "(", "x_hat", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "x_hat1", "=", "x_hat", "[", "i", "]", "# [6]", "\n", "mx_gt1", "=", "mx_gt", "[", "i", "]", "# [6]", "\n", "vals", "=", "torch", ".", "cat", "(", "(", "x_hat1", ",", "-", "mx_gt1", ")", ")", "# [12]", "\n", "valn", "=", "vals", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "print", "(", "','", ".", "join", "(", "map", "(", "str", ",", "valn", ")", ")", ",", "file", "=", "fout", ")", "\n", "", "fout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.eval_1": [[108, 125], ["open", "test_icp.Action.eval_1__header", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "test_icp.Action.do_estimate", "igt.cpu().contiguous().view", "test_icp.Action.cpu().contiguous().view", "test_icp.Action.cpu().contiguous().view.bmm", "ptlk.se3.log", "ptlk.se3.log.norm", "ptlk.se3.log.norm.mean", "test_icp.Action.eval_1__write", "LOGGER.info", "len", "igt.cpu().contiguous", "test_icp.Action.cpu().contiguous", "igt.cpu", "test_icp.Action.cpu"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.eval_1__header", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.do_estimate", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.eval_1__write"], ["", "def", "eval_1", "(", "self", ",", "testloader", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "filename", ",", "'w'", ")", "as", "fout", ":", "\n", "            ", "self", ".", "eval_1__header", "(", "fout", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "i", ",", "data", "in", "enumerate", "(", "testloader", ")", ":", "\n", "                    ", "p0", ",", "p1", ",", "igt", "=", "data", "\n", "res", "=", "self", ".", "do_estimate", "(", "p0", ",", "p1", ")", "# [1, N, 3] x [1, M, 3] --> [1, 4, 4]", "\n", "ig_gt", "=", "igt", ".", "cpu", "(", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "# --> [1, 4, 4]", "\n", "g_hat", "=", "res", ".", "cpu", "(", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "# --> [1, 4, 4]", "\n", "\n", "dg", "=", "g_hat", ".", "bmm", "(", "ig_gt", ")", "# if correct, dg == identity matrix.", "\n", "dx", "=", "ptlk", ".", "se3", ".", "log", "(", "dg", ")", "# --> [1, 6] (if corerct, dx == zero vector)", "\n", "dn", "=", "dx", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", "# --> [1]", "\n", "dm", "=", "dn", ".", "mean", "(", ")", "\n", "\n", "self", ".", "eval_1__write", "(", "fout", ",", "ig_gt", ",", "g_hat", ")", "\n", "LOGGER", ".", "info", "(", "'test, %d/%d, %f'", ",", "i", ",", "len", "(", "testloader", ")", ",", "dm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.Action.do_estimate": [[127, 137], ["p0.cpu().contiguous().squeeze().numpy", "p1.cpu().contiguous().squeeze().numpy", "icp.ICP", "icp.ICP.compute", "torch.from_numpy().view().to", "torch.from_numpy().view().to", "torch.from_numpy().view().to", "torch.from_numpy().view().to", "p0.cpu().contiguous().squeeze", "p1.cpu().contiguous().squeeze", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "p0.cpu().contiguous", "p1.cpu().contiguous", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "p0.cpu", "p1.cpu"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.icp.ICP.compute"], ["", "", "", "", "def", "do_estimate", "(", "self", ",", "p0", ",", "p1", ")", ":", "\n", "        ", "np_p0", "=", "p0", ".", "cpu", "(", ")", ".", "contiguous", "(", ")", ".", "squeeze", "(", "0", ")", ".", "numpy", "(", ")", "# --> (N, 3)", "\n", "np_p1", "=", "p1", ".", "cpu", "(", ")", ".", "contiguous", "(", ")", ".", "squeeze", "(", "0", ")", ".", "numpy", "(", ")", "# --> (M, 3)", "\n", "\n", "mod", "=", "icp", ".", "ICP", "(", "np_p0", ",", "np_p1", ")", "\n", "g", ",", "p", ",", "itr", "=", "mod", ".", "compute", "(", "self", ".", "max_iter", ")", "\n", "\n", "est_g", "=", "torch", ".", "from_numpy", "(", "g", ")", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", ".", "to", "(", "p0", ")", "# (1, 4, 4)", "\n", "\n", "return", "est_g", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.options": [[28, 59], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "options", "(", "argv", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'ICP'", ")", "\n", "\n", "# required.", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--outfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'FILENAME'", ",", "help", "=", "'output filename (.csv)'", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--dataset-path'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the input dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "'--categoryfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the categories to be tested'", ")", "\n", "parser", ".", "add_argument", "(", "'-p'", ",", "'--perturbations'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the perturbations'", ")", "\n", "\n", "# settings for input data", "\n", "parser", ".", "add_argument", "(", "'--dataset-type'", ",", "default", "=", "'modelnet'", ",", "choices", "=", "[", "'modelnet'", "]", ",", "\n", "metavar", "=", "'DATASET'", ",", "help", "=", "'dataset type (default: modelnet)'", ")", "\n", "parser", ".", "add_argument", "(", "'--format'", ",", "default", "=", "'wv'", ",", "choices", "=", "[", "'wv'", ",", "'wt'", "]", ",", "\n", "help", "=", "'perturbation format (default: wv (twist)) (wt: rotation and translation)'", ")", "# the output is always in twist format", "\n", "\n", "# settings for ICP", "\n", "parser", ".", "add_argument", "(", "'--max-iter'", ",", "default", "=", "20", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'max-iter on ICP. (default: 20)'", ")", "\n", "\n", "# settings for on testing", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--logfile'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'LOGNAME'", ",", "help", "=", "'path to logfile (default: null (no logging))'", ")", "\n", "parser", ".", "add_argument", "(", "'-j'", ",", "'--workers'", ",", "default", "=", "4", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of data loading workers (default: 4)'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.main": [[60, 67], ["test_icp.get_datasets", "test_icp.Action", "test_icp.run"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.get_datasets", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.run"], ["", "def", "main", "(", "args", ")", ":", "\n", "# dataset", "\n", "    ", "testset", "=", "get_datasets", "(", "args", ")", "\n", "\n", "# testing", "\n", "act", "=", "Action", "(", "args", ")", "\n", "run", "(", "args", ",", "testset", ",", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.run": [[69, 83], ["LOGGER.debug", "sys.setrecursionlimit", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "LOGGER.debug", "action.eval_1", "LOGGER.debug", "os.getpid"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.eval_1"], ["", "def", "run", "(", "args", ",", "testset", ",", "action", ")", ":", "\n", "    ", "LOGGER", ".", "debug", "(", "'Testing (PID=%d), %s'", ",", "os", ".", "getpid", "(", ")", ",", "args", ")", "\n", "\n", "sys", ".", "setrecursionlimit", "(", "20000", ")", "\n", "\n", "# dataloader", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "\n", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "# testing", "\n", "LOGGER", ".", "debug", "(", "'tests, begin'", ")", "\n", "action", ".", "eval_1", "(", "testloader", ")", "\n", "LOGGER", ".", "debug", "(", "'tests, end'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_icp.get_datasets": [[139, 168], ["categories.sort", "numpy.loadtxt", "torchvision.transforms.Compose", "ptlk.data.datasets.ModelNet", "ptlk.data.datasets.CADset4tracking_fixed_perturbation", "line.rstrip", "open", "range", "ptlk.data.transforms.Mesh2Points", "ptlk.data.transforms.OnUnitCube", "len"], "function", ["None"], ["", "", "def", "get_datasets", "(", "args", ")", ":", "\n", "\n", "    ", "cinfo", "=", "None", "\n", "if", "args", ".", "categoryfile", ":", "\n", "#categories = numpy.loadtxt(args.categoryfile, dtype=str, delimiter=\"\\n\").tolist()", "\n", "        ", "categories", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "open", "(", "args", ".", "categoryfile", ")", "]", "\n", "categories", ".", "sort", "(", ")", "\n", "c_to_idx", "=", "{", "categories", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "categories", ")", ")", "}", "\n", "cinfo", "=", "(", "categories", ",", "c_to_idx", ")", "\n", "\n", "", "perturbations", "=", "None", "\n", "fmt_trans", "=", "False", "\n", "if", "args", ".", "perturbations", ":", "\n", "        ", "perturbations", "=", "numpy", ".", "loadtxt", "(", "args", ".", "perturbations", ",", "delimiter", "=", "','", ")", "\n", "", "if", "args", ".", "format", "==", "'wt'", ":", "\n", "        ", "fmt_trans", "=", "True", "\n", "\n", "", "if", "args", ".", "dataset_type", "==", "'modelnet'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "ptlk", ".", "data", ".", "transforms", ".", "Mesh2Points", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "OnUnitCube", "(", ")", ",", "]", ")", "\n", "\n", "testdata", "=", "ptlk", ".", "data", ".", "datasets", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "0", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "\n", "testset", "=", "ptlk", ".", "data", ".", "datasets", ".", "CADset4tracking_fixed_perturbation", "(", "testdata", ",", "perturbations", ",", "fmt_trans", "=", "fmt_trans", ")", "\n", "\n", "", "return", "testset", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.test_utils.rotm2eul": [[37, 53], ["math.sqrt", "numpy.array", "math.atan2", "math.atan2", "math.atan2", "math.atan2", "math.atan2"], "function", ["None"], ["def", "rotm2eul", "(", "m", ")", ":", "\n", "    ", "\"\"\" m (3x3, rotation matrix) --> rotation m = Rz*Ry*Rx\n    \"\"\"", "\n", "c", "=", "math", ".", "sqrt", "(", "R", "[", "0", ",", "0", "]", "*", "R", "[", "0", ",", "0", "]", "+", "R", "[", "1", ",", "0", "]", "*", "R", "[", "1", ",", "0", "]", ")", "\n", "\n", "singular", "=", "c", "<", "1e-6", "\n", "if", "not", "singular", ":", "\n", "        ", "x", "=", "math", ".", "atan2", "(", "R", "[", "2", ",", "1", "]", ",", "R", "[", "2", ",", "2", "]", ")", "\n", "y", "=", "math", ".", "atan2", "(", "-", "R", "[", "2", ",", "0", "]", ",", "c", ")", "\n", "z", "=", "math", ".", "atan2", "(", "R", "[", "1", ",", "0", "]", ",", "R", "[", "0", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "x", "=", "math", ".", "atan2", "(", "-", "R", "[", "1", ",", "2", "]", ",", "R", "[", "1", ",", "1", "]", ")", "\n", "y", "=", "math", ".", "atan2", "(", "-", "R", "[", "2", ",", "0", "]", ",", "c", ")", "\n", "z", "=", "0", "\n", "\n", "", "return", "numpy", ".", "array", "(", "[", "x", ",", "y", ",", "z", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.result_stat.options": [[18, 30], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "options", "(", "argv", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PointNet-LK'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--infile'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the result of the test (.csv)'", ")", "# see. 'test_pointlk.py'", "\n", "parser", ".", "add_argument", "(", "'--val'", ",", "default", "=", "'#N/A'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'VAL'", ",", "help", "=", "'info. for the x-axis'", ")", "\n", "parser", ".", "add_argument", "(", "'--hdr'", ",", "dest", "=", "'hdr'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'outputs header line'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.result_stat.main": [[31, 65], ["print", "numpy.loadtxt", "torch.from_numpy().view", "torch.from_numpy().view", "ptlk.se3.exp", "ptlk.se3.exp", "ptlk.se3.exp.bmm", "ptlk.se3.log", "dp.norm", "ptlk.se3.log.norm", "dw.norm", "dv.norm", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "print", "map", "torch.from_numpy", "torch.from_numpy", "torch.mean.numpy().tolist", "torch.mean.numpy"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "hdr", ":", "\n", "# val: given value (for x-axis)", "\n", "# me_pos: mean error of estimated position (distance)", "\n", "# me_rad: mean error of estimated rotation (angle in radian)", "\n", "# me_twist: mean error represented as norm of twist vector", "\n", "# me_vel: translation part of the twist. (rotation part is me_rad)", "\n", "        ", "print", "(", "'val, me_pos, me_rad, me_twist, me_vel'", ")", "\n", "\n", "", "if", "args", ".", "infile", ":", "\n", "        ", "npdata", "=", "numpy", ".", "loadtxt", "(", "args", ".", "infile", ",", "delimiter", "=", "','", ",", "skiprows", "=", "1", ")", "# --> (N, 12)", "\n", "res", "=", "torch", ".", "from_numpy", "(", "npdata", ")", ".", "view", "(", "-", "1", ",", "12", ")", "\n", "x_hat", "=", "res", "[", ":", ",", "0", ":", "6", "]", "# estimated twist vector", "\n", "x_mgt", "=", "-", "res", "[", ":", ",", "6", ":", "12", "]", "# (minus) ground-truth", "\n", "\n", "g_hat", "=", "ptlk", ".", "se3", ".", "exp", "(", "x_hat", ")", "# [N, 4, 4], estimated matrices", "\n", "g_igt", "=", "ptlk", ".", "se3", ".", "exp", "(", "x_mgt", ")", "# [N, 4, 4], inverse of ground-truth", "\n", "dg", "=", "g_hat", ".", "bmm", "(", "g_igt", ")", "# [N, 4, 4]. if correct, dg == identity matrices.", "\n", "\n", "dp", "=", "dg", "[", ":", ",", "0", ":", "3", ",", "3", "]", "# [N, 3], position error", "\n", "dx", "=", "ptlk", ".", "se3", ".", "log", "(", "dg", ")", "# [N, 6], twist error", "\n", "dw", "=", "dx", "[", ":", ",", "0", ":", "3", "]", "# [N, 3], rotation part of the twist error", "\n", "dv", "=", "dx", "[", ":", ",", "3", ":", "6", "]", "# [N, 3], translation part", "\n", "\n", "ep", "=", "dp", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", "# [N]", "\n", "ex", "=", "dx", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", "# [N]", "\n", "ew", "=", "dw", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", "# [N]", "\n", "ev", "=", "dv", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", "# [N]", "\n", "\n", "e", "=", "torch", ".", "stack", "(", "(", "ep", ",", "ew", ",", "ex", ",", "ev", ")", ")", "# [4, N]", "\n", "me", "=", "torch", ".", "mean", "(", "e", ",", "dim", "=", "1", ")", "# [4]", "\n", "\n", "line", "=", "','", ".", "join", "(", "map", "(", "str", ",", "me", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", ")", "\n", "print", "(", "'{},{}'", ".", "format", "(", "args", ".", "val", ",", "line", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.__init__": [[163, 182], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "# PointNet", "\n", "        ", "self", ".", "pointnet", "=", "args", ".", "pointnet", "# tune or fixed", "\n", "self", ".", "transfer_from", "=", "args", ".", "transfer_from", "\n", "self", ".", "dim_k", "=", "args", ".", "dim_k", "\n", "self", ".", "sym_fn", "=", "None", "\n", "if", "args", ".", "symfn", "==", "'max'", ":", "\n", "            ", "self", ".", "sym_fn", "=", "ptlk", ".", "pointnet", ".", "symfn_max", "\n", "", "elif", "args", ".", "symfn", "==", "'avg'", ":", "\n", "            ", "self", ".", "sym_fn", "=", "ptlk", ".", "pointnet", ".", "symfn_avg", "\n", "# LK", "\n", "", "self", ".", "delta", "=", "args", ".", "delta", "\n", "self", ".", "learn_delta", "=", "args", ".", "learn_delta", "\n", "self", ".", "max_iter", "=", "args", ".", "max_iter", "\n", "self", ".", "xtol", "=", "1.0e-7", "\n", "self", ".", "p0_zero_mean", "=", "True", "\n", "self", ".", "p1_zero_mean", "=", "True", "\n", "\n", "self", ".", "_loss_type", "=", "1", "# see. self.compute_loss()", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_model": [[183, 186], ["train_pointlk.Action.create_pointnet_features", "train_pointlk.Action.create_from_pointnet_features"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_pointnet_features", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_from_pointnet_features"], ["", "def", "create_model", "(", "self", ")", ":", "\n", "        ", "ptnet", "=", "self", ".", "create_pointnet_features", "(", ")", "\n", "return", "self", ".", "create_from_pointnet_features", "(", "ptnet", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_pointnet_features": [[187, 197], ["ptlk.pointnet.PointNet_features", "os.path.isfile", "ptlk.pointnet.PointNet_features.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "ptlk.pointnet.PointNet_features.parameters", "param.requires_grad_"], "methods", ["None"], ["", "def", "create_pointnet_features", "(", "self", ")", ":", "\n", "        ", "ptnet", "=", "ptlk", ".", "pointnet", ".", "PointNet_features", "(", "self", ".", "dim_k", ",", "use_tnet", "=", "False", ",", "sym_fn", "=", "self", ".", "sym_fn", ")", "\n", "if", "self", ".", "transfer_from", "and", "os", ".", "path", ".", "isfile", "(", "self", ".", "transfer_from", ")", ":", "\n", "            ", "ptnet", ".", "load_state_dict", "(", "torch", ".", "load", "(", "self", ".", "transfer_from", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "", "if", "self", ".", "pointnet", "==", "'tune'", ":", "\n", "            ", "pass", "\n", "", "elif", "self", ".", "pointnet", "==", "'fixed'", ":", "\n", "            ", "for", "param", "in", "ptnet", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad_", "(", "False", ")", "\n", "", "", "return", "ptnet", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_from_pointnet_features": [[198, 200], ["ptlk.pointlk.PointLK"], "methods", ["None"], ["", "def", "create_from_pointnet_features", "(", "self", ",", "ptnet", ")", ":", "\n", "        ", "return", "ptlk", ".", "pointlk", ".", "PointLK", "(", "ptnet", ",", "self", ".", "delta", ",", "self", ".", "learn_delta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.train_1": [[201, 223], ["model.train", "enumerate", "train_pointlk.Action.compute_loss", "optimizer.zero_grad", "loss.backward", "optimizer.step", "loss.item", "loss_g.item", "float", "float"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.compute_loss", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.ExpMap.backward"], ["", "def", "train_1", "(", "self", ",", "model", ",", "trainloader", ",", "optimizer", ",", "device", ")", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "vloss", "=", "0.0", "\n", "gloss", "=", "0.0", "\n", "count", "=", "0", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "            ", "loss", ",", "loss_g", "=", "self", ".", "compute_loss", "(", "model", ",", "data", ",", "device", ")", "\n", "\n", "# forward + backward + optimize", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "vloss1", "=", "loss", ".", "item", "(", ")", "\n", "vloss", "+=", "vloss1", "\n", "gloss1", "=", "loss_g", ".", "item", "(", ")", "\n", "gloss", "+=", "gloss1", "\n", "count", "+=", "1", "\n", "\n", "", "ave_vloss", "=", "float", "(", "vloss", ")", "/", "count", "\n", "ave_gloss", "=", "float", "(", "gloss", ")", "/", "count", "\n", "return", "ave_vloss", ",", "ave_gloss", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.eval_1": [[224, 242], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "float", "float", "train_pointlk.Action.compute_loss", "loss.item", "loss_g.item"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.compute_loss"], ["", "def", "eval_1", "(", "self", ",", "model", ",", "testloader", ",", "device", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "vloss", "=", "0.0", "\n", "gloss", "=", "0.0", "\n", "count", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "data", "in", "enumerate", "(", "testloader", ")", ":", "\n", "                ", "loss", ",", "loss_g", "=", "self", ".", "compute_loss", "(", "model", ",", "data", ",", "device", ")", "\n", "\n", "vloss1", "=", "loss", ".", "item", "(", ")", "\n", "vloss", "+=", "vloss1", "\n", "gloss1", "=", "loss_g", ".", "item", "(", ")", "\n", "gloss", "+=", "gloss1", "\n", "count", "+=", "1", "\n", "\n", "", "", "ave_vloss", "=", "float", "(", "vloss", ")", "/", "count", "\n", "ave_gloss", "=", "float", "(", "gloss", ")", "/", "count", "\n", "return", "ave_vloss", ",", "ave_gloss", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.compute_loss": [[243, 272], ["p0.to.to.to", "p1.to.to.to", "igt.to.to.to", "ptlk.pointlk.PointLK.do_forward", "ptlk.pointlk.PointLK.comp", "ptlk.pointlk.PointLK.rsq", "ptlk.pointlk.PointLK.rsq", "ptlk.pointlk.PointLK.rsq", "ptlk.pointlk.PointLK.rsq"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.do_forward", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.comp", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.rsq", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.rsq", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.rsq", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.rsq"], ["", "def", "compute_loss", "(", "self", ",", "model", ",", "data", ",", "device", ")", ":", "\n", "        ", "p0", ",", "p1", ",", "igt", "=", "data", "\n", "p0", "=", "p0", ".", "to", "(", "device", ")", "# template", "\n", "p1", "=", "p1", ".", "to", "(", "device", ")", "# source", "\n", "igt", "=", "igt", ".", "to", "(", "device", ")", "# igt: p0 -> p1", "\n", "r", "=", "ptlk", ".", "pointlk", ".", "PointLK", ".", "do_forward", "(", "model", ",", "p0", ",", "p1", ",", "self", ".", "max_iter", ",", "self", ".", "xtol", ",", "self", ".", "p0_zero_mean", ",", "self", ".", "p1_zero_mean", ")", "\n", "#r = model(p0, p1, self.max_iter)", "\n", "est_g", "=", "model", ".", "g", "\n", "\n", "loss_g", "=", "ptlk", ".", "pointlk", ".", "PointLK", ".", "comp", "(", "est_g", ",", "igt", ")", "\n", "\n", "if", "self", ".", "_loss_type", "==", "0", ":", "\n", "            ", "loss_r", "=", "ptlk", ".", "pointlk", ".", "PointLK", ".", "rsq", "(", "r", ")", "\n", "loss", "=", "loss_r", "\n", "", "elif", "self", ".", "_loss_type", "==", "1", ":", "\n", "            ", "loss_r", "=", "ptlk", ".", "pointlk", ".", "PointLK", ".", "rsq", "(", "r", ")", "\n", "loss", "=", "loss_r", "+", "loss_g", "\n", "", "elif", "self", ".", "_loss_type", "==", "2", ":", "\n", "            ", "pr", "=", "model", ".", "prev_r", "\n", "if", "pr", "is", "not", "None", ":", "\n", "                ", "loss_r", "=", "ptlk", ".", "pointlk", ".", "PointLK", ".", "rsq", "(", "r", "-", "pr", ")", "\n", "", "else", ":", "\n", "                ", "loss_r", "=", "ptlk", ".", "pointlk", ".", "PointLK", ".", "rsq", "(", "r", ")", "\n", "", "loss", "=", "loss_r", "+", "loss_g", "\n", "", "else", ":", "\n", "            ", "loss", "=", "loss_g", "\n", "\n", "", "return", "loss", ",", "loss_g", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.ShapeNet2_transform_coordinate.__init__": [[275, 277], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "def", "__call__", "(", "self", ",", "mesh", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.ShapeNet2_transform_coordinate.__call__": [[277, 279], ["mesh.clone().rot_x", "mesh.clone"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.rot_x", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.clone"], ["", "def", "__call__", "(", "self", ",", "mesh", ")", ":", "\n", "        ", "return", "mesh", ".", "clone", "(", ")", ".", "rot_x", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.options": [[24, 83], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "options", "(", "argv", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PointNet-LK'", ")", "\n", "\n", "# required.", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--outfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'BASENAME'", ",", "help", "=", "'output filename (prefix)'", ")", "# the result: ${BASENAME}_model_best.pth", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--dataset-path'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the input dataset'", ")", "# like '/path/to/ModelNet40'", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "'--categoryfile'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the categories to be trained'", ")", "# eg. './sampledata/modelnet40_half1.txt'", "\n", "\n", "# settings for input data", "\n", "parser", ".", "add_argument", "(", "'--dataset-type'", ",", "default", "=", "'modelnet'", ",", "choices", "=", "[", "'modelnet'", ",", "'shapenet2'", "]", ",", "\n", "metavar", "=", "'DATASET'", ",", "help", "=", "'dataset type (default: modelnet)'", ")", "\n", "parser", ".", "add_argument", "(", "'--num-points'", ",", "default", "=", "1024", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'points in point-cloud (default: 1024)'", ")", "\n", "parser", ".", "add_argument", "(", "'--mag'", ",", "default", "=", "0.8", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'T'", ",", "help", "=", "'max. mag. of twist-vectors (perturbations) on training (default: 0.8)'", ")", "\n", "\n", "# settings for PointNet", "\n", "parser", ".", "add_argument", "(", "'--pointnet'", ",", "default", "=", "'tune'", ",", "type", "=", "str", ",", "choices", "=", "[", "'fixed'", ",", "'tune'", "]", ",", "\n", "help", "=", "'train pointnet (default: tune)'", ")", "\n", "parser", ".", "add_argument", "(", "'--transfer-from'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to pointnet features file'", ")", "\n", "parser", ".", "add_argument", "(", "'--dim-k'", ",", "default", "=", "1024", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'K'", ",", "help", "=", "'dim. of the feature vector (default: 1024)'", ")", "\n", "parser", ".", "add_argument", "(", "'--symfn'", ",", "default", "=", "'max'", ",", "choices", "=", "[", "'max'", ",", "'avg'", "]", ",", "\n", "help", "=", "'symmetric function (default: max)'", ")", "\n", "\n", "# settings for LK", "\n", "parser", ".", "add_argument", "(", "'--max-iter'", ",", "default", "=", "10", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'max-iter on LK. (default: 10)'", ")", "\n", "parser", ".", "add_argument", "(", "'--delta'", ",", "default", "=", "1.0e-2", ",", "type", "=", "float", ",", "\n", "metavar", "=", "'D'", ",", "help", "=", "'step size for approx. Jacobian (default: 1.0e-2)'", ")", "\n", "parser", ".", "add_argument", "(", "'--learn-delta'", ",", "dest", "=", "'learn_delta'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'flag for training step size delta'", ")", "\n", "\n", "# settings for on training", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--logfile'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'LOGNAME'", ",", "help", "=", "'path to logfile (default: null (no logging))'", ")", "\n", "parser", ".", "add_argument", "(", "'-j'", ",", "'--workers'", ",", "default", "=", "4", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of data loading workers (default: 4)'", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch-size'", ",", "default", "=", "32", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'mini-batch size (default: 32)'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "default", "=", "200", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'number of total epochs to run'", ")", "\n", "parser", ".", "add_argument", "(", "'--start-epoch'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "\n", "metavar", "=", "'N'", ",", "help", "=", "'manual epoch number (useful on restarts)'", ")", "\n", "parser", ".", "add_argument", "(", "'--optimizer'", ",", "default", "=", "'Adam'", ",", "choices", "=", "[", "'Adam'", ",", "'SGD'", "]", ",", "\n", "metavar", "=", "'METHOD'", ",", "help", "=", "'name of an optimizer (default: Adam)'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to latest checkpoint (default: null (no-use))'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrained'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'PATH'", ",", "help", "=", "'path to pretrained model file (default: null (no-use))'", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "'cuda:0'", ",", "type", "=", "str", ",", "\n", "metavar", "=", "'DEVICE'", ",", "help", "=", "'use CUDA if available'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.main": [[84, 91], ["train_pointlk.get_datasets", "train_pointlk.Action", "train_pointlk.run"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.get_datasets", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.run"], ["", "def", "main", "(", "args", ")", ":", "\n", "# dataset", "\n", "    ", "trainset", ",", "testset", "=", "get_datasets", "(", "args", ")", "\n", "\n", "# training", "\n", "act", "=", "Action", "(", "args", ")", "\n", "run", "(", "args", ",", "trainset", ",", "testset", ",", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.run": [[93, 157], ["torch.device", "torch.device", "LOGGER.debug", "action.create_model", "action.create_model.to", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "float", "filter", "LOGGER.debug", "range", "LOGGER.debug", "torch.cuda.is_available", "torch.cuda.is_available", "os.getpid", "os.path.isfile", "action.create_model.load_state_dict", "os.path.isfile", "torch.load", "torch.load", "action.create_model.load_state_dict", "action.create_model.parameters", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD.load_state_dict", "action.train_1", "action.eval_1", "min", "LOGGER.info", "train_pointlk.save_checkpoint", "train_pointlk.save_checkpoint", "torch.load", "torch.load", "action.create_model.state_dict", "torch.optim.SGD.state_dict", "train_pointlk.save_checkpoint", "train_pointlk.save_checkpoint", "action.create_model.state_dict", "action.create_model.state_dict"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.create_model", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.train_1", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.Action.eval_1", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint"], ["", "def", "run", "(", "args", ",", "trainset", ",", "testset", ",", "action", ")", ":", "\n", "    ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "args", ".", "device", "=", "'cpu'", "\n", "", "args", ".", "device", "=", "torch", ".", "device", "(", "args", ".", "device", ")", "\n", "\n", "LOGGER", ".", "debug", "(", "'Trainer (PID=%d), %s'", ",", "os", ".", "getpid", "(", ")", ",", "args", ")", "\n", "\n", "model", "=", "action", ".", "create_model", "(", ")", "\n", "if", "args", ".", "pretrained", ":", "\n", "        ", "assert", "os", ".", "path", ".", "isfile", "(", "args", ".", "pretrained", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "pretrained", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "checkpoint", "=", "None", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "assert", "os", ".", "path", ".", "isfile", "(", "args", ".", "resume", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "\n", "# dataloader", "\n", "", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "testset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "trainset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "# optimizer", "\n", "min_loss", "=", "float", "(", "'inf'", ")", "\n", "learnable_params", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", "\n", "if", "args", ".", "optimizer", "==", "'Adam'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "learnable_params", ")", "\n", "", "else", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "learnable_params", ",", "lr", "=", "0.1", ")", "\n", "\n", "", "if", "checkpoint", "is", "not", "None", ":", "\n", "        ", "min_loss", "=", "checkpoint", "[", "'min_loss'", "]", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "\n", "# training", "\n", "", "LOGGER", ".", "debug", "(", "'train, begin'", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "#scheduler.step()", "\n", "\n", "        ", "running_loss", ",", "running_info", "=", "action", ".", "train_1", "(", "model", ",", "trainloader", ",", "optimizer", ",", "args", ".", "device", ")", "\n", "val_loss", ",", "val_info", "=", "action", ".", "eval_1", "(", "model", ",", "testloader", ",", "args", ".", "device", ")", "\n", "\n", "is_best", "=", "val_loss", "<", "min_loss", "\n", "min_loss", "=", "min", "(", "val_loss", ",", "min_loss", ")", "\n", "\n", "LOGGER", ".", "info", "(", "'epoch, %04d, %f, %f, %f, %f'", ",", "epoch", "+", "1", ",", "running_loss", ",", "val_loss", ",", "running_info", ",", "val_info", ")", "\n", "snap", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'min_loss'", ":", "min_loss", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "}", "\n", "if", "is_best", ":", "\n", "            ", "save_checkpoint", "(", "snap", ",", "args", ".", "outfile", ",", "'snap_best'", ")", "\n", "save_checkpoint", "(", "model", ".", "state_dict", "(", ")", ",", "args", ".", "outfile", ",", "'model_best'", ")", "\n", "\n", "", "save_checkpoint", "(", "snap", ",", "args", ".", "outfile", ",", "'snap_last'", ")", "\n", "save_checkpoint", "(", "model", ".", "state_dict", "(", ")", ",", "args", ".", "outfile", ",", "'model_last'", ")", "\n", "\n", "", "LOGGER", ".", "debug", "(", "'train, end'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.save_checkpoint": [[158, 160], ["torch.save", "torch.save"], "function", ["None"], ["", "def", "save_checkpoint", "(", "state", ",", "filename", ",", "suffix", ")", ":", "\n", "    ", "torch", ".", "save", "(", "state", ",", "'{}_{}.pth'", ".", "format", "(", "filename", ",", "suffix", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.experiments.train_pointlk.get_datasets": [[280, 325], ["categories.sort", "torchvision.transforms.Compose", "ptlk.data.datasets.ModelNet", "ptlk.data.datasets.ModelNet", "ptlk.data.datasets.CADset4tracking", "ptlk.data.datasets.CADset4tracking", "line.rstrip", "ptlk.data.transforms.RandomTransformSE3", "ptlk.data.transforms.RandomTransformSE3", "torchvision.transforms.Compose", "ptlk.data.datasets.ShapeNet2", "ptlk.data.datasets.ShapeNet2.split", "ptlk.data.datasets.CADset4tracking", "ptlk.data.datasets.CADset4tracking", "open", "range", "ptlk.data.transforms.Mesh2Points", "ptlk.data.transforms.OnUnitCube", "ptlk.data.transforms.Resampler", "ptlk.data.transforms.RandomTransformSE3", "ptlk.data.transforms.RandomTransformSE3", "len", "train_pointlk.ShapeNet2_transform_coordinate", "ptlk.data.transforms.Mesh2Points", "ptlk.data.transforms.OnUnitCube", "ptlk.data.transforms.Resampler"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.split"], ["", "", "def", "get_datasets", "(", "args", ")", ":", "\n", "\n", "    ", "cinfo", "=", "None", "\n", "if", "args", ".", "categoryfile", ":", "\n", "#categories = numpy.loadtxt(args.categoryfile, dtype=str, delimiter=\"\\n\").tolist()", "\n", "        ", "categories", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "open", "(", "args", ".", "categoryfile", ")", "]", "\n", "categories", ".", "sort", "(", ")", "\n", "c_to_idx", "=", "{", "categories", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "categories", ")", ")", "}", "\n", "cinfo", "=", "(", "categories", ",", "c_to_idx", ")", "\n", "\n", "", "if", "args", ".", "dataset_type", "==", "'modelnet'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "ptlk", ".", "data", ".", "transforms", ".", "Mesh2Points", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "OnUnitCube", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "Resampler", "(", "args", ".", "num_points", ")", ",", "]", ")", "\n", "\n", "traindata", "=", "ptlk", ".", "data", ".", "datasets", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "1", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "testdata", "=", "ptlk", ".", "data", ".", "datasets", ".", "ModelNet", "(", "args", ".", "dataset_path", ",", "train", "=", "0", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "\n", "mag_randomly", "=", "True", "\n", "trainset", "=", "ptlk", ".", "data", ".", "datasets", ".", "CADset4tracking", "(", "traindata", ",", "ptlk", ".", "data", ".", "transforms", ".", "RandomTransformSE3", "(", "args", ".", "mag", ",", "mag_randomly", ")", ")", "\n", "testset", "=", "ptlk", ".", "data", ".", "datasets", ".", "CADset4tracking", "(", "testdata", ",", "ptlk", ".", "data", ".", "transforms", ".", "RandomTransformSE3", "(", "args", ".", "mag", ",", "mag_randomly", ")", ")", "\n", "\n", "", "elif", "args", ".", "dataset_type", "==", "'shapenet2'", ":", "\n", "        ", "transform", "=", "torchvision", ".", "transforms", ".", "Compose", "(", "[", "ShapeNet2_transform_coordinate", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "Mesh2Points", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "OnUnitCube", "(", ")", ",", "ptlk", ".", "data", ".", "transforms", ".", "Resampler", "(", "args", ".", "num_points", ")", ",", "]", ")", "\n", "\n", "dataset", "=", "ptlk", ".", "data", ".", "datasets", ".", "ShapeNet2", "(", "args", ".", "dataset_path", ",", "transform", "=", "transform", ",", "classinfo", "=", "cinfo", ")", "\n", "traindata", ",", "testdata", "=", "dataset", ".", "split", "(", "0.8", ")", "\n", "\n", "mag_randomly", "=", "True", "\n", "trainset", "=", "ptlk", ".", "data", ".", "datasets", ".", "CADset4tracking", "(", "traindata", ",", "ptlk", ".", "data", ".", "transforms", ".", "RandomTransformSE3", "(", "args", ".", "mag", ",", "mag_randomly", ")", ")", "\n", "testset", "=", "ptlk", ".", "data", ".", "datasets", ".", "CADset4tracking", "(", "testdata", ",", "ptlk", ".", "data", ".", "transforms", ".", "RandomTransformSE3", "(", "args", ".", "mag", ",", "mag_randomly", ")", ")", "\n", "\n", "\n", "", "return", "trainset", ",", "testset", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.Sinc1_autograd.forward": [[165, 169], ["ctx.save_for_backward", "sinc.sinc1"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc1"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "theta", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "theta", ")", "\n", "return", "sinc1", "(", "theta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.Sinc1_autograd.backward": [[170, 177], ["sinc1_dt().to", "sinc.sinc1_dt"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc1_dt"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "theta", ",", "=", "ctx", ".", "saved_tensors", "\n", "grad_theta", "=", "None", "\n", "if", "ctx", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "            ", "grad_theta", "=", "grad_output", "*", "sinc1_dt", "(", "theta", ")", ".", "to", "(", "grad_output", ")", "\n", "", "return", "grad_theta", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.RSinc1_autograd.forward": [[181, 185], ["ctx.save_for_backward", "sinc.rsinc1"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.rsinc1"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "theta", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "theta", ")", "\n", "return", "rsinc1", "(", "theta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.RSinc1_autograd.backward": [[186, 193], ["rsinc1_dt().to", "sinc.rsinc1_dt"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.rsinc1_dt"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "theta", ",", "=", "ctx", ".", "saved_tensors", "\n", "grad_theta", "=", "None", "\n", "if", "ctx", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "            ", "grad_theta", "=", "grad_output", "*", "rsinc1_dt", "(", "theta", ")", ".", "to", "(", "grad_output", ")", "\n", "", "return", "grad_theta", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.Sinc2_autograd.forward": [[197, 201], ["ctx.save_for_backward", "sinc.sinc2"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc2"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "theta", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "theta", ")", "\n", "return", "sinc2", "(", "theta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.Sinc2_autograd.backward": [[202, 209], ["sinc2_dt().to", "sinc.sinc2_dt"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc2_dt"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "theta", ",", "=", "ctx", ".", "saved_tensors", "\n", "grad_theta", "=", "None", "\n", "if", "ctx", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "            ", "grad_theta", "=", "grad_output", "*", "sinc2_dt", "(", "theta", ")", ".", "to", "(", "grad_output", ")", "\n", "", "return", "grad_theta", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.Sinc3_autograd.forward": [[213, 217], ["ctx.save_for_backward", "sinc.sinc3"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc3"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "theta", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "theta", ")", "\n", "return", "sinc3", "(", "theta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.Sinc3_autograd.backward": [[218, 225], ["sinc3_dt().to", "sinc.sinc3_dt"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc3_dt"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "theta", ",", "=", "ctx", ".", "saved_tensors", "\n", "grad_theta", "=", "None", "\n", "if", "ctx", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "            ", "grad_theta", "=", "grad_output", "*", "sinc3_dt", "(", "theta", ")", ".", "to", "(", "grad_output", ")", "\n", "", "return", "grad_theta", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc1": [[5, 18], ["torch.zeros_like", "torch.abs", "torch.sin"], "function", ["None"], ["def", "sinc1", "(", "t", ")", ":", "\n", "    ", "\"\"\" sinc1: t -> sin(t)/t \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "r", "[", "s", "]", "=", "1", "-", "t2", "/", "6", "*", "(", "1", "-", "t2", "/", "20", "*", "(", "1", "-", "t2", "/", "42", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "sin", "(", "t", "[", "c", "]", ")", "/", "t", "[", "c", "]", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc1_dt": [[19, 32], ["torch.zeros_like", "torch.abs", "torch.cos", "torch.sin"], "function", ["None"], ["", "def", "sinc1_dt", "(", "t", ")", ":", "\n", "    ", "\"\"\" d/dt(sinc1) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "**", "2", "\n", "r", "[", "s", "]", "=", "-", "t", "[", "s", "]", "/", "3", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "10", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "28", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "54", ")", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "cos", "(", "t", "[", "c", "]", ")", "/", "t", "[", "c", "]", "-", "sin", "(", "t", "[", "c", "]", ")", "/", "t2", "[", "c", "]", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc1_dt_rt": [[33, 46], ["torch.zeros_like", "torch.abs", "torch.cos", "torch.sin"], "function", ["None"], ["", "def", "sinc1_dt_rt", "(", "t", ")", ":", "\n", "    ", "\"\"\" d/dt(sinc1) / t \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "**", "2", "\n", "r", "[", "s", "]", "=", "-", "1", "/", "3", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "10", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "28", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "54", ")", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "(", "cos", "(", "t", "[", "c", "]", ")", "/", "t", "[", "c", "]", "-", "sin", "(", "t", "[", "c", "]", ")", "/", "t2", "[", "c", "]", ")", "/", "t", "[", "c", "]", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.rsinc1": [[48, 61], ["torch.zeros_like", "torch.abs", "torch.sin"], "function", ["None"], ["", "def", "rsinc1", "(", "t", ")", ":", "\n", "    ", "\"\"\" rsinc1: t -> t/sinc1(t) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "r", "[", "s", "]", "=", "(", "(", "(", "31", "*", "t2", ")", "/", "42", "+", "7", ")", "*", "t2", "/", "60", "+", "1", ")", "*", "t2", "/", "6", "+", "1", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "t", "[", "c", "]", "/", "sin", "(", "t", "[", "c", "]", ")", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.rsinc1_dt": [[62, 75], ["torch.zeros_like", "torch.abs", "torch.sin", "torch.cos", "torch.sin", "torch.sin"], "function", ["None"], ["", "def", "rsinc1_dt", "(", "t", ")", ":", "\n", "    ", "\"\"\" d/dt(rsinc1) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "r", "[", "s", "]", "=", "(", "(", "(", "(", "127", "*", "t2", ")", "/", "30", "+", "31", ")", "*", "t2", "/", "28", "+", "7", ")", "*", "t2", "/", "30", "+", "1", ")", "*", "t", "[", "s", "]", "/", "3", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "1", "/", "sin", "(", "t", "[", "c", "]", ")", "-", "(", "t", "[", "c", "]", "*", "cos", "(", "t", "[", "c", "]", ")", ")", "/", "(", "sin", "(", "t", "[", "c", "]", ")", "*", "sin", "(", "t", "[", "c", "]", ")", ")", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.rsinc1_dt_csc": [[76, 89], ["torch.zeros_like", "torch.abs", "torch.sin", "torch.sin", "torch.cos", "torch.sin", "torch.sin"], "function", ["None"], ["", "def", "rsinc1_dt_csc", "(", "t", ")", ":", "\n", "    ", "\"\"\" d/dt(rsinc1) / sin(t) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "r", "[", "s", "]", "=", "t2", "*", "(", "t2", "*", "(", "(", "4", "*", "t2", ")", "/", "675", "+", "2", "/", "63", ")", "+", "2", "/", "15", ")", "+", "1", "/", "3", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "(", "1", "/", "sin", "(", "t", "[", "c", "]", ")", "-", "(", "t", "[", "c", "]", "*", "cos", "(", "t", "[", "c", "]", ")", ")", "/", "(", "sin", "(", "t", "[", "c", "]", ")", "*", "sin", "(", "t", "[", "c", "]", ")", ")", ")", "/", "sin", "(", "t", "[", "c", "]", ")", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc2": [[91, 104], ["torch.zeros_like", "torch.abs", "torch.cos"], "function", ["None"], ["", "def", "sinc2", "(", "t", ")", ":", "\n", "    ", "\"\"\" sinc2: t -> (1 - cos(t)) / (t**2) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "**", "2", "\n", "r", "[", "s", "]", "=", "1", "/", "2", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "12", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "30", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "56", ")", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "(", "1", "-", "cos", "(", "t", "[", "c", "]", ")", ")", "/", "t2", "[", "c", "]", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc2_dt": [[105, 118], ["torch.zeros_like", "torch.abs", "torch.sin", "torch.cos"], "function", ["None"], ["", "def", "sinc2_dt", "(", "t", ")", ":", "\n", "    ", "\"\"\" d/dt(sinc2) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "**", "2", "\n", "r", "[", "s", "]", "=", "-", "t", "[", "s", "]", "/", "12", "*", "(", "1", "-", "t2", "[", "s", "]", "/", "5", "*", "(", "1.0", "/", "3", "-", "t2", "[", "s", "]", "/", "56", "*", "(", "1.0", "/", "2", "-", "t2", "[", "s", "]", "/", "135", ")", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "sin", "(", "t", "[", "c", "]", ")", "/", "t2", "[", "c", "]", "-", "2", "*", "(", "1", "-", "cos", "(", "t", "[", "c", "]", ")", ")", "/", "(", "t2", "[", "c", "]", "*", "t", "[", "c", "]", ")", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc3": [[120, 133], ["torch.zeros_like", "torch.abs", "torch.sin"], "function", ["None"], ["", "def", "sinc3", "(", "t", ")", ":", "\n", "    ", "\"\"\" sinc3: t -> (t - sin(t)) / (t**3) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "r", "[", "s", "]", "=", "1", "/", "6", "*", "(", "1", "-", "t2", "/", "20", "*", "(", "1", "-", "t2", "/", "42", "*", "(", "1", "-", "t2", "/", "72", ")", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "(", "t", "[", "c", "]", "-", "sin", "(", "t", "[", "c", "]", ")", ")", "/", "(", "t", "[", "c", "]", "**", "3", ")", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc3_dt": [[134, 147], ["torch.zeros_like", "torch.abs", "torch.sin", "torch.cos"], "function", ["None"], ["", "def", "sinc3_dt", "(", "t", ")", ":", "\n", "    ", "\"\"\" d/dt(sinc3) \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "r", "[", "s", "]", "=", "-", "t", "[", "s", "]", "/", "60", "*", "(", "1", "-", "t2", "/", "21", "*", "(", "1", "-", "t2", "/", "24", "*", "(", "1.0", "/", "2", "-", "t2", "/", "165", ")", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "(", "3", "*", "sin", "(", "t", "[", "c", "]", ")", "-", "t", "[", "c", "]", "*", "(", "cos", "(", "t", "[", "c", "]", ")", "+", "2", ")", ")", "/", "(", "t", "[", "c", "]", "**", "4", ")", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc4": [[149, 162], ["torch.zeros_like", "torch.abs", "torch.cos"], "function", ["None"], ["", "def", "sinc4", "(", "t", ")", ":", "\n", "    ", "\"\"\" sinc4: t -> 1/t^2 * (1/2 - sinc2(t))\n                  = 1/t^2 * (1/2 - (1 - cos(t))/t^2)\n    \"\"\"", "\n", "e", "=", "0.01", "\n", "r", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "a", "=", "torch", ".", "abs", "(", "t", ")", "\n", "\n", "s", "=", "a", "<", "e", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "**", "2", "\n", "r", "[", "s", "]", "=", "1", "/", "24", "*", "(", "1", "-", "t2", "/", "30", "*", "(", "1", "-", "t2", "/", "56", "*", "(", "1", "-", "t2", "/", "90", ")", ")", ")", "# Taylor series O(t^8)", "\n", "r", "[", "c", "]", "=", "(", "0.5", "-", "(", "1", "-", "cos", "(", "t", ")", ")", "/", "t2", ")", "/", "t2", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.__init__": [[13, 35], ["super().__init__", "torch.Tensor", "torch.nn.Parameter", "torch.Tensor.view"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ptnet", ",", "delta", "=", "1.0e-2", ",", "learn_delta", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ptnet", "=", "ptnet", "\n", "self", ".", "inverse", "=", "invmat", ".", "InvMatrix", ".", "apply", "\n", "self", ".", "exp", "=", "se3", ".", "Exp", "# [B, 6] -> [B, 4, 4]", "\n", "self", ".", "transform", "=", "se3", ".", "transform", "# [B, 1, 4, 4] x [B, N, 3] -> [B, N, 3]", "\n", "\n", "w1", "=", "delta", "\n", "w2", "=", "delta", "\n", "w3", "=", "delta", "\n", "v1", "=", "delta", "\n", "v2", "=", "delta", "\n", "v3", "=", "delta", "\n", "twist", "=", "torch", ".", "Tensor", "(", "[", "w1", ",", "w2", ",", "w3", ",", "v1", ",", "v2", ",", "v3", "]", ")", "\n", "self", ".", "dt", "=", "torch", ".", "nn", ".", "Parameter", "(", "twist", ".", "view", "(", "1", ",", "6", ")", ",", "requires_grad", "=", "learn_delta", ")", "\n", "\n", "# results", "\n", "self", ".", "last_err", "=", "None", "\n", "self", ".", "g_series", "=", "None", "# for debug purpose", "\n", "self", ".", "prev_r", "=", "None", "\n", "self", ".", "g", "=", "None", "# estimation result", "\n", "self", ".", "itr", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.rsq": [[36, 41], ["torch.zeros_like", "torch.nn.functional.mse_loss"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "rsq", "(", "r", ")", ":", "\n", "# |r| should be 0", "\n", "        ", "z", "=", "torch", ".", "zeros_like", "(", "r", ")", "\n", "return", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "r", ",", "z", ",", "size_average", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.comp": [[42, 51], ["g.matmul", "torch.eye().to().view().expand", "g.size", "igt.size", "g.matmul.size", "torch.nn.functional.mse_loss", "g.size", "igt.size", "g.size", "g.size", "igt.size", "g.size", "torch.eye().to().view", "torch.eye().to", "torch.eye"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "comp", "(", "g", ",", "igt", ")", ":", "\n", "        ", "\"\"\" |g*igt - I| (should be 0) \"\"\"", "\n", "assert", "g", ".", "size", "(", "0", ")", "==", "igt", ".", "size", "(", "0", ")", "\n", "assert", "g", ".", "size", "(", "1", ")", "==", "igt", ".", "size", "(", "1", ")", "and", "g", ".", "size", "(", "1", ")", "==", "4", "\n", "assert", "g", ".", "size", "(", "2", ")", "==", "igt", ".", "size", "(", "2", ")", "and", "g", ".", "size", "(", "2", ")", "==", "4", "\n", "A", "=", "g", ".", "matmul", "(", "igt", ")", "\n", "I", "=", "torch", ".", "eye", "(", "4", ")", ".", "to", "(", "A", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "expand", "(", "A", ".", "size", "(", "0", ")", ",", "4", ",", "4", ")", "\n", "return", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "A", ",", "I", ",", "size_average", "=", "True", ")", "*", "16", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.do_forward": [[52, 92], ["torch.eye().view().expand().to", "torch.eye().view().expand().to", "net", "p0.mean", "p1.mean", "torch.eye().view().expand", "torch.eye().view().expand", "p0.mean.unsqueeze", "p1.mean.unsqueeze", "torch.eye().view().expand().to.to().bmm", "est_g.bmm.bmm.bmm", "torch.eye().view().expand().to.unsqueeze().contiguous().to().matmul", "est_gs.matmul.matmul.matmul", "p0.size", "p1.size", "torch.eye().view().expand().to.to", "torch.eye().view().expand().to.unsqueeze().contiguous().to", "torch.eye().view", "torch.eye().view", "torch.eye().view().expand().to.to", "torch.eye().view().expand().to.unsqueeze().contiguous().to", "torch.eye().view().expand().to.unsqueeze().contiguous", "torch.eye", "torch.eye", "torch.eye().view().expand().to.unsqueeze().contiguous", "torch.eye().view().expand().to.unsqueeze", "torch.eye().view().expand().to.unsqueeze"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "do_forward", "(", "net", ",", "p0", ",", "p1", ",", "maxiter", "=", "10", ",", "xtol", "=", "1.0e-7", ",", "p0_zero_mean", "=", "True", ",", "p1_zero_mean", "=", "True", ")", ":", "\n", "        ", "a0", "=", "torch", ".", "eye", "(", "4", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "expand", "(", "p0", ".", "size", "(", "0", ")", ",", "4", ",", "4", ")", ".", "to", "(", "p0", ")", "# [B, 4, 4]", "\n", "a1", "=", "torch", ".", "eye", "(", "4", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "expand", "(", "p1", ".", "size", "(", "0", ")", ",", "4", ",", "4", ")", ".", "to", "(", "p1", ")", "# [B, 4, 4]", "\n", "if", "p0_zero_mean", ":", "\n", "            ", "p0_m", "=", "p0", ".", "mean", "(", "dim", "=", "1", ")", "# [B, N, 3] -> [B, 3]", "\n", "a0", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "p0_m", "\n", "q0", "=", "p0", "-", "p0_m", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "q0", "=", "p0", "\n", "\n", "", "if", "p1_zero_mean", ":", "\n", "#print(numpy.any(numpy.isnan(p1.numpy())))", "\n", "            ", "p1_m", "=", "p1", ".", "mean", "(", "dim", "=", "1", ")", "# [B, N, 3] -> [B, 3]", "\n", "a1", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "-", "p1_m", "\n", "q1", "=", "p1", "-", "p1_m", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "q1", "=", "p1", "\n", "\n", "", "r", "=", "net", "(", "q0", ",", "q1", ",", "maxiter", "=", "maxiter", ",", "xtol", "=", "xtol", ")", "\n", "\n", "if", "p0_zero_mean", "or", "p1_zero_mean", ":", "\n", "#output' = trans(p0_m) * output * trans(-p1_m)", "\n", "#        = [I, p0_m;] * [R, t;] * [I, -p1_m;]", "\n", "#          [0, 1    ]   [0, 1 ]   [0,  1    ]", "\n", "            ", "est_g", "=", "net", ".", "g", "\n", "if", "p0_zero_mean", ":", "\n", "                ", "est_g", "=", "a0", ".", "to", "(", "est_g", ")", ".", "bmm", "(", "est_g", ")", "\n", "", "if", "p1_zero_mean", ":", "\n", "                ", "est_g", "=", "est_g", ".", "bmm", "(", "a1", ".", "to", "(", "est_g", ")", ")", "\n", "", "net", ".", "g", "=", "est_g", "\n", "\n", "est_gs", "=", "net", ".", "g_series", "# [M, B, 4, 4]", "\n", "if", "p0_zero_mean", ":", "\n", "                ", "est_gs", "=", "a0", ".", "unsqueeze", "(", "0", ")", ".", "contiguous", "(", ")", ".", "to", "(", "est_gs", ")", ".", "matmul", "(", "est_gs", ")", "\n", "", "if", "p1_zero_mean", ":", "\n", "                ", "est_gs", "=", "est_gs", ".", "matmul", "(", "a1", ".", "unsqueeze", "(", "0", ")", ".", "contiguous", "(", ")", ".", "to", "(", "est_gs", ")", ")", "\n", "", "net", ".", "g_series", "=", "est_gs", "\n", "\n", "", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.forward": [[93, 100], ["torch.eye().to().view().expand().contiguous", "pointlk.PointLK.iclk", "torch.eye().to().view().expand", "p0.size", "torch.eye().to().view", "torch.eye().to", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.iclk"], ["", "def", "forward", "(", "self", ",", "p0", ",", "p1", ",", "maxiter", "=", "10", ",", "xtol", "=", "1.0e-7", ")", ":", "\n", "        ", "g0", "=", "torch", ".", "eye", "(", "4", ")", ".", "to", "(", "p0", ")", ".", "view", "(", "1", ",", "4", ",", "4", ")", ".", "expand", "(", "p0", ".", "size", "(", "0", ")", ",", "4", ",", "4", ")", ".", "contiguous", "(", ")", "\n", "r", ",", "g", ",", "itr", "=", "self", ".", "iclk", "(", "g0", ",", "p0", ",", "p1", ",", "maxiter", ",", "xtol", ")", "\n", "\n", "self", ".", "g", "=", "g", "\n", "self", ".", "itr", "=", "itr", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.update": [[101, 105], ["pointlk.PointLK.exp", "pointlk.PointLK.matmul"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp"], ["", "def", "update", "(", "self", ",", "g", ",", "dx", ")", ":", "\n", "# [B, 4, 4] x [B, 6] -> [B, 4, 4]", "\n", "        ", "dg", "=", "self", ".", "exp", "(", "dx", ")", "\n", "return", "dg", ".", "matmul", "(", "g", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.approx_Jic": [[106, 132], ["p0.size", "p0.size", "torch.zeros().to", "range", "transf.unsqueeze().contiguous.unsqueeze().contiguous.unsqueeze().contiguous", "pointlk.PointLK.transform", "f0.unsqueeze.unsqueeze.unsqueeze", "pointlk.PointLK.ptnet().view().transpose", "p0.size", "torch.diag", "pointlk.PointLK.exp", "p0.unsqueeze", "dt.unsqueeze", "torch.zeros", "transf.unsqueeze().contiguous.unsqueeze().contiguous.unsqueeze", "pointlk.PointLK.ptnet().view", "pointlk.PointLK.ptnet", "pointlk.PointLK.view"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp"], ["", "def", "approx_Jic", "(", "self", ",", "p0", ",", "f0", ",", "dt", ")", ":", "\n", "# p0: [B, N, 3], Variable", "\n", "# f0: [B, K], corresponding feature vector", "\n", "# dt: [B, 6], Variable", "\n", "# Jk = (ptnet(p(-delta[k], p0)) - f0) / delta[k]", "\n", "\n", "        ", "batch_size", "=", "p0", ".", "size", "(", "0", ")", "\n", "num_points", "=", "p0", ".", "size", "(", "1", ")", "\n", "\n", "# compute transforms", "\n", "transf", "=", "torch", ".", "zeros", "(", "batch_size", ",", "6", ",", "4", ",", "4", ")", ".", "to", "(", "p0", ")", "\n", "for", "b", "in", "range", "(", "p0", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "d", "=", "torch", ".", "diag", "(", "dt", "[", "b", ",", ":", "]", ")", "# [6, 6]", "\n", "D", "=", "self", ".", "exp", "(", "-", "d", ")", "# [6, 4, 4]", "\n", "transf", "[", "b", ",", ":", ",", ":", ",", ":", "]", "=", "D", "[", ":", ",", ":", ",", ":", "]", "\n", "", "transf", "=", "transf", ".", "unsqueeze", "(", "2", ")", ".", "contiguous", "(", ")", "#   [B, 6, 1, 4, 4]", "\n", "p", "=", "self", ".", "transform", "(", "transf", ",", "p0", ".", "unsqueeze", "(", "1", ")", ")", "# x [B, 1, N, 3] -> [B, 6, N, 3]", "\n", "\n", "#f0 = self.ptnet(p0).unsqueeze(-1) # [B, K, 1]", "\n", "f0", "=", "f0", ".", "unsqueeze", "(", "-", "1", ")", "# [B, K, 1]", "\n", "f", "=", "self", ".", "ptnet", "(", "p", ".", "view", "(", "-", "1", ",", "num_points", ",", "3", ")", ")", ".", "view", "(", "batch_size", ",", "6", ",", "-", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", "# [B, K, 6]", "\n", "\n", "df", "=", "f0", "-", "f", "# [B, K, 6]", "\n", "J", "=", "df", "/", "dt", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "return", "J", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.iclk": [[133, 201], ["p0.size", "torch.zeros", "g0.clone", "pointlk.PointLK.ptnet.eval", "pointlk.PointLK.ptnet", "pointlk.PointLK.dt.to().expand", "pointlk.PointLK.approx_Jic", "range", "len", "pointlk.PointLK.clone().unsqueeze().repeat", "pointlk.PointLK.ptnet.train", "pointlk.PointLK.ptnet", "pointlk.PointLK.ptnet", "pointlk.PointLK.transpose", "pointlk.PointLK.transpose.bmm", "pointlk.PointLK.inverse", "pointlk.PointLK.bmm", "pointlk.PointLK.transform", "pointlk.PointLK.ptnet", "dx.norm().max", "pointlk.PointLK.update", "pointlk.PointLK.clone", "range", "g0.size", "pointlk.PointLK.dt.to", "pointlk.PointLK.ptnet", "pointlk.PointLK.ptnet.train", "pointlk.PointLK.unsqueeze", "pointlk.PointLK.bmm.bmm().view", "float", "pointlk.PointLK.clone().unsqueeze", "dx.norm", "pointlk.PointLK.bmm.bmm", "pointlk.PointLK.clone", "r.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.clone", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.approx_Jic", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.inverse", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointlk.PointLK.update", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.clone", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.clone"], ["", "def", "iclk", "(", "self", ",", "g0", ",", "p0", ",", "p1", ",", "maxiter", ",", "xtol", ")", ":", "\n", "        ", "training", "=", "self", ".", "ptnet", ".", "training", "\n", "batch_size", "=", "p0", ".", "size", "(", "0", ")", "\n", "\n", "g", "=", "g0", "\n", "self", ".", "g_series", "=", "torch", ".", "zeros", "(", "maxiter", "+", "1", ",", "*", "g0", ".", "size", "(", ")", ",", "dtype", "=", "g0", ".", "dtype", ")", "\n", "self", ".", "g_series", "[", "0", "]", "=", "g0", ".", "clone", "(", ")", "\n", "\n", "if", "training", ":", "\n", "# first, update BatchNorm modules", "\n", "            ", "f0", "=", "self", ".", "ptnet", "(", "p0", ")", "\n", "f1", "=", "self", ".", "ptnet", "(", "p1", ")", "\n", "", "self", ".", "ptnet", ".", "eval", "(", ")", "# and fix them.", "\n", "\n", "# re-calc. with current modules", "\n", "f0", "=", "self", ".", "ptnet", "(", "p0", ")", "# [B, N, 3] -> [B, K]", "\n", "\n", "# approx. J by finite difference", "\n", "dt", "=", "self", ".", "dt", ".", "to", "(", "p0", ")", ".", "expand", "(", "batch_size", ",", "6", ")", "\n", "J", "=", "self", ".", "approx_Jic", "(", "p0", ",", "f0", ",", "dt", ")", "\n", "\n", "self", ".", "last_err", "=", "None", "\n", "itr", "=", "-", "1", "\n", "# compute pinv(J) to solve J*x = -r", "\n", "try", ":", "\n", "            ", "Jt", "=", "J", ".", "transpose", "(", "1", ",", "2", ")", "# [B, 6, K]", "\n", "H", "=", "Jt", ".", "bmm", "(", "J", ")", "# [B, 6, 6]", "\n", "B", "=", "self", ".", "inverse", "(", "H", ")", "\n", "pinv", "=", "B", ".", "bmm", "(", "Jt", ")", "# [B, 6, K]", "\n", "", "except", "RuntimeError", "as", "err", ":", "\n", "# singular...?", "\n", "            ", "self", ".", "last_err", "=", "err", "\n", "#print(err)", "\n", "# Perhaps we can use MP-inverse, but,...", "\n", "# probably, self.dt is way too small...", "\n", "f1", "=", "self", ".", "ptnet", "(", "p1", ")", "# [B, N, 3] -> [B, K]", "\n", "r", "=", "f1", "-", "f0", "\n", "self", ".", "ptnet", ".", "train", "(", "training", ")", "\n", "return", "r", ",", "g", ",", "itr", "\n", "\n", "", "itr", "=", "0", "\n", "r", "=", "None", "\n", "for", "itr", "in", "range", "(", "maxiter", ")", ":", "\n", "            ", "self", ".", "prev_r", "=", "r", "\n", "p", "=", "self", ".", "transform", "(", "g", ".", "unsqueeze", "(", "1", ")", ",", "p1", ")", "# [B, 1, 4, 4] x [B, N, 3] -> [B, N, 3]", "\n", "f", "=", "self", ".", "ptnet", "(", "p", ")", "# [B, N, 3] -> [B, K]", "\n", "r", "=", "f", "-", "f0", "\n", "\n", "dx", "=", "-", "pinv", ".", "bmm", "(", "r", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "view", "(", "batch_size", ",", "6", ")", "\n", "\n", "# DEBUG.", "\n", "#norm_r = r.norm(p=2, dim=1)", "\n", "#print('itr,{},|r|,{}'.format(itr+1, ','.join(map(str, norm_r.data.tolist()))))", "\n", "\n", "check", "=", "dx", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "max", "(", ")", "\n", "if", "float", "(", "check", ")", "<", "xtol", ":", "\n", "                ", "if", "itr", "==", "0", ":", "\n", "                    ", "self", ".", "last_err", "=", "0", "# no update.", "\n", "", "break", "\n", "\n", "", "g", "=", "self", ".", "update", "(", "g", ",", "dx", ")", "\n", "self", ".", "g_series", "[", "itr", "+", "1", "]", "=", "g", ".", "clone", "(", ")", "\n", "\n", "", "rep", "=", "len", "(", "range", "(", "itr", ",", "maxiter", ")", ")", "\n", "self", ".", "g_series", "[", "(", "itr", "+", "1", ")", ":", "]", "=", "g", ".", "clone", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "rep", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "ptnet", ".", "train", "(", "training", ")", "\n", "return", "r", ",", "g", ",", "(", "itr", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.ExpMap.forward": [[176, 185], ["ctx.save_for_backward", "so3.exp"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "\"\"\" Exp: R^3 -> M(3),\n            size: [B, 3] -> [B, 3, 3],\n              or  [B, 1, 3] -> [B, 1, 3, 3]\n        \"\"\"", "\n", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "g", "=", "exp", "(", "x", ")", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.ExpMap.backward": [[186, 209], ["so3.exp", "genmat().to", "genmat().to.matmul", "dg.to.to.to", "grad_output.contiguous().view", "dd.sum().sum", "exp.view", "so3.genmat", "grad_output.contiguous", "dd.sum"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.genmat"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "=", "ctx", ".", "saved_tensors", "\n", "g", "=", "exp", "(", "x", ")", "\n", "gen_k", "=", "genmat", "(", ")", ".", "to", "(", "x", ")", "\n", "#gen_1 = gen_k[0, :, :]", "\n", "#gen_2 = gen_k[1, :, :]", "\n", "#gen_3 = gen_k[2, :, :]", "\n", "\n", "# Let z = f(g) = f(exp(x))", "\n", "# dz = df/dgij * dgij/dxk * dxk", "\n", "#    = df/dgij * (d/dxk)[exp(x)]_ij * dxk", "\n", "#    = df/dgij * [gen_k*g]_ij * dxk", "\n", "\n", "dg", "=", "gen_k", ".", "matmul", "(", "g", ".", "view", "(", "-", "1", ",", "1", ",", "3", ",", "3", ")", ")", "\n", "# (k, i, j)", "\n", "dg", "=", "dg", ".", "to", "(", "grad_output", ")", "\n", "\n", "go", "=", "grad_output", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "3", ",", "3", ")", "\n", "dd", "=", "go", "*", "dg", "\n", "grad_input", "=", "dd", ".", "sum", "(", "-", "1", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "return", "grad_input", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.cross_prod": [[7, 10], ["torch.cross().view_as", "torch.cross", "x.view", "y.view"], "function", ["None"], ["def", "cross_prod", "(", "x", ",", "y", ")", ":", "\n", "    ", "z", "=", "torch", ".", "cross", "(", "x", ".", "view", "(", "-", "1", ",", "3", ")", ",", "y", ".", "view", "(", "-", "1", ",", "3", ")", ",", "dim", "=", "1", ")", ".", "view_as", "(", "x", ")", "\n", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.liebracket": [[11, 13], ["so3.cross_prod"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.cross_prod"], ["", "def", "liebracket", "(", "x", ",", "y", ")", ":", "\n", "    ", "return", "cross_prod", "(", "x", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.mat": [[14, 25], ["x.view", "torch.zeros_like", "torch.stack", "torch.stack.view", "torch.stack", "torch.stack", "torch.stack", "x.size"], "function", ["None"], ["", "def", "mat", "(", "x", ")", ":", "\n", "# size: [*, 3] -> [*, 3, 3]", "\n", "    ", "x_", "=", "x", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "x1", ",", "x2", ",", "x3", "=", "x_", "[", ":", ",", "0", "]", ",", "x_", "[", ":", ",", "1", "]", ",", "x_", "[", ":", ",", "2", "]", "\n", "O", "=", "torch", ".", "zeros_like", "(", "x1", ")", "\n", "\n", "X", "=", "torch", ".", "stack", "(", "(", "\n", "torch", ".", "stack", "(", "(", "O", ",", "-", "x3", ",", "x2", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "x3", ",", "O", ",", "-", "x1", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "-", "x2", ",", "x1", ",", "O", ")", ",", "dim", "=", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "return", "X", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.vec": [[26, 31], ["X.view", "torch.stack", "torch.stack.view", "X.size"], "function", ["None"], ["", "def", "vec", "(", "X", ")", ":", "\n", "    ", "X_", "=", "X", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "x1", ",", "x2", ",", "x3", "=", "X_", "[", ":", ",", "2", ",", "1", "]", ",", "X_", "[", ":", ",", "0", ",", "2", "]", ",", "X_", "[", ":", ",", "1", ",", "0", "]", "\n", "x", "=", "torch", ".", "stack", "(", "(", "x1", ",", "x2", ",", "x3", ")", ",", "dim", "=", "1", ")", "\n", "return", "x", ".", "view", "(", "*", "X", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.genvec": [[32, 34], ["torch.eye"], "function", ["None"], ["", "def", "genvec", "(", ")", ":", "\n", "    ", "return", "torch", ".", "eye", "(", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.genmat": [[35, 37], ["so3.mat", "so3.genvec"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.mat", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.genvec"], ["", "def", "genmat", "(", ")", ":", "\n", "    ", "return", "mat", "(", "genvec", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.RodriguesRotation": [[38, 53], ["x.view", "x.view.norm().view", "so3.mat", "mat.bmm", "torch.eye().to", "R.view", "x.view.norm", "torch.eye", "sinc.Sinc2", "sinc.Sinc1", "x.size"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.mat"], ["", "def", "RodriguesRotation", "(", "x", ")", ":", "\n", "# for autograd", "\n", "    ", "w", "=", "x", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "t", "=", "w", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "W", "=", "mat", "(", "w", ")", "\n", "S", "=", "W", ".", "bmm", "(", "W", ")", "\n", "I", "=", "torch", ".", "eye", "(", "3", ")", ".", "to", "(", "w", ")", "\n", "\n", "# Rodrigues' rotation formula.", "\n", "#R = cos(t)*eye(3) + sinc1(t)*W + sinc2(t)*(w*w');", "\n", "#R = eye(3) + sinc1(t)*W + sinc2(t)*S", "\n", "\n", "R", "=", "I", "+", "sinc", ".", "Sinc1", "(", "t", ")", "*", "W", "+", "sinc", ".", "Sinc2", "(", "t", ")", "*", "S", "\n", "\n", "return", "R", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.exp": [[54, 68], ["x.view", "x.view.norm().view", "so3.mat", "mat.bmm", "torch.eye().to", "R.view", "x.view.norm", "torch.eye", "sinc.sinc2", "sinc.sinc1", "x.size"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.mat", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc2", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc1"], ["", "def", "exp", "(", "x", ")", ":", "\n", "    ", "w", "=", "x", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "t", "=", "w", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "W", "=", "mat", "(", "w", ")", "\n", "S", "=", "W", ".", "bmm", "(", "W", ")", "\n", "I", "=", "torch", ".", "eye", "(", "3", ")", ".", "to", "(", "w", ")", "\n", "\n", "# Rodrigues' rotation formula.", "\n", "#R = cos(t)*eye(3) + sinc1(t)*W + sinc2(t)*(w*w');", "\n", "#R = eye(3) + sinc1(t)*W + sinc2(t)*S", "\n", "\n", "R", "=", "I", "+", "sinc1", "(", "t", ")", "*", "W", "+", "sinc2", "(", "t", ")", "*", "S", "\n", "\n", "return", "R", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.inverse": [[69, 73], ["g.view", "g.view.transpose", "R.transpose.view_as"], "function", ["None"], ["", "def", "inverse", "(", "g", ")", ":", "\n", "    ", "R", "=", "g", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "Rt", "=", "R", ".", "transpose", "(", "1", ",", "2", ")", "\n", "return", "Rt", ".", "view_as", "(", "g", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.btrace": [[74, 83], ["X.size", "X.view", "torch.zeros().to", "range", "torch.zeros().to.view", "torch.zeros().to.size", "torch.trace", "torch.zeros", "X.view.size", "X.size"], "function", ["None"], ["", "def", "btrace", "(", "X", ")", ":", "\n", "# batch-trace: [B, N, N] -> [B]", "\n", "    ", "n", "=", "X", ".", "size", "(", "-", "1", ")", "\n", "X_", "=", "X", ".", "view", "(", "-", "1", ",", "n", ",", "n", ")", "\n", "tr", "=", "torch", ".", "zeros", "(", "X_", ".", "size", "(", "0", ")", ")", ".", "to", "(", "X", ")", "\n", "for", "i", "in", "range", "(", "tr", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "m", "=", "X_", "[", "i", ",", ":", ",", ":", "]", "\n", "tr", "[", "i", "]", "=", "torch", ".", "trace", "(", "m", ")", "\n", "", "return", "tr", ".", "view", "(", "*", "(", "X", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.log": [[84, 120], ["g.view", "so3.btrace", "torch.acos", "sinc.sinc1", "sc.view.view", "torch.zeros_like", "idx1.any", "idx0.any", "so3.vec", "torch.abs", "torch.abs", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sign", "torch.sign", "torch.stack", "so3.mat", "torch.zeros_like.view_as", "R[].transpose", "t2.view", "torch.eye().type_as().unsqueeze", "torch.eye().type_as", "torch.eye"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.btrace", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc1", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.vec", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.mat"], ["", "def", "log", "(", "g", ")", ":", "\n", "    ", "eps", "=", "1.0e-7", "\n", "R", "=", "g", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "tr", "=", "btrace", "(", "R", ")", "\n", "c", "=", "(", "tr", "-", "1", ")", "/", "2", "\n", "t", "=", "torch", ".", "acos", "(", "c", ")", "\n", "sc", "=", "sinc1", "(", "t", ")", "\n", "idx0", "=", "(", "torch", ".", "abs", "(", "sc", ")", "<=", "eps", ")", "\n", "idx1", "=", "(", "torch", ".", "abs", "(", "sc", ")", ">", "eps", ")", "\n", "sc", "=", "sc", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "\n", "X", "=", "torch", ".", "zeros_like", "(", "R", ")", "\n", "if", "idx1", ".", "any", "(", ")", ":", "\n", "        ", "X", "[", "idx1", "]", "=", "(", "R", "[", "idx1", "]", "-", "R", "[", "idx1", "]", ".", "transpose", "(", "1", ",", "2", ")", ")", "/", "(", "2", "*", "sc", "[", "idx1", "]", ")", "\n", "\n", "", "if", "idx0", ".", "any", "(", ")", ":", "\n", "# t[idx0] == math.pi", "\n", "        ", "t2", "=", "t", "[", "idx0", "]", "**", "2", "\n", "A", "=", "(", "R", "[", "idx0", "]", "+", "torch", ".", "eye", "(", "3", ")", ".", "type_as", "(", "R", ")", ".", "unsqueeze", "(", "0", ")", ")", "*", "t2", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "/", "2", "\n", "aw1", "=", "torch", ".", "sqrt", "(", "A", "[", ":", ",", "0", ",", "0", "]", ")", "\n", "aw2", "=", "torch", ".", "sqrt", "(", "A", "[", ":", ",", "1", ",", "1", "]", ")", "\n", "aw3", "=", "torch", ".", "sqrt", "(", "A", "[", ":", ",", "2", ",", "2", "]", ")", "\n", "sgn_3", "=", "torch", ".", "sign", "(", "A", "[", ":", ",", "0", ",", "2", "]", ")", "\n", "sgn_3", "[", "sgn_3", "==", "0", "]", "=", "1", "\n", "sgn_23", "=", "torch", ".", "sign", "(", "A", "[", ":", ",", "1", ",", "2", "]", ")", "\n", "sgn_23", "[", "sgn_23", "==", "0", "]", "=", "1", "\n", "sgn_2", "=", "sgn_23", "*", "sgn_3", "\n", "w1", "=", "aw1", "\n", "w2", "=", "aw2", "*", "sgn_2", "\n", "w3", "=", "aw3", "*", "sgn_3", "\n", "w", "=", "torch", ".", "stack", "(", "(", "w1", ",", "w2", ",", "w3", ")", ",", "dim", "=", "-", "1", ")", "\n", "W", "=", "mat", "(", "w", ")", "\n", "X", "[", "idx0", "]", "=", "W", "\n", "\n", "", "x", "=", "vec", "(", "X", ".", "view_as", "(", "g", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.transform": [[121, 129], ["len", "len", "g.matmul", "g.matmul().squeeze", "g.size", "a.size", "g.matmul", "a.unsqueeze"], "function", ["None"], ["", "def", "transform", "(", "g", ",", "a", ")", ":", "\n", "# g in SO(3):  * x 3 x 3", "\n", "# a in R^3:    * x 3[x N]", "\n", "    ", "if", "len", "(", "g", ".", "size", "(", ")", ")", "==", "len", "(", "a", ".", "size", "(", ")", ")", ":", "\n", "        ", "b", "=", "g", ".", "matmul", "(", "a", ")", "\n", "", "else", ":", "\n", "        ", "b", "=", "g", ".", "matmul", "(", "a", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.group_prod": [[130, 134], ["g.matmul"], "function", ["None"], ["", "def", "group_prod", "(", "g", ",", "h", ")", ":", "\n", "# g, h : SO(3)", "\n", "    ", "g1", "=", "g", ".", "matmul", "(", "h", ")", "\n", "return", "g1", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.vecs_Xg_ig": [[137, 153], ["x.view().norm().view", "so3.mat", "mat.bmm", "torch.eye().to", "V.view", "x.view().norm", "torch.eye", "sinc.sinc3", "sinc.sinc2", "x.size", "x.view"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.mat", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc3", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc2"], ["", "def", "vecs_Xg_ig", "(", "x", ")", ":", "\n", "    ", "\"\"\" Vi = vec(dg/dxi * inv(g)), where g = exp(x)\n        (== [Ad(exp(x))] * vecs_ig_Xg(x))\n    \"\"\"", "\n", "t", "=", "x", ".", "view", "(", "-", "1", ",", "3", ")", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "X", "=", "mat", "(", "x", ")", "\n", "S", "=", "X", ".", "bmm", "(", "X", ")", "\n", "#B = x.view(-1,3,1).bmm(x.view(-1,1,3))  # B = x*x'", "\n", "I", "=", "torch", ".", "eye", "(", "3", ")", ".", "to", "(", "X", ")", "\n", "\n", "#V = sinc1(t)*eye(3) + sinc2(t)*X + sinc3(t)*B", "\n", "#V = eye(3) + sinc2(t)*X + sinc3(t)*S", "\n", "\n", "V", "=", "I", "+", "sinc2", "(", "t", ")", "*", "X", "+", "sinc3", "(", "t", ")", "*", "S", "\n", "\n", "return", "V", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.inv_vecs_Xg_ig": [[154, 171], ["x.view().norm().view", "so3.mat", "mat.bmm", "torch.eye().to", "torch.zeros_like", "H.view", "x.view().norm", "torch.eye", "torch.tan", "x.size", "x.view"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.mat"], ["", "def", "inv_vecs_Xg_ig", "(", "x", ")", ":", "\n", "    ", "\"\"\" H = inv(vecs_Xg_ig(x)) \"\"\"", "\n", "t", "=", "x", ".", "view", "(", "-", "1", ",", "3", ")", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "X", "=", "mat", "(", "x", ")", "\n", "S", "=", "X", ".", "bmm", "(", "X", ")", "\n", "I", "=", "torch", ".", "eye", "(", "3", ")", ".", "to", "(", "x", ")", "\n", "\n", "e", "=", "0.01", "\n", "eta", "=", "torch", ".", "zeros_like", "(", "t", ")", "\n", "s", "=", "(", "t", "<", "e", ")", "\n", "c", "=", "(", "s", "==", "0", ")", "\n", "t2", "=", "t", "[", "s", "]", "**", "2", "\n", "eta", "[", "s", "]", "=", "(", "(", "t2", "/", "40", "+", "1", ")", "*", "t2", "/", "42", "+", "1", ")", "*", "t2", "/", "720", "+", "1", "/", "12", "# O(t**8)", "\n", "eta", "[", "c", "]", "=", "(", "1", "-", "(", "t", "[", "c", "]", "/", "2", ")", "/", "torch", ".", "tan", "(", "t", "[", "c", "]", "/", "2", ")", ")", "/", "(", "t", "[", "c", "]", "**", "2", ")", "\n", "\n", "H", "=", "I", "-", "1", "/", "2", "*", "X", "+", "eta", "*", "S", "\n", "return", "H", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.invmat.InvMatrix.forward": [[85, 90], ["invmat.batch_inverse", "ctx.save_for_backward"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.invmat.batch_inverse"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "y", "=", "batch_inverse", "(", "x", ")", "\n", "ctx", ".", "save_for_backward", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.invmat.InvMatrix.backward": [[91, 111], ["y.size", "invmat.batch_inverse_dx", "grad_output.contiguous().view", "batch_inverse_dx.view", "grad_output.contiguous().view.bmm", "grad_output.contiguous().view.bmm.view", "grad_output.contiguous"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.invmat.batch_inverse_dx"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "y", ",", "=", "ctx", ".", "saved_tensors", "# v0.4", "\n", "#y, = ctx.saved_variables  # v0.3.1", "\n", "batch_size", ",", "h", ",", "w", "=", "y", ".", "size", "(", ")", "\n", "assert", "h", "==", "w", "\n", "\n", "# Let y(x) = x^-1 and assume any function f(y(x)).", "\n", "# compute df/dx(m,n)...", "\n", "#   df/dx(m,n) = df/dy(j,k) * dy(j,k)/dx(m,n)", "\n", "# well, df/dy is 'grad_output'", "\n", "# and so we will return 'grad_input = df/dy(j,k) * dy(j,k)/dx(m,n)'", "\n", "\n", "dy", "=", "batch_inverse_dx", "(", "y", ")", "# dy(j,k,m,n) = dy(j,k)/dx(m,n)", "\n", "go", "=", "grad_output", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "1", ",", "h", "*", "h", ")", "# [1, (j*k)]", "\n", "ym", "=", "dy", ".", "view", "(", "batch_size", ",", "h", "*", "h", ",", "h", "*", "h", ")", "# [(j*k), (m*n)]", "\n", "r", "=", "go", ".", "bmm", "(", "ym", ")", "# [1, (m*n)]", "\n", "grad_input", "=", "r", ".", "view", "(", "batch_size", ",", "h", ",", "h", ")", "# [m, n]", "\n", "\n", "return", "grad_input", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.invmat.batch_inverse": [[6, 14], ["x.size", "torch.zeros_like", "range", "x[].inverse"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.inverse"], ["def", "batch_inverse", "(", "x", ")", ":", "\n", "    ", "\"\"\" M(n) -> M(n); x -> x^-1 \"\"\"", "\n", "batch_size", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "assert", "h", "==", "w", "\n", "y", "=", "torch", ".", "zeros_like", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "y", "[", "i", ",", ":", ",", ":", "]", "=", "x", "[", "i", ",", ":", ",", ":", "]", ".", "inverse", "(", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.invmat.batch_inverse_dx": [[15, 39], ["y.size", "y.repeat().view", "y.transpose().repeat().view", "y.repeat().view.bmm().view", "y.repeat", "y.transpose().repeat", "y.repeat().view.bmm", "y.transpose"], "function", ["None"], ["", "def", "batch_inverse_dx", "(", "y", ")", ":", "\n", "    ", "\"\"\" backward \"\"\"", "\n", "# Let y(x) = x^-1.", "\n", "# compute dy", "\n", "#   dy = dy(j,k)", "\n", "#      = - y(j,m) * dx(m,n) * y(n,k)", "\n", "#      = - y(j,m) * y(n,k) * dx(m,n)", "\n", "# therefore,", "\n", "#   dy(j,k)/dx(m,n) = - y(j,m) * y(n,k)", "\n", "batch_size", ",", "h", ",", "w", "=", "y", ".", "size", "(", ")", "\n", "assert", "h", "==", "w", "\n", "# compute dy(j,k,m,n) = dy(j,k)/dx(m,n) = - y(j,m) * y(n,k)", "\n", "#   = - (y(j,:))' * y'(k,:)", "\n", "yl", "=", "y", ".", "repeat", "(", "1", ",", "1", ",", "h", ")", ".", "view", "(", "batch_size", "*", "h", "*", "h", ",", "h", ",", "1", ")", "\n", "yr", "=", "y", ".", "transpose", "(", "1", ",", "2", ")", ".", "repeat", "(", "1", ",", "h", ",", "1", ")", ".", "view", "(", "batch_size", "*", "h", "*", "h", ",", "1", ",", "h", ")", "\n", "dy", "=", "-", "yl", ".", "bmm", "(", "yr", ")", ".", "view", "(", "batch_size", ",", "h", ",", "h", ",", "h", ",", "h", ")", "\n", "\n", "# compute dy(m,n,j,k) = dy(j,k)/dx(m,n) = - y(j,m) * y(n,k)", "\n", "#   = - (y'(m,:))' * y(n,:)", "\n", "#yl = y.transpose(1, 2).repeat(1, 1, h).view(batch_size*h*h, h, 1)", "\n", "#yr = y.repeat(1, h, 1).view(batch_size*h*h, 1, h)", "\n", "#dy = - yl.bmm(yr).view(batch_size, h, h, h, h)", "\n", "\n", "return", "dy", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.invmat.batch_pinv_dx": [[41, 80], ["x.size", "x.transpose", "x.transpose.bmm", "invmat.batch_inverse", "batch_inverse.bmm", "torch.eye().to().unsqueeze().view", "torch.eye().to().unsqueeze().view.view", "x.transpose().matmul().view", "invmat.batch_inverse_dx", "batch_inverse_dx.view().bmm", "db_ds.view().bmm.view", "db1.view.transpose().contiguous().view", "x.matmul().view", "torch.eye().to().unsqueeze().view.transpose().contiguous().view", "batch_inverse.matmul().view", "x.transpose().matmul().view.transpose", "ds_dx.view", "x.matmul().view.transpose", "torch.eye().to().unsqueeze", "x.transpose().matmul", "batch_inverse_dx.view", "db1.view.transpose().contiguous", "x.matmul", "torch.eye().to().unsqueeze().view.transpose().contiguous", "batch_inverse.matmul", "torch.eye().to", "x.transpose", "db1.view.transpose", "torch.eye().to().unsqueeze().view.transpose", "torch.eye"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.invmat.batch_inverse", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.invmat.batch_inverse_dx"], ["", "def", "batch_pinv_dx", "(", "x", ")", ":", "\n", "    ", "\"\"\" returns y = (x'*x)^-1 * x' and dy/dx. \"\"\"", "\n", "# y = (x'*x)^-1 * x'", "\n", "#   = s^-1 * x'", "\n", "#   = b * x'", "\n", "# d{y(j,k)}/d{x(m,n)}", "\n", "#   = d{b(j,i) * x(k,i)}/d{x(m,n)}", "\n", "#   = d{b(j,i)}/d{x(m,n)} * x(k,i) + b(j,i) * d{x(k,i)}/d{x(m,n)}", "\n", "# d{b(j,i)}/d{x(m,n)}", "\n", "#   = d{b(j,i)}/d{s(p,q)} * d{s(p,q)}/d{x(m,n)}", "\n", "#   = -b(j,p)*b(q,i) * d{s(p,q)}/d{x(m,n)}", "\n", "# d{s(p,q)}/d{x(m,n)}", "\n", "#   = d{x(t,p)*x(t,q)}/d{x(m,n)}", "\n", "#   = d{x(t,p)}/d{x(m,n)} * x(t,q) + x(t,p) * d{x(t,q)}/d{x(m,n)}", "\n", "batch_size", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "xt", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", "\n", "s", "=", "xt", ".", "bmm", "(", "x", ")", "\n", "b", "=", "batch_inverse", "(", "s", ")", "\n", "y", "=", "b", ".", "bmm", "(", "xt", ")", "\n", "\n", "# dx/dx", "\n", "ex", "=", "torch", ".", "eye", "(", "h", "*", "w", ")", ".", "to", "(", "x", ")", ".", "unsqueeze", "(", "0", ")", ".", "view", "(", "1", ",", "h", ",", "w", ",", "h", ",", "w", ")", "\n", "# ds/dx = dx(t,_)/dx * x(t,_) + x(t,_) * dx(t,_)/dx", "\n", "ex1", "=", "ex", ".", "view", "(", "1", ",", "h", ",", "w", "*", "h", "*", "w", ")", "# [t, p*m*n]", "\n", "dx1", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "matmul", "(", "ex1", ")", ".", "view", "(", "batch_size", ",", "w", ",", "w", ",", "h", ",", "w", ")", "# [q, p,m,n]", "\n", "ds_dx", "=", "dx1", ".", "transpose", "(", "1", ",", "2", ")", "+", "dx1", "# [p, q, m, n]", "\n", "# db/ds", "\n", "db_ds", "=", "batch_inverse_dx", "(", "b", ")", "# [j, i, p, q]", "\n", "# db/dx = db/d{s(p,q)} * d{s(p,q)}/dx", "\n", "db1", "=", "db_ds", ".", "view", "(", "batch_size", ",", "w", "*", "w", ",", "w", "*", "w", ")", ".", "bmm", "(", "ds_dx", ".", "view", "(", "batch_size", ",", "w", "*", "w", ",", "h", "*", "w", ")", ")", "\n", "db_dx", "=", "db1", ".", "view", "(", "batch_size", ",", "w", ",", "w", ",", "h", ",", "w", ")", "# [j, i, m, n]", "\n", "# dy/dx = db(_,i)/dx * x(_,i) + b(_,i) * dx(_,i)/dx", "\n", "dy1", "=", "db_dx", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "w", ",", "w", "*", "h", "*", "w", ")", "\n", "dy1", "=", "x", ".", "matmul", "(", "dy1", ")", ".", "view", "(", "batch_size", ",", "h", ",", "w", ",", "h", ",", "w", ")", "# [k, j, m, n]", "\n", "ext", "=", "ex", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "1", ",", "w", ",", "h", "*", "h", "*", "w", ")", "\n", "dy2", "=", "b", ".", "matmul", "(", "ext", ")", ".", "view", "(", "batch_size", ",", "w", ",", "h", ",", "h", ",", "w", ")", "# [j, k, m, n]", "\n", "dy_dx", "=", "dy1", ".", "transpose", "(", "1", ",", "2", ")", "+", "dy2", "\n", "\n", "return", "y", ",", "dy_dx", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.Flatten.__init__": [[14, 16], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.Flatten.forward": [[16, 18], ["pointnet.flatten"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.flatten"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "flatten", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.MLPNet.__init__": [[44, 48], ["super().__init__", "pointnet.mlp_layers", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.mlp_layers"], ["def", "__init__", "(", "self", ",", "nch_input", ",", "nch_layers", ",", "b_shared", "=", "True", ",", "bn_momentum", "=", "0.1", ",", "dropout", "=", "0.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "list_layers", "=", "mlp_layers", "(", "nch_input", ",", "nch_layers", ",", "b_shared", ",", "bn_momentum", ",", "dropout", ")", "\n", "self", ".", "layers", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "list_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.MLPNet.forward": [[49, 52], ["pointnet.MLPNet.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "out", "=", "self", ".", "layers", "(", "inp", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.TNet.__init__": [[68, 81], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "pointnet.TNet.mlp1.parameters", "pointnet.TNet.mlp2.parameters", "pointnet.TNet.lin.parameters", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "pointnet.mlp_layers", "pointnet.mlp_layers"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.mlp_layers", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.mlp_layers"], ["def", "__init__", "(", "self", ",", "K", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# [B, K, N] -> [B, K*K]", "\n", "self", ".", "mlp1", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "mlp_layers", "(", "K", ",", "[", "64", ",", "128", ",", "1024", "]", ",", "b_shared", "=", "True", ")", ")", "\n", "self", ".", "mlp2", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "mlp_layers", "(", "1024", ",", "[", "512", ",", "256", "]", ",", "b_shared", "=", "False", ")", ")", "\n", "self", ".", "lin", "=", "torch", ".", "nn", ".", "Linear", "(", "256", ",", "K", "*", "K", ")", "\n", "\n", "for", "param", "in", "self", ".", "mlp1", ".", "parameters", "(", ")", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "param", ",", "0.0", ")", "\n", "", "for", "param", "in", "self", ".", "mlp2", ".", "parameters", "(", ")", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "param", ",", "0.0", ")", "\n", "", "for", "param", "in", "self", ".", "lin", ".", "parameters", "(", ")", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "param", ",", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.TNet.forward": [[82, 95], ["inp.size", "inp.size", "torch.eye().unsqueeze().to", "pointnet.TNet.mlp1", "pointnet.flatten", "pointnet.TNet.mlp2", "pointnet.TNet.lin", "x.view.view.view", "torch.nn.functional.max_pool1d", "torch.eye().unsqueeze", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.flatten"], ["", "", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "K", "=", "inp", ".", "size", "(", "1", ")", "\n", "N", "=", "inp", ".", "size", "(", "2", ")", "\n", "eye", "=", "torch", ".", "eye", "(", "K", ")", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "inp", ")", "# [1, K, K]", "\n", "\n", "x", "=", "self", ".", "mlp1", "(", "inp", ")", "\n", "x", "=", "flatten", "(", "torch", ".", "nn", ".", "functional", ".", "max_pool1d", "(", "x", ",", "N", ")", ")", "\n", "x", "=", "self", ".", "mlp2", "(", "x", ")", "\n", "x", "=", "self", ".", "lin", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "K", ",", "K", ")", "\n", "x", "=", "x", "+", "eye", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.PointNet_features.__init__": [[98, 113], ["super().__init__", "int", "int", "int", "int", "int", "pointnet.MLPNet", "pointnet.MLPNet", "pointnet.TNet", "pointnet.TNet"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_k", "=", "1024", ",", "use_tnet", "=", "False", ",", "sym_fn", "=", "symfn_max", ",", "scale", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "mlp_h1", "=", "[", "int", "(", "64", "/", "scale", ")", ",", "int", "(", "64", "/", "scale", ")", "]", "\n", "mlp_h2", "=", "[", "int", "(", "64", "/", "scale", ")", ",", "int", "(", "128", "/", "scale", ")", ",", "int", "(", "dim_k", "/", "scale", ")", "]", "\n", "\n", "self", ".", "h1", "=", "MLPNet", "(", "3", ",", "mlp_h1", ",", "b_shared", "=", "True", ")", ".", "layers", "\n", "self", ".", "h2", "=", "MLPNet", "(", "mlp_h1", "[", "-", "1", "]", ",", "mlp_h2", ",", "b_shared", "=", "True", ")", ".", "layers", "\n", "#self.sy = torch.nn.Sequential(torch.nn.MaxPool1d(num_points), Flatten())", "\n", "self", ".", "sy", "=", "sym_fn", "\n", "\n", "self", ".", "tnet1", "=", "TNet", "(", "3", ")", "if", "use_tnet", "else", "None", "\n", "self", ".", "tnet2", "=", "TNet", "(", "mlp_h1", "[", "-", "1", "]", ")", "if", "use_tnet", "else", "None", "\n", "\n", "self", ".", "t_out_t2", "=", "None", "\n", "self", ".", "t_out_h1", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.PointNet_features.forward": [[114, 143], ["points.transpose", "pointnet.PointNet_features.h1", "pointnet.PointNet_features.h2", "pointnet.flatten", "pointnet.PointNet_features.tnet1", "pointnet.PointNet_features.bmm", "pointnet.PointNet_features.tnet2", "pointnet.PointNet_features.bmm", "pointnet.PointNet_features.sy"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.flatten"], ["", "def", "forward", "(", "self", ",", "points", ")", ":", "\n", "        ", "\"\"\" points -> features\n            [B, N, 3] -> [B, K]\n        \"\"\"", "\n", "x", "=", "points", ".", "transpose", "(", "1", ",", "2", ")", "# [B, 3, N]", "\n", "if", "self", ".", "tnet1", ":", "\n", "            ", "t1", "=", "self", ".", "tnet1", "(", "x", ")", "\n", "x", "=", "t1", ".", "bmm", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "h1", "(", "x", ")", "\n", "if", "self", ".", "tnet2", ":", "\n", "            ", "t2", "=", "self", ".", "tnet2", "(", "x", ")", "\n", "self", ".", "t_out_t2", "=", "t2", "\n", "x", "=", "t2", ".", "bmm", "(", "x", ")", "\n", "", "self", ".", "t_out_h1", "=", "x", "# local features", "\n", "\n", "x", "=", "self", ".", "h2", "(", "x", ")", "\n", "#x = flatten(torch.nn.functional.max_pool1d(x, x.size(-1)))", "\n", "x", "=", "flatten", "(", "self", ".", "sy", "(", "x", ")", ")", "\n", "\n", "#if self.ret_global:", "\n", "#    pass", "\n", "#else:", "\n", "#    # local + global", "\n", "#    l0 = self.t_out_h1 # [B, 64, N]", "\n", "#    g0 = x # [B, K]", "\n", "#    x = torch.cat((l0, g0.unsqueeze(2).repeat(1, 1, num_points)), dim=1)", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.PointNet_classifier.__init__": [[145, 152], ["super().__init__", "pointnet.mlp_layers", "mlp_layers.append", "torch.nn.Sequential", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.mlp_layers"], ["    ", "def", "__init__", "(", "self", ",", "num_c", ",", "ptfeat", ",", "dim_k", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "ptfeat", "\n", "list_layers", "=", "mlp_layers", "(", "dim_k", ",", "[", "512", ",", "256", "]", ",", "b_shared", "=", "False", ",", "bn_momentum", "=", "0.1", ",", "dropout", "=", "0.0", ")", "\n", "#list_layers = mlp_layers(dim_k, [512, 256], b_shared=False, bn_momentum=0.1, dropout=0.3)", "\n", "list_layers", ".", "append", "(", "torch", ".", "nn", ".", "Linear", "(", "256", ",", "num_c", ")", ")", "\n", "self", ".", "classifier", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "list_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.PointNet_classifier.forward": [[153, 157], ["pointnet.PointNet_classifier.features", "pointnet.PointNet_classifier.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "points", ")", ":", "\n", "        ", "feat", "=", "self", ".", "features", "(", "points", ")", "\n", "out", "=", "self", ".", "classifier", "(", "feat", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.PointNet_classifier.loss": [[158, 173], ["torch.nn.functional.nll_loss", "t2.size", "t2.size", "torch.eye().repeat().to", "t2.bmm", "torch.nn.functional.mse_loss", "torch.nn.functional.log_softmax", "t2.transpose", "torch.eye().repeat", "torch.eye"], "methods", ["None"], ["", "def", "loss", "(", "self", ",", "out", ",", "target", ",", "w", "=", "0.001", ")", ":", "\n", "        ", "loss_c", "=", "torch", ".", "nn", ".", "functional", ".", "nll_loss", "(", "\n", "torch", ".", "nn", ".", "functional", ".", "log_softmax", "(", "out", ",", "dim", "=", "1", ")", ",", "target", ",", "size_average", "=", "False", ")", "\n", "\n", "t2", "=", "self", ".", "features", ".", "t_out_t2", "\n", "if", "(", "t2", "is", "None", ")", "or", "(", "w", "==", "0", ")", ":", "\n", "            ", "return", "loss_c", "\n", "\n", "", "batch", "=", "t2", ".", "size", "(", "0", ")", "\n", "K", "=", "t2", ".", "size", "(", "1", ")", "# [B, K, K]", "\n", "I", "=", "torch", ".", "eye", "(", "K", ")", ".", "repeat", "(", "batch", ",", "1", ",", "1", ")", ".", "to", "(", "t2", ")", "\n", "A", "=", "t2", ".", "bmm", "(", "t2", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "loss_m", "=", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "A", ",", "I", ",", "size_average", "=", "False", ")", "\n", "loss", "=", "loss_c", "+", "w", "*", "loss_m", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.flatten": [[10, 12], ["x.view", "x.size"], "function", ["None"], ["def", "flatten", "(", "x", ")", ":", "\n", "    ", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.mlp_layers": [[20, 38], ["enumerate", "layers.append", "layers.append", "layers.append", "torch.nn.Conv1d", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "layers.append", "torch.nn.Dropout"], "function", ["None"], ["", "", "def", "mlp_layers", "(", "nch_input", ",", "nch_layers", ",", "b_shared", "=", "True", ",", "bn_momentum", "=", "0.1", ",", "dropout", "=", "0.0", ")", ":", "\n", "    ", "\"\"\" [B, Cin, N] -> [B, Cout, N] or\n        [B, Cin] -> [B, Cout]\n    \"\"\"", "\n", "layers", "=", "[", "]", "\n", "last", "=", "nch_input", "\n", "for", "i", ",", "outp", "in", "enumerate", "(", "nch_layers", ")", ":", "\n", "        ", "if", "b_shared", ":", "\n", "            ", "weights", "=", "torch", ".", "nn", ".", "Conv1d", "(", "last", ",", "outp", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "weights", "=", "torch", ".", "nn", ".", "Linear", "(", "last", ",", "outp", ")", "\n", "", "layers", ".", "append", "(", "weights", ")", "\n", "layers", ".", "append", "(", "torch", ".", "nn", ".", "BatchNorm1d", "(", "outp", ",", "momentum", "=", "bn_momentum", ")", ")", "\n", "layers", ".", "append", "(", "torch", ".", "nn", ".", "ReLU", "(", ")", ")", "\n", "if", "b_shared", "==", "False", "and", "dropout", ">", "0.0", ":", "\n", "            ", "layers", ".", "append", "(", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", ")", "\n", "", "last", "=", "outp", "\n", "", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.symfn_max": [[54, 59], ["torch.nn.functional.max_pool1d", "x.size"], "function", ["None"], ["", "", "def", "symfn_max", "(", "x", ")", ":", "\n", "# [B, K, N] -> [B, K, 1]", "\n", "    ", "a", "=", "torch", ".", "nn", ".", "functional", ".", "max_pool1d", "(", "x", ",", "x", ".", "size", "(", "-", "1", ")", ")", "\n", "#a, _ = torch.max(x, dim=-1, keepdim=True)", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.pointnet.symfn_avg": [[60, 64], ["torch.nn.functional.avg_pool1d", "x.size"], "function", ["None"], ["", "def", "symfn_avg", "(", "x", ")", ":", "\n", "    ", "a", "=", "torch", ".", "nn", ".", "functional", ".", "avg_pool1d", "(", "x", ",", "x", ".", "size", "(", "-", "1", ")", ")", "\n", "#a = torch.sum(x, dim=-1, keepdim=True) / x.size(-1)", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.ExpMap.forward": [[123, 132], ["ctx.save_for_backward", "se3.exp"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "\"\"\" Exp: R^6 -> M(4),\n            size: [B, 6] -> [B, 4, 4],\n              or  [B, 1, 6] -> [B, 1, 4, 4]\n        \"\"\"", "\n", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "g", "=", "exp", "(", "x", ")", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.ExpMap.backward": [[133, 153], ["se3.exp", "genmat().to", "genmat().to.matmul", "dg.to.to.to", "grad_output.contiguous().view", "dd.sum().sum", "exp.view", "se3.genmat", "grad_output.contiguous", "dd.sum"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.genmat"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "=", "ctx", ".", "saved_tensors", "\n", "g", "=", "exp", "(", "x", ")", "\n", "gen_k", "=", "genmat", "(", ")", ".", "to", "(", "x", ")", "\n", "\n", "# Let z = f(g) = f(exp(x))", "\n", "# dz = df/dgij * dgij/dxk * dxk", "\n", "#    = df/dgij * (d/dxk)[exp(x)]_ij * dxk", "\n", "#    = df/dgij * [gen_k*g]_ij * dxk", "\n", "\n", "dg", "=", "gen_k", ".", "matmul", "(", "g", ".", "view", "(", "-", "1", ",", "1", ",", "4", ",", "4", ")", ")", "\n", "# (k, i, j)", "\n", "dg", "=", "dg", ".", "to", "(", "grad_output", ")", "\n", "\n", "go", "=", "grad_output", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "4", ",", "4", ")", "\n", "dd", "=", "go", "*", "dg", "\n", "grad_input", "=", "dd", ".", "sum", "(", "-", "1", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "return", "grad_input", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.twist_prod": [[6, 19], ["x.view", "y.view", "so3.cross_prod", "torch.cat", "torch.cat.view_as", "so3.cross_prod", "so3.cross_prod"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.cross_prod", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.cross_prod", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.cross_prod"], ["def", "twist_prod", "(", "x", ",", "y", ")", ":", "\n", "    ", "x_", "=", "x", ".", "view", "(", "-", "1", ",", "6", ")", "\n", "y_", "=", "y", ".", "view", "(", "-", "1", ",", "6", ")", "\n", "\n", "xw", ",", "xv", "=", "x_", "[", ":", ",", "0", ":", "3", "]", ",", "x_", "[", ":", ",", "3", ":", "6", "]", "\n", "yw", ",", "yv", "=", "y_", "[", ":", ",", "0", ":", "3", "]", ",", "y_", "[", ":", ",", "3", ":", "6", "]", "\n", "\n", "zw", "=", "so3", ".", "cross_prod", "(", "xw", ",", "yw", ")", "\n", "zv", "=", "so3", ".", "cross_prod", "(", "xw", ",", "yv", ")", "+", "so3", ".", "cross_prod", "(", "xv", ",", "yw", ")", "\n", "\n", "z", "=", "torch", ".", "cat", "(", "(", "zw", ",", "zv", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "z", ".", "view_as", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.liebracket": [[20, 22], ["se3.twist_prod"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.twist_prod"], ["", "def", "liebracket", "(", "x", ",", "y", ")", ":", "\n", "    ", "return", "twist_prod", "(", "x", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.mat": [[24, 37], ["x.view", "torch.zeros_like", "torch.stack", "torch.stack.view", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "x.size"], "function", ["None"], ["", "def", "mat", "(", "x", ")", ":", "\n", "# size: [*, 6] -> [*, 4, 4]", "\n", "    ", "x_", "=", "x", ".", "view", "(", "-", "1", ",", "6", ")", "\n", "w1", ",", "w2", ",", "w3", "=", "x_", "[", ":", ",", "0", "]", ",", "x_", "[", ":", ",", "1", "]", ",", "x_", "[", ":", ",", "2", "]", "\n", "v1", ",", "v2", ",", "v3", "=", "x_", "[", ":", ",", "3", "]", ",", "x_", "[", ":", ",", "4", "]", ",", "x_", "[", ":", ",", "5", "]", "\n", "O", "=", "torch", ".", "zeros_like", "(", "w1", ")", "\n", "\n", "X", "=", "torch", ".", "stack", "(", "(", "\n", "torch", ".", "stack", "(", "(", "O", ",", "-", "w3", ",", "w2", ",", "v1", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "w3", ",", "O", ",", "-", "w1", ",", "v2", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "-", "w2", ",", "w1", ",", "O", ",", "v3", ")", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "stack", "(", "(", "O", ",", "O", ",", "O", ",", "O", ")", ",", "dim", "=", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "return", "X", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "4", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.vec": [[38, 44], ["X.view", "torch.stack", "torch.stack.view", "X.size"], "function", ["None"], ["", "def", "vec", "(", "X", ")", ":", "\n", "    ", "X_", "=", "X", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "\n", "w1", ",", "w2", ",", "w3", "=", "X_", "[", ":", ",", "2", ",", "1", "]", ",", "X_", "[", ":", ",", "0", ",", "2", "]", ",", "X_", "[", ":", ",", "1", ",", "0", "]", "\n", "v1", ",", "v2", ",", "v3", "=", "X_", "[", ":", ",", "0", ",", "3", "]", ",", "X_", "[", ":", ",", "1", ",", "3", "]", ",", "X_", "[", ":", ",", "2", ",", "3", "]", "\n", "x", "=", "torch", ".", "stack", "(", "(", "w1", ",", "w2", ",", "w3", ",", "v1", ",", "v2", ",", "v3", ")", ",", "dim", "=", "1", ")", "\n", "return", "x", ".", "view", "(", "*", "X", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ",", "6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.genvec": [[45, 47], ["torch.eye"], "function", ["None"], ["", "def", "genvec", "(", ")", ":", "\n", "    ", "return", "torch", ".", "eye", "(", "6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.genmat": [[48, 50], ["se3.mat", "se3.genvec"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.mat", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.genvec"], ["", "def", "genmat", "(", ")", ":", "\n", "    ", "return", "mat", "(", "genvec", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp": [[51, 75], ["x.view", "w.norm().view", "so3.mat", "so3.mat.bmm", "torch.eye().to", "V.bmm", "torch.Tensor().view().repeat().to", "torch.cat", "torch.cat", "torch.cat.view", "v.contiguous().view", "w.norm", "torch.eye", "sinc.sinc2", "sinc.sinc3", "torch.Tensor().view().repeat", "sinc.sinc1", "sinc.sinc2", "v.contiguous", "x.view.size", "x.size", "torch.Tensor().view", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.mat", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc2", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc3", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc1", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.sinc.sinc2"], ["", "def", "exp", "(", "x", ")", ":", "\n", "    ", "x_", "=", "x", ".", "view", "(", "-", "1", ",", "6", ")", "\n", "w", ",", "v", "=", "x_", "[", ":", ",", "0", ":", "3", "]", ",", "x_", "[", ":", ",", "3", ":", "6", "]", "\n", "t", "=", "w", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "W", "=", "so3", ".", "mat", "(", "w", ")", "\n", "S", "=", "W", ".", "bmm", "(", "W", ")", "\n", "I", "=", "torch", ".", "eye", "(", "3", ")", ".", "to", "(", "w", ")", "\n", "\n", "# Rodrigues' rotation formula.", "\n", "#R = cos(t)*eye(3) + sinc1(t)*W + sinc2(t)*(w*w');", "\n", "#  = eye(3) + sinc1(t)*W + sinc2(t)*S", "\n", "R", "=", "I", "+", "sinc1", "(", "t", ")", "*", "W", "+", "sinc2", "(", "t", ")", "*", "S", "\n", "\n", "#V = sinc1(t)*eye(3) + sinc2(t)*W + sinc3(t)*(w*w')", "\n", "#  = eye(3) + sinc2(t)*W + sinc3(t)*S", "\n", "V", "=", "I", "+", "sinc2", "(", "t", ")", "*", "W", "+", "sinc3", "(", "t", ")", "*", "S", "\n", "\n", "p", "=", "V", ".", "bmm", "(", "v", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "3", ",", "1", ")", ")", "\n", "\n", "z", "=", "torch", ".", "Tensor", "(", "[", "0", ",", "0", ",", "0", ",", "1", "]", ")", ".", "view", "(", "1", ",", "1", ",", "4", ")", ".", "repeat", "(", "x_", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", ".", "to", "(", "x", ")", "\n", "Rp", "=", "torch", ".", "cat", "(", "(", "R", ",", "p", ")", ",", "dim", "=", "2", ")", "\n", "g", "=", "torch", ".", "cat", "(", "(", "Rp", ",", "z", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "g", ".", "view", "(", "*", "(", "x", ".", "size", "(", ")", "[", "0", ":", "-", "1", "]", ")", ",", "4", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.inverse": [[76, 88], ["g.view", "R.transpose", "torch.Tensor().view().repeat().to", "torch.cat", "torch.cat", "torch.cat.view", "R.transpose.matmul", "p.unsqueeze", "torch.Tensor().view().repeat", "g.view.size", "g.size", "torch.Tensor().view", "torch.Tensor"], "function", ["None"], ["", "def", "inverse", "(", "g", ")", ":", "\n", "    ", "g_", "=", "g", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "\n", "R", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "0", ":", "3", "]", "\n", "p", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "3", "]", "\n", "Q", "=", "R", ".", "transpose", "(", "1", ",", "2", ")", "\n", "q", "=", "-", "Q", ".", "matmul", "(", "p", ".", "unsqueeze", "(", "-", "1", ")", ")", "\n", "\n", "z", "=", "torch", ".", "Tensor", "(", "[", "0", ",", "0", ",", "0", ",", "1", "]", ")", ".", "view", "(", "1", ",", "1", ",", "4", ")", ".", "repeat", "(", "g_", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", ".", "to", "(", "g", ")", "\n", "Qq", "=", "torch", ".", "cat", "(", "(", "Q", ",", "q", ")", ",", "dim", "=", "2", ")", "\n", "ig", "=", "torch", ".", "cat", "(", "(", "Qq", ",", "z", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "ig", ".", "view", "(", "*", "(", "g", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ")", ",", "4", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log": [[90, 101], ["g.view", "so3.log", "so3.inv_vecs_Xg_ig", "so3.inv_vecs_Xg_ig.bmm().view", "torch.cat", "torch.cat.view", "so3.inv_vecs_Xg_ig.bmm", "p.contiguous().view", "g.size", "p.contiguous"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.log", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.so3.inv_vecs_Xg_ig"], ["", "def", "log", "(", "g", ")", ":", "\n", "    ", "g_", "=", "g", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "\n", "R", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "0", ":", "3", "]", "\n", "p", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "3", "]", "\n", "\n", "w", "=", "so3", ".", "log", "(", "R", ")", "\n", "H", "=", "so3", ".", "inv_vecs_Xg_ig", "(", "w", ")", "\n", "v", "=", "H", ".", "bmm", "(", "p", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "3", ",", "1", ")", ")", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "w", ",", "v", ")", ",", "dim", "=", "1", ")", "\n", "return", "x", ".", "view", "(", "*", "(", "g", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ")", ",", "6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.transform": [[102, 113], ["g.view", "g_[].contiguous().view", "g_[].contiguous().view", "len", "len", "g_[].contiguous", "g_[].contiguous", "g.size", "a.size", "g_[].contiguous().view.matmul", "g_[].contiguous().view.unsqueeze", "g_[].contiguous().view.matmul().squeeze", "g.size", "g.size", "g_[].contiguous().view.matmul", "a.unsqueeze"], "function", ["None"], ["", "def", "transform", "(", "g", ",", "a", ")", ":", "\n", "# g : SE(3),  * x 4 x 4", "\n", "# a : R^3,    * x 3[x N]", "\n", "    ", "g_", "=", "g", ".", "view", "(", "-", "1", ",", "4", ",", "4", ")", "\n", "R", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "0", ":", "3", "]", ".", "contiguous", "(", ")", ".", "view", "(", "*", "(", "g", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ")", ",", "3", ",", "3", ")", "\n", "p", "=", "g_", "[", ":", ",", "0", ":", "3", ",", "3", "]", ".", "contiguous", "(", ")", ".", "view", "(", "*", "(", "g", ".", "size", "(", ")", "[", "0", ":", "-", "2", "]", ")", ",", "3", ")", "\n", "if", "len", "(", "g", ".", "size", "(", ")", ")", "==", "len", "(", "a", ".", "size", "(", ")", ")", ":", "\n", "        ", "b", "=", "R", ".", "matmul", "(", "a", ")", "+", "p", ".", "unsqueeze", "(", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "b", "=", "R", ".", "matmul", "(", "a", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "+", "p", "\n", "", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.group_prod": [[114, 118], ["g.matmul"], "function", ["None"], ["", "def", "group_prod", "(", "g", ",", "h", ")", ":", "\n", "# g, h : SE(3)", "\n", "    ", "g1", "=", "g", ".", "matmul", "(", "h", ")", "\n", "return", "g1", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.Mesh2Points.__init__": [[14, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.Mesh2Points.__call__": [[17, 21], ["mesh.clone.clone.clone", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.clone"], ["", "def", "__call__", "(", "self", ",", "mesh", ")", ":", "\n", "        ", "mesh", "=", "mesh", ".", "clone", "(", ")", "\n", "v", "=", "mesh", ".", "vertex_array", "\n", "return", "torch", ".", "from_numpy", "(", "v", ")", ".", "type", "(", "dtype", "=", "torch", ".", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.OnUnitSphere.__init__": [[23, 25], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "zero_mean", "=", "False", ")", ":", "\n", "        ", "self", ".", "zero_mean", "=", "zero_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.OnUnitSphere.__call__": [[26, 35], ["v.norm", "torch.max", "torch.max", "torch.max", "torch.max", "tensor.mean"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "if", "self", ".", "zero_mean", ":", "\n", "            ", "m", "=", "tensor", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "# [N, D] -> [1, D]", "\n", "v", "=", "tensor", "-", "m", "\n", "", "else", ":", "\n", "            ", "v", "=", "tensor", "\n", "", "nn", "=", "v", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", "# [N, D] -> [N]", "\n", "nmax", "=", "torch", ".", "max", "(", "nn", ")", "\n", "return", "v", "/", "nmax", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.OnUnitCube.__init__": [[37, 39], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.OnUnitCube.method1": [[40, 46], ["tensor.mean", "torch.max", "torch.max", "torch.max", "torch.max", "v.abs"], "methods", ["None"], ["", "def", "method1", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "m", "=", "tensor", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "# [N, D] -> [1, D]", "\n", "v", "=", "tensor", "-", "m", "\n", "s", "=", "torch", ".", "max", "(", "v", ".", "abs", "(", ")", ")", "\n", "v", "=", "v", "/", "s", "*", "0.5", "\n", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.OnUnitCube.method2": [[47, 52], ["torch.max", "torch.max", "torch.max", "torch.max", "v.mean", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min"], "methods", ["None"], ["", "def", "method2", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "c", "=", "torch", ".", "max", "(", "tensor", ",", "dim", "=", "0", ")", "[", "0", "]", "-", "torch", ".", "min", "(", "tensor", ",", "dim", "=", "0", ")", "[", "0", "]", "# [N, D] -> [D]", "\n", "s", "=", "torch", ".", "max", "(", "c", ")", "# -> scalar", "\n", "v", "=", "tensor", "/", "s", "\n", "return", "v", "-", "v", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.OnUnitCube.__call__": [[53, 56], ["transforms.OnUnitCube.method2"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.OnUnitCube.method2"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "#return self.method1(tensor)", "\n", "        ", "return", "self", ".", "method2", "(", "tensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.Resampler.__init__": [[60, 62], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "num", ")", ":", "\n", "        ", "self", ".", "num", "=", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.Resampler.__call__": [[63, 76], ["tensor.size", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "num_points", ",", "dim_p", "=", "tensor", ".", "size", "(", ")", "\n", "out", "=", "torch", ".", "zeros", "(", "self", ".", "num", ",", "dim_p", ")", ".", "to", "(", "tensor", ")", "\n", "\n", "selected", "=", "0", "\n", "while", "selected", "<", "self", ".", "num", ":", "\n", "            ", "remainder", "=", "self", ".", "num", "-", "selected", "\n", "idx", "=", "torch", ".", "randperm", "(", "num_points", ")", "\n", "sel", "=", "min", "(", "remainder", ",", "num_points", ")", "\n", "val", "=", "tensor", "[", "idx", "[", ":", "sel", "]", "]", "\n", "out", "[", "selected", ":", "(", "selected", "+", "sel", ")", "]", "=", "val", "\n", "selected", "+=", "sel", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTranslate.__init__": [[78, 82], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mag", "=", "None", ",", "randomly", "=", "True", ")", ":", "\n", "        ", "self", ".", "mag", "=", "1.0", "if", "mag", "is", "None", "else", "mag", "\n", "self", ".", "randomly", "=", "randomly", "\n", "self", ".", "igt", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTranslate.__call__": [[83, 95], ["torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.randn().to.norm", "torch.randn().to.norm"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "# tensor: [N, 3]", "\n", "        ", "amp", "=", "torch", ".", "rand", "(", "1", ")", "if", "self", ".", "randomly", "else", "1.0", "\n", "t", "=", "torch", ".", "randn", "(", "1", ",", "3", ")", ".", "to", "(", "tensor", ")", "\n", "t", "=", "t", "/", "t", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "*", "amp", "*", "self", ".", "mag", "\n", "\n", "g", "=", "torch", ".", "eye", "(", "4", ")", ".", "to", "(", "tensor", ")", "\n", "g", "[", "0", ":", "3", ",", "3", "]", "=", "t", "[", "0", ",", ":", "]", "\n", "self", ".", "igt", "=", "g", "# [4, 4]", "\n", "\n", "p1", "=", "tensor", "+", "t", "\n", "return", "p1", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomRotator.__init__": [[97, 101], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mag", "=", "None", ",", "randomly", "=", "True", ")", ":", "\n", "        ", "self", ".", "mag", "=", "math", ".", "pi", "if", "mag", "is", "None", "else", "mag", "\n", "self", ".", "randomly", "=", "randomly", "\n", "self", ".", "igt", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomRotator.__call__": [[102, 113], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "so3.exp().to", "so3.exp().to.squeeze", "so3.transform", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "so3.exp", "torch.randn.norm", "torch.randn.norm"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "# tensor: [N, 3]", "\n", "        ", "amp", "=", "torch", ".", "rand", "(", "1", ")", "if", "self", ".", "randomly", "else", "1.0", "\n", "w", "=", "torch", ".", "randn", "(", "1", ",", "3", ")", "\n", "w", "=", "w", "/", "w", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "*", "amp", "*", "self", ".", "mag", "\n", "\n", "g", "=", "so3", ".", "exp", "(", "w", ")", ".", "to", "(", "tensor", ")", "# [1, 3, 3]", "\n", "self", ".", "igt", "=", "g", ".", "squeeze", "(", "0", ")", "# [3, 3]", "\n", "\n", "p1", "=", "so3", ".", "transform", "(", "g", ",", "tensor", ")", "# [1, 3, 3] x [N, 3] -> [N, 3]", "\n", "return", "p1", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomRotatorZ.__init__": [[115, 117], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "mag", "=", "2", "*", "math", ".", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomRotatorZ.__call__": [[118, 126], ["so3.exp().to", "so3.transform", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "so3.exp", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "# tensor: [N, 3]", "\n", "        ", "w", "=", "torch", ".", "Tensor", "(", "[", "0", ",", "0", ",", "1", "]", ")", ".", "view", "(", "1", ",", "3", ")", "*", "torch", ".", "rand", "(", "1", ")", "*", "self", ".", "mag", "\n", "\n", "g", "=", "so3", ".", "exp", "(", "w", ")", ".", "to", "(", "tensor", ")", "# [1, 3, 3]", "\n", "\n", "p1", "=", "so3", ".", "transform", "(", "g", ",", "tensor", ")", "\n", "return", "p1", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomJitter.__init__": [[129, 133], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "scale", "=", "0.01", ",", "clip", "=", "0.05", ")", ":", "\n", "        ", "self", ".", "scale", "=", "scale", "\n", "self", ".", "clip", "=", "clip", "\n", "self", ".", "e", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomJitter.jitter": [[134, 140], ["torch.zeros_like().to", "torch.zeros_like().to", "torch.zeros_like().to", "torch.zeros_like().to", "torch.zeros_like().to.normal_", "torch.zeros_like().to.normal_", "torch.zeros_like().to.clamp_", "torch.zeros_like().to.clamp_", "tensor.add", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["None"], ["", "def", "jitter", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "noise", "=", "torch", ".", "zeros_like", "(", "tensor", ")", ".", "to", "(", "tensor", ")", "# [N, 3]", "\n", "noise", ".", "normal_", "(", "0", ",", "self", ".", "scale", ")", "\n", "noise", ".", "clamp_", "(", "-", "self", ".", "clip", ",", "self", ".", "clip", ")", "\n", "self", ".", "e", "=", "noise", "\n", "return", "tensor", ".", "add", "(", "noise", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomJitter.__call__": [[141, 143], ["transforms.RandomJitter.jitter"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomJitter.jitter"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "return", "self", ".", "jitter", "(", "tensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.__init__": [[147, 153], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mag", "=", "1", ",", "mag_randomly", "=", "False", ")", ":", "\n", "        ", "self", ".", "mag", "=", "mag", "\n", "self", ".", "randomly", "=", "mag_randomly", "\n", "\n", "self", ".", "gt", "=", "None", "\n", "self", ".", "igt", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.generate_transform": [[154, 163], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.randn.norm", "torch.randn.norm"], "methods", ["None"], ["", "def", "generate_transform", "(", "self", ")", ":", "\n", "# return: a twist-vector", "\n", "        ", "amp", "=", "self", ".", "mag", "\n", "if", "self", ".", "randomly", ":", "\n", "            ", "amp", "=", "torch", ".", "rand", "(", "1", ",", "1", ")", "*", "self", ".", "mag", "\n", "", "x", "=", "torch", ".", "randn", "(", "1", ",", "6", ")", "\n", "x", "=", "x", "/", "x", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "*", "amp", "\n", "\n", "return", "x", "# [1, 6]", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.apply_transform": [[164, 174], ["se3.exp().to", "se3.exp().to", "se3.transform", "se3.exp().to.squeeze", "se3.exp().to.squeeze", "se3.exp", "se3.exp"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp"], ["", "def", "apply_transform", "(", "self", ",", "p0", ",", "x", ")", ":", "\n", "# p0: [N, 3]", "\n", "# x: [1, 6]", "\n", "        ", "g", "=", "se3", ".", "exp", "(", "x", ")", ".", "to", "(", "p0", ")", "# [1, 4, 4]", "\n", "gt", "=", "se3", ".", "exp", "(", "-", "x", ")", ".", "to", "(", "p0", ")", "# [1, 4, 4]", "\n", "\n", "p1", "=", "se3", ".", "transform", "(", "g", ",", "p0", ")", "\n", "self", ".", "gt", "=", "gt", ".", "squeeze", "(", "0", ")", "#  gt: p1 -> p0", "\n", "self", ".", "igt", "=", "g", ".", "squeeze", "(", "0", ")", "# igt: p0 -> p1", "\n", "return", "p1", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform": [[175, 178], ["transforms.RandomTransformSE3.generate_transform", "transforms.RandomTransformSE3.apply_transform"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.generate_transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.apply_transform"], ["", "def", "transform", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "x", "=", "self", ".", "generate_transform", "(", ")", "\n", "return", "self", ".", "apply_transform", "(", "tensor", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.__call__": [[179, 181], ["transforms.RandomTransformSE3.transform"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "return", "self", ".", "transform", "(", "tensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.__init__": [[11, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_vertices", "=", "[", "]", "# array-like (N, D)", "\n", "self", ".", "_faces", "=", "[", "]", "# array-like (M, K)", "\n", "self", ".", "_edges", "=", "[", "]", "# array-like (L, 2)", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.clone": [[16, 19], ["copy.deepcopy"], "methods", ["None"], ["", "def", "clone", "(", "self", ")", ":", "\n", "        ", "other", "=", "copy", ".", "deepcopy", "(", "self", ")", "\n", "return", "other", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.clear": [[20, 23], ["None"], "methods", ["None"], ["", "def", "clear", "(", "self", ")", ":", "\n", "        ", "for", "key", "in", "self", ".", "__dict__", ":", "\n", "            ", "self", ".", "__dict__", "[", "key", "]", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.add_attr": [[24, 26], ["None"], "methods", ["None"], ["", "", "def", "add_attr", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "__dict__", "[", "name", "]", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.vertex_array": [[27, 30], ["numpy.array"], "methods", ["None"], ["", "@", "property", "\n", "def", "vertex_array", "(", "self", ")", ":", "\n", "        ", "return", "numpy", ".", "array", "(", "self", ".", "_vertices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.vertex_list": [[31, 34], ["list", "map"], "methods", ["None"], ["", "@", "property", "\n", "def", "vertex_list", "(", "self", ")", ":", "\n", "        ", "return", "list", "(", "map", "(", "tuple", ",", "self", ".", "_vertices", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.faces2polygons": [[35, 40], ["list", "map", "list", "map"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "faces2polygons", "(", "faces", ",", "vertices", ")", ":", "\n", "        ", "p", "=", "list", "(", "map", "(", "lambda", "face", ":", "list", "(", "map", "(", "lambda", "vidx", ":", "vertices", "[", "vidx", "]", ",", "face", ")", ")", ",", "faces", ")", ")", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.polygon_list": [[41, 45], ["mesh.Mesh.faces2polygons"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.faces2polygons"], ["", "@", "property", "\n", "def", "polygon_list", "(", "self", ")", ":", "\n", "        ", "p", "=", "Mesh", ".", "faces2polygons", "(", "self", ".", "_faces", ",", "self", ".", "_vertices", ")", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.plot": [[46, 61], ["mpl_toolkits.mplot3d.Axes3D.set_xlabel", "mpl_toolkits.mplot3d.Axes3D.set_ylabel", "mpl_toolkits.mplot3d.Axes3D.set_zlabel", "matplotlib.pyplot.gcf", "mpl_toolkits.mplot3d.Axes3D", "mpl_toolkits.mplot3d.Axes3D.add_collection3d", "mpl_toolkits.mplot3d.Axes3D.scatter", "mpl_toolkits.mplot3d.art3d.Poly3DCollection"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "fig", "=", "None", ",", "ax", "=", "None", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "p", "=", "self", ".", "polygon_list", "\n", "v", "=", "self", ".", "vertex_array", "\n", "if", "fig", "is", "None", ":", "\n", "            ", "fig", "=", "matplotlib", ".", "pyplot", ".", "gcf", "(", ")", "\n", "", "if", "ax", "is", "None", ":", "\n", "            ", "ax", "=", "Axes3D", "(", "fig", ")", "\n", "", "if", "p", ":", "\n", "            ", "ax", ".", "add_collection3d", "(", "Poly3DCollection", "(", "p", ")", ")", "\n", "", "if", "v", ".", "shape", ":", "\n", "            ", "ax", ".", "scatter", "(", "v", "[", ":", ",", "0", "]", ",", "v", "[", ":", ",", "1", "]", ",", "v", "[", ":", ",", "2", "]", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "ax", ".", "set_xlabel", "(", "'X'", ")", "\n", "ax", ".", "set_ylabel", "(", "'Y'", ")", "\n", "ax", ".", "set_zlabel", "(", "'Z'", ")", "\n", "return", "fig", ",", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.on_unit_sphere": [[62, 73], ["numpy.linalg.norm", "numpy.max", "numpy.mean"], "methods", ["None"], ["", "def", "on_unit_sphere", "(", "self", ",", "zero_mean", "=", "False", ")", ":", "\n", "# radius == 1", "\n", "        ", "v", "=", "self", ".", "vertex_array", "# (N, D)", "\n", "if", "zero_mean", ":", "\n", "            ", "a", "=", "numpy", ".", "mean", "(", "v", "[", ":", ",", "0", ":", "3", "]", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "# (1, 3)", "\n", "v", "[", ":", ",", "0", ":", "3", "]", "=", "v", "[", ":", ",", "0", ":", "3", "]", "-", "a", "\n", "", "n", "=", "numpy", ".", "linalg", ".", "norm", "(", "v", "[", ":", ",", "0", ":", "3", "]", ",", "axis", "=", "1", ")", "# (N,)", "\n", "m", "=", "numpy", ".", "max", "(", "n", ")", "# scalar", "\n", "v", "[", ":", ",", "0", ":", "3", "]", "=", "v", "[", ":", ",", "0", ":", "3", "]", "/", "m", "\n", "self", ".", "_vertices", "=", "v", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.on_unit_cube": [[74, 84], ["numpy.max", "numpy.mean", "numpy.abs"], "methods", ["None"], ["", "def", "on_unit_cube", "(", "self", ",", "zero_mean", "=", "False", ")", ":", "\n", "# volume == 1", "\n", "        ", "v", "=", "self", ".", "vertex_array", "# (N, D)", "\n", "if", "zero_mean", ":", "\n", "            ", "a", "=", "numpy", ".", "mean", "(", "v", "[", ":", ",", "0", ":", "3", "]", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "# (1, 3)", "\n", "v", "[", ":", ",", "0", ":", "3", "]", "=", "v", "[", ":", ",", "0", ":", "3", "]", "-", "a", "\n", "", "m", "=", "numpy", ".", "max", "(", "numpy", ".", "abs", "(", "v", ")", ")", "# scalar", "\n", "v", "[", ":", ",", "0", ":", "3", "]", "=", "v", "[", ":", ",", "0", ":", "3", "]", "/", "(", "m", "*", "2", ")", "\n", "self", ".", "_vertices", "=", "v", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.rot_x": [[85, 93], ["numpy.copy", "list", "numpy.copy", "map"], "methods", ["None"], ["", "def", "rot_x", "(", "self", ")", ":", "\n", "# camera local (up: +Y, front: -Z) -> model local (up: +Z, front: +Y).", "\n", "        ", "v", "=", "self", ".", "vertex_array", "\n", "t", "=", "numpy", ".", "copy", "(", "v", "[", ":", ",", "1", "]", ")", "\n", "v", "[", ":", ",", "1", "]", "=", "-", "numpy", ".", "copy", "(", "v", "[", ":", ",", "2", "]", ")", "\n", "v", "[", ":", ",", "2", "]", "=", "t", "\n", "self", ".", "_vertices", "=", "list", "(", "map", "(", "tuple", ",", "v", ")", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.Mesh.rot_zc": [[94, 104], ["numpy.copy", "numpy.copy", "list", "map"], "methods", ["None"], ["", "def", "rot_zc", "(", "self", ")", ":", "\n", "# R = [0, -1;", "\n", "#      1,  0]", "\n", "        ", "v", "=", "self", ".", "vertex_array", "\n", "x", "=", "numpy", ".", "copy", "(", "v", "[", ":", ",", "0", "]", ")", "\n", "y", "=", "numpy", ".", "copy", "(", "v", "[", ":", ",", "1", "]", ")", "\n", "v", "[", ":", ",", "0", "]", "=", "-", "y", "\n", "v", "[", ":", ",", "1", "]", "=", "x", "\n", "self", ".", "_vertices", "=", "list", "(", "map", "(", "tuple", ",", "v", ")", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.offread": [[105, 112], ["open", "mesh._load_off", "mesh._fix_modelnet_broken_off"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh._load_off", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh._fix_modelnet_broken_off"], ["", "", "def", "offread", "(", "filepath", ",", "points_only", "=", "True", ")", ":", "\n", "    ", "\"\"\" read Geomview OFF file. \"\"\"", "\n", "with", "open", "(", "filepath", ",", "'r'", ")", "as", "fin", ":", "\n", "        ", "mesh", ",", "fixme", "=", "_load_off", "(", "fin", ",", "points_only", ")", "\n", "", "if", "fixme", ":", "\n", "        ", "_fix_modelnet_broken_off", "(", "filepath", ")", "\n", "", "return", "mesh", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh._load_off": [[113, 141], ["mesh.Mesh", "fin.readline().strip", "range", "range", "fin.readline().strip", "tuple", "tuple", "Mesh._vertices.append", "tuple", "Mesh._faces.append", "fin.readline", "tuple", "RuntimeError", "fin.readline", "int", "float", "fin.readline().strip.split", "int", "fin.readline().strip().split", "int", "fin.readline().strip.split", "fin.readline().strip().split", "fin.readline().strip", "fin.readline().strip", "fin.readline", "fin.readline"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.split", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.split", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.split", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.split"], ["", "def", "_load_off", "(", "fin", ",", "points_only", ")", ":", "\n", "    ", "\"\"\" read Geomview OFF file. \"\"\"", "\n", "mesh", "=", "Mesh", "(", ")", "\n", "\n", "fixme", "=", "False", "\n", "sig", "=", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "if", "sig", "==", "'OFF'", ":", "\n", "        ", "line", "=", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "num_verts", ",", "num_faces", ",", "num_edges", "=", "tuple", "(", "[", "int", "(", "s", ")", "for", "s", "in", "line", ".", "split", "(", "' '", ")", "]", ")", "\n", "", "elif", "sig", "[", "0", ":", "3", "]", "==", "'OFF'", ":", "# ...broken data in ModelNet (missing '\\n')...", "\n", "        ", "line", "=", "sig", "[", "3", ":", "]", "\n", "num_verts", ",", "num_faces", ",", "num_edges", "=", "tuple", "(", "[", "int", "(", "s", ")", "for", "s", "in", "line", ".", "split", "(", "' '", ")", "]", ")", "\n", "fixme", "=", "True", "\n", "", "else", ":", "\n", "        ", "raise", "RuntimeError", "(", "'unknown format'", ")", "\n", "\n", "", "for", "v", "in", "range", "(", "num_verts", ")", ":", "\n", "        ", "vp", "=", "tuple", "(", "float", "(", "s", ")", "for", "s", "in", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", ")", "\n", "mesh", ".", "_vertices", ".", "append", "(", "vp", ")", "\n", "\n", "", "if", "points_only", ":", "\n", "        ", "return", "mesh", ",", "fixme", "\n", "\n", "", "for", "f", "in", "range", "(", "num_faces", ")", ":", "\n", "        ", "fc", "=", "tuple", "(", "[", "int", "(", "s", ")", "for", "s", "in", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "]", "[", "1", ":", "]", ")", "\n", "mesh", ".", "_faces", ".", "append", "(", "fc", ")", "\n", "\n", "", "return", "mesh", ",", "fixme", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh._fix_modelnet_broken_off": [[142, 153], ["os.rename", "open", "open", "fin.readline().strip", "print", "print", "print", "fin.readline", "line.strip"], "function", ["None"], ["", "def", "_fix_modelnet_broken_off", "(", "filepath", ")", ":", "\n", "    ", "oldfile", "=", "'{}.orig'", ".", "format", "(", "filepath", ")", "\n", "os", ".", "rename", "(", "filepath", ",", "oldfile", ")", "\n", "with", "open", "(", "oldfile", ",", "'r'", ")", "as", "fin", ":", "\n", "        ", "with", "open", "(", "filepath", ",", "'w'", ")", "as", "fout", ":", "\n", "            ", "sig", "=", "fin", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "line", "=", "sig", "[", "3", ":", "]", "\n", "print", "(", "'OFF'", ",", "file", "=", "fout", ")", "\n", "print", "(", "line", ",", "file", "=", "fout", ")", "\n", "for", "line", "in", "fin", ":", "\n", "                ", "print", "(", "line", ".", "strip", "(", ")", ",", "file", "=", "fout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.mesh.objread": [[155, 206], ["open", "mesh.Mesh", "line.startswith", "line.split", "tuple", "_vertices.append", "map", "tuple", "_normals.append", "map", "_texcoords.append", "tuple", "map", "_faces.append", "tuple.split", "face_.append", "texcoords_.append", "texcoords_.append", "norms_.append", "norms_.append", "int", "len", "len", "len", "len", "int", "int"], "function", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.split", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.split"], ["", "", "", "", "def", "objread", "(", "filepath", ",", "points_only", "=", "True", ")", ":", "\n", "    ", "\"\"\"Loads a Wavefront OBJ file. \"\"\"", "\n", "_vertices", "=", "[", "]", "\n", "_normals", "=", "[", "]", "\n", "_texcoords", "=", "[", "]", "\n", "_faces", "=", "[", "]", "\n", "_mtl_name", "=", "None", "\n", "\n", "material", "=", "None", "\n", "for", "line", "in", "open", "(", "filepath", ",", "\"r\"", ")", ":", "\n", "        ", "if", "line", ".", "startswith", "(", "'#'", ")", ":", "continue", "\n", "values", "=", "line", ".", "split", "(", ")", "\n", "if", "not", "values", ":", "continue", "\n", "if", "values", "[", "0", "]", "==", "'v'", ":", "\n", "            ", "v", "=", "tuple", "(", "map", "(", "float", ",", "values", "[", "1", ":", "4", "]", ")", ")", "\n", "_vertices", ".", "append", "(", "v", ")", "\n", "", "elif", "values", "[", "0", "]", "==", "'vn'", ":", "\n", "            ", "v", "=", "tuple", "(", "map", "(", "float", ",", "values", "[", "1", ":", "4", "]", ")", ")", "\n", "_normals", ".", "append", "(", "v", ")", "\n", "", "elif", "values", "[", "0", "]", "==", "'vt'", ":", "\n", "            ", "_texcoords", ".", "append", "(", "tuple", "(", "map", "(", "float", ",", "values", "[", "1", ":", "3", "]", ")", ")", ")", "\n", "", "elif", "values", "[", "0", "]", "in", "(", "'usemtl'", ",", "'usemat'", ")", ":", "\n", "            ", "material", "=", "values", "[", "1", "]", "\n", "", "elif", "values", "[", "0", "]", "==", "'mtllib'", ":", "\n", "            ", "_mtl_name", "=", "values", "[", "1", "]", "\n", "", "elif", "values", "[", "0", "]", "==", "'f'", ":", "\n", "            ", "face_", "=", "[", "]", "\n", "texcoords_", "=", "[", "]", "\n", "norms_", "=", "[", "]", "\n", "for", "v", "in", "values", "[", "1", ":", "]", ":", "\n", "                ", "w", "=", "v", ".", "split", "(", "'/'", ")", "\n", "face_", ".", "append", "(", "int", "(", "w", "[", "0", "]", ")", "-", "1", ")", "\n", "if", "len", "(", "w", ")", ">=", "2", "and", "len", "(", "w", "[", "1", "]", ")", ">", "0", ":", "\n", "                    ", "texcoords_", ".", "append", "(", "int", "(", "w", "[", "1", "]", ")", "-", "1", ")", "\n", "", "else", ":", "\n", "                    ", "texcoords_", ".", "append", "(", "-", "1", ")", "\n", "", "if", "len", "(", "w", ")", ">=", "3", "and", "len", "(", "w", "[", "2", "]", ")", ">", "0", ":", "\n", "                    ", "norms_", ".", "append", "(", "int", "(", "w", "[", "2", "]", ")", "-", "1", ")", "\n", "", "else", ":", "\n", "                    ", "norms_", ".", "append", "(", "-", "1", ")", "\n", "#_faces.append((face_, norms_, texcoords_, material))", "\n", "", "", "_faces", ".", "append", "(", "face_", ")", "\n", "\n", "", "", "mesh", "=", "Mesh", "(", ")", "\n", "mesh", ".", "_vertices", "=", "_vertices", "\n", "if", "points_only", ":", "\n", "        ", "return", "mesh", "\n", "\n", "", "mesh", ".", "_faces", "=", "_faces", "\n", "\n", "return", "mesh", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.__init__": [[52, 75], ["super().__init__", "isinstance", "globset.glob_dataset", "globset.find_classes", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.glob_dataset", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.find_classes"], ["def", "__init__", "(", "self", ",", "rootdir", ",", "pattern", ",", "fileloader", ",", "transform", "=", "None", ",", "classinfo", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "isinstance", "(", "pattern", ",", "six", ".", "string_types", ")", ":", "\n", "            ", "pattern", "=", "[", "pattern", "]", "\n", "\n", "", "if", "classinfo", "is", "not", "None", ":", "\n", "            ", "classes", ",", "class_to_idx", "=", "classinfo", "\n", "", "else", ":", "\n", "            ", "classes", ",", "class_to_idx", "=", "find_classes", "(", "rootdir", ")", "\n", "\n", "", "samples", "=", "glob_dataset", "(", "rootdir", ",", "class_to_idx", ",", "pattern", ")", "\n", "if", "not", "samples", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Empty: rootdir={}, pattern(s)={}\"", ".", "format", "(", "rootdir", ",", "pattern", ")", ")", "\n", "\n", "", "self", ".", "rootdir", "=", "rootdir", "\n", "self", ".", "pattern", "=", "pattern", "\n", "self", ".", "fileloader", "=", "fileloader", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "classes", "=", "classes", "\n", "self", ".", "class_to_idx", "=", "class_to_idx", "\n", "self", ".", "samples", "=", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.__repr__": [[76, 86], ["globset.Globset.__len__", "globset.Globset.transform.__repr__().replace", "globset.Globset.transform.__repr__", "len"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__len__", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "fmt_str", "=", "'Dataset {}\\n'", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "fmt_str", "+=", "'    Number of datapoints: {}\\n'", ".", "format", "(", "self", ".", "__len__", "(", ")", ")", "\n", "fmt_str", "+=", "'    Root Location: {}\\n'", ".", "format", "(", "self", ".", "rootdir", ")", "\n", "fmt_str", "+=", "'    File Patterns: {}\\n'", ".", "format", "(", "self", ".", "pattern", ")", "\n", "fmt_str", "+=", "'    File Loader: {}\\n'", ".", "format", "(", "self", ".", "fileloader", ")", "\n", "tmp", "=", "'    Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}\\n'", ".", "format", "(", "tmp", ",", "\n", "self", ".", "transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "return", "fmt_str", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.__len__": [[87, 89], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.__getitem__": [[90, 97], ["globset.Globset.fileloader", "globset.Globset.transform"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "samples", "[", "index", "]", "\n", "sample", "=", "self", ".", "fileloader", "(", "path", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "\n", "", "return", "sample", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.num_classes": [[98, 100], ["len"], "methods", ["None"], ["", "def", "num_classes", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.class_name": [[101, 103], ["None"], "methods", ["None"], ["", "def", "class_name", "(", "self", ",", "cidx", ")", ":", "\n", "        ", "return", "self", ".", "classes", "[", "cidx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.indices_in_class": [[104, 107], ["numpy.array", "numpy.where().tolist", "list", "map", "numpy.where"], "methods", ["None"], ["", "def", "indices_in_class", "(", "self", ",", "cidx", ")", ":", "\n", "        ", "targets", "=", "np", ".", "array", "(", "list", "(", "map", "(", "lambda", "s", ":", "s", "[", "1", "]", ",", "self", ".", "samples", ")", ")", ")", "\n", "return", "np", ".", "where", "(", "targets", "==", "cidx", ")", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.select_classes": [[108, 114], ["globset.Globset.indices_in_class", "indices.extend"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.indices_in_class"], ["", "def", "select_classes", "(", "self", ",", "cidxs", ")", ":", "\n", "        ", "indices", "=", "[", "]", "\n", "for", "i", "in", "cidxs", ":", "\n", "            ", "idxs", "=", "self", ".", "indices_in_class", "(", "i", ")", "\n", "indices", ".", "extend", "(", "idxs", ")", "\n", "", "return", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.Globset.split": [[115, 144], ["len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "range", "copy.deepcopy", "copy.deepcopy", "list", "list", "len", "len", "map", "map", "numpy.where", "numpy.where"], "methods", ["None"], ["", "def", "split", "(", "self", ",", "rate", ")", ":", "\n", "        ", "\"\"\" dateset -> dataset1, dataset2. s.t.\n            len(dataset1) = rate * len(dataset),\n            len(dataset2) = (1-rate) * len(dataset)\n        \"\"\"", "\n", "orig_size", "=", "len", "(", "self", ")", "\n", "select", "=", "np", ".", "zeros", "(", "orig_size", ",", "dtype", "=", "int", ")", "\n", "csize", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "classes", ")", ",", "dtype", "=", "int", ")", "\n", "dsize", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "classes", ")", ",", "dtype", "=", "int", ")", "\n", "\n", "for", "i", "in", "range", "(", "orig_size", ")", ":", "\n", "            ", "_", ",", "target", "=", "self", ".", "samples", "[", "i", "]", "\n", "csize", "[", "target", "]", "+=", "1", "\n", "", "dsize", "=", "(", "csize", "*", "rate", ")", ".", "astype", "(", "int", ")", "\n", "for", "i", "in", "range", "(", "orig_size", ")", ":", "\n", "            ", "_", ",", "target", "=", "self", ".", "samples", "[", "i", "]", "\n", "if", "dsize", "[", "target", "]", ">", "0", ":", "\n", "                ", "select", "[", "i", "]", "=", "1", "\n", "dsize", "[", "target", "]", "-=", "1", "\n", "\n", "", "", "dataset1", "=", "copy", ".", "deepcopy", "(", "self", ")", "\n", "dataset2", "=", "copy", ".", "deepcopy", "(", "self", ")", "\n", "\n", "samples1", "=", "list", "(", "map", "(", "lambda", "i", ":", "dataset1", ".", "samples", "[", "i", "]", ",", "np", ".", "where", "(", "select", "==", "1", ")", "[", "0", "]", ")", ")", "\n", "samples2", "=", "list", "(", "map", "(", "lambda", "i", ":", "dataset2", ".", "samples", "[", "i", "]", ",", "np", ".", "where", "(", "select", "==", "0", ")", "[", "0", "]", ")", ")", "\n", "\n", "dataset1", ".", "samples", "=", "samples1", "\n", "dataset2", ".", "samples", "=", "samples2", "\n", "return", "dataset1", ",", "dataset2", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.find_classes": [[11, 17], ["classes.sort", "os.listdir", "os.path.isdir", "range", "os.path.join", "len"], "function", ["None"], ["def", "find_classes", "(", "root", ")", ":", "\n", "    ", "\"\"\" find ${root}/${class}/* \"\"\"", "\n", "classes", "=", "[", "d", "for", "d", "in", "os", ".", "listdir", "(", "root", ")", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "root", ",", "d", ")", ")", "]", "\n", "classes", ".", "sort", "(", ")", "\n", "class_to_idx", "=", "{", "classes", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "classes", ")", ")", "}", "\n", "return", "classes", ",", "class_to_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.classes_to_cinfo": [[18, 21], ["range", "len"], "function", ["None"], ["", "def", "classes_to_cinfo", "(", "classes", ")", ":", "\n", "    ", "class_to_idx", "=", "{", "classes", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "classes", ")", ")", "}", "\n", "return", "classes", ",", "class_to_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.globset.glob_dataset": [[22, 47], ["os.path.expanduser", "sorted", "os.listdir", "os.path.join", "class_to_idx.get", "enumerate", "os.path.isdir", "os.path.join", "glob.glob", "sorted", "samples.append"], "function", ["None"], ["", "def", "glob_dataset", "(", "root", ",", "class_to_idx", ",", "ptns", ")", ":", "\n", "    ", "\"\"\" glob ${root}/${class}/${ptns[i]} \"\"\"", "\n", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "samples", "=", "[", "]", "\n", "#class_size = [0 for i in range(len(class_to_idx))]", "\n", "for", "target", "in", "sorted", "(", "os", ".", "listdir", "(", "root", ")", ")", ":", "\n", "        ", "d", "=", "os", ".", "path", ".", "join", "(", "root", ",", "target", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "d", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "target_idx", "=", "class_to_idx", ".", "get", "(", "target", ")", "\n", "if", "target_idx", "is", "None", ":", "\n", "            ", "continue", "\n", "\n", "#count = 0", "\n", "", "for", "i", ",", "ptn", "in", "enumerate", "(", "ptns", ")", ":", "\n", "            ", "gptn", "=", "os", ".", "path", ".", "join", "(", "d", ",", "ptn", ")", "\n", "names", "=", "glob", ".", "glob", "(", "gptn", ")", "\n", "for", "path", "in", "sorted", "(", "names", ")", ":", "\n", "                ", "item", "=", "(", "path", ",", "target_idx", ")", "\n", "samples", ".", "append", "(", "item", ")", "\n", "#count += 1", "\n", "#class_size[target_idx] = count", "\n", "\n", "", "", "", "return", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.ModelNet.__init__": [[15, 24], ["globset.Globset.__init__"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__"], ["def", "__init__", "(", "self", ",", "dataset_path", ",", "train", "=", "1", ",", "transform", "=", "None", ",", "classinfo", "=", "None", ")", ":", "\n", "        ", "loader", "=", "mesh", ".", "offread", "\n", "if", "train", ">", "0", ":", "\n", "            ", "pattern", "=", "'train/*.off'", "\n", "", "elif", "train", "==", "0", ":", "\n", "            ", "pattern", "=", "'test/*.off'", "\n", "", "else", ":", "\n", "            ", "pattern", "=", "[", "'train/*.off'", ",", "'test/*.off'", "]", "\n", "", "super", "(", ")", ".", "__init__", "(", "dataset_path", ",", "pattern", ",", "loader", ",", "transform", ",", "classinfo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.ShapeNet2.__init__": [[27, 31], ["globset.Globset.__init__"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__"], ["def", "__init__", "(", "self", ",", "dataset_path", ",", "transform", "=", "None", ",", "classinfo", "=", "None", ")", ":", "\n", "        ", "loader", "=", "mesh", ".", "objread", "\n", "pattern", "=", "'*/models/model_normalized.obj'", "\n", "super", "(", ")", ".", "__init__", "(", "dataset_path", ",", "pattern", ",", "loader", ",", "transform", ",", "classinfo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking.__init__": [[34, 39], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "rigid_transform", ",", "source_modifier", "=", "None", ",", "template_modifier", "=", "None", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "rigid_transform", "=", "rigid_transform", "\n", "self", ".", "source_modifier", "=", "source_modifier", "\n", "self", ".", "template_modifier", "=", "template_modifier", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking.__len__": [[40, 42], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking.__getitem__": [[43, 59], ["datasets.CADset4tracking.source_modifier", "datasets.CADset4tracking.rigid_transform", "datasets.CADset4tracking.rigid_transform", "datasets.CADset4tracking.template_modifier"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "pm", ",", "_", "=", "self", ".", "dataset", "[", "index", "]", "\n", "if", "self", ".", "source_modifier", "is", "not", "None", ":", "\n", "            ", "p_", "=", "self", ".", "source_modifier", "(", "pm", ")", "\n", "p1", "=", "self", ".", "rigid_transform", "(", "p_", ")", "\n", "", "else", ":", "\n", "            ", "p1", "=", "self", ".", "rigid_transform", "(", "pm", ")", "\n", "", "igt", "=", "self", ".", "rigid_transform", ".", "igt", "\n", "\n", "if", "self", ".", "template_modifier", "is", "not", "None", ":", "\n", "            ", "p0", "=", "self", ".", "template_modifier", "(", "pm", ")", "\n", "", "else", ":", "\n", "            ", "p0", "=", "pm", "\n", "\n", "# p0: template, p1: source, igt: transform matrix from p0 to p1", "\n", "", "return", "p0", ",", "p1", ",", "igt", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.generate_perturbations": [[62, 71], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn.numpy", "torch.randn.numpy", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.randn.norm", "torch.randn.norm"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "generate_perturbations", "(", "batch_size", ",", "mag", ",", "randomly", "=", "False", ")", ":", "\n", "        ", "if", "randomly", ":", "\n", "            ", "amp", "=", "torch", ".", "rand", "(", "batch_size", ",", "1", ")", "*", "mag", "\n", "", "else", ":", "\n", "            ", "amp", "=", "mag", "\n", "", "x", "=", "torch", ".", "randn", "(", "batch_size", ",", "6", ")", "\n", "x", "=", "x", "/", "x", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "*", "amp", "\n", "return", "x", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.generate_rotations": [[72, 83], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.numpy", "torch.cat.numpy", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.randn.norm", "torch.randn.norm"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "generate_rotations", "(", "batch_size", ",", "mag", ",", "randomly", "=", "False", ")", ":", "\n", "        ", "if", "randomly", ":", "\n", "            ", "amp", "=", "torch", ".", "rand", "(", "batch_size", ",", "1", ")", "*", "mag", "\n", "", "else", ":", "\n", "            ", "amp", "=", "mag", "\n", "", "w", "=", "torch", ".", "randn", "(", "batch_size", ",", "3", ")", "\n", "w", "=", "w", "/", "w", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "*", "amp", "\n", "v", "=", "torch", ".", "zeros", "(", "batch_size", ",", "3", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "w", ",", "v", ")", ",", "dim", "=", "1", ")", "\n", "return", "x", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__init__": [[84, 91], ["numpy.array"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "dataset", ",", "perturbation", ",", "source_modifier", "=", "None", ",", "template_modifier", "=", "None", ",", "\n", "fmt_trans", "=", "False", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "perturbation", "=", "numpy", ".", "array", "(", "perturbation", ")", "# twist (len(dataset), 6)", "\n", "self", ".", "source_modifier", "=", "source_modifier", "\n", "self", ".", "template_modifier", "=", "template_modifier", "\n", "self", ".", "fmt_trans", "=", "fmt_trans", "# twist or (rotation and translation)", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.do_transform": [[92, 112], ["se3.exp().to", "se3.transform", "torch.zeros.squeeze", "torch.zeros.squeeze", "so3.exp().to", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "se3.transform", "torch.zeros.squeeze", "torch.zeros.squeeze", "se3.exp", "so3.exp"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.transforms.RandomTransformSE3.transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.ptlk.se3.exp"], ["", "def", "do_transform", "(", "self", ",", "p0", ",", "x", ")", ":", "\n", "# p0: [N, 3]", "\n", "# x: [1, 6]", "\n", "        ", "if", "not", "self", ".", "fmt_trans", ":", "\n", "# x: twist-vector", "\n", "            ", "g", "=", "se3", ".", "exp", "(", "x", ")", ".", "to", "(", "p0", ")", "# [1, 4, 4]", "\n", "p1", "=", "se3", ".", "transform", "(", "g", ",", "p0", ")", "\n", "igt", "=", "g", ".", "squeeze", "(", "0", ")", "# igt: p0 -> p1", "\n", "", "else", ":", "\n", "# x: rotation and translation", "\n", "            ", "w", "=", "x", "[", ":", ",", "0", ":", "3", "]", "\n", "q", "=", "x", "[", ":", ",", "3", ":", "6", "]", "\n", "R", "=", "so3", ".", "exp", "(", "w", ")", ".", "to", "(", "p0", ")", "# [1, 3, 3]", "\n", "g", "=", "torch", ".", "zeros", "(", "1", ",", "4", ",", "4", ")", "\n", "g", "[", ":", ",", "3", ",", "3", "]", "=", "1", "\n", "g", "[", ":", ",", "0", ":", "3", ",", "0", ":", "3", "]", "=", "R", "# rotation", "\n", "g", "[", ":", ",", "0", ":", "3", ",", "3", "]", "=", "q", "# translation", "\n", "p1", "=", "se3", ".", "transform", "(", "g", ",", "p0", ")", "\n", "igt", "=", "g", ".", "squeeze", "(", "0", ")", "# igt: p0 -> p1", "\n", "", "return", "p1", ",", "igt", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__len__": [[113, 115], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.__getitem__": [[116, 133], ["torch.from_numpy().contiguous().view", "torch.from_numpy().contiguous().view", "torch.from_numpy().contiguous().view", "torch.from_numpy().contiguous().view", "torch.from_numpy().contiguous().view.to", "torch.from_numpy().contiguous().view.to", "datasets.CADset4tracking_fixed_perturbation.source_modifier", "datasets.CADset4tracking_fixed_perturbation.do_transform", "datasets.CADset4tracking_fixed_perturbation.do_transform", "datasets.CADset4tracking_fixed_perturbation.template_modifier", "torch.from_numpy().contiguous", "torch.from_numpy().contiguous", "torch.from_numpy().contiguous", "torch.from_numpy().contiguous", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.do_transform", "home.repos.pwc.inspect_result.hmgoforth_PointNetLK.data.datasets.CADset4tracking_fixed_perturbation.do_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "twist", "=", "torch", ".", "from_numpy", "(", "numpy", ".", "array", "(", "self", ".", "perturbation", "[", "index", "]", ")", ")", ".", "contiguous", "(", ")", ".", "view", "(", "1", ",", "6", ")", "\n", "pm", ",", "_", "=", "self", ".", "dataset", "[", "index", "]", "\n", "x", "=", "twist", ".", "to", "(", "pm", ")", "\n", "if", "self", ".", "source_modifier", "is", "not", "None", ":", "\n", "            ", "p_", "=", "self", ".", "source_modifier", "(", "pm", ")", "\n", "p1", ",", "igt", "=", "self", ".", "do_transform", "(", "p_", ",", "x", ")", "\n", "", "else", ":", "\n", "            ", "p1", ",", "igt", "=", "self", ".", "do_transform", "(", "pm", ",", "x", ")", "\n", "\n", "", "if", "self", ".", "template_modifier", "is", "not", "None", ":", "\n", "            ", "p0", "=", "self", ".", "template_modifier", "(", "pm", ")", "\n", "", "else", ":", "\n", "            ", "p0", "=", "pm", "\n", "\n", "# p0: template, p1: source, igt: transform matrix from p0 to p1", "\n", "", "return", "p0", ",", "p1", ",", "igt", "\n", "\n"]]}