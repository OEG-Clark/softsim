{"home.repos.pwc.inspect_result.Nordeus_heroic-rl.heroic_rl.console.run": [[1, 12], ["main"], "function", ["None"], ["def", "run", "(", ")", ":", "\n", "    ", "\"\"\"\n    This is entrypoint for CLI script provided by poetry.\n    \"\"\"", "\n", "import", "os", "\n", "from", ".", "cli", "import", "main", "\n", "\n", "if", "\"TF_CPP_MIN_LOG_LEVEL\"", "not", "in", "os", ".", "environ", ":", "\n", "        ", "os", ".", "environ", "[", "\"TF_CPP_MIN_LOG_LEVEL\"", "]", "=", "\"2\"", "\n", "\n", "", "main", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer.__init__": [[21, 64], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "utils.combined_shape", "utils.combined_shape", "utils.combined_shape", "utils.combined_shape", "utils.combined_shape", "utils.combined_shape", "utils.combined_shape"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.combined_shape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.combined_shape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.combined_shape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.combined_shape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.combined_shape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.combined_shape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.combined_shape"], ["def", "__init__", "(", "self", ",", "obs_space", ",", "act_space", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "size", "=", "cfg", ".", "local_steps_per_epoch", "\n", "self", ".", "obs_buf", "=", "{", "\n", "\"non_spatial\"", ":", "np", ".", "zeros", "(", "\n", "utils", ".", "combined_shape", "(", "size", ",", "obs_space", "[", "\"non_spatial\"", "]", ".", "shape", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", ",", "\n", "\"spatial\"", ":", "np", ".", "zeros", "(", "\n", "utils", ".", "combined_shape", "(", "size", ",", "obs_space", "[", "\"spatial\"", "]", ".", "shape", ")", ",", "dtype", "=", "np", ".", "float32", "\n", ")", ",", "\n", "\"mask_spell\"", ":", "np", ".", "zeros", "(", "\n", "utils", ".", "combined_shape", "(", "size", ",", "obs_space", "[", "\"mask_spell\"", "]", ".", "shape", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", ",", "\n", "\"mask_spatial\"", ":", "np", ".", "zeros", "(", "\n", "utils", ".", "combined_shape", "(", "size", ",", "obs_space", "[", "\"mask_spatial\"", "]", ".", "shape", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", ",", "\n", "\"if_spawn_spell\"", ":", "np", ".", "zeros", "(", "\n", "utils", ".", "combined_shape", "(", "size", ",", "obs_space", "[", "\"if_spawn_spell\"", "]", ".", "shape", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", ",", "\n", "}", "\n", "self", ".", "act_buf", "=", "{", "\n", "\"spell\"", ":", "np", ".", "zeros", "(", "\n", "utils", ".", "combined_shape", "(", "size", ",", "act_space", "[", "\"spell\"", "]", ".", "shape", ")", ",", "dtype", "=", "np", ".", "float32", "\n", ")", ",", "\n", "\"spatial\"", ":", "np", ".", "zeros", "(", "\n", "utils", ".", "combined_shape", "(", "size", ",", "act_space", "[", "\"spatial\"", "]", ".", "shape", ")", ",", "dtype", "=", "np", ".", "float32", "\n", ")", ",", "\n", "}", "\n", "self", ".", "adv_buf", "=", "np", ".", "zeros", "(", "size", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "rew_buf", "=", "np", ".", "zeros", "(", "size", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "ret_buf", "=", "np", ".", "zeros", "(", "size", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "val_buf", "=", "np", ".", "zeros", "(", "size", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "logp_buf", "=", "np", ".", "zeros", "(", "size", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "gamma", ",", "self", ".", "lam", "=", "cfg", ".", "hyperparameters", ".", "gamma", ",", "cfg", ".", "hyperparameters", ".", "lam", "\n", "self", ".", "ptr", ",", "self", ".", "path_start_idx", ",", "self", ".", "max_size", "=", "0", ",", "0", ",", "size", "\n", "self", ".", "episode_starts", "=", "np", ".", "zeros", "(", "size", ")", "\n", "self", ".", "episode_starts", "[", "0", "]", "=", "1.0", "\n", "self", ".", "batch_slices", "=", "[", "]", "\n", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer.store": [[65, 81], ["None"], "methods", ["None"], ["", "def", "store", "(", "self", ",", "obs", ",", "act", ",", "rew", ",", "val", ",", "logp", ")", ":", "\n", "        ", "\"\"\"\n        Append one timestep of agent-environment interaction to the buffer.\n        \"\"\"", "\n", "assert", "self", ".", "ptr", "<", "self", ".", "max_size", "# buffer has to have room so you can store", "\n", "self", ".", "obs_buf", "[", "\"non_spatial\"", "]", "[", "self", ".", "ptr", "]", "=", "obs", "[", "\"non_spatial\"", "]", "\n", "self", ".", "obs_buf", "[", "\"spatial\"", "]", "[", "self", ".", "ptr", "]", "=", "obs", "[", "\"spatial\"", "]", "\n", "self", ".", "obs_buf", "[", "\"mask_spell\"", "]", "[", "self", ".", "ptr", "]", "=", "obs", "[", "\"mask_spell\"", "]", "\n", "self", ".", "obs_buf", "[", "\"mask_spatial\"", "]", "[", "self", ".", "ptr", "]", "=", "obs", "[", "\"mask_spatial\"", "]", "\n", "self", ".", "obs_buf", "[", "\"if_spawn_spell\"", "]", "[", "self", ".", "ptr", "]", "=", "obs", "[", "\"if_spawn_spell\"", "]", "\n", "self", ".", "act_buf", "[", "\"spell\"", "]", "[", "self", ".", "ptr", "]", "=", "act", "[", "\"spell\"", "]", "\n", "self", ".", "act_buf", "[", "\"spatial\"", "]", "[", "self", ".", "ptr", "]", "=", "act", "[", "\"spatial\"", "]", "\n", "self", ".", "rew_buf", "[", "self", ".", "ptr", "]", "=", "rew", "\n", "self", ".", "val_buf", "[", "self", ".", "ptr", "]", "=", "val", "\n", "self", ".", "logp_buf", "[", "self", ".", "ptr", "]", "=", "logp", "\n", "self", ".", "ptr", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer.finish_path": [[82, 117], ["slice", "numpy.append", "numpy.append", "utils.discount_cumsum"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.discount_cumsum"], ["", "def", "finish_path", "(", "self", ",", "last_val", "=", "0", ")", ":", "\n", "        ", "\"\"\"\n        Call this at the end of a trajectory, or when one gets cut off\n        by an epoch ending. This looks back in the buffer to where the\n        trajectory started, and uses rewards and value estimates from\n        the whole trajectory to compute advantage estimates with GAE-Lambda,\n        as well as compute the rewards-to-go for each state, to use as\n        the targets for the value function.\n\n        The \"last_val\" argument should be 0 if the trajectory ended\n        because the agent reached a terminal state (died), and otherwise\n        should be V(s_T), the value function estimated for the last state.\n        This allows us to bootstrap the reward-to-go calculation to account\n        for timesteps beyond the arbitrary episode horizon (or epoch cutoff).\n        \"\"\"", "\n", "\n", "path_slice", "=", "slice", "(", "self", ".", "path_start_idx", ",", "self", ".", "ptr", ")", "\n", "rews", "=", "np", ".", "append", "(", "self", ".", "rew_buf", "[", "path_slice", "]", ",", "last_val", ")", "\n", "vals", "=", "np", ".", "append", "(", "self", ".", "val_buf", "[", "path_slice", "]", ",", "last_val", ")", "\n", "\n", "# the next two lines implement GAE-Lambda advantage calculation", "\n", "deltas", "=", "rews", "[", ":", "-", "1", "]", "+", "self", ".", "gamma", "*", "vals", "[", "1", ":", "]", "-", "vals", "[", ":", "-", "1", "]", "\n", "self", ".", "adv_buf", "[", "path_slice", "]", "=", "utils", ".", "discount_cumsum", "(", "deltas", ",", "self", ".", "gamma", "*", "self", ".", "lam", ")", "\n", "\n", "# todo: michalw see how one can use gae for value function (stable baselines)", "\n", "# the next line computes rewards-to-go, to be targets for the value function", "\n", "# self.ret_buf[path_slice] = utils.discount_cumsum(rews, self.gamma)[:-1]", "\n", "# gae lambda return", "\n", "self", ".", "ret_buf", "[", "path_slice", "]", "=", "self", ".", "adv_buf", "[", "path_slice", "]", "+", "vals", "[", ":", "-", "1", "]", "\n", "\n", "self", ".", "path_start_idx", "=", "self", ".", "ptr", "\n", "\n", "# if a new episode started mark the start", "\n", "if", "self", ".", "path_start_idx", "<", "self", ".", "size", ":", "\n", "            ", "self", ".", "episode_starts", "[", "self", ".", "path_start_idx", "]", "=", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer._get_slice": [[118, 151], ["len"], "methods", ["None"], ["", "", "def", "_get_slice", "(", "self", ",", "buffer_slice", ")", ":", "\n", "        ", "\"\"\"\n        Call to get all of the data from the buffer, corresponding to the given slice,\n        with advantages appropriately normalized (shifted to have mean zero and std\n        one).\n\n        :param buffer_slice : indices corresponding to buffer elements to be selected\n        \"\"\"", "\n", "assert", "self", ".", "ptr", "==", "self", ".", "max_size", "# buffer has to be full before you can get", "\n", "\n", "# creating initial state for training", "\n", "# TODO dimitrijer: I am pretty sure we don't need to create a new array", "\n", "# every time; I might be wrong", "\n", "state_in", "=", "self", ".", "cfg", ".", "architecture", ".", "empty_rnn_state", "\n", "\n", "# batch size depend on the slice", "\n", "batch_size", "=", "len", "(", "self", ".", "episode_starts", "[", "buffer_slice", "]", ")", "\n", "\n", "return", "[", "\n", "self", ".", "obs_buf", "[", "\"non_spatial\"", "]", "[", "buffer_slice", "]", ",", "\n", "self", ".", "obs_buf", "[", "\"spatial\"", "]", "[", "buffer_slice", "]", ",", "\n", "self", ".", "obs_buf", "[", "\"mask_spell\"", "]", "[", "buffer_slice", "]", ",", "\n", "self", ".", "obs_buf", "[", "\"mask_spatial\"", "]", "[", "buffer_slice", "]", ",", "\n", "self", ".", "obs_buf", "[", "\"if_spawn_spell\"", "]", "[", "buffer_slice", "]", ",", "\n", "state_in", ",", "\n", "self", ".", "episode_starts", "[", "buffer_slice", "]", ",", "\n", "batch_size", ",", "\n", "self", ".", "act_buf", "[", "\"spell\"", "]", "[", "buffer_slice", "]", ",", "\n", "self", ".", "act_buf", "[", "\"spatial\"", "]", "[", "buffer_slice", "]", ",", "\n", "self", ".", "adv_buf", "[", "buffer_slice", "]", ",", "\n", "self", ".", "ret_buf", "[", "buffer_slice", "]", ",", "\n", "self", ".", "logp_buf", "[", "buffer_slice", "]", ",", "\n", "self", ".", "val_buf", "[", "buffer_slice", "]", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer.get_batch": [[153, 159], ["ppo_heroic.PPOBuffer._get_slice"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer._get_slice"], ["", "def", "get_batch", "(", "self", ",", "batch_index", ")", ":", "\n", "        ", "\"\"\"\n        Get batch corresponding to batch_index. Should be run after create_batch_data.\n        \"\"\"", "\n", "buffer_slice", "=", "self", ".", "batch_slices", "[", "batch_index", "]", "\n", "return", "self", ".", "_get_slice", "(", "buffer_slice", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer.create_batch_data": [[160, 188], ["utils.mpi_tools.mpi_statistics_scalar", "range", "len", "len", "ppo_heroic.PPOBuffer.batch_slices.append", "ppo_heroic.PPOBuffer.batch_slices.append", "slice", "heroic_rl.utils.mpi_tools.proc_id", "print", "slice"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_statistics_scalar", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id"], ["", "def", "create_batch_data", "(", "self", ")", ":", "\n", "# the next two lines implement the advantage normalization trick, note that", "\n", "# we're not slicing here", "\n", "        ", "adv_mean", ",", "adv_std", "=", "mpi_statistics_scalar", "(", "self", ".", "adv_buf", ")", "\n", "self", ".", "adv_buf", "=", "(", "self", ".", "adv_buf", "-", "adv_mean", ")", "/", "adv_std", "\n", "\n", "batch_start", "=", "0", "\n", "batch_end", "=", "None", "\n", "for", "step", "in", "range", "(", "len", "(", "self", ".", "episode_starts", ")", ")", ":", "\n", "            ", "if", "step", "-", "batch_start", ">", "self", ".", "cfg", ".", "batch_size", ":", "\n", "                ", "self", ".", "batch_slices", ".", "append", "(", "slice", "(", "batch_start", ",", "batch_end", ")", ")", "\n", "batch_start", "=", "batch_end", "\n", "", "if", "self", ".", "cfg", ".", "architecture", ".", "rnn", "and", "self", ".", "episode_starts", "[", "step", "]", ":", "\n", "                ", "batch_end", "=", "step", "\n", "", "elif", "not", "self", ".", "cfg", ".", "architecture", ".", "rnn", ":", "\n", "                ", "batch_end", "=", "step", "\n", "\n", "# do not allow too small batches", "\n", "", "", "if", "self", ".", "size", "-", "batch_start", ">", "self", ".", "cfg", ".", "batch_size", "/", "4", ":", "\n", "            ", "self", ".", "batch_slices", ".", "append", "(", "slice", "(", "batch_start", ",", "self", ".", "size", ")", ")", "\n", "", "elif", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "print", "(", "\n", "\"size - batch_start=\"", ",", "self", ".", "size", "-", "batch_start", ",", "\" so batch too small!\"", "\n", ")", "\n", "\n", "", "num_batches", "=", "len", "(", "self", ".", "batch_slices", ")", "\n", "\n", "return", "num_batches", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer.reset": [[189, 194], ["numpy.zeros"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "assert", "self", ".", "ptr", "==", "self", ".", "max_size", "# buffer has to be full before you can reset", "\n", "self", ".", "ptr", ",", "self", ".", "path_start_idx", "=", "0", ",", "0", "\n", "self", ".", "episode_starts", "=", "np", ".", "zeros", "(", "self", ".", "size", ",", "dtype", "=", "np", ".", "int", ")", "\n", "self", ".", "batch_slices", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.restore_pyfuncs": [[196, 219], ["tensorflow.python.ops.script_ops._py_funcs.size", "iter", "iter", "utils.mpi_tf.MpiAdamOptimizer", "utils.mpi_tf.MpiAdamOptimizer", "utils.mpi_tf.define_sync_params", "tensorflow.global_variables", "list", "list", "zip", "zip"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.define_sync_params"], ["", "", "def", "restore_pyfuncs", "(", "agent_id", ",", "pi_grads_and_vars", ",", "v_grads_and_vars", ")", ":", "\n", "    ", "expected_registry_size", "=", "agent_id", "*", "5", "\n", "if", "FuncRegistry", ".", "size", "(", ")", "<", "expected_registry_size", ":", "\n", "        ", "pi_iter", "=", "iter", "(", "pi_grads_and_vars", ")", "\n", "v_iter", "=", "iter", "(", "v_grads_and_vars", ")", "\n", "\n", "# - pi_optimizer.minimize(pi_loss)", "\n", "#   - collecting gradients (tf.py_func(_collect_grads, [flat_grad],", "\n", "#   tf.float32) => pyfunc_0", "\n", "#   - syncing params (tf.py_func(_broadcast, [get_params], tf.float32))", "\n", "#   => pyfunc_1", "\n", "MpiAdamOptimizer", "(", "grads_and_vars", "=", "list", "(", "zip", "(", "pi_iter", ",", "pi_iter", ")", ")", ")", "\n", "\n", "# - v_optimizer.minimize(v_loss)", "\n", "#   - collecting gradients (tf.py_func(_collect_grads, [flat_grad],", "\n", "#   tf.float32) => pyfunc_2", "\n", "#   - syncing params (tf.py_func(_broadcast, [get_params], tf.float32))", "\n", "#   => pyfunc_3", "\n", "MpiAdamOptimizer", "(", "grads_and_vars", "=", "list", "(", "zip", "(", "v_iter", ",", "v_iter", ")", ")", ")", "\n", "\n", "# - sync global variables (tf.py_func(_broadcast, [get_params], tf.float32))", "\n", "#   => pyfunc_4", "\n", "define_sync_params", "(", "tf", ".", "global_variables", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.restore_pyfuncs_unified": [[221, 236], ["tensorflow.python.ops.script_ops._py_funcs.size", "iter", "utils.mpi_tf.MpiAdamOptimizer", "utils.mpi_tf.define_sync_params", "tensorflow.global_variables", "list", "zip"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.define_sync_params"], ["", "", "def", "restore_pyfuncs_unified", "(", "agent_id", ",", "grads_and_vars", ")", ":", "\n", "    ", "expected_registry_size", "=", "agent_id", "*", "3", "\n", "if", "FuncRegistry", ".", "size", "(", ")", "<", "expected_registry_size", ":", "\n", "        ", "gv_iter", "=", "iter", "(", "grads_and_vars", ")", "\n", "\n", "# - optimizer.minimize(pi_loss)", "\n", "#   - collecting gradients (tf.py_func(_collect_grads, [flat_grad],", "\n", "#   tf.float32) => pyfunc_0", "\n", "#   - syncing params (tf.py_func(_broadcast, [get_params], tf.float32))", "\n", "#   => pyfunc_1", "\n", "MpiAdamOptimizer", "(", "grads_and_vars", "=", "list", "(", "zip", "(", "gv_iter", ",", "gv_iter", ")", ")", ")", "\n", "\n", "# - sync global variables (tf.py_func(_broadcast, [get_params], tf.float32))", "\n", "#   => pyfunc_2", "\n", "define_sync_params", "(", "tf", ".", "global_variables", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.restore_model": [[238, 265], ["utils.logx.restore_tf_graph", "len", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "ppo_heroic.restore_pyfuncs_unified", "ppo_heroic.restore_pyfuncs"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.restore_tf_graph", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.restore_pyfuncs_unified", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.restore_pyfuncs"], ["", "", "def", "restore_model", "(", "sess", ",", "path", ",", "agent_id", ",", "is_train", "=", "True", ")", ":", "\n", "    ", "model", "=", "restore_tf_graph", "(", "sess", ",", "path", ")", "\n", "if", "len", "(", "tf", ".", "get_collection", "(", "\"train\"", ")", ")", ">", "0", ":", "\n", "# Unified model.", "\n", "        ", "train", ",", "*", "grads_and_vars", "=", "tf", ".", "get_collection", "(", "\"train\"", ")", "\n", "if", "is_train", ":", "\n", "# Define optimizers so Python tf operators will get registered in", "\n", "# FuncRegistry.", "\n", "            ", "restore_pyfuncs_unified", "(", "agent_id", ",", "grads_and_vars", ")", "\n", "", "model", "[", "\"train\"", "]", "=", "train", "\n", "", "else", ":", "\n", "        ", "train_pi", ",", "*", "pi_grads_and_vars", "=", "tf", ".", "get_collection", "(", "\"train_pi\"", ")", "\n", "train_v", ",", "*", "v_grads_and_vars", "=", "tf", ".", "get_collection", "(", "\"train_v\"", ")", "\n", "if", "is_train", ":", "\n", "# Define optimizers so Python tf operators will get registered in", "\n", "# FuncRegistry.", "\n", "            ", "restore_pyfuncs", "(", "agent_id", ",", "pi_grads_and_vars", ",", "v_grads_and_vars", ")", "\n", "\n", "", "model", "[", "\"train_pi\"", "]", "=", "train_pi", "\n", "model", "[", "\"train_v\"", "]", "=", "train_v", "\n", "\n", "", "sync_op", "=", "tf", ".", "get_collection", "(", "\"sync_op\"", ")", "[", "0", "]", "\n", "summary_op", "=", "tf", ".", "get_collection", "(", "\"summary_op\"", ")", "[", "0", "]", "\n", "model", "[", "\"sync_op\"", "]", "=", "sync_op", "\n", "model", "[", "\"summary_op\"", "]", "=", "summary_op", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.build_model": [[267, 488], ["core_ppo_heroic.actor_critic_fn", "core.actor_critic_fn.", "utils.mpi_tf.sync_all_params", "tensorflow.add_to_collection", "tensorflow.summary.merge_all", "tensorflow.add_to_collection", "tensorflow.name_scope", "utils.placeholders", "tensorflow.clip_by_value", "tensorflow.name_scope", "tensorflow.exp", "tensorflow.where", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.logical_or", "tensorflow.reduce_mean", "tensorflow.name_scope", "utils.mpi_tf.MpiAdamOptimizer", "utils.mpi_tf.MpiAdamOptimizer", "utils.mpi_tf.MpiAdamOptimizer", "tensorflow.add_to_collection", "tensorflow.add_to_collection", "tensorflow.add_to_collection", "tensorflow.no_op", "tensorflow.name_scope", "utils.placeholders_from_spaces", "tensorflow.placeholder", "tensorflow.placeholder", "utils.placeholder", "tensorflow.name_scope", "utils.placeholders_from_spaces", "tensorflow.reduce_mean", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.get_collection", "tensorflow.add_n", "tensorflow.cast", "tensorflow.add_to_collection", "tensorflow.add_to_collection", "tensorflow.add_to_collection", "tensorflow.add_to_collection", "tensorflow.add_to_collection", "tensorflow.add_to_collection", "tensorflow.minimum", "tensorflow.clip_by_value", "tensorflow.maximum", "tensorflow.trainable_variables", "zip", "tensorflow.clip_by_global_norm", "list", "utils.mpi_tf.MpiAdamOptimizer.apply_gradients", "tensorflow.get_collection", "zip", "tensorflow.clip_by_global_norm", "list", "utils.mpi_tf.MpiAdamOptimizer.apply_gradients", "tensorflow.get_collection", "zip", "tensorflow.clip_by_global_norm", "list", "utils.mpi_tf.MpiAdamOptimizer.apply_gradients", "utils.mpi_tf.MpiAdamOptimizer.minimize", "utils.mpi_tf.MpiAdamOptimizer.minimize", "utils.mpi_tf.MpiAdamOptimizer.minimize", "tensorflow.nn.l2_loss", "zip", "zip", "zip", "utils.mpi_tf.MpiAdamOptimizer.compute_gradients", "utils.mpi_tf.MpiAdamOptimizer.compute_gradients", "utils.mpi_tf.MpiAdamOptimizer.compute_gradients"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.actor_critic_fn", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.sync_all_params", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholders", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholders_from_spaces", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholders_from_spaces", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.apply_gradients", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.apply_gradients", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.apply_gradients", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.compute_gradients", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.compute_gradients", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.compute_gradients"], ["", "def", "build_model", "(", "env", ",", "cfg", ")", ":", "\n", "\n", "# Inputs to computation graph - observations", "\n", "    ", "with", "tf", ".", "name_scope", "(", "\"Inputs\"", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"Observation\"", ")", ":", "\n", "            ", "(", "\n", "x_non_spatial_ph", ",", "\n", "x_spatial_ph", ",", "\n", "x_mask_spell_ph", ",", "\n", "x_mask_spatial_ph", ",", "\n", "x_if_spawn_spell_ph", ",", "\n", ")", "=", "utils", ".", "placeholders_from_spaces", "(", "\n", "env", ".", "observation_space", "[", "\"non_spatial\"", "]", ",", "\n", "env", ".", "observation_space", "[", "\"spatial\"", "]", ",", "\n", "env", ".", "observation_space", "[", "\"mask_spell\"", "]", ",", "\n", "env", ".", "observation_space", "[", "\"mask_spatial\"", "]", ",", "\n", "env", ".", "observation_space", "[", "\"if_spawn_spell\"", "]", ",", "\n", "names", "=", "[", "\n", "\"NonSpatial\"", ",", "\n", "\"Spatial\"", ",", "\n", "\"MaskSpell\"", ",", "\n", "\"MaskSpatial\"", ",", "\n", "\"IfSpawnSpell\"", ",", "\n", "]", ",", "\n", ")", "\n", "\n", "x_state_in_ph", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "cfg", ".", "architecture", ".", "empty_rnn_state", ".", "shape", ",", "\n", "name", "=", "\"StateIn\"", ",", "\n", ")", "\n", "x_batch_size_ph", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "shape", "=", "(", ")", ",", "name", "=", "\"BatchSize\"", ")", "\n", "x_rnn_mask_ph", "=", "utils", ".", "placeholder", "(", "None", ",", "name", "=", "\"RnnMask\"", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"Action\"", ")", ":", "\n", "# Inputs to computation graph - actions", "\n", "            ", "(", "a_spell_ph", ",", "a_spatial_ph", ",", ")", "=", "utils", ".", "placeholders_from_spaces", "(", "\n", "env", ".", "action_space", "[", "\"spell\"", "]", ",", "\n", "env", ".", "action_space", "[", "\"spatial\"", "]", ",", "\n", "names", "=", "[", "\"Spell\"", ",", "\"Spatial\"", "]", ",", "\n", ")", "\n", "\n", "", "adv_ph", ",", "ret_ph", ",", "logp_old_ph", ",", "v_old_ph", "=", "utils", ".", "placeholders", "(", "\n", "None", ",", "None", ",", "None", ",", "None", ",", "names", "=", "[", "\"Advantage\"", ",", "\"Return\"", ",", "\"Logp\"", ",", "\"Value\"", "]", "\n", ")", "\n", "\n", "", "actor_critic", "=", "core", ".", "actor_critic_fn", "(", "cfg", ")", "\n", "# Share information about action space with policy architecture", "\n", "# state_out is None, if Architecture.USE_RNN == false", "\n", "pi", ",", "logp", ",", "logp_pi", ",", "v", ",", "state_out", "=", "actor_critic", "(", "\n", "{", "\n", "\"spatial\"", ":", "x_spatial_ph", ",", "\n", "\"non_spatial\"", ":", "x_non_spatial_ph", ",", "\n", "\"mask_spell\"", ":", "x_mask_spell_ph", ",", "\n", "\"mask_spatial\"", ":", "x_mask_spatial_ph", ",", "\n", "\"if_spawn_spell\"", ":", "x_if_spawn_spell_ph", ",", "\n", "\"state_in\"", ":", "x_state_in_ph", ",", "\n", "\"batch_size\"", ":", "x_batch_size_ph", ",", "\n", "\"rnn_mask\"", ":", "x_rnn_mask_ph", ",", "\n", "}", ",", "\n", "{", "\"spell\"", ":", "a_spell_ph", ",", "\"spatial\"", ":", "a_spatial_ph", "}", ",", "\n", "env", ".", "action_space", ",", "\n", "cfg", ",", "\n", ")", "\n", "\n", "hyperp", "=", "cfg", ".", "hyperparameters", "\n", "if", "hyperp", ".", "clip_vf_output", ":", "\n", "        ", "v", "=", "tf", ".", "clip_by_value", "(", "v", ",", "-", "1.0", ",", "1.0", ")", "\n", "\n", "# PPO objectives", "\n", "", "with", "tf", ".", "name_scope", "(", "\"Objectives\"", ")", ":", "\n", "\n", "# policy block", "\n", "        ", "ratio", "=", "tf", ".", "exp", "(", "logp", "-", "logp_old_ph", ")", "# pi(a|s) / pi_old(a|s)", "\n", "min_adv", "=", "tf", ".", "where", "(", "\n", "adv_ph", ">", "0", ",", "\n", "(", "1", "+", "hyperp", ".", "clip_ratio", ")", "*", "adv_ph", ",", "\n", "(", "1", "-", "hyperp", ".", "clip_ratio", ")", "*", "adv_ph", ",", "\n", ")", "\n", "pi_loss", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "minimum", "(", "ratio", "*", "adv_ph", ",", "min_adv", ")", ",", "name", "=", "\"LossPi\"", ")", "\n", "\n", "# value block", "\n", "\n", "if", "hyperp", ".", "value_clipping_enabled", ":", "\n", "# value function clipping", "\n", "            ", "v_clipped", "=", "v_old_ph", "+", "tf", ".", "clip_by_value", "(", "\n", "v", "-", "v_old_ph", ",", "-", "hyperp", ".", "clip_range_vf", ",", "hyperp", ".", "clip_range_vf", "\n", ")", "\n", "v_loss1", "=", "tf", ".", "square", "(", "v", "-", "ret_ph", ")", "\n", "v_loss2", "=", "tf", ".", "square", "(", "v_clipped", "-", "ret_ph", ")", "\n", "v_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "maximum", "(", "v_loss1", ",", "v_loss2", ")", ",", "name", "=", "\"LossV\"", ")", "\n", "", "else", ":", "\n", "            ", "v_loss", "=", "tf", ".", "reduce_mean", "(", "(", "ret_ph", "-", "v", ")", "**", "2", ",", "name", "=", "\"LossV\"", ")", "\n", "\n", "# value function regularization", "\n", "", "if", "hyperp", ".", "vf_reg_enabled", "and", "not", "cfg", ".", "architecture", ".", "unified_policy_value", ":", "\n", "            ", "params_v", "=", "tf", ".", "get_collection", "(", "\n", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "scope", "=", "\"ValueFunctionMain\"", "\n", ")", "\n", "v_loss_l2", "=", "tf", ".", "add_n", "(", "\n", "[", "tf", ".", "nn", ".", "l2_loss", "(", "v", ")", "for", "v", "in", "params_v", "if", "\"bias\"", "not", "in", "v", ".", "name", "]", "\n", ")", "\n", "v_loss", "=", "v_loss", "+", "hyperp", ".", "vf_reg", "*", "v_loss_l2", "\n", "\n", "# todo michalw: entropy bonus, value function clipping?", "\n", "", "loss", "=", "hyperp", ".", "pi_loss_coef", "*", "pi_loss", "+", "hyperp", ".", "vf_loss_coef", "*", "v_loss", "\n", "\n", "# Useful to watch during learning", "\n", "", "with", "tf", ".", "name_scope", "(", "\"Info\"", ")", ":", "\n", "# a sample estimate for KL-divergence, easy to compute", "\n", "        ", "approx_kl", "=", "tf", ".", "reduce_mean", "(", "logp_old_ph", "-", "logp", ",", "name", "=", "\"KL\"", ")", "\n", "# a sample estimate for entropy, also easy to compute", "\n", "approx_ent", "=", "tf", ".", "reduce_mean", "(", "-", "logp", ",", "name", "=", "\"Entropy\"", ")", "\n", "clipped", "=", "tf", ".", "logical_or", "(", "\n", "ratio", ">", "(", "1", "+", "hyperp", ".", "clip_ratio", ")", ",", "ratio", "<", "(", "1", "-", "hyperp", ".", "clip_ratio", ")", "\n", ")", "\n", "clipfrac", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "clipped", ",", "tf", ".", "float32", ")", ",", "name", "=", "\"ClipFrac\"", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"Optimizers\"", ")", ":", "\n", "        ", "pi_optimizer", "=", "MpiAdamOptimizer", "(", "learning_rate", "=", "hyperp", ".", "pi_lr", ")", "\n", "v_optimizer", "=", "MpiAdamOptimizer", "(", "learning_rate", "=", "hyperp", ".", "vf_lr", ")", "\n", "optimizer", "=", "MpiAdamOptimizer", "(", "learning_rate", "=", "hyperp", ".", "lr", ")", "\n", "train", ",", "train_pi", ",", "train_v", "=", "None", ",", "None", ",", "None", "\n", "\n", "if", "hyperp", ".", "grad_clipping_enabled", ":", "\n", "            ", "if", "cfg", ".", "architecture", ".", "unified_policy_value", ":", "\n", "# gradient clipping enabled, unified PV", "\n", "                ", "params", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "grads", ",", "_vars", "=", "zip", "(", "*", "optimizer", ".", "compute_gradients", "(", "loss", ",", "params", ")", ")", "\n", "grads", ",", "_grad_norm", "=", "tf", ".", "clip_by_global_norm", "(", "grads", ",", "hyperp", ".", "max_grad_norm", ")", "\n", "grads", "=", "list", "(", "zip", "(", "grads", ",", "params", ")", ")", "\n", "train", "=", "optimizer", ".", "apply_gradients", "(", "grads", ")", "\n", "", "else", ":", "\n", "# gradient clipping enabled, separate PV", "\n", "                ", "params_pi", "=", "tf", ".", "get_collection", "(", "\n", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "scope", "=", "\"PolicyMain\"", "\n", ")", "\n", "pi_grads", ",", "_vars", "=", "zip", "(", "\n", "*", "pi_optimizer", ".", "compute_gradients", "(", "pi_loss", ",", "params_pi", ")", "\n", ")", "\n", "pi_grads", ",", "_grad_norm", "=", "tf", ".", "clip_by_global_norm", "(", "\n", "pi_grads", ",", "hyperp", ".", "max_grad_norm", "\n", ")", "\n", "pi_grads", "=", "list", "(", "zip", "(", "pi_grads", ",", "params_pi", ")", ")", "\n", "train_pi", "=", "pi_optimizer", ".", "apply_gradients", "(", "pi_grads", ")", "\n", "\n", "params_v", "=", "tf", ".", "get_collection", "(", "\n", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "scope", "=", "\"ValueFunctionMain\"", "\n", ")", "\n", "v_grads", ",", "_vars", "=", "zip", "(", "*", "v_optimizer", ".", "compute_gradients", "(", "v_loss", ",", "params_v", ")", ")", "\n", "v_grads", ",", "_grad_norm", "=", "tf", ".", "clip_by_global_norm", "(", "\n", "v_grads", ",", "hyperp", ".", "max_grad_norm", "\n", ")", "\n", "v_grads", "=", "list", "(", "zip", "(", "v_grads", ",", "params_v", ")", ")", "\n", "train_v", "=", "v_optimizer", ".", "apply_gradients", "(", "v_grads", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "cfg", ".", "architecture", ".", "unified_policy_value", ":", "\n", "# no gradient clipping, unified PV", "\n", "                ", "train", "=", "optimizer", ".", "minimize", "(", "loss", ")", "\n", "", "else", ":", "\n", "# no gradient clipping, separate PV", "\n", "                ", "train_pi", "=", "pi_optimizer", ".", "minimize", "(", "pi_loss", ")", "\n", "train_v", "=", "v_optimizer", ".", "minimize", "(", "v_loss", ")", "\n", "\n", "", "", "", "if", "not", "cfg", ".", "architecture", ".", "unified_policy_value", ":", "\n", "        ", "tf", ".", "add_to_collection", "(", "\"train_pi\"", ",", "train_pi", ")", "\n", "for", "grad", ",", "var", "in", "pi_optimizer", ".", "grads_and_vars", ":", "\n", "            ", "tf", ".", "add_to_collection", "(", "\"train_pi\"", ",", "grad", ")", "\n", "tf", ".", "add_to_collection", "(", "\"train_pi\"", ",", "var", ")", "\n", "\n", "", "tf", ".", "add_to_collection", "(", "\"train_v\"", ",", "train_v", ")", "\n", "for", "grad", ",", "var", "in", "v_optimizer", ".", "grads_and_vars", ":", "\n", "            ", "tf", ".", "add_to_collection", "(", "\"train_v\"", ",", "grad", ")", "\n", "tf", ".", "add_to_collection", "(", "\"train_v\"", ",", "var", ")", "\n", "", "", "else", ":", "\n", "        ", "tf", ".", "add_to_collection", "(", "\"train\"", ",", "train", ")", "\n", "for", "grad", ",", "var", "in", "optimizer", ".", "grads_and_vars", ":", "\n", "            ", "tf", ".", "add_to_collection", "(", "\"train\"", ",", "grad", ")", "\n", "tf", ".", "add_to_collection", "(", "\"train\"", ",", "var", ")", "\n", "\n", "", "", "sync_op", "=", "sync_all_params", "(", ")", "\n", "tf", ".", "add_to_collection", "(", "\"sync_op\"", ",", "sync_op", ")", "\n", "\n", "summary_op", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "if", "summary_op", "is", "None", ":", "\n", "        ", "summary_op", "=", "tf", ".", "no_op", "(", ")", "\n", "", "tf", ".", "add_to_collection", "(", "\"summary_op\"", ",", "summary_op", ")", "\n", "\n", "return", "{", "\n", "\"x_non_spatial_ph\"", ":", "x_non_spatial_ph", ",", "\n", "\"x_spatial_ph\"", ":", "x_spatial_ph", ",", "\n", "\"x_mask_spell_ph\"", ":", "x_mask_spell_ph", ",", "\n", "\"x_mask_spatial_ph\"", ":", "x_mask_spatial_ph", ",", "\n", "\"x_if_spawn_spell_ph\"", ":", "x_if_spawn_spell_ph", ",", "\n", "\"x_state_in_ph\"", ":", "x_state_in_ph", ",", "\n", "\"x_rnn_mask_ph\"", ":", "x_rnn_mask_ph", ",", "\n", "\"x_batch_size_ph\"", ":", "x_batch_size_ph", ",", "\n", "\"a_spell_ph\"", ":", "a_spell_ph", ",", "\n", "\"a_spatial_ph\"", ":", "a_spatial_ph", ",", "\n", "\"adv_ph\"", ":", "adv_ph", ",", "\n", "\"v_old_ph\"", ":", "v_old_ph", ",", "\n", "\"ret_ph\"", ":", "ret_ph", ",", "\n", "\"logp_old_ph\"", ":", "logp_old_ph", ",", "\n", "\"pi_spell\"", ":", "pi", "[", "\"spell\"", "]", ",", "\n", "\"pi_spell_argmax\"", ":", "pi", "[", "\"spell_argmax\"", "]", ",", "\n", "\"pi_spatial\"", ":", "pi", "[", "\"spatial\"", "]", ",", "\n", "\"pi_spatial_argmax\"", ":", "pi", "[", "\"spatial_argmax\"", "]", ",", "\n", "\"v\"", ":", "v", ",", "\n", "\"state_out\"", ":", "state_out", ",", "\n", "\"pi_loss\"", ":", "pi_loss", ",", "\n", "\"v_loss\"", ":", "v_loss", ",", "\n", "\"loss\"", ":", "loss", ",", "\n", "\"approx_ent\"", ":", "approx_ent", ",", "\n", "\"approx_kl\"", ":", "approx_kl", ",", "\n", "\"clipfrac\"", ":", "clipfrac", ",", "\n", "\"logp_pi\"", ":", "logp_pi", ",", "\n", "\"train_pi\"", ":", "train_pi", ",", "\n", "\"train_v\"", ":", "train_v", ",", "\n", "\"train\"", ":", "train", ",", "\n", "\"sync_op\"", ":", "sync_op", ",", "\n", "\"summary_op\"", ":", "summary_op", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.mlp_policy_network": [[23, 192], ["tensorflow.log", "layers.non_spatial_layer", "layers.spatial_layer", "layers.concat_mlp_layer", "layers.logits_layer_single_spatial", "layers.logits_layer_single_spatial", "tensorflow.reshape", "tensorflow.multinomial", "tensorflow.squeeze", "tensorflow.argmax", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.identity", "tensorflow.squeeze", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.identity", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.argmax", "tensorflow.zeros", "tensorflow.log", "tensorflow.multinomial", "tensorflow.log", "tensorflow.log", "tensorflow.name_scope", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.clip_by_value", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.log", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.nn.log_softmax", "tensorflow.nn.log_softmax", "tensorflow.nn.log_softmax", "numpy.log", "cfg.spells.spell_to_idx", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.non_spatial_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.spatial_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.concat_mlp_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer_single_spatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer_single_spatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx"], ["def", "mlp_policy_network", "(", "x", ",", "a", ",", "action_space", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"\n    MLP policy with conditioned spatial output, with regards to sampled spell\n    output.\n    \"\"\"", "\n", "act_dim_spell", "=", "action_space", "[", "\"spell\"", "]", ".", "n", "\n", "act_dim_spatial", "=", "action_space", "[", "\"spatial\"", "]", ".", "n", "\n", "a_spatial", "=", "a", "[", "\"spatial\"", "]", "\n", "\n", "# Masks", "\n", "if_spawn_spell", "=", "x", "[", "\"if_spawn_spell\"", "]", "\n", "mask_spawn", "=", "(", "\n", "if_spawn_spell", "*", "cfg", ".", "spells", ".", "mask_spawn", "\n", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "cfg", ".", "spells", ".", "mask_nonspawn", "\n", ")", "\n", "mask_spell", "=", "mask_spawn", "*", "x", "[", "\"mask_spell\"", "]", "\n", "logits_mask_spell", "=", "tf", ".", "log", "(", "mask_spell", ")", "\n", "mask_spatial", "=", "x", "[", "\"mask_spatial\"", "]", "\n", "\n", "non_spatial_features", "=", "non_spatial_layer", "(", "\n", "x", ",", "cfg", ".", "architecture", ".", "shared_params", ",", "\"DenseNonSpatial\"", "\n", ")", "\n", "spatial_features", "=", "spatial_layer", "(", "x", ",", "cfg", ".", "architecture", ".", "shared_params", ",", "\"ConvSpatial\"", ")", "\n", "features_fc", "=", "concat_mlp_layer", "(", "\n", "non_spatial_features", ",", "\n", "spatial_features", ",", "\n", "cfg", ".", "architecture", ".", "shared_params", ",", "\n", "name", "=", "\"Spawn\"", ",", "\n", ")", "\n", "\n", "spawn_logits", ",", "spawn_spatial_logits", "=", "logits_layer_single_spatial", "(", "\n", "features_fc", ",", "act_dim_spell", ",", "act_dim_spatial", ",", "name", "=", "\"Spawn\"", "\n", ")", "\n", "\n", "spell_logits", ",", "spell_spatial_logits", "=", "logits_layer_single_spatial", "(", "\n", "features_fc", ",", "act_dim_spell", ",", "act_dim_spatial", ",", "name", "=", "\"Spell\"", "\n", ")", "\n", "\n", "logits_spell", "=", "if_spawn_spell", "*", "spawn_logits", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "spell_logits", "\n", "\n", "if", "cfg", ".", "hyperparameters", ".", "bias_noops", ":", "\n", "# noop bias for all noop actions", "\n", "        ", "logit_bias", "=", "tf", ".", "zeros", "(", "act_dim_spell", ")", "\n", "# previously used -3.0 + bias according to number of noop actions", "\n", "# + bias according to number of spatial actions", "\n", "noop_bias", "=", "-", "3.0", "+", "np", ".", "log", "(", "cfg", ".", "spells", ".", "num_noops", ")", "-", "np", ".", "log", "(", "act_dim_spatial", ")", "\n", "for", "spell", "in", "cfg", ".", "spells", ".", "enabled_spells", ":", "\n", "            ", "if", "spell", ".", "is_noop", ":", "\n", "                ", "spell_idx", "=", "cfg", ".", "spells", ".", "spell_to_idx", "(", "spell", ")", "\n", "logit_bias", "+=", "noop_bias", "*", "tf", ".", "one_hot", "(", "spell_idx", ",", "depth", "=", "act_dim_spell", ")", "\n", "\n", "", "", "logits_spell", "=", "logits_spell", "+", "logit_bias", "\n", "\n", "", "logits_spatial", "=", "(", "\n", "if_spawn_spell", "*", "spawn_spatial_logits", "\n", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "spell_spatial_logits", "\n", ")", "\n", "logits_spatial", "=", "tf", ".", "reshape", "(", "\n", "logits_spatial", ",", "shape", "=", "[", "-", "1", ",", "act_dim_spell", ",", "act_dim_spatial", "]", "\n", ")", "\n", "\n", "# Mask valid spell logits only.", "\n", "logits_valid_spell", "=", "logits_spell", "+", "logits_mask_spell", "\n", "\n", "# Sample spell according to policy.", "\n", "pi_spell_batch", "=", "tf", ".", "multinomial", "(", "logits_valid_spell", ",", "1", ",", "name", "=", "\"SampleSpell\"", ")", "\n", "pi_spell", "=", "tf", ".", "squeeze", "(", "pi_spell_batch", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpell\"", ")", "\n", "\n", "# Sample spell via argmax for inference.", "\n", "pi_spell_argmax", "=", "tf", ".", "argmax", "(", "logits_valid_spell", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpellArgmax\"", ")", "\n", "\n", "# Condition policy-sampled spatial on policy-sampled spell.", "\n", "mask_spatial_pi", "=", "tf", ".", "reduce_sum", "(", "\n", "mask_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "pi_spell", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logits_spatial_pi", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "pi_spell", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "# Mask out invalid spatial actions.", "\n", "logits_valid_spatial_pi", "=", "logits_spatial_pi", "+", "tf", ".", "log", "(", "mask_spatial_pi", ")", "\n", "logits_valid_spatial_pi", "=", "tf", ".", "identity", "(", "\n", "logits_valid_spatial_pi", ",", "name", "=", "\"LogitsSpatialPi\"", "\n", ")", "\n", "# Sample spatial according to policy, conditioned by sampled spell.", "\n", "pi_spatial", "=", "tf", ".", "squeeze", "(", "\n", "tf", ".", "multinomial", "(", "logits_valid_spatial_pi", ",", "1", ",", "name", "=", "\"SampleSpatial\"", ")", ",", "\n", "axis", "=", "1", ",", "\n", "name", "=", "\"PiSpatial\"", ",", "\n", ")", "\n", "\n", "# Condition policy-sampled spatial on the given spell.", "\n", "mask_spatial_a", "=", "tf", ".", "reduce_sum", "(", "\n", "mask_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "a", "[", "\"spell\"", "]", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logits_spatial_a", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "a", "[", "\"spell\"", "]", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "# Mask out invalid spatial actions.", "\n", "logits_valid_spatial_a", "=", "logits_spatial_a", "+", "tf", ".", "log", "(", "mask_spatial_a", ")", "\n", "logits_valid_spatial_a", "=", "tf", ".", "identity", "(", "logits_valid_spatial_a", ",", "name", "=", "\"LogitsSpatialA\"", ")", "\n", "\n", "# Sample spatial via argmax for inference, conditioned by argmax spell.", "\n", "mask_spatial_argmax", "=", "tf", ".", "reduce_sum", "(", "\n", "mask_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "pi_spell_argmax", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logits_spatial_argmax", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "pi_spell_argmax", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "# Mask out invalid spatial actions.", "\n", "logits_valid_spatial_argmax", "=", "logits_spatial_argmax", "+", "tf", ".", "log", "(", "mask_spatial_argmax", ")", "\n", "# Sample spatial according to argmax, condition by argmax sampled spell.", "\n", "pi_spatial_argmax", "=", "tf", ".", "argmax", "(", "\n", "logits_valid_spatial_argmax", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpatialArgmax\"", "\n", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"Logp\"", ")", ":", "\n", "# Clip in order to avoid multiplying 0 by -inf below (note that", "\n", "# we use one hot below hence 0 and above we calculate tf.log(0), hence -inf)", "\n", "        ", "log_softmax_valid_spell", "=", "tf", ".", "clip_by_value", "(", "\n", "tf", ".", "nn", ".", "log_softmax", "(", "logits_valid_spell", ")", ",", "-", "10", ",", "0", "\n", ")", "\n", "log_softmax_spatial_pi", "=", "tf", ".", "clip_by_value", "(", "\n", "tf", ".", "nn", ".", "log_softmax", "(", "logits_valid_spatial_pi", ")", ",", "-", "10", ",", "0", "\n", ")", "\n", "log_softmax_spatial_a", "=", "tf", ".", "clip_by_value", "(", "\n", "tf", ".", "nn", ".", "log_softmax", "(", "logits_valid_spatial_a", ")", ",", "-", "10", ",", "0", "\n", ")", "\n", "\n", "logp_a_spell", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "a", "[", "\"spell\"", "]", ",", "depth", "=", "act_dim_spell", ")", "*", "log_softmax_valid_spell", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logp_pi_spell", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "pi_spell", ",", "depth", "=", "act_dim_spell", ")", "*", "log_softmax_valid_spell", ",", "axis", "=", "1", "\n", ")", "\n", "\n", "logp_pi_spatial", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "pi_spatial", ",", "depth", "=", "act_dim_spatial", ")", "*", "log_softmax_spatial_pi", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "\n", "logp_a_spatial", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "a_spatial", ",", "depth", "=", "act_dim_spatial", ")", "*", "log_softmax_spatial_a", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "\n", "logp_a", "=", "logp_a_spell", "+", "logp_a_spatial", "\n", "logp_pi", "=", "logp_pi_spell", "+", "logp_pi_spatial", "\n", "\n", "pi", "=", "{", "\n", "\"spell\"", ":", "pi_spell", ",", "\n", "\"spatial\"", ":", "pi_spatial", ",", "\n", "\"spell_argmax\"", ":", "pi_spell_argmax", ",", "\n", "\"spatial_argmax\"", ":", "pi_spatial_argmax", ",", "\n", "}", "\n", "\n", "return", "pi", ",", "logp_a", ",", "logp_pi", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.mlp_policy_value_network": [[194, 335], ["tensorflow.log", "layers.non_spatial_layer", "layers.spatial_layer", "layers.concat_mlp_layer", "layers.mlp", "layers.logits_layer_single_spatial", "layers.logits_layer_single_spatial", "tensorflow.reshape", "tensorflow.multinomial", "tensorflow.squeeze", "tensorflow.argmax", "tensorflow.reduce_sum", "tensorflow.identity", "tensorflow.reduce_sum", "tensorflow.identity", "tensorflow.squeeze", "tensorflow.reduce_sum", "tensorflow.argmax", "tensorflow.zeros", "tensorflow.multinomial", "tensorflow.name_scope", "tensorflow.clip_by_value", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.log", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "numpy.log", "numpy.log", "cfg.spells.spell_to_idx", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.nn.log_softmax", "tensorflow.one_hot", "tensorflow.nn.log_softmax", "tensorflow.one_hot"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.non_spatial_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.spatial_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.concat_mlp_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer_single_spatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer_single_spatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx"], ["", "", "def", "mlp_policy_value_network", "(", "x", ",", "a", ",", "action_space", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"\n    MLP policy-value network with conditioned spatial output, with regards to\n    sampled spell output.\n    \"\"\"", "\n", "act_dim_spell", "=", "action_space", "[", "\"spell\"", "]", ".", "n", "\n", "act_dim_spatial", "=", "action_space", "[", "\"spatial\"", "]", ".", "n", "\n", "a_spatial", "=", "a", "[", "\"spatial\"", "]", "\n", "\n", "if_spawn_spell", "=", "x", "[", "\"if_spawn_spell\"", "]", "\n", "mask_spawn", "=", "(", "\n", "if_spawn_spell", "*", "cfg", ".", "spells", ".", "mask_spawn", "\n", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "cfg", ".", "spells", ".", "mask_nonspawn", "\n", ")", "\n", "mask_spell", "=", "mask_spawn", "*", "x", "[", "\"mask_spell\"", "]", "\n", "logits_mask_spell", "=", "tf", ".", "log", "(", "mask_spell", ")", "\n", "\n", "non_spatial_features", "=", "non_spatial_layer", "(", "\n", "x", ",", "cfg", ".", "architecture", ".", "shared_params", ",", "\"DenseNonSpatial\"", "\n", ")", "\n", "spatial_features", "=", "spatial_layer", "(", "x", ",", "cfg", ".", "architecture", ".", "shared_params", ",", "\"ConvSpatial\"", ")", "\n", "features_fc", "=", "concat_mlp_layer", "(", "\n", "non_spatial_features", ",", "\n", "spatial_features", ",", "\n", "cfg", ".", "architecture", ".", "shared_params", ",", "\n", "name", "=", "\"Spawn\"", ",", "\n", ")", "\n", "\n", "# value head", "\n", "v", "=", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"fc_units_concat\"", "]", ",", "1", "]", ",", "\n", "activation", "=", "tf", ".", "tanh", ",", "\n", "output_activation", "=", "None", ",", "\n", "name", "=", "\"Vf\"", ",", "\n", ")", "\n", "\n", "# policy heads", "\n", "spawn_logits", ",", "spawn_spatial_logits", "=", "logits_layer_single_spatial", "(", "\n", "features_fc", ",", "act_dim_spell", ",", "act_dim_spatial", ",", "name", "=", "\"Spawn\"", "\n", ")", "\n", "\n", "spell_logits", ",", "spell_spatial_logits", "=", "logits_layer_single_spatial", "(", "\n", "features_fc", ",", "act_dim_spell", ",", "act_dim_spatial", ",", "name", "=", "\"Spell\"", "\n", ")", "\n", "\n", "logits_spell", "=", "if_spawn_spell", "*", "spawn_logits", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "spell_logits", "\n", "\n", "if", "cfg", ".", "hyperparameters", ".", "bias_noops", ":", "\n", "# noop bias for all noop actions", "\n", "        ", "logit_bias", "=", "tf", ".", "zeros", "(", "act_dim_spell", ")", "\n", "# previously used -3.0 + bias according to number of noop actions", "\n", "# + bias according to number of spatial actions", "\n", "noop_bias", "=", "-", "3.0", "+", "np", ".", "log", "(", "cfg", ".", "spells", ".", "num_noops", ")", "-", "np", ".", "log", "(", "act_dim_spatial", ")", "\n", "for", "spell", "in", "cfg", ".", "spells", ".", "enabled_spells", ":", "\n", "            ", "if", "spell", ".", "is_noop", ":", "\n", "                ", "spell_idx", "=", "cfg", ".", "spells", ".", "spell_to_idx", "(", "spell", ")", "\n", "logit_bias", "+=", "noop_bias", "*", "tf", ".", "one_hot", "(", "spell_idx", ",", "depth", "=", "act_dim_spell", ")", "\n", "\n", "", "", "logits_spell", "=", "logits_spell", "+", "logit_bias", "\n", "\n", "", "logits_spatial", "=", "(", "\n", "if_spawn_spell", "*", "spawn_spatial_logits", "\n", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "spell_spatial_logits", "\n", ")", "\n", "logits_spatial", "=", "tf", ".", "reshape", "(", "\n", "logits_spatial", ",", "shape", "=", "[", "-", "1", ",", "act_dim_spell", ",", "act_dim_spatial", "]", "\n", ")", "\n", "\n", "# Mask valid spell logits only.", "\n", "logprob_valid_spell", "=", "logits_spell", "+", "logits_mask_spell", "\n", "\n", "# Sample spell according to policy.", "\n", "pi_spell_batch", "=", "tf", ".", "multinomial", "(", "logprob_valid_spell", ",", "1", ",", "name", "=", "\"SampleSpell\"", ")", "\n", "pi_spell", "=", "tf", ".", "squeeze", "(", "pi_spell_batch", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpell\"", ")", "\n", "\n", "# Sample spell via argmax for inferrence.", "\n", "pi_spell_argmax", "=", "tf", ".", "argmax", "(", "logprob_valid_spell", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpellArgmax\"", ")", "\n", "\n", "# Condition policy-sampled spatial on policy-sampled spell.", "\n", "logits_spatial_pi", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "pi_spell", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logits_spatial_pi", "=", "tf", ".", "identity", "(", "logits_spatial_pi", ",", "name", "=", "\"LogitsSpatialPi\"", ")", "\n", "\n", "logits_spatial_a", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "a", "[", "\"spell\"", "]", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logits_spatial_a", "=", "tf", ".", "identity", "(", "logits_spatial_a", ",", "name", "=", "\"LogitsSpatialA\"", ")", "\n", "\n", "# Sample spatial according to policy, conditioned by sampled spell.", "\n", "pi_spatial", "=", "tf", ".", "squeeze", "(", "\n", "tf", ".", "multinomial", "(", "logits_spatial_pi", ",", "1", ",", "name", "=", "\"SampleSpatial\"", ")", ",", "\n", "axis", "=", "1", ",", "\n", "name", "=", "\"PiSpatial\"", ",", "\n", ")", "\n", "\n", "# Sample spatial via argmax for inferrence, conditioned on by argmax spell.", "\n", "logits_spatial_argmax", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "pi_spell_argmax", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "pi_spatial_argmax", "=", "tf", ".", "argmax", "(", "logits_spatial_argmax", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpatialArgmax\"", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"Logp\"", ")", ":", "\n", "        ", "logp_valid_spell", "=", "tf", ".", "clip_by_value", "(", "logprob_valid_spell", ",", "np", ".", "log", "(", "1e-10", ")", ",", "0", ")", "\n", "logp_a_spell", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "a", "[", "\"spell\"", "]", ",", "depth", "=", "act_dim_spell", ")", "*", "logp_valid_spell", ",", "axis", "=", "1", "\n", ")", "\n", "logp_pi_spell", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "pi_spell", ",", "depth", "=", "act_dim_spell", ")", "*", "logp_valid_spell", ",", "axis", "=", "1", "\n", ")", "\n", "\n", "logp_pi_spatial", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "pi_spatial", ",", "depth", "=", "act_dim_spatial", ")", "\n", "*", "tf", ".", "nn", ".", "log_softmax", "(", "logits_spatial_pi", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "\n", "logp_a_spatial", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "a_spatial", ",", "depth", "=", "act_dim_spatial", ")", "\n", "*", "tf", ".", "nn", ".", "log_softmax", "(", "logits_spatial_a", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "\n", "logp_a", "=", "logp_a_spell", "+", "logp_a_spatial", "\n", "logp_pi", "=", "logp_pi_spell", "+", "logp_pi_spatial", "\n", "\n", "pi", "=", "{", "\n", "\"spell\"", ":", "pi_spell", ",", "\n", "\"spatial\"", ":", "pi_spatial", ",", "\n", "\"spell_argmax\"", ":", "pi_spell_argmax", ",", "\n", "\"spatial_argmax\"", ":", "pi_spatial_argmax", ",", "\n", "}", "\n", "\n", "return", "pi", ",", "logp_a", ",", "logp_pi", ",", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.rnn_policy_network": [[337, 463], ["tensorflow.log", "layers.non_spatial_layer", "layers.spatial_layer", "layers.concat_layer", "layers.before_rnn_reshape", "layers.rnn_layer", "layers.after_rnn_reshape", "layers.logits_layer_single_spatial", "layers.logits_layer_single_spatial", "tensorflow.reshape", "tensorflow.multinomial", "tensorflow.squeeze", "tensorflow.argmax", "tensorflow.reduce_sum", "tensorflow.identity", "tensorflow.reduce_sum", "tensorflow.identity", "tensorflow.squeeze", "tensorflow.argmax", "tensorflow.zeros", "tensorflow.multinomial", "tensorflow.name_scope", "tensorflow.clip_by_value", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.log", "tensorflow.expand_dims", "tensorflow.expand_dims", "numpy.log", "numpy.log", "cfg.spells.spell_to_idx", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.nn.log_softmax", "tensorflow.one_hot", "tensorflow.nn.log_softmax", "tensorflow.one_hot"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.non_spatial_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.spatial_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.concat_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.before_rnn_reshape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.rnn_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.after_rnn_reshape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer_single_spatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer_single_spatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx"], ["", "", "def", "rnn_policy_network", "(", "x", ",", "a", ",", "action_space", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"\n    Recurrent policy with conditioned spatial output, with regards to sampled spell\n    output.\n    \"\"\"", "\n", "act_dim_spell", "=", "action_space", "[", "\"spell\"", "]", ".", "n", "\n", "act_dim_spatial", "=", "action_space", "[", "\"spatial\"", "]", ".", "n", "\n", "a_spatial", "=", "a", "[", "\"spatial\"", "]", "\n", "batch_size", "=", "x", "[", "\"batch_size\"", "]", "\n", "rnn_mask", "=", "x", "[", "\"rnn_mask\"", "]", "\n", "state_in", "=", "x", "[", "\"state_in\"", "]", "\n", "\n", "if_spawn_spell", "=", "x", "[", "\"if_spawn_spell\"", "]", "\n", "mask_spawn", "=", "(", "\n", "if_spawn_spell", "*", "cfg", ".", "spells", ".", "mask_spawn", "\n", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "cfg", ".", "spells", ".", "mask_nonspawn", "\n", ")", "\n", "mask_spell", "=", "mask_spawn", "*", "x", "[", "\"mask_spell\"", "]", "\n", "logits_mask_spell", "=", "tf", ".", "log", "(", "mask_spell", ")", "\n", "\n", "non_spatial_features", "=", "non_spatial_layer", "(", "\n", "x", ",", "cfg", ".", "architecture", ".", "shared_params", ",", "\"DenseNonSpatial\"", "\n", ")", "\n", "spatial_features", "=", "spatial_layer", "(", "x", ",", "cfg", ".", "architecture", ".", "shared_params", ",", "\"ConvSpatial\"", ")", "\n", "\n", "# rnn block", "\n", "concat_features", "=", "concat_layer", "(", "non_spatial_features", ",", "spatial_features", ")", "\n", "rnn_input", "=", "before_rnn_reshape", "(", "concat_features", ",", "batch_size", ")", "\n", "rnn_output", ",", "state_out", "=", "rnn_layer", "(", "\n", "rnn_input", ",", "cfg", ".", "architecture", ".", "rnn_size", ",", "state_in", ",", "batch_size", ",", "rnn_mask", "\n", ")", "\n", "features_fc", "=", "after_rnn_reshape", "(", "rnn_output", ")", "\n", "\n", "# policy heads", "\n", "spawn_logits", ",", "spawn_spatial_logits", "=", "logits_layer_single_spatial", "(", "\n", "features_fc", ",", "act_dim_spell", ",", "act_dim_spatial", ",", "name", "=", "\"Spawn\"", "\n", ")", "\n", "\n", "spell_logits", ",", "spell_spatial_logits", "=", "logits_layer_single_spatial", "(", "\n", "features_fc", ",", "act_dim_spell", ",", "act_dim_spatial", ",", "name", "=", "\"Spell\"", "\n", ")", "\n", "\n", "logits_spell", "=", "if_spawn_spell", "*", "spawn_logits", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "spell_logits", "\n", "\n", "if", "cfg", ".", "hyperparameters", ".", "bias_noops", ":", "\n", "# noop bias for all noop actions", "\n", "        ", "logit_bias", "=", "tf", ".", "zeros", "(", "act_dim_spell", ")", "\n", "# previously used -3.0 + bias according to number of noop actions", "\n", "# + bias according to number of spatial actions", "\n", "noop_bias", "=", "-", "3.0", "+", "np", ".", "log", "(", "cfg", ".", "spells", ".", "num_noops", ")", "-", "np", ".", "log", "(", "act_dim_spatial", ")", "\n", "for", "spell", "in", "cfg", ".", "spells", ".", "enabled_spells", ":", "\n", "            ", "if", "spell", ".", "is_noop", ":", "\n", "                ", "spell_idx", "=", "cfg", ".", "spells", ".", "spell_to_idx", "(", "spell", ")", "\n", "logit_bias", "+=", "noop_bias", "*", "tf", ".", "one_hot", "(", "spell_idx", ",", "depth", "=", "act_dim_spell", ")", "\n", "\n", "", "", "logits_spell", "=", "logits_spell", "+", "logit_bias", "\n", "\n", "", "logits_spatial", "=", "(", "\n", "if_spawn_spell", "*", "spawn_spatial_logits", "\n", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "spell_spatial_logits", "\n", ")", "\n", "logits_spatial", "=", "tf", ".", "reshape", "(", "\n", "logits_spatial", ",", "shape", "=", "[", "-", "1", ",", "act_dim_spell", ",", "act_dim_spatial", "]", "\n", ")", "\n", "\n", "# Sample spell and argmax spell.", "\n", "logprob_valid_spell", "=", "logits_spell", "+", "logits_mask_spell", "\n", "pi_spell_batch", "=", "tf", ".", "multinomial", "(", "logprob_valid_spell", ",", "1", ",", "name", "=", "\"SampleSpell\"", ")", "\n", "pi_spell", "=", "tf", ".", "squeeze", "(", "pi_spell_batch", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpell\"", ")", "\n", "pi_spell_argmax", "=", "tf", ".", "argmax", "(", "logprob_valid_spell", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpellArgmax\"", ")", "\n", "\n", "# Prepare spatial logits for sampling.", "\n", "logits_spatial_pi", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "pi_spell", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logits_spatial_pi", "=", "tf", ".", "identity", "(", "logits_spatial_pi", ",", "name", "=", "\"LogitsSpatialPi\"", ")", "\n", "\n", "logits_spatial_a", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "a", "[", "\"spell\"", "]", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logits_spatial_a", "=", "tf", ".", "identity", "(", "logits_spatial_a", ",", "name", "=", "\"LogitsSpatialA\"", ")", "\n", "\n", "# Sample and argmax X and Y.", "\n", "pi_spatial", "=", "tf", ".", "squeeze", "(", "\n", "tf", ".", "multinomial", "(", "logits_spatial_pi", ",", "1", ",", "name", "=", "\"SampleSpatial\"", ")", ",", "\n", "axis", "=", "1", ",", "\n", "name", "=", "\"PiSpatial\"", ",", "\n", ")", "\n", "pi_spatial_argmax", "=", "tf", ".", "argmax", "(", "logits_spatial_pi", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpatialArgmax\"", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"Logp\"", ")", ":", "\n", "        ", "logp_valid_spell", "=", "tf", ".", "clip_by_value", "(", "logprob_valid_spell", ",", "np", ".", "log", "(", "1e-10", ")", ",", "0", ")", "\n", "logp_a_spell", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "a", "[", "\"spell\"", "]", ",", "depth", "=", "act_dim_spell", ")", "*", "logp_valid_spell", ",", "axis", "=", "1", "\n", ")", "\n", "logp_pi_spell", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "pi_spell", ",", "depth", "=", "act_dim_spell", ")", "*", "logp_valid_spell", ",", "axis", "=", "1", "\n", ")", "\n", "\n", "logp_pi_spatial", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "pi_spatial", ",", "depth", "=", "act_dim_spatial", ")", "\n", "*", "tf", ".", "nn", ".", "log_softmax", "(", "logits_spatial_pi", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "\n", "logp_a_spatial", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "a_spatial", ",", "depth", "=", "act_dim_spatial", ")", "\n", "*", "tf", ".", "nn", ".", "log_softmax", "(", "logits_spatial_a", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "\n", "logp_a", "=", "logp_a_spell", "+", "logp_a_spatial", "\n", "logp_pi", "=", "logp_pi_spell", "+", "logp_pi_spatial", "\n", "\n", "pi", "=", "{", "\n", "\"spell\"", ":", "pi_spell", ",", "\n", "\"spatial\"", ":", "pi_spatial", ",", "\n", "\"spell_argmax\"", ":", "pi_spell_argmax", ",", "\n", "\"spatial_argmax\"", ":", "pi_spatial_argmax", ",", "\n", "}", "\n", "\n", "return", "pi", ",", "logp_a", ",", "logp_pi", ",", "state_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.rnn_policy_value_network": [[465, 600], ["tensorflow.log", "layers.non_spatial_layer", "layers.spatial_layer", "layers.concat_layer", "layers.before_rnn_reshape", "layers.rnn_layer", "layers.after_rnn_reshape", "layers.mlp", "layers.logits_layer_single_spatial", "layers.logits_layer_single_spatial", "tensorflow.reshape", "tensorflow.multinomial", "tensorflow.squeeze", "tensorflow.argmax", "tensorflow.reduce_sum", "tensorflow.identity", "tensorflow.reduce_sum", "tensorflow.identity", "tensorflow.squeeze", "tensorflow.argmax", "tensorflow.zeros", "tensorflow.multinomial", "tensorflow.name_scope", "tensorflow.clip_by_value", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "numpy.log", "tensorflow.expand_dims", "tensorflow.expand_dims", "numpy.log", "numpy.log", "cfg.spells.spell_to_idx", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.nn.log_softmax", "tensorflow.one_hot", "tensorflow.nn.log_softmax", "tensorflow.one_hot"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.non_spatial_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.spatial_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.concat_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.before_rnn_reshape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.rnn_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.after_rnn_reshape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer_single_spatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer_single_spatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx"], ["", "", "def", "rnn_policy_value_network", "(", "x", ",", "a", ",", "action_space", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"\n    Recurrent policy-value network with conditioned spatial output, with regards\n    to sampled spell output.\n    \"\"\"", "\n", "act_dim_spell", "=", "action_space", "[", "\"spell\"", "]", ".", "n", "\n", "act_dim_spatial", "=", "action_space", "[", "\"spatial\"", "]", ".", "n", "\n", "a_spatial", "=", "a", "[", "\"spatial\"", "]", "\n", "batch_size", "=", "x", "[", "\"batch_size\"", "]", "\n", "rnn_mask", "=", "x", "[", "\"rnn_mask\"", "]", "\n", "state_in", "=", "x", "[", "\"state_in\"", "]", "\n", "\n", "if_spawn_spell", "=", "x", "[", "\"if_spawn_spell\"", "]", "\n", "mask_spawn", "=", "(", "\n", "if_spawn_spell", "*", "cfg", ".", "spells", ".", "mask_spawn", "\n", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "cfg", ".", "spells", ".", "mask_nonspawn", "\n", ")", "\n", "mask_spell", "=", "mask_spawn", "*", "x", "[", "\"mask_spell\"", "]", "\n", "logits_mask_spell", "=", "tf", ".", "log", "(", "mask_spell", ")", "\n", "\n", "non_spatial_features", "=", "non_spatial_layer", "(", "\n", "x", ",", "cfg", ".", "architecture", ".", "shared_params", ",", "\"DenseNonSpatial\"", "\n", ")", "\n", "spatial_features", "=", "spatial_layer", "(", "x", ",", "cfg", ".", "architecture", ".", "shared_params", ",", "\"ConvSpatial\"", ")", "\n", "\n", "# rnn block", "\n", "concat_features", "=", "concat_layer", "(", "non_spatial_features", ",", "spatial_features", ")", "\n", "rnn_input", "=", "before_rnn_reshape", "(", "concat_features", ",", "batch_size", ")", "\n", "rnn_output", ",", "state_out", "=", "rnn_layer", "(", "\n", "rnn_input", ",", "cfg", ".", "architecture", ".", "rnn_size", ",", "state_in", ",", "batch_size", ",", "rnn_mask", "\n", ")", "\n", "features_fc", "=", "after_rnn_reshape", "(", "rnn_output", ")", "\n", "\n", "# value head", "\n", "v", "=", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"fc_units_concat\"", "]", ",", "1", "]", ",", "\n", "activation", "=", "tf", ".", "tanh", ",", "\n", "output_activation", "=", "None", ",", "\n", "name", "=", "\"Vf\"", ",", "\n", ")", "\n", "\n", "# policy heads", "\n", "spawn_logits", ",", "spawn_spatial_logits", "=", "logits_layer_single_spatial", "(", "\n", "features_fc", ",", "act_dim_spell", ",", "act_dim_spatial", ",", "name", "=", "\"Spawn\"", "\n", ")", "\n", "\n", "spell_logits", ",", "spell_spatial_logits", "=", "logits_layer_single_spatial", "(", "\n", "features_fc", ",", "act_dim_spell", ",", "act_dim_spatial", ",", "name", "=", "\"Spell\"", "\n", ")", "\n", "\n", "logits_spell", "=", "if_spawn_spell", "*", "spawn_logits", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "spell_logits", "\n", "\n", "if", "cfg", ".", "hyperparameters", ".", "bias_noops", ":", "\n", "# noop bias for all noop actions", "\n", "        ", "logit_bias", "=", "tf", ".", "zeros", "(", "act_dim_spell", ")", "\n", "# previously used -3.0 + bias according to number of noop actions", "\n", "# + bias according to number of spatial actions", "\n", "noop_bias", "=", "-", "3.0", "+", "np", ".", "log", "(", "cfg", ".", "spells", ".", "num_noops", ")", "-", "np", ".", "log", "(", "act_dim_spatial", ")", "\n", "for", "spell", "in", "cfg", ".", "spells", ".", "enabled_spells", ":", "\n", "            ", "if", "spell", ".", "is_noop", ":", "\n", "                ", "spell_idx", "=", "cfg", ".", "spells", ".", "spell_to_idx", "(", "spell", ")", "\n", "logit_bias", "+=", "noop_bias", "*", "tf", ".", "one_hot", "(", "spell_idx", ",", "depth", "=", "act_dim_spell", ")", "\n", "\n", "", "", "logits_spell", "=", "logits_spell", "+", "logit_bias", "\n", "\n", "", "logits_spatial", "=", "(", "\n", "if_spawn_spell", "*", "spawn_spatial_logits", "\n", "+", "(", "1.0", "-", "if_spawn_spell", ")", "*", "spell_spatial_logits", "\n", ")", "\n", "logits_spatial", "=", "tf", ".", "reshape", "(", "\n", "logits_spatial", ",", "shape", "=", "[", "-", "1", ",", "act_dim_spell", ",", "act_dim_spatial", "]", "\n", ")", "\n", "\n", "# Sample spell and argmax spell.", "\n", "logprob_valid_spell", "=", "logits_spell", "+", "logits_mask_spell", "\n", "pi_spell_batch", "=", "tf", ".", "multinomial", "(", "logprob_valid_spell", ",", "1", ",", "name", "=", "\"SampleSpell\"", ")", "\n", "pi_spell", "=", "tf", ".", "squeeze", "(", "pi_spell_batch", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpell\"", ")", "\n", "pi_spell_argmax", "=", "tf", ".", "argmax", "(", "logprob_valid_spell", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpellArgmax\"", ")", "\n", "\n", "# Prepare spatial logits for sampling.", "\n", "logits_spatial_pi", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "pi_spell", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logits_spatial_pi", "=", "tf", ".", "identity", "(", "logits_spatial_pi", ",", "name", "=", "\"LogitsSpatialPi\"", ")", "\n", "\n", "logits_spatial_a", "=", "tf", ".", "reduce_sum", "(", "\n", "logits_spatial", "\n", "*", "tf", ".", "expand_dims", "(", "tf", ".", "one_hot", "(", "a", "[", "\"spell\"", "]", ",", "depth", "=", "act_dim_spell", ")", ",", "axis", "=", "2", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "logits_spatial_a", "=", "tf", ".", "identity", "(", "logits_spatial_a", ",", "name", "=", "\"LogitsSpatialA\"", ")", "\n", "\n", "# Sample and argmax X and Y.", "\n", "pi_spatial", "=", "tf", ".", "squeeze", "(", "\n", "tf", ".", "multinomial", "(", "logits_spatial_pi", ",", "1", ",", "name", "=", "\"SampleSpatial\"", ")", ",", "\n", "axis", "=", "1", ",", "\n", "name", "=", "\"PiSpatial\"", ",", "\n", ")", "\n", "pi_spatial_argmax", "=", "tf", ".", "argmax", "(", "logits_spatial_pi", ",", "axis", "=", "1", ",", "name", "=", "\"PiSpatialArgmax\"", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"Logp\"", ")", ":", "\n", "        ", "logp_valid_spell", "=", "tf", ".", "clip_by_value", "(", "logprob_valid_spell", ",", "np", ".", "log", "(", "1e-10", ")", ",", "0", ")", "\n", "logp_a_spell", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "a", "[", "\"spell\"", "]", ",", "depth", "=", "act_dim_spell", ")", "*", "logp_valid_spell", ",", "axis", "=", "1", "\n", ")", "\n", "logp_pi_spell", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "pi_spell", ",", "depth", "=", "act_dim_spell", ")", "*", "logp_valid_spell", ",", "axis", "=", "1", "\n", ")", "\n", "\n", "logp_pi_spatial", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "pi_spatial", ",", "depth", "=", "act_dim_spatial", ")", "\n", "*", "tf", ".", "nn", ".", "log_softmax", "(", "logits_spatial_pi", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "\n", "logp_a_spatial", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "one_hot", "(", "a_spatial", ",", "depth", "=", "act_dim_spatial", ")", "\n", "*", "tf", ".", "nn", ".", "log_softmax", "(", "logits_spatial_a", ")", ",", "\n", "axis", "=", "1", ",", "\n", ")", "\n", "\n", "logp_a", "=", "logp_a_spell", "+", "logp_a_spatial", "\n", "logp_pi", "=", "logp_pi_spell", "+", "logp_pi_spatial", "\n", "\n", "pi", "=", "{", "\n", "\"spell\"", ":", "pi_spell", ",", "\n", "\"spatial\"", ":", "pi_spatial", ",", "\n", "\"spell_argmax\"", ":", "pi_spell_argmax", ",", "\n", "\"spatial_argmax\"", ":", "pi_spatial_argmax", ",", "\n", "}", "\n", "\n", "return", "pi", ",", "logp_a", ",", "logp_pi", ",", "v", ",", "state_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.mlp_value_network": [[607, 639], ["layers.mlp", "layers.conv2d", "tensorflow.concat", "layers.mlp", "tensorflow.layers.flatten"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.conv2d", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp"], ["", "", "def", "mlp_value_network", "(", "x", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"MLP value network.\"\"\"", "\n", "non_spatial_features", "=", "mlp", "(", "\n", "x", "[", "\"non_spatial\"", "]", ",", "\n", "hidden_sizes", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"fc_units_non_spatial\"", "]", "]", ",", "\n", "activation", "=", "None", ",", "\n", "output_activation", "=", "tf", ".", "tanh", ",", "\n", "name", "=", "\"DenseNonSpatial\"", ",", "\n", ")", "\n", "spatial_features", "=", "conv2d", "(", "\n", "x", "[", "\"spatial\"", "]", ",", "\n", "filters_list", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"conv_filters\"", "]", "]", ",", "\n", "kernel_size_list", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"conv_kernel_size\"", "]", "]", ",", "\n", "strides_list", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"conv_strides\"", "]", "]", ",", "\n", "names", "=", "[", "\"ConvSpatial\"", "]", ",", "\n", ")", "\n", "\n", "features_fc", "=", "tf", ".", "concat", "(", "\n", "[", "non_spatial_features", ",", "tf", ".", "layers", ".", "flatten", "(", "spatial_features", ")", "]", ",", "\n", "axis", "=", "1", ",", "\n", "name", "=", "\"Concat\"", ",", "\n", ")", "\n", "\n", "v", "=", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"fc_units_concat\"", "]", ",", "1", "]", ",", "\n", "activation", "=", "tf", ".", "tanh", ",", "\n", "output_activation", "=", "None", ",", "\n", "name", "=", "\"Vf\"", ",", "\n", ")", "\n", "\n", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.rnn_value_network": [[641, 679], ["layers.mlp", "layers.conv2d", "layers.concat_layer", "layers.before_rnn_reshape", "layers.rnn_layer", "layers.after_rnn_reshape", "layers.mlp"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.conv2d", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.concat_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.before_rnn_reshape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.rnn_layer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.after_rnn_reshape", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp"], ["", "def", "rnn_value_network", "(", "x", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"Recurrent value network.\"\"\"", "\n", "batch_size", "=", "x", "[", "\"batch_size\"", "]", "\n", "rnn_mask", "=", "x", "[", "\"rnn_mask\"", "]", "\n", "state_in", "=", "x", "[", "\"state_in\"", "]", "\n", "\n", "non_spatial_features", "=", "mlp", "(", "\n", "x", "[", "\"non_spatial\"", "]", ",", "\n", "hidden_sizes", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"fc_units_non_spatial\"", "]", "]", ",", "\n", "activation", "=", "None", ",", "\n", "output_activation", "=", "tf", ".", "tanh", ",", "\n", "name", "=", "\"DenseNonSpatial\"", ",", "\n", ")", "\n", "spatial_features", "=", "conv2d", "(", "\n", "x", "[", "\"spatial\"", "]", ",", "\n", "filters_list", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"conv_filters\"", "]", "]", ",", "\n", "kernel_size_list", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"conv_kernel_size\"", "]", "]", ",", "\n", "strides_list", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"conv_strides\"", "]", "]", ",", "\n", "names", "=", "[", "\"ConvSpatial\"", "]", ",", "\n", ")", "\n", "\n", "# rnn block", "\n", "concat_features", "=", "concat_layer", "(", "non_spatial_features", ",", "spatial_features", ")", "\n", "rnn_input", "=", "before_rnn_reshape", "(", "concat_features", ",", "batch_size", ")", "\n", "rnn_output", ",", "state_out", "=", "rnn_layer", "(", "\n", "rnn_input", ",", "cfg", ".", "architecture", ".", "rnn_size", ",", "state_in", ",", "batch_size", ",", "rnn_mask", "\n", ")", "\n", "features_fc", "=", "after_rnn_reshape", "(", "rnn_output", ")", "\n", "\n", "v", "=", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "cfg", ".", "architecture", ".", "value_params", "[", "\"fc_units_concat\"", "]", ",", "1", "]", ",", "\n", "activation", "=", "tf", ".", "tanh", ",", "\n", "output_activation", "=", "None", ",", "\n", "name", "=", "\"Vf\"", ",", "\n", ")", "\n", "\n", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.heroic_actor_critic": [[686, 700], ["tensorflow.zeros", "tensorflow.variable_scope", "core_ppo_heroic.mlp_policy_network", "tensorflow.variable_scope", "tensorflow.squeeze", "core_ppo_heroic.mlp_value_network"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.mlp_policy_network", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.mlp_value_network"], ["", "def", "heroic_actor_critic", "(", "x_ph", ",", "a_ph", ",", "action_space", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"Builds a graph for an actor-critic policy and value network for Heroic.\"\"\"", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "\"PolicyMain\"", ")", ":", "\n", "        ", "(", "pi", ",", "logp", ",", "logp_pi", ",", ")", "=", "mlp_policy_network", "(", "x_ph", ",", "a_ph", ",", "action_space", ",", "cfg", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"ValueFunctionMain\"", ")", ":", "\n", "        ", "v", "=", "tf", ".", "squeeze", "(", "mlp_value_network", "(", "x_ph", ",", "cfg", ")", ",", "axis", "=", "1", ")", "\n", "\n", "# dummy state out tensor for RNN compatibility, should have the correct shape", "\n", "", "dummy_state_out", "=", "tf", ".", "zeros", "(", "\n", "shape", "=", "cfg", ".", "architecture", ".", "empty_rnn_state", ".", "shape", ",", "name", "=", "\"dummy_state_out\"", "\n", ")", "\n", "\n", "return", "pi", ",", "logp", ",", "logp_pi", ",", "v", ",", "dummy_state_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.heroic_actor_critic_unified_network": [[702, 715], ["tensorflow.zeros", "tensorflow.variable_scope", "core_ppo_heroic.mlp_policy_value_network", "tensorflow.squeeze"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.mlp_policy_value_network"], ["", "def", "heroic_actor_critic_unified_network", "(", "x_ph", ",", "a_ph", ",", "action_space", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"Builds a graph for unified actor-critic policy-value network for Heroic.\"\"\"", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "\"PolicyAndValueMain\"", ")", ":", "\n", "        ", "pi", ",", "logp", ",", "logp_pi", ",", "v", "=", "mlp_policy_value_network", "(", "x_ph", ",", "a_ph", ",", "action_space", ",", "cfg", ")", "\n", "v", "=", "tf", ".", "squeeze", "(", "v", ",", "axis", "=", "1", ")", "\n", "\n", "# dummy state out tensor for RNN compatibility, should have the correct shape", "\n", "", "dummy_state_out", "=", "tf", ".", "zeros", "(", "\n", "shape", "=", "cfg", ".", "architecture", ".", "empty_rnn_state", ".", "shape", ",", "name", "=", "\"dummy_state_out\"", "\n", ")", "\n", "\n", "return", "pi", ",", "logp", ",", "logp_pi", ",", "v", ",", "dummy_state_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.heroic_rnn_actor_critic": [[717, 726], ["tensorflow.variable_scope", "core_ppo_heroic.rnn_policy_network", "tensorflow.variable_scope", "tensorflow.squeeze", "core_ppo_heroic.rnn_value_network"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.rnn_policy_network", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.rnn_value_network"], ["", "def", "heroic_rnn_actor_critic", "(", "x_ph", ",", "a_ph", ",", "action_space", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"Builds a graph for an actor-critic policy and value network for Heroic.\"\"\"", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "\"PolicyMain\"", ")", ":", "\n", "        ", "pi", ",", "logp", ",", "logp_pi", ",", "state_out", "=", "rnn_policy_network", "(", "x_ph", ",", "a_ph", ",", "action_space", ",", "cfg", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"ValueFunctionMain\"", ")", ":", "\n", "        ", "v", "=", "tf", ".", "squeeze", "(", "rnn_value_network", "(", "x_ph", ",", "cfg", ")", ",", "axis", "=", "1", ")", "\n", "\n", "", "return", "pi", ",", "logp", ",", "logp_pi", ",", "v", ",", "state_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.heroic_rnn_actor_critic_unified_network": [[728, 738], ["tensorflow.variable_scope", "core_ppo_heroic.rnn_policy_value_network", "tensorflow.squeeze"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.rnn_policy_value_network"], ["", "def", "heroic_rnn_actor_critic_unified_network", "(", "x_ph", ",", "a_ph", ",", "action_space", ",", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"Builds a graph for an rnn actor-critic policy and value network for Heroic.\"\"\"", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "\"PolicyAndValueMain\"", ")", ":", "\n", "        ", "pi", ",", "logp", ",", "logp_pi", ",", "v", ",", "state_out", "=", "rnn_policy_value_network", "(", "\n", "x_ph", ",", "a_ph", ",", "action_space", ",", "cfg", "\n", ")", "\n", "v", "=", "tf", ".", "squeeze", "(", "v", ",", "axis", "=", "1", ")", "\n", "\n", "", "return", "pi", ",", "logp", ",", "logp_pi", ",", "v", ",", "state_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.core_ppo_heroic.actor_critic_fn": [[740, 774], ["None"], "function", ["None"], ["", "def", "actor_critic_fn", "(", "cfg", ":", "TrainingCfg", ")", ":", "\n", "    ", "\"\"\"\n    Returns an actor-critic fn depending on cfg.\n\n    Actor-critic is a function which takes in placeholder symbols\n    for state, ``x_ph``, and action, ``a_ph``, and returns the main\n    outputs from the agent's Tensorflow computation graph:\n\n    ===========  ================  ======================================\n    Symbol       Shape             Description\n    ===========  ================  ======================================\n    ``pi``       (batch, act_dim)  | Samples actions from policy given\n                                   | states.\n    ``logp``     (batch,)          | Gives log probability, according to\n                                   | the policy, of taking actions ``a_ph``\n                                   | in states ``x_non_spatial_ph``.\n    ``logp_pi``  (batch,)          | Gives log probability, according to\n                                   | the policy, of the action sampled by\n                                   | ``pi``.\n    ``v``        (batch,)          | Gives the value estimate for states\n                                   | in ``x_ph``. (Critical: make sure\n                                   | to flatten this!)\n    ===========  ================  ======================================\n    \"\"\"", "\n", "if", "cfg", ".", "architecture", ".", "rnn", ":", "\n", "        ", "if", "cfg", ".", "architecture", ".", "unified_policy_value", ":", "\n", "            ", "return", "heroic_rnn_actor_critic_unified_network", "\n", "", "else", ":", "\n", "            ", "return", "heroic_rnn_actor_critic", "\n", "", "", "else", ":", "\n", "        ", "if", "cfg", ".", "architecture", ".", "unified_policy_value", ":", "\n", "            ", "return", "heroic_actor_critic_unified_network", "\n", "", "else", ":", "\n", "            ", "return", "heroic_actor_critic", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp": [[5, 12], ["enumerate", "tensorflow.layers.dense", "tensorflow.layers.dense", "len"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.dense", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.dense"], ["def", "mlp", "(", "x", ",", "hidden_sizes", ",", "activation", ",", "output_activation", ",", "name", "=", "None", ")", ":", "\n", "    ", "for", "i", ",", "h", "in", "enumerate", "(", "hidden_sizes", "[", ":", "-", "1", "]", ")", ":", "\n", "        ", "layer_name", "=", "name", "+", "\"/Hidden%02d\"", "%", "(", "i", "+", "1", ")", "if", "name", "else", "None", "\n", "x", "=", "tf", ".", "layers", ".", "dense", "(", "x", ",", "units", "=", "h", ",", "activation", "=", "activation", ",", "name", "=", "layer_name", ")", "\n", "", "layer_name", "=", "name", "+", "\"/Hidden%02d\"", "%", "len", "(", "hidden_sizes", ")", "if", "name", "else", "None", "\n", "return", "tf", ".", "layers", ".", "dense", "(", "\n", "x", ",", "units", "=", "hidden_sizes", "[", "-", "1", "]", ",", "activation", "=", "output_activation", ",", "name", "=", "layer_name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.conv2d": [[15, 31], ["zip", "tensorflow.layers.conv2d", "len"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.conv2d"], ["", "def", "conv2d", "(", "x", ",", "filters_list", ",", "kernel_size_list", ",", "strides_list", ",", "names", "=", "None", ")", ":", "\n", "\n", "    ", "names", "=", "names", "or", "[", "None", "]", "*", "len", "(", "filters_list", ")", "\n", "for", "filters", ",", "kernel_size", ",", "strides", ",", "name", "in", "zip", "(", "\n", "filters_list", ",", "kernel_size_list", ",", "strides_list", ",", "names", "\n", ")", ":", "\n", "        ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "\n", "filters", "=", "filters", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "strides", "=", "strides", ",", "\n", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "name", "=", "name", ",", "\n", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.non_spatial_layer": [[33, 40], ["layers.mlp"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp"], ["", "def", "non_spatial_layer", "(", "x", ",", "params", ",", "name", "=", "None", ")", ":", "\n", "    ", "return", "mlp", "(", "\n", "x", "[", "\"non_spatial\"", "]", ",", "\n", "hidden_sizes", "=", "[", "params", "[", "\"fc_units_non_spatial\"", "]", "]", ",", "\n", "activation", "=", "None", ",", "\n", "output_activation", "=", "tf", ".", "tanh", ",", "\n", "name", "=", "name", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.spatial_layer": [[43, 50], ["layers.conv2d"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.conv2d"], ["", "def", "spatial_layer", "(", "x", ",", "params", ",", "name", "=", "None", ")", ":", "\n", "    ", "return", "conv2d", "(", "\n", "x", "[", "\"spatial\"", "]", ",", "\n", "filters_list", "=", "[", "params", "[", "\"conv_filters\"", "]", "]", ",", "\n", "kernel_size_list", "=", "[", "params", "[", "\"conv_kernel_size\"", "]", "]", ",", "\n", "strides_list", "=", "[", "params", "[", "\"conv_strides\"", "]", "]", ",", "\n", "names", "=", "[", "name", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.concat_mlp_layer": [[53, 65], ["tensorflow.concat", "layers.mlp", "tensorflow.layers.flatten"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp"], ["", "def", "concat_mlp_layer", "(", "non_spatial_features", ",", "spatial_features", ",", "params", ",", "name", "=", "None", ")", ":", "\n", "    ", "features_fc", "=", "tf", ".", "concat", "(", "\n", "[", "non_spatial_features", ",", "tf", ".", "layers", ".", "flatten", "(", "spatial_features", ")", "]", ",", "\n", "axis", "=", "1", ",", "\n", "name", "=", "\"Concat%s\"", "%", "(", "name", "or", "\"\"", ")", ",", "\n", ")", "\n", "return", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "params", "[", "\"fc_units_concat\"", "]", "]", ",", "\n", "activation", "=", "None", ",", "\n", "output_activation", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "name", "=", "\"AfterConcat%s\"", "%", "(", "name", "or", "\"\"", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer": [[68, 92], ["layers.mlp", "layers.mlp", "layers.mlp"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp"], ["", "def", "logits_layer", "(", "features_fc", ",", "num_logits_spell", ",", "num_logits_x", ",", "num_logits_y", ",", "name", "=", "None", ")", ":", "\n", "    ", "\"\"\"Returns three logit outputs, for spell type, X and Y.\"\"\"", "\n", "spell_logits", "=", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "num_logits_spell", "]", ",", "\n", "activation", "=", "None", ",", "\n", "output_activation", "=", "None", ",", "\n", "name", "=", "\"LogitsSpellType%s\"", "%", "(", "name", "or", "\"\"", ")", ",", "\n", ")", "\n", "y_logits", "=", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "num_logits_y", "*", "num_logits_spell", "]", ",", "\n", "activation", "=", "None", ",", "\n", "output_activation", "=", "None", ",", "\n", "name", "=", "\"LogitsY%s\"", "%", "(", "name", "or", "\"\"", ")", ",", "\n", ")", "\n", "x_logits", "=", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "num_logits_x", "*", "num_logits_spell", "]", ",", "\n", "activation", "=", "None", ",", "\n", "output_activation", "=", "None", ",", "\n", "name", "=", "\"LogitsX%s\"", "%", "(", "name", "or", "\"\"", ")", ",", "\n", ")", "\n", "return", "spell_logits", ",", "x_logits", ",", "y_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.logits_layer_single_spatial": [[94, 115], ["layers.mlp", "layers.mlp"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.mlp"], ["", "def", "logits_layer_single_spatial", "(", "\n", "features_fc", ",", "num_logits_spell", ",", "num_logits_spatial", ",", "name", "=", "None", "\n", ")", ":", "\n", "    ", "\"\"\"Returns three logit outputs, for spell type and spatial location\n    (single number).\"\"\"", "\n", "spell_logits", "=", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "num_logits_spell", "]", ",", "\n", "activation", "=", "None", ",", "\n", "output_activation", "=", "None", ",", "\n", "name", "=", "\"LogitsSpellType%s\"", "%", "(", "name", "or", "\"\"", ")", ",", "\n", ")", "\n", "spatial_logits", "=", "mlp", "(", "\n", "features_fc", ",", "\n", "hidden_sizes", "=", "[", "num_logits_spatial", "*", "num_logits_spell", "]", ",", "\n", "activation", "=", "None", ",", "\n", "output_activation", "=", "None", ",", "\n", "name", "=", "\"LogitsSpatial%s\"", "%", "(", "name", "or", "\"\"", ")", ",", "\n", ")", "\n", "\n", "return", "spell_logits", ",", "spatial_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.before_rnn_reshape": [[117, 121], ["tensorflow.reshape"], "function", ["None"], ["", "def", "before_rnn_reshape", "(", "concat_obs", ",", "batch_size", ")", ":", "\n", "    ", "num_feat", "=", "concat_obs", ".", "shape", "[", "1", "]", "\n", "return", "tf", ".", "reshape", "(", "\n", "concat_obs", ",", "shape", "=", "[", "-", "1", ",", "batch_size", ",", "num_feat", "]", ",", "name", "=", "\"BeforeRnnReshape\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.after_rnn_reshape": [[124, 126], ["None"], "function", ["None"], ["", "def", "after_rnn_reshape", "(", "rnn_output", ")", ":", "\n", "    ", "return", "rnn_output", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.rnn_layer": [[128, 158], ["tensorflow.nn.rnn_cell.BasicLSTMCell", "tensorflow.zeros", "tensorflow.constant", "tensorflow.while_loop", "tf.nn.rnn_cell.BasicLSTMCell.", "tensorflow.concat", "tensorflow.less", "tf.constant.get_shape", "rnn_input.get_shape", "state_out.get_shape", "rnn_mask.get_shape", "tensorflow.TensorShape", "batch_size.get_shape"], "function", ["None"], ["", "def", "rnn_layer", "(", "rnn_input", ",", "size", ",", "state_in", ",", "batch_size", ",", "rnn_mask", ")", ":", "\n", "    ", "rnn_cell", "=", "tf", ".", "nn", ".", "rnn_cell", ".", "BasicLSTMCell", "(", "num_units", "=", "size", ",", "state_is_tuple", "=", "False", ")", "\n", "rnn_output", "=", "tf", ".", "zeros", "(", "(", "0", ",", "size", ")", ")", "\n", "state_out", "=", "state_in", "\n", "step", "=", "tf", ".", "constant", "(", "0", ",", "dtype", "=", "tf", ".", "int64", ")", "\n", "\n", "def", "rnn_loop", "(", "step", ",", "rnn_input", ",", "state_out", ",", "rnn_mask", ",", "rnn_output", ",", "batch_size", ")", ":", "\n", "        ", "masked_state", "=", "(", "1", "-", "rnn_mask", "[", "step", "]", ")", "*", "state_out", "\n", "curr_output", ",", "state_out", "=", "rnn_cell", "(", "rnn_input", "[", ":", ",", "step", ",", ":", "]", ",", "masked_state", ")", "\n", "rnn_output", "=", "tf", ".", "concat", "(", "[", "rnn_output", ",", "curr_output", "]", ",", "axis", "=", "0", ")", "\n", "return", "step", "+", "1", ",", "rnn_input", ",", "state_out", ",", "rnn_mask", ",", "rnn_output", ",", "batch_size", "\n", "\n", "", "def", "rnn_cond", "(", "step", ",", "rnn_input", ",", "state_out", ",", "rnn_mask", ",", "rnn_output", ",", "batch_size", ")", ":", "\n", "        ", "return", "tf", ".", "less", "(", "step", ",", "batch_size", ")", "\n", "\n", "", "step", ",", "rnn_input", ",", "state_out", ",", "rnn_mask", ",", "rnn_output", ",", "batch_size", "=", "tf", ".", "while_loop", "(", "\n", "rnn_cond", ",", "\n", "rnn_loop", ",", "\n", "(", "step", ",", "rnn_input", ",", "state_out", ",", "rnn_mask", ",", "rnn_output", ",", "batch_size", ")", ",", "\n", "shape_invariants", "=", "(", "\n", "step", ".", "get_shape", "(", ")", ",", "\n", "rnn_input", ".", "get_shape", "(", ")", ",", "\n", "state_out", ".", "get_shape", "(", ")", ",", "\n", "rnn_mask", ".", "get_shape", "(", ")", ",", "\n", "tf", ".", "TensorShape", "(", "[", "None", ",", "size", "]", ")", ",", "\n", "batch_size", ".", "get_shape", "(", ")", ",", "\n", ")", ",", "\n", ")", "\n", "\n", "return", "rnn_output", ",", "state_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.concat_layer": [[172, 177], ["tensorflow.concat", "tensorflow.layers.flatten"], "function", ["None"], ["", "def", "concat_layer", "(", "non_spatial_features", ",", "spatial_features", ")", ":", "\n", "    ", "return", "tf", ".", "concat", "(", "\n", "[", "non_spatial_features", ",", "tf", ".", "layers", ".", "flatten", "(", "spatial_features", ")", "]", ",", "\n", "axis", "=", "1", ",", "\n", "name", "=", "\"Concat\"", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.layers.noop_spatial_mask": [[180, 197], ["numpy.ones", "numpy.zeros"], "function", ["None"], ["", "def", "noop_spatial_mask", "(", "act_dim_spell", ",", "act_dim_spatial", ")", ":", "\n", "    ", "\"\"\"\n    Creates spatial mask that should be afterwards applied to spatial logits,\n    of shape (1, act_dim_spell, act_dim_spatial), which prevents the gradient flow\n    through the spatial logits of noop.\n    It consists of ones, except for the last row (corresponding to noop) that\n    consists of zeroes only.\n    It assumes that noop is the `last` spell.\n    :param act_dim_spell:\n    :param act_dim_spatial:\n    :return: Spatial mask that should be afterwards applied to spatial logits,\n    of shape (1, act_dim_spell, act_dim_spatial).\n    \"\"\"", "\n", "\n", "spatial_mask", "=", "np", ".", "ones", "(", "(", "1", ",", "act_dim_spell", ",", "act_dim_spatial", ")", ")", "\n", "spatial_mask", "[", "0", ",", "-", "1", ",", ":", "]", "=", "np", ".", "zeros", "(", "act_dim_spatial", ")", "\n", "return", "spatial_mask", "\n", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.combined_shape": [[7, 11], ["numpy.isscalar"], "function", ["None"], ["def", "combined_shape", "(", "length", ",", "shape", "=", "None", ")", ":", "\n", "    ", "if", "shape", "is", "None", ":", "\n", "        ", "return", "(", "length", ",", ")", "\n", "", "return", "(", "length", ",", "shape", ")", "if", "np", ".", "isscalar", "(", "shape", ")", "else", "(", "length", ",", "*", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder": [[13, 15], ["tensorflow.placeholder", "utils.combined_shape"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.combined_shape"], ["", "def", "placeholder", "(", "dim", "=", "None", ",", "name", "=", "None", ")", ":", "\n", "    ", "return", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "combined_shape", "(", "None", ",", "dim", ")", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholders": [[17, 20], ["utils.placeholder", "len", "zip"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder"], ["", "def", "placeholders", "(", "*", "args", ",", "names", "=", "None", ")", ":", "\n", "    ", "names", "=", "names", "or", "[", "None", "]", "*", "len", "(", "args", ")", "\n", "return", "[", "placeholder", "(", "dim", ",", "name", ")", "for", "dim", ",", "name", "in", "zip", "(", "args", ",", "names", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder_from_space": [[22, 29], ["isinstance", "utils.placeholder", "isinstance", "tensorflow.placeholder"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder"], ["", "def", "placeholder_from_space", "(", "space", ",", "name", "=", "None", ")", ":", "\n", "    ", "if", "isinstance", "(", "space", ",", "Box", ")", ":", "\n", "        ", "return", "placeholder", "(", "space", ".", "shape", ",", "name", ")", "\n", "", "elif", "isinstance", "(", "space", ",", "Discrete", ")", ":", "\n", "        ", "return", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", ")", ",", "name", "=", "name", ")", "\n", "\n", "", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholders_from_spaces": [[31, 34], ["utils.placeholder_from_space", "len", "zip"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.placeholder_from_space"], ["", "def", "placeholders_from_spaces", "(", "*", "args", ",", "names", "=", "None", ")", ":", "\n", "    ", "names", "=", "names", "or", "[", "None", "]", "*", "len", "(", "args", ")", "\n", "return", "[", "placeholder_from_space", "(", "space", ",", "name", ")", "for", "space", ",", "name", "in", "zip", "(", "args", ",", "names", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.get_vars": [[36, 38], ["tensorflow.trainable_variables"], "function", ["None"], ["", "def", "get_vars", "(", "scope", "=", "\"\"", ")", ":", "\n", "    ", "return", "[", "x", "for", "x", "in", "tf", ".", "trainable_variables", "(", ")", "if", "scope", "in", "x", ".", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.count_vars": [[40, 43], ["utils.get_vars", "sum", "numpy.prod", "var.shape.as_list"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.get_vars"], ["", "def", "count_vars", "(", "scope", "=", "\"\"", ")", ":", "\n", "    ", "v", "=", "get_vars", "(", "scope", ")", "\n", "return", "sum", "(", "[", "np", ".", "prod", "(", "var", ".", "shape", ".", "as_list", "(", ")", ")", "for", "var", "in", "v", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.discount_cumsum": [[45, 61], ["scipy.signal.lfilter", "float"], "function", ["None"], ["", "def", "discount_cumsum", "(", "x", ",", "discount", ")", ":", "\n", "    ", "\"\"\"\n    magic from rllab for computing discounted cumulative sums of vectors.\n\n    input:\n        vector x,\n        [x0,\n         x1,\n         x2]\n\n    output:\n        [x0 + discount * x1 + discount^2 * x2,\n         x1 + discount * x2,\n         x2]\n    \"\"\"", "\n", "return", "scipy", ".", "signal", ".", "lfilter", "(", "[", "1", "]", ",", "[", "1", ",", "float", "(", "-", "discount", ")", "]", ",", "x", "[", ":", ":", "-", "1", "]", ",", "axis", "=", "0", ")", "[", ":", ":", "-", "1", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.__init__": [[53, 65], ["mpi_tf.MpiAdamOptimizer.comm.Get_size", "mpi_tf.MpiAdamOptimizer._define_collect_grads", "mpi_tf.MpiAdamOptimizer._define_sync_params", "tensorflow.train.AdamOptimizer.__init__"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer._define_collect_grads", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer._define_sync_params", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.__init__"], ["def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "comm", "=", "MPI", ".", "COMM_WORLD", "\n", "self", ".", "num_tasks", "=", "self", ".", "comm", ".", "Get_size", "(", ")", "\n", "\n", "if", "\"grads_and_vars\"", "in", "kwargs", ":", "\n", "# Define py_func operators in the same order as they were", "\n", "# defined when building the model.", "\n", "            ", "self", ".", "_define_collect_grads", "(", "kwargs", "[", "\"grads_and_vars\"", "]", ")", "\n", "self", ".", "_define_sync_params", "(", "kwargs", "[", "\"grads_and_vars\"", "]", ")", "\n", "", "else", ":", "\n", "            ", "tf", ".", "train", ".", "AdamOptimizer", ".", "__init__", "(", "self", ",", "**", "kwargs", ")", "\n", "self", ".", "grads_and_vars", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer._define_collect_grads": [[66, 79], ["mpi_tf.flat_concat", "mpi_tf.MpiAdamOptimizer.comm.Get_size", "numpy.zeros", "tensorflow.py_func", "tensorflow.py_func.set_shape", "mpi_tf.MpiAdamOptimizer.comm.Allreduce", "numpy.divide", "float"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.flat_concat"], ["", "", "def", "_define_collect_grads", "(", "self", ",", "grads_and_vars", ")", ":", "\n", "        ", "flat_grad", "=", "flat_concat", "(", "[", "g", "for", "g", ",", "v", "in", "grads_and_vars", "]", ")", "\n", "num_tasks", "=", "self", ".", "comm", ".", "Get_size", "(", ")", "\n", "buf", "=", "np", ".", "zeros", "(", "flat_grad", ".", "shape", ",", "np", ".", "float32", ")", "\n", "\n", "def", "_collect_grads", "(", "flat_grad", ")", ":", "\n", "            ", "self", ".", "comm", ".", "Allreduce", "(", "flat_grad", ",", "buf", ",", "op", "=", "MPI", ".", "SUM", ")", "\n", "np", ".", "divide", "(", "buf", ",", "float", "(", "num_tasks", ")", ",", "out", "=", "buf", ")", "\n", "return", "buf", "\n", "\n", "", "avg_flat_grad", "=", "tf", ".", "py_func", "(", "_collect_grads", ",", "[", "flat_grad", "]", ",", "tf", ".", "float32", ")", "\n", "avg_flat_grad", ".", "set_shape", "(", "flat_grad", ".", "shape", ")", "\n", "return", "avg_flat_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer._define_sync_params": [[80, 82], ["mpi_tf.sync_params"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.sync_params"], ["", "def", "_define_sync_params", "(", "self", ",", "grads_and_vars", ")", ":", "\n", "        ", "return", "sync_params", "(", "[", "v", "for", "g", ",", "v", "in", "grads_and_vars", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.compute_gradients": [[83, 100], ["super().compute_gradients", "mpi_tf.MpiAdamOptimizer._define_collect_grads", "tensorflow.split", "v.shape.as_list", "int", "numpy.prod", "tensorflow.reshape", "zip"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.compute_gradients", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer._define_collect_grads"], ["", "def", "compute_gradients", "(", "self", ",", "loss", ",", "var_list", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Same as normal compute_gradients, except average grads over processes.\n        \"\"\"", "\n", "grads_and_vars", "=", "super", "(", ")", ".", "compute_gradients", "(", "loss", ",", "var_list", ",", "**", "kwargs", ")", "\n", "self", ".", "grads_and_vars", "=", "[", "(", "g", ",", "v", ")", "for", "g", ",", "v", "in", "grads_and_vars", "if", "g", "is", "not", "None", "]", "\n", "shapes", "=", "[", "v", ".", "shape", ".", "as_list", "(", ")", "for", "g", ",", "v", "in", "self", ".", "grads_and_vars", "]", "\n", "sizes", "=", "[", "int", "(", "np", ".", "prod", "(", "s", ")", ")", "for", "s", "in", "shapes", "]", "\n", "\n", "avg_flat_grad", "=", "self", ".", "_define_collect_grads", "(", "self", ".", "grads_and_vars", ")", "\n", "avg_grads", "=", "tf", ".", "split", "(", "avg_flat_grad", ",", "sizes", ",", "axis", "=", "0", ")", "\n", "avg_grads_and_vars", "=", "[", "\n", "(", "tf", ".", "reshape", "(", "g", ",", "v", ".", "shape", ")", ",", "v", ")", "\n", "for", "g", ",", "(", "_", ",", "v", ")", "in", "zip", "(", "avg_grads", ",", "self", ".", "grads_and_vars", ")", "\n", "]", "\n", "\n", "return", "avg_grads_and_vars", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.apply_gradients": [[101, 109], ["super().apply_gradients", "tensorflow.group", "tensorflow.control_dependencies", "mpi_tf.MpiAdamOptimizer._define_sync_params"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer.apply_gradients", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.MpiAdamOptimizer._define_sync_params"], ["", "def", "apply_gradients", "(", "self", ",", "grads_and_vars", ",", "global_step", "=", "None", ",", "name", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Same as normal apply_gradients, except sync params after update.\n        \"\"\"", "\n", "opt", "=", "super", "(", ")", ".", "apply_gradients", "(", "grads_and_vars", ",", "global_step", ",", "name", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "opt", "]", ")", ":", "\n", "            ", "sync", "=", "self", ".", "_define_sync_params", "(", "grads_and_vars", ")", "\n", "", "return", "tf", ".", "group", "(", "[", "opt", ",", "sync", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.flat_concat": [[8, 10], ["tensorflow.concat", "tensorflow.reshape"], "function", ["None"], ["def", "flat_concat", "(", "xs", ")", ":", "\n", "    ", "return", "tf", ".", "concat", "(", "[", "tf", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", ")", ")", "for", "x", "in", "xs", "]", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.assign_params_from_flat": [[12, 19], ["tensorflow.split", "tensorflow.group", "int", "tensorflow.reshape", "numpy.prod", "mpi_tf.assign_params_from_flat.flat_size"], "function", ["None"], ["", "def", "assign_params_from_flat", "(", "x", ",", "params", ")", ":", "\n", "    ", "def", "flat_size", "(", "p", ")", ":", "\n", "        ", "return", "int", "(", "np", ".", "prod", "(", "p", ".", "shape", ".", "as_list", "(", ")", ")", ")", "# the 'int' is important for scalars", "\n", "\n", "", "splits", "=", "tf", ".", "split", "(", "x", ",", "[", "flat_size", "(", "p", ")", "for", "p", "in", "params", "]", ")", "\n", "new_params", "=", "[", "tf", ".", "reshape", "(", "p_new", ",", "p", ".", "shape", ")", "for", "p", ",", "p_new", "in", "zip", "(", "params", ",", "splits", ")", "]", "\n", "return", "tf", ".", "group", "(", "[", "tf", ".", "assign", "(", "p", ",", "p_new", ")", "for", "p", ",", "p_new", "in", "zip", "(", "params", ",", "new_params", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.define_sync_params": [[21, 29], ["mpi_tf.flat_concat", "tensorflow.py_func", "mpi_tools.broadcast"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.flat_concat", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.broadcast"], ["", "def", "define_sync_params", "(", "params", ")", ":", "\n", "    ", "get_params", "=", "flat_concat", "(", "params", ")", "\n", "\n", "def", "_broadcast", "(", "x", ")", ":", "\n", "        ", "broadcast", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "return", "tf", ".", "py_func", "(", "_broadcast", ",", "[", "get_params", "]", ",", "tf", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.sync_params": [[31, 34], ["mpi_tf.define_sync_params", "mpi_tf.assign_params_from_flat"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.define_sync_params", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.assign_params_from_flat"], ["", "def", "sync_params", "(", "params", ")", ":", "\n", "    ", "synced_params", "=", "define_sync_params", "(", "params", ")", "\n", "return", "assign_params_from_flat", "(", "synced_params", ",", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.sync_all_params": [[36, 39], ["mpi_tf.sync_params", "tensorflow.global_variables"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tf.sync_params"], ["", "def", "sync_all_params", "(", ")", ":", "\n", "    ", "\"\"\"Sync all tf variables across MPI processes.\"\"\"", "\n", "return", "sync_params", "(", "tf", ".", "global_variables", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_fork": [[9, 36], ["os.getenv", "os.environ.copy", "os.environ.copy.update", "subprocess.check_call", "sys.exit", "str"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.update"], ["def", "mpi_fork", "(", "n", ",", "bind_to_core", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Re-launches the current script with workers linked by MPI.\n\n    Also, terminates the original process that launched it.\n\n    Taken almost without modification from the Baselines function of the\n    `same name`:\n    https://github.com/openai/baselines/blob/master/baselines/common/mpi_fork.py\n\n    Args:\n        n (int): Number of process to split into.\n\n        bind_to_core (bool): Bind each MPI process to a core.\n    \"\"\"", "\n", "if", "n", "<=", "1", ":", "\n", "        ", "return", "\n", "", "if", "os", ".", "getenv", "(", "\"IN_MPI\"", ")", "is", "None", ":", "\n", "        ", "env", "=", "os", ".", "environ", ".", "copy", "(", ")", "\n", "env", ".", "update", "(", "MKL_NUM_THREADS", "=", "\"1\"", ",", "OMP_NUM_THREADS", "=", "\"1\"", ",", "IN_MPI", "=", "\"1\"", ")", "\n", "# TODO dimitrijer: swap this with env vars in OpenMPI 4+", "\n", "args", "=", "[", "\"mpirun\"", ",", "\"--allow-run-as-root\"", ",", "\"-np\"", ",", "str", "(", "n", ")", "]", "\n", "if", "bind_to_core", ":", "\n", "            ", "args", "+=", "[", "\"-bind-to\"", ",", "\"core\"", "]", "\n", "", "args", "+=", "[", "sys", ".", "executable", "]", "+", "sys", ".", "argv", "\n", "subprocess", ".", "check_call", "(", "args", ",", "env", "=", "env", ")", "\n", "sys", ".", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.msg": [[38, 40], ["print", "str", "mpi4py.MPI.COMM_WORLD.Get_rank"], "function", ["None"], ["", "", "def", "msg", "(", "m", ",", "string", "=", "\"\"", ")", ":", "\n", "    ", "print", "(", "(", "\"Message from %d: %s \\t \"", "%", "(", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", ",", "string", ")", ")", "+", "str", "(", "m", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id": [[42, 45], ["mpi4py.MPI.COMM_WORLD.Get_rank"], "function", ["None"], ["", "def", "proc_id", "(", ")", ":", "\n", "    ", "\"\"\"Get rank of calling process.\"\"\"", "\n", "return", "MPI", ".", "COMM_WORLD", ".", "Get_rank", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.allreduce": [[47, 49], ["mpi4py.MPI.COMM_WORLD.Allreduce"], "function", ["None"], ["", "def", "allreduce", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "MPI", ".", "COMM_WORLD", ".", "Allreduce", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.num_procs": [[51, 54], ["mpi4py.MPI.COMM_WORLD.Get_size"], "function", ["None"], ["", "def", "num_procs", "(", ")", ":", "\n", "    ", "\"\"\"Count active MPI processes.\"\"\"", "\n", "return", "MPI", ".", "COMM_WORLD", ".", "Get_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.broadcastpy": [[56, 58], ["mpi4py.MPI.COMM_WORLD.bcast"], "function", ["None"], ["", "def", "broadcastpy", "(", "x", ",", "root", "=", "0", ")", ":", "\n", "    ", "return", "MPI", ".", "COMM_WORLD", ".", "bcast", "(", "x", ",", "root", "=", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.broadcast": [[60, 62], ["mpi4py.MPI.COMM_WORLD.Bcast"], "function", ["None"], ["", "def", "broadcast", "(", "x", ",", "root", "=", "0", ")", ":", "\n", "    ", "MPI", ".", "COMM_WORLD", ".", "Bcast", "(", "x", ",", "root", "=", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_op": [[64, 70], ["numpy.asarray", "numpy.zeros_like", "mpi_tools.allreduce", "numpy.isscalar", "mpi4py.MPI.SUM"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.allreduce"], ["", "def", "mpi_op", "(", "x", ",", "op", ")", ":", "\n", "    ", "x", ",", "scalar", "=", "(", "[", "x", "]", ",", "True", ")", "if", "np", ".", "isscalar", "(", "x", ")", "else", "(", "x", ",", "False", ")", "\n", "x", "=", "np", ".", "asarray", "(", "x", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "buff", "=", "np", ".", "zeros_like", "(", "x", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "allreduce", "(", "x", ",", "buff", ",", "op", "=", "op", ")", "\n", "return", "buff", "[", "0", "]", "if", "scalar", "else", "buff", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_sum": [[72, 74], ["mpi_tools.mpi_op"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_op"], ["", "def", "mpi_sum", "(", "x", ")", ":", "\n", "    ", "return", "mpi_op", "(", "x", ",", "MPI", ".", "SUM", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_avg": [[76, 79], ["mpi_tools.mpi_sum", "mpi_tools.num_procs"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_sum", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.num_procs"], ["", "def", "mpi_avg", "(", "x", ")", ":", "\n", "    ", "\"\"\"Average a scalar or vector over MPI processes.\"\"\"", "\n", "return", "mpi_sum", "(", "x", ")", "/", "num_procs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_statistics_scalar": [[81, 104], ["numpy.array", "mpi_tools.mpi_sum", "mpi_tools.mpi_sum", "numpy.sqrt", "numpy.sum", "mpi_tools.mpi_op", "mpi_tools.mpi_op", "numpy.sum", "len", "numpy.min", "numpy.max", "len", "len"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_sum", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_sum", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_op", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_op"], ["", "def", "mpi_statistics_scalar", "(", "x", ",", "with_min_and_max", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Get mean/std and optional min/max of scalar x across MPI processes.\n\n    Args:\n        x: An array containing samples of the scalar to produce statistics\n            for.\n\n        with_min_and_max (bool): If true, return min and max of x in\n            addition to mean and std.\n    \"\"\"", "\n", "x", "=", "np", ".", "array", "(", "x", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "global_sum", ",", "global_n", "=", "mpi_sum", "(", "[", "np", ".", "sum", "(", "x", ")", ",", "len", "(", "x", ")", "]", ")", "\n", "mean", "=", "global_sum", "/", "global_n", "\n", "\n", "global_sum_sq", "=", "mpi_sum", "(", "np", ".", "sum", "(", "(", "x", "-", "mean", ")", "**", "2", ")", ")", "\n", "std", "=", "np", ".", "sqrt", "(", "global_sum_sq", "/", "global_n", ")", "# compute global std", "\n", "\n", "if", "with_min_and_max", ":", "\n", "        ", "global_min", "=", "mpi_op", "(", "np", ".", "min", "(", "x", ")", "if", "len", "(", "x", ")", ">", "0", "else", "np", ".", "inf", ",", "op", "=", "MPI", ".", "MIN", ")", "\n", "global_max", "=", "mpi_op", "(", "np", ".", "max", "(", "x", ")", "if", "len", "(", "x", ")", ">", "0", "else", "-", "np", ".", "inf", ",", "op", "=", "MPI", ".", "MAX", ")", "\n", "return", "mean", ",", "std", ",", "global_min", ",", "global_max", "\n", "", "return", "mean", ",", "std", "\n", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.spell_yaml_representer": [[12, 14], ["dumper.represent_scalar"], "function", ["None"], ["def", "spell_yaml_representer", "(", "dumper", ",", "data", ")", ":", "\n", "    ", "return", "dumper", ".", "represent_scalar", "(", "\"tag:yaml.org,2002:str\"", ",", "\"SPELL_\"", "+", "data", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.spell_yaml_constructor": [[16, 20], ["loader.construct_scalar"], "function", ["None"], ["", "def", "spell_yaml_constructor", "(", "loader", ",", "node", ")", ":", "\n", "    ", "value", "=", "loader", ".", "construct_scalar", "(", "node", ")", "\n", "# Skip 'SPELL_' prefix", "\n", "return", "Spell", "[", "value", "[", "6", ":", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.unit_yaml_representer": [[22, 24], ["dumper.represent_scalar"], "function", ["None"], ["", "def", "unit_yaml_representer", "(", "dumper", ",", "data", ")", ":", "\n", "    ", "return", "dumper", ".", "represent_scalar", "(", "\"tag:yaml.org,2002:str\"", ",", "\"UNIT_\"", "+", "data", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.unit_yaml_constructor": [[26, 30], ["loader.construct_scalar"], "function", ["None"], ["", "def", "unit_yaml_constructor", "(", "loader", ",", "node", ")", ":", "\n", "    ", "value", "=", "loader", ".", "construct_scalar", "(", "node", ")", "\n", "# Skip 'UNIT_' prefix", "\n", "return", "Unit", "[", "value", "[", "5", ":", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.rarity_yaml_representer": [[32, 34], ["dumper.represent_scalar"], "function", ["None"], ["", "def", "rarity_yaml_representer", "(", "dumper", ",", "data", ")", ":", "\n", "    ", "return", "dumper", ".", "represent_scalar", "(", "\"tag:yaml.org,2002:str\"", ",", "\"RARITY_\"", "+", "data", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.rarity_yaml_constructor": [[36, 40], ["loader.construct_scalar"], "function", ["None"], ["", "def", "rarity_yaml_constructor", "(", "loader", ",", "node", ")", ":", "\n", "    ", "value", "=", "loader", ".", "construct_scalar", "(", "node", ")", "\n", "# Skip 'RARITY_' prefix", "\n", "return", "Rarity", "[", "value", "[", "7", ":", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.safe_load_yaml": [[42, 50], ["yaml.add_implicit_resolver", "yaml.add_implicit_resolver", "yaml.add_implicit_resolver", "yaml.add_constructor", "yaml.add_constructor", "yaml.add_constructor", "yaml.safe_load"], "function", ["None"], ["", "def", "safe_load_yaml", "(", "yaml_string", ")", ":", "\n", "    ", "yaml", ".", "add_implicit_resolver", "(", "\"!Spell\"", ",", "SPELL_PATTERN", ",", "Loader", "=", "yaml", ".", "SafeLoader", ")", "\n", "yaml", ".", "add_implicit_resolver", "(", "\"!Unit\"", ",", "UNIT_PATTERN", ",", "Loader", "=", "yaml", ".", "SafeLoader", ")", "\n", "yaml", ".", "add_implicit_resolver", "(", "\"!Rarity\"", ",", "RARITY_PATTERN", ",", "Loader", "=", "yaml", ".", "SafeLoader", ")", "\n", "yaml", ".", "add_constructor", "(", "\"!Spell\"", ",", "spell_yaml_constructor", ",", "Loader", "=", "yaml", ".", "SafeLoader", ")", "\n", "yaml", ".", "add_constructor", "(", "\"!Unit\"", ",", "unit_yaml_constructor", ",", "Loader", "=", "yaml", ".", "SafeLoader", ")", "\n", "yaml", ".", "add_constructor", "(", "\"!Rarity\"", ",", "rarity_yaml_constructor", ",", "Loader", "=", "yaml", ".", "SafeLoader", ")", "\n", "return", "yaml", ".", "safe_load", "(", "yaml_string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.safe_dump_yaml": [[52, 58], ["yaml.add_representer", "yaml.add_representer", "yaml.add_representer", "yaml.safe_dump"], "function", ["None"], ["", "def", "safe_dump_yaml", "(", "obj", ")", ":", "\n", "    ", "yaml", ".", "SafeDumper", ".", "ignore_aliases", "=", "lambda", "*", "args", ":", "True", "\n", "yaml", ".", "add_representer", "(", "Spell", ",", "spell_yaml_representer", ",", "Dumper", "=", "yaml", ".", "SafeDumper", ")", "\n", "yaml", ".", "add_representer", "(", "Unit", ",", "unit_yaml_representer", ",", "Dumper", "=", "yaml", ".", "SafeDumper", ")", "\n", "yaml", ".", "add_representer", "(", "Rarity", ",", "rarity_yaml_representer", ",", "Dumper", "=", "yaml", ".", "SafeDumper", ")", "\n", "return", "yaml", ".", "safe_dump", "(", "obj", ",", "explicit_start", "=", "True", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.__init__": [[88, 138], ["mpi_tools.proc_id", "os.exists", "os.exists", "os.join", "os.join", "os.isfile", "os.isfile", "open", "atexit.register", "logx.Logger.pylogger.info", "logx.Logger.pylogger.warn", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "logx.colorize", "int", "open", "f.readline", "time.time", "f.readline.split"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.colorize"], ["def", "__init__", "(", "self", ",", "output_dir", "=", "None", ",", "output_fname", "=", "\"progress.txt\"", ",", "exp_name", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Initialize a Logger.\n\n        Args:\n            output_dir (string): A directory for saving results to. If\n                ``None``, defaults to a temp directory of the form\n                ``/tmp/experiments/somerandomnumber``.\n\n            output_fname (string): Name for the tab-separated-value file\n                containing metrics logged throughout a training run.\n                Defaults to ``progress.txt``.\n\n            exp_name (string): Experiment name. If you run multiple training\n                runs and give them all the same ``exp_name``, the plotter\n                will know to group them. (Use case: if you run the same\n                hyperparameter configuration with multiple random seeds, you\n                should give them all the same ``exp_name``.)\n        \"\"\"", "\n", "self", ".", "first_row", "=", "True", "\n", "self", ".", "log_headers", "=", "[", "]", "\n", "self", ".", "log_current_row", "=", "{", "}", "\n", "self", ".", "exp_name", "=", "exp_name", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "self", ".", "output_dir", "=", "output_dir", "or", "\"/tmp/experiments/%i\"", "%", "int", "(", "time", ".", "time", "(", ")", ")", "\n", "if", "osp", ".", "exists", "(", "self", ".", "output_dir", ")", ":", "\n", "                ", "self", ".", "pylogger", ".", "warn", "(", "\n", "\"Log dir %s already exists! Storing info there anyway.\"", "\n", "%", "self", ".", "output_dir", "\n", ")", "\n", "", "else", ":", "\n", "                ", "os", ".", "makedirs", "(", "self", ".", "output_dir", ")", "\n", "", "log_fpath", "=", "osp", ".", "join", "(", "self", ".", "output_dir", ",", "output_fname", ")", "\n", "if", "osp", ".", "isfile", "(", "log_fpath", ")", ":", "\n", "                ", "with", "open", "(", "log_fpath", ",", "\"r\"", ")", "as", "f", ":", "\n", "                    ", "first_line", "=", "f", ".", "readline", "(", ")", "\n", "if", "first_line", ":", "\n", "                        ", "self", ".", "first_row", "=", "False", "\n", "self", ".", "log_headers", "=", "first_line", ".", "split", "(", ")", "\n", "\n", "", "", "", "self", ".", "output_file", "=", "open", "(", "log_fpath", ",", "\"a+\"", ")", "\n", "atexit", ".", "register", "(", "self", ".", "output_file", ".", "close", ")", "\n", "self", ".", "pylogger", ".", "info", "(", "\n", "colorize", "(", "\n", "\"Logging data to %s\"", "%", "self", ".", "output_file", ".", "name", ",", "\"green\"", ",", "bold", "=", "True", "\n", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "output_dir", "=", "None", "\n", "self", ".", "output_file", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log": [[139, 143], ["mpi_tools.proc_id", "logx.Logger.pylogger.info", "logx.colorize"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.colorize"], ["", "", "def", "log", "(", "self", ",", "msg", ",", "color", "=", "\"green\"", ")", ":", "\n", "        ", "\"\"\"Print a colorized message to stdout.\"\"\"", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "self", ".", "pylogger", ".", "info", "(", "colorize", "(", "msg", ",", "color", ",", "bold", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log_tabular": [[144, 166], ["logx.Logger.log_headers.append"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "", "def", "log_tabular", "(", "self", ",", "key", ",", "val", ")", ":", "\n", "        ", "\"\"\"\n        Log a value of some diagnostic.\n\n        Call this only once for each diagnostic quantity, each iteration.\n        After using ``log_tabular`` to store values for each diagnostic,\n        make sure to call ``dump_tabular`` to write them out to file and\n        stdout (otherwise they will not get saved anywhere).\n        \"\"\"", "\n", "if", "self", ".", "first_row", ":", "\n", "            ", "self", ".", "log_headers", ".", "append", "(", "key", ")", "\n", "", "else", ":", "\n", "            ", "msg", "=", "(", "\n", "\"Trying to introduce a new key %s \"", "\n", "+", "\"that you didn't include in the first iteration\"", "\n", ")", "\n", "assert", "key", "in", "self", ".", "log_headers", ",", "msg", "%", "key", "\n", "", "assert", "key", "not", "in", "self", ".", "log_current_row", ",", "(", "\n", "\"You already set %s this iteration. Maybe you forgot to call dump_tabular()\"", "\n", "%", "key", "\n", ")", "\n", "self", ".", "log_current_row", "[", "key", "]", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.save_config": [[167, 186], ["mpi_tools.proc_id", "logx.Logger.pylogger.info", "logx.Logger.pylogger.info", "logx.colorize", "config.as_yaml"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.colorize", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.as_yaml"], ["", "def", "save_config", "(", "self", ",", "config", ")", ":", "\n", "        ", "\"\"\"\n        Log an experiment configuration.\n\n        Call this once at the top of your experiment, passing in all important\n        config vars as a dict. This will serialize the config to JSON, while\n        handling anything which can't be serialized in a graceful way (writing\n        as informative a string as possible).\n\n        Example use:\n\n        .. code-block:: python\n\n            logger = EpochLogger(**logger_kwargs)\n            logger.save_config(locals())\n        \"\"\"", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "self", ".", "pylogger", ".", "info", "(", "colorize", "(", "\"Training config:\"", ",", "color", "=", "\"cyan\"", ",", "bold", "=", "True", ")", ")", "\n", "self", ".", "pylogger", ".", "info", "(", "config", ".", "as_yaml", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.save_state_for_training": [[187, 220], ["mpi_tools.proc_id", "hasattr", "os.join", "os.join", "logx.Logger._tf_simple_save_for_training", "joblib.dump", "os.join", "os.join", "logx.Logger.log"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger._tf_simple_save_for_training", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log"], ["", "", "def", "save_state_for_training", "(", "self", ",", "state_dict", ",", "itr", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Saves the state of an experiment.\n\n        To be clear: this is about saving *state*, not logging diagnostics.\n        All diagnostic logging is separate from this function. This function\n        will save whatever is in ``state_dict``---usually just a copy of the\n        environment---and the most recent parameters for the model you\n        previously set up saving for with ``setup_tf_saver``.\n\n        Call with any frequency you prefer. If you only want to maintain a\n        single state and overwrite it at each call with the most recent\n        version, leave ``itr=None``. If you want to keep all of the states you\n        save, provide unique (increasing) values for 'itr'.\n\n        Args:\n            state_dict (dict): Dictionary containing essential elements to\n                describe the current state of training.\n\n            itr: An int, or None. Current iteration of training.\n        \"\"\"", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "if", "hasattr", "(", "self", ",", "\"tf_saver_elements\"", ")", ":", "\n", "                ", "self", ".", "_tf_simple_save_for_training", "(", "itr", ")", "\n", "\n", "", "fpath", "=", "\"simple_save\"", "+", "(", "\"%d\"", "%", "itr", "if", "itr", "is", "not", "None", "else", "\"\"", ")", "\n", "fpath", "=", "osp", ".", "join", "(", "self", ".", "output_dir", ",", "fpath", ")", "\n", "fname", "=", "\"vars.pkl\"", "\n", "\n", "try", ":", "\n", "                ", "joblib", ".", "dump", "(", "state_dict", ",", "osp", ".", "join", "(", "fpath", ",", "fname", ")", ")", "\n", "", "except", "Exception", ":", "\n", "                ", "self", ".", "log", "(", "\"Warning: could not pickle state_dict.\"", ",", "color", "=", "\"red\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.setup_tf_saver": [[221, 253], ["dict", "train_inputs.items", "train_outputs.items", "infer_inputs.items", "infer_outputs.items"], "methods", ["None"], ["", "", "", "def", "setup_tf_saver", "(", "\n", "self", ",", "sess", ",", "train_inputs", ",", "train_outputs", ",", "infer_inputs", ",", "infer_outputs", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Set up easy model saving for tensorflow.\n\n        Call once, after defining your computation graph but before training.\n\n        Args:\n            sess: The Tensorflow session in which you train your computation\n                graph.\n\n            train_inputs (dict): A dictionary that maps from keys of your choice\n                to the tensorflow placeholders that serve as inputs to the\n                computation graph. Make sure that *all* of the placeholders\n                needed for your outputs are included!\n\n            train_outputs (dict): A dictionary that maps from keys of your choice\n                to the outputs from your computation graph.\n        \"\"\"", "\n", "self", ".", "tf_saver_elements", "=", "dict", "(", "\n", "session", "=", "sess", ",", "\n", "train_inputs", "=", "train_inputs", ",", "\n", "train_outputs", "=", "train_outputs", ",", "\n", "infer_inputs", "=", "infer_inputs", ",", "\n", "infer_outputs", "=", "infer_outputs", ",", "\n", ")", "\n", "self", ".", "tf_saver_info", "=", "{", "\n", "\"train_inputs\"", ":", "{", "k", ":", "v", ".", "name", "for", "k", ",", "v", "in", "train_inputs", ".", "items", "(", ")", "}", ",", "\n", "\"train_outputs\"", ":", "{", "k", ":", "v", ".", "name", "for", "k", ",", "v", "in", "train_outputs", ".", "items", "(", ")", "}", ",", "\n", "\"infer_inputs\"", ":", "{", "k", ":", "v", ".", "name", "for", "k", ",", "v", "in", "infer_inputs", ".", "items", "(", ")", "}", ",", "\n", "\"infer_outputs\"", ":", "{", "k", ":", "v", ".", "name", "for", "k", ",", "v", "in", "infer_outputs", ".", "items", "(", ")", "}", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger._tf_simple_save_for_training": [[255, 298], ["mpi_tools.proc_id", "hasattr", "os.join", "os.join", "os.exists", "os.exists", "tensorflow.python.saved_model.builder.SavedModelBuilder", "tensorflow.python.saved_model.builder.SavedModelBuilder.add_meta_graph_and_variables", "tensorflow.python.saved_model.builder.SavedModelBuilder.add_meta_graph", "tensorflow.python.saved_model.builder.SavedModelBuilder.save", "joblib.dump", "shutil.rmtree", "tensorflow.python.saved_model.signature_def_utils.predict_signature_def", "tensorflow.python.saved_model.signature_def_utils.predict_signature_def", "os.join", "os.join", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.framework.ops.get_collection"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.save"], ["", "def", "_tf_simple_save_for_training", "(", "self", ",", "itr", "=", "None", ")", ":", "\n", "        ", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "assert", "hasattr", "(", "\n", "self", ",", "\"tf_saver_elements\"", "\n", ")", ",", "\"First have to setup saving with self.setup_tf_saver\"", "\n", "fpath", "=", "\"simple_save\"", "+", "(", "\"%d\"", "%", "itr", "if", "itr", "is", "not", "None", "else", "\"\"", ")", "\n", "fpath", "=", "osp", ".", "join", "(", "self", ".", "output_dir", ",", "fpath", ")", "\n", "if", "osp", ".", "exists", "(", "fpath", ")", ":", "\n", "# simple_save refuses to be useful if fpath already exists,", "\n", "# so just delete fpath if it's there.", "\n", "                ", "shutil", ".", "rmtree", "(", "fpath", ")", "\n", "\n", "", "train_signature_def_map", "=", "{", "\n", "\"train\"", ":", "signature_def_utils", ".", "predict_signature_def", "(", "\n", "self", ".", "tf_saver_elements", "[", "\"train_inputs\"", "]", ",", "\n", "self", ".", "tf_saver_elements", "[", "\"train_outputs\"", "]", ",", "\n", ")", ",", "\n", "}", "\n", "serve_signature_def_map", "=", "{", "\n", "\"serving_default\"", ":", "signature_def_utils", ".", "predict_signature_def", "(", "\n", "self", ".", "tf_saver_elements", "[", "\"infer_inputs\"", "]", ",", "\n", "self", ".", "tf_saver_elements", "[", "\"infer_outputs\"", "]", ",", "\n", ")", ",", "\n", "}", "\n", "\n", "b", "=", "builder", ".", "SavedModelBuilder", "(", "fpath", ")", "\n", "b", ".", "add_meta_graph_and_variables", "(", "\n", "self", ".", "tf_saver_elements", "[", "\"session\"", "]", ",", "\n", "tags", "=", "[", "tag_constants", ".", "TRAINING", "]", ",", "\n", "signature_def_map", "=", "train_signature_def_map", ",", "\n", "assets_collection", "=", "ops", ".", "get_collection", "(", "ops", ".", "GraphKeys", ".", "ASSET_FILEPATHS", ")", ",", "\n", "main_op", "=", "None", ",", "\n", "clear_devices", "=", "True", ",", "\n", ")", "\n", "b", ".", "add_meta_graph", "(", "\n", "tags", "=", "[", "tag_constants", ".", "SERVING", "]", ",", "\n", "signature_def_map", "=", "serve_signature_def_map", ",", "\n", "assets_collection", "=", "ops", ".", "get_collection", "(", "ops", ".", "GraphKeys", ".", "ASSET_FILEPATHS", ")", ",", "\n", "main_op", "=", "None", ",", "\n", "clear_devices", "=", "True", ",", "\n", ")", "\n", "b", ".", "save", "(", ")", "\n", "joblib", ".", "dump", "(", "self", ".", "tf_saver_info", ",", "osp", ".", "join", "(", "fpath", ",", "\"model_info.pkl\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.dump_tabular": [[299, 326], ["logx.Logger.log_current_row.clear", "mpi_tools.proc_id", "max", "logx.Logger.pylogger.info", "logx.Logger.pylogger.info", "len", "max", "logx.Logger.log_current_row.get", "logx.Logger.pylogger.info", "vals.append", "logx.Logger.output_file.write", "logx.Logger.output_file.flush", "hasattr", "logx.Logger.output_file.write", "map"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "", "def", "dump_tabular", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Write all of the diagnostics from the current iteration.\n\n        Writes both to stdout, and to the output file.\n        \"\"\"", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "vals", "=", "[", "]", "\n", "key_lens", "=", "[", "len", "(", "key", ")", "for", "key", "in", "self", ".", "log_headers", "]", "\n", "max_key_len", "=", "max", "(", "15", ",", "max", "(", "key_lens", ")", ")", "\n", "keystr", "=", "\"%\"", "+", "\"%d\"", "%", "max_key_len", "\n", "fmt", "=", "\"| \"", "+", "keystr", "+", "\"s | %15s |\"", "\n", "n_slashes", "=", "22", "+", "max_key_len", "\n", "self", ".", "pylogger", ".", "info", "(", "\"-\"", "*", "n_slashes", ")", "\n", "for", "key", "in", "self", ".", "log_headers", ":", "\n", "                ", "val", "=", "self", ".", "log_current_row", ".", "get", "(", "key", ",", "\"\"", ")", "\n", "valstr", "=", "\"%8.3g\"", "%", "val", "if", "hasattr", "(", "val", ",", "\"__float__\"", ")", "else", "val", "\n", "self", ".", "pylogger", ".", "info", "(", "fmt", "%", "(", "key", ",", "valstr", ")", ")", "\n", "vals", ".", "append", "(", "val", ")", "\n", "", "self", ".", "pylogger", ".", "info", "(", "\"-\"", "*", "n_slashes", ")", "\n", "if", "self", ".", "output_file", "is", "not", "None", ":", "\n", "                ", "if", "self", ".", "first_row", ":", "\n", "                    ", "self", ".", "output_file", ".", "write", "(", "\"\\t\"", ".", "join", "(", "self", ".", "log_headers", ")", "+", "\"\\n\"", ")", "\n", "", "self", ".", "output_file", ".", "write", "(", "\"\\t\"", ".", "join", "(", "map", "(", "str", ",", "vals", ")", ")", "+", "\"\\n\"", ")", "\n", "self", ".", "output_file", ".", "flush", "(", ")", "\n", "", "", "self", ".", "log_current_row", ".", "clear", "(", ")", "\n", "self", ".", "first_row", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.__init__": [[353, 356], ["logx.Logger.__init__", "dict"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "epoch_dict", "=", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.store": [[357, 368], ["kwargs.items", "logx.EpochLogger.epoch_dict[].append", "logx.EpochLogger.epoch_dict.keys"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "store", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Save something into the epoch_logger's current state.\n\n        Provide an arbitrary number of keyword arguments with numerical\n        values.\n        \"\"\"", "\n", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "(", "k", "in", "self", ".", "epoch_dict", ".", "keys", "(", ")", ")", ":", "\n", "                ", "self", ".", "epoch_dict", "[", "k", "]", "=", "[", "]", "\n", "", "self", ".", "epoch_dict", "[", "k", "]", ".", "append", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular": [[369, 405], ["logx.Logger.log_tabular", "mpi_tools.mpi_statistics_scalar", "logx.Logger.log_tabular", "numpy.concatenate", "logx.Logger.log_tabular", "logx.Logger.log_tabular", "logx.Logger.log_tabular", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_statistics_scalar", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular"], ["", "", "def", "log_tabular", "(", "self", ",", "key", ",", "val", "=", "None", ",", "with_min_and_max", "=", "False", ",", "average_only", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Log a value or possibly the mean/std/min/max values of a diagnostic.\n\n        Args:\n            key (string): The name of the diagnostic. If you are logging a\n                diagnostic whose state has previously been saved with\n                ``store``, the key here has to match the key you used there.\n\n            val: A value for the diagnostic. If you have previously saved\n                values for this key via ``store``, do *not* provide a ``val``\n                here.\n\n            with_min_and_max (bool): If true, log min and max values of the\n                diagnostic over the epoch.\n\n            average_only (bool): If true, do not log the standard deviation\n                of the diagnostic over the epoch.\n        \"\"\"", "\n", "if", "val", "is", "not", "None", ":", "\n", "            ", "super", "(", ")", ".", "log_tabular", "(", "key", ",", "val", ")", "\n", "", "else", ":", "\n", "            ", "v", "=", "self", ".", "epoch_dict", "[", "key", "]", "\n", "vals", "=", "(", "\n", "np", ".", "concatenate", "(", "v", ")", "\n", "if", "isinstance", "(", "v", "[", "0", "]", ",", "np", ".", "ndarray", ")", "and", "len", "(", "v", "[", "0", "]", ".", "shape", ")", ">", "0", "\n", "else", "v", "\n", ")", "\n", "stats", "=", "mpi_statistics_scalar", "(", "vals", ",", "with_min_and_max", "=", "with_min_and_max", ")", "\n", "super", "(", ")", ".", "log_tabular", "(", "key", "if", "average_only", "else", "\"Average\"", "+", "key", ",", "stats", "[", "0", "]", ")", "\n", "if", "not", "(", "average_only", ")", ":", "\n", "                ", "super", "(", ")", ".", "log_tabular", "(", "\"Std\"", "+", "key", ",", "stats", "[", "1", "]", ")", "\n", "", "if", "with_min_and_max", ":", "\n", "                ", "super", "(", ")", ".", "log_tabular", "(", "\"Max\"", "+", "key", ",", "stats", "[", "3", "]", ")", "\n", "super", "(", ")", ".", "log_tabular", "(", "\"Min\"", "+", "key", ",", "stats", "[", "2", "]", ")", "\n", "", "", "self", ".", "epoch_dict", "[", "key", "]", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.get_stats": [[406, 417], ["mpi_tools.mpi_statistics_scalar", "numpy.concatenate", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_statistics_scalar"], ["", "def", "get_stats", "(", "self", ",", "key", ")", ":", "\n", "        ", "\"\"\"\n        Lets an algorithm ask the logger for mean/std/min/max of a diagnostic.\n        \"\"\"", "\n", "v", "=", "self", ".", "epoch_dict", "[", "key", "]", "\n", "vals", "=", "(", "\n", "np", ".", "concatenate", "(", "v", ")", "\n", "if", "isinstance", "(", "v", "[", "0", "]", ",", "np", ".", "ndarray", ")", "and", "len", "(", "v", "[", "0", "]", ".", "shape", ")", ">", "0", "\n", "else", "v", "\n", ")", "\n", "return", "mpi_statistics_scalar", "(", "vals", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.colorize": [[34, 48], ["attr.append", "str", "attr.append"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["def", "colorize", "(", "string", ",", "color", ",", "bold", "=", "False", ",", "highlight", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Colorize a string.\n\n    This function was originally written by John Schulman.\n    \"\"\"", "\n", "attr", "=", "[", "]", "\n", "num", "=", "color2num", "[", "color", "]", "\n", "if", "highlight", ":", "\n", "        ", "num", "+=", "10", "\n", "", "attr", ".", "append", "(", "str", "(", "num", ")", ")", "\n", "if", "bold", ":", "\n", "        ", "attr", ".", "append", "(", "\"1\"", ")", "\n", "", "return", "\"\\x1b[%sm%s\\x1b[0m\"", "%", "(", "\";\"", ".", "join", "(", "attr", ")", ",", "string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.restore_tf_graph": [[50, 76], ["tensorflow.saved_model.loader.load", "joblib.load", "tensorflow.get_default_graph", "dict", "dict.update", "dict.update", "os.join", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "model_info[].items", "model_info[].items"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.load", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.load", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.update", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.update"], ["", "def", "restore_tf_graph", "(", "sess", ",", "fpath", ")", ":", "\n", "    ", "\"\"\"\n    Loads graphs saved by Logger.\n\n    Will output a dictionary whose keys and values are from the 'inputs'\n    and 'outputs' dict you specified with logger.setup_tf_saver().\n\n    Args:\n        sess: A Tensorflow session.\n        fpath: Filepath to save directory.\n\n    Returns:\n        A dictionary mapping from keys to tensors in the computation graph\n        loaded from ``fpath``.\n    \"\"\"", "\n", "tf", ".", "saved_model", ".", "loader", ".", "load", "(", "sess", ",", "[", "tf", ".", "saved_model", ".", "tag_constants", ".", "TRAINING", "]", ",", "fpath", ")", "\n", "model_info", "=", "joblib", ".", "load", "(", "osp", ".", "join", "(", "fpath", ",", "\"model_info.pkl\"", ")", ")", "\n", "graph", "=", "tf", ".", "get_default_graph", "(", ")", "\n", "model", "=", "dict", "(", ")", "\n", "model", ".", "update", "(", "\n", "{", "k", ":", "graph", ".", "get_tensor_by_name", "(", "v", ")", "for", "k", ",", "v", "in", "model_info", "[", "\"train_inputs\"", "]", ".", "items", "(", ")", "}", "\n", ")", "\n", "model", ".", "update", "(", "\n", "{", "k", ":", "graph", ".", "get_tensor_by_name", "(", "v", ")", "for", "k", ",", "v", "in", "model_info", "[", "\"train_outputs\"", "]", ".", "items", "(", ")", "}", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.__init__": [[13, 26], ["logger.info", "requests.Session"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "host", "=", "\"127.0.0.1\"", ",", "port", "=", "8080", ",", "use_sessions", "=", "True", ")", ":", "\n", "        ", "logger", ".", "info", "(", "\"Initializing HeroicClient\"", ")", "\n", "self", ".", "host", "=", "host", "\n", "self", ".", "port", "=", "port", "\n", "# Use session for connection pooling", "\n", "if", "use_sessions", ":", "\n", "            ", "self", ".", "session", "=", "requests", ".", "Session", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "session", "=", "None", "\n", "", "self", ".", "create_battle_url", "=", "self", ".", "url", "+", "\"/battle\"", "\n", "self", ".", "step_battle_url", "=", "self", ".", "url", "+", "\"/battle/%s/step\"", "\n", "self", ".", "get_replay_url", "=", "self", ".", "url", "+", "\"/battle/%s/replay\"", "\n", "self", ".", "cookies", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.session_id": [[27, 30], ["client.HeroicClient.cookies.get"], "methods", ["None"], ["", "@", "property", "\n", "def", "session_id", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "cookies", ".", "get", "(", "\"SessionId\"", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.url": [[31, 34], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "url", "(", "self", ")", ":", "\n", "        ", "return", "\"http://{host}:{port}\"", ".", "format", "(", "host", "=", "self", ".", "host", ",", "port", "=", "self", ".", "port", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient._create_start_episode_payload": [[35, 66], ["str", "int", "int", "int", "int", "bool", "client.HeroicClient._create_start_episode_payload._to_entries_json"], "methods", ["None"], ["", "def", "_create_start_episode_payload", "(", "\n", "self", ",", "battle_id", ",", "left_player", ":", "Player", ",", "right_player", ":", "Player", ",", "capture_replay", ":", "bool", "\n", ")", ":", "\n", "        ", "def", "_to_entries_json", "(", "entries", ")", ":", "\n", "            ", "return", "[", "\n", "{", "\n", "\"SpellId\"", ":", "int", "(", "entry", ".", "spell", ")", ",", "\n", "\"LevelIncrement\"", ":", "int", "(", "entry", ".", "level_increment", ")", ",", "\n", "}", "\n", "for", "entry", "in", "entries", "\n", "]", "\n", "\n", "", "return", "{", "\n", "\"BattleId\"", ":", "str", "(", "battle_id", ")", ",", "\n", "\"LeftDeck\"", ":", "{", "\n", "\"SpellcasterId\"", ":", "7", ",", "\n", "\"Deck\"", ":", "_to_entries_json", "(", "left_player", ".", "deck", ".", "minions", ")", ",", "\n", "\"Spells\"", ":", "_to_entries_json", "(", "left_player", ".", "deck", ".", "spells", ")", ",", "\n", "\"DeckName\"", ":", "\"LeftDeck\"", ",", "\n", "}", ",", "\n", "\"RightDeck\"", ":", "{", "\n", "\"SpellcasterId\"", ":", "7", ",", "\n", "\"Deck\"", ":", "_to_entries_json", "(", "right_player", ".", "deck", ".", "minions", ")", ",", "\n", "\"Spells\"", ":", "_to_entries_json", "(", "right_player", ".", "deck", ".", "spells", ")", ",", "\n", "\"DeckName\"", ":", "\"RightDeck\"", ",", "\n", "}", ",", "\n", "\"LeftBrainDifficulty\"", ":", "int", "(", "left_player", ".", "brain", ")", ",", "\n", "\"RightBrainDifficulty\"", ":", "int", "(", "right_player", ".", "brain", ")", ",", "\n", "\"LeftCastleLevel\"", ":", "int", "(", "left_player", ".", "castle_level", ")", ",", "\n", "\"RightCastleLevel\"", ":", "int", "(", "right_player", ".", "castle_level", ")", ",", "\n", "\"CaptureReplay\"", ":", "bool", "(", "capture_replay", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.create_new_battle": [[68, 87], ["client.HeroicClient._create_start_episode_payload", "requests.post.raise_for_status", "logger.debug", "requests.post.json", "client.HeroicClient.session.post", "requests.post", "logger.debug"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient._create_start_episode_payload"], ["", "def", "create_new_battle", "(", "\n", "self", ",", "battle_id", ",", "left_player", ":", "Player", ",", "right_player", ":", "Player", ",", "capture_replay", "=", "False", "\n", ")", ":", "\n", "        ", "payload", "=", "self", ".", "_create_start_episode_payload", "(", "\n", "battle_id", ",", "left_player", ",", "right_player", ",", "capture_replay", "\n", ")", "\n", "if", "self", ".", "session", ":", "\n", "            ", "response", "=", "self", ".", "session", ".", "post", "(", "self", ".", "create_battle_url", ",", "json", "=", "payload", ")", "\n", "", "else", ":", "\n", "            ", "response", "=", "requests", ".", "post", "(", "\n", "self", ".", "create_battle_url", ",", "json", "=", "payload", ",", "cookies", "=", "self", ".", "cookies", "\n", ")", "\n", "", "response", ".", "raise_for_status", "(", ")", "\n", "logger", ".", "debug", "(", "\"New battle created on server (battleId=%s)\"", ",", "battle_id", ")", "\n", "state", "=", "response", ".", "json", "(", ")", "\n", "if", "self", ".", "session_id", "is", "None", ":", "\n", "            ", "self", ".", "cookies", "[", "\"SessionId\"", "]", "=", "response", ".", "cookies", "[", "\"SessionId\"", "]", "\n", "logger", ".", "debug", "(", "\"Assigned session ID %s\"", ",", "self", ".", "session_id", ")", "\n", "", "return", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.step_battle": [[88, 102], ["requests.post.raise_for_status", "requests.post.json", "client.HeroicClient.session.post", "requests.post"], "methods", ["None"], ["", "def", "step_battle", "(", "self", ",", "battle_id", ",", "left_action", "=", "None", ",", "right_action", "=", "None", ")", ":", "\n", "        ", "payload", "=", "{", "}", "\n", "if", "left_action", ":", "\n", "            ", "payload", "[", "\"NextActionLeft\"", "]", "=", "left_action", "\n", "", "if", "right_action", ":", "\n", "            ", "payload", "[", "\"NextActionRight\"", "]", "=", "right_action", "\n", "", "if", "self", ".", "session", ":", "\n", "            ", "response", "=", "self", ".", "session", ".", "post", "(", "self", ".", "step_battle_url", "%", "battle_id", ",", "json", "=", "payload", ")", "\n", "", "else", ":", "\n", "            ", "response", "=", "requests", ".", "post", "(", "\n", "self", ".", "step_battle_url", "%", "battle_id", ",", "json", "=", "payload", ",", "cookies", "=", "self", ".", "cookies", "\n", ")", "\n", "", "response", ".", "raise_for_status", "(", ")", "\n", "return", "response", ".", "json", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.get_replay": [[103, 110], ["requests.get.raise_for_status", "requests.get.json", "client.HeroicClient.session.get", "requests.get"], "methods", ["None"], ["", "def", "get_replay", "(", "self", ",", "battle_id", ")", ":", "\n", "        ", "if", "self", ".", "session", ":", "\n", "            ", "response", "=", "self", ".", "session", ".", "get", "(", "self", ".", "get_replay_url", "%", "battle_id", ")", "\n", "", "else", ":", "\n", "            ", "response", "=", "requests", ".", "get", "(", "self", ".", "get_replay_url", "%", "battle_id", ")", "\n", "", "response", ".", "raise_for_status", "(", ")", "\n", "return", "response", ".", "json", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.__init__": [[47, 70], ["heroic_env.HeroicEnv.reset_client", "heroic_env.create_action_space", "heroic_env.create_observation_space", "heroic_env.HeroicEnv.seed", "numpy.zeros", "numpy.zeros", "numpy.zeros", "heroic_rl.agent.SpatialBuffer"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.reset_client", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.create_action_space", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.create_observation_space", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.seed"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "current_battle_id", "=", "None", "\n", "self", ".", "reward_fn", "=", "cfg", ".", "reward_fn", "\n", "self", ".", "reset_client", "(", ")", "\n", "\n", "self", ".", "action_space", "=", "create_action_space", "(", "cfg", ")", "\n", "self", ".", "observation_space", "=", "create_observation_space", "(", "cfg", ")", "\n", "\n", "self", ".", "seed", "(", "cfg", ".", "seed", ")", "\n", "self", ".", "step_count", "=", "0", "\n", "self", ".", "nb_episodes", "=", "0", "\n", "self", ".", "battle_state", "=", "None", "\n", "\n", "# For logging purposes", "\n", "self", ".", "x_actions", "=", "np", ".", "zeros", "(", "cfg", ".", "map", ".", "num_bins", ")", "\n", "self", ".", "y_actions", "=", "np", ".", "zeros", "(", "cfg", ".", "map", ".", "num_lanes", ")", "\n", "self", ".", "spell_actions", "=", "np", ".", "zeros", "(", "cfg", ".", "spells", ".", "num_spells", ")", "\n", "\n", "self", ".", "_spatial_buff", "=", "SpatialBuffer", "(", "cfg", ".", "architecture", ".", "num_stacked_past_exp", ")", "\n", "\n", "self", ".", "_current_left_deck", "=", "None", "\n", "self", ".", "_current_right_deck", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.reset_client": [[71, 75], ["heroic_env.HeroicEnv.cfg.servers[].split", "client.HeroicClient", "heroic_rl.utils.mpi_tools.proc_id", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id"], ["", "def", "reset_client", "(", "self", ")", ":", "\n", "        ", "server_idx", "=", "proc_id", "(", ")", "%", "len", "(", "self", ".", "cfg", ".", "servers", ")", "\n", "host", ",", "port", "=", "self", ".", "cfg", ".", "servers", "[", "server_idx", "]", ".", "split", "(", "\":\"", ")", "\n", "self", ".", "client", "=", "HeroicClient", "(", "host", "=", "host", ",", "port", "=", "port", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.seed": [[76, 79], ["gym.utils.seeding.np_random"], "methods", ["None"], ["", "def", "seed", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "np_random", ",", "seed", "=", "seeding", ".", "np_random", "(", "seed", ")", "\n", "return", "[", "seed", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.step": [[80, 133], ["heroic_rl.train.obs.get_client_action", "heroic_rl.train.obs.get_client_action", "heroic_env.HeroicEnv.client.step_battle", "heroic_rl.train.obs.is_battle_done", "heroic_env.HeroicEnv.reward_fn", "heroic_rl.train.obs.battle_state_to_info", "int", "int", "int", "logger.info", "logger.info", "logger.info", "numpy.zeros", "numpy.zeros", "numpy.zeros", "heroic_rl.utils.mpi_tools.proc_id", "heroic_rl.utils.mpi_tools.proc_id", "termcolor.colored", "termcolor.colored", "termcolor.colored", "numpy.sum", "numpy.sum", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.get_client_action", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.get_client_action", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.step_battle", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_battle_done", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.reward_fn", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.battle_state_to_info", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id"], ["", "def", "step", "(", "self", ",", "left_action", ",", "right_action", ")", ":", "\n", "        ", "self", ".", "step_count", "+=", "1", "\n", "client_left_action", "=", "obs", ".", "get_client_action", "(", "\n", "left_action", ",", "self", ".", "battle_state", ",", "self", ".", "cfg", ",", "player", "=", "\"LeftPlayer\"", "\n", ")", "\n", "client_right_action", "=", "obs", ".", "get_client_action", "(", "\n", "right_action", ",", "self", ".", "battle_state", ",", "self", ".", "cfg", ",", "player", "=", "\"RightPlayer\"", "\n", ")", "\n", "\n", "# save actions", "\n", "# TODO dimitrijer: this should not be here", "\n", "if", "proc_id", "(", ")", "==", "0", "and", "left_action", ":", "\n", "            ", "spell", "=", "int", "(", "left_action", "[", "\"spell\"", "]", "[", "0", "]", ")", "\n", "lane", "=", "int", "(", "left_action", "[", "\"spatial\"", "]", "[", "0", "]", "//", "self", ".", "cfg", ".", "map", ".", "num_bins", ")", "\n", "coordinate", "=", "int", "(", "left_action", "[", "\"spatial\"", "]", "[", "0", "]", "%", "self", ".", "cfg", ".", "map", ".", "num_bins", ")", "\n", "self", ".", "x_actions", "[", "coordinate", "]", "+=", "1", "\n", "self", ".", "y_actions", "[", "lane", "]", "+=", "1", "\n", "self", ".", "spell_actions", "[", "spell", "]", "+=", "1", "\n", "\n", "", "self", ".", "battle_state", "=", "self", ".", "client", ".", "step_battle", "(", "\n", "self", ".", "current_battle_id", ",", "client_left_action", ",", "client_right_action", "\n", ")", "\n", "\n", "done", "=", "obs", ".", "is_battle_done", "(", "self", ".", "battle_state", ")", "\n", "reward", "=", "self", ".", "reward_fn", "(", "self", ".", "battle_state", ")", "\n", "\n", "# log action distributions", "\n", "# TODO dimitrijer: this should not be here", "\n", "if", "done", "and", "self", ".", "nb_episodes", "%", "20", "==", "0", "and", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "colored", "(", "\"X action distribution %s\"", ",", "\"cyan\"", ")", ",", "\n", "self", ".", "x_actions", "/", "np", ".", "sum", "(", "self", ".", "x_actions", ")", ",", "\n", ")", "\n", "logger", ".", "info", "(", "\n", "colored", "(", "\"Y action distribution %s\"", ",", "\"cyan\"", ")", ",", "\n", "self", ".", "y_actions", "/", "np", ".", "sum", "(", "self", ".", "y_actions", ")", ",", "\n", ")", "\n", "logger", ".", "info", "(", "\n", "colored", "(", "\"Spell action distribution: %s\"", ",", "\"cyan\"", ")", ",", "\n", "self", ".", "spell_actions", "/", "np", ".", "sum", "(", "self", ".", "spell_actions", ")", ",", "\n", ")", "\n", "self", ".", "x_actions", "=", "np", ".", "zeros", "(", "self", ".", "cfg", ".", "map", ".", "num_bins", ")", "\n", "self", ".", "y_actions", "=", "np", ".", "zeros", "(", "self", ".", "cfg", ".", "map", ".", "num_lanes", ")", "\n", "self", ".", "spell_actions", "=", "np", ".", "zeros", "(", "self", ".", "cfg", ".", "spells", ".", "num_spells", ")", "\n", "\n", "", "info", "=", "obs", ".", "battle_state_to_info", "(", "\n", "self", ".", "battle_state", ",", "\n", "self", ".", "_spatial_buff", ",", "\n", "self", ".", "_current_left_deck", ",", "\n", "self", ".", "_current_right_deck", ",", "\n", "self", ".", "cfg", ",", "\n", ")", "\n", "return", "(", "info", "[", "\"o\"", "]", ",", "reward", ",", "done", ",", "info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.reset": [[134, 174], ["uuid.UUID", "heroic_rl.agent.SpatialBuffer", "heroic_env.HeroicEnv.cfg.decks.get_decks", "heroic_env.HeroicEnv.cfg.decks.get_decks", "heroic_env.HeroicEnv.cfg.spells.get_castle_level", "client.Player", "client.Player", "heroic_env.HeroicEnv.client.create_new_battle", "heroic_rl.train.obs.battle_state_to_info", "heroic_env.HeroicEnv.np_random.bytes", "heroic_env.HeroicEnv.np_random.choice", "heroic_env.HeroicEnv.np_random.choice", "len", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.decks.DeckRepository.get_decks", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.decks.DeckRepository.get_decks", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.get_castle_level", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.create_new_battle", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.battle_state_to_info"], ["", "def", "reset", "(", "self", ",", "left_brain", "=", "None", ",", "right_brain", "=", "None", ")", ":", "\n", "        ", "self", ".", "current_battle_id", "=", "uuid", ".", "UUID", "(", "bytes", "=", "self", ".", "np_random", ".", "bytes", "(", "16", ")", ")", "\n", "self", ".", "_spatial_buff", "=", "SpatialBuffer", "(", "self", ".", "cfg", ".", "architecture", ".", "num_stacked_past_exp", ")", "\n", "\n", "all_decks", "=", "self", ".", "cfg", ".", "decks", ".", "get_decks", "(", ")", "\n", "self", ".", "_current_left_deck", "=", "all_decks", "[", "self", ".", "np_random", ".", "choice", "(", "len", "(", "all_decks", ")", ")", "]", "\n", "\n", "# Pick opponent decks of similar arena level", "\n", "matching_decks", "=", "self", ".", "cfg", ".", "decks", ".", "get_decks", "(", "\n", "arena_level", "=", "self", ".", "_current_left_deck", ".", "arena_level", "\n", ")", "\n", "self", ".", "_current_right_deck", "=", "matching_decks", "[", "\n", "self", ".", "np_random", ".", "choice", "(", "len", "(", "matching_decks", ")", ")", "\n", "]", "\n", "\n", "castle_level", "=", "self", ".", "cfg", ".", "spells", ".", "get_castle_level", "(", "\n", "self", ".", "_current_left_deck", ".", "arena_level", "\n", ")", "\n", "\n", "left_player", "=", "Player", "(", "\n", "castle_level", "=", "castle_level", ",", "deck", "=", "self", ".", "_current_left_deck", ",", "brain", "=", "left_brain", ",", "\n", ")", "\n", "right_player", "=", "Player", "(", "\n", "castle_level", "=", "castle_level", ",", "deck", "=", "self", ".", "_current_right_deck", ",", "brain", "=", "right_brain", ",", "\n", ")", "\n", "\n", "self", ".", "battle_state", "=", "self", ".", "client", ".", "create_new_battle", "(", "\n", "self", ".", "current_battle_id", ",", "left_player", ",", "right_player", "\n", ")", "\n", "self", ".", "nb_episodes", "+=", "1", "\n", "self", ".", "step_count", "=", "0", "\n", "\n", "info", "=", "obs", ".", "battle_state_to_info", "(", "\n", "self", ".", "battle_state", ",", "\n", "self", ".", "_spatial_buff", ",", "\n", "self", ".", "_current_left_deck", ",", "\n", "self", ".", "_current_right_deck", ",", "\n", "self", ".", "cfg", ",", "\n", ")", "\n", "return", "info", "[", "\"o\"", "]", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.render": [[175, 177], ["None"], "methods", ["None"], ["", "def", "render", "(", "self", ",", "mode", "=", "\"human\"", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.close": [[178, 180], ["None"], "methods", ["None"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.create_action_space": [[19, 24], ["gym.spaces.Dict", "gym.spaces.Discrete", "gym.spaces.Discrete"], "function", ["None"], ["def", "create_action_space", "(", "cfg", ")", ":", "\n", "    ", "return", "spaces", ".", "Dict", "(", "\n", "{", "\n", "\"spell\"", ":", "spaces", ".", "Discrete", "(", "cfg", ".", "act_spell_shape", ")", ",", "\n", "\"spatial\"", ":", "spaces", ".", "Discrete", "(", "cfg", ".", "act_spatial_shape", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.create_observation_space": [[28, 41], ["gym.spaces.Dict", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box"], "function", ["None"], ["", "def", "create_observation_space", "(", "cfg", ")", ":", "\n", "    ", "return", "spaces", ".", "Dict", "(", "\n", "{", "\n", "\"spatial\"", ":", "spaces", ".", "Box", "(", "low", "=", "0", ",", "high", "=", "1000", ",", "shape", "=", "cfg", ".", "obs_spatial_shape", ")", ",", "\n", "\"non_spatial\"", ":", "spaces", ".", "Box", "(", "\n", "low", "=", "-", "30", ",", "high", "=", "1000", ",", "shape", "=", "cfg", ".", "obs_non_spatial_shape", "\n", ")", ",", "\n", "\"mask_spell\"", ":", "spaces", ".", "Box", "(", "low", "=", "0", ",", "high", "=", "1", ",", "shape", "=", "cfg", ".", "obs_mask_spell_shape", ")", ",", "\n", "\"mask_spatial\"", ":", "spaces", ".", "Box", "(", "\n", "low", "=", "0", ",", "high", "=", "1", ",", "shape", "=", "cfg", ".", "obs_mask_spatial_shape", ",", "\n", ")", ",", "\n", "\"if_spawn_spell\"", ":", "spaces", ".", "Box", "(", "\n", "low", "=", "0", ",", "high", "=", "1", ",", "shape", "=", "cfg", ".", "obs_if_spawn_spell_shape", "\n", ")", ",", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.cli.commands._prefix_cb": [[26, 33], ["isinstance", "list"], "function", ["None"], ["def", "_prefix_cb", "(", "ctx", ",", "param", ",", "value", ",", "prefix", ")", ":", "\n", "    ", "if", "value", "is", "not", "None", ":", "\n", "        ", "if", "prefix", "not", "in", "ctx", ".", "params", ":", "\n", "            ", "ctx", ".", "params", "[", "prefix", "]", "=", "{", "}", "\n", "", "if", "isinstance", "(", "value", ",", "tuple", ")", ":", "\n", "            ", "value", "=", "list", "(", "value", ")", "\n", "", "ctx", ".", "params", "[", "prefix", "]", "[", "param", ".", "human_readable_name", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.cli.commands.train": [[60, 305], ["cmd", "arg", "opt", "opt", "opt", "opt", "opt", "opt", "opt", "opt", "opt", "opt", "opt", "opt", "opt", "opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "hyper_opt", "arch_opt", "arch_opt", "spells_opt", "spells_opt", "map_opt", "train.cfg.TrainingCfg", "train.cfg.TrainingCfg.update", "train.experiment.run", "click.Path", "click.Choice", "click.Choice", "train.Plans.all", "train.Rewards.all", "kwargs.items"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.update", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.all", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.all"], ["@", "cmd", "(", ")", "\n", "@", "arg", "(", "\"exp_name\"", ",", "metavar", "=", "\"EXPERIMENT_NAME\"", ")", "\n", "# General options", "\n", "@", "opt", "(", "\n", "\"-c\"", ",", "\n", "\"--cpus\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_CPUS", ",", "\n", "help", "=", "\"Number of subprocesses to spawn.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"-s\"", ",", "\n", "\"--steps\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_STEPS", ",", "\n", "help", "=", "\"Number of steps of interaction (state-action pairs) \"", "\n", "+", "\"for the agent and the environment in each epoch.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"-e\"", ",", "\n", "\"--epochs\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_EPOCHS", ",", "\n", "help", "=", "\"Number of epochs of interaction (equivalent to number of policy \"", "\n", "+", "\"updates) to perform.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"-a\"", ",", "\n", "\"--num-agents\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_NUM_AGENTS", ",", "\n", "help", "=", "\"Number of agents to train. This can be used to simultaneously train \"", "\n", "+", "\"multiple agents, which can be useful with `selfplay` plan - agents will \"", "\n", "+", "\"play against each other.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"-f\"", ",", "\n", "\"--save-freq\"", ",", "\n", "\"save_frequency_epochs\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_SAVE_FREQUENCY_EPOCHS", ",", "\n", "help", "=", "\"How often (in epochs) to save agent state.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"-b\"", ",", "\n", "\"--batch-size\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_BATCH_SIZE", ",", "\n", "help", "=", "\"Number of steps for single update step. Never greater than steps per \"", "\n", "+", "\"epoch per process (steps / number of processes). Bounded by total GPU \"", "\n", "+", "\"RAM.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"-d\"", ",", "\n", "\"--data-dir\"", ",", "\n", "type", "=", "click", ".", "Path", "(", "file_okay", "=", "False", ")", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_DATA_DIR", ",", "\n", "help", "=", "\"Path to data directory where all experiments are stored.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--epochs-per-agent\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_EPOCHS_PER_AGENT", ",", "\n", "help", "=", "\"Number of epochs to train single agent for before yielding training \"", "\n", "+", "\"to next agent, relevant if there are multiple agents.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--server\"", ",", "\n", "\"servers\"", ",", "\n", "type", "=", "HOST_PORT", ",", "\n", "multiple", "=", "True", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_SERVERS", ",", "\n", "help", "=", "\"Address of training server(s). Multiple addresses may be specified.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--plan\"", ",", "\n", "type", "=", "click", ".", "Choice", "(", "Plans", ".", "all", "(", ")", ")", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_PLAN", ",", "\n", "help", "=", "\"Training plan to use.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--reward\"", ",", "\n", "type", "=", "click", ".", "Choice", "(", "Rewards", ".", "all", "(", ")", ")", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_REWARD", ",", "\n", "help", "=", "\"Reward function to use.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--seed\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_SEED", ",", "\n", "help", "=", "\"Seed for random number generators.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--spatial-mask/--no-spatial-mask\"", ",", "\n", "\"spatial_mask_static_enabled\"", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_SPATIAL_MASK_STATIC_ENABLED", ",", "\n", "help", "=", "\"Whether to enable static spatial mask for spells (imposes casting rules).\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--dynamic-spatial-mask/--no-dynamic-spatial-mask\"", ",", "\n", "\"spatial_mask_dynamic_enabled\"", ",", "\n", "default", "=", "TrainingCfg", ".", "DEFAULT_SPATIAL_MASK_DYNAMIC_ENABLED", ",", "\n", "help", "=", "\"Whether to enable dynamic spatial mask for spells - modifies casting \"", "\n", "+", "\"rules according to observations.\"", ",", "\n", ")", "\n", "# Hyperparameter options", "\n", "@", "hyper_opt", "(", "\n", "\"--gamma\"", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_GAMMA", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "\"Discount factor. (Always between 0 and 1.)\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--lambda\"", ",", "\n", "\"lam\"", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_LAM", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "\"Lambda for GAE-Lambda. (Always between 0 and 1, close to 1.)\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--target-kl\"", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_TARGET_KL", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "\"Roughly what KL divergence we think is appropriate between new \"", "\n", "+", "\"and old policies after an update. This will get used for early \"", "\n", "+", "\"stopping. (Usually small, 0.01 or 0.05.)\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--grad-clipping/--no-grad-clipping\"", ",", "\n", "\"grad_clipping_enabled\"", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_GRAD_CLIPPING_ENABLED", ",", "\n", "help", "=", "\"Whether to use gradient clipping.\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--max-grad-norm\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_MAX_GRAD_NORM", ",", "\n", "help", "=", "\"Max grad norm for gradient clipping.\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--value-clipping/--no-value-clipping\"", ",", "\n", "\"value_clipping_enabled\"", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_VALUE_CLIPPING_ENABLED", ",", "\n", "help", "=", "\"Whether to use value clipping.\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--clip-range-vf\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_CLIP_RANGE_VF", ",", "\n", "help", "=", "\"Clip range for value function.\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--vf-loss-coef\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_VF_LOSS_COEF", ",", "\n", "help", "=", "\"How much value loss affects total loss (weighted).\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--pi-loss-coef\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_PI_LOSS_COEF", ",", "\n", "help", "=", "\"How much policy loss affects total loss (weighted).\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--train-pi-iters\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_TRAIN_PI_ITERS", ",", "\n", "help", "=", "\"Maximum number of gradient descent steps to take on policy loss per \"", "\n", "+", "\"epoch. (Early stopping may cause optimizer to take fewer than this.)\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--train-v-iters\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_TRAIN_V_ITERS", ",", "\n", "help", "=", "\"Number of gradient descent steps to take on value loss per epoch.\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--vf-reg/--no-vf-reg\"", ",", "\n", "\"vf_reg_enabled\"", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_VF_REG_ENABLED", ",", "\n", "help", "=", "\"Whether to use value function regularization.\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--vf-reg-l2\"", ",", "\n", "\"vf_reg\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_VF_REG", ",", "\n", "help", "=", "\"Value function l2 regularization (only for separate policy/value network).\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--pi-lr\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_PI_LR", ",", "\n", "help", "=", "\"Learning rate for policy optimizer.\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--vf-lr\"", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_VF_LR", ",", "\n", "help", "=", "\"Learning rate for value function optimizer.\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--clip-vf-output/--no-clip-vf-output\"", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_CLIP_VF_OUTPUT", ",", "\n", "help", "=", "\"Use value function clipping to [-1,1].\"", ",", "\n", ")", "\n", "@", "hyper_opt", "(", "\n", "\"--bias-noops/--no-bias-noops\"", ",", "\n", "default", "=", "HyperparametersCfg", ".", "DEFAULT_BIAS_NOOPS", ",", "\n", "help", "=", "\"Add initial negative bias to noop spells, to make agent cast them \"", "\n", "+", "\"less frequently.\"", ",", "\n", ")", "\n", "# Architecture options", "\n", "@", "arch_opt", "(", "\n", "\"--rnn/--no-rnn\"", ",", "\n", "default", "=", "ArchitectureCfg", ".", "DEFAULT_RNN", ",", "\n", "help", "=", "\"Whether to use rnn policy.\"", ",", "\n", ")", "\n", "@", "arch_opt", "(", "\n", "\"--unified-policy-value/--no-unified-policy-value\"", ",", "\n", "default", "=", "ArchitectureCfg", ".", "DEFAULT_UNIFIED_POLICY_VALUE", ",", "\n", "help", "=", "\"Unified network for policy and value.\"", ",", "\n", ")", "\n", "# Spells options", "\n", "@", "spells_opt", "(", "\n", "\"--spawn-noop/--no-spawn-noop\"", ",", "\n", "default", "=", "SpellsCfg", ".", "DEFAULT_SPAWN_NOOP", ",", "\n", "help", "=", "\"Whether to enable spell no-op.\"", ",", "\n", ")", "\n", "@", "spells_opt", "(", "\n", "\"--spell-noop/--no-spell-noop\"", ",", "\n", "default", "=", "SpellsCfg", ".", "DEFAULT_SPELL_NOOP", ",", "\n", "help", "=", "\"Whether to enable spawn no-op.\"", ",", "\n", ")", "\n", "# Map options", "\n", "@", "map_opt", "(", "\n", "\"--bin-width\"", ",", "\n", "default", "=", "MapCfg", ".", "DEFAULT_BIN_WIDTH", ",", "\n", "help", "=", "\"Width of X bin - controls horizontal coordinate discretization.\"", ",", "\n", ")", "\n", "def", "train", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Initialize and start a new training experiment from scratch.\"\"\"", "\n", "cfg", "=", "TrainingCfg", "(", ")", "\n", "cfg", ".", "update", "(", "{", "k", ":", "v", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", "if", "v", "is", "not", "None", "}", ")", "\n", "run_experiment", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.cli.commands.resume": [[312, 320], ["cmd", "arg", "train.cfg.TrainingCfg.load", "train.experiment.run", "os.join", "click.Path"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.load", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run"], ["", "@", "cmd", "(", ")", "\n", "@", "arg", "(", "\n", "\"exp_path\"", ",", "metavar", "=", "\"EXPERIMENT_PATH\"", ",", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ",", "file_okay", "=", "False", ")", "\n", ")", "\n", "def", "resume", "(", "exp_path", ")", ":", "\n", "    ", "\"\"\"Restore and continue an existing training experiment.\"\"\"", "\n", "cfg", "=", "TrainingCfg", ".", "load", "(", "osp", ".", "join", "(", "exp_path", ",", "TRAIN_CFG_FILENAME", ")", ")", "\n", "run_experiment", "(", "cfg", ",", "is_resume", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.cli.commands.serve": [[327, 351], ["cmd", "arg", "opt", "opt", "inference.service.run", "click.Path"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run"], ["", "@", "cmd", "(", ")", "\n", "@", "arg", "(", "\n", "\"model_path\"", ",", "\n", "metavar", "=", "\"SIMPLE_SAVE_PATH\"", ",", "\n", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ",", "file_okay", "=", "False", ")", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--port\"", ",", "\"-p\"", ",", "type", "=", "int", ",", "default", "=", "5000", ",", "show_default", "=", "True", ",", "help", "=", "\"Serve at this port\"", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--bind\"", ",", "\n", "\"-b\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"localhost\"", ",", "\n", "show_default", "=", "True", ",", "\n", "help", "=", "\"Bind address\"", ",", "\n", ")", "\n", "def", "serve", "(", "model_path", ",", "port", ",", "bind", ")", ":", "\n", "    ", "\"\"\"\n    Serve trained agent in inference mode.\n\n    Provide a path to simple_save checkpoint directory.\n    \"\"\"", "\n", "serve_inference", "(", "model_path", ",", "bind_address", "=", "bind", ",", "port", "=", "port", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.cli.commands.render": [[358, 378], ["cmd", "arg", "opt", "opt", "render.tui.run", "click.Path"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run"], ["", "@", "cmd", "(", ")", "\n", "@", "arg", "(", "\n", "\"model_path\"", ",", "\n", "metavar", "=", "\"SIMPLE_SAVE_PATH\"", ",", "\n", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ",", "file_okay", "=", "False", ")", ",", "\n", ")", "\n", "@", "opt", "(", "\"--seed\"", ",", "type", "=", "int", ",", "default", "=", "TrainingCfg", ".", "DEFAULT_SEED", ",", "help", "=", "\"Random seed value.\"", ")", "\n", "@", "opt", "(", "\n", "\"--server\"", ",", "\n", "type", "=", "HOST_PORT", ",", "\n", "default", "=", "(", "\"127.0.0.1:8081\"", ")", ",", "\n", "help", "=", "\"Address of simulation server.\"", ",", "\n", ")", "\n", "def", "render", "(", "model_path", ",", "server", ",", "seed", ")", ":", "\n", "    ", "\"\"\"\n    Simulates and renders a battle in ncurses TUI.\n\n    Runs inference with trained agent for left player.\n    \"\"\"", "\n", "run_render", "(", "model_path", ",", "server", ",", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.cli.commands.simulate": [[385, 415], ["cmd", "arg", "opt", "opt", "opt", "opt", "server.split", "inference.simulation.run", "click.Path", "click.Choice", "str"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run"], ["", "@", "cmd", "(", ")", "\n", "@", "arg", "(", "\n", "\"model_path\"", ",", "\n", "metavar", "=", "\"SIMPLE_SAVE_PATH\"", ",", "\n", "type", "=", "click", ".", "Path", "(", "exists", "=", "True", ",", "file_okay", "=", "False", ")", ",", "\n", ")", "\n", "@", "opt", "(", "\"--seed\"", ",", "type", "=", "int", ",", "default", "=", "TrainingCfg", ".", "DEFAULT_SEED", ",", "help", "=", "\"Random seed value.\"", ")", "\n", "@", "opt", "(", "\n", "\"-n\"", ",", "\"--num-battles\"", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "\"Number of battles to simulate.\"", "\n", ")", "\n", "@", "opt", "(", "\n", "\"-b\"", ",", "\n", "\"--brain\"", ",", "\n", "type", "=", "click", ".", "Choice", "(", "[", "b", ".", "name", "for", "b", "in", "Brain", "if", "b", "!=", "Brain", ".", "UNDEFINED_DIFFICULTY", "]", ")", ",", "\n", "default", "=", "Brain", ".", "UTILITY_9", ".", "name", ",", "\n", "help", "=", "\"Adversary brain to use for opponent.\"", ",", "\n", ")", "\n", "@", "opt", "(", "\n", "\"--server\"", ",", "\n", "type", "=", "HOST_PORT", ",", "\n", "default", "=", "(", "\"127.0.0.1:8081\"", ")", ",", "\n", "help", "=", "\"Address of simulation server.\"", ",", "\n", ")", "\n", "def", "simulate", "(", "model_path", ",", "seed", ",", "num_battles", ",", "server", ",", "brain", ")", ":", "\n", "    ", "\"\"\"Run inference with trained agent in simulation mode.\n\n    Simulates a number of battles and outputs win rate.\n    \"\"\"", "\n", "host", ",", "port", "=", "server", ".", "split", "(", "\":\"", ")", "\n", "run_inference", "(", "model_path", ",", "host", ",", "port", ",", "num_battles", ",", "seed", ",", "Brain", "[", "str", "(", "brain", ")", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.cli.types.HostPortPair.convert": [[8, 22], ["value.split", "len", "types.HostPortPair.fail", "len", "types.HostPortPair.fail", "int", "types.HostPortPair.fail"], "methods", ["None"], ["def", "convert", "(", "self", ",", "value", ",", "param", ",", "ctx", ")", ":", "\n", "        ", "parts", "=", "value", ".", "split", "(", "\":\"", ")", "\n", "if", "len", "(", "parts", ")", "!=", "2", ":", "\n", "            ", "self", ".", "fail", "(", "\"{} is not a valid host:port pair\"", ".", "format", "(", "value", ")", ",", "param", ",", "ctx", ")", "\n", "return", "\n", "", "host", "=", "parts", "[", "0", "]", "\n", "if", "len", "(", "host", ")", "<=", "0", ":", "\n", "            ", "self", ".", "fail", "(", "\"{} has empty host part\"", ".", "format", "(", "value", ")", ",", "param", ",", "ctx", ")", "\n", "return", "\n", "", "try", ":", "\n", "            ", "_", "=", "int", "(", "parts", "[", "1", "]", ")", "\n", "return", "value", "\n", "", "except", "ValueError", ":", "\n", "            ", "self", ".", "fail", "(", "\"{} does not contain a valid port\"", ".", "format", "(", "value", ")", ",", "param", ",", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.cli.__init__.main_callable": [[6, 23], ["click.group", "main.add_command", "main.add_command", "main.add_command", "main.add_command", "main.add_command", "partial"], "function", ["None"], []], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.from_yaml": [[70, 76], ["utils.serialization.safe_load_yaml", "cls", "cls.update"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.safe_load_yaml", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.update"], ["@", "classmethod", "\n", "def", "from_yaml", "(", "cls", ",", "yaml_string", ")", ":", "\n", "        ", "d", "=", "serialization", ".", "safe_load_yaml", "(", "yaml_string", ")", "\n", "cfg", "=", "cls", "(", ")", "\n", "cfg", ".", "update", "(", "d", ")", "\n", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.load": [[77, 81], ["open", "cls.from_yaml", "f.read"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.from_yaml"], ["", "@", "classmethod", "\n", "def", "load", "(", "cls", ",", "yaml_file", ")", ":", "\n", "        ", "with", "open", "(", "yaml_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "return", "cls", ".", "from_yaml", "(", "f", ".", "read", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg._assert_update": [[82, 95], ["d.items", "isinstance", "ValueError", "k.startswith", "isinstance", "ValueError", "ValueError", "isinstance", "ValueError", "cfg.DictCfg.__dict__[]._assert_update"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg._assert_update"], ["", "", "def", "_assert_update", "(", "self", ",", "d", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "d", ",", "dict", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"need a dict for update()\"", ")", "\n", "", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "not", "in", "self", ".", "__dict__", ":", "\n", "                ", "raise", "ValueError", "(", "\"%s is not cfg field\"", "%", "k", ")", "\n", "", "if", "k", ".", "startswith", "(", "\"_\"", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\"cannot set private cfg fields\"", ")", "\n", "", "if", "isinstance", "(", "self", ".", "__dict__", "[", "k", "]", ",", "DictCfg", ")", ":", "\n", "                ", "if", "not", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "                    ", "raise", "ValueError", "(", "\"expecting dict for DictCfg field %s\"", "%", "k", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "__dict__", "[", "k", "]", ".", "_assert_update", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.update": [[96, 110], ["cfg.DictCfg._assert_update", "cfg.DictCfg._pre_update", "d.items", "cfg.DictCfg._post_update", "isinstance", "cfg.DictCfg.__dict__[].update"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg._assert_update", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg._pre_update", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg._post_update", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.update"], ["", "", "", "", "def", "update", "(", "self", ",", "d", ":", "dict", ")", ":", "\n", "# Validate first", "\n", "        ", "self", ".", "_assert_update", "(", "d", ")", "\n", "\n", "self", ".", "_pre_update", "(", "d", ")", "\n", "\n", "# Do the updates", "\n", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "self", ".", "__dict__", "[", "k", "]", ",", "DictCfg", ")", ":", "\n", "                ", "self", ".", "__dict__", "[", "k", "]", ".", "update", "(", "v", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "__dict__", "[", "k", "]", "=", "v", "\n", "\n", "", "", "self", ".", "_post_update", "(", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.as_dict": [[111, 113], ["isinstance", "v.as_dict"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.as_dict"], ["", "def", "as_dict", "(", "self", ")", ":", "\n", "        ", "return", "{", "k", ":", "v", ".", "as_dict", "(", ")", "if", "isinstance", "(", "v", ",", "DictCfg", ")", "else", "v", "for", "k", ",", "v", "in", "self", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.as_yaml": [[114, 116], ["utils.serialization.safe_dump_yaml", "cfg.DictCfg.as_dict"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.serialization.safe_dump_yaml", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.as_dict"], ["", "def", "as_yaml", "(", "self", ")", ":", "\n", "        ", "return", "serialization", ".", "safe_dump_yaml", "(", "self", ".", "as_dict", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.save": [[117, 120], ["open", "f.write", "cfg.DictCfg.as_yaml"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.as_yaml"], ["", "def", "save", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "self", ".", "as_yaml", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg._pre_update": [[121, 123], ["None"], "methods", ["None"], ["", "", "def", "_pre_update", "(", "self", ",", "d", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg._post_update": [[124, 126], ["None"], "methods", ["None"], ["", "def", "_post_update", "(", "self", ",", "d", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.__getitem__": [[127, 131], ["key.startswith", "ValueError"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "        ", "if", "key", ".", "startswith", "(", "\"_\"", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"cannot query private cfg fields\"", ")", "\n", "", "return", "self", ".", "__dict__", "[", "key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.__repr__": [[132, 134], ["cfg.DictCfg.__dict__.__repr__"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__dict__", ".", "__repr__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.__iter__": [[135, 139], ["cfg.DictCfg.__dict__.items", "k.startswith"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "self", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "k", ".", "startswith", "(", "\"_\"", ")", ":", "\n", "                ", "yield", "(", "k", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.HyperparametersCfg.__init__": [[164, 195], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gamma", "=", "self", ".", "DEFAULT_GAMMA", "\n", "\n", "# Hyperparameter for clipping in the policy objective.", "\n", "# Roughly: how far can the new policy go from the old policy while", "\n", "# still profiting (improving the objective function)? The new policy", "\n", "# can still go farther than the clip_ratio says, but it doesn't help", "\n", "# on the objective anymore. (Usually small, 0.1 to 0.3.)", "\n", "self", ".", "clip_ratio", "=", "self", ".", "DEFAULT_CLIP_RATIO", "\n", "\n", "self", ".", "pi_lr", "=", "self", ".", "DEFAULT_PI_LR", "\n", "self", ".", "vf_lr", "=", "self", ".", "DEFAULT_VF_LR", "\n", "\n", "# This learning rate is used in case of unified policy/value network.", "\n", "self", ".", "lr", "=", "self", ".", "DEFAULT_LR", "\n", "\n", "self", ".", "max_grad_norm", "=", "self", ".", "DEFAULT_MAX_GRAD_NORM", "\n", "self", ".", "train_pi_iters", "=", "self", ".", "DEFAULT_TRAIN_PI_ITERS", "\n", "self", ".", "train_v_iters", "=", "self", ".", "DEFAULT_TRAIN_V_ITERS", "\n", "self", ".", "lam", "=", "self", ".", "DEFAULT_LAM", "\n", "self", ".", "target_kl", "=", "self", ".", "DEFAULT_TARGET_KL", "\n", "self", ".", "clip_range_vf", "=", "self", ".", "DEFAULT_CLIP_RANGE_VF", "\n", "self", ".", "vf_loss_coef", "=", "self", ".", "DEFAULT_VF_LOSS_COEF", "\n", "self", ".", "pi_loss_coef", "=", "self", ".", "DEFAULT_PI_LOSS_COEF", "\n", "self", ".", "vf_reg", "=", "self", ".", "DEFAULT_VF_REG", "\n", "self", ".", "clip_vf_output", "=", "self", ".", "DEFAULT_CLIP_VF_OUTPUT", "\n", "self", ".", "grad_clipping_enabled", "=", "self", ".", "DEFAULT_GRAD_CLIPPING_ENABLED", "\n", "self", ".", "value_clipping_enabled", "=", "self", ".", "DEFAULT_VALUE_CLIPPING_ENABLED", "\n", "self", ".", "vf_reg_enabled", "=", "self", ".", "DEFAULT_VF_REG_ENABLED", "\n", "self", ".", "bias_noops", "=", "self", ".", "DEFAULT_BIAS_NOOPS", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.__init__": [[218, 260], ["object.__init__", "cfg.SpellsCfg._post_update"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.__init__", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg._post_update"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# List of spells to disable.", "\n", "self", ".", "disabled_spells", "=", "self", ".", "DEFAULT_DISABLED_SPELLS", "\n", "\n", "# Is noop enabled for spawn (minion) spells?", "\n", "self", ".", "spawn_noop", "=", "self", ".", "DEFAULT_SPAWN_NOOP", "\n", "\n", "# Is noop enabled for regular spells?", "\n", "self", ".", "spell_noop", "=", "self", ".", "DEFAULT_SPELL_NOOP", "\n", "\n", "# Max time until spell is available - time until spell is available is", "\n", "# normalized according to this.", "\n", "self", ".", "max_seconds_until_available", "=", "self", ".", "DEFAULT_MAX_SECONDS_UNTIL_AVAILABLE", "\n", "\n", "# Used to offset spell levels by rarities - common spells need", "\n", "# more level-ups in order to match against rare spells of lower levels.", "\n", "self", ".", "level_offsets_by_rarity", "=", "self", ".", "DEFAULT_LEVEL_OFFSETS_BY_RARITY", "\n", "\n", "self", ".", "min_spell_level", "=", "self", ".", "DEFAULT_MIN_SPELL_LEVEL", "\n", "self", ".", "max_spell_level", "=", "self", ".", "DEFAULT_MAX_SPELL_LEVEL", "\n", "self", ".", "min_arena_level", "=", "self", ".", "DEFAULT_MIN_ARENA_LEVEL", "\n", "self", ".", "max_arena_level", "=", "self", ".", "DEFAULT_MAX_ARENA_LEVEL", "\n", "\n", "self", ".", "reference_spell_level_enabled", "=", "self", ".", "DEFAULT_REFERENCE_SPELL_LEVEL_ENABLED", "\n", "self", ".", "reference_spell_level", "=", "self", ".", "DEFAULT_REFERENCE_SPELL_LEVEL", "\n", "\n", "self", ".", "_enabled_spells", "=", "None", "\n", "self", ".", "_enabled_units", "=", "None", "\n", "\n", "# Mappings", "\n", "self", ".", "_unit_to_idx", "=", "None", "\n", "self", ".", "_spell_to_idx", "=", "None", "\n", "self", ".", "_idx_to_spell", "=", "None", "\n", "self", ".", "_nonspawn_spell_to_idx", "=", "None", "\n", "\n", "# Binary spell masks", "\n", "self", ".", "_mask_nonspawn", "=", "None", "\n", "self", ".", "_mask_spawn", "=", "None", "\n", "\n", "self", ".", "_post_update", "(", "{", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.num_spells": [[261, 264], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_spells", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "enabled_spells", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.num_units": [[265, 268], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_units", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "enabled_units", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.mask_spawn": [[269, 272], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mask_spawn", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_mask_spawn", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.mask_nonspawn": [[273, 276], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mask_nonspawn", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_mask_nonspawn", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.enabled_spells": [[277, 280], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "enabled_spells", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_enabled_spells", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.enabled_units": [[281, 284], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "enabled_units", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_enabled_units", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.unit_to_idx": [[285, 287], ["None"], "methods", ["None"], ["", "def", "unit_to_idx", "(", "self", ",", "unit_type", ")", ":", "\n", "        ", "return", "self", ".", "_unit_to_idx", "[", "unit_type", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx": [[288, 290], ["None"], "methods", ["None"], ["", "def", "spell_to_idx", "(", "self", ",", "spell_type", ")", ":", "\n", "        ", "return", "self", ".", "_spell_to_idx", "[", "spell_type", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.idx_to_spell": [[291, 293], ["None"], "methods", ["None"], ["", "def", "idx_to_spell", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "_idx_to_spell", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.num_noops": [[294, 301], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_noops", "(", "self", ")", ":", "\n", "        ", "num_noops", "=", "0", "\n", "for", "spell", "in", "self", ".", "_enabled_spells", ":", "\n", "            ", "if", "spell", ".", "is_noop", ":", "\n", "                ", "num_noops", "+=", "1", "\n", "", "", "return", "num_noops", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.get_level_increment": [[302, 316], ["numpy.clip", "numpy.clip", "int", "round"], "methods", ["None"], ["", "def", "get_level_increment", "(", "self", ",", "rarity", ",", "arena_level", ")", ":", "\n", "        ", "low", "=", "self", ".", "level_offsets_by_rarity", "[", "rarity", "]", "+", "self", ".", "min_spell_level", "\n", "high", "=", "self", ".", "max_spell_level", "\n", "if", "self", ".", "reference_spell_level_enabled", ":", "\n", "            ", "return", "np", ".", "clip", "(", "self", ".", "reference_spell_level", "-", "low", ",", "0", ",", "high", "-", "low", ")", "\n", "", "else", ":", "\n", "# Use arena level to figure out level increment.", "\n", "            ", "t", "=", "np", ".", "clip", "(", "\n", "(", "arena_level", "-", "self", ".", "min_arena_level", ")", "\n", "/", "(", "self", ".", "max_arena_level", "-", "self", ".", "min_arena_level", ")", ",", "\n", "0", ",", "\n", "1", ",", "\n", ")", "\n", "return", "int", "(", "round", "(", "t", "*", "(", "high", "-", "low", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.get_castle_level": [[317, 319], ["cfg.SpellsCfg.get_level_increment"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.get_level_increment"], ["", "", "def", "get_castle_level", "(", "self", ",", "arena_level", ")", ":", "\n", "        ", "return", "1", "+", "self", ".", "get_level_increment", "(", "Rarity", ".", "COMMON", ",", "arena_level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg._build_enabled_spells_and_units": [[320, 341], ["units_to_enable.append", "isinstance", "cfg.SpellsCfg._build_enabled_spells_and_units.enable_unit"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "_build_enabled_spells_and_units", "(", "self", ")", ":", "\n", "        ", "self", ".", "_enabled_spells", "=", "[", "\n", "spell", "for", "spell", "in", "Spell", "if", "spell", "not", "in", "self", ".", "disabled_spells", "\n", "]", "\n", "units_to_enable", "=", "[", "]", "\n", "\n", "def", "enable_unit", "(", "unit", ")", ":", "\n", "            ", "if", "unit", "not", "in", "units_to_enable", ":", "\n", "                ", "units_to_enable", ".", "append", "(", "unit", ")", "\n", "\n", "", "", "for", "spell", "in", "self", ".", "_enabled_spells", ":", "\n", "            ", "units_spawned", "=", "spell", ".", "units_spawned", "\n", "if", "units_spawned", "is", "None", ":", "\n", "                ", "continue", "\n", "", "elif", "isinstance", "(", "units_spawned", ",", "list", ")", ":", "\n", "                ", "for", "unit", "in", "units_spawned", ":", "\n", "                    ", "enable_unit", "(", "unit", ")", "\n", "", "", "else", ":", "\n", "                ", "enable_unit", "(", "units_spawned", ")", "\n", "\n", "", "", "self", ".", "_enabled_units", "=", "units_to_enable", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg._post_update": [[342, 346], ["cfg.SpellsCfg._build_enabled_spells_and_units", "cfg.SpellsCfg._build_spell_unit_mappings", "cfg.SpellsCfg._build_spell_binary_masks"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg._build_enabled_spells_and_units", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg._build_spell_unit_mappings", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg._build_spell_binary_masks"], ["", "def", "_post_update", "(", "self", ",", "d", ")", ":", "\n", "        ", "self", ".", "_build_enabled_spells_and_units", "(", ")", "\n", "self", ".", "_build_spell_unit_mappings", "(", ")", "\n", "self", ".", "_build_spell_binary_masks", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg._build_spell_binary_masks": [[347, 374], ["numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "float", "float", "float", "float"], "methods", ["None"], ["", "def", "_build_spell_binary_masks", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "spell_noop", ":", "\n", "            ", "self", ".", "_mask_nonspawn", "=", "np", ".", "array", "(", "\n", "[", "\n", "float", "(", "not", "spell", ".", "is_spawn", "or", "spell", ".", "is_noop", ")", "# for noop", "\n", "for", "spell", "in", "self", ".", "enabled_spells", "\n", "]", "\n", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_mask_nonspawn", "=", "np", ".", "array", "(", "\n", "[", "\n", "float", "(", "not", "(", "spell", ".", "is_spawn", "or", "spell", ".", "is_noop", ")", ")", "# for no noop", "\n", "for", "spell", "in", "self", ".", "enabled_spells", "\n", "]", "\n", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "\n", "", "if", "self", ".", "spawn_noop", ":", "\n", "            ", "self", ".", "_mask_spawn", "=", "np", ".", "array", "(", "\n", "[", "\n", "float", "(", "spell", ".", "is_spawn", "or", "spell", ".", "is_noop", ")", "\n", "for", "spell", "in", "self", ".", "enabled_spells", "\n", "]", "\n", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_mask_spawn", "=", "np", ".", "array", "(", "\n", "[", "float", "(", "spell", ".", "is_spawn", ")", "for", "spell", "in", "self", ".", "enabled_spells", "]", "\n", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg._build_spell_unit_mappings": [[375, 384], ["int", "int", "enumerate", "enumerate", "enumerate"], "methods", ["None"], ["", "", "def", "_build_spell_unit_mappings", "(", "self", ")", ":", "\n", "        ", "self", ".", "_unit_to_idx", "=", "{", "\n", "int", "(", "unit", ")", ":", "idx", "for", "idx", ",", "unit", "in", "enumerate", "(", "self", ".", "enabled_units", ")", "\n", "}", "\n", "self", ".", "_spell_to_idx", "=", "{", "\n", "int", "(", "spell", ")", ":", "idx", "for", "idx", ",", "spell", "in", "enumerate", "(", "self", ".", "enabled_spells", ")", "\n", "}", "\n", "self", ".", "_idx_to_spell", "=", "{", "\n", "idx", ":", "spell", "for", "idx", ",", "spell", "in", "enumerate", "(", "self", ".", "enabled_spells", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.__init__": [[401, 413], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "min_x", "=", "self", ".", "DEFAULT_MIN_X", "\n", "self", ".", "max_x", "=", "self", ".", "DEFAULT_MAX_X", "\n", "self", ".", "min_y", "=", "self", ".", "DEFAULT_MIN_Y", "\n", "self", ".", "max_y", "=", "self", ".", "DEFAULT_MAX_Y", "\n", "\n", "self", ".", "bin_width", "=", "self", ".", "DEFAULT_BIN_WIDTH", "\n", "self", ".", "num_lanes", "=", "self", ".", "DEFAULT_NUM_LANES", "\n", "\n", "# Duration of battle is normalized according to this.", "\n", "self", ".", "max_battle_time_seconds", "=", "self", ".", "DEFAULT_MAX_BATTLE_TIME_SECONDS", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.num_bins": [[414, 417], ["int"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_bins", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "(", "self", ".", "max_x", "-", "self", ".", "min_x", ")", "/", "self", ".", "bin_width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.x_to_bin": [[418, 420], ["min", "int"], "methods", ["None"], ["", "def", "x_to_bin", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "min", "(", "self", ".", "num_bins", "-", "1", ",", "int", "(", "(", "x", "-", "self", ".", "min_x", ")", "/", "self", ".", "bin_width", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.y_to_lane": [[421, 423], ["int"], "methods", ["None"], ["", "def", "y_to_lane", "(", "self", ",", "y", ")", ":", "\n", "        ", "return", "int", "(", "y", "-", "self", ".", "min_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.bin_to_x": [[424, 426], ["float"], "methods", ["None"], ["", "def", "bin_to_x", "(", "self", ",", "bin", ")", ":", "\n", "        ", "return", "float", "(", "bin", "*", "self", ".", "bin_width", "+", "self", ".", "min_x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.lane_to_y": [[427, 429], ["float"], "methods", ["None"], ["", "def", "lane_to_y", "(", "self", ",", "lane", ")", ":", "\n", "        ", "return", "float", "(", "lane", "+", "self", ".", "min_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.ArchitectureCfg.__init__": [[459, 478], ["object.__init__", "cfg.ArchitectureCfg.ParamsCfg", "cfg.ArchitectureCfg.ParamsCfg", "cfg.ArchitectureCfg.ParamsCfg", "cfg.ArchitectureCfg.ParamsCfg", "cfg.ArchitectureCfg._post_update"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.__init__", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg._post_update"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "value_params", "=", "self", ".", "ParamsCfg", "(", ")", "\n", "self", ".", "shared_params", "=", "self", ".", "ParamsCfg", "(", ")", "\n", "self", ".", "spawn_params", "=", "self", ".", "ParamsCfg", "(", ")", "\n", "self", ".", "spell_params", "=", "self", ".", "ParamsCfg", "(", ")", "\n", "self", ".", "rnn", "=", "self", ".", "DEFAULT_RNN", "\n", "self", ".", "rnn_size", "=", "self", ".", "DEFAULT_RNN_SIZE", "\n", "self", ".", "unified_policy_value", "=", "self", ".", "DEFAULT_UNIFIED_POLICY_VALUE", "\n", "\n", "# Number of stacked spatial observations used as input.", "\n", "self", ".", "num_stacked_past_exp", "=", "self", ".", "DEFAULT_NUM_STACKED_PAST_EXP", "\n", "\n", "# Whether to use orthogonal non-spatial spell observations.", "\n", "self", ".", "non_spatial_orthogonal_enabled", "=", "(", "\n", "self", ".", "DEFAULT_NON_SPATIAL_ORTHOGONAL_ENABLED", "\n", ")", "\n", "\n", "self", ".", "_post_update", "(", "{", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.ArchitectureCfg.empty_rnn_state": [[479, 482], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "empty_rnn_state", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_empty_rnn_state", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.ArchitectureCfg._post_update": [[483, 485], ["numpy.zeros"], "methods", ["None"], ["", "def", "_post_update", "(", "self", ",", "d", ")", ":", "\n", "        ", "self", ".", "_empty_rnn_state", "=", "np", ".", "zeros", "(", "[", "1", ",", "2", "*", "self", ".", "rnn_size", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.__init__": [[508, 539], ["object.__init__", "cfg.SpellsCfg", "cfg.HyperparametersCfg", "cfg.MapCfg", "cfg.ArchitectureCfg", "cfg.TrainingCfg._post_update"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.__init__", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg._post_update"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "spells", "=", "SpellsCfg", "(", ")", "\n", "self", ".", "hyperparameters", "=", "HyperparametersCfg", "(", ")", "\n", "self", ".", "map", "=", "MapCfg", "(", ")", "\n", "self", ".", "architecture", "=", "ArchitectureCfg", "(", ")", "\n", "\n", "self", ".", "cpus", "=", "self", ".", "DEFAULT_CPUS", "\n", "self", ".", "gpus", "=", "self", ".", "DEFAULT_GPUS", "\n", "self", ".", "exp_name", "=", "self", ".", "DEFAULT_EXP_NAME", "\n", "self", ".", "steps", "=", "self", ".", "DEFAULT_STEPS", "\n", "self", ".", "batch_size", "=", "self", ".", "DEFAULT_BATCH_SIZE", "\n", "self", ".", "epochs", "=", "self", ".", "DEFAULT_EPOCHS", "\n", "# Maximum length of trajectory / episode / battle in steps.", "\n", "self", ".", "max_ep_len", "=", "self", ".", "DEFAULT_MAX_EP_LEN", "\n", "self", ".", "seed", "=", "self", ".", "DEFAULT_SEED", "\n", "self", ".", "servers", "=", "self", ".", "DEFAULT_SERVERS", "\n", "self", ".", "num_agents", "=", "self", ".", "DEFAULT_NUM_AGENTS", "\n", "self", ".", "epochs_per_agent", "=", "self", ".", "DEFAULT_EPOCHS_PER_AGENT", "\n", "self", ".", "save_frequency_epochs", "=", "self", ".", "DEFAULT_SAVE_FREQUENCY_EPOCHS", "\n", "self", ".", "plan", "=", "self", ".", "DEFAULT_PLAN", "\n", "self", ".", "reward", "=", "self", ".", "DEFAULT_REWARD", "\n", "self", ".", "data_dir", "=", "self", ".", "DEFAULT_DATA_DIR", "\n", "self", ".", "decks_csv_path", "=", "self", ".", "DEFAULT_DECKS_CSV_PATH", "\n", "self", ".", "spatial_mask_static_enabled", "=", "self", ".", "DEFAULT_SPATIAL_MASK_STATIC_ENABLED", "\n", "self", ".", "spatial_mask_dynamic_enabled", "=", "self", ".", "DEFAULT_SPATIAL_MASK_DYNAMIC_ENABLED", "\n", "\n", "self", ".", "_deck_repo", "=", "None", "\n", "self", ".", "_mask_spatial_static", "=", "None", "\n", "\n", "self", ".", "_post_update", "(", "{", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.output_dir": [[540, 545], ["os.join", "os.join", "str"], "methods", ["None"], ["", "@", "property", "\n", "def", "output_dir", "(", "self", ")", ":", "\n", "# Make a seed-specific subfolder in the experiment directory.", "\n", "        ", "subfolder", "=", "\"\"", ".", "join", "(", "[", "self", ".", "exp_name", ",", "\"_s\"", ",", "str", "(", "self", ".", "seed", ")", "]", ")", "\n", "return", "osp", ".", "join", "(", "self", ".", "data_dir", ",", "self", ".", "exp_name", ",", "subfolder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.logger_kwargs": [[546, 550], ["dict"], "methods", ["None"], ["", "@", "property", "\n", "def", "logger_kwargs", "(", "self", ")", ":", "\n", "        ", "\"\"\"logger_kwargs (dict): Keyword args for EpochLogger.\"\"\"", "\n", "return", "dict", "(", "output_dir", "=", "self", ".", "output_dir", ",", "exp_name", "=", "self", ".", "exp_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.get_agent_logger_kwargs": [[551, 556], ["dict", "os.join", "os.join"], "methods", ["None"], ["", "def", "get_agent_logger_kwargs", "(", "self", ",", "agent", ")", ":", "\n", "        ", "\"\"\"logger_kwargs (dict): Keyword args for EpochLogger.\"\"\"", "\n", "return", "dict", "(", "\n", "output_dir", "=", "osp", ".", "join", "(", "self", ".", "output_dir", ",", "\"agent_%d\"", "%", "agent", ".", "id", ")", ",", "\n", "exp_name", "=", "self", ".", "exp_name", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.local_steps_per_epoch": [[558, 562], ["int"], "methods", ["None"], ["", "@", "property", "\n", "def", "local_steps_per_epoch", "(", "self", ")", ":", "\n", "        ", "\"\"\"Steps per epoch for each process.\"\"\"", "\n", "return", "int", "(", "self", ".", "steps", "/", "self", ".", "cpus", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.create_env": [[563, 569], ["gym.make"], "methods", ["None"], ["", "def", "create_env", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        A function which creates a copy of the environment.\n        The environment must satisfy the OpenAI Gym API.\n        \"\"\"", "\n", "return", "gym", ".", "make", "(", "\"Heroic-v0\"", ",", "cfg", "=", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.create_plan": [[570, 572], ["getattr"], "methods", ["None"], ["", "def", "create_plan", "(", "self", ",", "actor", ")", ":", "\n", "        ", "return", "getattr", "(", "Plans", ",", "self", ".", "plan", ")", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.reward_fn": [[573, 576], ["getattr"], "methods", ["None"], ["", "@", "property", "\n", "def", "reward_fn", "(", "self", ")", ":", "\n", "        ", "return", "getattr", "(", "Rewards", ",", "self", ".", "reward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.decks": [[577, 580], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "decks", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_deck_repo", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.mask_spatial_static": [[581, 584], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mask_spatial_static", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_mask_spatial_static", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.obs_spatial_shape": [[585, 596], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "obs_spatial_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Spatial observations are cummulative health percentages of creeps of\n        the same type, occupying the same discrete bin in one lane, for one\n        player.\n        \"\"\"", "\n", "return", "(", "\n", "self", ".", "map", ".", "num_lanes", ",", "\n", "self", ".", "map", ".", "num_bins", ",", "\n", "2", "*", "self", ".", "spells", ".", "num_units", "*", "self", ".", "architecture", ".", "num_stacked_past_exp", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.obs_non_spatial_shape": [[598, 609], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "obs_non_spatial_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Non-spatial observations contain own and opponent's castle health\n        percent, current battle time, and indicator of when spells are available\n        for casting.\n        \"\"\"", "\n", "if", "self", ".", "architecture", ".", "non_spatial_orthogonal_enabled", ":", "\n", "            ", "return", "(", "3", "*", "self", ".", "spells", ".", "num_spells", "+", "3", ",", ")", "\n", "", "else", ":", "\n", "            ", "return", "(", "self", ".", "spells", ".", "num_spells", "+", "3", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.obs_mask_spatial_shape": [[610, 619], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "obs_mask_spatial_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Spatial mask is a binary mask that is 1 at places where certain spell\n        can be cast and 0 otherwise.\n        \"\"\"", "\n", "return", "(", "\n", "self", ".", "spells", ".", "num_spells", ",", "\n", "self", ".", "map", ".", "num_lanes", "*", "self", ".", "map", ".", "num_bins", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.obs_mask_spell_shape": [[621, 628], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "obs_mask_spell_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Spell mask is a binary mask that is 1 for spells that can be played right now,\n        and 0 otherwise.\n        \"\"\"", "\n", "return", "(", "self", ".", "spells", ".", "num_spells", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.obs_if_spawn_spell_shape": [[629, 636], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "obs_if_spawn_spell_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        This observation is a boolean flag that determines whether we are\n        querying policy for a spawn (minion) spell (1) or regular spell (0).\n        \"\"\"", "\n", "return", "(", "1", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.act_spatial_shape": [[637, 644], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "act_spatial_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Spatial action defines place on the map where spell will be cast, and it\n        is in `[0, NUM_LANES * NUM_BINS]` range.\n        \"\"\"", "\n", "return", "self", ".", "map", ".", "num_lanes", "*", "self", ".", "map", ".", "num_bins", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.act_spell_shape": [[645, 651], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "act_spell_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Spell action determines index of spell which will be cast.\n        \"\"\"", "\n", "return", "self", ".", "spells", ".", "num_spells", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg._post_update": [[652, 656], ["os.abspath", "os.abspath", "decks.DeckRepository.from_csv", "cfg.TrainingCfg._build_mask_spatial_static"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.decks.DeckRepository.from_csv", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg._build_mask_spatial_static"], ["", "def", "_post_update", "(", "self", ",", "d", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "osp", ".", "abspath", "(", "self", ".", "data_dir", ")", "\n", "self", ".", "_deck_repo", "=", "DeckRepository", ".", "from_csv", "(", "self", ".", "decks_csv_path", ",", "self", ")", "\n", "self", ".", "_mask_spatial_static", "=", "self", ".", "_build_mask_spatial_static", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg._build_mask_spatial_static": [[657, 688], ["numpy.ones", "range", "cfg.TrainingCfg.spells.idx_to_spell", "range", "range"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.idx_to_spell"], ["", "def", "_build_mask_spatial_static", "(", "self", ")", ":", "\n", "# Static spatial mask that never changes", "\n", "        ", "mask_spatial", "=", "np", ".", "ones", "(", "\n", "(", "self", ".", "spells", ".", "num_spells", ",", "self", ".", "map", ".", "num_lanes", "*", "self", ".", "map", ".", "num_bins", ",", ")", "\n", ")", "\n", "\n", "if", "not", "self", ".", "spatial_mask_static_enabled", ":", "\n", "            ", "return", "mask_spatial", "\n", "\n", "", "for", "spell_idx", "in", "range", "(", "self", ".", "spells", ".", "num_spells", ")", ":", "\n", "            ", "spell", "=", "self", ".", "spells", ".", "idx_to_spell", "(", "spell_idx", ")", "\n", "if", "spell", ".", "casting_strategy", "==", "CastingStrategy", ".", "ENTIRE_MAP", ":", "\n", "# Nothing to do, ones everywhere is what we need.", "\n", "                ", "continue", "\n", "", "elif", "spell", ".", "casting_strategy", "==", "CastingStrategy", ".", "DOES_NOT_MATTER", ":", "\n", "# Enable first coordinate only.", "\n", "                ", "mask_spatial", "[", "spell_idx", ",", "1", ":", "]", "=", "0", "\n", "", "elif", "spell", ".", "casting_strategy", "==", "CastingStrategy", ".", "SINGLE_LANE", ":", "\n", "# Enable first coordinate in each lane.", "\n", "                ", "for", "lane", "in", "range", "(", "self", ".", "map", ".", "num_lanes", ")", ":", "\n", "                    ", "lane_start", "=", "lane", "*", "self", ".", "map", ".", "num_bins", "\n", "next_lane_start", "=", "(", "lane", "+", "1", ")", "*", "self", ".", "map", ".", "num_bins", "\n", "mask_spatial", "[", "spell_idx", ",", "(", "lane_start", "+", "1", ")", ":", "next_lane_start", "]", "=", "0", "\n", "", "", "elif", "spell", ".", "casting_strategy", "==", "CastingStrategy", ".", "CONTROLLED_AREA", ":", "\n", "# Enable own half of map.", "\n", "                ", "for", "lane", "in", "range", "(", "self", ".", "map", ".", "num_lanes", ")", ":", "\n", "                    ", "half_lane", "=", "lane", "*", "self", ".", "map", ".", "num_bins", "+", "self", ".", "map", ".", "num_bins", "//", "2", "\n", "next_lane_start", "=", "(", "lane", "+", "1", ")", "*", "self", ".", "map", ".", "num_bins", "\n", "mask_spatial", "[", "spell_idx", ",", "(", "half_lane", "+", "1", ")", ":", "next_lane_start", "]", "=", "0", "\n", "\n", "", "", "", "return", "mask_spatial", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg._get_default_cpus": [[24, 34], ["psutil.cpu_count", "logger.warning"], "function", ["None"], ["def", "_get_default_cpus", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "import", "psutil", "\n", "\n", "return", "psutil", ".", "cpu_count", "(", "logical", "=", "False", ")", "\n", "", "except", "ImportError", ":", "\n", "        ", "logger", ".", "warning", "(", "\n", "\"Could not determine CPU count, install psutil for sane defaults\"", "\n", ")", "\n", "return", "4", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg._get_default_cuda_devices": [[36, 57], ["list", "subprocess.check_output", "eval", "map", "logger.error", "sys.exit", "os.environ[].split", "os.environ[].split"], "function", ["None"], ["", "", "def", "_get_default_cuda_devices", "(", ")", ":", "\n", "    ", "if", "\"CUDA_VISIBLE_DEVICES\"", "in", "os", ".", "environ", ":", "\n", "        ", "return", "list", "(", "map", "(", "int", ",", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", ".", "split", "(", "\",\"", ")", ")", ")", "\n", "\n", "# We need to list GPUs in a subprocess so we don't accidentally allocate", "\n", "# all GPUs.", "\n", "", "cmd", "=", "[", "\n", "sys", ".", "executable", "if", "sys", ".", "executable", "else", "\"python3\"", ",", "\n", "\"-c\"", ",", "\n", "\"import tensorflow as tf; print([\"", "\n", "+", "\"int(device.name.split(':')[-1])\"", "\n", "+", "\"for device in tf.config.experimental.list_physical_devices('GPU')\"", "\n", "+", "\"])\"", ",", "\n", "]", "\n", "\n", "try", ":", "\n", "        ", "visible_gpus", "=", "subprocess", ".", "check_output", "(", "cmd", ",", "env", "=", "os", ".", "environ", ")", "\n", "return", "eval", "(", "visible_gpus", ")", "\n", "", "except", "subprocess", ".", "CalledProcessError", "as", "cpe", ":", "\n", "        ", "logger", ".", "error", "(", "\"Failed to get visible GPUs, exit code %d\"", "%", "cpe", ".", "returncode", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Condition.is_met": [[25, 29], ["None"], "methods", ["None"], ["@", "abstractmethod", "\n", "def", "is_met", "(", "self", ",", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "        ", "\"\"\"This method should return `True` when plan should be advanced.\"\"\"", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Condition.reset": [[30, 34], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "reset", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "\"\"\"This method resets internal state of condition when stage becomes active.\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Condition.all": [[35, 48], ["CompositeCondition", "plan.Condition.all"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.all"], ["", "@", "staticmethod", "\n", "def", "all", "(", "conditions", ")", ":", "\n", "        ", "class", "CompositeCondition", "(", "Condition", ")", ":", "\n", "            ", "def", "is_met", "(", "self", ",", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "                ", "return", "all", "(", "\n", "condition", ".", "is_met", "(", "epoch", ",", "epoch_win_rate", ")", "for", "condition", "in", "conditions", "\n", ")", "\n", "\n", "", "def", "reset", "(", "self", ",", "epoch", ")", ":", "\n", "                ", "for", "condition", "in", "conditions", ":", "\n", "                    ", "condition", ".", "reset", "(", "epoch", ")", "\n", "\n", "", "", "", "return", "CompositeCondition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Condition.always_met": [[49, 56], ["AlwaysMetCondition"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "always_met", "(", ")", ":", "\n", "        ", "class", "AlwaysMetCondition", "(", "Condition", ")", ":", "\n", "            ", "def", "is_met", "(", "self", ",", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "                ", "return", "True", "\n", "\n", "", "", "return", "AlwaysMetCondition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.AtLeastNumEpochsCondition.__init__": [[61, 64], ["plan.AtLeastNumEpochsCondition.reset"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.reset"], ["def", "__init__", "(", "self", ",", "num_epochs", ")", ":", "\n", "        ", "self", ".", "_num_epochs", "=", "num_epochs", "\n", "self", ".", "reset", "(", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.AtLeastNumEpochsCondition.reset": [[65, 67], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "_first_epoch", "=", "epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.AtLeastNumEpochsCondition.is_met": [[68, 70], ["None"], "methods", ["None"], ["", "def", "is_met", "(", "self", ",", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "        ", "return", "epoch", "-", "self", ".", "_first_epoch", ">=", "self", ".", "_num_epochs", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.MinWinRateCondition.__init__": [[79, 83], ["plan.MinWinRateCondition.reset"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.reset"], ["def", "__init__", "(", "self", ",", "min_win_rate", ",", "num_epochs", ")", ":", "\n", "        ", "self", ".", "_min_wr", "=", "min_win_rate", "\n", "self", ".", "_num_epochs", "=", "num_epochs", "\n", "self", ".", "reset", "(", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.MinWinRateCondition.reset": [[84, 86], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "_wr_history", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.MinWinRateCondition.is_met": [[87, 100], ["plan.MinWinRateCondition._wr_history.append", "all", "len", "plan.MinWinRateCondition._wr_history.pop", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.all"], ["", "def", "is_met", "(", "self", ",", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "        ", "self", ".", "_wr_history", ".", "append", "(", "epoch_win_rate", ")", "\n", "\n", "# Keep only num_epochs past win rates.", "\n", "if", "len", "(", "self", ".", "_wr_history", ")", ">", "self", ".", "_num_epochs", ":", "\n", "            ", "self", ".", "_wr_history", ".", "pop", "(", "0", ")", "\n", "\n", "# Check for minimum history length.", "\n", "", "if", "len", "(", "self", ".", "_wr_history", ")", "<", "self", ".", "_num_epochs", ":", "\n", "            ", "return", "False", "\n", "\n", "# Need to achieve at least minimum win rate.", "\n", "", "return", "all", "(", "win_rate", ">=", "self", ".", "_min_wr", "for", "win_rate", "in", "self", ".", "_wr_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.__init__": [[110, 114], ["plan.ConsistentPerformanceCondition.reset"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.reset"], ["def", "__init__", "(", "self", ",", "wr_difference_threshold", ",", "num_epochs", ")", ":", "\n", "        ", "self", ".", "_diff_threshold", "=", "wr_difference_threshold", "\n", "self", ".", "_num_epochs", "=", "num_epochs", "\n", "self", ".", "reset", "(", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.reset": [[115, 117], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "_wr_history", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.is_met": [[118, 136], ["plan.ConsistentPerformanceCondition._wr_history.append", "len", "plan.ConsistentPerformanceCondition._wr_history.pop", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "is_met", "(", "self", ",", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "        ", "self", ".", "_wr_history", ".", "append", "(", "epoch_win_rate", ")", "\n", "\n", "# Keep only num_epochs past win rates.", "\n", "if", "len", "(", "self", ".", "_wr_history", ")", ">", "self", ".", "_num_epochs", ":", "\n", "            ", "self", ".", "_wr_history", ".", "pop", "(", "0", ")", "\n", "\n", "# Check for minimum history length.", "\n", "", "if", "len", "(", "self", ".", "_wr_history", ")", "<", "self", ".", "_num_epochs", ":", "\n", "            ", "return", "False", "\n", "\n", "", "oldest_wr", "=", "self", ".", "_wr_history", "[", "0", "]", "\n", "\n", "# Need to be positive about this.", "\n", "if", "epoch_win_rate", "<", "oldest_wr", ":", "\n", "            ", "return", "False", "\n", "\n", "", "return", "epoch_win_rate", "-", "oldest_wr", "<", "self", ".", "_diff_threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingStage.__init__": [[139, 147], ["isinstance", "plan.Condition.all", "isinstance", "ValueError"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.all"], ["    ", "def", "__init__", "(", "self", ",", "brain", ",", "condition", ")", ":", "\n", "        ", "self", ".", "brain", "=", "brain", "\n", "if", "isinstance", "(", "condition", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "self", ".", "_condition", "=", "Condition", ".", "all", "(", "condition", ")", "\n", "", "elif", "isinstance", "(", "condition", ",", "Condition", ")", ":", "\n", "            ", "self", ".", "_condition", "=", "condition", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"condition\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingStage.on_activated": [[148, 150], ["plan.TrainingStage._condition.reset"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.reset"], ["", "", "def", "on_activated", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "_condition", ".", "reset", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingStage.should_advance_plan": [[151, 153], ["plan.TrainingStage._condition.is_met"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.is_met"], ["", "def", "should_advance_plan", "(", "self", ",", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "        ", "return", "self", ".", "_condition", ".", "is_met", "(", "epoch", ",", "epoch_win_rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingPlan.__init__": [[159, 190], ["plan.TrainingPlan.curr_stage.on_activated", "isinstance", "len", "ValueError", "isinstance", "token_stack.append", "plan.TrainingPlan._stages.append", "ValueError", "token_stack.pop", "plan.TrainingPlan._loops.append", "ValueError", "Loop"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingStage.on_activated", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["    ", "def", "__init__", "(", "self", ",", "*", "stages", ")", ":", "\n", "        ", "self", ".", "_loops", "=", "[", "]", "\n", "self", ".", "_stages", "=", "[", "]", "\n", "self", ".", "_curr_stage_idx", "=", "0", "\n", "self", ".", "_curr_loop_count", "=", "0", "\n", "\n", "# Parse stages and tokens.", "\n", "token_stack", "=", "[", "]", "\n", "next_stage_idx", "=", "0", "\n", "for", "stage", "in", "stages", ":", "\n", "            ", "if", "isinstance", "(", "stage", ",", "tuple", ")", ":", "\n", "                ", "if", "stage", "[", "0", "]", "==", "\"for\"", ":", "\n", "                    ", "count", "=", "stage", "[", "1", "]", "\n", "token_stack", ".", "append", "(", "(", "next_stage_idx", ",", "count", ")", ")", "\n", "", "elif", "stage", "[", "0", "]", "==", "\"endfor\"", ":", "\n", "# Will throw IndexError if endfor is mismatched.", "\n", "                    ", "start_idx", ",", "count", "=", "token_stack", ".", "pop", "(", ")", "\n", "self", ".", "_loops", ".", "append", "(", "\n", "Loop", "(", "start", "=", "start_idx", ",", "end", "=", "next_stage_idx", ",", "count", "=", "count", ")", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\"unknown token: %s\"", "%", "stage", "[", "0", "]", ")", "\n", "", "", "elif", "isinstance", "(", "stage", ",", "TrainingStage", ")", ":", "\n", "                ", "self", ".", "_stages", ".", "append", "(", "stage", ")", "\n", "next_stage_idx", "+=", "1", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"initialize plan with stages and tokens\"", ")", "\n", "", "", "if", "len", "(", "token_stack", ")", ">", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"mismatched tokens on stack: %s\"", "%", "token_stack", ")", "\n", "\n", "", "self", ".", "curr_stage", ".", "on_activated", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingPlan.curr_stage": [[191, 194], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "curr_stage", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_stages", "[", "self", ".", "_curr_stage_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingPlan._is_last_stage": [[195, 197], ["len"], "methods", ["None"], ["", "def", "_is_last_stage", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_curr_stage_idx", "==", "len", "(", "self", ".", "_stages", ")", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingPlan._curr_loop": [[198, 204], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "_curr_loop", "(", "self", ")", ":", "\n", "        ", "for", "loop", "in", "self", ".", "_loops", ":", "\n", "            ", "if", "self", ".", "_curr_stage_idx", ">=", "loop", ".", "start", "and", "self", ".", "_curr_stage_idx", "<", "loop", ".", "end", ":", "\n", "                ", "return", "loop", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingPlan._should_advance": [[205, 210], ["plan.TrainingPlan.curr_stage.should_advance_plan", "plan.TrainingPlan._is_last_stage"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingStage.should_advance_plan", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingPlan._is_last_stage"], ["", "def", "_should_advance", "(", "self", ",", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "        ", "if", "self", ".", "_curr_loop", "is", "None", "and", "self", ".", "_is_last_stage", "(", ")", ":", "\n", "            ", "return", "False", "\n", "\n", "", "return", "self", ".", "curr_stage", ".", "should_advance_plan", "(", "epoch", ",", "epoch_win_rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingPlan.next_stage": [[211, 237], ["plan.TrainingPlan._should_advance", "min", "curr_stage.on_activated", "plan.TrainingPlan._loops.remove", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingPlan._should_advance", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingStage.on_activated"], ["", "def", "next_stage", "(", "self", ",", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "        ", "if", "self", ".", "_should_advance", "(", "epoch", ",", "epoch_win_rate", ")", ":", "\n", "            ", "old_stage", "=", "self", ".", "curr_stage", "\n", "old_loop", "=", "self", ".", "_curr_loop", "\n", "\n", "self", ".", "_curr_stage_idx", "+=", "1", "\n", "curr_loop", "=", "self", ".", "_curr_loop", "\n", "\n", "if", "old_loop", "is", "not", "None", "and", "curr_loop", "!=", "old_loop", ":", "\n", "# At loop boundary.", "\n", "                ", "self", ".", "_curr_loop_count", "+=", "1", "\n", "if", "self", ".", "_curr_loop_count", "<", "old_loop", ".", "count", ":", "\n", "# Reset loop.", "\n", "                    ", "self", ".", "_curr_stage_idx", "=", "old_loop", ".", "start", "\n", "", "else", ":", "\n", "# Remove loop at exit.", "\n", "                    ", "self", ".", "_loops", ".", "remove", "(", "old_loop", ")", "\n", "self", ".", "_curr_loop_count", "=", "0", "\n", "\n", "", "", "self", ".", "_curr_stage_idx", "=", "min", "(", "len", "(", "self", ".", "_stages", ")", "-", "1", ",", "self", ".", "_curr_stage_idx", ")", "\n", "\n", "curr_stage", "=", "self", ".", "curr_stage", "\n", "if", "old_stage", "!=", "curr_stage", ":", "\n", "                ", "curr_stage", ".", "on_activated", "(", "epoch", ")", "\n", "\n", "", "", "return", "self", ".", "curr_stage", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Plans.all": [[257, 264], ["cls.__dict__.items", "isinstance", "isinstance"], "methods", ["None"], ["@", "classmethod", "\n", "def", "all", "(", "cls", ")", ":", "\n", "        ", "return", "[", "\n", "k", "\n", "for", "k", ",", "v", "in", "cls", ".", "__dict__", ".", "items", "(", ")", "\n", "if", "k", "!=", "\"all\"", "\n", "and", "(", "isinstance", "(", "v", ",", "staticmethod", ")", "or", "isinstance", "(", "v", ",", "classmethod", ")", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Plans.brains": [[266, 288], ["plan.TrainingPlan", "plan.TrainingStage", "zip", "plan.AtLeastNumEpochsCondition", "plan.MinWinRateCondition", "plan.ConsistentPerformanceCondition", "enumerate", "zip", "train.enums.Brain.random_brains", "train.enums.Brain.utility_brains", "train.enums.Brain.lookahead_brains"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Brain.random_brains", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Brain.utility_brains", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Brain.lookahead_brains"], ["", "@", "classmethod", "\n", "def", "brains", "(", "cls", ")", ":", "\n", "        ", "adversaries", "=", "[", "\n", "adversary", "\n", "for", "level", "in", "zip", "(", "\n", "Brain", ".", "random_brains", "(", ")", ",", "Brain", ".", "utility_brains", "(", ")", ",", "Brain", ".", "lookahead_brains", "(", ")", ",", "\n", ")", "\n", "for", "adversary", "in", "level", "\n", "]", "\n", "conditions", "=", "[", "\n", "[", "\n", "AtLeastNumEpochsCondition", "(", "10", ")", ",", "\n", "MinWinRateCondition", "(", "cls", ".", "MIN_WIN_RATES", "[", "i", "]", ",", "5", ")", ",", "\n", "ConsistentPerformanceCondition", "(", "0.1", ",", "5", ")", ",", "\n", "]", "\n", "for", "i", ",", "_", "in", "enumerate", "(", "adversaries", ")", "\n", "]", "\n", "stages", "=", "[", "\n", "TrainingStage", "(", "adversary", "[", "0", "]", ",", "adversary", "[", "1", "]", ",", "cond", ")", "\n", "for", "adversary", ",", "cond", "in", "zip", "(", "adversaries", ",", "conditions", ")", "\n", "]", "\n", "return", "TrainingPlan", "(", "*", "stages", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Plans.lookahead": [[289, 293], ["plan.TrainingPlan", "plan.TrainingStage", "plan.AtLeastNumEpochsCondition"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "lookahead", "(", ")", ":", "\n", "        ", "return", "TrainingPlan", "(", "\n", "TrainingStage", "(", "Brain", ".", "LOOKAHEAD_9", ",", "AtLeastNumEpochsCondition", "(", "1", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Plans.utility": [[295, 299], ["plan.TrainingPlan", "plan.TrainingStage", "plan.AtLeastNumEpochsCondition"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "utility", "(", ")", ":", "\n", "        ", "return", "TrainingPlan", "(", "\n", "TrainingStage", "(", "Brain", ".", "UTILITY_9", ",", "AtLeastNumEpochsCondition", "(", "1", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Plans.selfplay": [[301, 329], ["plan.TrainingPlan", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "selfplay", "(", ")", ":", "\n", "        ", "stages", "=", "[", "\n", "# Bootstrapping", "\n", "TrainingStage", "(", "Brain", ".", "UTILITY_9", ",", "AtLeastNumEpochsCondition", "(", "10", ")", ")", ",", "\n", "# Main training loop", "\n", "(", "\"for\"", ",", "20", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "DUMMY", ",", "AtLeastNumEpochsCondition", "(", "50", ")", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "UTILITY_9", ",", "AtLeastNumEpochsCondition", "(", "1", ")", ")", ",", "\n", "# Lookahead evaluation", "\n", "TrainingStage", "(", "Brain", ".", "LOOKAHEAD_9", ",", "AtLeastNumEpochsCondition", "(", "1", ")", ")", ",", "\n", "(", "\"endfor\"", ",", ")", ",", "\n", "(", "\"for\"", ",", "20", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "DUMMY", ",", "AtLeastNumEpochsCondition", "(", "50", ")", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "UTILITY_9", ",", "AtLeastNumEpochsCondition", "(", "1", ")", ")", ",", "\n", "# Lookahead evaluation", "\n", "TrainingStage", "(", "Brain", ".", "LOOKAHEAD_9", ",", "AtLeastNumEpochsCondition", "(", "1", ")", ")", ",", "\n", "(", "\"endfor\"", ",", ")", ",", "\n", "# Main training loop", "\n", "(", "\"for\"", ",", "20", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "DUMMY", ",", "AtLeastNumEpochsCondition", "(", "50", ")", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "UTILITY_9", ",", "AtLeastNumEpochsCondition", "(", "1", ")", ")", ",", "\n", "# Lookahead evaluation", "\n", "TrainingStage", "(", "Brain", ".", "LOOKAHEAD_9", ",", "AtLeastNumEpochsCondition", "(", "1", ")", ")", ",", "\n", "(", "\"endfor\"", ",", ")", ",", "\n", "]", "\n", "\n", "return", "TrainingPlan", "(", "*", "stages", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Plans.selfplay_with_bootstrap": [[330, 366], ["plan.TrainingPlan", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.TrainingStage", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.AtLeastNumEpochsCondition", "plan.MinWinRateCondition", "plan.ConsistentPerformanceCondition"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "selfplay_with_bootstrap", "(", ")", ":", "\n", "        ", "stages", "=", "[", "\n", "# Bootstrapping", "\n", "TrainingStage", "(", "\n", "Brain", ".", "UTILITY_9", ",", "\n", "[", "\n", "AtLeastNumEpochsCondition", "(", "20", ")", ",", "\n", "MinWinRateCondition", "(", "0.5", ",", "5", ")", ",", "\n", "ConsistentPerformanceCondition", "(", "0.1", ",", "5", ")", ",", "\n", "]", ",", "\n", ")", ",", "\n", "# Main training loop", "\n", "(", "\"for\"", ",", "50", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "DUMMY", ",", "AtLeastNumEpochsCondition", "(", "20", ")", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "UTILITY_9", ",", "AtLeastNumEpochsCondition", "(", "2", ")", ")", ",", "\n", "(", "\"endfor\"", ",", ")", ",", "\n", "# Lookahead evaluation", "\n", "TrainingStage", "(", "Brain", ".", "LOOKAHEAD_9", ",", "AtLeastNumEpochsCondition", "(", "5", ")", ")", ",", "\n", "# Main training loop", "\n", "(", "\"for\"", ",", "50", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "DUMMY", ",", "AtLeastNumEpochsCondition", "(", "20", ")", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "UTILITY_9", ",", "AtLeastNumEpochsCondition", "(", "2", ")", ")", ",", "\n", "(", "\"endfor\"", ",", ")", ",", "\n", "# Lookahead evaluation", "\n", "TrainingStage", "(", "Brain", ".", "LOOKAHEAD_9", ",", "AtLeastNumEpochsCondition", "(", "5", ")", ")", ",", "\n", "# Main training loop", "\n", "(", "\"for\"", ",", "50", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "DUMMY", ",", "AtLeastNumEpochsCondition", "(", "20", ")", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "UTILITY_9", ",", "AtLeastNumEpochsCondition", "(", "2", ")", ")", ",", "\n", "(", "\"endfor\"", ",", ")", ",", "\n", "# Lookahead evaluation", "\n", "TrainingStage", "(", "Brain", ".", "LOOKAHEAD_9", ",", "AtLeastNumEpochsCondition", "(", "5", ")", ")", ",", "\n", "]", "\n", "\n", "return", "TrainingPlan", "(", "*", "stages", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.Plans.utility_then_lookahead": [[367, 375], ["plan.TrainingPlan", "plan.TrainingStage", "plan.TrainingStage", "plan.AtLeastNumEpochsCondition", "plan.MinWinRateCondition", "plan.ConsistentPerformanceCondition"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "utility_then_lookahead", "(", ")", ":", "\n", "        ", "return", "TrainingPlan", "(", "\n", "TrainingStage", "(", "\n", "Brain", ".", "UTILITY_9", ",", "\n", "[", "MinWinRateCondition", "(", "0.5", ",", "5", ")", ",", "ConsistentPerformanceCondition", "(", "0.1", ",", "5", ")", "]", ",", "\n", ")", ",", "\n", "TrainingStage", "(", "Brain", ".", "LOOKAHEAD_9", ",", "AtLeastNumEpochsCondition", "(", "1", ")", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Owner.side": [[15, 18], ["None"], "methods", ["None"], ["@", "property", "\n", "def", "side", "(", "self", ")", ":", "\n", "        ", "return", "\"LeftPlayer\"", "if", "self", "==", "Owner", ".", "LEFT_PLAYER", "else", "\"RightPlayer\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Spell.rarity": [[89, 92], ["None"], "methods", ["None"], ["@", "property", "\n", "def", "rarity", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_rarities", "[", "self", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Spell.casting_strategy": [[93, 103], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "casting_strategy", "(", "self", ")", ":", "\n", "        ", "if", "self", "in", "self", ".", "_custom_casting_strategies", ":", "\n", "            ", "return", "self", ".", "_custom_casting_strategies", "[", "self", "]", "\n", "", "if", "self", ".", "is_spawn", ":", "\n", "# default casting strategy for minions", "\n", "            ", "return", "CastingStrategy", ".", "CONTROLLED_AREA", "\n", "", "else", ":", "\n", "# default casting strategy for spells", "\n", "            ", "return", "CastingStrategy", ".", "ENTIRE_MAP", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Spell.is_spawn": [[104, 108], ["enums.Spell.name.startswith"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "is_spawn", "(", "self", ")", ":", "\n", "        ", "\"\"\"Spawn spells can be drawn from deck, put in hand and they spawn minions.\"\"\"", "\n", "return", "self", ".", "name", ".", "startswith", "(", "\"SPAWN\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Spell.is_noop": [[109, 112], ["int"], "methods", ["None"], ["", "@", "property", "\n", "def", "is_noop", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "self", ")", "<", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Spell.units_spawned": [[113, 119], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "units_spawned", "(", "self", ")", ":", "\n", "        ", "if", "self", "in", "self", ".", "_units_spawned", ":", "\n", "            ", "return", "self", ".", "_units_spawned", "[", "self", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Brain.utility_brains": [[272, 275], ["list", "map", "range"], "methods", ["None"], ["@", "classmethod", "\n", "def", "utility_brains", "(", "cls", ")", ":", "\n", "        ", "return", "list", "(", "map", "(", "cls", ",", "range", "(", "cls", ".", "UTILITY_1", ",", "cls", ".", "UTILITY_9", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Brain.random_brains": [[276, 279], ["list", "map", "range"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "random_brains", "(", "cls", ")", ":", "\n", "        ", "return", "list", "(", "map", "(", "cls", ",", "range", "(", "cls", ".", "RANDOM_1", ",", "cls", ".", "RANDOM_9", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.enums.Brain.lookahead_brains": [[280, 283], ["list", "map", "range"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "lookahead_brains", "(", "cls", ")", ":", "\n", "        ", "return", "list", "(", "map", "(", "cls", ",", "range", "(", "cls", ".", "LOOKAHEAD_1", ",", "cls", ".", "LOOKAHEAD_9", "+", "1", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.experiment.run": [[7, 131], ["logging.basicConfig", "cloudpickle.dumps", "base64.b64encode().decode", "osp.join", "logger.info", "tf.compat.v1.disable_v2_behavior", "tf.compat.v1.logging.set_verbosity", "osp.join", "mpi_fork", "setup_logging", "AgentSaver", "tf.compat.v1.set_random_seed", "np.random.seed", "logger.info", "osp.abspath", "subprocess.check_call", "logger.info", "proc_id", "proc_id", "cfg.save", "logger.info", "len", "str", "logger.info", "Agent", "proc_id", "proc_id", "len", "agent.sync_restore_path", "proc_id", "logger.info", "base64.b64encode", "osp.dirname", "logger.error", "sys.exit", "logger.warning", "sys.exit", "osp.exists", "ValueError", "proc_id", "len", "proc_id", "len", "range", "logger.info", "logging.StreamHandler", "zlib.compress", "tf.config.experimental.list_physical_devices", "agent.run", "max", "logger.error", "len"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_fork", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.__init__.setup_logging", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.seed", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.save", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.sync_restore_path", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run"], ["def", "run", "(", "cfg", ",", "is_resume", "=", "False", ")", ":", "\n", "    ", "\"\"\"Runs the experiment in an isolated Python runtime.\"\"\"", "\n", "\n", "def", "thunk", "(", ")", ":", "\n", "        ", "\"\"\"This method is going to be serialized and will run in an isolated runtime.\"\"\"", "\n", "import", "os", "\n", "import", "os", ".", "path", "as", "osp", "\n", "\n", "import", "tensorflow", "as", "tf", "\n", "\n", "tf", ".", "compat", ".", "v1", ".", "disable_v2_behavior", "(", ")", "\n", "# Turn off TF log spam.", "\n", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "set_verbosity", "(", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "ERROR", ")", "\n", "\n", "import", "numpy", "as", "np", "\n", "\n", "# Register environment.", "\n", "from", "heroic_rl", "import", "gym_heroic", "# noqa: F401", "\n", "\n", "from", "heroic_rl", ".", "agent", "import", "Agent", ",", "AgentSaver", "\n", "from", "heroic_rl", ".", "train", "import", "setup_logging", "\n", "\n", "from", "heroic_rl", ".", "utils", ".", "mpi_tools", "import", "mpi_fork", ",", "proc_id", "\n", "\n", "# Training with same seed should not be allowed at the same path - can", "\n", "# cause agent state to be restored at start of training.", "\n", "train_cfg_path", "=", "osp", ".", "join", "(", "cfg", ".", "output_dir", ",", "TRAIN_CFG_FILENAME", ")", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "if", "not", "is_resume", "and", "osp", ".", "exists", "(", "train_cfg_path", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\"Training path already exists: %s\"", "%", "train_cfg_path", ")", "\n", "\n", "# Forked code starts after fork call below.", "\n", "", "", "mpi_fork", "(", "cfg", ".", "cpus", ")", "\n", "\n", "setup_logging", "(", "cfg", ".", "output_dir", ")", "\n", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "# Save training config for restoring.", "\n", "            ", "cfg", ".", "save", "(", "train_cfg_path", ")", "\n", "logger", ".", "info", "(", "\"Training config saved to %s\"", ",", "train_cfg_path", ")", "\n", "\n", "", "if", "len", "(", "cfg", ".", "gpus", ")", ">", "0", ":", "\n", "# Manually setup CUDA_VISIBLE_DEVICES so that each forked child", "\n", "# gets a single GPU.", "\n", "            ", "gpu_id_idx", "=", "proc_id", "(", ")", "%", "len", "(", "cfg", ".", "gpus", ")", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "str", "(", "cfg", ".", "gpus", "[", "gpu_id_idx", "]", ")", "\n", "logger", ".", "info", "(", "\n", "\"Process %d: CUDA_VISIBLE_DEVICES=%s, NUM_GPUs=%d\"", ",", "\n", "proc_id", "(", ")", ",", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", ",", "\n", "len", "(", "tf", ".", "config", ".", "experimental", ".", "list_physical_devices", "(", "\"GPU\"", ")", ")", ",", "\n", ")", "\n", "\n", "", "saver", "=", "AgentSaver", "(", "cfg", ".", "output_dir", ",", "frequency", "=", "cfg", ".", "save_frequency_epochs", ")", "\n", "agents", "=", "[", "Agent", "(", "cfg", ",", "saver", ")", "for", "_", "in", "range", "(", "cfg", ".", "num_agents", ")", "]", "\n", "\n", "cfg", ".", "seed", "+=", "10000", "*", "proc_id", "(", ")", "\n", "tf", ".", "compat", ".", "v1", ".", "set_random_seed", "(", "cfg", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "cfg", ".", "seed", ")", "\n", "logger", ".", "info", "(", "\"CPU%d: Seeding random with seed=%d\"", ",", "proc_id", "(", ")", ",", "cfg", ".", "seed", ")", "\n", "\n", "next_agent_idx", "=", "0", "\n", "# Keep track of maximum finished epochs for any agent, so others can", "\n", "# keep up, if they fall behind.", "\n", "agent_epochs_max", "=", "0", "\n", "while", "len", "(", "agents", ")", ">", "0", ":", "\n", "# __N.B.__ it is important for the agents to be ran in the same", "\n", "# order when restoring from cold-start. This is necessary because", "\n", "# TF Python callbacks are initialized in that same order, and they", "\n", "# are serialized in the graph. Initialization order affects their", "\n", "# naming.", "\n", "            ", "agent", "=", "agents", "[", "next_agent_idx", "]", "\n", "\n", "restore_path", "=", "agent", ".", "sync_restore_path", "(", ")", "\n", "try", ":", "\n", "                ", "with", "agent", ":", "\n", "                    ", "agent", ".", "run", "(", "agent_epochs_max", ",", "restore_path", "=", "restore_path", ")", "\n", "agent_epochs_max", "=", "max", "(", "agent_epochs_max", ",", "agent", ".", "epochs", ")", "\n", "", "", "except", "Exception", ":", "\n", "                ", "logger", ".", "error", "(", "\n", "\"Unhandled exception while running %s\"", ",", "agent", ",", "exc_info", "=", "True", "\n", ")", "\n", "raise", "\n", "\n", "", "if", "agent", ".", "is_done", ":", "\n", "                ", "logger", ".", "info", "(", "\"Removing %s from experiment\"", ",", "agent", ")", "\n", "del", "agents", "[", "next_agent_idx", "]", "\n", "", "else", ":", "\n", "                ", "next_agent_idx", "=", "(", "next_agent_idx", "+", "1", ")", "%", "len", "(", "agents", ")", "\n", "\n", "", "", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\"Experiment done!\"", ")", "\n", "\n", "", "", "import", "os", "\n", "import", "sys", "\n", "import", "subprocess", "\n", "import", "os", ".", "path", "as", "osp", "\n", "import", "cloudpickle", "\n", "import", "base64", "\n", "import", "zlib", "\n", "\n", "logging", ".", "basicConfig", "(", "\n", "level", "=", "logging", ".", "DEBUG", ",", "\n", "handlers", "=", "[", "logging", ".", "StreamHandler", "(", ")", "]", ",", "\n", "format", "=", "\"--- %(levelname)s %(name)s: %(message)s\"", ",", "\n", ")", "\n", "\n", "# Prepare to launch a script to run the experiment.", "\n", "pickled_thunk", "=", "cloudpickle", ".", "dumps", "(", "thunk", ")", "\n", "encoded_thunk", "=", "base64", ".", "b64encode", "(", "zlib", ".", "compress", "(", "pickled_thunk", ")", ")", ".", "decode", "(", "\"utf-8\"", ")", "\n", "\n", "entrypoint", "=", "osp", ".", "join", "(", "osp", ".", "abspath", "(", "osp", ".", "dirname", "(", "__file__", ")", ")", ",", "\"entrypoint.py\"", ")", "\n", "cmd", "=", "[", "sys", ".", "executable", "if", "sys", ".", "executable", "else", "\"python3\"", ",", "entrypoint", ",", "encoded_thunk", "]", "\n", "\n", "logger", ".", "info", "(", "\"Running experiment\"", ")", "\n", "try", ":", "\n", "        ", "subprocess", ".", "check_call", "(", "cmd", ",", "env", "=", "os", ".", "environ", ")", "\n", "logger", ".", "info", "(", "\"Experiment finished successfully\"", ")", "\n", "", "except", "subprocess", ".", "CalledProcessError", "as", "cpe", ":", "\n", "        ", "logger", ".", "error", "(", "\"Experiment failed with exit code %d\"", "%", "cpe", ".", "returncode", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "        ", "logger", ".", "warning", "(", "\"Ctrl+C detected, experiment interrupted\"", ")", "\n", "sys", ".", "exit", "(", "2", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.all": [[12, 19], ["cls.__dict__.items", "isinstance", "isinstance"], "methods", ["None"], ["    ", "@", "classmethod", "\n", "def", "all", "(", "cls", ")", ":", "\n", "        ", "return", "[", "\n", "k", "\n", "for", "k", ",", "v", "in", "cls", ".", "__dict__", ".", "items", "(", ")", "\n", "if", "k", "!=", "\"all\"", "\n", "and", "(", "isinstance", "(", "v", ",", "staticmethod", ")", "or", "isinstance", "(", "v", ",", "classmethod", ")", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.clipped_with_jump": [[21, 28], ["numpy.clip", "numpy.sign"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "clipped_with_jump", "(", "battle_state", ",", "clip", "=", "0.5", ",", "jump", "=", "0.5", ")", ":", "\n", "        ", "left_player_hp_perc", "=", "battle_state", "[", "\"LeftPlayer\"", "]", "[", "\"CastleHealthPercent\"", "]", "\n", "right_player_hp_perc", "=", "battle_state", "[", "\"RightPlayer\"", "]", "[", "\"CastleHealthPercent\"", "]", "\n", "return", "np", ".", "clip", "(", "\n", "left_player_hp_perc", "-", "right_player_hp_perc", ",", "-", "clip", ",", "clip", "\n", ")", "+", "jump", "*", "np", ".", "sign", "(", "left_player_hp_perc", "-", "right_player_hp_perc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.simple": [[29, 36], ["numpy.sign", "obs.is_battle_done"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_battle_done"], ["", "@", "staticmethod", "\n", "def", "simple", "(", "battle_state", ")", ":", "\n", "        ", "if", "not", "is_battle_done", "(", "battle_state", ")", ":", "\n", "            ", "return", "0.0", "\n", "", "left_player_hp_perc", "=", "battle_state", "[", "\"LeftPlayer\"", "]", "[", "\"CastleHealthPercent\"", "]", "\n", "right_player_hp_perc", "=", "battle_state", "[", "\"RightPlayer\"", "]", "[", "\"CastleHealthPercent\"", "]", "\n", "return", "np", ".", "sign", "(", "left_player_hp_perc", "-", "right_player_hp_perc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.dense": [[37, 45], ["obs.is_battle_done", "rewards.Rewards.simple"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_battle_done", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.simple"], ["", "@", "staticmethod", "\n", "def", "dense", "(", "battle_state", ",", "max_hp", "=", "1.0", ",", "scaling_factor", "=", "1.0", "/", "50.0", ")", ":", "\n", "        ", "left_player_hp_perc", "=", "battle_state", "[", "\"LeftPlayer\"", "]", "[", "\"CastleHealthPercent\"", "]", "\n", "right_player_hp_perc", "=", "battle_state", "[", "\"RightPlayer\"", "]", "[", "\"CastleHealthPercent\"", "]", "\n", "reward", "=", "scaling_factor", "*", "(", "left_player_hp_perc", "-", "right_player_hp_perc", ")", "/", "max_hp", "\n", "if", "is_battle_done", "(", "battle_state", ")", ":", "\n", "            ", "reward", "+=", "Rewards", ".", "simple", "(", "battle_state", ")", "\n", "", "return", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.value_estimate": [[46, 52], ["obs.is_battle_done", "rewards.Rewards.simple"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_battle_done", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.rewards.Rewards.simple"], ["", "@", "staticmethod", "\n", "def", "value_estimate", "(", "battle_state", ")", ":", "\n", "        ", "if", "is_battle_done", "(", "battle_state", ")", ":", "\n", "            ", "return", "Rewards", ".", "simple", "(", "battle_state", ")", "\n", "", "else", ":", "\n", "            ", "return", "battle_state", "[", "\"LeftPlayer\"", "]", "[", "\"EstimatorValue\"", "]", "/", "1000.0", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.__init__.setup_logging": [[15, 27], ["os.makedirs", "logging.basicConfig", "logging.StreamHandler", "logging.FileHandler", "os.path.join"], "function", ["None"], []], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_mask_spell": [[18, 42], ["numpy.zeros", "range", "numpy.any", "numpy.isclose", "numpy.any"], "function", ["None"], ["def", "_get_mask_spell", "(", "obs_non_spatial", ",", "mask_spatial", ",", "cfg", ")", "->", "np", ".", "array", ":", "\n", "    ", "\"\"\"Builds binary spell mask.\n\n    This mask has shape of `(NUM_SPELLS,)` and is 1 if spell at that index can\n    be cast, 0 otherwise.\n    \"\"\"", "\n", "spell_mask", "=", "np", ".", "zeros", "(", "cfg", ".", "obs_mask_spell_shape", ")", "\n", "\n", "for", "spell_index", "in", "range", "(", "cfg", ".", "spells", ".", "num_spells", ")", ":", "\n", "        ", "if", "cfg", ".", "architecture", ".", "non_spatial_orthogonal_enabled", ":", "\n", "# Spell can be cast iff:", "\n", "# - waiting time is 1, meaning player has enough mana/cooldown expired, AND", "\n", "# - spatial mask is 1 for at least one spatial coordinate for that spell", "\n", "            ", "if", "obs_non_spatial", "[", "spell_index", "]", "==", "1", "and", "np", ".", "any", "(", "\n", "mask_spatial", "[", "spell_index", ",", ":", "]", "\n", ")", ":", "\n", "                ", "spell_mask", "[", "spell_index", "]", "=", "1", "\n", "", "", "else", ":", "\n", "            ", "if", "np", ".", "isclose", "(", "obs_non_spatial", "[", "spell_index", "]", ",", "0", ")", "and", "np", ".", "any", "(", "\n", "mask_spatial", "[", "spell_index", ",", ":", "]", "\n", ")", ":", "\n", "                ", "spell_mask", "[", "spell_index", "]", "=", "1", "\n", "\n", "", "", "", "return", "spell_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._only_lanes_with_friendly_creeps": [[44, 52], ["range", "numpy.any"], "function", ["None"], ["", "def", "_only_lanes_with_friendly_creeps", "(", "obs_spatial", ",", "mask_spatial_for_spell", ",", "cfg", ")", "->", "None", ":", "\n", "    ", "for", "lane", "in", "range", "(", "cfg", ".", "map", ".", "num_lanes", ")", ":", "\n", "        ", "lane_start", "=", "lane", "*", "cfg", ".", "map", ".", "num_bins", "\n", "next_lane_start", "=", "(", "lane", "+", "1", ")", "*", "cfg", ".", "map", ".", "num_bins", "\n", "# Check if there are any of owner units on that lane", "\n", "if", "not", "np", ".", "any", "(", "obs_spatial", "[", "lane", ",", ":", ",", ":", "cfg", ".", "spells", ".", "num_units", "]", ")", ":", "\n", "# Do not cast rage in this lane.", "\n", "            ", "mask_spatial_for_spell", "[", "lane_start", ":", "next_lane_start", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._only_lanes_with_enemy_creeps": [[54, 62], ["range", "numpy.any"], "function", ["None"], ["", "", "", "def", "_only_lanes_with_enemy_creeps", "(", "obs_spatial", ",", "mask_spatial_for_spell", ",", "cfg", ")", "->", "None", ":", "\n", "    ", "for", "lane", "in", "range", "(", "cfg", ".", "map", ".", "num_lanes", ")", ":", "\n", "        ", "lane_start", "=", "lane", "*", "cfg", ".", "map", ".", "num_bins", "\n", "next_lane_start", "=", "(", "lane", "+", "1", ")", "*", "cfg", ".", "map", ".", "num_bins", "\n", "# Check if there are any of enemy units on that lane", "\n", "if", "not", "np", ".", "any", "(", "obs_spatial", "[", "lane", ",", ":", ",", "cfg", ".", "spells", ".", "num_units", ":", "]", ")", ":", "\n", "# Do not cast rage in this lane.", "\n", "            ", "mask_spatial_for_spell", "[", "lane_start", ":", "next_lane_start", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_mask_spatial_dynamic": [[69, 97], ["cfg.mask_spatial_static.copy", "range", "cfg.spells.idx_to_spell"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.idx_to_spell"], ["def", "_get_mask_spatial_dynamic", "(", "obs_spatial", ",", "cfg", ")", "->", "np", ".", "array", ":", "\n", "    ", "\"\"\"Builds binary spatial mask.\n\n    Spatial mask has shape of `(NUM_SPELLS, NUM_LANES * NUM_BINS)` and defines,\n    for spell at index `i`, and coordinate `k`, whether spell can be cast at that\n    point on the map. If value at `(i, k)` is 1, spell can be cast there, otherwise\n    it cannot be cast there.\n\n    Spatial mask is comprised of two parts that are combined by conjunction -\n    static part and dynamic part:\n    * static part is always the same and is defined by casting rules for\n    certain spells; e.g. you cannot cast minions (with some exceptions) past\n    your own half of the map.\n    * dynamic part depends on current spatial observation - for example,\n    `Spell.RAGE` should only be cast on lanes with your minions\n    \"\"\"", "\n", "if", "not", "cfg", ".", "spatial_mask_dynamic_enabled", ":", "\n", "# Just return plain static mask.", "\n", "        ", "return", "cfg", ".", "mask_spatial_static", "\n", "\n", "", "mask_spatial", "=", "cfg", ".", "mask_spatial_static", ".", "copy", "(", ")", "\n", "\n", "for", "spell_idx", "in", "range", "(", "cfg", ".", "spells", ".", "num_spells", ")", ":", "\n", "        ", "spell", "=", "cfg", ".", "spells", ".", "idx_to_spell", "(", "spell_idx", ")", "\n", "if", "spell", "in", "DYNAMIC_SPATIAL_MASK", ":", "\n", "            ", "DYNAMIC_SPATIAL_MASK", "[", "spell", "]", "(", "obs_spatial", ",", "mask_spatial", "[", "spell_idx", "]", ",", "cfg", ")", "\n", "\n", "", "", "return", "mask_spatial", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._flip_obs_spatial": [[99, 115], ["numpy.flip", "numpy.concatenate"], "function", ["None"], ["", "def", "_flip_obs_spatial", "(", "obs_spatial", ",", "cfg", ")", "->", "np", ".", "array", ":", "\n", "    ", "\"\"\"Flips spatial observations from left side to right side.\"\"\"", "\n", "\n", "# Flip bin coordinates.", "\n", "obs_spatial_flipped_coordinates", "=", "np", ".", "flip", "(", "obs_spatial", ",", "1", ")", "\n", "\n", "# Change the roles of own/opponents units.", "\n", "obs_spatial_flipped", "=", "np", ".", "concatenate", "(", "\n", "(", "\n", "obs_spatial_flipped_coordinates", "[", ":", ",", ":", ",", "cfg", ".", "spells", ".", "num_units", ":", "]", ",", "\n", "obs_spatial_flipped_coordinates", "[", ":", ",", ":", ",", ":", "cfg", ".", "spells", ".", "num_units", "]", ",", "\n", ")", ",", "\n", "axis", "=", "2", ",", "\n", ")", "\n", "\n", "return", "obs_spatial_flipped", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_spell_nonspatial": [[117, 148], ["numpy.ones", "cfg.spells.spell_to_idx", "cfg.spells.spell_to_idx"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx"], ["", "def", "_get_spell_nonspatial", "(", "player_data", ",", "cfg", ")", "->", "np", ".", "array", ":", "\n", "    ", "\"\"\"Builds spell part of nonspatial observation vector.\n\n    This spell nonspatial observation is of shape `(NUM_SPELLS,)`, and its value\n    at index i is:\n    * `-30` if i-th spell is not in hand, or not in deck\n    * `0` if i-th spell can be played right now\n    * `N` if i-th spell can be played in N seconds from right now\n\n    Scheduled spells cannot be cast at that moment.\n    \"\"\"", "\n", "spell_wait_times", "=", "-", "30", "*", "np", ".", "ones", "(", "cfg", ".", "spells", ".", "num_spells", ")", "\n", "\n", "# Noop is always available (in hand), and can be cast at any time.", "\n", "for", "spell", "in", "cfg", ".", "spells", ".", "enabled_spells", ":", "\n", "        ", "if", "spell", ".", "is_noop", ":", "\n", "            ", "spell_idx", "=", "cfg", ".", "spells", ".", "spell_to_idx", "(", "spell", ")", "\n", "spell_wait_times", "[", "spell_idx", "]", "=", "0", "\n", "\n", "", "", "for", "card", "in", "player_data", "[", "\"CardsInHand\"", "]", ":", "\n", "        ", "if", "card", "[", "\"IsScheduled\"", "]", ":", "\n", "# Scheduled cards cannot be cast until they are resolved.", "\n", "            ", "continue", "\n", "\n", "", "spell_index", "=", "cfg", ".", "spells", ".", "spell_to_idx", "(", "card", "[", "\"SpellType\"", "]", ")", "\n", "if", "spell_wait_times", "[", "spell_index", "]", ">=", "0", ":", "\n", "# Duplicate spells in hand, meaning we already have valid value.", "\n", "            ", "continue", "\n", "", "spell_wait_times", "[", "spell_index", "]", "=", "card", "[", "\"SecondsUntilAvailable\"", "]", "\n", "\n", "", "return", "spell_wait_times", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_spell_nonspatial_orthogonal": [[150, 200], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.concatenate", "cfg.spells.spell_to_idx", "numpy.clip", "float", "int"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx"], ["", "def", "_get_spell_nonspatial_orthogonal", "(", "player_data", ",", "deck_spells", ",", "cfg", ")", "->", "np", ".", "array", ":", "\n", "    ", "\"\"\"Builds spell part of nonspatial observation vector.\n\n    This spell nonspatial observation has 3 separate dimensions for each spell:\n    * `spells_in_deck` is 1 at index i if i-th spell is in agent's deck\n    * `spells_in_hand` is 1 at index i if i-th spell is currently in hand\n    * `spells_wait_time` is 0 if spell cannot be cast in next 30 seconds or more,\n    and linearly moves to 1 when spell can be cast at this time. This depends on\n    agent's mana or spell-specific cooldown.\n\n    Scheduled spells cannot be cast at that moment.\n\n    These three vectors are concatenated into a single vector of shape\n    `(3 * NUM_SPELLS)` and returned.\n    \"\"\"", "\n", "spells_wait_time", "=", "np", ".", "zeros", "(", "cfg", ".", "spells", ".", "num_spells", ")", "\n", "spells_in_deck", "=", "np", ".", "zeros", "(", "cfg", ".", "spells", ".", "num_spells", ")", "\n", "spells_in_hand", "=", "np", ".", "zeros", "(", "cfg", ".", "spells", ".", "num_spells", ")", "\n", "\n", "for", "spell", "in", "cfg", ".", "spells", ".", "enabled_spells", ":", "\n", "        ", "spell_idx", "=", "cfg", ".", "spells", ".", "spell_to_idx", "(", "spell", ")", "\n", "if", "spell", ".", "is_noop", ":", "\n", "# Noop spells are always available - in deck, in hand and can be", "\n", "# played", "\n", "            ", "spells_in_deck", "[", "spell_idx", "]", "=", "1", "\n", "spells_in_hand", "[", "spell_idx", "]", "=", "1", "\n", "spells_wait_time", "[", "spell_idx", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "if", "spell", "==", "Spell", ".", "DRAW_CARD", ":", "\n", "# Draw card spell is always in deck", "\n", "                ", "spells_in_deck", "[", "spell_idx", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "spells_in_deck", "[", "spell_idx", "]", "=", "float", "(", "spell", "in", "deck_spells", ")", "\n", "\n", "", "", "card_in_hand", "=", "None", "\n", "for", "card", "in", "player_data", "[", "\"CardsInHand\"", "]", ":", "\n", "            ", "if", "card", "[", "\"SpellType\"", "]", "==", "int", "(", "spell", ")", "and", "not", "card", "[", "\"IsScheduled\"", "]", ":", "\n", "                ", "card_in_hand", "=", "card", "\n", "spells_in_hand", "[", "spell_idx", "]", "=", "1", "\n", "break", "\n", "\n", "", "", "if", "card_in_hand", "is", "not", "None", ":", "\n", "            ", "normalized_secs_until_available", "=", "(", "\n", "card_in_hand", "[", "\"SecondsUntilAvailable\"", "]", "\n", "/", "cfg", ".", "spells", ".", "max_seconds_until_available", "\n", ")", "\n", "wait_time", "=", "1", "-", "normalized_secs_until_available", "\n", "spells_wait_time", "[", "spell_idx", "]", "=", "np", ".", "clip", "(", "wait_time", ",", "0", ",", "1", ")", "\n", "\n", "", "", "return", "np", ".", "concatenate", "(", "(", "spells_wait_time", ",", "spells_in_hand", ",", "spells_in_deck", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.battle_state_to_observation": [[202, 300], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "obs._flip_obs_spatial", "obs._get_mask_spatial_dynamic", "obs._get_mask_spatial_dynamic", "obs._get_mask_spell", "obs._get_mask_spell", "obs._get_spell_nonspatial_orthogonal", "obs._get_spell_nonspatial", "cfg.map.y_to_lane", "cfg.map.x_to_bin", "cfg.spells.unit_to_idx"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._flip_obs_spatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_mask_spatial_dynamic", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_mask_spatial_dynamic", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_mask_spell", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_mask_spell", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_spell_nonspatial_orthogonal", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._get_spell_nonspatial", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.y_to_lane", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.x_to_bin", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.unit_to_idx"], ["", "def", "battle_state_to_observation", "(", "\n", "battle_state", ",", "left_deck", ",", "right_deck", ",", "cfg", "\n", ")", "->", "Tuple", "[", "dict", ",", "dict", "]", ":", "\n", "    ", "\"\"\"Builds observation space from provided `battle_state`.\n\n    This function returns a tuple with observations for left and right player,\n    in that order. Observation is a dict with `spatial`, `non_spatial`,\n    `mask_spell` and `mask_spatial' elements.\n\n    Non-spatial observation vector has shape of `(NUM_SPELLS+3,)`, namely and\n    in this order:\n      - `NUM_SPELLS` times until available for each defined spell (in seconds);\n      spells that player does not have in deck or in hand have infinite waiting\n      time - if orthogonal non-spatial obs are enabled, this is `3 * NUM_SPELLS`\n      - own castle health (in percent)\n      - opponent castle health (in percent)\n      - battle time (in percent of max battle time)\n\n    Spatial observation vector has shape of `(NUM_LANES, NUM_BINS, 2 * NUM_UNITS)`.\n    Values in this vector correspond to cummulative health percentage of units\n    of at the same lane (Y coordinate), occupying the same bin, and having the\n    same type. This is repeated twice, for own and opponent units, in this order.\n\n    Spell mask is a binary mask with shape `(NUM_SPELLS,)` that says whether spell\n    at index `i` can be cast - value of the mask is 1 for that index, 0 otherwise.\n\n    Spatial mask is a binary mask with shape `(NUM_SPELLS, NUM_LANES * NUM_BINS)`\n    that says whether spell at index `i` can be cast at coordinate pair `(lane, bin)`.\n    Value of the mask is 1 at `(i, lane * NUM_BINS + bin)` if that is the case, 0\n    otherwise.\n    \"\"\"", "\n", "obs_non_spatial", "=", "[", "\n", "np", ".", "zeros", "(", "cfg", ".", "obs_non_spatial_shape", ")", ",", "\n", "np", ".", "zeros", "(", "cfg", ".", "obs_non_spatial_shape", ")", ",", "\n", "]", "\n", "\n", "obs_spatial_aux", "=", "np", ".", "zeros", "(", "cfg", ".", "obs_spatial_shape", ")", "\n", "\n", "left_deck", "=", "[", "entry", ".", "spell", "for", "entry", "in", "left_deck", ".", "minions", "+", "left_deck", ".", "spells", "]", "\n", "right_deck", "=", "[", "entry", ".", "spell", "for", "entry", "in", "right_deck", ".", "minions", "+", "right_deck", ".", "spells", "]", "\n", "\n", "for", "player", "in", "[", "\"LeftPlayer\"", ",", "\"RightPlayer\"", "]", ":", "\n", "        ", "player_data", "=", "battle_state", "[", "player", "]", "\n", "player_id", "=", "0", "if", "player", "==", "\"LeftPlayer\"", "else", "1", "\n", "deck", "=", "left_deck", "if", "player", "==", "\"LeftPlayer\"", "else", "right_deck", "\n", "opponent", "=", "\"RightPlayer\"", "if", "player", "==", "\"LeftPlayer\"", "else", "\"LeftPlayer\"", "\n", "\n", "if", "cfg", ".", "architecture", ".", "non_spatial_orthogonal_enabled", ":", "\n", "            ", "obs_non_spatial", "[", "player_id", "]", "[", "\n", ":", "3", "*", "cfg", ".", "spells", ".", "num_spells", "\n", "]", "=", "_get_spell_nonspatial_orthogonal", "(", "player_data", ",", "deck", ",", "cfg", ")", "\n", "", "else", ":", "\n", "            ", "obs_non_spatial", "[", "player_id", "]", "[", ":", "cfg", ".", "spells", ".", "num_spells", "]", "=", "_get_spell_nonspatial", "(", "\n", "player_data", ",", "cfg", "\n", ")", "\n", "\n", "# Own castle health percentage.", "\n", "", "obs_non_spatial", "[", "player_id", "]", "[", "-", "3", "]", "=", "player_data", "[", "\"CastleHealthPercent\"", "]", "\n", "# Opponent's castle health percentage.", "\n", "obs_non_spatial", "[", "player_id", "]", "[", "-", "2", "]", "=", "battle_state", "[", "opponent", "]", "[", "\"CastleHealthPercent\"", "]", "\n", "# Battle time in percentage of max battle time.", "\n", "obs_non_spatial", "[", "player_id", "]", "[", "-", "1", "]", "=", "(", "\n", "battle_state", "[", "\"BattleTime\"", "]", "/", "cfg", ".", "map", ".", "max_battle_time_seconds", "\n", ")", "\n", "\n", "for", "active_creep", "in", "player_data", "[", "\"ActiveCreeps\"", "]", ":", "\n", "            ", "lane", "=", "cfg", ".", "map", ".", "y_to_lane", "(", "active_creep", "[", "\"Y\"", "]", ")", "\n", "bin", "=", "cfg", ".", "map", ".", "x_to_bin", "(", "active_creep", "[", "\"X\"", "]", ")", "\n", "unit_type", "=", "cfg", ".", "spells", ".", "unit_to_idx", "(", "active_creep", "[", "\"UnitType\"", "]", ")", "\n", "channel", "=", "unit_type", "+", "player_id", "*", "cfg", ".", "spells", ".", "num_units", "\n", "\n", "obs_spatial_aux", "[", "lane", ",", "bin", ",", "channel", "]", "+=", "active_creep", "[", "\"CurrentHealthPercent\"", "]", "\n", "\n", "# Do not normalize.", "\n", "", "", "obs_spatial", "=", "[", "obs_spatial_aux", ",", "_flip_obs_spatial", "(", "obs_spatial_aux", ",", "cfg", ")", "]", "\n", "\n", "obs_mask_spatial", "=", "[", "\n", "_get_mask_spatial_dynamic", "(", "obs_spatial", "[", "0", "]", ",", "cfg", ")", ",", "\n", "_get_mask_spatial_dynamic", "(", "obs_spatial", "[", "1", "]", ",", "cfg", ")", ",", "\n", "]", "\n", "\n", "obs_mask_spell", "=", "[", "\n", "_get_mask_spell", "(", "obs_non_spatial", "[", "0", "]", ",", "obs_mask_spatial", "[", "0", "]", ",", "cfg", ")", ",", "\n", "_get_mask_spell", "(", "obs_non_spatial", "[", "1", "]", ",", "obs_mask_spatial", "[", "1", "]", ",", "cfg", ")", ",", "\n", "]", "\n", "\n", "return", "(", "\n", "{", "\n", "\"spatial\"", ":", "obs_spatial", "[", "0", "]", ",", "\n", "\"non_spatial\"", ":", "obs_non_spatial", "[", "0", "]", ",", "\n", "\"mask_spell\"", ":", "obs_mask_spell", "[", "0", "]", ",", "\n", "\"mask_spatial\"", ":", "obs_mask_spatial", "[", "0", "]", ",", "\n", "}", ",", "\n", "{", "\n", "\"spatial\"", ":", "obs_spatial", "[", "1", "]", ",", "\n", "\"non_spatial\"", ":", "obs_non_spatial", "[", "1", "]", ",", "\n", "\"mask_spell\"", ":", "obs_mask_spell", "[", "1", "]", ",", "\n", "\"mask_spatial\"", ":", "obs_mask_spatial", "[", "1", "]", ",", "\n", "}", ",", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_move_available": [[304, 314], ["any", "any"], "function", ["None"], ["", "def", "is_move_available", "(", "battle_state", ")", "->", "Tuple", "[", "bool", ",", "bool", "]", ":", "\n", "    ", "left_can_play", "=", "any", "(", "\n", "not", "card", "[", "\"IsScheduled\"", "]", "and", "card", "[", "\"SecondsUntilAvailable\"", "]", "<=", "0", "\n", "for", "card", "in", "battle_state", "[", "\"LeftPlayer\"", "]", "[", "\"CardsInHand\"", "]", "\n", ")", "\n", "right_can_play", "=", "any", "(", "\n", "not", "card", "[", "\"IsScheduled\"", "]", "and", "card", "[", "\"SecondsUntilAvailable\"", "]", "<=", "0", "\n", "for", "card", "in", "battle_state", "[", "\"RightPlayer\"", "]", "[", "\"CardsInHand\"", "]", "\n", ")", "\n", "return", "left_can_play", ",", "right_can_play", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._is_spawn_spell_available": [[316, 328], ["cfg.spells.mask_spawn.copy", "bool", "bool", "numpy.sum", "numpy.sum", "cfg.spells.spell_to_idx"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx"], ["", "def", "_is_spawn_spell_available", "(", "obs", ",", "cfg", ")", "->", "Tuple", "[", "bool", ",", "bool", "]", ":", "\n", "    ", "mask_spawn", "=", "cfg", ".", "spells", ".", "mask_spawn", ".", "copy", "(", ")", "\n", "\n", "# For purpose of this function, noop is not considered a spawn spell.", "\n", "for", "spell", "in", "cfg", ".", "spells", ".", "enabled_spells", ":", "\n", "        ", "if", "spell", ".", "is_noop", ":", "\n", "            ", "mask_spawn", "[", "0", ",", "cfg", ".", "spells", ".", "spell_to_idx", "(", "spell", ")", "]", "=", "0", "\n", "\n", "", "", "left_spawn_available", "=", "bool", "(", "np", ".", "sum", "(", "obs", "[", "0", "]", "[", "\"mask_spell\"", "]", "*", "mask_spawn", ")", ")", "\n", "right_spawn_available", "=", "bool", "(", "np", ".", "sum", "(", "obs", "[", "1", "]", "[", "\"mask_spell\"", "]", "*", "mask_spawn", ")", ")", "\n", "\n", "return", "left_spawn_available", ",", "right_spawn_available", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._is_nonspawn_spell_available": [[330, 342], ["cfg.spells.mask_nonspawn.copy", "bool", "bool", "numpy.sum", "numpy.sum", "cfg.spells.spell_to_idx"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.spell_to_idx"], ["", "def", "_is_nonspawn_spell_available", "(", "obs", ",", "cfg", ")", "->", "Tuple", "[", "bool", ",", "bool", "]", ":", "\n", "    ", "mask_nonspawn", "=", "cfg", ".", "spells", ".", "mask_nonspawn", ".", "copy", "(", ")", "\n", "\n", "# For purpose of this function, noop is not considered a nonspawn spell.", "\n", "for", "spell", "in", "cfg", ".", "spells", ".", "enabled_spells", ":", "\n", "        ", "if", "spell", ".", "is_noop", ":", "\n", "            ", "mask_nonspawn", "[", "0", ",", "cfg", ".", "spells", ".", "spell_to_idx", "(", "spell", ")", "]", "=", "0", "\n", "\n", "", "", "left_nonspawn_available", "=", "bool", "(", "np", ".", "sum", "(", "obs", "[", "0", "]", "[", "\"mask_spell\"", "]", "*", "mask_nonspawn", ")", ")", "\n", "right_nonspawn_available", "=", "bool", "(", "np", ".", "sum", "(", "obs", "[", "1", "]", "[", "\"mask_spell\"", "]", "*", "mask_nonspawn", ")", ")", "\n", "\n", "return", "left_nonspawn_available", ",", "right_nonspawn_available", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_battle_done": [[344, 346], ["None"], "function", ["None"], ["", "def", "is_battle_done", "(", "battle_state", ")", "->", "bool", ":", "\n", "    ", "return", "battle_state", "[", "\"BattleState\"", "]", "!=", "\"InProgress\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.get_winner": [[348, 355], ["obs.is_battle_done"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_battle_done"], ["", "def", "get_winner", "(", "battle_state", ")", "->", "Owner", ":", "\n", "    ", "if", "not", "is_battle_done", "(", "battle_state", ")", ":", "\n", "        ", "return", "None", "\n", "", "return", "(", "\n", "Owner", ".", "LEFT_PLAYER", "\n", "if", "battle_state", "[", "\"BattleState\"", "]", "==", "\"LeftWon\"", "\n", "else", "Owner", ".", "RIGHT_PLAYER", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.battle_state_to_info": [[358, 393], ["obs.is_move_available", "obs.battle_state_to_observation", "spatial_buff.append", "obs._is_spawn_spell_available", "obs._is_nonspawn_spell_available"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_move_available", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.battle_state_to_observation", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._is_spawn_spell_available", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs._is_nonspawn_spell_available"], ["", "def", "battle_state_to_info", "(", "\n", "battle_state", ":", "dict", ",", "spatial_buff", ",", "left_deck", ",", "right_deck", ",", "cfg", "\n", ")", "->", "dict", ":", "\n", "    ", "\"\"\"\n    Converts battle state in JSON form to observations that can be added to\n    observation buffer, for both players.\n\n    Also appends spatial observations to spatial buffer.\n    \"\"\"", "\n", "left_can_play", ",", "right_can_play", "=", "is_move_available", "(", "battle_state", ")", "\n", "ob", ",", "ob_flip", "=", "battle_state_to_observation", "(", "battle_state", ",", "left_deck", ",", "right_deck", ",", "cfg", ")", "\n", "\n", "# Stack spatial observations.", "\n", "ob", "[", "\"spatial\"", "]", ",", "ob_flip", "[", "\"spatial\"", "]", "=", "spatial_buff", ".", "append", "(", "\n", "ob", "[", "\"spatial\"", "]", ",", "ob_flip", "[", "\"spatial\"", "]", "\n", ")", "\n", "\n", "left_spawn_available", ",", "right_spawn_available", "=", "_is_spawn_spell_available", "(", "\n", "(", "ob", ",", "ob_flip", ")", ",", "cfg", "\n", ")", "\n", "left_nonspawn_available", ",", "right_nonspawn_available", "=", "_is_nonspawn_spell_available", "(", "\n", "(", "ob", ",", "ob_flip", ")", ",", "cfg", "\n", ")", "\n", "\n", "return", "{", "\n", "\"o\"", ":", "ob", ",", "\n", "\"o_flip\"", ":", "ob_flip", ",", "\n", "\"left_can_play\"", ":", "left_can_play", ",", "\n", "\"right_can_play\"", ":", "right_can_play", ",", "\n", "\"left_spawn_available\"", ":", "left_spawn_available", ",", "\n", "\"right_spawn_available\"", ":", "right_spawn_available", ",", "\n", "\"left_spell_available\"", ":", "left_nonspawn_available", ",", "\n", "\"right_spell_available\"", ":", "right_nonspawn_available", ",", "\n", "\"battle_time\"", ":", "battle_state", "[", "\"BattleTime\"", "]", ",", "\n", "\"battle_state\"", ":", "battle_state", "[", "\"BattleState\"", "]", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.get_client_action": [[396, 428], ["int", "int", "int", "cfg.map.lane_to_y", "cfg.map.bin_to_x", "cfg.spells.idx_to_spell", "int"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.lane_to_y", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.MapCfg.bin_to_x", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.idx_to_spell"], ["", "def", "get_client_action", "(", "\n", "action_policy_output", ",", "battle_state", ",", "cfg", ",", "player", "=", "\"LeftPlayer\"", "\n", ")", "->", "dict", ":", "\n", "    ", "\"\"\"Converts policy action output to dict client action.\"\"\"", "\n", "if", "action_policy_output", "is", "None", ":", "\n", "        ", "return", "NOOP_ACTION", "\n", "\n", "", "spell_type", "=", "int", "(", "cfg", ".", "spells", ".", "idx_to_spell", "(", "action_policy_output", "[", "\"spell\"", "]", "[", "0", "]", ")", ")", "\n", "\n", "card_index_to_play", "=", "-", "1", "\n", "\n", "for", "card", "in", "battle_state", "[", "player", "]", "[", "\"CardsInHand\"", "]", ":", "\n", "        ", "if", "(", "\n", "card", "[", "\"SpellType\"", "]", "==", "spell_type", "\n", "and", "card", "[", "\"SecondsUntilAvailable\"", "]", "<=", "0", "\n", "and", "not", "card", "[", "\"IsScheduled\"", "]", "\n", ")", ":", "\n", "            ", "card_index_to_play", "=", "int", "(", "card", "[", "\"CardIndex\"", "]", ")", "\n", "\n", "", "", "lane", "=", "int", "(", "action_policy_output", "[", "\"spatial\"", "]", "[", "0", "]", "//", "cfg", ".", "map", ".", "num_bins", ")", "\n", "coordinate", "=", "int", "(", "action_policy_output", "[", "\"spatial\"", "]", "[", "0", "]", "%", "cfg", ".", "map", ".", "num_bins", ")", "\n", "\n", "y", "=", "cfg", ".", "map", ".", "lane_to_y", "(", "lane", ")", "\n", "x", "=", "cfg", ".", "map", ".", "bin_to_x", "(", "coordinate", ")", "\n", "\n", "# Flip X coordinate for right player so it's absolute (we flipped spatial", "\n", "# observations so that the model sees it as if it were playing on the left", "\n", "# side, so we do the reverse here).", "\n", "if", "player", "==", "\"RightPlayer\"", ":", "\n", "        ", "x", "=", "-", "x", "\n", "\n", "", "return", "{", "\"CardIndex\"", ":", "card_index_to_play", ",", "\"X\"", ":", "x", ",", "\"Y\"", ":", "y", "}", "\n", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.decks.DeckRepository.from_csv": [[25, 95], ["cls", "logger.info", "spell_str.strip().upper().replace().replace", "float", "range", "range", "Deck", "open", "csv.reader", "next", "csv.reader", "len", "len", "_parse_spell.name.replace", "ValueError", "decks.DeckRepository.from_csv._parse_spell"], "methods", ["None"], ["@", "classmethod", "\n", "def", "from_csv", "(", "cls", ",", "csv_path", ",", "cfg", ")", ":", "\n", "        ", "def", "_parse_spell", "(", "spell_str", ")", ":", "\n", "            ", "spell_name", "=", "(", "\n", "spell_str", ".", "strip", "(", ")", ".", "upper", "(", ")", ".", "replace", "(", "\" \"", ",", "\"\"", ")", ".", "replace", "(", "\"SPELL_\"", ",", "\"\"", ")", "\n", ")", "\n", "if", "not", "spell_name", ":", "\n", "# Empty spell string = empty slot in deck", "\n", "                ", "return", "None", "\n", "\n", "", "for", "spell", "in", "Spell", ":", "\n", "                ", "stripped_name", "=", "spell", ".", "name", ".", "replace", "(", "\"SPAWNUNIT_\"", ",", "\"\"", ")", "\n", "if", "spell_name", "==", "stripped_name", ":", "\n", "                    ", "return", "spell", "\n", "", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"unknown spell %s\"", "%", "spell_name", ")", "\n", "\n", "", "", "def", "_parse_deck", "(", "row", ")", ":", "\n", "            ", "\"\"\"Row format: arena_level,spawn1,spawn2,...,spawn12,spell1,spell2,...\"\"\"", "\n", "arena_level", "=", "float", "(", "row", "[", "0", "]", ")", "\n", "minions", "=", "[", "]", "\n", "spells", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "12", ")", ":", "\n", "                ", "minion", "=", "_parse_spell", "(", "row", "[", "idx", "+", "1", "]", ")", "\n", "if", "minion", "is", "not", "None", ":", "\n", "                    ", "minions", ".", "append", "(", "\n", "DeckEntry", "(", "\n", "minion", ",", "\n", "cfg", ".", "spells", ".", "get_level_increment", "(", "minion", ".", "rarity", ",", "arena_level", ")", ",", "\n", ")", "\n", ")", "\n", "", "", "for", "idx", "in", "range", "(", "2", ")", ":", "\n", "                ", "spell", "=", "_parse_spell", "(", "row", "[", "idx", "+", "1", "+", "12", "]", ")", "\n", "# TODO evolve level", "\n", "if", "spell", "is", "not", "None", ":", "\n", "                    ", "spells", ".", "append", "(", "\n", "DeckEntry", "(", "\n", "spell", ",", "\n", "cfg", ".", "spells", ".", "get_level_increment", "(", "spell", ".", "rarity", ",", "arena_level", ")", ",", "\n", ")", "\n", ")", "\n", "\n", "", "", "if", "len", "(", "minions", ")", "<", "6", ":", "\n", "                ", "raise", "ValueError", "(", "\"too few minions in deck, 6 required: %s\"", "%", "minions", ")", "\n", "\n", "", "return", "Deck", "(", "arena_level", "=", "arena_level", ",", "minions", "=", "minions", ",", "spells", "=", "spells", ")", "\n", "\n", "", "def", "_can_play", "(", "deck", ")", ":", "\n", "            ", "for", "entry", "in", "deck", ".", "minions", "+", "deck", ".", "spells", ":", "\n", "                ", "if", "entry", ".", "spell", "not", "in", "cfg", ".", "spells", ".", "enabled_spells", ":", "\n", "                    ", "return", "False", "\n", "", "", "return", "True", "\n", "\n", "", "repo", "=", "cls", "(", ")", "\n", "with", "open", "(", "csv_path", ",", "newline", "=", "\"\"", ",", ")", "as", "f", ":", "\n", "            ", "reader", "=", "csv", ".", "reader", "(", "f", ")", "\n", "# Skip header", "\n", "next", "(", "reader", ",", "None", ")", "\n", "for", "row", "in", "csv", ".", "reader", "(", "f", ")", ":", "\n", "                ", "deck", "=", "_parse_deck", "(", "row", ")", "\n", "if", "_can_play", "(", "deck", ")", ":", "\n", "                    ", "repo", ".", "add_deck", "(", "deck", ")", "\n", "\n", "", "", "", "logger", ".", "info", "(", "\n", "\"Loaded deck repository from %s: %d arena levels, %d decks\"", ",", "\n", "csv_path", ",", "\n", "len", "(", "repo", ".", "_decks_by_arena_level", ")", ",", "\n", "len", "(", "repo", ".", "_all_decks", ")", ",", "\n", ")", "\n", "return", "repo", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.decks.DeckRepository.__init__": [[96, 99], ["collections.OrderedDict"], "methods", ["None"], ["", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_decks_by_arena_level", "=", "OrderedDict", "(", ")", "\n", "self", ".", "_all_decks", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.decks.DeckRepository.add_deck": [[100, 108], ["int", "decks.DeckRepository._all_decks.append", "math.floor", "decks.DeckRepository._decks_by_arena_level[].append"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "add_deck", "(", "self", ",", "deck", ")", ":", "\n", "        ", "arena_level", "=", "int", "(", "math", ".", "floor", "(", "deck", ".", "arena_level", ")", ")", "\n", "if", "arena_level", "in", "self", ".", "_decks_by_arena_level", ":", "\n", "            ", "self", ".", "_decks_by_arena_level", "[", "arena_level", "]", ".", "append", "(", "deck", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_decks_by_arena_level", "[", "arena_level", "]", "=", "[", "deck", "]", "\n", "\n", "", "self", ".", "_all_decks", ".", "append", "(", "deck", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.decks.DeckRepository.get_decks": [[109, 122], ["int", "math.floor", "ValueError"], "methods", ["None"], ["", "def", "get_decks", "(", "self", ",", "arena_level", "=", "None", ")", ":", "\n", "        ", "\"\"\"Get a random deck for given arena level.\n\n        If `arena_level` is `None`, all decks are considered.\n        \"\"\"", "\n", "if", "arena_level", "is", "None", ":", "\n", "            ", "return", "self", ".", "_all_decks", "\n", "\n", "", "arena_level", "=", "int", "(", "math", ".", "floor", "(", "arena_level", ")", ")", "\n", "if", "arena_level", "not", "in", "self", ".", "_decks_by_arena_level", ":", "\n", "            ", "raise", "ValueError", "(", "\"No such arena level: %s\"", "%", "arena_level", ")", "\n", "\n", "", "return", "self", ".", "_decks_by_arena_level", "[", "arena_level", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.__init__": [[11, 15], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "spatial_ob_buffer", "=", "[", "]", "\n", "self", ".", "spatial_ob_flip_buffer", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer._append_buf": [[16, 25], ["len", "range", "buff.append", "len", "buff.pop", "buff.append", "ValueError"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "_append_buf", "(", "self", ",", "buff", ",", "ob", ")", ":", "\n", "        ", "if", "len", "(", "buff", ")", "==", "0", ":", "\n", "            ", "for", "_", "in", "range", "(", "self", ".", "size", ")", ":", "\n", "                ", "buff", ".", "append", "(", "ob", ")", "\n", "", "", "elif", "len", "(", "buff", ")", "==", "self", ".", "size", ":", "\n", "            ", "buff", ".", "pop", "(", "0", ")", "\n", "buff", ".", "append", "(", "ob", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"buffer size mismatch\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append": [[26, 34], ["stacked.SpatialBuffer._append_buf", "stacked.SpatialBuffer._append_buf", "numpy.concatenate", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer._append_buf", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer._append_buf"], ["", "", "def", "append", "(", "self", ",", "ob_spatial", ",", "ob_flip_spatial", ")", ":", "\n", "        ", "self", ".", "_append_buf", "(", "self", ".", "spatial_ob_buffer", ",", "ob_spatial", ")", "\n", "self", ".", "_append_buf", "(", "self", ".", "spatial_ob_flip_buffer", ",", "ob_flip_spatial", ")", "\n", "\n", "ob_spatial_stack", "=", "np", ".", "concatenate", "(", "self", ".", "spatial_ob_buffer", ",", "axis", "=", "-", "1", ")", "\n", "ob_flip_spatial_stack", "=", "np", ".", "concatenate", "(", "self", ".", "spatial_ob_flip_buffer", ",", "axis", "=", "-", "1", ")", "\n", "\n", "return", "ob_spatial_stack", ",", "ob_flip_spatial_stack", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._next_id": [[23, 27], ["None"], "methods", ["None"], ["@", "classmethod", "\n", "def", "_next_id", "(", "cls", ")", ":", "\n", "        ", "cls", ".", "ID_GENERATOR", "+=", "1", "\n", "return", "cls", ".", "ID_GENERATOR", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._reset": [[28, 48], ["None"], "methods", ["None"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "# TF stuff.", "\n", "        ", "self", ".", "graph", "=", "None", "\n", "self", ".", "sess", "=", "None", "\n", "self", ".", "writer", "=", "None", "\n", "\n", "# Logger for epoch stats and logging.", "\n", "self", ".", "logger", "=", "None", "\n", "\n", "# Training plan.", "\n", "self", ".", "plan", "=", "None", "\n", "\n", "# Experience buffer.", "\n", "self", ".", "buf", "=", "None", "\n", "\n", "# Number of finished epochs.", "\n", "self", ".", "epochs", "=", "0", "\n", "\n", "self", ".", "all_phs", "=", "None", "\n", "self", ".", "selfplay_epochs", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.__init__": [[49, 59], ["agents.Agent._next_id", "agents.InferenceAgent", "agents.Agent._reset"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._next_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent._reset"], ["", "def", "__init__", "(", "self", ",", "cfg", ",", "saver", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "saver", "=", "saver", "\n", "self", ".", "id", "=", "self", ".", "_next_id", "(", ")", "\n", "self", ".", "adversary_agent", "=", "InferenceAgent", "(", ")", "\n", "# Strong references to functions used for tf.pyfunc Tensors, so they", "\n", "# don't get GCed after graph is deleted.", "\n", "self", ".", "graph_fns", "=", "[", "]", "\n", "\n", "self", ".", "_reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._setup_tf_saver": [[60, 110], ["agents.Agent.logger.setup_tf_saver"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.setup_tf_saver"], ["", "def", "_setup_tf_saver", "(", "self", ")", ":", "\n", "        ", "\"\"\"Sets up `logger` for storing the model and vars properly.\"\"\"", "\n", "train_inputs", "=", "[", "\n", "\"x_non_spatial_ph\"", ",", "\n", "\"x_spatial_ph\"", ",", "\n", "\"x_mask_spell_ph\"", ",", "\n", "\"x_mask_spatial_ph\"", ",", "\n", "\"x_if_spawn_spell_ph\"", ",", "\n", "\"x_state_in_ph\"", ",", "\n", "\"x_rnn_mask_ph\"", ",", "\n", "\"x_batch_size_ph\"", ",", "\n", "\"a_spell_ph\"", ",", "\n", "\"a_spatial_ph\"", ",", "\n", "\"adv_ph\"", ",", "\n", "\"ret_ph\"", ",", "\n", "\"logp_old_ph\"", ",", "\n", "\"v_old_ph\"", ",", "\n", "]", "\n", "train_outputs", "=", "[", "\n", "\"pi_spell\"", ",", "\n", "\"pi_spatial\"", ",", "\n", "\"pi_spell_argmax\"", ",", "\n", "\"pi_spatial_argmax\"", ",", "\n", "\"v\"", ",", "\n", "\"state_out\"", ",", "\n", "\"pi_loss\"", ",", "\n", "\"v_loss\"", ",", "\n", "\"loss\"", ",", "\n", "\"approx_ent\"", ",", "\n", "\"approx_kl\"", ",", "\n", "\"clipfrac\"", ",", "\n", "\"logp_pi\"", ",", "\n", "]", "\n", "infer_inputs", "=", "[", "\n", "\"x_non_spatial_ph\"", ",", "\n", "\"x_spatial_ph\"", ",", "\n", "\"x_mask_spell_ph\"", ",", "\n", "\"x_mask_spatial_ph\"", ",", "\n", "\"x_if_spawn_spell_ph\"", ",", "\n", "]", "\n", "infer_outputs", "=", "[", "\n", "\"pi_spell_argmax\"", ",", "\n", "\"pi_spatial_argmax\"", ",", "\n", "]", "\n", "self", ".", "logger", ".", "setup_tf_saver", "(", "\n", "self", ".", "sess", ",", "\n", "train_inputs", "=", "{", "k", ":", "self", ".", "model", "[", "k", "]", "for", "k", "in", "train_inputs", "}", ",", "\n", "train_outputs", "=", "{", "k", ":", "self", ".", "model", "[", "k", "]", "for", "k", "in", "train_outputs", "}", ",", "\n", "infer_inputs", "=", "{", "k", ":", "self", ".", "model", "[", "k", "]", "for", "k", "in", "infer_inputs", "}", ",", "\n", "infer_outputs", "=", "{", "k", ":", "self", ".", "model", "[", "k", "]", "for", "k", "in", "infer_outputs", "}", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._create_env": [[112, 116], ["agents.Agent.cfg.create_env", "agents.Agent.seed"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.create_env", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.seed"], ["", "def", "_create_env", "(", "self", ")", ":", "\n", "        ", "env", "=", "self", ".", "cfg", ".", "create_env", "(", ")", "\n", "env", ".", "seed", "(", "self", ".", "cfg", ".", "seed", ")", "\n", "return", "env", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._create_sess": [[117, 124], ["tensorflow.GPUOptions", "tensorflow.Session", "tensorflow.ConfigProto"], "methods", ["None"], ["", "def", "_create_sess", "(", "self", ")", ":", "\n", "        ", "\"\"\"Sets up a fresh TF session.\"\"\"", "\n", "gpu_options", "=", "tf", ".", "GPUOptions", "(", ")", "\n", "gpu_options", ".", "allow_growth", "=", "True", "\n", "gpu_options", ".", "per_process_gpu_memory_fraction", "=", "0.5", "\n", "return", "tf", ".", "Session", "(", "\n", "graph", "=", "self", ".", "graph", ",", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._restore_model": [[126, 128], ["algos.ppo_heroic.restore_model"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.restore_model"], ["", "def", "_restore_model", "(", "self", ",", "restore_path", ")", ":", "\n", "        ", "return", "restore_model", "(", "self", ".", "sess", ",", "restore_path", ",", "self", ".", "id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._create_model": [[129, 131], ["algos.ppo_heroic.build_model"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.build_model"], ["", "def", "_create_model", "(", "self", ")", ":", "\n", "        ", "return", "build_model", "(", "self", ".", "env", ",", "self", ".", "cfg", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._create_buffer": [[132, 134], ["algos.ppo_heroic.PPOBuffer"], "methods", ["None"], ["", "def", "_create_buffer", "(", "self", ")", ":", "\n", "        ", "return", "PPOBuffer", "(", "self", ".", "env", ".", "observation_space", ",", "self", ".", "env", ".", "action_space", ",", "self", ".", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._reset_env": [[135, 137], ["agents.Agent.env.reset"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.reset"], ["", "def", "_reset_env", "(", "self", ",", "brain", ")", ":", "\n", "        ", "return", "self", ".", "env", ".", "reset", "(", "left_brain", "=", "Brain", ".", "DUMMY", ",", "right_brain", "=", "brain", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._rollout": [[138, 283], ["agents.Agent._reset_env", "agents.Agent.env.step", "agents.Agent.sess.run", "agents.Agent.buf.store", "agents.Agent.logger.store", "agents.Agent.cfg.spells.idx_to_spell", "agents.Agent.adversary_agent.get_next_action", "agents.Agent.cfg.spells.idx_to_spell", "agents.Agent.buf.finish_path", "numpy.array", "numpy.array", "agents.Agent.writer.add_summary", "numpy.array", "numpy.array", "agents.Agent.sess.run", "agents.Agent.logger.log", "agents.Agent.logger.store", "agents.Agent._reset_env", "agents.Agent.logger.log", "algos.utils.mpi_tools.proc_id", "numpy.zeros", "int", "int", "int", "int", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._reset_env", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.step", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.store", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.store", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.idx_to_spell", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.get_next_action", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.idx_to_spell", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer.finish_path", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.store", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._reset_env", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id"], ["", "def", "_rollout", "(", "self", ",", "epoch", ",", "brain", ")", ":", "\n", "        ", "o", ",", "info", "=", "self", ".", "_reset_env", "(", "brain", ")", "\n", "r", ",", "d", ",", "ep_ret", ",", "ep_len", ",", "ep_win", "=", "0", ",", "False", ",", "0", ",", "0", ",", "0", "\n", "t", "=", "0", "\n", "left_noop_spawn_expiry_time", "=", "0", "\n", "left_noop_spell_expiry_time", "=", "0", "\n", "right_noop_spawn_expiry_time", "=", "0", "\n", "right_noop_spell_expiry_time", "=", "0", "\n", "state_in_left", "=", "self", ".", "cfg", ".", "architecture", ".", "empty_rnn_state", "\n", "state_in_right", "=", "self", ".", "cfg", ".", "architecture", ".", "empty_rnn_state", "\n", "\n", "while", "t", "<", "self", ".", "cfg", ".", "local_steps_per_epoch", ":", "\n", "            ", "left_can_play_spawn", "=", "(", "\n", "info", "[", "\"battle_time\"", "]", ">=", "left_noop_spawn_expiry_time", "\n", ")", "and", "info", "[", "\"left_spawn_available\"", "]", "\n", "left_can_play_spell", "=", "(", "\n", "info", "[", "\"battle_time\"", "]", ">=", "left_noop_spell_expiry_time", "\n", ")", "and", "info", "[", "\"left_spell_available\"", "]", "\n", "\n", "a", ",", "a_right", "=", "None", ",", "None", "\n", "if", "info", "[", "\"left_can_play\"", "]", "and", "(", "left_can_play_spawn", "or", "left_can_play_spell", ")", ":", "\n", "                ", "o", "[", "\"if_spawn_spell\"", "]", "=", "(", "\n", "np", ".", "array", "(", "[", "1.0", "]", ")", "if", "info", "[", "\"left_spawn_available\"", "]", "else", "np", ".", "array", "(", "[", "0.0", "]", ")", "\n", ")", "\n", "o", "[", "\"state_in\"", "]", "=", "state_in_left", "\n", "a", ",", "v_t", ",", "logp_t", ",", "state_out", ",", "summaries", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "\n", "{", "\n", "\"spell\"", ":", "self", ".", "model", "[", "\"pi_spell\"", "]", ",", "\n", "\"spatial\"", ":", "self", ".", "model", "[", "\"pi_spatial\"", "]", ",", "\n", "}", ",", "\n", "self", ".", "model", "[", "\"v\"", "]", ",", "\n", "self", ".", "model", "[", "\"logp_pi\"", "]", ",", "\n", "self", ".", "model", "[", "\"state_out\"", "]", ",", "\n", "self", ".", "model", "[", "\"summary_op\"", "]", ",", "\n", "]", ",", "\n", "feed_dict", "=", "{", "\n", "self", ".", "model", "[", "\"x_non_spatial_ph\"", "]", ":", "o", "[", "\"non_spatial\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_spatial_ph\"", "]", ":", "o", "[", "\"spatial\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_mask_spell_ph\"", "]", ":", "o", "[", "\"mask_spell\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_mask_spatial_ph\"", "]", ":", "o", "[", "\"mask_spatial\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_if_spawn_spell_ph\"", "]", ":", "o", "[", "\"if_spawn_spell\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_state_in_ph\"", "]", ":", "o", "[", "\"state_in\"", "]", ",", "\n", "self", ".", "model", "[", "\"x_rnn_mask_ph\"", "]", ":", "np", ".", "zeros", "(", "1", ")", ",", "\n", "self", ".", "model", "[", "\"x_batch_size_ph\"", "]", ":", "1", ",", "\n", "}", ",", "\n", ")", "\n", "# save and log", "\n", "self", ".", "buf", ".", "store", "(", "o", ",", "a", ",", "r", ",", "v_t", ",", "logp_t", ")", "\n", "self", ".", "logger", ".", "store", "(", "VVals", "=", "v_t", ")", "\n", "t", "+=", "1", "\n", "state_in_left", "=", "state_out", "\n", "spell", "=", "self", ".", "cfg", ".", "spells", ".", "idx_to_spell", "(", "a", "[", "\"spell\"", "]", "[", "0", "]", ")", "\n", "if", "spell", ".", "is_noop", ":", "\n", "# Noop spells are encoded as negative noop duration in secs", "\n", "                    ", "if", "left_can_play_spawn", ":", "\n", "                        ", "left_noop_spawn_expiry_time", "=", "info", "[", "\"battle_time\"", "]", "-", "int", "(", "spell", ")", "\n", "", "else", ":", "\n", "                        ", "left_noop_spell_expiry_time", "=", "info", "[", "\"battle_time\"", "]", "-", "int", "(", "spell", ")", "\n", "", "", "if", "proc_id", "(", ")", "==", "0", "and", "summaries", ":", "\n", "                    ", "self", ".", "writer", ".", "add_summary", "(", "summaries", ",", "global_step", "=", "epoch", ")", "\n", "\n", "", "", "right_can_play_spawn", "=", "(", "\n", "info", "[", "\"battle_time\"", "]", ">=", "right_noop_spawn_expiry_time", "\n", ")", "and", "info", "[", "\"right_spawn_available\"", "]", "\n", "right_can_play_spell", "=", "(", "\n", "info", "[", "\"battle_time\"", "]", ">=", "right_noop_spell_expiry_time", "\n", ")", "and", "info", "[", "\"right_spell_available\"", "]", "\n", "if", "(", "\n", "info", "[", "\"right_can_play\"", "]", "\n", "and", "brain", "==", "Brain", ".", "DUMMY", "\n", "and", "(", "right_can_play_spawn", "or", "right_can_play_spell", ")", "\n", ")", ":", "\n", "                ", "info", "[", "\"o_flip\"", "]", "[", "\"if_spawn_spell\"", "]", "=", "(", "\n", "np", ".", "array", "(", "[", "1.0", "]", ")", "\n", "if", "info", "[", "\"right_spawn_available\"", "]", "\n", "else", "np", ".", "array", "(", "[", "0.0", "]", ")", "\n", ")", "\n", "info", "[", "\"o_flip\"", "]", "[", "\"state_in\"", "]", "=", "state_in_right", "\n", "a_right", ",", "_", "=", "self", ".", "adversary_agent", ".", "get_next_action", "(", "info", "[", "\"o_flip\"", "]", ")", "\n", "spell", "=", "self", ".", "cfg", ".", "spells", ".", "idx_to_spell", "(", "a_right", "[", "\"spell\"", "]", "[", "0", "]", ")", "\n", "if", "spell", ".", "is_noop", ":", "\n", "                    ", "if", "right_can_play_spawn", ":", "\n", "                        ", "right_noop_spawn_expiry_time", "=", "info", "[", "\"battle_time\"", "]", "-", "int", "(", "spell", ")", "\n", "", "else", ":", "\n", "                        ", "right_noop_spell_expiry_time", "=", "info", "[", "\"battle_time\"", "]", "-", "int", "(", "spell", ")", "\n", "\n", "", "", "", "should_increment_ep_len", "=", "info", "[", "\"left_can_play\"", "]", "and", "a", "is", "not", "None", "\n", "o", ",", "r", ",", "d", ",", "info", "=", "self", ".", "env", ".", "step", "(", "a", ",", "a_right", ")", "\n", "\n", "if", "d", "and", "info", "[", "\"battle_state\"", "]", "==", "\"LeftWon\"", ":", "\n", "                ", "ep_win", "+=", "1", "\n", "\n", "", "if", "should_increment_ep_len", "or", "d", ":", "\n", "                ", "ep_len", "+=", "1", "\n", "ep_ret", "+=", "r", "\n", "\n", "", "terminal", "=", "d", "or", "(", "ep_len", "==", "self", ".", "cfg", ".", "max_ep_len", ")", "\n", "epoch_cutoff", "=", "t", "==", "self", ".", "cfg", ".", "local_steps_per_epoch", "\n", "if", "terminal", "or", "epoch_cutoff", ":", "\n", "# update state in if needed afterwards", "\n", "                ", "o", "[", "\"state_in\"", "]", "=", "state_in_left", "\n", "\n", "# restart times of last noops", "\n", "left_noop_spawn_expiry_time", "=", "0", "\n", "left_noop_spell_expiry_time", "=", "0", "\n", "right_noop_spawn_expiry_time", "=", "0", "\n", "right_noop_spell_expiry_time", "=", "0", "\n", "\n", "# reset input states", "\n", "state_in_left", "=", "self", ".", "cfg", ".", "architecture", ".", "empty_rnn_state", "\n", "state_in_right", "=", "self", ".", "cfg", ".", "architecture", ".", "empty_rnn_state", "\n", "\n", "# if trajectory didn't reach terminal state, bootstrap value target", "\n", "last_val", "=", "(", "\n", "r", "\n", "if", "d", "\n", "else", "self", ".", "sess", ".", "run", "(", "\n", "self", ".", "model", "[", "\"v\"", "]", ",", "\n", "feed_dict", "=", "{", "\n", "self", ".", "model", "[", "\"x_non_spatial_ph\"", "]", ":", "o", "[", "\"non_spatial\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_spatial_ph\"", "]", ":", "o", "[", "\"spatial\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_mask_spell_ph\"", "]", ":", "o", "[", "\"mask_spell\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_mask_spatial_ph\"", "]", ":", "o", "[", "\"mask_spatial\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_state_in_ph\"", "]", ":", "o", "[", "\"state_in\"", "]", ",", "\n", "self", ".", "model", "[", "\"x_rnn_mask_ph\"", "]", ":", "np", ".", "zeros", "(", "1", ")", ",", "\n", "self", ".", "model", "[", "\"x_batch_size_ph\"", "]", ":", "1", ",", "\n", "}", ",", "\n", ")", "\n", ")", "\n", "self", ".", "buf", ".", "finish_path", "(", "last_val", ")", "\n", "if", "terminal", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "\n", "\"Episode done at %d/%d steps (took %d steps)\"", "\n", "%", "(", "t", ",", "self", ".", "cfg", ".", "local_steps_per_epoch", ",", "ep_len", ")", "\n", ")", "\n", "# Only save EpRet / EpLen / EpWinRate if trajectory finished.", "\n", "self", ".", "logger", ".", "store", "(", "EpRet", "=", "ep_ret", ",", "EpLen", "=", "ep_len", ",", "EpWinRate", "=", "ep_win", ")", "\n", "# Reset environment on terminal state reached.", "\n", "o", ",", "info", "=", "self", ".", "_reset_env", "(", "brain", ")", "\n", "r", ",", "d", ",", "ep_ret", ",", "ep_len", ",", "ep_win", "=", "0", ",", "False", ",", "0", ",", "0", ",", "0", "\n", "", "else", ":", "\n", "# Maximum number of steps per epoch was reached.", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "\n", "\"Warning: trajectory cut off by epoch at %d steps.\"", "%", "ep_len", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._update": [[285, 371], ["agents.Agent.buf.create_batch_data", "agents.Agent.sess.run", "agents.Agent.sess.run", "agents.Agent.logger.store", "mpi4py.MPI.COMM_WORLD.gather", "mpi4py.MPI.COMM_WORLD.scatter", "min", "range", "agents.Agent.logger.store", "range", "range", "agents.Agent.logger.store", "algos.utils.mpi_tools.proc_id", "print", "print", "range", "range", "numpy.mean", "algos.utils.mpi_tools.mpi_avg", "range", "range", "numpy.mean", "algos.utils.mpi_tools.mpi_avg", "zip", "agents.Agent.sess.run", "kl_list.append", "agents.Agent.logger.log", "agents.Agent.sess.run", "agents.Agent.sess.run", "kl_list.append", "agents.Agent.logger.log", "range", "agents.Agent.buf.get_batch", "mpi4py.MPI.COMM_WORLD.Get_size"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer.create_batch_data", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.store", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.store", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.store", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_avg", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.mpi_avg", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.PPOBuffer.get_batch"], ["", "", "", "", "def", "_update", "(", "self", ")", ":", "\n", "        ", "num_batches", "=", "self", ".", "buf", ".", "create_batch_data", "(", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "architecture", ".", "rnn", ":", "\n", "# in case number of batches differs across processes, use the minimum", "\n", "            ", "num_batches_all", "=", "MPI", ".", "COMM_WORLD", ".", "gather", "(", "num_batches", ",", "root", "=", "0", ")", "\n", "num_batches_all", "=", "MPI", ".", "COMM_WORLD", ".", "scatter", "(", "\n", "[", "num_batches_all", "for", "_", "in", "range", "(", "MPI", ".", "COMM_WORLD", ".", "Get_size", "(", ")", ")", "]", ",", "root", "=", "0", "\n", ")", "\n", "num_batches", "=", "min", "(", "num_batches_all", ")", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "                ", "print", "(", "\"Num batches all\"", ",", "num_batches_all", ")", "\n", "print", "(", "\"Min num batches\"", ",", "num_batches", ")", "\n", "\n", "", "", "inputs", "=", "[", "\n", "{", "k", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "self", ".", "all_phs", ",", "self", ".", "buf", ".", "get_batch", "(", "batch_index", ")", ",", ")", "}", "\n", "for", "batch_index", "in", "range", "(", "num_batches", ")", "\n", "]", "\n", "# todo michalw: the statistics should be computed as running mean, not over", "\n", "# the first batch", "\n", "pi_l_old", ",", "v_l_old", ",", "ent", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "model", "[", "\"pi_loss\"", "]", ",", "self", ".", "model", "[", "\"v_loss\"", "]", ",", "self", ".", "model", "[", "\"approx_ent\"", "]", "]", ",", "\n", "feed_dict", "=", "inputs", "[", "0", "]", ",", "\n", ")", "\n", "\n", "# Training", "\n", "if", "not", "self", ".", "cfg", ".", "architecture", ".", "unified_policy_value", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "cfg", ".", "hyperparameters", ".", "train_pi_iters", ")", ":", "\n", "                ", "kl_list", "=", "[", "]", "\n", "for", "batch_index", "in", "range", "(", "num_batches", ")", ":", "\n", "                    ", "_", ",", "kl", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "model", "[", "\"train_pi\"", "]", ",", "self", ".", "model", "[", "\"approx_kl\"", "]", "]", ",", "\n", "feed_dict", "=", "inputs", "[", "batch_index", "]", ",", "\n", ")", "\n", "kl_list", ".", "append", "(", "kl", ")", "\n", "", "kl", "=", "np", ".", "mean", "(", "kl_list", ")", "\n", "kl", "=", "mpi_avg", "(", "kl", ")", "\n", "if", "kl", ">", "self", ".", "cfg", ".", "hyperparameters", ".", "target_kl", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "\n", "\"Early stopping at step %d due to reaching max kl.\"", "%", "i", "\n", ")", "\n", "break", "\n", "\n", "", "", "self", ".", "logger", ".", "store", "(", "StopIter", "=", "i", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "cfg", ".", "hyperparameters", ".", "train_v_iters", ")", ":", "\n", "                ", "for", "batch_index", "in", "range", "(", "num_batches", ")", ":", "\n", "                    ", "self", ".", "sess", ".", "run", "(", "self", ".", "model", "[", "\"train_v\"", "]", ",", "feed_dict", "=", "inputs", "[", "batch_index", "]", ")", "\n", "\n", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "cfg", ".", "hyperparameters", ".", "train_pi_iters", ")", ":", "\n", "                ", "kl_list", "=", "[", "]", "\n", "for", "batch_index", "in", "range", "(", "num_batches", ")", ":", "\n", "                    ", "_", ",", "kl", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "model", "[", "\"train\"", "]", ",", "self", ".", "model", "[", "\"approx_kl\"", "]", "]", ",", "\n", "feed_dict", "=", "inputs", "[", "batch_index", "]", ",", "\n", ")", "\n", "kl_list", ".", "append", "(", "kl", ")", "\n", "", "kl", "=", "np", ".", "mean", "(", "kl_list", ")", "\n", "kl", "=", "mpi_avg", "(", "kl", ")", "\n", "if", "kl", ">", "self", ".", "cfg", ".", "hyperparameters", ".", "target_kl", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "\n", "\"Early stopping at step %d due to reaching max kl.\"", "%", "i", "\n", ")", "\n", "break", "\n", "", "", "self", ".", "logger", ".", "store", "(", "StopIter", "=", "i", ")", "\n", "\n", "# todo michalw: the statistics should be computed as running mean, not over", "\n", "# the first batch", "\n", "# Log changes from update", "\n", "", "pi_l_new", ",", "v_l_new", ",", "_", ",", "cf", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "\n", "self", ".", "model", "[", "\"pi_loss\"", "]", ",", "\n", "self", ".", "model", "[", "\"v_loss\"", "]", ",", "\n", "self", ".", "model", "[", "\"approx_kl\"", "]", ",", "\n", "self", ".", "model", "[", "\"clipfrac\"", "]", ",", "\n", "]", ",", "\n", "feed_dict", "=", "inputs", "[", "0", "]", ",", "\n", ")", "\n", "self", ".", "logger", ".", "store", "(", "\n", "LossPi", "=", "pi_l_old", ",", "\n", "LossV", "=", "v_l_old", ",", "\n", "KL", "=", "kl", ",", "\n", "Entropy", "=", "ent", ",", "\n", "ClipFrac", "=", "cf", ",", "\n", "DeltaLossPi", "=", "(", "pi_l_new", "-", "pi_l_old", ")", ",", "\n", "DeltaLossV", "=", "(", "v_l_new", "-", "v_l_old", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._log_epoch": [[373, 417], ["agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.log_tabular", "agents.Agent.logger.dump_tabular", "algos.utils.mpi_tools.proc_id", "tensorflow.Summary", "agents.Agent.writer.add_summary", "tensorflow.Summary.value.add"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.EpochLogger.log_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.dump_tabular", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id"], ["", "def", "_log_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "# Log info about epoch", "\n", "        ", "self", ".", "logger", ".", "log_tabular", "(", "\"Epoch\"", ",", "epoch", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"EpRet\"", ",", "with_min_and_max", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"EpWinRate\"", ",", "average_only", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"EpLen\"", ",", "average_only", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"VVals\"", ",", "with_min_and_max", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"LossPi\"", ",", "average_only", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"LossV\"", ",", "average_only", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"DeltaLossPi\"", ",", "average_only", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"DeltaLossV\"", ",", "average_only", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"Entropy\"", ",", "average_only", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"KL\"", ",", "average_only", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"ClipFrac\"", ",", "average_only", "=", "True", ")", "\n", "self", ".", "logger", ".", "log_tabular", "(", "\"StopIter\"", ",", "average_only", "=", "True", ")", "\n", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "scalar_summary", "=", "tf", ".", "Summary", "(", ")", "\n", "for", "field", "in", "[", "\n", "\"MinEpRet\"", ",", "\n", "\"MaxEpRet\"", ",", "\n", "\"AverageEpRet\"", ",", "\n", "\"StdEpRet\"", ",", "\n", "\"EpWinRate\"", ",", "\n", "\"EpLen\"", ",", "\n", "\"MinVVals\"", ",", "\n", "\"MaxVVals\"", ",", "\n", "\"AverageVVals\"", ",", "\n", "\"StdVVals\"", ",", "\n", "\"LossPi\"", ",", "\n", "\"LossV\"", ",", "\n", "\"DeltaLossPi\"", ",", "\n", "\"DeltaLossV\"", ",", "\n", "\"Entropy\"", ",", "\n", "\"KL\"", ",", "\n", "\"ClipFrac\"", ",", "\n", "\"StopIter\"", ",", "\n", "]", ":", "\n", "                ", "val", "=", "self", ".", "logger", ".", "log_current_row", "[", "field", "]", "\n", "scalar_summary", ".", "value", ".", "add", "(", "tag", "=", "field", ",", "simple_value", "=", "val", ")", "\n", "", "self", ".", "writer", ".", "add_summary", "(", "scalar_summary", ",", "global_step", "=", "epoch", ")", "\n", "\n", "", "self", ".", "last_epoch_wr", "=", "self", ".", "logger", ".", "log_current_row", "[", "\"EpWinRate\"", "]", "\n", "self", ".", "logger", ".", "dump_tabular", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.save": [[418, 422], ["algos.utils.mpi_tools.proc_id", "agents.Agent.saver.save", "agents.Agent.writer.flush"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.save"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "self", ".", "saver", ".", "save", "(", "self", ")", "\n", "self", ".", "writer", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._initialize_adversary": [[423, 437], ["agents.Agent.adversary_agent.deinitialize", "agents.Agent.adversary_agent.deinitialize", "agents.Agent.sync_random_restore_path", "agents.Agent.logger.log", "agents.Agent.adversary_agent.initialize", "agents.Agent.adversary_agent.restore"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.deinitialize", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.deinitialize", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.sync_random_restore_path", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.initialize", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.restore"], ["", "", "def", "_initialize_adversary", "(", "self", ",", "brain", ")", ":", "\n", "        ", "if", "brain", "!=", "Brain", ".", "DUMMY", ":", "\n", "            ", "self", ".", "adversary_agent", ".", "deinitialize", "(", ")", "\n", "self", ".", "selfplay_epochs", "=", "0", "\n", "return", "\n", "\n", "", "if", "self", ".", "selfplay_epochs", "%", "10", "==", "0", ":", "\n", "            ", "self", ".", "adversary_agent", ".", "deinitialize", "(", ")", "\n", "restore_path", "=", "self", ".", "sync_random_restore_path", "(", ")", "\n", "self", ".", "logger", ".", "log", "(", "\"Restoring next adversary agent from %s\"", "%", "restore_path", ")", "\n", "self", ".", "adversary_agent", ".", "initialize", "(", ")", "\n", "self", ".", "adversary_agent", ".", "restore", "(", "restore_path", ")", "\n", "\n", "", "self", ".", "selfplay_epochs", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.run": [[438, 516], ["tuple", "agents.Agent.logger.log", "agents.Agent._create_buffer", "agents.Agent._setup_tf_saver", "agents.Agent.sess.run", "max", "agents.Agent.logger.log", "range", "agents.Agent.adversary_agent.deinitialize", "os.isdir", "agents.Agent._restore", "agents.Agent._start_from_scratch", "agents.Agent.plan.next_stage", "agents.Agent._initialize_adversary", "agents.Agent._rollout", "agents.Agent._update", "agents.Agent.buf.reset", "agents.Agent._log_epoch", "algos.utils.count_vars", "agents.Agent.logger.log", "algos.utils.mpi_tools.proc_id", "agents.Agent.saver.save_with_frequency", "agents.Agent.writer.flush"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._create_buffer", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._setup_tf_saver", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.deinitialize", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._restore", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._start_from_scratch", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.TrainingPlan.next_stage", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._initialize_adversary", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._rollout", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._update", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.plan.ConsistentPerformanceCondition.reset", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._log_epoch", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.utils.count_vars", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.save_with_frequency"], ["", "def", "run", "(", "self", ",", "epochs_max", ",", "restore_path", "=", "None", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "restore_path", "and", "osp", ".", "isdir", "(", "restore_path", ")", ":", "\n", "                ", "self", ".", "_restore", "(", "restore_path", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "_start_from_scratch", "(", ")", "\n", "\n", "# Count variables", "\n", "", "var_counts", "=", "tuple", "(", "\n", "algoutils", ".", "count_vars", "(", "scope", ")", "for", "scope", "in", "[", "\"Policy\"", ",", "\"ValueFunction\"", "]", "\n", ")", "\n", "self", ".", "logger", ".", "log", "(", "\"Number of parameters: pi: %d, v: %d\"", "%", "var_counts", ")", "\n", "\n", "# TODO dimitrijer: no need to create each time, save shape of env and", "\n", "# create it in ctor", "\n", "self", ".", "buf", "=", "self", ".", "_create_buffer", "(", ")", "\n", "self", ".", "_setup_tf_saver", "(", ")", "\n", "# Need all placeholders in *this* order later (to zip with data from buffer)", "\n", "self", ".", "all_phs", "=", "[", "\n", "self", ".", "model", "[", "k", "]", "\n", "for", "k", "in", "[", "\n", "\"x_non_spatial_ph\"", ",", "\n", "\"x_spatial_ph\"", ",", "\n", "\"x_mask_spell_ph\"", ",", "\n", "\"x_mask_spatial_ph\"", ",", "\n", "\"x_if_spawn_spell_ph\"", ",", "\n", "\"x_state_in_ph\"", ",", "\n", "\"x_rnn_mask_ph\"", ",", "\n", "\"x_batch_size_ph\"", ",", "\n", "\"a_spell_ph\"", ",", "\n", "\"a_spatial_ph\"", ",", "\n", "\"adv_ph\"", ",", "\n", "\"ret_ph\"", ",", "\n", "\"logp_old_ph\"", ",", "\n", "\"v_old_ph\"", ",", "\n", "]", "\n", "]", "\n", "\n", "# Sync params across processes", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "model", "[", "\"sync_op\"", "]", ")", "\n", "\n", "training_stage", "=", "None", "\n", "num_epochs", "=", "max", "(", "self", ".", "cfg", ".", "epochs_per_agent", ",", "epochs_max", "-", "self", ".", "epochs", ")", "\n", "self", ".", "logger", ".", "log", "(", "\"Running %s for %d epochs\"", "%", "(", "self", ",", "num_epochs", ")", ")", "\n", "# Main loop: collect experience in env and update/log each epoch", "\n", "for", "epoch", "in", "range", "(", "self", ".", "epochs", "+", "1", ",", "self", ".", "epochs", "+", "num_epochs", "+", "1", ")", ":", "\n", "                ", "next_stage", "=", "self", ".", "plan", ".", "next_stage", "(", "epoch", ",", "self", ".", "last_epoch_wr", ")", "\n", "if", "next_stage", "!=", "training_stage", ":", "\n", "                    ", "self", ".", "logger", ".", "log", "(", "\n", "\"Advancing training plan for %s to adversary=%s at epoch %d (wr=%.3f)\"", "# noqa: b950", "\n", "%", "(", "self", ",", "next_stage", ".", "brain", ",", "epoch", ",", "self", ".", "last_epoch_wr", ")", "\n", ")", "\n", "", "training_stage", "=", "next_stage", "\n", "\n", "self", ".", "_initialize_adversary", "(", "training_stage", ".", "brain", ")", "\n", "\n", "# Collect trajectories", "\n", "self", ".", "_rollout", "(", "epoch", ",", "training_stage", ".", "brain", ")", "\n", "\n", "# Perform PPO update!", "\n", "self", ".", "_update", "(", ")", "\n", "\n", "# Reset experience buffer so we can start collecting next", "\n", "# rollout trajectories.", "\n", "self", ".", "buf", ".", "reset", "(", ")", "\n", "\n", "# Log info about epoch", "\n", "self", ".", "_log_epoch", "(", "epoch", ")", "\n", "\n", "# Update epochs done", "\n", "self", ".", "epochs", "=", "epoch", "\n", "\n", "# Save model", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "                    ", "self", ".", "saver", ".", "save_with_frequency", "(", "self", ")", "\n", "self", ".", "writer", ".", "flush", "(", ")", "\n", "", "", "", "finally", ":", "\n", "            ", "self", ".", "adversary_agent", ".", "deinitialize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.state": [[517, 524], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "state", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "\"env\"", ":", "self", ".", "env", ",", "\n", "\"epochs\"", ":", "self", ".", "epochs", ",", "\n", "\"plan\"", ":", "self", ".", "plan", ",", "\n", "\"last_epoch_wr\"", ":", "self", ".", "last_epoch_wr", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._restore": [[526, 541], ["os.join", "joblib.load", "agents.Agent.env.reset_client", "agents.Agent._restore_model", "agents.Agent.logger.log", "tensorflow.get_default_graph", "tensorflow.get_default_session", "algos.utils.mpi_tools.proc_id", "agents.Agent.writer.add_graph"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.load", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.reset_client", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._restore_model", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id"], ["", "def", "_restore", "(", "self", ",", "restore_path", ")", ":", "\n", "        ", "assert", "tf", ".", "get_default_graph", "(", ")", "==", "self", ".", "graph", "\n", "assert", "tf", ".", "get_default_session", "(", ")", "==", "self", ".", "sess", "\n", "vars_path", "=", "osp", ".", "join", "(", "restore_path", ",", "\"vars.pkl\"", ")", "\n", "saved_state", "=", "joblib", ".", "load", "(", "vars_path", ")", "\n", "self", ".", "env", "=", "saved_state", "[", "\"env\"", "]", "\n", "# Need new session IDs.", "\n", "self", ".", "env", ".", "reset_client", "(", ")", "\n", "self", ".", "model", "=", "self", ".", "_restore_model", "(", "restore_path", ")", "\n", "self", ".", "plan", "=", "saved_state", "[", "\"plan\"", "]", "\n", "self", ".", "epochs", "=", "saved_state", "[", "\"epochs\"", "]", "\n", "self", ".", "last_epoch_wr", "=", "saved_state", "[", "\"last_epoch_wr\"", "]", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "self", ".", "writer", ".", "add_graph", "(", "self", ".", "graph", ")", "\n", "", "self", ".", "logger", ".", "log", "(", "\"%s restored from %s\"", "%", "(", "self", ",", "restore_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._start_from_scratch": [[542, 555], ["agents.Agent.logger.save_config", "agents.Agent._create_env", "agents.Agent._create_model", "agents.Agent.cfg.create_plan", "agents.Agent.sess.run", "agents.Agent.logger.log", "tensorflow.get_default_graph", "tensorflow.get_default_session", "tensorflow.global_variables_initializer", "algos.utils.mpi_tools.proc_id", "agents.Agent.writer.add_graph"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.save_config", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._create_env", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent._create_model", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.create_plan", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id"], ["", "def", "_start_from_scratch", "(", "self", ")", ":", "\n", "        ", "assert", "tf", ".", "get_default_graph", "(", ")", "==", "self", ".", "graph", "\n", "assert", "tf", ".", "get_default_session", "(", ")", "==", "self", ".", "sess", "\n", "self", ".", "logger", ".", "save_config", "(", "self", ".", "cfg", ")", "\n", "self", ".", "env", "=", "self", ".", "_create_env", "(", ")", "\n", "self", ".", "model", "=", "self", ".", "_create_model", "(", ")", "\n", "self", ".", "plan", "=", "self", ".", "cfg", ".", "create_plan", "(", "self", ")", "\n", "self", ".", "epochs", "=", "0", "\n", "self", ".", "last_epoch_wr", "=", "0", "\n", "self", ".", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "self", ".", "writer", ".", "add_graph", "(", "self", ".", "graph", ")", "\n", "", "self", ".", "logger", ".", "log", "(", "\"%s starting from scratch\"", "%", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.__enter__": [[556, 575], ["tensorflow.Graph", "agents.Agent._create_sess", "agents.Agent.cfg.get_agent_logger_kwargs", "algos.utils.logx.EpochLogger", "agents.Agent.sess.__enter__", "agents.Agent.logger.log", "len", "algos.utils.mpi_tools.proc_id", "tensorflow.summary.FileWriter", "agents.Agent.writer.__enter__", "hasattr", "agents.Agent.graph._py_funcs_used_in_graph.append"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent._create_sess", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.TrainingCfg.get_agent_logger_kwargs", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.__enter__", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.__enter__", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "graph", "=", "tf", ".", "Graph", "(", ")", "\n", "if", "len", "(", "self", ".", "graph_fns", ")", ">", "0", ":", "\n", "            ", "if", "not", "hasattr", "(", "self", ".", "graph", ",", "\"_py_funcs_used_in_graph\"", ")", ":", "\n", "                ", "self", ".", "graph", ".", "_py_funcs_used_in_graph", "=", "[", "]", "\n", "", "for", "graph_fn", "in", "self", ".", "graph_fns", ":", "\n", "                ", "if", "graph_fn", "not", "in", "self", ".", "graph", ".", "_py_funcs_used_in_graph", ":", "\n", "                    ", "self", ".", "graph", ".", "_py_funcs_used_in_graph", ".", "append", "(", "graph_fn", ")", "\n", "", "", "", "self", ".", "sess", "=", "self", ".", "_create_sess", "(", ")", "\n", "\n", "logger_kwargs", "=", "self", ".", "cfg", ".", "get_agent_logger_kwargs", "(", "self", ")", "\n", "self", ".", "logger", "=", "EpochLogger", "(", "**", "logger_kwargs", ")", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "self", ".", "writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "logger_kwargs", "[", "\"output_dir\"", "]", ",", "self", ".", "graph", ")", "\n", "self", ".", "writer", ".", "__enter__", "(", ")", "\n", "\n", "", "self", ".", "sess", ".", "__enter__", "(", ")", "\n", "self", ".", "logger", ".", "log", "(", "\"Opened TF session for %s\"", "%", "self", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.__exit__": [[576, 590], ["agents.Agent.sess.__exit__", "agents.Agent.logger.log", "agents.Agent._reset", "tensorflow.get_default_graph", "tensorflow.get_default_session", "agents.Agent.save", "algos.utils.mpi_tools.proc_id", "agents.Agent.writer.__exit__", "agents.Agent.graph_fns.append"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.__exit__", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent._reset", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.save", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.__exit__", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_value", ",", "traceback", ")", ":", "\n", "        ", "assert", "tf", ".", "get_default_graph", "(", ")", "==", "self", ".", "graph", "\n", "assert", "tf", ".", "get_default_session", "(", ")", "==", "self", ".", "sess", "\n", "if", "exc_type", "is", "None", ":", "\n", "            ", "for", "graph_fn", "in", "self", ".", "graph", ".", "_py_funcs_used_in_graph", ":", "\n", "                ", "if", "graph_fn", "not", "in", "self", ".", "graph_fns", ":", "\n", "                    ", "self", ".", "graph_fns", ".", "append", "(", "graph_fn", ")", "\n", "\n", "", "", "self", ".", "save", "(", ")", "\n", "", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "self", ".", "writer", ".", "__exit__", "(", "exc_type", ",", "exc_value", ",", "traceback", ")", "\n", "", "self", ".", "sess", ".", "__exit__", "(", "exc_type", ",", "exc_value", ",", "traceback", ")", "\n", "self", ".", "logger", ".", "log", "(", "\"Closed TF session for %s\"", "%", "self", ")", "\n", "self", ".", "_reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.__str__": [[591, 593], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"Agent(id=%d, epochs=%d)\"", "%", "(", "self", ".", "id", ",", "self", ".", "epochs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.sync_restore_path": [[594, 600], ["algos.utils.mpi_tools.broadcastpy", "algos.utils.mpi_tools.proc_id", "agents.Agent.saver.has_saved_models", "agents.Agent.saver.get_latest_model_path"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.broadcastpy", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.has_saved_models", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.get_latest_model_path"], ["", "def", "sync_restore_path", "(", "self", ")", ":", "\n", "        ", "restore_path", "=", "None", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "if", "self", ".", "saver", ".", "has_saved_models", "(", "self", ")", ":", "\n", "                ", "restore_path", "=", "self", ".", "saver", ".", "get_latest_model_path", "(", "self", ")", "\n", "", "", "return", "broadcastpy", "(", "restore_path", ",", "root", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.sync_random_restore_path": [[601, 606], ["algos.utils.mpi_tools.broadcastpy", "algos.utils.mpi_tools.proc_id", "agents.Agent.saver.get_random_model_path"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.broadcastpy", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.get_random_model_path"], ["", "def", "sync_random_restore_path", "(", "self", ")", ":", "\n", "        ", "restore_path", "=", "None", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "            ", "restore_path", "=", "self", ".", "saver", ".", "get_random_model_path", "(", ")", "\n", "", "return", "broadcastpy", "(", "restore_path", ",", "root", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.Agent.is_done": [[607, 610], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "is_done", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "epochs", ">=", "self", ".", "cfg", ".", "epochs", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.__init__": [[619, 621], ["agents.InferenceAgent._reset"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent._reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent._reset": [[622, 627], ["None"], "methods", ["None"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "graph", "=", "None", "\n", "self", ".", "sess", "=", "None", "\n", "self", ".", "model", "=", "None", "\n", "self", ".", "cfg", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.restore": [[628, 635], ["agents.InferenceAgent.graph.as_default", "saver.AgentSaver.extract_agent_id", "saver.AgentSaver.extract_cfg_path", "train.TrainingCfg.load", "algos.ppo_heroic.restore_model"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.extract_agent_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.extract_cfg_path", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.DictCfg.load", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.algos.ppo_heroic.restore_model"], ["", "def", "restore", "(", "self", ",", "restore_path", ")", ":", "\n", "        ", "with", "self", ".", "graph", ".", "as_default", "(", ")", ":", "\n", "            ", "agent_id", "=", "AgentSaver", ".", "extract_agent_id", "(", "restore_path", ")", "\n", "cfg_path", "=", "AgentSaver", ".", "extract_cfg_path", "(", "restore_path", ")", "\n", "self", ".", "cfg", "=", "TrainingCfg", ".", "load", "(", "cfg_path", ")", "\n", "self", ".", "model", "=", "restore_model", "(", "\n", "self", ".", "sess", ",", "restore_path", ",", "agent_id", ",", "is_train", "=", "False", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.get_next_action": [[637, 663], ["agents.InferenceAgent.sess.run", "ValueError"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run"], ["", "", "def", "get_next_action", "(", "self", ",", "o", ")", ":", "\n", "        ", "if", "self", ".", "model", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"model needs to be initialized\"", ")", "\n", "\n", "", "a", ",", "v_t", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "\n", "{", "\n", "\"spell\"", ":", "self", ".", "model", "[", "\"pi_spell_argmax\"", "]", ",", "\n", "\"spatial\"", ":", "self", ".", "model", "[", "\"pi_spatial_argmax\"", "]", ",", "\n", "}", ",", "\n", "self", ".", "model", "[", "\"v\"", "]", ",", "\n", "]", ",", "\n", "feed_dict", "=", "{", "\n", "self", ".", "model", "[", "\"x_non_spatial_ph\"", "]", ":", "o", "[", "\"non_spatial\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_spatial_ph\"", "]", ":", "o", "[", "\"spatial\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_mask_spell_ph\"", "]", ":", "o", "[", "\"mask_spell\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_mask_spatial_ph\"", "]", ":", "o", "[", "\"mask_spatial\"", "]", "[", "None", ",", ":", "]", ",", "\n", "self", ".", "model", "[", "\"x_if_spawn_spell_ph\"", "]", ":", "o", "[", "\"if_spawn_spell\"", "]", "[", "None", ",", ":", "]", ",", "\n", "# TODO dimitrijer: enable rnn inference", "\n", "# self.model[\"x_state_in_ph\"]: o[\"state_in\"],", "\n", "# self.model[\"x_rnn_mask_ph\"]: np.zeros(1),", "\n", "# self.model[\"x_batch_size_ph\"]: 1,", "\n", "}", ",", "\n", ")", "\n", "\n", "return", "a", ",", "v_t", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent._create_sess": [[664, 671], ["tensorflow.GPUOptions", "tensorflow.Session", "tensorflow.ConfigProto"], "methods", ["None"], ["", "def", "_create_sess", "(", "self", ")", ":", "\n", "# Setup TF session.", "\n", "        ", "gpu_options", "=", "tf", ".", "GPUOptions", "(", ")", "\n", "gpu_options", ".", "allow_growth", "=", "True", "\n", "gpu_options", ".", "per_process_gpu_memory_fraction", "=", "0.5", "\n", "return", "tf", ".", "Session", "(", "\n", "graph", "=", "self", ".", "graph", ",", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.initialize": [[673, 678], ["agents.InferenceAgent.is_initialized", "tensorflow.Graph", "agents.InferenceAgent._create_sess", "ValueError"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.is_initialized", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent._create_sess"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "is_initialized", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"inference agent already initialized\"", ")", "\n", "", "self", ".", "graph", "=", "tf", ".", "Graph", "(", ")", "\n", "self", ".", "sess", "=", "self", ".", "_create_sess", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.deinitialize": [[679, 684], ["agents.InferenceAgent.sess.close", "agents.InferenceAgent._reset", "agents.InferenceAgent.is_initialized"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.envs.heroic_env.HeroicEnv.close", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent._reset", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.is_initialized"], ["", "def", "deinitialize", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "is_initialized", "(", ")", ":", "\n", "            ", "return", "\n", "", "self", ".", "sess", ".", "close", "(", ")", "\n", "self", ".", "_reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.is_initialized": [[685, 687], ["None"], "methods", ["None"], ["", "def", "is_initialized", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sess", "is", "not", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.extract_agent_id": [[17, 21], ["re.search", "int", "re.search.group"], "methods", ["None"], ["@", "classmethod", "\n", "def", "extract_agent_id", "(", "cls", ",", "restore_path", ")", ":", "\n", "        ", "matches", "=", "re", ".", "search", "(", "\"agent_([0-9]+)\"", ",", "restore_path", ")", "\n", "return", "int", "(", "matches", ".", "group", "(", "1", ")", ")", "if", "matches", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.extract_epoch": [[22, 26], ["re.search", "int", "re.search.group"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "extract_epoch", "(", "cls", ",", "restore_path", ")", ":", "\n", "        ", "matches", "=", "re", ".", "search", "(", "\"simple_save([0-9]+)\"", ",", "restore_path", ")", "\n", "return", "int", "(", "matches", ".", "group", "(", "1", ")", ")", "if", "matches", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.extract_cfg_path": [[27, 31], ["os.dirname", "os.dirname", "os.abspath", "os.abspath", "restore_path.rstrip", "os.join", "os.join"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "extract_cfg_path", "(", "cls", ",", "restore_path", ")", ":", "\n", "        ", "model_dir", "=", "osp", ".", "dirname", "(", "restore_path", ".", "rstrip", "(", "osp", ".", "sep", ")", ")", "\n", "return", "osp", ".", "abspath", "(", "osp", ".", "join", "(", "model_dir", ",", "\"..\"", ",", "\"training_cfg.yml\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.__init__": [[32, 60], ["os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.join", "os.join", "int", "saver.AgentSaver._load_agent_epochs", "utils.mpi_tools.proc_id", "logger.info", "os.isdir", "os.isdir", "agent_dir.startswith", "agent_dir.split", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._load_agent_epochs", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id"], ["", "def", "__init__", "(", "self", ",", "output_dir", ",", "capacity", "=", "1000", ",", "frequency", "=", "10", ",", "delta", "=", "0.5", ")", ":", "\n", "        ", "\"\"\"\n        Initialize AgentSaver.\n\n        :param output_dir: path to experiment directory\n        :param capacity: max number of saved models per agent.\n        :param frequency: save frequency.\n        :param delta: real number in [0, 1], affects random saved agent sampling.\n        \"\"\"", "\n", "self", ".", "output_dir", "=", "output_dir", "\n", "self", ".", "capacity", "=", "capacity", "\n", "self", ".", "frequency", "=", "frequency", "\n", "self", ".", "delta", "=", "delta", "\n", "\n", "# Maps agent to list of saved epochs.", "\n", "self", ".", "saved_epochs", "=", "{", "}", "\n", "\n", "# Read existing saved checkpoints.", "\n", "for", "agent_dir", "in", "os", ".", "listdir", "(", "output_dir", ")", ":", "\n", "            ", "agent_path", "=", "osp", ".", "join", "(", "output_dir", ",", "agent_dir", ")", "\n", "if", "not", "(", "osp", ".", "isdir", "(", "agent_path", ")", "and", "agent_dir", ".", "startswith", "(", "\"agent_\"", ")", ")", ":", "\n", "                ", "continue", "\n", "", "agent_id", "=", "int", "(", "agent_dir", ".", "split", "(", "\"_\"", ")", "[", "1", "]", ")", "\n", "agent_epochs", "=", "self", ".", "_load_agent_epochs", "(", "agent_path", ")", "\n", "self", ".", "saved_epochs", "[", "agent_id", "]", "=", "agent_epochs", "\n", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "\"Found %d checkpoints for Agent(id=%d)\"", ",", "len", "(", "agent_epochs", ")", ",", "agent_id", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.save_with_frequency": [[62, 68], ["saver.AgentSaver.save", "utils.mpi_tools.proc_id"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.save", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id"], ["", "", "", "def", "save_with_frequency", "(", "self", ",", "agent", ")", ":", "\n", "        ", "if", "proc_id", "(", ")", "!=", "0", ":", "\n", "            ", "return", "\n", "", "if", "agent", ".", "state", "[", "\"epochs\"", "]", "%", "self", ".", "frequency", "!=", "0", ":", "\n", "            ", "return", "\n", "", "self", ".", "save", "(", "agent", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.save": [[69, 100], ["utils.mpi_tools.proc_id", "len", "history.pop", "saver.AgentSaver._get_model_path", "os.isdir", "os.isdir", "agent.logger.save_state_for_training", "history.append", "agent.logger.log", "len", "shutil.rmtree", "agent.logger.log", "utils.mpi_tools.proc_id", "logger.error", "os.exists", "os.exists", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "saver.AgentSaver._get_agent_path", "saver.AgentSaver._get_agent_path"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._get_model_path", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.save_state_for_training", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.logx.Logger.log", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.utils.mpi_tools.proc_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._get_agent_path", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._get_agent_path"], ["", "def", "save", "(", "self", ",", "agent", ")", ":", "\n", "        ", "if", "proc_id", "(", ")", "!=", "0", ":", "\n", "            ", "return", "\n", "", "state_dict", "=", "agent", ".", "state", "\n", "epoch", "=", "state_dict", "[", "\"epochs\"", "]", "\n", "if", "agent", ".", "id", "not", "in", "self", ".", "saved_epochs", ":", "\n", "            ", "self", ".", "saved_epochs", "[", "agent", ".", "id", "]", "=", "[", "]", "\n", "\n", "", "history", "=", "self", ".", "saved_epochs", "[", "agent", ".", "id", "]", "\n", "if", "len", "(", "history", ")", ">", "0", "and", "epoch", "==", "history", "[", "-", "1", "]", ":", "\n", "# Already saved.", "\n", "            ", "return", "\n", "", "while", "len", "(", "history", ")", ">=", "self", ".", "capacity", ":", "\n", "            ", "epoch_to_remove", "=", "history", ".", "pop", "(", "0", ")", "\n", "path_to_remove", "=", "self", ".", "_get_model_path", "(", "agent", ",", "epoch_to_remove", ")", "\n", "if", "osp", ".", "isdir", "(", "path_to_remove", ")", ":", "\n", "                ", "shutil", ".", "rmtree", "(", "path_to_remove", ")", "\n", "agent", ".", "logger", ".", "log", "(", "\n", "\"Removed saved model (epoch=%d) for %s\"", "%", "(", "epoch_to_remove", ",", "agent", ")", "\n", ")", "\n", "\n", "", "", "try", ":", "\n", "            ", "if", "proc_id", "(", ")", "==", "0", ":", "\n", "                ", "if", "not", "osp", ".", "exists", "(", "self", ".", "_get_agent_path", "(", "agent", ")", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "self", ".", "_get_agent_path", "(", "agent", ")", ")", "\n", "\n", "", "", "agent", ".", "logger", ".", "save_state_for_training", "(", "state_dict", ",", "itr", "=", "epoch", ")", "\n", "history", ".", "append", "(", "epoch", ")", "\n", "agent", ".", "logger", ".", "log", "(", "\"Saved epoch %d for %s\"", "%", "(", "epoch", ",", "agent", ")", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "logger", ".", "error", "(", "\"Failed to save epoch %d for %s\"", ",", "epoch", ",", "agent", ",", "exc_info", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.get_latest_model_path": [[101, 106], ["saver.AgentSaver._get_model_path", "ValueError", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._get_model_path"], ["", "", "def", "get_latest_model_path", "(", "self", ",", "agent", ")", ":", "\n", "        ", "if", "agent", ".", "id", "not", "in", "self", ".", "saved_epochs", ":", "\n", "            ", "raise", "ValueError", "(", "\"no saved models for %s\"", "%", "agent", ")", "\n", "", "history", "=", "self", ".", "saved_epochs", "[", "agent", ".", "id", "]", "\n", "return", "self", ".", "_get_model_path", "(", "agent", ",", "history", "[", "len", "(", "history", ")", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.get_random_model_path": [[107, 125], ["numpy.random.choice", "saver.AgentSaver._get_model_path", "len", "ValueError", "saver.AgentSaver.saved_epochs.items", "enumerate", "int", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._get_model_path"], ["", "def", "get_random_model_path", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Get random model that was saved in epoch in certain range.\n\n        Model epoch range: `[max(min_epoch, delta * max_epoch), max_epoch]`.\n\n        :return: path to the model.\n        \"\"\"", "\n", "model_paths", "=", "[", "\n", "self", ".", "_get_model_path", "(", "agent_id", ",", "epoch", ")", "\n", "for", "agent_id", ",", "history", "in", "self", ".", "saved_epochs", ".", "items", "(", ")", "\n", "for", "i", ",", "epoch", "in", "enumerate", "(", "history", ")", "\n", "if", "i", ">=", "int", "(", "self", ".", "delta", "*", "len", "(", "history", ")", ")", "\n", "]", "\n", "if", "len", "(", "model_paths", ")", "<=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"no saved models\"", ")", "\n", "\n", "", "return", "np", ".", "random", ".", "choice", "(", "model_paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.has_saved_models": [[126, 128], ["len"], "methods", ["None"], ["", "def", "has_saved_models", "(", "self", ",", "agent", ")", ":", "\n", "        ", "return", "agent", ".", "id", "in", "self", ".", "saved_epochs", "and", "len", "(", "self", ".", "saved_epochs", "[", "agent", ".", "id", "]", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._get_agent_path": [[129, 132], ["os.join", "os.join", "isinstance"], "methods", ["None"], ["", "def", "_get_agent_path", "(", "self", ",", "agent", ")", ":", "\n", "        ", "agent_id", "=", "agent", "if", "isinstance", "(", "agent", ",", "int", ")", "else", "agent", ".", "id", "\n", "return", "osp", ".", "join", "(", "self", ".", "output_dir", ",", "\"agent_%d\"", "%", "agent_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._get_model_path": [[133, 135], ["os.join", "os.join", "saver.AgentSaver._get_agent_path"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._get_agent_path"], ["", "def", "_get_model_path", "(", "self", ",", "agent", ",", "epoch", ")", ":", "\n", "        ", "return", "osp", ".", "join", "(", "self", ".", "_get_agent_path", "(", "agent", ")", ",", "\"simple_save%d\"", "%", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver._load_agent_epochs": [[136, 148], ["os.listdir", "os.listdir", "os.listdir", "os.listdir", "list", "os.join", "os.join", "saver.AgentSaver.extract_epoch", "epochs.append", "sorted", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.isdir"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.saver.AgentSaver.extract_epoch", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "_load_agent_epochs", "(", "self", ",", "path", ")", ":", "\n", "        ", "epochs", "=", "[", "]", "\n", "for", "checkpoint", "in", "os", ".", "listdir", "(", "path", ")", ":", "\n", "            ", "checkpoint_path", "=", "osp", ".", "join", "(", "path", ",", "checkpoint", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "checkpoint_path", ")", ":", "\n", "                ", "continue", "\n", "", "epoch", "=", "self", ".", "extract_epoch", "(", "checkpoint", ")", "\n", "if", "epoch", "is", "None", ":", "\n", "                ", "continue", "\n", "", "epochs", ".", "append", "(", "epoch", ")", "\n", "\n", "", "return", "list", "(", "sorted", "(", "epochs", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Creep.__init__": [[75, 81], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "scr", ",", "xpos", ",", "unit_type", ",", "health_perc", ",", "owner", ")", ":", "\n", "        ", "self", ".", "scr", "=", "scr", "\n", "self", ".", "xpos", "=", "xpos", "\n", "self", ".", "unit_type", "=", "unit_type", "\n", "self", ".", "health_perc", "=", "health_perc", "\n", "self", ".", "owner", "=", "owner", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Creep.draw": [[82, 90], ["battlefield.Creep.scr.addstr", "curses.color_pair", "curses.color_pair"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "y", ",", "x", ")", ":", "\n", "        ", "char", "=", "self", ".", "CHARS", "[", "self", ".", "unit_type", "]", "\n", "color", "=", "(", "\n", "curses", ".", "color_pair", "(", "1", ")", "\n", "if", "self", ".", "owner", "==", "Owner", ".", "RIGHT_PLAYER", "\n", "else", "curses", ".", "color_pair", "(", "2", ")", "\n", ")", "\n", "self", ".", "scr", ".", "addstr", "(", "y", ",", "x", ",", "char", ",", "color", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.__init__": [[101, 109], ["int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "scr", ",", "kind", ",", "top", "=", "0", ",", "left", "=", "0", ",", "width", "=", "70", ",", "height", "=", "5", ")", ":", "\n", "        ", "self", ".", "scr", "=", "scr", "\n", "self", ".", "creeps", "=", "[", "]", "\n", "self", ".", "kind", "=", "int", "(", "kind", ")", "\n", "self", ".", "top", "=", "top", "\n", "self", ".", "left", "=", "left", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "height", "=", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.get_bin": [[110, 113], ["max", "math.ceil"], "methods", ["None"], ["", "def", "get_bin", "(", "self", ",", "x", ")", ":", "\n", "        ", "bin", "=", "(", "x", "-", "self", ".", "X_MIN", ")", "/", "(", "self", ".", "X_MAX", "-", "self", ".", "X_MIN", ")", "*", "self", ".", "width", "\n", "return", "max", "(", "math", ".", "ceil", "(", "bin", ")", "-", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.add_creep": [[114, 116], ["battlefield.Lane.creeps.append"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "add_creep", "(", "self", ",", "creep", ")", ":", "\n", "        ", "self", ".", "creeps", ".", "append", "(", "creep", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.y": [[117, 125], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "y", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "kind", "==", "self", ".", "KIND_TOP", ":", "\n", "            ", "return", "self", ".", "top", "+", "self", ".", "height", "//", "2", "\n", "", "elif", "self", ".", "kind", "==", "self", ".", "KIND_MID", ":", "\n", "            ", "return", "self", ".", "top", "+", "self", ".", "height", "//", "2", "+", "self", ".", "height", "\n", "", "elif", "self", ".", "kind", "==", "self", ".", "KIND_BTM", ":", "\n", "            ", "return", "self", ".", "top", "+", "self", ".", "height", "//", "2", "+", "2", "*", "self", ".", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.get_creeps_at": [[126, 128], ["battlefield.Lane.get_bin"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.get_bin"], ["", "", "def", "get_creeps_at", "(", "self", ",", "bin", ")", ":", "\n", "        ", "return", "(", "c", "for", "c", "in", "self", ".", "creeps", "if", "self", ".", "get_bin", "(", "c", ".", "xpos", ")", "==", "bin", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.get_lane_ys": [[129, 136], ["range", "ys.append", "ys.append"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.stacked.SpatialBuffer.append"], ["", "def", "get_lane_ys", "(", "self", ")", ":", "\n", "        ", "center", "=", "self", ".", "y", "\n", "ys", "=", "[", "center", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "height", "//", "2", ")", ":", "\n", "            ", "ys", ".", "append", "(", "center", "+", "i", ")", "\n", "ys", ".", "append", "(", "center", "-", "i", ")", "\n", "", "return", "ys", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.render": [[137, 159], ["battlefield.Lane.scr.move", "range", "battlefield.Lane.scr.move", "range", "range", "battlefield.Lane.scr.addch", "battlefield.Lane.scr.addch", "battlefield.Lane.get_lane_ys", "itertools.zip_longest", "battlefield.Lane.get_creeps_at", "creep.draw", "battlefield.Lane.scr.addch"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.get_lane_ys", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.get_creeps_at", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Creep.draw"], ["", "def", "render", "(", "self", ")", ":", "\n", "# Draw upper border", "\n", "        ", "self", ".", "scr", ".", "move", "(", "self", ".", "y", "-", "self", ".", "height", "//", "2", ",", "self", ".", "left", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "width", ")", ":", "\n", "            ", "self", ".", "scr", ".", "addch", "(", "\"-\"", ",", "curses", ".", "A_DIM", ")", "\n", "\n", "# Draw lower border", "\n", "", "self", ".", "scr", ".", "move", "(", "self", ".", "y", "+", "self", ".", "height", "//", "2", ",", "self", ".", "left", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "width", ")", ":", "\n", "            ", "self", ".", "scr", ".", "addch", "(", "\"-\"", ",", "curses", ".", "A_DIM", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "width", ")", ":", "\n", "            ", "ys", "=", "self", ".", "get_lane_ys", "(", ")", "\n", "for", "y", ",", "creep", "in", "zip_longest", "(", "ys", ",", "self", ".", "get_creeps_at", "(", "i", ")", ")", ":", "\n", "                ", "if", "not", "y", ":", "\n", "# More creeps than slots", "\n", "                    ", "break", "\n", "", "x", "=", "self", ".", "left", "+", "i", "\n", "if", "creep", ":", "\n", "                    ", "creep", ".", "draw", "(", "y", ",", "x", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "scr", ".", "addch", "(", "y", ",", "x", ",", "\" \"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.__init__": [[165, 215], ["scr.getmaxyx", "battlefield.Map.scr.derwin", "battlefield.Map.add_creeps", "battlefield.Map.add_creeps", "battlefield.prettify_time", "str", "str", "battlefield.Lane", "battlefield.Lane", "battlefield.Lane"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.add_creeps", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.add_creeps", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.prettify_time"], ["def", "__init__", "(", "self", ",", "scr", ",", "state", ",", "top", "=", "0", ",", "left", "=", "0", ",", "bottom", "=", "0", ",", "right", "=", "0", ")", ":", "\n", "        ", "self", ".", "scr", "=", "scr", "\n", "height", ",", "width", "=", "scr", ".", "getmaxyx", "(", ")", "\n", "\n", "# Subtract margins", "\n", "height", "-=", "top", "+", "bottom", "\n", "width", "-=", "left", "+", "right", "\n", "\n", "# Subtract legend height", "\n", "height", "-=", "self", ".", "LEGEND_HEIGHT", "\n", "\n", "self", ".", "legend_scr", "=", "self", ".", "scr", ".", "derwin", "(", "self", ".", "LEGEND_HEIGHT", ",", "width", ",", "top", "+", "height", ",", "left", ")", "\n", "\n", "lane_width", "=", "width", "\n", "lane_height", "=", "height", "//", "3", "\n", "if", "lane_height", "%", "2", "==", "0", ":", "\n", "            ", "lane_height", "-=", "1", "\n", "\n", "", "self", ".", "lanes", "=", "[", "\n", "Lane", "(", "\n", "scr", ",", "\n", "Lane", ".", "KIND_BTM", ",", "\n", "top", "=", "top", ",", "\n", "left", "=", "left", ",", "\n", "width", "=", "lane_width", ",", "\n", "height", "=", "lane_height", ",", "\n", ")", ",", "\n", "Lane", "(", "\n", "scr", ",", "\n", "Lane", ".", "KIND_MID", ",", "\n", "top", "=", "top", ",", "\n", "left", "=", "left", ",", "\n", "width", "=", "lane_width", ",", "\n", "height", "=", "lane_height", ",", "\n", ")", ",", "\n", "Lane", "(", "\n", "scr", ",", "\n", "Lane", ".", "KIND_TOP", ",", "\n", "top", "=", "top", ",", "\n", "left", "=", "left", ",", "\n", "width", "=", "lane_width", ",", "\n", "height", "=", "lane_height", ",", "\n", ")", ",", "\n", "]", "\n", "\n", "self", ".", "add_creeps", "(", "state", "[", "\"LeftPlayer\"", "]", "[", "\"ActiveCreeps\"", "]", ",", "Owner", ".", "LEFT_PLAYER", ")", "\n", "self", ".", "add_creeps", "(", "state", "[", "\"RightPlayer\"", "]", "[", "\"ActiveCreeps\"", "]", ",", "Owner", ".", "RIGHT_PLAYER", ")", "\n", "self", ".", "battle_time", "=", "prettify_time", "(", "state", "[", "\"BattleTime\"", "]", ")", "\n", "self", ".", "battle_id", "=", "str", "(", "state", "[", "\"BattleId\"", "]", ")", "\n", "self", ".", "status", "=", "str", "(", "state", "[", "\"BattleState\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.render_legend": [[216, 240], ["battlefield.Map.legend_scr.getmaxyx", "battlefield.Map.legend_scr.addstr", "list", "range", "Creep.CHARS.keys", "range", "len", "battlefield.Map.legend_scr.getmaxyx", "battlefield.Map.legend_scr.addstr", "len", "unit_desc.ljust"], "methods", ["None"], ["", "def", "render_legend", "(", "self", ")", ":", "\n", "        ", "_", ",", "x", "=", "self", ".", "legend_scr", ".", "getmaxyx", "(", ")", "\n", "self", ".", "legend_scr", ".", "addstr", "(", "2", ",", "0", ",", "\"Legend\"", ",", "curses", ".", "A_UNDERLINE", ")", "\n", "# Rows start after Legend header and an empty row.", "\n", "row_start_y", "=", "4", "\n", "rows", "=", "self", ".", "LEGEND_HEIGHT", "-", "row_start_y", "\n", "\n", "all_creeps", "=", "list", "(", "Creep", ".", "CHARS", ".", "keys", "(", ")", ")", "\n", "cols", "=", "len", "(", "all_creeps", ")", "//", "rows", "+", "1", "\n", "col_width", "=", "self", ".", "legend_scr", ".", "getmaxyx", "(", ")", "[", "1", "]", "//", "cols", "\n", "\n", "unit_index", "=", "0", "\n", "for", "row", "in", "range", "(", "rows", ")", ":", "\n", "            ", "row_y", "=", "row_start_y", "+", "row", "\n", "for", "col", "in", "range", "(", "cols", ")", ":", "\n", "                ", "col_x", "=", "col", "*", "col_width", "\n", "unit", "=", "all_creeps", "[", "unit_index", "]", "\n", "unit_desc", "=", "Creep", ".", "SHORT_NAMES", "[", "unit", "]", "\n", "unit_char", "=", "Creep", ".", "CHARS", "[", "unit", "]", "\n", "unit_str", "=", "\"%s: %s\"", "%", "(", "unit_desc", ".", "ljust", "(", "10", ")", ",", "unit_char", ")", "\n", "self", ".", "legend_scr", ".", "addstr", "(", "row_y", ",", "col_x", ",", "unit_str", "[", ":", "col_width", "]", ")", "\n", "unit_index", "+=", "1", "\n", "if", "unit_index", ">=", "len", "(", "all_creeps", ")", ":", "\n", "                    ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.render_battle_id": [[241, 244], ["battlefield.Map.legend_scr.addstr"], "methods", ["None"], ["", "", "", "", "def", "render_battle_id", "(", "self", ")", ":", "\n", "        ", "battle_id_str", "=", "\"ID: \"", "+", "self", ".", "battle_id", "\n", "self", ".", "legend_scr", ".", "addstr", "(", "0", ",", "0", ",", "battle_id_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.render_status": [[245, 254], ["battlefield.Map.legend_scr.getmaxyx", "battlefield.Map.status.rjust", "battlefield.Map.legend_scr.addstr", "battlefield.Map.legend_scr.addstr", "battlefield.Map.legend_scr.addstr", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "render_status", "(", "self", ")", ":", "\n", "        ", "_", ",", "x", "=", "self", ".", "legend_scr", ".", "getmaxyx", "(", ")", "\n", "status_str", "=", "\"Status:\"", "\n", "status_val_str", "=", "self", ".", "status", ".", "rjust", "(", "11", ")", "\n", "status_len", "=", "len", "(", "status_str", ")", "+", "len", "(", "status_val_str", ")", "\n", "attrs", "=", "curses", ".", "A_NORMAL", "if", "self", ".", "status", "==", "\"InProgress\"", "else", "curses", ".", "A_STANDOUT", "\n", "self", ".", "legend_scr", ".", "addstr", "(", "0", ",", "x", "-", "status_len", ",", "status_str", ")", "\n", "self", ".", "legend_scr", ".", "addstr", "(", "\" \"", "*", "(", "len", "(", "status_val_str", ")", "-", "len", "(", "self", ".", "status", ")", ")", ")", "\n", "self", ".", "legend_scr", ".", "addstr", "(", "self", ".", "status", ",", "attrs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.render_time": [[255, 262], ["battlefield.Map.legend_scr.getmaxyx", "battlefield.Map.battle_time.rjust", "battlefield.Map.legend_scr.addstr", "len", "len"], "methods", ["None"], ["", "def", "render_time", "(", "self", ")", ":", "\n", "        ", "_", ",", "x", "=", "self", ".", "legend_scr", ".", "getmaxyx", "(", ")", "\n", "time_str", "=", "\"Time:\"", "\n", "time_val_str", "=", "self", ".", "battle_time", ".", "rjust", "(", "11", ")", "\n", "time_len", "=", "len", "(", "time_str", ")", "+", "len", "(", "time_val_str", ")", "\n", "\n", "self", ".", "legend_scr", ".", "addstr", "(", "1", ",", "x", "-", "time_len", ",", "time_str", "+", "time_val_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.add_creeps": [[263, 274], ["battlefield.Creep", "lane.add_creep", "int"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Lane.add_creep"], ["", "def", "add_creeps", "(", "self", ",", "creep_states", ",", "owner", ")", ":", "\n", "        ", "for", "creep_state", "in", "creep_states", ":", "\n", "            ", "lane", "=", "self", ".", "lanes", "[", "int", "(", "creep_state", "[", "\"Y\"", "]", ")", "+", "1", "]", "\n", "creep", "=", "Creep", "(", "\n", "self", ".", "scr", ",", "\n", "creep_state", "[", "\"X\"", "]", ",", "\n", "creep_state", "[", "\"UnitType\"", "]", ",", "\n", "creep_state", "[", "\"CurrentHealthPercent\"", "]", ",", "\n", "owner", ",", "\n", ")", "\n", "lane", ".", "add_creep", "(", "creep", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.render": [[275, 283], ["battlefield.Map.render_battle_id", "battlefield.Map.render_status", "battlefield.Map.render_legend", "battlefield.Map.render_time", "lane.render"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.render_battle_id", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render_status", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.render_legend", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.Map.render_time", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render"], ["", "", "def", "render", "(", "self", ")", ":", "\n", "        ", "for", "lane", "in", "self", ".", "lanes", ":", "\n", "            ", "lane", ".", "render", "(", ")", "\n", "\n", "", "self", ".", "render_battle_id", "(", ")", "\n", "self", ".", "render_status", "(", ")", "\n", "self", ".", "render_legend", "(", ")", "\n", "self", ".", "render_time", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.battlefield.prettify_time": [[8, 14], ["int", "int"], "function", ["None"], ["def", "prettify_time", "(", "fptime", ")", ":", "\n", "    ", "mins", ",", "secs", "=", "int", "(", "fptime", ")", "//", "60", ",", "int", "(", "fptime", ")", "%", "60", "\n", "if", "mins", "==", "0", ":", "\n", "        ", "return", "\"%02ds\"", "%", "secs", "\n", "", "else", ":", "\n", "        ", "return", "\"%dm%02ds\"", "%", "(", "mins", ",", "secs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.__init__": [[57, 70], ["server.split", "gym_heroic.client.HeroicClient", "gym.utils.seeding.np_random", "tui.BattleManager.SPEED_SECS.index"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "left_agent", ",", "server", ",", "seed", ")", ":", "\n", "        ", "host", ",", "port", "=", "server", ".", "split", "(", "\":\"", ")", "\n", "self", ".", "client", "=", "HeroicClient", "(", "host", "=", "host", ",", "port", "=", "port", ",", "use_sessions", "=", "True", ")", "\n", "self", ".", "np_random", ",", "_", "=", "seeding", ".", "np_random", "(", "seed", ")", "\n", "self", ".", "agent", "=", "left_agent", "\n", "\n", "self", ".", "current_battle", "=", "None", "\n", "self", ".", "speed_idx", "=", "self", ".", "SPEED_SECS", ".", "index", "(", "self", ".", "SPEED_SECS_1X", ")", "\n", "self", ".", "state_idx", "=", "0", "\n", "self", ".", "direction", "=", "self", ".", "DIRECTION_FORWARD", "\n", "\n", "self", ".", "left_wins", "=", "0", "\n", "self", ".", "total_battles", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.speed_secs": [[71, 75], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "speed_secs", "(", "self", ")", ":", "\n", "        ", "\"\"\"Playback speed in real time seconds per one game tick.\"\"\"", "\n", "return", "self", ".", "SPEED_SECS", "[", "self", ".", "speed_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.speed_perc": [[76, 80], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "speed_perc", "(", "self", ")", ":", "\n", "        ", "\"\"\"Playback speed in percentage of 1x speed.\"\"\"", "\n", "return", "self", ".", "SPEED_SECS_1X", "/", "self", ".", "speed_secs", "*", "100.0", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.win_rate": [[81, 87], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "win_rate", "(", "self", ")", ":", "\n", "        ", "\"\"\"Win rate of left player in [0f, 1f] range.\"\"\"", "\n", "if", "self", ".", "total_battles", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "return", "self", ".", "left_wins", "/", "self", ".", "total_battles", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.increase_speed": [[88, 90], ["max"], "methods", ["None"], ["", "def", "increase_speed", "(", "self", ")", ":", "\n", "        ", "self", ".", "speed_idx", "=", "max", "(", "0", ",", "self", ".", "speed_idx", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.decrease_speed": [[91, 93], ["min", "len"], "methods", ["None"], ["", "def", "decrease_speed", "(", "self", ")", ":", "\n", "        ", "self", ".", "speed_idx", "=", "min", "(", "len", "(", "self", ".", "SPEED_SECS", ")", "-", "1", ",", "self", ".", "speed_idx", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.reverse_direction": [[94, 96], ["None"], "methods", ["None"], ["", "def", "reverse_direction", "(", "self", ")", ":", "\n", "        ", "self", ".", "direction", "=", "-", "self", ".", "direction", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.rewind_to_start": [[97, 102], ["ValueError"], "methods", ["None"], ["", "def", "rewind_to_start", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "current_battle", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"no battle in progress\"", ")", "\n", "", "self", ".", "state_idx", "=", "0", "\n", "self", ".", "direction", "=", "self", ".", "DIRECTION_FORWARD", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.clamp_idx": [[103, 105], ["max", "min", "len"], "methods", ["None"], ["", "def", "clamp_idx", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "max", "(", "min", "(", "idx", ",", "len", "(", "self", ".", "current_battle", ".", "state_actions", ")", "-", "1", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.get_state_action_pair": [[106, 110], ["ValueError", "tui.BattleManager.clamp_idx"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.clamp_idx"], ["", "def", "get_state_action_pair", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "current_battle", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"no battle in progress\"", ")", "\n", "", "return", "self", ".", "current_battle", ".", "state_actions", "[", "self", ".", "clamp_idx", "(", "idx", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.next_state_action": [[111, 127], ["tui.BattleManager.get_state_action_pair", "tui.BattleManager.clamp_idx", "str", "ValueError", "len"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.get_state_action_pair", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.clamp_idx"], ["", "def", "next_state_action", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "current_battle", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"no battle in progress\"", ")", "\n", "", "state", ",", "action", "=", "self", ".", "get_state_action_pair", "(", "self", ".", "state_idx", ")", "\n", "self", ".", "state_idx", "=", "self", ".", "clamp_idx", "(", "self", ".", "state_idx", "+", "self", ".", "direction", ")", "\n", "\n", "# Inject battle ID in state.", "\n", "state", "[", "\"BattleId\"", "]", "=", "str", "(", "self", ".", "current_battle", ".", "id", ")", "\n", "\n", "return", "(", "\n", "state", ",", "\n", "action", ",", "\n", "{", "\n", "\"WinRate\"", ":", "self", ".", "win_rate", ",", "\n", "\"TotalStates\"", ":", "len", "(", "self", ".", "current_battle", ".", "state_actions", ")", ",", "\n", "\"TotalSteps\"", ":", "self", ".", "current_battle", ".", "steps", ",", "\n", "}", ",", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.start_new_battle": [[130, 138], ["inference.simulation.simulate_one_battle", "tui.BattleManager.rewind_to_start"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.simulation.simulate_one_battle", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.rewind_to_start"], ["", "def", "start_new_battle", "(", "self", ")", ":", "\n", "        ", "self", ".", "current_battle", "=", "simulate_one_battle", "(", "\n", "self", ".", "client", ",", "self", ".", "agent", ",", "Brain", ".", "UTILITY_9", ",", "self", ".", "np_random", ",", "with_replay", "=", "True", "\n", ")", "\n", "self", ".", "total_battles", "+=", "1", "\n", "if", "self", ".", "current_battle", ".", "winner", "==", "Owner", ".", "LEFT_PLAYER", ":", "\n", "            ", "self", ".", "left_wins", "+=", "1", "\n", "", "self", ".", "rewind_to_start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render": [[140, 148], ["scr.box", "battlefield.Map", "battlefield.Map.render", "scr.refresh"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render"], ["", "", "def", "render", "(", "scr", ",", "state", ")", ":", "\n", "    ", "scr", ".", "box", "(", ")", "\n", "\n", "# Set box margins", "\n", "battleground", "=", "Map", "(", "scr", ",", "state", ",", "top", "=", "1", ",", "left", "=", "1", ",", "bottom", "=", "1", ",", "right", "=", "1", ")", "\n", "battleground", ".", "render", "(", ")", "\n", "\n", "scr", ".", "refresh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.init_colors": [[150, 156], ["curses.init_pair", "curses.init_pair", "curses.init_pair", "curses.init_pair"], "function", ["None"], ["", "def", "init_colors", "(", ")", ":", "\n", "    ", "curses", ".", "init_pair", "(", "1", ",", "curses", ".", "COLOR_RED", ",", "curses", ".", "COLOR_BLACK", ")", "\n", "curses", ".", "init_pair", "(", "2", ",", "curses", ".", "COLOR_GREEN", ",", "curses", ".", "COLOR_BLACK", ")", "\n", "\n", "curses", ".", "init_pair", "(", "3", ",", "curses", ".", "COLOR_RED", ",", "curses", ".", "COLOR_WHITE", ")", "\n", "curses", ".", "init_pair", "(", "4", ",", "curses", ".", "COLOR_GREEN", ",", "curses", ".", "COLOR_WHITE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render_player_info": [[158, 273], ["scr.getmaxyx", "scr.addstr", "scr.addstr", "int", "scr.move", "range", "scr.addstr", "itertools.zip_longest", "scr.addstr", "itertools.zip_longest", "scr.addstr", "scr.refresh", "curses.color_pair", "scr.addstr", "range", "scr.move", "scr.clrtoeol", "range", "scr.move", "scr.clrtoeol", "scr.addstr", "scr.addstr", "scr.clrtoeol", "scr.addstr", "scr.clrtoeol", "scr.addstr", "scr.clrtoeol", "scr.addstr", "int", "scr.addstr", "scr.addstr", "tui.render_player_info.render_card", "train.Owner.LEFT_PLAYER", "train.Owner.RIGHT_PLAYER"], "function", ["None"], ["", "def", "render_player_info", "(", "scr", ",", "state", ",", "action", ",", "owner", ",", "custom_data", ")", ":", "\n", "    ", "height", ",", "width", "=", "scr", ".", "getmaxyx", "(", ")", "\n", "\n", "y", "=", "0", "\n", "color", "=", "1", "if", "owner", "==", "Owner", ".", "RIGHT_PLAYER", "else", "2", "\n", "hicolor", "=", "3", "if", "owner", "==", "Owner", ".", "RIGHT_PLAYER", "else", "4", "\n", "scr", ".", "addstr", "(", "y", ",", "0", ",", "owner", ".", "side", ",", "curses", ".", "color_pair", "(", "color", ")", ")", "\n", "scr", ".", "addstr", "(", "\" %3d%% HP\"", "%", "int", "(", "round", "(", "state", "[", "\"CastleHealthPercent\"", "]", "*", "100", ")", ")", ")", "\n", "y", "+=", "1", "\n", "\n", "FULL_BLOCK", "=", "\"\u2588\"", "\n", "EMPTY_BLOCK", "=", "\"\u2591\"", "\n", "filled", "=", "int", "(", "state", "[", "\"CastleHealthPercent\"", "]", "*", "width", ")", "\n", "\n", "scr", ".", "move", "(", "y", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "width", ")", ":", "\n", "        ", "if", "i", "<=", "filled", ":", "\n", "            ", "scr", ".", "addstr", "(", "FULL_BLOCK", ",", "curses", ".", "color_pair", "(", "hicolor", ")", ")", "\n", "", "else", ":", "\n", "            ", "scr", ".", "addstr", "(", "EMPTY_BLOCK", ",", "curses", ".", "color_pair", "(", "hicolor", ")", ")", "\n", "\n", "", "", "def", "render_card", "(", "card", ")", ":", "\n", "        ", "attrs", "=", "curses", ".", "A_DIM", "if", "card", "[", "\"SecondsUntilAvailable\"", "]", ">=", "1", "else", "curses", ".", "A_NORMAL", "\n", "if", "card", "[", "\"IsScheduled\"", "]", ":", "\n", "            ", "attrs", "|=", "curses", ".", "A_STANDOUT", "\n", "", "scr", ".", "addstr", "(", "\n", "\" - %s (%s)\"", "\n", "%", "(", "\n", "SPELL_NAMES", "[", "Spell", "(", "card", "[", "\"SpellType\"", "]", ")", "]", ",", "\n", "prettify_time", "(", "card", "[", "\"SecondsUntilAvailable\"", "]", ")", ",", "\n", ")", ",", "\n", "attrs", ",", "\n", ")", "\n", "\n", "", "y", "+=", "1", "\n", "scr", ".", "addstr", "(", "y", ",", "0", ",", "\"Hand\"", ",", "curses", ".", "A_UNDERLINE", ")", "\n", "minions", "=", "[", "c", "for", "c", "in", "state", "[", "\"CardsInHand\"", "]", "if", "c", "[", "\"CardIndex\"", "]", ">=", "0", "]", "\n", "for", "_", ",", "card", "in", "zip_longest", "(", "range", "(", "5", ")", ",", "minions", ")", ":", "\n", "        ", "y", "+=", "1", "\n", "scr", ".", "move", "(", "y", ",", "0", ")", "\n", "if", "card", ":", "\n", "            ", "render_card", "(", "card", ")", "\n", "", "scr", ".", "clrtoeol", "(", ")", "\n", "\n", "", "y", "+=", "1", "\n", "scr", ".", "addstr", "(", "y", ",", "0", ",", "\"Spells\"", ",", "curses", ".", "A_UNDERLINE", ")", "\n", "spells", "=", "[", "\n", "c", "for", "c", "in", "state", "[", "\"CardsInHand\"", "]", "if", "c", "[", "\"CardIndex\"", "]", "<", "0", "and", "c", "[", "\"CardIndex\"", "]", "!=", "-", "200", "\n", "]", "\n", "for", "_", ",", "card", "in", "zip_longest", "(", "range", "(", "2", ")", ",", "spells", ")", ":", "\n", "        ", "y", "+=", "1", "\n", "scr", ".", "move", "(", "y", ",", "0", ")", "\n", "if", "card", ":", "\n", "            ", "render_card", "(", "card", ")", "\n", "", "scr", ".", "clrtoeol", "(", ")", "\n", "\n", "", "y", "+=", "1", "\n", "scr", ".", "addstr", "(", "y", ",", "0", ",", "\"Action\"", ",", "curses", ".", "A_UNDERLINE", ")", "\n", "if", "action", "is", "not", "None", ":", "\n", "        ", "client_action", "=", "action", "\n", "y", "+=", "1", "\n", "attrs", "=", "curses", ".", "A_NORMAL", "\n", "card_attrs", "=", "curses", ".", "A_STANDOUT", "\n", "if", "client_action", "[", "\"CardIndex\"", "]", "==", "-", "1", ":", "\n", "            ", "action_desc", "=", "\"None\"", "\n", "attrs", "=", "curses", ".", "A_DIM", "\n", "card_attrs", "=", "curses", ".", "A_NORMAL", "\n", "", "else", ":", "\n", "            ", "card", "=", "next", "(", "\n", "c", "\n", "for", "c", "in", "state", "[", "\"CardsInHand\"", "]", "\n", "if", "c", "[", "\"CardIndex\"", "]", "==", "client_action", "[", "\"CardIndex\"", "]", "\n", ")", "\n", "action_desc", "=", "SPELL_NAMES", "[", "card", "[", "\"SpellType\"", "]", "]", "\n", "", "scr", ".", "addstr", "(", "y", ",", "0", ",", "\"- Card: \"", ")", "\n", "scr", ".", "addstr", "(", "action_desc", ",", "card_attrs", ")", "\n", "scr", ".", "clrtoeol", "(", ")", "\n", "\n", "y", "+=", "1", "\n", "scr", ".", "addstr", "(", "y", ",", "0", ",", "\"- Position: %.3f\"", "%", "client_action", "[", "\"X\"", "]", ",", "attrs", ")", "\n", "scr", ".", "clrtoeol", "(", ")", "\n", "\n", "y", "+=", "1", "\n", "lanes", "=", "[", "\"Bottom\"", ",", "\"Middle\"", ",", "\"Top\"", "]", "\n", "lane", "=", "lanes", "[", "int", "(", "client_action", "[", "\"Y\"", "]", ")", "+", "1", "]", "\n", "scr", ".", "addstr", "(", "y", ",", "0", ",", "\"- Lane: %s\"", "%", "lane", ",", "attrs", ")", "\n", "scr", ".", "clrtoeol", "(", ")", "\n", "\n", "y", "+=", "2", "\n", "scr", ".", "addstr", "(", "y", ",", "0", ",", "\"Custom Data\"", ",", "curses", ".", "A_UNDERLINE", ")", "\n", "", "if", "custom_data", "is", "not", "None", ":", "\n", "        ", "if", "\"WinProbability\"", "in", "custom_data", ":", "\n", "            ", "y", "+=", "1", "\n", "scr", ".", "addstr", "(", "\n", "y", ",", "\n", "0", ",", "\n", "\"- Win Probability: %.2f%%\"", "%", "(", "custom_data", "[", "\"WinProbability\"", "]", "*", "100.0", ")", ",", "\n", ")", "\n", "scr", ".", "clrtoeol", "(", ")", "\n", "", "if", "\"WinRate\"", "in", "custom_data", ":", "\n", "            ", "y", "+=", "1", "\n", "scr", ".", "addstr", "(", "\n", "y", ",", "0", ",", "\"- Overall Win Rate: %.2f%%\"", "%", "(", "custom_data", "[", "\"WinRate\"", "]", "*", "100.0", ")", ",", "\n", ")", "\n", "scr", ".", "clrtoeol", "(", ")", "\n", "", "if", "\"TotalStates\"", "in", "custom_data", ":", "\n", "            ", "y", "+=", "1", "\n", "scr", ".", "addstr", "(", "y", ",", "0", ",", "\"- Total States: %d\"", "%", "custom_data", "[", "\"TotalStates\"", "]", ")", "\n", "scr", ".", "clrtoeol", "(", ")", "\n", "", "if", "\"TotalSteps\"", "in", "custom_data", ":", "\n", "            ", "y", "+=", "1", "\n", "scr", ".", "addstr", "(", "y", ",", "0", ",", "\"- Total Steps: %d\"", "%", "custom_data", "[", "\"TotalSteps\"", "]", ")", "\n", "scr", ".", "clrtoeol", "(", ")", "\n", "\n", "", "", "scr", ".", "refresh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render_status": [[275, 295], ["scr.refresh", "scr.timeout", "scr.getch", "scr.move", "scr.addstr", "scr.clrtoeol", "scr.addstr", "scr.addstr", "int", "int"], "function", ["None"], ["", "def", "render_status", "(", "scr", ",", "speed_secs", ",", "speed_perc", ",", "direction", ")", ":", "\n", "# Show cursor at the end of status screen, before getch()", "\n", "    ", "scr", ".", "refresh", "(", ")", "\n", "\n", "scr", ".", "timeout", "(", "int", "(", "1000", "*", "speed_secs", ")", ")", "\n", "k", "=", "scr", ".", "getch", "(", ")", "\n", "scr", ".", "move", "(", "0", ",", "0", ")", "\n", "dirstr", "=", "\"\"", "if", "direction", "==", "BattleManager", ".", "DIRECTION_FORWARD", "else", "\" (reversed)\"", "\n", "scr", ".", "addstr", "(", "0", ",", "0", ",", "\"Speed: %d%%%s\"", "%", "(", "int", "(", "speed_perc", ")", ",", "dirstr", ")", ")", "\n", "scr", ".", "clrtoeol", "(", ")", "\n", "scr", ".", "addstr", "(", "\n", "1", ",", "\n", "0", ",", "\n", "\"(hit < to decrease speed, > to increase speed, x to reverse,\"", ",", "\n", "curses", ".", "A_DIM", ",", "\n", ")", "\n", "scr", ".", "addstr", "(", "\n", "2", ",", "0", ",", "\"r to rewind to start, n to start new battle, q to quit)\"", ",", "curses", ".", "A_DIM", "\n", ")", "\n", "return", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render_loop": [[297, 356], ["tui.init_colors", "stdscr.clear", "min", "min", "stdscr.derwin", "stdscr.derwin", "stdscr.derwin", "stdscr.derwin", "stdscr.derwin.nodelay", "battle_mgr.next_state_action", "tui.render", "tui.render_player_info", "tui.render_player_info", "tui.render_status", "RuntimeError", "ord", "battle_mgr.decrease_speed", "ord", "battle_mgr.increase_speed", "ord", "battle_mgr.reverse_direction", "ord", "battle_mgr.rewind_to_start", "ord", "battle_mgr.start_new_battle", "ord"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.init_colors", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.next_state_action", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render_player_info", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render_player_info", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.render_status", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.decrease_speed", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.increase_speed", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.reverse_direction", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.rewind_to_start", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.start_new_battle"], ["", "def", "render_loop", "(", "battle_mgr", ",", "stdscr", ")", ":", "\n", "    ", "init_colors", "(", ")", "\n", "stdscr", ".", "clear", "(", ")", "\n", "\n", "width", "=", "curses", ".", "COLS", "-", "1", "\n", "height", "=", "curses", ".", "LINES", "-", "1", "\n", "\n", "xcenter", "=", "width", "//", "2", "\n", "\n", "info_width", "=", "30", "\n", "info_height", "=", "30", "\n", "\n", "status_height", "=", "3", "\n", "\n", "map_width", "=", "min", "(", "width", "-", "info_width", "*", "2", ",", "80", ")", "\n", "map_height", "=", "min", "(", "height", "-", "status_height", ",", "45", ")", "\n", "map_y", "=", "0", "\n", "map_x", "=", "xcenter", "-", "map_width", "//", "2", "\n", "\n", "try", ":", "\n", "        ", "map_scr", "=", "stdscr", ".", "derwin", "(", "map_height", ",", "map_width", ",", "map_y", ",", "map_x", ")", "\n", "left_player_scr", "=", "stdscr", ".", "derwin", "(", "info_height", ",", "info_width", ",", "0", ",", "0", ")", "\n", "right_player_scr", "=", "stdscr", ".", "derwin", "(", "info_height", ",", "info_width", ",", "0", ",", "width", "-", "info_width", ")", "\n", "status_scr", "=", "stdscr", ".", "derwin", "(", "status_height", ",", "map_width", ",", "map_y", "+", "map_height", ",", "map_x", ")", "\n", "status_scr", ".", "nodelay", "(", "True", ")", "\n", "", "except", "curses", ".", "error", "as", "e", ":", "\n", "        ", "raise", "RuntimeError", "(", "\n", "\"Your terminal is too small to fit the interface, please expand it\"", "\n", ")", "from", "e", "\n", "\n", "", "while", "True", ":", "\n", "        ", "state", ",", "action", ",", "custom_data", "=", "battle_mgr", ".", "next_state_action", "(", ")", "\n", "\n", "render", "(", "map_scr", ",", "state", ")", "\n", "render_player_info", "(", "\n", "left_player_scr", ",", "state", "[", "\"LeftPlayer\"", "]", ",", "action", ",", "Owner", ".", "LEFT_PLAYER", ",", "custom_data", "\n", ")", "\n", "render_player_info", "(", "\n", "right_player_scr", ",", "state", "[", "\"RightPlayer\"", "]", ",", "None", ",", "Owner", ".", "RIGHT_PLAYER", ",", "None", "\n", ")", "\n", "\n", "key", "=", "render_status", "(", "\n", "status_scr", ",", "\n", "battle_mgr", ".", "speed_secs", ",", "\n", "battle_mgr", ".", "speed_perc", ",", "\n", "battle_mgr", ".", "direction", ",", "\n", ")", "\n", "if", "key", "==", "ord", "(", "\"<\"", ")", ":", "\n", "            ", "battle_mgr", ".", "decrease_speed", "(", ")", "\n", "", "elif", "key", "==", "ord", "(", "\">\"", ")", ":", "\n", "            ", "battle_mgr", ".", "increase_speed", "(", ")", "\n", "", "elif", "key", "==", "ord", "(", "\"x\"", ")", ":", "\n", "            ", "battle_mgr", ".", "reverse_direction", "(", ")", "\n", "", "elif", "key", "==", "ord", "(", "\"r\"", ")", ":", "\n", "            ", "battle_mgr", ".", "rewind_to_start", "(", ")", "\n", "", "elif", "key", "==", "ord", "(", "\"n\"", ")", ":", "\n", "            ", "battle_mgr", ".", "start_new_battle", "(", ")", "\n", "", "elif", "key", "==", "ord", "(", "\"q\"", ")", ":", "\n", "            ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.run": [[358, 378], ["tf.compat.v1.logging.set_verbosity", "logging.basicConfig", "agent.InferenceAgent", "agent.InferenceAgent.initialize", "agent.InferenceAgent.restore", "tui.BattleManager", "tui.BattleManager.start_new_battle", "curses.wrapper", "functools.partial", "logging.StreamHandler"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.initialize", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.restore", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.render.tui.BattleManager.start_new_battle"], ["", "", "", "def", "run", "(", "model_path", ",", "server", ",", "seed", ")", ":", "\n", "    ", "import", "tensorflow", "as", "tf", "\n", "\n", "# Turn off TF log spam.", "\n", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "set_verbosity", "(", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "ERROR", ")", "\n", "\n", "logging", ".", "basicConfig", "(", "\n", "level", "=", "logging", ".", "ERROR", ",", "\n", "handlers", "=", "[", "logging", ".", "StreamHandler", "(", ")", "]", ",", "\n", "format", "=", "\"%(name)s [%(levelname)s] - %(message)s\"", ",", "\n", ")", "\n", "\n", "left_agent", "=", "InferenceAgent", "(", ")", "\n", "left_agent", ".", "initialize", "(", ")", "\n", "left_agent", ".", "restore", "(", "model_path", ")", "\n", "\n", "battle_mgr", "=", "BattleManager", "(", "left_agent", ",", "server", ",", "seed", ")", "\n", "battle_mgr", ".", "start_new_battle", "(", ")", "\n", "\n", "curses", ".", "wrapper", "(", "partial", "(", "render_loop", ",", "battle_mgr", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.__init__": [[15, 27], ["train.Owner", "agent.SpatialBuffer"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "agent", ",", "battle_id", ",", "left_deck", ",", "right_deck", ",", "owner", ")", ":", "\n", "        ", "self", ".", "agent", "=", "agent", "\n", "self", ".", "battle_id", "=", "battle_id", "\n", "self", ".", "left_deck", "=", "left_deck", "\n", "self", ".", "right_deck", "=", "right_deck", "\n", "self", ".", "owner", "=", "Owner", "(", "owner", ")", "\n", "self", ".", "steps", "=", "0", "\n", "self", ".", "noop_spawn_expiry_time", "=", "0", "\n", "self", ".", "noop_spell_expiry_time", "=", "0", "\n", "self", ".", "spatial_buff", "=", "SpatialBuffer", "(", "agent", ".", "cfg", ".", "architecture", ".", "num_stacked_past_exp", ")", "\n", "# Last battle info.", "\n", "self", ".", "info", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.is_spawn_available": [[28, 36], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "is_spawn_available", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "info", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "return", "(", "\n", "self", ".", "info", "[", "\"left_spawn_available\"", "]", "\n", "if", "self", ".", "owner", "==", "Owner", ".", "LEFT_PLAYER", "\n", "else", "self", ".", "info", "[", "\"right_spawn_available\"", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.is_spell_available": [[38, 46], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "is_spell_available", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "info", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "return", "(", "\n", "self", ".", "info", "[", "\"left_spell_available\"", "]", "\n", "if", "self", ".", "owner", "==", "Owner", ".", "LEFT_PLAYER", "\n", "else", "self", ".", "info", "[", "\"right_spell_available\"", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.can_play": [[48, 56], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "can_play", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "info", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "return", "(", "\n", "self", ".", "info", "[", "\"left_can_play\"", "]", "\n", "if", "self", ".", "owner", "==", "Owner", ".", "LEFT_PLAYER", "\n", "else", "self", ".", "info", "[", "\"right_can_play\"", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.can_play_spell": [[58, 65], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "can_play_spell", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "info", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "return", "(", "\n", "self", ".", "info", "[", "\"battle_time\"", "]", ">=", "self", ".", "noop_spell_expiry_time", "\n", "and", "self", ".", "is_spell_available", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.can_play_spawn": [[67, 74], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "can_play_spawn", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "info", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "return", "(", "\n", "self", ".", "info", "[", "\"battle_time\"", "]", ">=", "self", ".", "noop_spawn_expiry_time", "\n", "and", "self", ".", "is_spawn_available", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.obs": [[76, 82], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "obs", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "info", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "return", "(", "\n", "self", ".", "info", "[", "\"o\"", "]", "if", "self", ".", "owner", "==", "Owner", ".", "LEFT_PLAYER", "else", "self", ".", "info", "[", "\"o_flip\"", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.step": [[84, 138], ["train.obs.battle_state_to_info", "logger.error", "logger.error", "state.InferenceState.agent.get_next_action", "state.InferenceState._update_noop_timers", "train.obs.get_client_action", "logger.debug", "logger.debug", "numpy.array", "numpy.array", "state.InferenceState.agent.cfg.spells.idx_to_spell"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.battle_state_to_info", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.get_next_action", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState._update_noop_timers", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.get_client_action", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.idx_to_spell"], ["", "def", "step", "(", "self", ",", "battle_state", ")", ":", "\n", "        ", "if", "battle_state", "[", "\"BattleState\"", "]", "!=", "\"InProgress\"", ":", "\n", "            ", "logger", ".", "error", "(", "\"Battle(id=%s) already finished\"", ",", "self", ".", "battle_id", ")", "\n", "return", "None", "\n", "\n", "", "self", ".", "steps", "+=", "1", "\n", "self", ".", "info", "=", "battle_state_to_info", "(", "\n", "battle_state", ",", "\n", "self", ".", "spatial_buff", ",", "\n", "self", ".", "left_deck", ",", "\n", "self", ".", "right_deck", ",", "\n", "self", ".", "agent", ".", "cfg", ",", "\n", ")", "\n", "if", "self", ".", "can_play", ":", "\n", "            ", "if", "self", ".", "can_play_spawn", "or", "self", ".", "can_play_spell", ":", "\n", "                ", "self", ".", "obs", "[", "\"if_spawn_spell\"", "]", "=", "(", "\n", "np", ".", "array", "(", "[", "1.0", "]", ")", "if", "self", ".", "is_spawn_available", "else", "np", ".", "array", "(", "[", "0.0", "]", ")", "\n", ")", "\n", "a", ",", "_", "=", "self", ".", "agent", ".", "get_next_action", "(", "self", ".", "obs", ")", "\n", "self", ".", "_update_noop_timers", "(", "a", ")", "\n", "client_action", "=", "get_client_action", "(", "\n", "a", ",", "battle_state", ",", "self", ".", "agent", ".", "cfg", ",", "player", "=", "self", ".", "owner", ".", "side", "\n", ")", "\n", "logger", ".", "debug", "(", "\n", "\"Play %s in Battle(id=%s, time=%s, steps=%s)\"", ",", "\n", "self", ".", "agent", ".", "cfg", ".", "spells", ".", "idx_to_spell", "(", "a", "[", "\"spell\"", "]", "[", "0", "]", ")", ",", "\n", "client_action", ",", "\n", "self", ".", "battle_id", ",", "\n", "self", ".", "info", "[", "\"battle_time\"", "]", ",", "\n", "self", ".", "steps", ",", "\n", ")", "\n", "return", "client_action", "\n", "", "else", ":", "\n", "# NOOP is in effect, or there is nowhere to cast available", "\n", "# spells (because of dynamic masks), return noop action.", "\n", "                ", "logger", ".", "debug", "(", "\n", "\"Battle(id=%s, time=%s, steps=%d) spawn expiry=%s, spell expiry=%s\"", ",", "\n", "self", ".", "battle_id", ",", "\n", "self", ".", "info", "[", "\"battle_time\"", "]", ",", "\n", "self", ".", "steps", ",", "\n", "self", ".", "noop_spawn_expiry_time", ",", "\n", "self", ".", "noop_spell_expiry_time", ",", "\n", ")", "\n", "return", "NOOP_ACTION", "\n", "", "", "else", ":", "\n", "# Nothing to do. Should not happen.", "\n", "            ", "logger", ".", "error", "(", "\n", "\"Nothing to do Battle(id=%s, time=%s, steps=%d), state:\\n%s\"", ",", "\n", "self", ".", "battle_id", ",", "\n", "self", ".", "info", "[", "\"battle_time\"", "]", ",", "\n", "self", ".", "steps", ",", "\n", "battle_state", ",", "\n", ")", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState._update_noop_timers": [[139, 160], ["state.InferenceState.agent.cfg.spells.idx_to_spell", "logger.debug", "logger.debug", "int", "int"], "methods", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.idx_to_spell"], ["", "", "def", "_update_noop_timers", "(", "self", ",", "a", ")", ":", "\n", "        ", "spell", "=", "self", ".", "agent", ".", "cfg", ".", "spells", ".", "idx_to_spell", "(", "a", "[", "\"spell\"", "]", "[", "0", "]", ")", "\n", "if", "spell", ".", "is_noop", ":", "\n", "            ", "if", "self", ".", "can_play_spawn", ":", "\n", "# Noop duration is encoded as negative spell ID.", "\n", "                ", "self", ".", "noop_spawn_expiry_time", "=", "self", ".", "info", "[", "\"battle_time\"", "]", "-", "int", "(", "spell", ")", "\n", "logger", ".", "debug", "(", "\n", "\"Started noop spawn Battle(id=%s, time=%s, steps=%d), expiry=%s\"", ",", "\n", "self", ".", "battle_id", ",", "\n", "self", ".", "info", "[", "\"battle_time\"", "]", ",", "\n", "self", ".", "steps", ",", "\n", "self", ".", "noop_spawn_expiry_time", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "noop_spell_expiry_time", "=", "self", ".", "info", "[", "\"battle_time\"", "]", "-", "int", "(", "spell", ")", "\n", "logger", ".", "debug", "(", "\n", "\"Started spell noop Battle(id=%s, time=%s, steps=%d), expiry=%s\"", ",", "\n", "self", ".", "battle_id", ",", "\n", "self", ".", "info", "[", "\"battle_time\"", "]", ",", "\n", "self", ".", "steps", ",", "\n", "self", ".", "noop_spell_expiry_time", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.simulation.pick_random_decks": [[24, 32], ["cfg.decks.get_decks", "cfg.decks.get_decks", "np_random.choice", "np_random.choice", "len", "len"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.decks.DeckRepository.get_decks", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.decks.DeckRepository.get_decks"], ["def", "pick_random_decks", "(", "cfg", ",", "np_random", ")", ":", "\n", "    ", "all_decks", "=", "cfg", ".", "decks", ".", "get_decks", "(", ")", "\n", "left_deck", "=", "all_decks", "[", "np_random", ".", "choice", "(", "len", "(", "all_decks", ")", ")", "]", "\n", "\n", "# Pick opponent decks of similar arena level.", "\n", "matching_decks", "=", "cfg", ".", "decks", ".", "get_decks", "(", "arena_level", "=", "left_deck", ".", "arena_level", ")", "\n", "right_deck", "=", "matching_decks", "[", "np_random", ".", "choice", "(", "len", "(", "matching_decks", ")", ")", "]", "\n", "return", "left_deck", ",", "right_deck", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.simulation.simulate_one_battle": [[34, 99], ["uuid.UUID", "simulation.pick_random_decks", "agent.cfg.spells.get_castle_level", "gym_heroic.client.Player", "gym_heroic.client.Player", "state.InferenceState", "client.create_new_battle", "train.obs.get_winner", "Battle", "train.obs.is_battle_done", "client.step_battle", "np_random.bytes", "train.obs.is_move_available", "state.InferenceState.step", "hashlib.sha1().hexdigest", "logger.info", "client.get_replay", "hashlib.sha1", "json.dumps().encode", "json.dumps"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.simulation.pick_random_decks", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.cfg.SpellsCfg.get_castle_level", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.create_new_battle", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.get_winner", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_battle_done", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.step_battle", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.train.obs.is_move_available", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.step", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.gym_heroic.client.HeroicClient.get_replay"], ["", "def", "simulate_one_battle", "(", "client", ",", "agent", ",", "adversary_brain", ",", "np_random", ",", "with_replay", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Simulates one battle on server, with agent as left player.\n\n    Decks are picked at random.\n\n    :param client: training service client\n    :type client: heroic_rl.gym_heroic.client.HeroicClient\n    :param agent: inference agent that will play as left player\n    :type agent: heroic_rl.train.agents.InferenceAgent\n    :param np_random: Numpy random instance, acting as source of randomness for\n                      picking decks and battle IDs\n\n    :returns: a simulated Battle\n    :rtype: Battle\n    \"\"\"", "\n", "battle_id", "=", "uuid", ".", "UUID", "(", "bytes", "=", "np_random", ".", "bytes", "(", "16", ")", ")", "\n", "left_deck", ",", "right_deck", "=", "pick_random_decks", "(", "agent", ".", "cfg", ",", "np_random", ")", "\n", "castle_level", "=", "agent", ".", "cfg", ".", "spells", ".", "get_castle_level", "(", "left_deck", ".", "arena_level", ")", "\n", "left_player", "=", "Player", "(", "castle_level", "=", "castle_level", ",", "deck", "=", "left_deck", ",", "brain", "=", "Brain", ".", "DUMMY", ",", ")", "\n", "right_player", "=", "Player", "(", "\n", "castle_level", "=", "castle_level", ",", "deck", "=", "right_deck", ",", "brain", "=", "adversary_brain", ",", "\n", ")", "\n", "\n", "state", "=", "InferenceState", "(", "agent", ",", "battle_id", ",", "left_deck", ",", "right_deck", ",", "Owner", ".", "LEFT_PLAYER", ")", "\n", "\n", "# Create a new battle on server.", "\n", "observation", "=", "client", ".", "create_new_battle", "(", "\n", "battle_id", ",", "\n", "left_player", "=", "left_player", ",", "\n", "right_player", "=", "right_player", ",", "\n", "capture_replay", "=", "with_replay", ",", "\n", ")", "\n", "\n", "# Simulate battle on server.", "\n", "while", "not", "obs", ".", "is_battle_done", "(", "observation", ")", ":", "\n", "        ", "if", "obs", ".", "is_move_available", "(", "observation", ")", "[", "0", "]", ":", "\n", "            ", "next_action", "=", "state", ".", "step", "(", "observation", ")", "\n", "state_hash", "=", "hashlib", ".", "sha1", "(", "\n", "json", ".", "dumps", "(", "observation", ")", ".", "encode", "(", "\"utf-8\"", ")", "\n", ")", ".", "hexdigest", "(", ")", "\n", "logger", ".", "info", "(", "\n", "\"Battle(id=%s, time=%s), State(hash=%s), Next action: %s\"", ",", "\n", "battle_id", ",", "\n", "observation", "[", "\"BattleTime\"", "]", ",", "\n", "state_hash", ",", "\n", "next_action", ",", "\n", ")", "\n", "", "else", ":", "\n", "# This should generally only happen on first move.", "\n", "            ", "next_action", "=", "obs", ".", "NOOP_ACTION", "\n", "", "observation", "=", "client", ".", "step_battle", "(", "battle_id", ",", "next_action", ")", "\n", "\n", "", "winner", "=", "obs", ".", "get_winner", "(", "observation", ")", "\n", "\n", "state_actions", "=", "None", "\n", "if", "with_replay", ":", "\n", "# Get replay.", "\n", "        ", "state_actions", "=", "[", "\n", "(", "obs_actions", "[", "\"Observation\"", "]", ",", "obs_actions", "[", "\"LeftAction\"", "]", "or", "obs", ".", "NOOP_ACTION", ")", "\n", "for", "obs_actions", "in", "client", ".", "get_replay", "(", "battle_id", ")", "\n", "]", "\n", "\n", "", "return", "Battle", "(", "\n", "id", "=", "battle_id", ",", "steps", "=", "state", ".", "steps", ",", "winner", "=", "winner", ",", "state_actions", "=", "state_actions", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.simulation.run": [[102, 161], ["tf.compat.v1.logging.set_verbosity", "logging.basicConfig", "agent.InferenceAgent", "agent.InferenceAgent.initialize", "agent.InferenceAgent.restore", "gym_heroic.client.HeroicClient", "gym.utils.seeding.np_random", "time.time", "range", "logger.info", "simulation.run.get_win_rate"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.initialize", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.restore"], ["", "def", "run", "(", "\n", "model_path", ":", "str", ",", "\n", "host", ":", "str", ",", "\n", "port", ":", "int", ",", "\n", "num_battles", ":", "int", ",", "\n", "seed", ":", "int", ",", "\n", "opponent_brain", ":", "Brain", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Entrypoint for CLI command.\n    \"\"\"", "\n", "import", "tensorflow", "as", "tf", "\n", "\n", "# Turn off TF log spam.", "\n", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "set_verbosity", "(", "tf", ".", "compat", ".", "v1", ".", "logging", ".", "ERROR", ")", "\n", "\n", "import", "time", "\n", "\n", "logging", ".", "basicConfig", "(", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "logging", ".", "StreamHandler", "(", ")", "]", ",", "\n", "format", "=", "\"%(name)s [%(levelname)s] - %(message)s\"", ",", "\n", ")", "\n", "\n", "left_agent", "=", "InferenceAgent", "(", ")", "\n", "left_agent", ".", "initialize", "(", ")", "\n", "left_agent", ".", "restore", "(", "model_path", ")", "\n", "\n", "client", "=", "HeroicClient", "(", "host", "=", "host", ",", "port", "=", "port", ",", "use_sessions", "=", "True", ")", "\n", "np_random", ",", "_", "=", "seeding", ".", "np_random", "(", "seed", ")", "\n", "\n", "battles_won", "=", "0", "\n", "battles_simulated", "=", "0", "\n", "\n", "def", "get_win_rate", "(", "won", ",", "total", ")", ":", "\n", "        ", "return", "won", "/", "total", "*", "100.0", "if", "total", ">", "0", "else", "0", "\n", "\n", "", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "_", "in", "range", "(", "num_battles", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "battle", "=", "simulate_one_battle", "(", "client", ",", "left_agent", ",", "opponent_brain", ",", "np_random", ")", "\n", "battles_simulated", "+=", "1", "\n", "if", "battle", ".", "winner", "==", "Owner", ".", "LEFT_PLAYER", ":", "\n", "                ", "battles_won", "+=", "1", "\n", "\n", "", "if", "battles_simulated", "%", "10", "==", "0", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "\"%d battles simulated so far (win rate: %.2f%%)...\"", ",", "\n", "battles_simulated", ",", "\n", "get_win_rate", "(", "battles_won", ",", "battles_simulated", ")", ",", "\n", ")", "\n", "", "", "except", "Exception", ":", "\n", "            ", "logger", ".", "error", "(", "\"Failed to simulate battle\"", ",", "exc_info", "=", "True", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "\n", "\"Simulated %d battles in %.3fs, win rate: %.2f%%\"", ",", "\n", "battles_simulated", ",", "\n", "time", ".", "time", "(", ")", "-", "start_time", ",", "\n", "get_win_rate", "(", "battles_won", ",", "battles_simulated", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service._create_deck": [[22, 38], ["train.Deck", "train.DeckEntry", "train.DeckEntry", "train.Spell", "int", "train.Spell", "int", "int", "int"], "function", ["None"], ["def", "_create_deck", "(", "json_deck", ")", ":", "\n", "    ", "return", "Deck", "(", "\n", "arena_level", "=", "1", ",", "\n", "minions", "=", "[", "\n", "DeckEntry", "(", "\n", "spell", "=", "Spell", "(", "int", "(", "entry", "[", "\"SpellId\"", "]", ")", ")", ",", "\n", "level_increment", "=", "int", "(", "entry", "[", "\"LevelIncrement\"", "]", ")", ",", "\n", ")", "\n", "for", "entry", "in", "json_deck", "[", "\"Minions\"", "]", "\n", "]", ",", "\n", "spells", "=", "[", "\n", "DeckEntry", "(", "\n", "spell", "=", "Spell", "(", "int", "(", "entry", "[", "\"SpellId\"", "]", ")", ")", ",", "\n", "level_increment", "=", "int", "(", "entry", "[", "\"LevelIncrement\"", "]", ")", ",", "\n", ")", "\n", "for", "entry", "in", "json_deck", "[", "\"Spells\"", "]", "\n", "]", ",", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.create": [[42, 53], ["app.route", "service._create_deck", "service._create_deck", "state.InferenceState", "app.logger.info"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service._create_deck", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service._create_deck"], ["", "@", "app", ".", "route", "(", "\"/<battle_id>\"", ",", "methods", "=", "[", "\"POST\"", "]", ")", "\n", "def", "create", "(", "battle_id", ")", ":", "\n", "    ", "if", "battle_id", "in", "states", ":", "\n", "        ", "return", "(", "\"Battle(id=%s) already exists\"", "%", "battle_id", ",", "500", ")", "\n", "", "left_deck", "=", "_create_deck", "(", "request", ".", "json", "[", "\"LeftDeck\"", "]", ")", "\n", "right_deck", "=", "_create_deck", "(", "request", ".", "json", "[", "\"RightDeck\"", "]", ")", "\n", "states", "[", "battle_id", "]", "=", "InferenceState", "(", "\n", "agent", ",", "battle_id", ",", "left_deck", ",", "right_deck", ",", "request", ".", "json", "[", "\"AgentOwner\"", "]", "\n", ")", "\n", "app", ".", "logger", ".", "info", "(", "\"Created Battle(id=%s)\"", ",", "battle_id", ")", "\n", "return", "(", "\"\"", ",", "201", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.think": [[55, 71], ["app.route", "state.step", "json.dumps", "hashlib.sha1().hexdigest", "app.logger.info", "flask.jsonify", "json.dumps", "hashlib.sha1", "json.dumps.encode"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.state.InferenceState.step"], ["", "@", "app", ".", "route", "(", "\"/<battle_id>/think\"", ",", "methods", "=", "[", "\"POST\"", "]", ")", "\n", "def", "think", "(", "battle_id", ")", ":", "\n", "    ", "if", "battle_id", "not", "in", "states", ":", "\n", "        ", "return", "(", "\"No such Battle(id=%s)\"", "%", "battle_id", ",", "404", ")", "\n", "", "state", "=", "states", "[", "battle_id", "]", "\n", "next_action", "=", "state", ".", "step", "(", "request", ".", "json", "[", "\"Observation\"", "]", ")", "\n", "state_json", "=", "json", ".", "dumps", "(", "request", ".", "json", "[", "\"Observation\"", "]", ")", "\n", "state_hash", "=", "hashlib", ".", "sha1", "(", "state_json", ".", "encode", "(", "\"utf-8\"", ")", ")", ".", "hexdigest", "(", ")", "\n", "app", ".", "logger", ".", "info", "(", "\n", "\"Battle(id=%s, time=%s), State(hash=%s), Next action: %s\"", ",", "\n", "battle_id", ",", "\n", "request", ".", "json", "[", "\"Observation\"", "]", "[", "\"BattleTime\"", "]", ",", "\n", "state_hash", ",", "\n", "json", ".", "dumps", "(", "next_action", ",", "sort_keys", "=", "True", ")", ",", "\n", ")", "\n", "return", "jsonify", "(", "next_action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.delete": [[73, 80], ["app.route", "app.logger.info"], "function", ["None"], ["", "@", "app", ".", "route", "(", "\"/<battle_id>\"", ",", "methods", "=", "[", "\"DELETE\"", "]", ")", "\n", "def", "delete", "(", "battle_id", ")", ":", "\n", "    ", "if", "battle_id", "not", "in", "states", ":", "\n", "        ", "return", "(", "\"No such Battle(id=%s)\"", "%", "battle_id", ",", "400", ")", "\n", "", "del", "states", "[", "battle_id", "]", "\n", "app", ".", "logger", ".", "info", "(", "\"Battle(id=%s) cleared\"", ",", "battle_id", ")", "\n", "return", "(", "\"\"", ",", "204", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nordeus_heroic-rl.inference.service.run": [[82, 101], ["logging.basicConfig", "logging.getLogger().setLevel", "agent.InferenceAgent", "agent.InferenceAgent.initialize", "agent.InferenceAgent.restore", "app.logger.info", "werkzeug.serving.run_simple", "logging.getLogger", "logging.StreamHandler"], "function", ["home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.initialize", "home.repos.pwc.inspect_result.Nordeus_heroic-rl.agent.agents.InferenceAgent.restore"], ["", "def", "run", "(", "model_path", ":", "str", ",", "bind_address", ":", "str", ",", "port", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Entrypoint for CLI command.\n    \"\"\"", "\n", "logging", ".", "basicConfig", "(", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "logging", ".", "StreamHandler", "(", ")", "]", ",", "\n", "format", "=", "\"%(name)s [%(levelname)s] - %(message)s\"", ",", "\n", ")", "\n", "\n", "logging", ".", "getLogger", "(", "\"werkzeug\"", ")", ".", "setLevel", "(", "logging", ".", "ERROR", ")", "\n", "\n", "global", "agent", "\n", "agent", "=", "InferenceAgent", "(", ")", "\n", "agent", ".", "initialize", "(", ")", "\n", "agent", ".", "restore", "(", "model_path", ")", "\n", "\n", "app", ".", "logger", ".", "info", "(", "\"Inference server starting at %s:%d\"", ",", "bind_address", ",", "port", ")", "\n", "run_simple", "(", "\"localhost\"", ",", "port", ",", "app", ")", "\n", "", ""]]}