{"home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.utils.metrics.batch_mae_frame_float": [[5, 11], ["numpy.float32", "numpy.float32", "numpy.sum", "numpy.mean", "numpy.absolute"], "function", ["None"], ["def", "batch_mae_frame_float", "(", "gen_frames", ",", "gt_frames", ")", ":", "\n", "# [batch, width, height]", "\n", "    ", "x", "=", "np", ".", "float32", "(", "gen_frames", ")", "\n", "y", "=", "np", ".", "float32", "(", "gt_frames", ")", "\n", "mae", "=", "np", ".", "sum", "(", "np", ".", "absolute", "(", "x", "-", "y", ")", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "np", ".", "mean", "(", "mae", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.utils.metrics.batch_psnr": [[12, 20], ["numpy.int32", "numpy.int32", "float", "numpy.mean", "numpy.size", "numpy.sum", "numpy.log10", "numpy.log10"], "function", ["None"], ["", "def", "batch_psnr", "(", "gen_frames", ",", "gt_frames", ")", ":", "\n", "# [batch, width, height]", "\n", "    ", "x", "=", "np", ".", "int32", "(", "gen_frames", ")", "\n", "y", "=", "np", ".", "int32", "(", "gt_frames", ")", "\n", "num_pixels", "=", "float", "(", "np", ".", "size", "(", "gen_frames", "[", "0", "]", ")", ")", "\n", "mse", "=", "np", ".", "sum", "(", "(", "x", "-", "y", ")", "**", "2", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "/", "num_pixels", "\n", "psnr", "=", "20", "*", "np", ".", "log10", "(", "255", ")", "-", "10", "*", "np", ".", "log10", "(", "mse", ")", "\n", "return", "np", ".", "mean", "(", "psnr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.utils.preprocess.reshape_patch": [[5, 22], ["numpy.reshape", "numpy.transpose", "numpy.reshape", "numpy.shape", "numpy.shape", "numpy.shape", "numpy.shape", "numpy.shape"], "function", ["None"], ["def", "reshape_patch", "(", "img_tensor", ",", "patch_size", ")", ":", "\n", "    ", "assert", "5", "==", "img_tensor", ".", "ndim", "\n", "batch_size", "=", "np", ".", "shape", "(", "img_tensor", ")", "[", "0", "]", "\n", "seq_length", "=", "np", ".", "shape", "(", "img_tensor", ")", "[", "1", "]", "\n", "img_height", "=", "np", ".", "shape", "(", "img_tensor", ")", "[", "2", "]", "\n", "img_width", "=", "np", ".", "shape", "(", "img_tensor", ")", "[", "3", "]", "\n", "num_channels", "=", "np", ".", "shape", "(", "img_tensor", ")", "[", "4", "]", "\n", "a", "=", "np", ".", "reshape", "(", "img_tensor", ",", "[", "batch_size", ",", "seq_length", ",", "\n", "img_height", "/", "patch_size", ",", "patch_size", ",", "\n", "img_width", "/", "patch_size", ",", "patch_size", ",", "\n", "num_channels", "]", ")", "\n", "b", "=", "np", ".", "transpose", "(", "a", ",", "[", "0", ",", "1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6", "]", ")", "\n", "patch_tensor", "=", "np", ".", "reshape", "(", "b", ",", "[", "batch_size", ",", "seq_length", ",", "\n", "img_height", "/", "patch_size", ",", "\n", "img_width", "/", "patch_size", ",", "\n", "patch_size", "*", "patch_size", "*", "num_channels", "]", ")", "\n", "return", "patch_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.utils.preprocess.reshape_patch_back": [[23, 41], ["numpy.reshape", "numpy.transpose", "numpy.reshape", "numpy.shape", "numpy.shape", "numpy.shape", "numpy.shape", "numpy.shape"], "function", ["None"], ["", "def", "reshape_patch_back", "(", "patch_tensor", ",", "patch_size", ")", ":", "\n", "    ", "assert", "5", "==", "patch_tensor", ".", "ndim", "\n", "batch_size", "=", "np", ".", "shape", "(", "patch_tensor", ")", "[", "0", "]", "\n", "seq_length", "=", "np", ".", "shape", "(", "patch_tensor", ")", "[", "1", "]", "\n", "patch_height", "=", "np", ".", "shape", "(", "patch_tensor", ")", "[", "2", "]", "\n", "patch_width", "=", "np", ".", "shape", "(", "patch_tensor", ")", "[", "3", "]", "\n", "channels", "=", "np", ".", "shape", "(", "patch_tensor", ")", "[", "4", "]", "\n", "img_channels", "=", "channels", "/", "(", "patch_size", "*", "patch_size", ")", "\n", "a", "=", "np", ".", "reshape", "(", "patch_tensor", ",", "[", "batch_size", ",", "seq_length", ",", "\n", "patch_height", ",", "patch_width", ",", "\n", "patch_size", ",", "patch_size", ",", "\n", "img_channels", "]", ")", "\n", "b", "=", "np", ".", "transpose", "(", "a", ",", "[", "0", ",", "1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6", "]", ")", "\n", "img_tensor", "=", "np", ".", "reshape", "(", "b", ",", "[", "batch_size", ",", "seq_length", ",", "\n", "patch_height", "*", "patch_size", ",", "\n", "patch_width", "*", "patch_size", ",", "\n", "img_channels", "]", ")", "\n", "return", "img_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.__init__": [[5, 21], ["len", "input_param.get", "input_param.get", "mnist.InputHandle.load"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.load"], ["    ", "def", "__init__", "(", "self", ",", "input_param", ")", ":", "\n", "        ", "self", ".", "paths", "=", "input_param", "[", "'paths'", "]", "\n", "self", ".", "num_paths", "=", "len", "(", "input_param", "[", "'paths'", "]", ")", "\n", "self", ".", "name", "=", "input_param", "[", "'name'", "]", "\n", "self", ".", "input_data_type", "=", "input_param", ".", "get", "(", "'input_data_type'", ",", "'float32'", ")", "\n", "self", ".", "output_data_type", "=", "input_param", ".", "get", "(", "'output_data_type'", ",", "'float32'", ")", "\n", "self", ".", "minibatch_size", "=", "input_param", "[", "'minibatch_size'", "]", "\n", "self", ".", "is_output_sequence", "=", "input_param", "[", "'is_output_sequence'", "]", "\n", "self", ".", "data", "=", "{", "}", "\n", "self", ".", "indices", "=", "{", "}", "\n", "self", ".", "current_position", "=", "0", "\n", "self", ".", "current_batch_size", "=", "0", "\n", "self", ".", "current_batch_indices", "=", "[", "]", "\n", "self", ".", "current_input_length", "=", "0", "\n", "self", ".", "current_output_length", "=", "0", "\n", "self", ".", "load", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.load": [[22, 39], ["numpy.load", "numpy.load.keys", "mnist.InputHandle.data.keys", "numpy.load", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "print", "print"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.load", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.load"], ["", "def", "load", "(", "self", ")", ":", "\n", "        ", "dat_1", "=", "np", ".", "load", "(", "self", ".", "paths", "[", "0", "]", ")", "\n", "for", "key", "in", "dat_1", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "data", "[", "key", "]", "=", "dat_1", "[", "key", "]", "\n", "", "if", "self", ".", "num_paths", "==", "2", ":", "\n", "            ", "dat_2", "=", "np", ".", "load", "(", "self", ".", "paths", "[", "1", "]", ")", "\n", "num_clips_1", "=", "dat_1", "[", "'clips'", "]", ".", "shape", "[", "1", "]", "\n", "dat_2", "[", "'clips'", "]", "[", ":", ",", ":", ",", "0", "]", "+=", "num_clips_1", "\n", "self", ".", "data", "[", "'clips'", "]", "=", "np", ".", "concatenate", "(", "\n", "(", "dat_1", "[", "'clips'", "]", ",", "dat_2", "[", "'clips'", "]", ")", ",", "axis", "=", "1", ")", "\n", "self", ".", "data", "[", "'input_raw_data'", "]", "=", "np", ".", "concatenate", "(", "\n", "(", "dat_1", "[", "'input_raw_data'", "]", ",", "dat_2", "[", "'input_raw_data'", "]", ")", ",", "axis", "=", "0", ")", "\n", "self", ".", "data", "[", "'output_raw_data'", "]", "=", "np", ".", "concatenate", "(", "\n", "(", "dat_1", "[", "'output_raw_data'", "]", ",", "dat_2", "[", "'output_raw_data'", "]", ")", ",", "axis", "=", "0", ")", "\n", "", "for", "key", "in", "self", ".", "data", ".", "keys", "(", ")", ":", "\n", "            ", "print", "(", "key", ")", "\n", "print", "(", "self", ".", "data", "[", "key", "]", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.total": [[40, 42], ["None"], "methods", ["None"], ["", "", "def", "total", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "data", "[", "'clips'", "]", ".", "shape", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.begin": [[43, 58], ["numpy.arange", "max", "max", "mnist.InputHandle.total", "random.shuffle", "mnist.InputHandle.total", "mnist.InputHandle.total"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.total", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.total", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.total"], ["", "def", "begin", "(", "self", ",", "do_shuffle", "=", "True", ")", ":", "\n", "        ", "self", ".", "indices", "=", "np", ".", "arange", "(", "self", ".", "total", "(", ")", ",", "dtype", "=", "\"int32\"", ")", "\n", "if", "do_shuffle", ":", "\n", "            ", "random", ".", "shuffle", "(", "self", ".", "indices", ")", "\n", "", "self", ".", "current_position", "=", "0", "\n", "if", "self", ".", "current_position", "+", "self", ".", "minibatch_size", "<=", "self", ".", "total", "(", ")", ":", "\n", "            ", "self", ".", "current_batch_size", "=", "self", ".", "minibatch_size", "\n", "", "else", ":", "\n", "            ", "self", ".", "current_batch_size", "=", "self", ".", "total", "(", ")", "-", "self", ".", "current_position", "\n", "", "self", ".", "current_batch_indices", "=", "self", ".", "indices", "[", "\n", "self", ".", "current_position", ":", "self", ".", "current_position", "+", "self", ".", "current_batch_size", "]", "\n", "self", ".", "current_input_length", "=", "max", "(", "self", ".", "data", "[", "'clips'", "]", "[", "0", ",", "ind", ",", "1", "]", "for", "ind", "\n", "in", "self", ".", "current_batch_indices", ")", "\n", "self", ".", "current_output_length", "=", "max", "(", "self", ".", "data", "[", "'clips'", "]", "[", "1", ",", "ind", ",", "1", "]", "for", "ind", "\n", "in", "self", ".", "current_batch_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.next": [[59, 73], ["mnist.InputHandle.no_batch_left", "max", "max", "mnist.InputHandle.total", "mnist.InputHandle.total"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.no_batch_left", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.total", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.total"], ["", "def", "next", "(", "self", ")", ":", "\n", "        ", "self", ".", "current_position", "+=", "self", ".", "current_batch_size", "\n", "if", "self", ".", "no_batch_left", "(", ")", ":", "\n", "            ", "return", "None", "\n", "", "if", "self", ".", "current_position", "+", "self", ".", "minibatch_size", "<=", "self", ".", "total", "(", ")", ":", "\n", "            ", "self", ".", "current_batch_size", "=", "self", ".", "minibatch_size", "\n", "", "else", ":", "\n", "            ", "self", ".", "current_batch_size", "=", "self", ".", "total", "(", ")", "-", "self", ".", "current_position", "\n", "", "self", ".", "current_batch_indices", "=", "self", ".", "indices", "[", "\n", "self", ".", "current_position", ":", "self", ".", "current_position", "+", "self", ".", "current_batch_size", "]", "\n", "self", ".", "current_input_length", "=", "max", "(", "self", ".", "data", "[", "'clips'", "]", "[", "0", ",", "ind", ",", "1", "]", "for", "ind", "\n", "in", "self", ".", "current_batch_indices", ")", "\n", "self", ".", "current_output_length", "=", "max", "(", "self", ".", "data", "[", "'clips'", "]", "[", "1", ",", "ind", ",", "1", "]", "for", "ind", "\n", "in", "self", ".", "current_batch_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.no_batch_left": [[74, 79], ["mnist.InputHandle.total"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.total"], ["", "def", "no_batch_left", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "current_position", ">=", "self", ".", "total", "(", ")", "-", "self", ".", "current_batch_size", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.input_batch": [[80, 97], ["mnist.InputHandle.no_batch_left", "numpy.zeros().astype", "numpy.transpose", "range", "input_batch.astype.astype.astype", "numpy.transpose", "numpy.zeros", "tuple"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.no_batch_left"], ["", "", "def", "input_batch", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "no_batch_left", "(", ")", ":", "\n", "            ", "return", "None", "\n", "", "input_batch", "=", "np", ".", "zeros", "(", "\n", "(", "self", ".", "current_batch_size", ",", "self", ".", "current_input_length", ")", "+", "\n", "tuple", "(", "self", ".", "data", "[", "'dims'", "]", "[", "0", "]", ")", ")", ".", "astype", "(", "self", ".", "input_data_type", ")", "\n", "input_batch", "=", "np", ".", "transpose", "(", "input_batch", ",", "(", "0", ",", "1", ",", "3", ",", "4", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "current_batch_size", ")", ":", "\n", "            ", "batch_ind", "=", "self", ".", "current_batch_indices", "[", "i", "]", "\n", "begin", "=", "self", ".", "data", "[", "'clips'", "]", "[", "0", ",", "batch_ind", ",", "0", "]", "\n", "end", "=", "self", ".", "data", "[", "'clips'", "]", "[", "0", ",", "batch_ind", ",", "0", "]", "+", "self", ".", "data", "[", "'clips'", "]", "[", "0", ",", "batch_ind", ",", "1", "]", "\n", "data_slice", "=", "self", ".", "data", "[", "'input_raw_data'", "]", "[", "begin", ":", "end", ",", ":", ",", ":", ",", ":", "]", "\n", "data_slice", "=", "np", ".", "transpose", "(", "data_slice", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "input_batch", "[", "i", ",", ":", "self", ".", "current_input_length", ",", ":", ",", ":", ",", ":", "]", "=", "data_slice", "\n", "", "input_batch", "=", "input_batch", ".", "astype", "(", "self", ".", "input_data_type", ")", "\n", "return", "input_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.output_batch": [[98, 130], ["mnist.InputHandle.no_batch_left", "range", "numpy.zeros.astype", "numpy.transpose", "numpy.zeros", "numpy.zeros", "tuple", "tuple"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.no_batch_left"], ["", "def", "output_batch", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "no_batch_left", "(", ")", ":", "\n", "            ", "return", "None", "\n", "", "if", "(", "2", ",", "3", ")", "==", "self", ".", "data", "[", "'dims'", "]", ".", "shape", ":", "\n", "            ", "raw_dat", "=", "self", ".", "data", "[", "'output_raw_data'", "]", "\n", "", "else", ":", "\n", "            ", "raw_dat", "=", "self", ".", "data", "[", "'input_raw_data'", "]", "\n", "", "if", "self", ".", "is_output_sequence", ":", "\n", "            ", "if", "(", "1", ",", "3", ")", "==", "self", ".", "data", "[", "'dims'", "]", ".", "shape", ":", "\n", "                ", "output_dim", "=", "self", ".", "data", "[", "'dims'", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "output_dim", "=", "self", ".", "data", "[", "'dims'", "]", "[", "1", "]", "\n", "", "output_batch", "=", "np", ".", "zeros", "(", "\n", "(", "self", ".", "current_batch_size", ",", "self", ".", "current_output_length", ")", "+", "\n", "tuple", "(", "output_dim", ")", ")", "\n", "", "else", ":", "\n", "            ", "output_batch", "=", "np", ".", "zeros", "(", "(", "self", ".", "current_batch_size", ",", ")", "+", "\n", "tuple", "(", "self", ".", "data", "[", "'dims'", "]", "[", "1", "]", ")", ")", "\n", "", "for", "i", "in", "range", "(", "self", ".", "current_batch_size", ")", ":", "\n", "            ", "batch_ind", "=", "self", ".", "current_batch_indices", "[", "i", "]", "\n", "begin", "=", "self", ".", "data", "[", "'clips'", "]", "[", "1", ",", "batch_ind", ",", "0", "]", "\n", "end", "=", "self", ".", "data", "[", "'clips'", "]", "[", "1", ",", "batch_ind", ",", "0", "]", "+", "self", ".", "data", "[", "'clips'", "]", "[", "1", ",", "batch_ind", ",", "1", "]", "\n", "if", "self", ".", "is_output_sequence", ":", "\n", "                ", "data_slice", "=", "raw_dat", "[", "begin", ":", "end", ",", ":", ",", ":", ",", ":", "]", "\n", "output_batch", "[", "i", ",", ":", "data_slice", ".", "shape", "[", "0", "]", ",", ":", ",", ":", ",", ":", "]", "=", "data_slice", "\n", "", "else", ":", "\n", "                ", "data_slice", "=", "raw_dat", "[", "begin", ",", ":", ",", ":", ",", ":", "]", "\n", "output_batch", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "data_slice", "\n", "", "", "output_batch", "=", "output_batch", ".", "astype", "(", "self", ".", "output_data_type", ")", "\n", "output_batch", "=", "np", ".", "transpose", "(", "output_batch", ",", "[", "0", ",", "1", ",", "3", ",", "4", ",", "2", "]", ")", "\n", "return", "output_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.get_batch": [[131, 136], ["mnist.InputHandle.input_batch", "mnist.InputHandle.output_batch", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.input_batch", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.output_batch"], ["", "def", "get_batch", "(", "self", ")", ":", "\n", "        ", "input_seq", "=", "self", ".", "input_batch", "(", ")", "\n", "output_seq", "=", "self", ".", "output_batch", "(", ")", "\n", "batch", "=", "np", ".", "concatenate", "(", "(", "input_seq", ",", "output_seq", ")", ",", "axis", "=", "1", ")", "\n", "return", "batch", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.datasets_factory.data_provider": [[7, 50], ["train_data_paths.split", "valid_data_paths.split", "ValueError", "datasets_map[].InputHandle", "datasets_map[].InputHandle.begin", "datasets_map[].InputHandle", "datasets_map[].InputHandle.begin"], "function", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.begin", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.data_provider.mnist.InputHandle.begin"], ["def", "data_provider", "(", "dataset_name", ",", "train_data_paths", ",", "valid_data_paths", ",", "batch_size", ",", "\n", "img_width", ",", "is_training", "=", "True", ")", ":", "\n", "    ", "'''Given a dataset name and returns a Dataset.\n    Args:\n        dataset_name: String, the name of the dataset.\n        train_data_paths: List, [train_data_path1, train_data_path2...]\n        valid_data_paths: List, [val_data_path1, val_data_path2...]\n        batch_size: Int\n        img_width: Int\n        is_training: Bool\n    Returns:\n        if is_training:\n            Two dataset instances for both training and evaluation.\n        else:\n            One dataset instance for evaluation.\n    Raises:\n        ValueError: If `dataset_name` is unknown.\n    '''", "\n", "\n", "if", "dataset_name", "not", "in", "datasets_map", ":", "\n", "        ", "raise", "ValueError", "(", "'Name of dataset unknown %s'", "%", "dataset_name", ")", "\n", "", "train_data_list", "=", "train_data_paths", ".", "split", "(", "','", ")", "\n", "valid_data_list", "=", "valid_data_paths", ".", "split", "(", "','", ")", "\n", "\n", "if", "dataset_name", "==", "'mnist'", ":", "\n", "        ", "test_input_param", "=", "{", "'paths'", ":", "valid_data_list", ",", "\n", "'minibatch_size'", ":", "batch_size", ",", "\n", "'input_data_type'", ":", "'float32'", ",", "\n", "'is_output_sequence'", ":", "True", ",", "\n", "'name'", ":", "dataset_name", "+", "'test iterator'", "}", "\n", "test_input_handle", "=", "datasets_map", "[", "dataset_name", "]", ".", "InputHandle", "(", "test_input_param", ")", "\n", "test_input_handle", ".", "begin", "(", "do_shuffle", "=", "False", ")", "\n", "if", "is_training", ":", "\n", "            ", "train_input_param", "=", "{", "'paths'", ":", "train_data_list", ",", "\n", "'minibatch_size'", ":", "batch_size", ",", "\n", "'input_data_type'", ":", "'float32'", ",", "\n", "'is_output_sequence'", ":", "True", ",", "\n", "'name'", ":", "dataset_name", "+", "' train iterator'", "}", "\n", "train_input_handle", "=", "datasets_map", "[", "dataset_name", "]", ".", "InputHandle", "(", "train_input_param", ")", "\n", "train_input_handle", ".", "begin", "(", "do_shuffle", "=", "True", ")", "\n", "return", "train_input_handle", ",", "test_input_handle", "\n", "", "else", ":", "\n", "            ", "return", "test_input_handle", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.TensorLayerNorm.tensor_layer_norm": [[5, 19], ["x.get_shape", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.batch_normalization", "tensorflow.nn.moments", "tensorflow.nn.moments", "ValueError", "tensorflow.zeros", "tensorflow.ones"], "function", ["None"], ["def", "tensor_layer_norm", "(", "x", ",", "state_name", ")", ":", "\n", "    ", "x_shape", "=", "x", ".", "get_shape", "(", ")", "\n", "dims", "=", "x_shape", ".", "ndims", "\n", "params_shape", "=", "x_shape", "[", "-", "1", ":", "]", "\n", "if", "dims", "==", "4", ":", "\n", "        ", "m", ",", "v", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "[", "1", ",", "2", ",", "3", "]", ",", "keep_dims", "=", "True", ")", "\n", "", "elif", "dims", "==", "5", ":", "\n", "        ", "m", ",", "v", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "[", "1", ",", "2", ",", "3", ",", "4", "]", ",", "keep_dims", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'input tensor for layer normalization must be rank 4 or 5.'", ")", "\n", "", "b", "=", "tf", ".", "get_variable", "(", "state_name", "+", "'b'", ",", "initializer", "=", "tf", ".", "zeros", "(", "params_shape", ")", ")", "\n", "s", "=", "tf", ".", "get_variable", "(", "state_name", "+", "'s'", ",", "initializer", "=", "tf", ".", "ones", "(", "params_shape", ")", ")", "\n", "x_tln", "=", "tf", ".", "nn", ".", "batch_normalization", "(", "x", ",", "m", ",", "v", ",", "b", ",", "s", ",", "EPSILON", ")", "\n", "return", "x_tln", "\n", "", ""]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.CausalLSTMCell.CausalLSTMCell.__init__": [[7, 29], ["tensorflow.random_uniform_initializer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "layer_name", ",", "filter_size", ",", "num_hidden_in", ",", "num_hidden_out", ",", "\n", "seq_shape", ",", "forget_bias", "=", "1.0", ",", "tln", "=", "False", ",", "initializer", "=", "0.001", ")", ":", "\n", "        ", "\"\"\"Initialize the Causal LSTM cell.\n        Args:\n            layer_name: layer names for different lstm layers.\n            filter_size: int tuple thats the height and width of the filter.\n            num_hidden_in: number of units for input tensor.\n            num_hidden_out: number of units for output tensor.\n            seq_shape: shape of a sequence.\n            forget_bias: float, The bias added to forget gates.\n            tln: whether to apply tensor layer normalization\n        \"\"\"", "\n", "self", ".", "layer_name", "=", "layer_name", "\n", "self", ".", "filter_size", "=", "filter_size", "\n", "self", ".", "num_hidden_in", "=", "num_hidden_in", "\n", "self", ".", "num_hidden", "=", "num_hidden_out", "\n", "self", ".", "batch", "=", "seq_shape", "[", "0", "]", "\n", "self", ".", "height", "=", "seq_shape", "[", "2", "]", "\n", "self", ".", "width", "=", "seq_shape", "[", "3", "]", "\n", "self", ".", "layer_norm", "=", "tln", "\n", "self", ".", "_forget_bias", "=", "forget_bias", "\n", "self", ".", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "-", "initializer", ",", "initializer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.CausalLSTMCell.CausalLSTMCell.init_state": [[30, 33], ["tensorflow.zeros"], "methods", ["None"], ["", "def", "init_state", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "zeros", "(", "[", "self", ".", "batch", ",", "self", ".", "height", ",", "self", ".", "width", ",", "self", ".", "num_hidden", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.CausalLSTMCell.CausalLSTMCell.__call__": [[34, 135], ["tensorflow.zeros", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.layers.conv2d", "tensorflow.split", "tensorflow.layers.conv2d", "tensorflow.concat", "tensorflow.layers.conv2d", "layers.TensorLayerNorm.tensor_layer_norm", "layers.TensorLayerNorm.tensor_layer_norm", "layers.TensorLayerNorm.tensor_layer_norm", "tensorflow.sigmoid", "tensorflow.sigmoid", "tensorflow.tanh", "tensorflow.layers.conv2d", "tensorflow.split", "tensorflow.sigmoid", "tensorflow.sigmoid", "tensorflow.tanh", "layers.TensorLayerNorm.tensor_layer_norm", "tensorflow.sigmoid", "tensorflow.sigmoid", "tensorflow.tanh", "tensorflow.sigmoid", "tensorflow.sigmoid", "tensorflow.tanh", "layers.TensorLayerNorm.tensor_layer_norm", "tensorflow.tanh", "tensorflow.tanh", "tensorflow.tanh", "layers.TensorLayerNorm.tensor_layer_norm", "tensorflow.tanh"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.TensorLayerNorm.tensor_layer_norm", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.TensorLayerNorm.tensor_layer_norm", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.TensorLayerNorm.tensor_layer_norm", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.TensorLayerNorm.tensor_layer_norm", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.TensorLayerNorm.tensor_layer_norm", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.TensorLayerNorm.tensor_layer_norm"], ["", "def", "__call__", "(", "self", ",", "x", ",", "h", ",", "c", ",", "m", ")", ":", "\n", "        ", "if", "h", "is", "None", ":", "\n", "            ", "h", "=", "tf", ".", "zeros", "(", "[", "self", ".", "batch", ",", "self", ".", "height", ",", "self", ".", "width", ",", "\n", "self", ".", "num_hidden", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "", "if", "c", "is", "None", ":", "\n", "            ", "c", "=", "tf", ".", "zeros", "(", "[", "self", ".", "batch", ",", "self", ".", "height", ",", "self", ".", "width", ",", "\n", "self", ".", "num_hidden", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "", "if", "m", "is", "None", ":", "\n", "            ", "m", "=", "tf", ".", "zeros", "(", "[", "self", ".", "batch", ",", "self", ".", "height", ",", "self", ".", "width", ",", "\n", "self", ".", "num_hidden_in", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "self", ".", "layer_name", ")", ":", "\n", "            ", "h_cc", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "h", ",", "self", ".", "num_hidden", "*", "4", ",", "\n", "self", ".", "filter_size", ",", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "self", ".", "initializer", ",", "\n", "name", "=", "'temporal_state_transition'", ")", "\n", "c_cc", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "c", ",", "self", ".", "num_hidden", "*", "3", ",", "\n", "self", ".", "filter_size", ",", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "self", ".", "initializer", ",", "\n", "name", "=", "'temporal_memory_transition'", ")", "\n", "m_cc", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "m", ",", "self", ".", "num_hidden", "*", "3", ",", "\n", "self", ".", "filter_size", ",", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "self", ".", "initializer", ",", "\n", "name", "=", "'spatial_memory_transition'", ")", "\n", "if", "self", ".", "layer_norm", ":", "\n", "                ", "h_cc", "=", "tensor_layer_norm", "(", "h_cc", ",", "'h2c'", ")", "\n", "c_cc", "=", "tensor_layer_norm", "(", "c_cc", ",", "'c2c'", ")", "\n", "m_cc", "=", "tensor_layer_norm", "(", "m_cc", ",", "'m2m'", ")", "\n", "\n", "", "i_h", ",", "g_h", ",", "f_h", ",", "o_h", "=", "tf", ".", "split", "(", "h_cc", ",", "4", ",", "3", ")", "\n", "i_c", ",", "g_c", ",", "f_c", "=", "tf", ".", "split", "(", "c_cc", ",", "3", ",", "3", ")", "\n", "i_m", ",", "f_m", ",", "m_m", "=", "tf", ".", "split", "(", "m_cc", ",", "3", ",", "3", ")", "\n", "\n", "if", "x", "is", "None", ":", "\n", "                ", "i", "=", "tf", ".", "sigmoid", "(", "i_h", "+", "i_c", ")", "\n", "f", "=", "tf", ".", "sigmoid", "(", "f_h", "+", "f_c", "+", "self", ".", "_forget_bias", ")", "\n", "g", "=", "tf", ".", "tanh", "(", "g_h", "+", "g_c", ")", "\n", "", "else", ":", "\n", "                ", "x_cc", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "self", ".", "num_hidden", "*", "7", ",", "\n", "self", ".", "filter_size", ",", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "self", ".", "initializer", ",", "\n", "name", "=", "'input_to_state'", ")", "\n", "if", "self", ".", "layer_norm", ":", "\n", "                    ", "x_cc", "=", "tensor_layer_norm", "(", "x_cc", ",", "'x2c'", ")", "\n", "\n", "", "i_x", ",", "g_x", ",", "f_x", ",", "o_x", ",", "i_x_", ",", "g_x_", ",", "f_x_", "=", "tf", ".", "split", "(", "x_cc", ",", "7", ",", "3", ")", "\n", "\n", "i", "=", "tf", ".", "sigmoid", "(", "i_x", "+", "i_h", "+", "i_c", ")", "\n", "f", "=", "tf", ".", "sigmoid", "(", "f_x", "+", "f_h", "+", "f_c", "+", "self", ".", "_forget_bias", ")", "\n", "g", "=", "tf", ".", "tanh", "(", "g_x", "+", "g_h", "+", "g_c", ")", "\n", "\n", "", "c_new", "=", "f", "*", "c", "+", "i", "*", "g", "\n", "\n", "c2m", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "c_new", ",", "self", ".", "num_hidden", "*", "4", ",", "\n", "self", ".", "filter_size", ",", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "self", ".", "initializer", ",", "\n", "name", "=", "'c2m'", ")", "\n", "if", "self", ".", "layer_norm", ":", "\n", "                ", "c2m", "=", "tensor_layer_norm", "(", "c2m", ",", "'c2m'", ")", "\n", "\n", "", "i_c", ",", "g_c", ",", "f_c", ",", "o_c", "=", "tf", ".", "split", "(", "c2m", ",", "4", ",", "3", ")", "\n", "\n", "if", "x", "is", "None", ":", "\n", "                ", "ii", "=", "tf", ".", "sigmoid", "(", "i_c", "+", "i_m", ")", "\n", "ff", "=", "tf", ".", "sigmoid", "(", "f_c", "+", "f_m", "+", "self", ".", "_forget_bias", ")", "\n", "gg", "=", "tf", ".", "tanh", "(", "g_c", ")", "\n", "", "else", ":", "\n", "                ", "ii", "=", "tf", ".", "sigmoid", "(", "i_c", "+", "i_x_", "+", "i_m", ")", "\n", "ff", "=", "tf", ".", "sigmoid", "(", "f_c", "+", "f_x_", "+", "f_m", "+", "self", ".", "_forget_bias", ")", "\n", "gg", "=", "tf", ".", "tanh", "(", "g_c", "+", "g_x_", ")", "\n", "\n", "", "m_new", "=", "ff", "*", "tf", ".", "tanh", "(", "m_m", ")", "+", "ii", "*", "gg", "\n", "\n", "o_m", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "m_new", ",", "self", ".", "num_hidden", ",", "\n", "self", ".", "filter_size", ",", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "self", ".", "initializer", ",", "\n", "name", "=", "'m_to_o'", ")", "\n", "if", "self", ".", "layer_norm", ":", "\n", "                ", "o_m", "=", "tensor_layer_norm", "(", "o_m", ",", "'m2o'", ")", "\n", "\n", "", "if", "x", "is", "None", ":", "\n", "                ", "o", "=", "tf", ".", "tanh", "(", "o_h", "+", "o_c", "+", "o_m", ")", "\n", "", "else", ":", "\n", "                ", "o", "=", "tf", ".", "tanh", "(", "o_x", "+", "o_h", "+", "o_c", "+", "o_m", ")", "\n", "\n", "", "cell", "=", "tf", ".", "concat", "(", "[", "c_new", ",", "m_new", "]", ",", "-", "1", ")", "\n", "cell", "=", "tf", ".", "layers", ".", "conv2d", "(", "cell", ",", "self", ".", "num_hidden", ",", "1", ",", "1", ",", "\n", "padding", "=", "'same'", ",", "name", "=", "'memory_reduce'", ")", "\n", "\n", "h_new", "=", "o", "*", "tf", ".", "tanh", "(", "cell", ")", "\n", "\n", "return", "h_new", ",", "c_new", ",", "m_new", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.GradientHighwayUnit.GHU.__init__": [[7, 19], ["tensorflow.random_uniform_initializer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "layer_name", ",", "filter_size", ",", "num_features", ",", "tln", "=", "False", ",", "\n", "initializer", "=", "0.001", ")", ":", "\n", "        ", "\"\"\"Initialize the Gradient Highway Unit.\n        \"\"\"", "\n", "self", ".", "layer_name", "=", "layer_name", "\n", "self", ".", "filter_size", "=", "filter_size", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "layer_norm", "=", "tln", "\n", "if", "initializer", "==", "-", "1", ":", "\n", "            ", "self", ".", "initializer", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "-", "initializer", ",", "initializer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.GradientHighwayUnit.GHU.init_state": [[20, 29], ["tensorflow.zeros", "inputs.get_shape", "ValueError", "inputs.get_shape", "inputs.get_shape", "inputs.get_shape"], "methods", ["None"], ["", "", "def", "init_state", "(", "self", ",", "inputs", ",", "num_features", ")", ":", "\n", "        ", "dims", "=", "inputs", ".", "get_shape", "(", ")", ".", "ndims", "\n", "if", "dims", "==", "4", ":", "\n", "            ", "batch", "=", "inputs", ".", "get_shape", "(", ")", "[", "0", "]", "\n", "height", "=", "inputs", ".", "get_shape", "(", ")", "[", "1", "]", "\n", "width", "=", "inputs", ".", "get_shape", "(", ")", "[", "2", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'input tensor should be rank 4.'", ")", "\n", "", "return", "tf", ".", "zeros", "(", "[", "batch", ",", "height", ",", "width", ",", "num_features", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.GradientHighwayUnit.GHU.__call__": [[30, 56], ["GradientHighwayUnit.GHU.init_state", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.layers.conv2d", "tensorflow.add", "tensorflow.split", "tensorflow.nn.tanh", "tensorflow.nn.sigmoid", "layers.TensorLayerNorm.tensor_layer_norm", "layers.TensorLayerNorm.tensor_layer_norm"], "methods", ["home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.GradientHighwayUnit.GHU.init_state", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.TensorLayerNorm.tensor_layer_norm", "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.layers.TensorLayerNorm.tensor_layer_norm"], ["", "def", "__call__", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "        ", "if", "z", "is", "None", ":", "\n", "            ", "z", "=", "self", ".", "init_state", "(", "x", ",", "self", ".", "num_features", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "self", ".", "layer_name", ")", ":", "\n", "            ", "z_concat", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "z", ",", "self", ".", "num_features", "*", "2", ",", "\n", "self", ".", "filter_size", ",", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "self", ".", "initializer", ",", "\n", "name", "=", "'state_to_state'", ")", "\n", "if", "self", ".", "layer_norm", ":", "\n", "                ", "z_concat", "=", "tensor_layer_norm", "(", "z_concat", ",", "'state_to_state'", ")", "\n", "\n", "", "x_concat", "=", "tf", ".", "layers", ".", "conv2d", "(", "\n", "x", ",", "self", ".", "num_features", "*", "2", ",", "\n", "self", ".", "filter_size", ",", "1", ",", "padding", "=", "'same'", ",", "\n", "kernel_initializer", "=", "self", ".", "initializer", ",", "\n", "name", "=", "'input_to_state'", ")", "\n", "if", "self", ".", "layer_norm", ":", "\n", "                ", "x_concat", "=", "tensor_layer_norm", "(", "x_concat", ",", "'input_to_state'", ")", "\n", "\n", "", "gates", "=", "tf", ".", "add", "(", "x_concat", ",", "z_concat", ")", "\n", "p", ",", "u", "=", "tf", ".", "split", "(", "gates", ",", "2", ",", "3", ")", "\n", "p", "=", "tf", ".", "nn", ".", "tanh", "(", "p", ")", "\n", "u", "=", "tf", ".", "nn", ".", "sigmoid", "(", "u", ")", "\n", "z_new", "=", "u", "*", "p", "+", "(", "1", "-", "u", ")", "*", "z", "\n", "return", "z_new", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.nets.predrnn_pp.rnn": [[7, 66], ["images.get_shape().as_list", "xrange", "layers.GradientHighwayUnit.GHU", "xrange", "tensorflow.stack", "tensorflow.transpose", "tensorflow.nn.l2_loss", "layers.CausalLSTMCell.CausalLSTMCell", "lstm.append", "cell.append", "hidden.append", "bool", "images.get_shape", "tensorflow.variable_scope", "layers.GradientHighwayUnit.GHU", "xrange", "tensorflow.layers.conv2d", "tf.transpose.append", "str"], "function", ["None"], ["def", "rnn", "(", "images", ",", "mask_true", ",", "num_layers", ",", "num_hidden", ",", "filter_size", ",", "stride", "=", "1", ",", "\n", "seq_length", "=", "20", ",", "input_length", "=", "10", ",", "tln", "=", "True", ")", ":", "\n", "\n", "    ", "gen_images", "=", "[", "]", "\n", "lstm", "=", "[", "]", "\n", "cell", "=", "[", "]", "\n", "hidden", "=", "[", "]", "\n", "shape", "=", "images", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "output_channels", "=", "shape", "[", "-", "1", "]", "\n", "\n", "for", "i", "in", "xrange", "(", "num_layers", ")", ":", "\n", "        ", "if", "i", "==", "0", ":", "\n", "            ", "num_hidden_in", "=", "num_hidden", "[", "num_layers", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "num_hidden_in", "=", "num_hidden", "[", "i", "-", "1", "]", "\n", "", "new_cell", "=", "cslstm", "(", "'lstm_'", "+", "str", "(", "i", "+", "1", ")", ",", "\n", "filter_size", ",", "\n", "num_hidden_in", ",", "\n", "num_hidden", "[", "i", "]", ",", "\n", "shape", ",", "\n", "tln", "=", "tln", ")", "\n", "lstm", ".", "append", "(", "new_cell", ")", "\n", "cell", ".", "append", "(", "None", ")", "\n", "hidden", ".", "append", "(", "None", ")", "\n", "\n", "", "gradient_highway", "=", "ghu", "(", "'highway'", ",", "filter_size", ",", "num_hidden", "[", "0", "]", ",", "tln", "=", "tln", ")", "\n", "\n", "mem", "=", "None", "\n", "z_t", "=", "None", "\n", "\n", "for", "t", "in", "xrange", "(", "seq_length", "-", "1", ")", ":", "\n", "        ", "reuse", "=", "bool", "(", "gen_images", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'predrnn_pp'", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "if", "t", "<", "input_length", ":", "\n", "                ", "inputs", "=", "images", "[", ":", ",", "t", "]", "\n", "", "else", ":", "\n", "                ", "inputs", "=", "mask_true", "[", ":", ",", "t", "-", "10", "]", "*", "images", "[", ":", ",", "t", "]", "+", "(", "1", "-", "mask_true", "[", ":", ",", "t", "-", "10", "]", ")", "*", "x_gen", "\n", "\n", "", "hidden", "[", "0", "]", ",", "cell", "[", "0", "]", ",", "mem", "=", "lstm", "[", "0", "]", "(", "inputs", ",", "hidden", "[", "0", "]", ",", "cell", "[", "0", "]", ",", "mem", ")", "\n", "z_t", "=", "gradient_highway", "(", "hidden", "[", "0", "]", ",", "z_t", ")", "\n", "hidden", "[", "1", "]", ",", "cell", "[", "1", "]", ",", "mem", "=", "lstm", "[", "1", "]", "(", "z_t", ",", "hidden", "[", "1", "]", ",", "cell", "[", "1", "]", ",", "mem", ")", "\n", "\n", "for", "i", "in", "xrange", "(", "2", ",", "num_layers", ")", ":", "\n", "                ", "hidden", "[", "i", "]", ",", "cell", "[", "i", "]", ",", "mem", "=", "lstm", "[", "i", "]", "(", "hidden", "[", "i", "-", "1", "]", ",", "hidden", "[", "i", "]", ",", "cell", "[", "i", "]", ",", "mem", ")", "\n", "\n", "", "x_gen", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", "=", "hidden", "[", "num_layers", "-", "1", "]", ",", "\n", "filters", "=", "output_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "strides", "=", "1", ",", "\n", "padding", "=", "'same'", ",", "\n", "name", "=", "\"back_to_pixel\"", ")", "\n", "gen_images", ".", "append", "(", "x_gen", ")", "\n", "\n", "", "", "gen_images", "=", "tf", ".", "stack", "(", "gen_images", ")", "\n", "# [batch_size, seq_length, height, width, channels]", "\n", "gen_images", "=", "tf", ".", "transpose", "(", "gen_images", ",", "[", "1", ",", "0", ",", "2", ",", "3", ",", "4", "]", ")", "\n", "loss", "=", "tf", ".", "nn", ".", "l2_loss", "(", "gen_images", "-", "images", "[", ":", ",", "1", ":", "]", ")", "\n", "#loss += tf.reduce_sum(tf.abs(gen_images - images[:,1:]))", "\n", "return", "[", "gen_images", ",", "loss", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Yunbo426_predrnn-pp.nets.models_factory.construct_model": [[8, 31], ["func", "ValueError"], "function", ["None"], ["def", "construct_model", "(", "name", ",", "images", ",", "mask_true", ",", "num_layers", ",", "num_hidden", ",", "\n", "filter_size", ",", "stride", ",", "seq_length", ",", "input_length", ",", "tln", ")", ":", "\n", "    ", "'''Returns a sequence of generated frames\n    Args:\n        name: [predrnn_pp]\n        mask_true: for schedualed sampling.\n        num_hidden: number of units in a lstm layer.\n        filter_size: for convolutions inside lstm.\n        stride: for convolutions inside lstm.\n        seq_length: including ins and outs.\n        input_length: for inputs.\n        tln: whether to apply tensor layer normalization.\n    Returns:\n        gen_images: a seq of frames.\n        loss: [l2 / l1+l2].\n    Raises:\n        ValueError: If network `name` is not recognized.\n    '''", "\n", "if", "name", "not", "in", "networks_map", ":", "\n", "        ", "raise", "ValueError", "(", "'Name of network unknown %s'", "%", "name", ")", "\n", "", "func", "=", "networks_map", "[", "name", "]", "\n", "return", "func", "(", "images", ",", "mask_true", ",", "num_layers", ",", "num_hidden", ",", "filter_size", ",", "\n", "stride", ",", "seq_length", ",", "input_length", ",", "tln", ")", "\n", "", ""]]}