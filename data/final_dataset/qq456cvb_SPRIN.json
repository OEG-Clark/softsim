{"home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.train.worker_init_fn": [[17, 19], ["numpy.random.seed", "torch.initial_seed", "torch.initial_seed"], "function", ["None"], ["def", "worker_init_fn", "(", "worker_id", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "torch", ".", "initial_seed", "(", ")", "&", "0xFFFFFFFF", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.train.run_epoch": [[21, 69], ["net.train", "dataset.ShapeNetPartDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "collections.defaultdict", "logger.info", "enumerate", "collections.defaultdict.keys", "contextlib.suppress", "torch.no_grad", "torch.no_grad", "net", "torch.cross_entropy", "F.cross_entropy.item", "zip", "numpy.mean", "numpy.mean", "numpy.mean", "logger.info", "logger.info", "dataset.BalancedSampler", "multiprocessing.cpu_count", "opt.zero_grad", "torch.eye", "torch.eye", "pcs.cuda().float", "onehot_idxs.cuda().float", "segs_centered.cuda().long", "net.detach().cpu().numpy", "segs_centered.cpu().numpy", "pred.argmax.argmax", "numpy.mean", "range", "iou.append", "accs.append", "shape_ious[].append", "list", "F.cross_entropy.backward", "opt.step", "len", "len", "numpy.mean", "np.mean.item", "map", "numpy.mean", "pcs.cuda", "onehot_idxs.cuda", "segs_centered.cuda", "net.detach().cpu", "segs_centered.cpu", "seg[].item", "numpy.sum", "numpy.sum", "numpy.sum", "collections.defaultdict.values", "net.detach"], "function", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.AdamW.step"], ["", "def", "run_epoch", "(", "net", ",", "data", ",", "segs_centered", ",", "segs", ",", "opt", "=", "None", ",", "epoch", "=", "1", ",", "ds", "=", "1024", ",", "batchsize", "=", "16", ",", "train", "=", "True", ",", "rand_rot", "=", "False", ")", ":", "\n", "    ", "net", ".", "train", "(", "train", ")", "\n", "ds", "=", "ShapeNetPartDataset", "(", "data", ",", "segs_centered", ",", "segs", ",", "ds", ",", "rand_rot", ",", "aug", "=", "train", ")", "\n", "df", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "ds", ",", "batch_size", "=", "batchsize", ",", "shuffle", "=", "False", ",", "sampler", "=", "(", "BalancedSampler", "(", "ds", ")", "if", "train", "else", "None", ")", ",", "num_workers", "=", "cpu_count", "(", ")", "//", "2", ",", "worker_init_fn", "=", "worker_init_fn", ")", "\n", "running_loss", "=", "0.0", "\n", "running_acc", "=", "0.0", "\n", "running_iou", "=", "0.0", "\n", "shape_ious", "=", "collections", ".", "defaultdict", "(", "list", ")", "\n", "n", "=", "0", "\n", "logger", ".", "info", "(", "'Train'", "if", "train", "else", "'Test'", ")", "\n", "with", "contextlib", ".", "suppress", "(", ")", "if", "train", "else", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "pcs", ",", "segs_centered", ",", "segs", ",", "fps_idxs", ",", "cls_idxs", ")", "in", "enumerate", "(", "df", ")", ":", "\n", "            ", "if", "train", ":", "\n", "                ", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "", "onehot_idxs", "=", "torch", ".", "eye", "(", "16", ")", "[", "cls_idxs", "]", "\n", "pred_batch", "=", "net", "(", "pcs", ".", "cuda", "(", ")", ".", "float", "(", ")", ",", "fps_idxs", ",", "onehot_idxs", ".", "cuda", "(", ")", ".", "float", "(", ")", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "pred_batch", ",", "segs_centered", ".", "cuda", "(", ")", ".", "long", "(", ")", ")", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "iou", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "for", "pred", ",", "seg_centered", ",", "seg", "in", "zip", "(", "pred_batch", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "segs_centered", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "segs", ")", ":", "\n", "                ", "cat", "=", "seg_label_to_cat", "[", "seg", "[", "0", "]", ".", "item", "(", ")", "]", "\n", "pred", "=", "pred", ".", "argmax", "(", "0", ")", "\n", "acc", "=", "np", ".", "mean", "(", "(", "pred", "==", "seg_centered", ")", ".", "astype", "(", "np", ".", "float", ")", ")", "\n", "part_ious", "=", "[", "0", "]", "*", "len", "(", "seg_classes", "[", "cat", "]", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "seg_classes", "[", "cat", "]", ")", ")", ":", "\n", "                    ", "if", "np", ".", "sum", "(", "(", "pred", "==", "j", ")", "|", "(", "seg_centered", "==", "j", ")", ")", "==", "0", ":", "\n", "                        ", "part_ious", "[", "j", "]", "=", "1", "\n", "continue", "\n", "", "part_ious", "[", "j", "]", "=", "np", ".", "sum", "(", "(", "pred", "==", "j", ")", "&", "(", "seg_centered", "==", "j", ")", ")", "/", "np", ".", "sum", "(", "(", "pred", "==", "j", ")", "|", "(", "seg_centered", "==", "j", ")", ")", "\n", "", "iou", ".", "append", "(", "np", ".", "mean", "(", "part_ious", ")", ")", "\n", "accs", ".", "append", "(", "acc", ".", "item", "(", ")", ")", "\n", "shape_ious", "[", "cat", "]", ".", "append", "(", "iou", "[", "-", "1", "]", ")", "\n", "", "running_iou", "+=", "np", ".", "mean", "(", "iou", ")", "\n", "running_acc", "+=", "np", ".", "mean", "(", "accs", ")", "\n", "cmiou", "=", "np", ".", "mean", "(", "list", "(", "map", "(", "np", ".", "mean", ",", "shape_ious", ".", "values", "(", ")", ")", ")", ")", "\n", "n", "+=", "1", "\n", "if", "train", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "", "logger", ".", "info", "(", "\"[%s%d, %d] Loss: %.4f, Acc: %.4f, mIoU: %.4f, cmIoU: %.4f \"", "\n", "%", "(", "\"VT\"", "[", "train", "]", ",", "epoch", ",", "n", ",", "\n", "running_loss", "/", "n", ",", "running_acc", "/", "n", ",", "running_iou", "/", "n", ",", "cmiou", ")", ")", "\n", "\n", "\n", "", "for", "cat", "in", "shape_ious", ".", "keys", "(", ")", ":", "\n", "            ", "logger", ".", "info", "(", "'{} IoU: {:.4f}'", ".", "format", "(", "cat", ",", "np", ".", "mean", "(", "shape_ious", "[", "cat", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.train.main": [[70, 88], ["hydra.main", "model.SPRINSeg().cuda", "radam.RAdam", "dataset.read_data", "dataset.read_data", "print", "print", "range", "len", "SPRINSeg().cuda.load_state_dict", "SPRINSeg().cuda.parameters", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "len", "len", "train.run_epoch", "model.SPRINSeg", "torch.load", "torch.load", "train.run_epoch", "torch.save", "torch.save", "hydra.utils.to_absolute_path", "SPRINSeg().cuda.state_dict"], "function", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.test.main", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.read_data", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.read_data", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.train.run_epoch", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.train.run_epoch"], ["", "", "", "@", "hydra", ".", "main", "(", "config_path", "=", "'config'", ",", "config_name", "=", "'shapenet'", ")", "\n", "def", "main", "(", "cfg", ")", ":", "\n", "    ", "net", "=", "SPRINSeg", "(", "6", ",", "cfg", ".", "fps_n", ")", ".", "cuda", "(", ")", "\n", "if", "len", "(", "cfg", ".", "resume_path", ")", ">", "0", ":", "\n", "        ", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "hydra", ".", "utils", ".", "to_absolute_path", "(", "cfg", ".", "resume_path", ")", ")", ")", "\n", "", "opt", "=", "radam", ".", "RAdam", "(", "net", ".", "parameters", "(", ")", ",", "cfg", ".", "lr", ",", "weight_decay", "=", "cfg", ".", "weight_decay", ")", "\n", "pcs_train", ",", "segs_centered_train", ",", "segs_train", "=", "read_data", "(", "hydra", ".", "utils", ".", "to_absolute_path", "(", "'shapenet_part_seg_hdf5_data'", ")", ",", "r'ply_data_(train|val).*\\.h5'", ")", "\n", "pcs_test", ",", "segs_centered_test", ",", "segs_test", "=", "read_data", "(", "hydra", ".", "utils", ".", "to_absolute_path", "(", "'shapenet_part_seg_hdf5_data'", ")", ",", "r'ply_data_test.*\\.h5'", ")", "\n", "\n", "print", "(", "len", "(", "pcs_train", ")", ")", "\n", "print", "(", "len", "(", "pcs_test", ")", ")", "\n", "\n", "for", "e", "in", "range", "(", "1", ",", "cfg", ".", "max_epoch", ")", ":", "\n", "        ", "run_epoch", "(", "net", ",", "pcs_train", ",", "segs_centered_train", ",", "segs_train", ",", "opt", ",", "e", ",", "ds", "=", "cfg", ".", "npoints", ",", "batchsize", "=", "cfg", ".", "batch_size", ")", "\n", "\n", "if", "e", "%", "10", "==", "0", ":", "\n", "            ", "run_epoch", "(", "net", ",", "pcs_test", ",", "segs_centered_test", ",", "segs_test", ",", "opt", ",", "e", ",", "train", "=", "False", ",", "ds", "=", "cfg", ".", "npoints", ",", "batchsize", "=", "cfg", ".", "batch_size", ",", "rand_rot", "=", "True", ")", "\n", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "'epoch{}.pt'", ".", "format", "(", "e", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.ShapeNetPartDataset.__init__": [[98, 108], ["super().__init__", "list", "seg_classes.keys", "range", "len"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "pids", ",", "origin_pids", ",", "ds", ",", "rand_rot", ",", "aug", "=", "False", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "pids", "=", "pids", "\n", "self", ".", "origin_pids", "=", "origin_pids", "\n", "self", ".", "ds", "=", "ds", "\n", "self", ".", "rand_rot", "=", "rand_rot", "\n", "self", ".", "aug", "=", "aug", "\n", "self", ".", "valid_names", "=", "list", "(", "seg_classes", ".", "keys", "(", ")", ")", "\n", "self", ".", "valid_idxs", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", "if", "seg_label_to_cat", "[", "self", ".", "origin_pids", "[", "i", "]", "[", "0", "]", "]", "in", "self", ".", "valid_names", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.ShapeNetPartDataset.__getitem__": [[109, 132], ["numpy.arange", "numpy.random.shuffle", "dataset.fps", "class_names.index", "dataset.jitter_point_cloud", "numpy.concatenate", "scipy.stats.special_ortho_group.rvs", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.fps", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.jitter_point_cloud"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx", "=", "self", ".", "valid_idxs", "[", "idx", "]", "\n", "data", "=", "self", ".", "data", "[", "idx", "]", "\n", "pids", "=", "self", ".", "pids", "[", "idx", "]", "\n", "origin_pids", "=", "self", ".", "origin_pids", "[", "idx", "]", "\n", "\n", "if", "self", ".", "aug", ":", "\n", "            ", "data", "=", "jitter_point_cloud", "(", "data", "[", "None", "]", ")", "[", "0", "]", "\n", "\n", "", "npoints", "=", "data", ".", "shape", "[", "0", "]", "\n", "if", "self", ".", "ds", "is", "not", "None", ":", "\n", "            ", "idx", "=", "np", ".", "arange", "(", "npoints", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idx", ")", "\n", "idx", "=", "idx", "[", ":", "self", ".", "ds", "]", "\n", "if", "idx", ".", "size", "<", "self", ".", "ds", ":", "\n", "                ", "idx", "=", "np", ".", "concatenate", "(", "[", "idx", ",", "np", ".", "random", ".", "randint", "(", "npoints", ",", "size", "=", "(", "self", ".", "ds", "-", "idx", ".", "size", ",", ")", ")", "]", ")", "\n", "", "data", "=", "data", "[", "idx", "]", "\n", "pids", "=", "pids", "[", "idx", "]", "\n", "origin_pids", "=", "origin_pids", "[", "idx", "]", "\n", "\n", "", "if", "self", ".", "rand_rot", ":", "\n", "            ", "data", "=", "data", "@", "special_ortho_group", ".", "rvs", "(", "3", ")", "\n", "", "return", "data", ",", "pids", ",", "origin_pids", ",", "fps", "(", "data", ",", "128", ")", ",", "class_names", ".", "index", "(", "seg_label_to_cat", "[", "origin_pids", "[", "0", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.ShapeNetPartDataset.balanced_indices_sample": [[133, 147], ["numpy.ones", "numpy.all", "numpy.random.randint", "numpy.any", "results.append", "len"], "methods", ["None"], ["", "def", "balanced_indices_sample", "(", "self", ")", ":", "\n", "        ", "ind", "=", "np", ".", "ones", "(", "[", "50", ",", "]", ",", "np", ".", "bool", ")", "\n", "for", "name", "in", "self", ".", "valid_names", ":", "\n", "            ", "ind", "[", "seg_classes", "[", "name", "]", "]", "=", "False", "\n", "", "results", "=", "[", "]", "\n", "while", "not", "np", ".", "all", "(", "ind", ")", ":", "\n", "            ", "idx", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ")", ")", "\n", "valid_idx", "=", "self", ".", "valid_idxs", "[", "idx", "]", "\n", "if", "np", ".", "any", "(", "ind", "[", "seg_classes", "[", "seg_label_to_cat", "[", "self", ".", "origin_pids", "[", "valid_idx", "]", "[", "0", "]", "]", "]", "]", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "ind", "[", "seg_classes", "[", "seg_label_to_cat", "[", "self", ".", "origin_pids", "[", "valid_idx", "]", "[", "0", "]", "]", "]", "]", "=", "True", "\n", "results", ".", "append", "(", "idx", ")", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.ShapeNetPartDataset.__len__": [[148, 150], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "valid_idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.BalancedSampler.__init__": [[153, 156], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dataset", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.BalancedSampler.__iter__": [[157, 162], ["range", "dataset.BalancedSampler.dataset.balanced_indices_sample", "len"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.ShapeNetPartDataset.balanced_indices_sample"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "(", "len", "(", "self", ")", "-", "1", ")", "//", "16", "+", "1", ")", ":", "\n", "            ", "indices", "=", "self", ".", "dataset", ".", "balanced_indices_sample", "(", ")", "\n", "for", "idx", "in", "indices", ":", "\n", "                ", "yield", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.BalancedSampler.__len__": [[163, 165], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.read_data": [[19, 37], ["glob.glob", "os.path.join", "re.search", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "h5py.File", "pcs.mean", "numpy.max", "numpy.array", "enumerate", "Q.append", "pcds.append", "pids.append", "origin_pids.append", "numpy.linalg.norm", "list", "dataset.read_data.read"], "function", ["None"], ["", "", "def", "read_data", "(", "dir_name", ",", "path", ")", ":", "\n", "    ", "def", "read", "(", "filepath", ")", ":", "\n", "        ", "with", "h5py", ".", "File", "(", "filepath", ",", "'r'", ")", "as", "fi", ":", "\n", "            ", "pcs", "=", "fi", "[", "'data'", "]", "[", ":", "]", "\n", "pcs", "-=", "pcs", ".", "mean", "(", "-", "2", ",", "keepdims", "=", "True", ")", "\n", "pcs", "/=", "np", ".", "max", "(", "np", ".", "linalg", ".", "norm", "(", "pcs", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", ",", "-", "2", ",", "keepdims", "=", "True", ")", "\n", "pid", "=", "np", ".", "array", "(", "fi", "[", "'pid'", "]", "[", ":", "]", ")", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "list", "(", "pid", ")", ")", ":", "\n", "                ", "pid", "[", "i", "]", "-=", "seg_label_delta", "[", "c", "[", "0", "]", "]", "\n", "", "return", "pcs", ",", "pid", ",", "fi", "[", "'pid'", "]", "[", ":", "]", "\n", "", "", "Q", "=", "[", "]", "\n", "for", "f", "in", "glob", "(", "os", ".", "path", ".", "join", "(", "dir_name", ",", "'*'", ")", ")", ":", "\n", "        ", "if", "re", ".", "search", "(", "path", ",", "f", ")", ":", "\n", "            ", "Q", ".", "append", "(", "read", "(", "f", ")", ")", "\n", "", "", "pcds", ",", "pids", ",", "origin_pids", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "pcd", ",", "pid", ",", "lab", "in", "Q", ":", "\n", "        ", "pcds", ".", "append", "(", "pcd", ")", ",", "pids", ".", "append", "(", "pid", ")", ",", "origin_pids", ".", "append", "(", "lab", ")", "\n", "", "return", "np", ".", "concatenate", "(", "pcds", ")", ",", "np", ".", "concatenate", "(", "pids", ")", ",", "np", ".", "concatenate", "(", "origin_pids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.fps": [[39, 53], ["numpy.zeros", "numpy.random.randint", "range", "numpy.ones", "numpy.sum", "numpy.argmax"], "function", ["None"], ["", "def", "fps", "(", "xyz", ",", "npoint", ")", ":", "\n", "    ", "N", "=", "xyz", ".", "shape", "[", "0", "]", "\n", "centroids", "=", "np", ".", "zeros", "(", "(", "npoint", ",", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "distance", "=", "np", ".", "ones", "(", "N", ",", ")", "*", "1e10", "\n", "farthest", "=", "np", ".", "random", ".", "randint", "(", "N", ")", "\n", "\n", "for", "i", "in", "range", "(", "npoint", ")", ":", "\n", "        ", "centroids", "[", "i", "]", "=", "farthest", "\n", "centroid", "=", "xyz", "[", "farthest", ",", ":", "]", "[", "None", "]", "\n", "dist", "=", "np", ".", "sum", "(", "(", "xyz", "-", "centroid", ")", "**", "2", ",", "-", "1", ")", "\n", "mask", "=", "dist", "<", "distance", "\n", "distance", "[", "mask", "]", "=", "dist", "[", "mask", "]", "\n", "farthest", "=", "np", ".", "argmax", "(", "distance", ",", "-", "1", ")", "\n", "", "return", "centroids", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.shift_point_cloud": [[55, 67], ["numpy.random.uniform", "range"], "function", ["None"], ["", "def", "shift_point_cloud", "(", "batch_data", ",", "shift_range", "=", "0.1", ")", ":", "\n", "    ", "\"\"\" Randomly shift point cloud. Shift is per point cloud.\n        Input:\n          BxNx3 array, original batch of point clouds\n        Return:\n          BxNx3 array, shifted batch of point clouds\n    \"\"\"", "\n", "B", ",", "N", ",", "C", "=", "batch_data", ".", "shape", "\n", "shifts", "=", "np", ".", "random", ".", "uniform", "(", "-", "shift_range", ",", "shift_range", ",", "(", "B", ",", "3", ")", ")", "\n", "for", "batch_index", "in", "range", "(", "B", ")", ":", "\n", "        ", "batch_data", "[", "batch_index", ",", ":", ",", ":", "]", "+=", "shifts", "[", "batch_index", ",", ":", "]", "\n", "", "return", "batch_data", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.random_scale_point_cloud": [[69, 81], ["numpy.random.uniform", "range"], "function", ["None"], ["", "def", "random_scale_point_cloud", "(", "batch_data", ",", "scale_low", "=", "0.8", ",", "scale_high", "=", "1.25", ")", ":", "\n", "    ", "\"\"\" Randomly scale the point cloud. Scale is per point cloud.\n        Input:\n            BxNx3 array, original batch of point clouds\n        Return:\n            BxNx3 array, scaled batch of point clouds\n    \"\"\"", "\n", "B", ",", "N", ",", "C", "=", "batch_data", ".", "shape", "\n", "scales", "=", "np", ".", "random", ".", "uniform", "(", "scale_low", ",", "scale_high", ",", "B", ")", "\n", "for", "batch_index", "in", "range", "(", "B", ")", ":", "\n", "        ", "batch_data", "[", "batch_index", ",", ":", ",", ":", "]", "*=", "scales", "[", "batch_index", "]", "\n", "", "return", "batch_data", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.jitter_point_cloud": [[83, 95], ["numpy.clip", "numpy.random.randn"], "function", ["None"], ["", "def", "jitter_point_cloud", "(", "batch_data", ",", "sigma", "=", "0.01", ",", "clip", "=", "0.05", ")", ":", "\n", "    ", "\"\"\" Randomly jitter points. jittering is per point.\n        Input:\n          BxNx3 array, original batch of point clouds\n        Return:\n          BxNx3 array, jittered batch of point clouds\n    \"\"\"", "\n", "B", ",", "N", ",", "C", "=", "batch_data", ".", "shape", "\n", "assert", "(", "clip", ">", "0", ")", "\n", "jittered_data", "=", "np", ".", "clip", "(", "sigma", "*", "np", ".", "random", ".", "randn", "(", "B", ",", "N", ",", "C", ")", ",", "-", "1", "*", "clip", ",", "clip", ")", "\n", "jittered_data", "+=", "batch_data", "\n", "return", "jittered_data", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.test.main": [[9, 18], ["hydra.main", "model.SPRINSeg().to", "SPRINSeg().to.load_state_dict", "dataset.read_data", "print", "train.run_epoch", "torch.load", "hydra.utils.to_absolute_path", "len", "model.SPRINSeg", "hydra.utils.to_absolute_path"], "function", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.test.main", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.dataset.read_data", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.train.run_epoch"], ["@", "hydra", ".", "main", "(", "config_path", "=", "'config'", ",", "config_name", "=", "'shapenet'", ")", "\n", "def", "main", "(", "cfg", ")", ":", "\n", "    ", "net", "=", "SPRINSeg", "(", "6", ",", "cfg", ".", "fps_n", ")", ".", "to", "(", "\"cuda\"", ")", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "hydra", ".", "utils", ".", "to_absolute_path", "(", "'sprin/epoch250.pt'", ")", ")", ")", "\n", "pcs_test", ",", "segs_centered_test", ",", "segs_test", "=", "read_data", "(", "hydra", ".", "utils", ".", "to_absolute_path", "(", "\"shapenet_part_seg_hdf5_data/ply_data_test*\"", ")", ")", "\n", "\n", "print", "(", "len", "(", "pcs_test", ")", ")", "\n", "\n", "run_epoch", "(", "net", ",", "pcs_test", ",", "segs_centered_test", ",", "segs_test", ",", "None", ",", "1", ",", "train", "=", "False", ",", "ds", "=", "cfg", ".", "npoints", ",", "batchsize", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.SparseSO3Conv.__init__": [[88, 94], ["torch.Module.__init__", "model.conv_kernel", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.conv_kernel"], ["    ", "def", "__init__", "(", "self", ",", "rank", ",", "n_in", ",", "n_out", ",", "*", "kernel_interns", ",", "layer_norm", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "kernel", "=", "conv_kernel", "(", "8", ",", "rank", ",", "*", "kernel_interns", ")", "\n", "self", ".", "outnet", "=", "nn", ".", "Linear", "(", "rank", "*", "n_in", ",", "n_out", ")", "\n", "self", ".", "rank", "=", "rank", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "n_out", ")", "if", "layer_norm", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.SparseSO3Conv.do_conv_ranked": [[95, 101], ["model.SparseSO3Conv.kernel().reshape", "torch.einsum().flatten", "torch.einsum().flatten", "torch.einsum().flatten", "torch.einsum().flatten", "torch.einsum().flatten", "torch.einsum().flatten", "torch.einsum().flatten", "torch.einsum().flatten", "torch.einsum().flatten", "model.SparseSO3Conv.outnet", "model.SparseSO3Conv.kernel", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum"], "methods", ["None"], ["", "def", "do_conv_ranked", "(", "self", ",", "r_inv_s", ",", "feat", ")", ":", "\n", "# [b, n, k, rank], [b, n, k, cin] -> [b, n, cout]", "\n", "        ", "kern", "=", "self", ".", "kernel", "(", "r_inv_s", ")", ".", "reshape", "(", "*", "feat", ".", "shape", "[", ":", "-", "1", "]", ",", "self", ".", "rank", ")", "\n", "# PointConv-like optimization", "\n", "contracted", "=", "torch", ".", "einsum", "(", "\"bnkr,bnki->bnri\"", ",", "kern", ",", "feat", ")", ".", "flatten", "(", "-", "2", ")", "\n", "return", "self", ".", "outnet", "(", "contracted", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.SparseSO3Conv.forward": [[102, 109], ["torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "model.rifeat", "model.SparseSO3Conv.do_conv_ranked", "model.SparseSO3Conv.layer_norm"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.rifeat", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.SparseSO3Conv.do_conv_ranked"], ["", "def", "forward", "(", "self", ",", "feat_points", ",", "feat", ",", "eval_points", ")", ":", "\n", "        ", "eval_points_e", "=", "torch", ".", "unsqueeze", "(", "eval_points", ",", "-", "2", ")", "\n", "r_inv_s", "=", "rifeat", "(", "feat_points", ",", "eval_points_e", ")", "\n", "conv", "=", "self", ".", "do_conv_ranked", "(", "r_inv_s", ",", "feat", ")", "\n", "if", "self", ".", "layer_norm", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "layer_norm", "(", "conv", ")", "\n", "", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.GlobalInfoProp.__init__": [[112, 115], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_global", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "n_in", ",", "n_global", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.GlobalInfoProp.forward": [[116, 121], ["model.GlobalInfoProp.linear", "[].expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.GlobalInfoProp.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "# [b, k, n_in] -> [b, k, n_in + n_global]", "\n", "        ", "tran", "=", "self", ".", "linear", "(", "feat", ")", "\n", "glob", "=", "tran", ".", "max", "(", "-", "2", ",", "keepdim", "=", "True", ")", "[", "0", "]", ".", "expand", "(", "*", "feat", ".", "shape", "[", ":", "-", "1", "]", ",", "tran", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "torch", ".", "cat", "(", "[", "feat", ",", "glob", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.knn_indices": [[125, 131], ["torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "knn_indices.size"], "methods", ["None"], ["    ", "def", "knn_indices", "(", "self", ",", "points_target", ",", "points_query", ",", "k", ",", "stride", ")", ":", "\n", "# points: [*, 3] out: [*, k // stride]", "\n", "        ", "self_dist", "=", "torch", ".", "cdist", "(", "points_query", ",", "points_target", ")", "\n", "_", ",", "knn_indices", "=", "torch", ".", "topk", "(", "self_dist", ",", "k", ",", "-", "1", ",", "False", ",", "False", ")", "\n", "knn_indices", "=", "knn_indices", "[", "...", ",", "torch", ".", "randperm", "(", "knn_indices", ".", "size", "(", "-", "1", ")", ")", "]", "\n", "return", "knn_indices", "[", "...", ",", ":", ":", "stride", "]", "# [*, Q, K']", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.knn_feat": [[132, 135], ["feat[].reshape", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "knn_indices.flatten", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "feat.size"], "methods", ["None"], ["", "def", "knn_feat", "(", "self", ",", "feat", ",", "knn_indices", ")", ":", "\n", "        ", "return", "(", "feat", "[", "torch", ".", "arange", "(", "feat", ".", "size", "(", "0", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "knn_indices", ".", "flatten", "(", "1", ")", ",", ":", "]", "\n", ".", "reshape", "(", "feat", ".", "shape", "[", "0", "]", ",", "knn_indices", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "feat", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.forward": [[136, 140], ["model.Neighbourhood.knn_indices().unsqueeze", "model.Neighbourhood.knn_feat", "model.Neighbourhood.knn_indices"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.knn_feat", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.knn_indices"], ["", "def", "forward", "(", "self", ",", "points", ",", "in_feat", ",", "k", ",", "stride", ")", ":", "\n", "# points [b, n, 3] in_feat [b, n, c_in] out [b, n, k // stride, c_in]", "\n", "        ", "ind", "=", "self", ".", "knn_indices", "(", "points", ",", "points", ",", "k", ",", "stride", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "return", "self", ".", "knn_feat", "(", "in_feat", ",", "ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.query": [[141, 145], ["model.Neighbourhood.knn_indices().unsqueeze", "model.Neighbourhood.knn_feat", "model.Neighbourhood.knn_feat", "model.Neighbourhood.knn_indices"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.knn_feat", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.knn_feat", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.knn_indices"], ["", "def", "query", "(", "self", ",", "points_target", ",", "feat_target", ",", "points_query", ",", "k", ",", "stride", ")", ":", "\n", "# [b, T, 3] Q [b, Q, 3]", "\n", "        ", "ind", "=", "self", ".", "knn_indices", "(", "points_target", ",", "points_query", ",", "k", ",", "stride", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "return", "self", ".", "knn_feat", "(", "points_target", ",", "ind", ")", ",", "self", ".", "knn_feat", "(", "feat_target", ",", "ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.NeighbourhoodSparseSO3Conv.__init__": [[148, 154], ["torch.Module.__init__", "model.SparseSO3Conv", "model.Neighbourhood"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", ",", "stride", ",", "rank", ",", "n_in", ",", "n_out", ",", "*", "hunits", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "SparseSO3Conv", "(", "rank", ",", "n_in", ",", "n_out", ",", "*", "hunits", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "neighbourhood", "=", "Neighbourhood", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.NeighbourhoodSparseSO3Conv.forward": [[155, 164], ["model.NeighbourhoodSparseSO3Conv.neighbourhood.query", "model.NeighbourhoodSparseSO3Conv.conv"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.Neighbourhood.query"], ["", "def", "forward", "(", "self", ",", "feat_points", ",", "feat", ",", "eval_points", ")", ":", "\n", "\n", "        ", "feat_points", ",", "eval_points", "=", "feat_points", "[", "...", ",", ":", "3", "]", ",", "eval_points", "[", "...", ",", ":", "3", "]", "\n", "nn", ",", "nn_feat", "=", "self", ".", "neighbourhood", ".", "query", "(", "\n", "feat_points", ",", "feat", ",", "\n", "eval_points", ",", "\n", "self", ".", "k", ",", "self", ".", "stride", "\n", ")", "\n", "return", "self", ".", "conv", "(", "nn", ",", "nn_feat", ",", "eval_points", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.AdaptiveGrouping.__init__": [[167, 170], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_points_target", ",", "n_feat_in", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tr", "=", "nn", ".", "Linear", "(", "n_feat_in", ",", "n_points_target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.AdaptiveGrouping.forward": [[171, 175], ["torch.softmax", "torch.softmax", "torch.softmax", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "model.AdaptiveGrouping.tr"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "points", ",", "feat", ")", ":", "\n", "# points: [b, n, 3], feat [b, n, c_in] -> [b, n', 3]", "\n", "        ", "act", "=", "F", ".", "softmax", "(", "self", ".", "tr", "(", "feat", ")", ",", "-", "2", ")", "\n", "return", "torch", ".", "einsum", "(", "'bnz,bnc->bcz'", ",", "points", ",", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.FPSGrouping.__init__": [[178, 181], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_points_target", ",", "*", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_points_target", "=", "n_points_target", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.FPSGrouping.farthest_point_sample": [[182, 205], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.randint().to", "torch.randint().to", "torch.randint().to", "torch.randint().to", "torch.randint().to", "torch.randint().to", "torch.randint().to", "torch.randint().to", "torch.randint().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "range", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "xyz[].view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "farthest_point_sample", "(", "self", ",", "xyz", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            xyz: pointcloud data, [B, N, 3]\n            npoint: number of samples\n        Return:\n            centroids: sampled pointcloud index, [B, npoint]\n        \"\"\"", "\n", "npoint", "=", "self", ".", "n_points_target", "\n", "device", "=", "xyz", ".", "device", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "centroids", "=", "torch", ".", "zeros", "(", "B", ",", "npoint", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "distance", "=", "torch", ".", "ones", "(", "B", ",", "N", ")", ".", "to", "(", "device", ")", "*", "1e10", "\n", "farthest", "=", "torch", ".", "randint", "(", "0", ",", "N", ",", "(", "B", ",", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "batch_indices", "=", "torch", ".", "arange", "(", "B", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "for", "i", "in", "range", "(", "npoint", ")", ":", "\n", "            ", "centroids", "[", ":", ",", "i", "]", "=", "farthest", "\n", "centroid", "=", "xyz", "[", "batch_indices", ",", "farthest", ",", ":", "]", ".", "view", "(", "B", ",", "1", ",", "3", ")", "\n", "dist", "=", "torch", ".", "sum", "(", "(", "xyz", "-", "centroid", ")", "**", "2", ",", "-", "1", ")", "\n", "mask", "=", "dist", "<", "distance", "\n", "distance", "[", "mask", "]", "=", "dist", "[", "mask", "]", "\n", "farthest", "=", "torch", ".", "max", "(", "distance", ",", "-", "1", ")", "[", "1", "]", "\n", "", "return", "centroids", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.FPSGrouping.index_points": [[206, 223], ["list", "list", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "len", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "def", "index_points", "(", "self", ",", "points", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            points: input points data, [B, N, C]\n            idx: sample index data, [B, S]\n        Return:\n            new_points:, indexed points data, [B, S, C]\n        \"\"\"", "\n", "device", "=", "points", ".", "device", "\n", "B", "=", "points", ".", "shape", "[", "0", "]", "\n", "view_shape", "=", "list", "(", "idx", ".", "shape", ")", "\n", "view_shape", "[", "1", ":", "]", "=", "[", "1", "]", "*", "(", "len", "(", "view_shape", ")", "-", "1", ")", "\n", "repeat_shape", "=", "list", "(", "idx", ".", "shape", ")", "\n", "repeat_shape", "[", "0", "]", "=", "1", "\n", "batch_indices", "=", "torch", ".", "arange", "(", "B", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", ".", "view", "(", "view_shape", ")", ".", "repeat", "(", "repeat_shape", ")", "\n", "new_points", "=", "points", "[", "batch_indices", ",", "idx", ",", ":", "]", "\n", "return", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.FPSGrouping.forward": [[224, 226], ["model.FPSGrouping.index_points", "model.FPSGrouping.farthest_point_sample"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.FPSGrouping.index_points", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.FPSGrouping.farthest_point_sample"], ["", "def", "forward", "(", "self", ",", "points", ",", "fps_idx", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "index_points", "(", "points", "[", "...", ",", ":", "3", "]", ",", "self", ".", "farthest_point_sample", "(", "points", "[", "...", ",", ":", "3", "]", ")", "if", "fps_idx", "is", "None", "else", "fps_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.SPRINCls.__init__": [[229, 254], ["torch.Module.__init__", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.FPSGrouping", "model.NeighbourhoodSparseSO3Conv", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.FPSGrouping", "model.NeighbourhoodSparseSO3Conv", "model.SparseSO3Conv", "model.SparseSO3Conv", "model.GlobalInfoProp", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", ",", "fps_n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_11", "=", "NeighbourhoodSparseSO3Conv", "(", "64", ",", "2", ",", "32", ",", "1", ",", "32", ",", "80", ")", "\n", "self", ".", "glob_11", "=", "GlobalInfoProp", "(", "32", ",", "8", ")", "\n", "self", ".", "conv_12", "=", "NeighbourhoodSparseSO3Conv", "(", "64", ",", "2", ",", "32", ",", "40", ",", "48", ",", "80", ")", "\n", "self", ".", "glob_12", "=", "GlobalInfoProp", "(", "48", ",", "16", ")", "\n", "\n", "self", ".", "pool_1", "=", "FPSGrouping", "(", "fps_n", ",", "64", ")", "\n", "self", ".", "pconv_1", "=", "NeighbourhoodSparseSO3Conv", "(", "72", ",", "3", ",", "64", ",", "64", ",", "128", ",", "100", ")", "\n", "\n", "self", ".", "conv_21", "=", "NeighbourhoodSparseSO3Conv", "(", "32", ",", "1", ",", "64", ",", "128", ",", "128", ",", "140", ")", "\n", "self", ".", "glob_21", "=", "GlobalInfoProp", "(", "128", ",", "16", ")", "\n", "self", ".", "conv_22", "=", "NeighbourhoodSparseSO3Conv", "(", "32", ",", "1", ",", "72", ",", "144", ",", "144", ",", "180", ")", "\n", "self", ".", "glob_22", "=", "GlobalInfoProp", "(", "144", ",", "16", ")", "\n", "\n", "self", ".", "pool_2", "=", "FPSGrouping", "(", "32", ",", "160", ")", "\n", "self", ".", "pconv_2", "=", "NeighbourhoodSparseSO3Conv", "(", "32", ",", "1", ",", "128", ",", "160", ",", "256", ",", "240", ")", "\n", "\n", "self", ".", "conv_31", "=", "SparseSO3Conv", "(", "128", ",", "256", ",", "256", ",", "240", ")", "\n", "self", ".", "conv_32", "=", "SparseSO3Conv", "(", "128", ",", "256", ",", "256", ",", "240", ")", "\n", "self", ".", "glob_3", "=", "GlobalInfoProp", "(", "256", ",", "128", ")", "\n", "\n", "self", ".", "top", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "768", ",", "256", ")", ",", "nn", ".", "BatchNorm1d", "(", "256", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "64", ")", ",", "nn", ".", "BatchNorm1d", "(", "64", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "64", ",", "n_classes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.SPRINCls.forward": [[255, 275], ["torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "model.SPRINCls.glob_11", "model.SPRINCls.glob_12", "model.SPRINCls.pool_1", "torch.relu", "torch.relu", "torch.relu", "model.SPRINCls.glob_21", "model.SPRINCls.glob_22", "model.SPRINCls.pool_2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.SPRINCls.glob_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.SPRINCls.top", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.SPRINCls.pconv_1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.SPRINCls.pconv_2", "model.SPRINCls.conv_31", "model.SPRINCls.conv_32", "model.SPRINCls.conv_11", "model.SPRINCls.conv_12", "model.SPRINCls.conv_21", "model.SPRINCls.conv_22", "feat[].expand", "feat[].expand", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "fps_idxs", "=", "None", ")", ":", "\n", "        ", "feat", "=", "torch", ".", "ones_like", "(", "x", "[", "...", ",", ":", "1", "]", ")", "\n", "\n", "feat", "=", "self", ".", "glob_11", "(", "F", ".", "relu", "(", "self", ".", "conv_11", "(", "x", ",", "feat", ",", "x", ")", ")", ")", "\n", "feat", "=", "self", ".", "glob_12", "(", "F", ".", "relu", "(", "self", ".", "conv_12", "(", "x", ",", "feat", ",", "x", ")", ")", ")", "\n", "x2", "=", "self", ".", "pool_1", "(", "x", ",", "fps_idxs", ")", "\n", "feat", "=", "F", ".", "relu", "(", "self", ".", "pconv_1", "(", "x", ",", "feat", ",", "x2", ")", ")", "\n", "\n", "feat", "=", "self", ".", "glob_21", "(", "F", ".", "relu", "(", "self", ".", "conv_21", "(", "x2", ",", "feat", ",", "x2", ")", ")", ")", "\n", "feat", "=", "self", ".", "glob_22", "(", "F", ".", "relu", "(", "self", ".", "conv_22", "(", "x2", ",", "feat", ",", "x2", ")", ")", ")", "\n", "x3", "=", "self", ".", "pool_2", "(", "x2", ")", "\n", "feat", "=", "F", ".", "relu", "(", "self", ".", "pconv_2", "(", "x2", ",", "feat", ",", "x3", ")", ")", "\n", "\n", "feat", "=", "F", ".", "relu", "(", "self", ".", "conv_31", "(", "x3", "[", ":", ",", "None", "]", ",", "feat", "[", ":", ",", "None", "]", ".", "expand", "(", "-", "1", ",", "x3", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "-", "1", ")", ",", "x3", ")", ")", "\n", "feat", "=", "F", ".", "relu", "(", "self", ".", "conv_32", "(", "x3", "[", ":", ",", "None", "]", ",", "feat", "[", ":", ",", "None", "]", ".", "expand", "(", "-", "1", ",", "x3", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "-", "1", ")", ",", "x3", ")", ")", "\n", "feat", "=", "self", ".", "glob_3", "(", "feat", ")", "\n", "\n", "feat", "=", "torch", ".", "cat", "(", "(", "torch", ".", "max", "(", "feat", ",", "1", ")", "[", "0", "]", ",", "torch", ".", "mean", "(", "feat", ",", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "self", ".", "top", "(", "feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.SPRINSeg.__init__": [[278, 313], ["torch.Module.__init__", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.FPSGrouping", "model.NeighbourhoodSparseSO3Conv", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.FPSGrouping", "model.NeighbourhoodSparseSO3Conv", "model.SparseSO3Conv", "model.SparseSO3Conv", "model.GlobalInfoProp", "model.NeighbourhoodSparseSO3Conv", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.NeighbourhoodSparseSO3Conv", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "model.NeighbourhoodSparseSO3Conv", "model.GlobalInfoProp", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", ",", "fps_n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_11", "=", "NeighbourhoodSparseSO3Conv", "(", "64", ",", "2", ",", "32", ",", "16", ",", "32", ",", "80", ")", "\n", "self", ".", "glob_11", "=", "GlobalInfoProp", "(", "32", ",", "8", ")", "\n", "self", ".", "conv_12", "=", "NeighbourhoodSparseSO3Conv", "(", "64", ",", "2", ",", "32", ",", "40", ",", "48", ",", "80", ")", "\n", "self", ".", "glob_12", "=", "GlobalInfoProp", "(", "48", ",", "16", ")", "\n", "\n", "self", ".", "pool_1", "=", "FPSGrouping", "(", "fps_n", ",", "64", ")", "\n", "self", ".", "pconv_1", "=", "NeighbourhoodSparseSO3Conv", "(", "32", ",", "1", ",", "64", ",", "64", ",", "128", ",", "100", ")", "\n", "\n", "self", ".", "conv_21", "=", "NeighbourhoodSparseSO3Conv", "(", "32", ",", "1", ",", "64", ",", "128", ",", "128", ",", "140", ")", "\n", "self", ".", "glob_21", "=", "GlobalInfoProp", "(", "128", ",", "16", ")", "\n", "self", ".", "conv_22", "=", "NeighbourhoodSparseSO3Conv", "(", "32", ",", "1", ",", "72", ",", "144", ",", "144", ",", "180", ")", "\n", "self", ".", "glob_22", "=", "GlobalInfoProp", "(", "144", ",", "16", ")", "\n", "\n", "self", ".", "pool_2", "=", "FPSGrouping", "(", "32", ",", "160", ")", "\n", "self", ".", "pconv_2", "=", "NeighbourhoodSparseSO3Conv", "(", "32", ",", "1", ",", "128", ",", "160", ",", "256", ",", "240", ")", "\n", "\n", "self", ".", "conv_31", "=", "SparseSO3Conv", "(", "128", ",", "256", ",", "256", ",", "240", ")", "\n", "self", ".", "conv_32", "=", "SparseSO3Conv", "(", "128", ",", "256", ",", "256", ",", "240", ")", "\n", "self", ".", "glob_3", "=", "GlobalInfoProp", "(", "256", ",", "32", ")", "\n", "\n", "self", ".", "upconv_4", "=", "NeighbourhoodSparseSO3Conv", "(", "16", ",", "1", ",", "32", ",", "288", ",", "128", ",", "128", ")", "\n", "self", ".", "conv_41", "=", "NeighbourhoodSparseSO3Conv", "(", "32", ",", "1", ",", "64", ",", "128", ",", "128", ",", "128", ")", "\n", "self", ".", "glob_41", "=", "GlobalInfoProp", "(", "128", ",", "32", ")", "\n", "\n", "self", ".", "upconv_5", "=", "NeighbourhoodSparseSO3Conv", "(", "32", ",", "1", ",", "32", ",", "160", ",", "48", ",", "80", ")", "\n", "self", ".", "conv_51", "=", "NeighbourhoodSparseSO3Conv", "(", "48", ",", "2", ",", "32", ",", "48", ",", "48", ",", "80", ")", "\n", "self", ".", "glob_51", "=", "GlobalInfoProp", "(", "48", ",", "16", ")", "\n", "self", ".", "conv_52", "=", "NeighbourhoodSparseSO3Conv", "(", "96", ",", "3", ",", "32", ",", "64", ",", "64", ",", "80", ")", "\n", "self", ".", "glob_52", "=", "GlobalInfoProp", "(", "64", ",", "16", ")", "\n", "\n", "self", ".", "top", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv1d", "(", "80", ",", "128", ",", "1", ")", ",", "nn", ".", "BatchNorm1d", "(", "128", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv1d", "(", "128", ",", "256", ",", "1", ")", ",", "nn", ".", "BatchNorm1d", "(", "256", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv1d", "(", "256", ",", "n_classes", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.SPRINSeg.forward": [[314, 339], ["cls_idxs[].expand", "model.SPRINSeg.glob_11", "model.SPRINSeg.glob_12", "model.SPRINSeg.pool_1", "torch.relu", "torch.relu", "torch.relu", "model.SPRINSeg.glob_21", "model.SPRINSeg.glob_22", "model.SPRINSeg.pool_2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.SPRINSeg.glob_3", "model.SPRINSeg.upconv_4", "model.SPRINSeg.glob_41", "model.SPRINSeg.upconv_5", "model.SPRINSeg.glob_51", "model.SPRINSeg.glob_52", "model.SPRINSeg.top", "x.size", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.SPRINSeg.pconv_1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.SPRINSeg.pconv_2", "model.SPRINSeg.conv_31", "model.SPRINSeg.conv_32", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.SPRINSeg.transpose", "model.SPRINSeg.conv_11", "model.SPRINSeg.conv_12", "model.SPRINSeg.conv_21", "model.SPRINSeg.conv_22", "feat[].expand", "feat[].expand", "model.SPRINSeg.conv_41", "model.SPRINSeg.conv_51", "model.SPRINSeg.conv_52"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "fps_idxs", ",", "cls_idxs", ")", ":", "\n", "        ", "feat", "=", "cls_idxs", "[", ":", ",", "None", "]", ".", "expand", "(", "-", "1", ",", "x", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "\n", "feat", "=", "self", ".", "glob_11", "(", "F", ".", "relu", "(", "self", ".", "conv_11", "(", "x", ",", "feat", ",", "x", ")", ")", ")", "\n", "feat", "=", "self", ".", "glob_12", "(", "F", ".", "relu", "(", "self", ".", "conv_12", "(", "x", ",", "feat", ",", "x", ")", ")", ")", "\n", "x2", "=", "self", ".", "pool_1", "(", "x", ",", "fps_idxs", ")", "\n", "feat", "=", "F", ".", "relu", "(", "self", ".", "pconv_1", "(", "x", ",", "feat", ",", "x2", ")", ")", "\n", "\n", "feat", "=", "self", ".", "glob_21", "(", "F", ".", "relu", "(", "self", ".", "conv_21", "(", "x2", ",", "feat", ",", "x2", ")", ")", ")", "\n", "feat", "=", "self", ".", "glob_22", "(", "F", ".", "relu", "(", "self", ".", "conv_22", "(", "x2", ",", "feat", ",", "x2", ")", ")", ")", "\n", "x3", "=", "self", ".", "pool_2", "(", "x2", ")", "\n", "feat", "=", "F", ".", "relu", "(", "self", ".", "pconv_2", "(", "x2", ",", "feat", ",", "x3", ")", ")", "\n", "\n", "feat", "=", "F", ".", "relu", "(", "self", ".", "conv_31", "(", "x3", "[", ":", ",", "None", "]", ",", "feat", "[", ":", ",", "None", "]", ".", "expand", "(", "-", "1", ",", "x3", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "-", "1", ")", ",", "x3", ")", ")", "\n", "feat", "=", "F", ".", "relu", "(", "self", ".", "conv_32", "(", "x3", "[", ":", ",", "None", "]", ",", "feat", "[", ":", ",", "None", "]", ".", "expand", "(", "-", "1", ",", "x3", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "-", "1", ")", ",", "x3", ")", ")", "\n", "feat", "=", "self", ".", "glob_3", "(", "feat", ")", "\n", "\n", "feat", "=", "self", ".", "upconv_4", "(", "x3", ",", "feat", ",", "x2", ")", "\n", "feat", "=", "self", ".", "glob_41", "(", "F", ".", "relu", "(", "self", ".", "conv_41", "(", "x2", ",", "feat", ",", "x2", ")", ")", ")", "\n", "\n", "feat", "=", "self", ".", "upconv_5", "(", "x2", ",", "feat", ",", "x", ")", "\n", "feat", "=", "self", ".", "glob_51", "(", "F", ".", "relu", "(", "self", ".", "conv_51", "(", "x", ",", "feat", ",", "x", ")", ")", ")", "\n", "feat", "=", "self", ".", "glob_52", "(", "F", ".", "relu", "(", "self", ".", "conv_52", "(", "x", ",", "feat", ",", "x", ")", ")", ")", "\n", "\n", "return", "self", ".", "top", "(", "feat", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.zm": [[15, 19], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.stack().reshape", "torch.stack().reshape", "torch.stack().reshape", "torch.stack", "torch.stack", "torch.stack", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin"], "function", ["None"], ["def", "zm", "(", "a", ")", ":", "\n", "    ", "zeros", "=", "torch", ".", "zeros_like", "(", "a", ")", "\n", "ones", "=", "torch", ".", "ones_like", "(", "a", ")", "\n", "return", "torch", ".", "stack", "(", "[", "torch", ".", "cos", "(", "a", ")", ",", "-", "torch", ".", "sin", "(", "a", ")", ",", "zeros", ",", "torch", ".", "sin", "(", "a", ")", ",", "torch", ".", "cos", "(", "a", ")", ",", "zeros", ",", "zeros", ",", "zeros", ",", "ones", "]", ",", "-", "1", ")", ".", "reshape", "(", "*", "a", ".", "shape", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.ym": [[21, 25], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.stack().reshape", "torch.stack().reshape", "torch.stack().reshape", "torch.stack", "torch.stack", "torch.stack", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin"], "function", ["None"], ["", "def", "ym", "(", "a", ")", ":", "\n", "    ", "zeros", "=", "torch", ".", "zeros_like", "(", "a", ")", "\n", "ones", "=", "torch", ".", "ones_like", "(", "a", ")", "\n", "return", "torch", ".", "stack", "(", "[", "torch", ".", "cos", "(", "a", ")", ",", "zeros", ",", "torch", ".", "sin", "(", "a", ")", ",", "zeros", ",", "ones", ",", "zeros", ",", "-", "torch", ".", "sin", "(", "a", ")", ",", "zeros", ",", "torch", ".", "cos", "(", "a", ")", "]", ",", "-", "1", ")", ".", "reshape", "(", "*", "a", ".", "shape", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.c2s": [[27, 37], ["torch.stack", "torch.stack", "torch.stack", "torch.atan2", "torch.atan2", "torch.atan2", "torch.acos", "torch.acos", "torch.acos", "torch.clamp", "torch.clamp", "torch.clamp", "torch.norm", "torch.norm", "torch.norm"], "function", ["None"], ["", "def", "c2s", "(", "x", ")", ":", "\n", "    ", "\"\"\"cartesan to spherical coordinates\n\n    Args:\n        x (... x 3): \n\n    Returns:\n        ... x 2: \n    \"\"\"", "\n", "return", "torch", ".", "stack", "(", "[", "torch", ".", "atan2", "(", "x", "[", "...", ",", "1", "]", ",", "x", "[", "...", ",", "0", "]", ")", ",", "torch", ".", "acos", "(", "torch", ".", "clamp", "(", "x", "[", "...", ",", "2", "]", "/", "torch", ".", "norm", "(", "x", ",", "dim", "=", "-", "1", ")", ",", "-", "1.", ",", "1.", ")", ")", ",", "x", "[", "...", ",", "2", "]", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.rotm": [[39, 41], ["model.zm", "model.zm", "model.ym"], "function", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.zm", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.zm", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.ym"], ["", "def", "rotm", "(", "x", ")", ":", "\n", "    ", "return", "zm", "(", "x", "[", "...", ",", "0", "]", ")", "@", "ym", "(", "x", "[", "...", ",", "1", "]", ")", "@", "zm", "(", "x", "[", "...", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.rifeat": [[43, 74], ["torch.mean", "torch.mean", "torch.mean", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm().expand_as", "torch.norm().expand_as", "torch.norm().expand_as", "model.c2s", "model.rotm", "torch.norm", "torch.norm", "torch.norm", "torch.einsum", "torch.einsum", "torch.einsum", "torch.cat", "torch.cat", "torch.cat", "points_r.expand.expand", "r_s2.expand", "torch.acos", "torch.acos", "torch.acos", "torch.norm", "torch.norm", "torch.norm", "torch.clamp", "torch.clamp", "torch.clamp"], "function", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.c2s", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.rotm"], ["", "def", "rifeat", "(", "points_r", ",", "points_s", ")", ":", "\n", "    ", "\"\"\"generate rotation invariant features\n\n    Args:\n        points_r (B x N x K x 3): \n        points_s (B x N x 1 x 3): \n    \"\"\"", "\n", "\n", "# [*, 3] -> [*, 8] with compatible intra-shapes", "\n", "if", "points_r", ".", "shape", "[", "1", "]", "!=", "points_s", ".", "shape", "[", "1", "]", ":", "\n", "        ", "points_r", "=", "points_r", ".", "expand", "(", "-", "1", ",", "points_s", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "", "r_mean", "=", "torch", ".", "mean", "(", "points_r", ",", "-", "2", ",", "keepdim", "=", "True", ")", "\n", "l1", ",", "l2", ",", "l3", "=", "r_mean", "-", "points_r", ",", "points_r", "-", "points_s", ",", "points_s", "-", "r_mean", "\n", "l1_norm", "=", "torch", ".", "norm", "(", "l1", ",", "'fro'", ",", "-", "1", ",", "True", ")", "\n", "l2_norm", "=", "torch", ".", "norm", "(", "l2", ",", "'fro'", ",", "-", "1", ",", "True", ")", "\n", "l3_norm", "=", "torch", ".", "norm", "(", "l3", ",", "'fro'", ",", "-", "1", ",", "True", ")", ".", "expand_as", "(", "l2_norm", ")", "\n", "theta1", "=", "(", "l1", "*", "l2", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "/", "(", "l1_norm", "*", "l2_norm", "+", "1e-7", ")", "\n", "theta2", "=", "(", "l2", "*", "l3", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "/", "(", "l2_norm", "*", "l3_norm", "+", "1e-7", ")", "\n", "theta3", "=", "(", "l3", "*", "l1", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "/", "(", "l3_norm", "*", "l1_norm", "+", "1e-7", ")", "\n", "\n", "# spherical mapping", "\n", "sx", "=", "c2s", "(", "points_s", ")", "\n", "sx", "[", "...", ",", "[", "0", ",", "2", "]", "]", "=", "sx", "[", "...", ",", "[", "2", ",", "0", "]", "]", "\n", "sx", "*=", "-", "1", "\n", "m", "=", "rotm", "(", "sx", ")", "# B x N x 1 x 3 x 3", "\n", "h", "=", "torch", ".", "norm", "(", "points_r", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "r_s2", "=", "points_r", "/", "h", "\n", "res", "=", "torch", ".", "einsum", "(", "'bnxy,bnky->bnkx'", ",", "m", "[", ":", ",", ":", ",", "0", "]", ",", "r_s2", ".", "expand", "(", "m", ".", "shape", "[", "0", "]", ",", "m", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "txj_inv_xi", "=", "torch", ".", "acos", "(", "torch", ".", "clamp", "(", "res", "[", "...", ",", "2", ":", "3", "]", ",", "-", "1.", ",", "1.", ")", ")", "/", "np", ".", "pi", "\n", "return", "torch", ".", "cat", "(", "[", "txj_inv_xi", ",", "h", ",", "l1_norm", ",", "l2_norm", ",", "l3_norm", ",", "theta1", ",", "theta2", ",", "theta3", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.model.conv_kernel": [[76, 85], ["layers.append", "torch.Sequential", "layers.append", "layers.append", "layers.append", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.ReLU"], "function", ["None"], ["", "def", "conv_kernel", "(", "iunit", ",", "ounit", ",", "*", "hunits", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "for", "unit", "in", "hunits", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "iunit", ",", "unit", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "LayerNorm", "(", "unit", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "iunit", "=", "unit", "\n", "", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "iunit", ",", "ounit", ")", ")", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.RAdam.__init__": [[7, 24], ["dict", "torch.optim.optimizer.Optimizer.__init__", "ValueError", "ValueError", "ValueError", "ValueError", "isinstance", "isinstance", "len", "range", "range"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "lr", "=", "1e-3", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ",", "eps", "=", "1e-8", ",", "weight_decay", "=", "0", ",", "degenerated_to_sgd", "=", "True", ")", ":", "\n", "        ", "if", "not", "0.0", "<=", "lr", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid learning rate: {}\"", ".", "format", "(", "lr", ")", ")", "\n", "", "if", "not", "0.0", "<=", "eps", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid epsilon value: {}\"", ".", "format", "(", "eps", ")", ")", "\n", "", "if", "not", "0.0", "<=", "betas", "[", "0", "]", "<", "1.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid beta parameter at index 0: {}\"", ".", "format", "(", "betas", "[", "0", "]", ")", ")", "\n", "", "if", "not", "0.0", "<=", "betas", "[", "1", "]", "<", "1.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid beta parameter at index 1: {}\"", ".", "format", "(", "betas", "[", "1", "]", ")", ")", "\n", "\n", "", "self", ".", "degenerated_to_sgd", "=", "degenerated_to_sgd", "\n", "if", "isinstance", "(", "params", ",", "(", "list", ",", "tuple", ")", ")", "and", "len", "(", "params", ")", ">", "0", "and", "isinstance", "(", "params", "[", "0", "]", ",", "dict", ")", ":", "\n", "            ", "for", "param", "in", "params", ":", "\n", "                ", "if", "'betas'", "in", "param", "and", "(", "param", "[", "'betas'", "]", "[", "0", "]", "!=", "betas", "[", "0", "]", "or", "param", "[", "'betas'", "]", "[", "1", "]", "!=", "betas", "[", "1", "]", ")", ":", "\n", "                    ", "param", "[", "'buffer'", "]", "=", "[", "[", "None", ",", "None", ",", "None", "]", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "", "", "", "defaults", "=", "dict", "(", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "eps", "=", "eps", ",", "weight_decay", "=", "weight_decay", ",", "buffer", "=", "[", "[", "None", ",", "None", ",", "None", "]", "for", "_", "in", "range", "(", "10", ")", "]", ")", "\n", "super", "(", "RAdam", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.RAdam.__setstate__": [[25, 27], ["super().__setstate__"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.AdamW.__setstate__"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "super", "(", "RAdam", ",", "self", ")", ".", "__setstate__", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.RAdam.step": [[28, 95], ["closure", "p.grad.data.float", "p.data.float", "exp_avg_sq.mul_().addcmul_", "exp_avg.mul_().add_", "RuntimeError", "len", "torch.zeros_like", "torch.zeros_like", "state[].type_as", "state[].type_as", "exp_avg_sq.sqrt().add_", "p.data.float.addcdiv_", "p.data.copy_", "exp_avg_sq.mul_", "exp_avg.mul_", "int", "p.data.float.add_", "p.data.float.add_", "p.data.copy_", "math.sqrt", "exp_avg_sq.sqrt", "p.data.float.add_"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "\n", "        ", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", ".", "float", "(", ")", "\n", "if", "grad", ".", "is_sparse", ":", "\n", "                    ", "raise", "RuntimeError", "(", "'RAdam does not support sparse gradients'", ")", "\n", "\n", "", "p_data_fp32", "=", "p", ".", "data", ".", "float", "(", ")", "\n", "\n", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                    ", "state", "[", "'step'", "]", "=", "0", "\n", "state", "[", "'exp_avg'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "", "else", ":", "\n", "                    ", "state", "[", "'exp_avg'", "]", "=", "state", "[", "'exp_avg'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "state", "[", "'exp_avg_sq'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "\n", "", "exp_avg", ",", "exp_avg_sq", "=", "state", "[", "'exp_avg'", "]", ",", "state", "[", "'exp_avg_sq'", "]", "\n", "beta1", ",", "beta2", "=", "group", "[", "'betas'", "]", "\n", "\n", "exp_avg_sq", ".", "mul_", "(", "beta2", ")", ".", "addcmul_", "(", "grad", ",", "grad", ",", "value", "=", "1", "-", "beta2", ")", "\n", "exp_avg", ".", "mul_", "(", "beta1", ")", ".", "add_", "(", "grad", ",", "alpha", "=", "1", "-", "beta1", ")", "\n", "\n", "state", "[", "'step'", "]", "+=", "1", "\n", "buffered", "=", "group", "[", "'buffer'", "]", "[", "int", "(", "state", "[", "'step'", "]", "%", "10", ")", "]", "\n", "if", "state", "[", "'step'", "]", "==", "buffered", "[", "0", "]", ":", "\n", "                    ", "N_sma", ",", "step_size", "=", "buffered", "[", "1", "]", ",", "buffered", "[", "2", "]", "\n", "", "else", ":", "\n", "                    ", "buffered", "[", "0", "]", "=", "state", "[", "'step'", "]", "\n", "beta2_t", "=", "beta2", "**", "state", "[", "'step'", "]", "\n", "N_sma_max", "=", "2", "/", "(", "1", "-", "beta2", ")", "-", "1", "\n", "N_sma", "=", "N_sma_max", "-", "2", "*", "state", "[", "'step'", "]", "*", "beta2_t", "/", "(", "1", "-", "beta2_t", ")", "\n", "buffered", "[", "1", "]", "=", "N_sma", "\n", "\n", "# more conservative since it's an approximated value", "\n", "if", "N_sma", ">=", "5", ":", "\n", "                        ", "step_size", "=", "math", ".", "sqrt", "(", "(", "1", "-", "beta2_t", ")", "*", "(", "N_sma", "-", "4", ")", "/", "(", "N_sma_max", "-", "4", ")", "*", "(", "N_sma", "-", "2", ")", "/", "N_sma", "*", "N_sma_max", "/", "(", "N_sma_max", "-", "2", ")", ")", "/", "(", "1", "-", "beta1", "**", "state", "[", "'step'", "]", ")", "\n", "", "elif", "self", ".", "degenerated_to_sgd", ":", "\n", "                        ", "step_size", "=", "1.0", "/", "(", "1", "-", "beta1", "**", "state", "[", "'step'", "]", ")", "\n", "", "else", ":", "\n", "                        ", "step_size", "=", "-", "1", "\n", "", "buffered", "[", "2", "]", "=", "step_size", "\n", "\n", "# more conservative since it's an approximated value", "\n", "", "if", "N_sma", ">=", "5", ":", "\n", "                    ", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                        ", "p_data_fp32", ".", "add_", "(", "p_data_fp32", ",", "alpha", "=", "-", "group", "[", "'weight_decay'", "]", "*", "group", "[", "'lr'", "]", ")", "\n", "", "denom", "=", "exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "p_data_fp32", ".", "addcdiv_", "(", "exp_avg", ",", "denom", ",", "value", "=", "-", "step_size", "*", "group", "[", "'lr'", "]", ")", "\n", "p", ".", "data", ".", "copy_", "(", "p_data_fp32", ")", "\n", "", "elif", "step_size", ">", "0", ":", "\n", "                    ", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                        ", "p_data_fp32", ".", "add_", "(", "p_data_fp32", ",", "alpha", "=", "-", "group", "[", "'weight_decay'", "]", "*", "group", "[", "'lr'", "]", ")", "\n", "", "p_data_fp32", ".", "add_", "(", "exp_avg", ",", "alpha", "=", "-", "step_size", "*", "group", "[", "'lr'", "]", ")", "\n", "p", ".", "data", ".", "copy_", "(", "p_data_fp32", ")", "\n", "\n", "", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.PlainRAdam.__init__": [[98, 112], ["dict", "torch.optim.optimizer.Optimizer.__init__", "ValueError", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "lr", "=", "1e-3", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ",", "eps", "=", "1e-8", ",", "weight_decay", "=", "0", ",", "degenerated_to_sgd", "=", "True", ")", ":", "\n", "        ", "if", "not", "0.0", "<=", "lr", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid learning rate: {}\"", ".", "format", "(", "lr", ")", ")", "\n", "", "if", "not", "0.0", "<=", "eps", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid epsilon value: {}\"", ".", "format", "(", "eps", ")", ")", "\n", "", "if", "not", "0.0", "<=", "betas", "[", "0", "]", "<", "1.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid beta parameter at index 0: {}\"", ".", "format", "(", "betas", "[", "0", "]", ")", ")", "\n", "", "if", "not", "0.0", "<=", "betas", "[", "1", "]", "<", "1.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid beta parameter at index 1: {}\"", ".", "format", "(", "betas", "[", "1", "]", ")", ")", "\n", "\n", "", "self", ".", "degenerated_to_sgd", "=", "degenerated_to_sgd", "\n", "defaults", "=", "dict", "(", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "eps", "=", "eps", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "super", "(", "PlainRAdam", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.PlainRAdam.__setstate__": [[113, 115], ["super().__setstate__"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.AdamW.__setstate__"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "super", "(", "PlainRAdam", ",", "self", ")", ".", "__setstate__", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.PlainRAdam.step": [[116, 171], ["closure", "p.grad.data.float", "p.data.float", "exp_avg_sq.mul_().addcmul_", "exp_avg.mul_().add_", "RuntimeError", "len", "torch.zeros_like", "torch.zeros_like", "state[].type_as", "state[].type_as", "exp_avg_sq.sqrt().add_", "p.data.float.addcdiv_", "p.data.copy_", "exp_avg_sq.mul_", "exp_avg.mul_", "p.data.float.add_", "p.data.float.add_", "p.data.copy_", "math.sqrt", "exp_avg_sq.sqrt", "p.data.float.add_"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "\n", "        ", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", ".", "float", "(", ")", "\n", "if", "grad", ".", "is_sparse", ":", "\n", "                    ", "raise", "RuntimeError", "(", "'RAdam does not support sparse gradients'", ")", "\n", "\n", "", "p_data_fp32", "=", "p", ".", "data", ".", "float", "(", ")", "\n", "\n", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                    ", "state", "[", "'step'", "]", "=", "0", "\n", "state", "[", "'exp_avg'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "", "else", ":", "\n", "                    ", "state", "[", "'exp_avg'", "]", "=", "state", "[", "'exp_avg'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "state", "[", "'exp_avg_sq'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "\n", "", "exp_avg", ",", "exp_avg_sq", "=", "state", "[", "'exp_avg'", "]", ",", "state", "[", "'exp_avg_sq'", "]", "\n", "beta1", ",", "beta2", "=", "group", "[", "'betas'", "]", "\n", "\n", "exp_avg_sq", ".", "mul_", "(", "beta2", ")", ".", "addcmul_", "(", "grad", ",", "grad", ",", "value", "=", "1", "-", "beta2", ")", "\n", "exp_avg", ".", "mul_", "(", "beta1", ")", ".", "add_", "(", "grad", ",", "alpha", "=", "1", "-", "beta1", ")", "\n", "\n", "state", "[", "'step'", "]", "+=", "1", "\n", "beta2_t", "=", "beta2", "**", "state", "[", "'step'", "]", "\n", "N_sma_max", "=", "2", "/", "(", "1", "-", "beta2", ")", "-", "1", "\n", "N_sma", "=", "N_sma_max", "-", "2", "*", "state", "[", "'step'", "]", "*", "beta2_t", "/", "(", "1", "-", "beta2_t", ")", "\n", "\n", "\n", "# more conservative since it's an approximated value", "\n", "if", "N_sma", ">=", "5", ":", "\n", "                    ", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                        ", "p_data_fp32", ".", "add_", "(", "p_data_fp32", ",", "alpha", "=", "-", "group", "[", "'weight_decay'", "]", "*", "group", "[", "'lr'", "]", ")", "\n", "", "step_size", "=", "group", "[", "'lr'", "]", "*", "math", ".", "sqrt", "(", "(", "1", "-", "beta2_t", ")", "*", "(", "N_sma", "-", "4", ")", "/", "(", "N_sma_max", "-", "4", ")", "*", "(", "N_sma", "-", "2", ")", "/", "N_sma", "*", "N_sma_max", "/", "(", "N_sma_max", "-", "2", ")", ")", "/", "(", "1", "-", "beta1", "**", "state", "[", "'step'", "]", ")", "\n", "denom", "=", "exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "p_data_fp32", ".", "addcdiv_", "(", "exp_avg", ",", "denom", ",", "value", "=", "-", "step_size", ")", "\n", "p", ".", "data", ".", "copy_", "(", "p_data_fp32", ")", "\n", "", "elif", "self", ".", "degenerated_to_sgd", ":", "\n", "                    ", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                        ", "p_data_fp32", ".", "add_", "(", "p_data_fp32", ",", "alpha", "=", "-", "group", "[", "'weight_decay'", "]", "*", "group", "[", "'lr'", "]", ")", "\n", "", "step_size", "=", "group", "[", "'lr'", "]", "/", "(", "1", "-", "beta1", "**", "state", "[", "'step'", "]", ")", "\n", "p_data_fp32", ".", "add_", "(", "exp_avg", ",", "alpha", "=", "-", "step_size", ")", "\n", "p", ".", "data", ".", "copy_", "(", "p_data_fp32", ")", "\n", "\n", "", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.AdamW.__init__": [[175, 188], ["dict", "torch.optim.optimizer.Optimizer.__init__", "ValueError", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "lr", "=", "1e-3", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ",", "eps", "=", "1e-8", ",", "weight_decay", "=", "0", ",", "warmup", "=", "0", ")", ":", "\n", "        ", "if", "not", "0.0", "<=", "lr", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid learning rate: {}\"", ".", "format", "(", "lr", ")", ")", "\n", "", "if", "not", "0.0", "<=", "eps", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid epsilon value: {}\"", ".", "format", "(", "eps", ")", ")", "\n", "", "if", "not", "0.0", "<=", "betas", "[", "0", "]", "<", "1.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid beta parameter at index 0: {}\"", ".", "format", "(", "betas", "[", "0", "]", ")", ")", "\n", "", "if", "not", "0.0", "<=", "betas", "[", "1", "]", "<", "1.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid beta parameter at index 1: {}\"", ".", "format", "(", "betas", "[", "1", "]", ")", ")", "\n", "\n", "", "defaults", "=", "dict", "(", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "eps", "=", "eps", ",", "\n", "weight_decay", "=", "weight_decay", ",", "warmup", "=", "warmup", ")", "\n", "super", "(", "AdamW", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.AdamW.__setstate__": [[189, 191], ["super().__setstate__"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.AdamW.__setstate__"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "super", "(", "AdamW", ",", "self", ")", ".", "__setstate__", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.sprin.radam.AdamW.step": [[192, 245], ["closure", "p.grad.data.float", "p.data.float", "exp_avg_sq.mul_().addcmul_", "exp_avg.mul_().add_", "exp_avg_sq.sqrt().add_", "p.data.float.addcdiv_", "p.data.copy_", "RuntimeError", "len", "torch.zeros_like", "torch.zeros_like", "state[].type_as", "state[].type_as", "p.data.float.add_", "exp_avg_sq.mul_", "exp_avg.mul_", "exp_avg_sq.sqrt", "math.sqrt"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "        ", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", ".", "float", "(", ")", "\n", "if", "grad", ".", "is_sparse", ":", "\n", "                    ", "raise", "RuntimeError", "(", "'Adam does not support sparse gradients, please consider SparseAdam instead'", ")", "\n", "\n", "", "p_data_fp32", "=", "p", ".", "data", ".", "float", "(", ")", "\n", "\n", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                    ", "state", "[", "'step'", "]", "=", "0", "\n", "state", "[", "'exp_avg'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "", "else", ":", "\n", "                    ", "state", "[", "'exp_avg'", "]", "=", "state", "[", "'exp_avg'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "state", "[", "'exp_avg_sq'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "\n", "", "exp_avg", ",", "exp_avg_sq", "=", "state", "[", "'exp_avg'", "]", ",", "state", "[", "'exp_avg_sq'", "]", "\n", "beta1", ",", "beta2", "=", "group", "[", "'betas'", "]", "\n", "\n", "state", "[", "'step'", "]", "+=", "1", "\n", "\n", "exp_avg_sq", ".", "mul_", "(", "beta2", ")", ".", "addcmul_", "(", "grad", ",", "grad", ",", "value", "=", "1", "-", "beta2", ")", "\n", "exp_avg", ".", "mul_", "(", "beta1", ")", ".", "add_", "(", "grad", ",", "alpha", "=", "1", "-", "beta1", ")", "\n", "\n", "denom", "=", "exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "bias_correction1", "=", "1", "-", "beta1", "**", "state", "[", "'step'", "]", "\n", "bias_correction2", "=", "1", "-", "beta2", "**", "state", "[", "'step'", "]", "\n", "\n", "if", "group", "[", "'warmup'", "]", ">", "state", "[", "'step'", "]", ":", "\n", "                    ", "scheduled_lr", "=", "1e-8", "+", "state", "[", "'step'", "]", "*", "group", "[", "'lr'", "]", "/", "group", "[", "'warmup'", "]", "\n", "", "else", ":", "\n", "                    ", "scheduled_lr", "=", "group", "[", "'lr'", "]", "\n", "\n", "", "step_size", "=", "scheduled_lr", "*", "math", ".", "sqrt", "(", "bias_correction2", ")", "/", "bias_correction1", "\n", "\n", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                    ", "p_data_fp32", ".", "add_", "(", "p_data_fp32", ",", "alpha", "=", "-", "group", "[", "'weight_decay'", "]", "*", "scheduled_lr", ")", "\n", "\n", "", "p_data_fp32", ".", "addcdiv_", "(", "exp_avg", ",", "denom", ",", "value", "=", "-", "step_size", ")", "\n", "\n", "p", ".", "data", ".", "copy_", "(", "p_data_fp32", ")", "\n", "\n", "", "", "return", "loss", "", "", "", ""]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.train.load_train_set": [[30, 55], ["h5py.File", "h5py.File", "h5py.File", "h5py.File", "h5py.File", "h5py.File", "h5py.File", "range", "print", "dataset.ShapeNetPartDataset", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "ff.close", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["logger", ".", "info", "(", "'Train'", "if", "train", "else", "'Test'", ")", "\n", "with", "contextlib", ".", "suppress", "(", ")", "if", "train", "else", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "pcs", ",", "segs_centered", ",", "segs", ",", "fps_idxs", ",", "cls_idxs", ")", "in", "enumerate", "(", "df", ")", ":", "\n", "            ", "if", "train", ":", "\n", "                ", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "", "onehot_idxs", "=", "torch", ".", "eye", "(", "16", ")", "[", "cls_idxs", "]", "\n", "pred_batch", "=", "net", "(", "pcs", ".", "cuda", "(", ")", ".", "float", "(", ")", ",", "fps_idxs", ",", "onehot_idxs", ".", "cuda", "(", ")", ".", "float", "(", ")", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "pred_batch", ",", "segs_centered", ".", "cuda", "(", ")", ".", "long", "(", ")", ")", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "iou", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "for", "pred", ",", "seg_centered", ",", "seg", "in", "zip", "(", "pred_batch", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "segs_centered", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "segs", ")", ":", "\n", "                ", "cat", "=", "seg_label_to_cat", "[", "seg", "[", "0", "]", ".", "item", "(", ")", "]", "\n", "pred", "=", "pred", ".", "argmax", "(", "0", ")", "\n", "acc", "=", "np", ".", "mean", "(", "(", "pred", "==", "seg_centered", ")", ".", "astype", "(", "np", ".", "float", ")", ")", "\n", "part_ious", "=", "[", "0", "]", "*", "len", "(", "seg_classes", "[", "cat", "]", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "seg_classes", "[", "cat", "]", ")", ")", ":", "\n", "                    ", "if", "np", ".", "sum", "(", "(", "pred", "==", "j", ")", "|", "(", "seg_centered", "==", "j", ")", ")", "==", "0", ":", "\n", "                        ", "part_ious", "[", "j", "]", "=", "1", "\n", "continue", "\n", "", "part_ious", "[", "j", "]", "=", "np", ".", "sum", "(", "(", "pred", "==", "j", ")", "&", "(", "seg_centered", "==", "j", ")", ")", "/", "np", ".", "sum", "(", "(", "pred", "==", "j", ")", "|", "(", "seg_centered", "==", "j", ")", ")", "\n", "", "iou", ".", "append", "(", "np", ".", "mean", "(", "part_ious", ")", ")", "\n", "accs", ".", "append", "(", "acc", ".", "item", "(", ")", ")", "\n", "shape_ious", "[", "cat", "]", ".", "append", "(", "iou", "[", "-", "1", "]", ")", "\n", "", "running_iou", "+=", "np", ".", "mean", "(", "iou", ")", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.train.load_test_set": [[57, 77], ["h5py.File", "h5py.File", "range", "print", "dataset.ShapeNetPartDataset", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "hydra.utils.to_absolute_path", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "ff.close", "os.path.join", "os.path.join"], "function", ["None"], ["cmiou", "=", "np", ".", "mean", "(", "list", "(", "map", "(", "np", ".", "mean", ",", "shape_ious", ".", "values", "(", ")", ")", ")", ")", "\n", "n", "+=", "1", "\n", "if", "train", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "", "logger", ".", "info", "(", "\"[%s%d, %d] Loss: %.4f, Acc: %.4f, mIoU: %.4f, cmIoU: %.4f \"", "\n", "%", "(", "\"VT\"", "[", "train", "]", ",", "epoch", ",", "n", ",", "\n", "running_loss", "/", "n", ",", "running_acc", "/", "n", ",", "running_iou", "/", "n", ",", "cmiou", ")", ")", "\n", "\n", "\n", "", "for", "cat", "in", "shape_ious", ".", "keys", "(", ")", ":", "\n", "            ", "logger", ".", "info", "(", "'{} IoU: {:.4f}'", ".", "format", "(", "cat", ",", "np", ".", "mean", "(", "shape_ious", "[", "cat", "]", ")", ")", ")", "\n", "\n", "", "", "", "@", "hydra", ".", "main", "(", "config_path", "=", "'config'", ",", "config_name", "=", "'shapenet'", ")", "\n", "def", "main", "(", "cfg", ")", ":", "\n", "    ", "net", "=", "SPRINSeg", "(", "6", ",", "cfg", ".", "fps_n", ")", ".", "cuda", "(", ")", "\n", "if", "len", "(", "cfg", ".", "resume_path", ")", ">", "0", ":", "\n", "        ", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "hydra", ".", "utils", ".", "to_absolute_path", "(", "cfg", ".", "resume_path", ")", ")", ")", "\n", "", "opt", "=", "radam", ".", "RAdam", "(", "net", ".", "parameters", "(", ")", ",", "cfg", ".", "lr", ",", "weight_decay", "=", "cfg", ".", "weight_decay", ")", "\n", "pcs_train", ",", "segs_centered_train", ",", "segs_train", "=", "read_data", "(", "hydra", ".", "utils", ".", "to_absolute_path", "(", "'shapenet_part_seg_hdf5_data'", ")", ",", "r'ply_data_(train|val).*\\.h5'", ")", "\n", "pcs_test", ",", "segs_centered_test", ",", "segs_test", "=", "read_data", "(", "hydra", ".", "utils", ".", "to_absolute_path", "(", "'shapenet_part_seg_hdf5_data'", ")", ",", "r'ply_data_test.*\\.h5'", ")", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.train.main": [[81, 225], ["hydra.main", "hydra.main", "logging.getLogger", "logging.getLogger.info", "model.Model", "model.Model.cuda", "logging.getLogger.info", "train.load_train_set", "train.load_test_set", "torch.utils.data.BatchSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.optim.Adam", "torch.optim.Adam", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "range", "os.path.isdir", "os.mkdir", "model.Model.load_state_dict", "dataset.BalancedSampler", "model.Model.parameters", "model.Model.train", "model.Model.", "prediction.view.view", "target.view.view", "torch.nll_loss", "[].eq().float().cpu().mean", "zip", "numpy.random.seed", "train.main.get_learning_rate"], "function", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.test.main", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.test.main", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.train.load_train_set", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.train.load_test_set"], ["\n", "for", "e", "in", "range", "(", "1", ",", "cfg", ".", "max_epoch", ")", ":", "\n", "        ", "run_epoch", "(", "net", ",", "pcs_train", ",", "segs_centered_train", ",", "segs_train", ",", "opt", ",", "e", ",", "ds", "=", "cfg", ".", "npoints", ",", "batchsize", "=", "cfg", ".", "batch_size", ")", "\n", "\n", "if", "e", "%", "10", "==", "0", ":", "\n", "            ", "run_epoch", "(", "net", ",", "pcs_test", ",", "segs_centered_test", ",", "segs_test", ",", "opt", ",", "e", ",", "train", "=", "False", ",", "ds", "=", "cfg", ".", "npoints", ",", "batchsize", "=", "cfg", ".", "batch_size", ",", "rand_rot", "=", "True", ")", "\n", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "'epoch{}.pt'", ".", "format", "(", "e", ")", ")", "\n", "\n", "", "", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "main", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.BalancedSampler.__init__": [[46, 49], ["torch.utils.data.Sampler.__init__"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["        ", "centroids", "[", "i", "]", "=", "farthest", "\n", "centroid", "=", "xyz", "[", "farthest", ",", ":", "]", "[", "None", "]", "\n", "dist", "=", "np", ".", "sum", "(", "(", "xyz", "-", "centroid", ")", "**", "2", ",", "-", "1", ")", "\n", "mask", "=", "dist", "<", "distance", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.BalancedSampler.__iter__": [[50, 55], ["range", "dataset.BalancedSampler.dataset.balanced_indices_sample", "len"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.ShapeNetPartDataset.balanced_indices_sample"], ["distance", "[", "mask", "]", "=", "dist", "[", "mask", "]", "\n", "farthest", "=", "np", ".", "argmax", "(", "distance", ",", "-", "1", ")", "\n", "", "return", "centroids", "\n", "\n", "\n", "", "def", "shift_point_cloud", "(", "batch_data", ",", "shift_range", "=", "0.1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.BalancedSampler.__len__": [[56, 58], ["len"], "methods", ["None"], ["    "]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.ShapeNetPartDataset.__init__": [[62, 69], ["None"], "methods", ["None"], ["B", ",", "N", ",", "C", "=", "batch_data", ".", "shape", "\n", "shifts", "=", "np", ".", "random", ".", "uniform", "(", "-", "shift_range", ",", "shift_range", ",", "(", "B", ",", "3", ")", ")", "\n", "for", "batch_index", "in", "range", "(", "B", ")", ":", "\n", "        ", "batch_data", "[", "batch_index", ",", ":", ",", ":", "]", "+=", "shifts", "[", "batch_index", ",", ":", "]", "\n", "", "return", "batch_data", "\n", "\n", "\n", "", "def", "random_scale_point_cloud", "(", "batch_data", ",", "scale_low", "=", "0.8", ",", "scale_high", "=", "1.25", ")", ":", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.ShapeNetPartDataset.__len__": [[70, 72], ["len"], "methods", ["None"], ["    "]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.ShapeNetPartDataset.balanced_indices_sample": [[73, 83], ["numpy.zeros", "numpy.all", "numpy.random.randint", "results.append", "len"], "methods", ["None"], ["\n", "B", ",", "N", ",", "C", "=", "batch_data", ".", "shape", "\n", "scales", "=", "np", ".", "random", ".", "uniform", "(", "scale_low", ",", "scale_high", ",", "B", ")", "\n", "for", "batch_index", "in", "range", "(", "B", ")", ":", "\n", "        ", "batch_data", "[", "batch_index", ",", ":", ",", ":", "]", "*=", "scales", "[", "batch_index", "]", "\n", "", "return", "batch_data", "\n", "\n", "\n", "", "def", "jitter_point_cloud", "(", "batch_data", ",", "sigma", "=", "0.01", ",", "clip", "=", "0.05", ")", ":", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.ShapeNetPartDataset.__getitem__": [[84, 121], ["numpy.array", "numpy.random.randint", "numpy.array", "numpy.linalg.norm", "numpy.clip", "lie_learn.spaces.S2.change_coordinates", "numpy.stack", "numpy.clip", "numpy.asarray", "dataset.rnd_rot", "numpy.einsum", "numpy.einsum", "dataset.rnd_rot", "numpy.eye", "sampling.compute", "numpy.moveaxis", "numpy.asarray.astype", "numpy.clip.astype", "numpy.array.astype", "labels.astype", "numpy.linalg.norm", "numpy.sin", "numpy.random.rand", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.rnd_rot", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.rnd_rot"], ["    ", "\"\"\" Randomly jitter points. jittering is per point.\n        Input:\n          BxNx3 array, original batch of point clouds\n        Return:\n          BxNx3 array, jittered batch of point clouds\n    \"\"\"", "\n", "B", ",", "N", ",", "C", "=", "batch_data", ".", "shape", "\n", "assert", "(", "clip", ">", "0", ")", "\n", "jittered_data", "=", "np", ".", "clip", "(", "sigma", "*", "np", ".", "random", ".", "randn", "(", "B", ",", "N", ",", "C", ")", ",", "-", "1", "*", "clip", ",", "clip", ")", "\n", "jittered_data", "+=", "batch_data", "\n", "return", "jittered_data", "\n", "\n", "\n", "", "class", "ShapeNetPartDataset", "(", "torch", ".", "utils", ".", "data", ".", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "data", ",", "pids", ",", "origin_pids", ",", "ds", ",", "rand_rot", ",", "aug", "=", "False", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "pids", "=", "pids", "\n", "self", ".", "origin_pids", "=", "origin_pids", "\n", "self", ".", "ds", "=", "ds", "\n", "self", ".", "rand_rot", "=", "rand_rot", "\n", "self", ".", "aug", "=", "aug", "\n", "self", ".", "valid_names", "=", "list", "(", "seg_classes", ".", "keys", "(", ")", ")", "\n", "self", ".", "valid_idxs", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", "if", "seg_label_to_cat", "[", "self", ".", "origin_pids", "[", "i", "]", "[", "0", "]", "]", "in", "self", ".", "valid_names", "]", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx", "=", "self", ".", "valid_idxs", "[", "idx", "]", "\n", "data", "=", "self", ".", "data", "[", "idx", "]", "\n", "pids", "=", "self", ".", "pids", "[", "idx", "]", "\n", "origin_pids", "=", "self", ".", "origin_pids", "[", "idx", "]", "\n", "\n", "if", "self", ".", "aug", ":", "\n", "            ", "data", "=", "jitter_point_cloud", "(", "data", "[", "None", "]", ")", "[", "0", "]", "\n", "\n", "", "npoints", "=", "data", ".", "shape", "[", "0", "]", "\n", "if", "self", ".", "ds", "is", "not", "None", ":", "\n", "            ", "idx", "=", "np", ".", "arange", "(", "npoints", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idx", ")", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.rotmat": [[12, 36], ["z().dot().dot", "numpy.array", "numpy.array", "dataset.rotmat.z"], "function", ["None"], ["seg_label_to_cat", "=", "{", "}", "\n", "for", "cat", ",", "labels", "in", "seg_classes", ".", "items", "(", ")", ":", "\n", "    ", "for", "label", "in", "labels", ":", "\n", "        ", "seg_label_delta", "[", "label", "]", "=", "min", "(", "labels", ")", "\n", "seg_label_to_cat", "[", "label", "]", "=", "cat", "\n", "\n", "\n", "", "", "def", "read_data", "(", "dir_name", ",", "path", ")", ":", "\n", "    ", "def", "read", "(", "filepath", ")", ":", "\n", "        ", "with", "h5py", ".", "File", "(", "filepath", ",", "'r'", ")", "as", "fi", ":", "\n", "            ", "pcs", "=", "fi", "[", "'data'", "]", "[", ":", "]", "\n", "pcs", "-=", "pcs", ".", "mean", "(", "-", "2", ",", "keepdims", "=", "True", ")", "\n", "pcs", "/=", "np", ".", "max", "(", "np", ".", "linalg", ".", "norm", "(", "pcs", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", ",", "-", "2", ",", "keepdims", "=", "True", ")", "\n", "pid", "=", "np", ".", "array", "(", "fi", "[", "'pid'", "]", "[", ":", "]", ")", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "list", "(", "pid", ")", ")", ":", "\n", "                ", "pid", "[", "i", "]", "-=", "seg_label_delta", "[", "c", "[", "0", "]", "]", "\n", "", "return", "pcs", ",", "pid", ",", "fi", "[", "'pid'", "]", "[", ":", "]", "\n", "", "", "Q", "=", "[", "]", "\n", "for", "f", "in", "glob", "(", "os", ".", "path", ".", "join", "(", "dir_name", ",", "'*'", ")", ")", ":", "\n", "        ", "if", "re", ".", "search", "(", "path", ",", "f", ")", ":", "\n", "            ", "Q", ".", "append", "(", "read", "(", "f", ")", ")", "\n", "", "", "pcds", ",", "pids", ",", "origin_pids", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "pcd", ",", "pid", ",", "lab", "in", "Q", ":", "\n", "        ", "pcds", ".", "append", "(", "pcd", ")", ",", "pids", ".", "append", "(", "pid", ")", ",", "origin_pids", ".", "append", "(", "lab", ")", "\n", "", "return", "np", ".", "concatenate", "(", "pcds", ")", ",", "np", ".", "concatenate", "(", "pids", ")", ",", "np", ".", "concatenate", "(", "origin_pids", ")", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.rnd_rot": [[38, 44], ["dataset.rotmat", "numpy.arccos", "numpy.random.rand", "numpy.random.rand", "numpy.random.rand"], "function", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.dataset.rotmat"], ["\n", "", "def", "fps", "(", "xyz", ",", "npoint", ")", ":", "\n", "    ", "N", "=", "xyz", ".", "shape", "[", "0", "]", "\n", "centroids", "=", "np", ".", "zeros", "(", "(", "npoint", ",", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "distance", "=", "np", ".", "ones", "(", "N", ",", ")", "*", "1e10", "\n", "farthest", "=", "np", ".", "random", ".", "randint", "(", "N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.test.main": [[54, 120], ["hydra.main", "hydra.utils.to_absolute_path", "model.Model", "model.Model.cuda", "model.Model.load_state_dict", "print", "train.load_test_set", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "model.Model.eval", "enumerate", "print", "shape_ious.keys", "print", "shape_ious.keys", "torch.load", "torch.load", "torch.LongTensor", "torch.LongTensor", "torch.zeros().scatter_().cuda", "torch.zeros().scatter_().cuda", "prediction.view.view", "target.view.view", "range", "print", "numpy.mean", "print", "sum", "seg_classes.keys", "data.cuda", "target_index.cuda", "target.view.cuda", "torch.no_grad", "torch.no_grad", "model.Model.", "target.view.size", "numpy.mean", "shape_ious[].append", "len", "all_shape_ious.append", "numpy.mean", "numpy.nanmean", "multiprocessing.cpu_count", "torch.zeros().scatter_", "torch.zeros().scatter_", "[].argmax", "target.view.cpu().numpy", "numpy.mean", "list", "x.numel", "range", "shape_ious.values", "model.Model.parameters", "torch.zeros", "torch.zeros", "target.view.cpu", "len", "numpy.sum", "numpy.sum", "numpy.sum", "float", "category.size", "target.view.cpu().numpy", "numpy.sum", "prediction.view.cpu().numpy", "target.view.cpu", "prediction.view.cpu"], "function", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.test.main", "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.train.load_test_set"], []], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.GammaMean.__init__": [[13, 16], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["\n", "\n", "def", "zm", "(", "a", ")", ":", "\n", "    ", "zeros", "=", "torch", ".", "zeros_like", "(", "a", ")", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.GammaMean.forward": [[17, 19], ["model.GammaMean.fc", "x.mean"], "methods", ["None"], ["ones", "=", "torch", ".", "ones_like", "(", "a", ")", "\n", "return", "torch", ".", "stack", "(", "[", "torch", ".", "cos", "(", "a", ")", ",", "-", "torch", ".", "sin", "(", "a", ")", ",", "zeros", ",", "torch", ".", "sin", "(", "a", ")", ",", "torch", ".", "cos", "(", "a", ")", ",", "zeros", ",", "zeros", ",", "zeros", ",", "ones", "]", ",", "-", "1", ")", ".", "reshape", "(", "*", "a", ".", "shape", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.Model.__init__": [[22, 52], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "s2cnn.s2_equatorial_grid", "sequence.append", "range", "sequence.append", "sequence.append", "sequence.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "s2cnn.S2HConvolution", "sequence.append", "sequence.append", "s2cnn.so3_equatorial_grid", "sequence.append", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "model.GammaMean", "len", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "s2cnn.SO3Convolution"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["    ", "zeros", "=", "torch", ".", "zeros_like", "(", "a", ")", "\n", "ones", "=", "torch", ".", "ones_like", "(", "a", ")", "\n", "return", "torch", ".", "stack", "(", "[", "torch", ".", "cos", "(", "a", ")", ",", "zeros", ",", "torch", ".", "sin", "(", "a", ")", ",", "zeros", ",", "ones", ",", "zeros", ",", "-", "torch", ".", "sin", "(", "a", ")", ",", "zeros", ",", "torch", ".", "cos", "(", "a", ")", "]", ",", "-", "1", ")", ".", "reshape", "(", "*", "a", ".", "shape", ",", "3", ",", "3", ")", "\n", "\n", "\n", "", "def", "c2s", "(", "x", ")", ":", "\n", "    ", "\"\"\"cartesan to spherical coordinates\n\n    Args:\n        x (... x 3): \n\n    Returns:\n        ... x 2: \n    \"\"\"", "\n", "return", "torch", ".", "stack", "(", "[", "torch", ".", "atan2", "(", "x", "[", "...", ",", "1", "]", ",", "x", "[", "...", ",", "0", "]", ")", ",", "torch", ".", "acos", "(", "torch", ".", "clamp", "(", "x", "[", "...", ",", "2", "]", "/", "torch", ".", "norm", "(", "x", ",", "dim", "=", "-", "1", ")", ",", "-", "1.", ",", "1.", ")", ")", ",", "x", "[", "...", ",", "2", "]", "]", ",", "-", "1", ")", "\n", "\n", "\n", "", "def", "rotm", "(", "x", ")", ":", "\n", "    ", "return", "zm", "(", "x", "[", "...", ",", "0", "]", ")", "@", "ym", "(", "x", "[", "...", ",", "1", "]", ")", "@", "zm", "(", "x", "[", "...", ",", "2", "]", ")", "\n", "\n", "\n", "", "def", "rifeat", "(", "points_r", ",", "points_s", ")", ":", "\n", "    ", "\"\"\"generate rotation invariant features\n\n    Args:\n        points_r (B x N x K x 3): \n        points_s (B x N x 1 x 3): \n    \"\"\"", "\n", "\n", "# [*, 3] -> [*, 8] with compatible intra-shapes", "\n", "if", "points_r", ".", "shape", "[", "1", "]", "!=", "points_s", ".", "shape", "[", "1", "]", ":", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.Model.forward": [[54, 73], ["model.Model.sequential", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "features.squeeze().squeeze().permute().contiguous.squeeze().squeeze().permute().contiguous.squeeze().squeeze().permute().contiguous", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "model.Model.linear2", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "model.Model.linear1", "features.squeeze().squeeze().permute().contiguous.squeeze().squeeze().permute().contiguous.squeeze().squeeze().permute", "cat_onehot[].repeat", "features.squeeze().squeeze().permute().contiguous.squeeze().squeeze().permute().contiguous.size", "features.squeeze().squeeze().permute().contiguous.squeeze().squeeze().permute().contiguous.squeeze().squeeze", "features.squeeze().squeeze().permute().contiguous.squeeze().squeeze().permute().contiguous.squeeze"], "methods", ["None"], ["\n", "", "r_mean", "=", "torch", ".", "mean", "(", "points_r", ",", "-", "2", ",", "keepdim", "=", "True", ")", "\n", "l1", ",", "l2", ",", "l3", "=", "r_mean", "-", "points_r", ",", "points_r", "-", "points_s", ",", "points_s", "-", "r_mean", "\n", "l1_norm", "=", "torch", ".", "norm", "(", "l1", ",", "'fro'", ",", "-", "1", ",", "True", ")", "\n", "l2_norm", "=", "torch", ".", "norm", "(", "l2", ",", "'fro'", ",", "-", "1", ",", "True", ")", "\n", "l3_norm", "=", "torch", ".", "norm", "(", "l3", ",", "'fro'", ",", "-", "1", ",", "True", ")", ".", "expand_as", "(", "l2_norm", ")", "\n", "theta1", "=", "(", "l1", "*", "l2", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "/", "(", "l1_norm", "*", "l2_norm", "+", "1e-7", ")", "\n", "theta2", "=", "(", "l2", "*", "l3", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "/", "(", "l2_norm", "*", "l3_norm", "+", "1e-7", ")", "\n", "theta3", "=", "(", "l3", "*", "l1", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "/", "(", "l3_norm", "*", "l1_norm", "+", "1e-7", ")", "\n", "\n", "# spherical mapping", "\n", "sx", "=", "c2s", "(", "points_s", ")", "\n", "sx", "[", "...", ",", "[", "0", ",", "2", "]", "]", "=", "sx", "[", "...", ",", "[", "2", ",", "0", "]", "]", "\n", "sx", "*=", "-", "1", "\n", "m", "=", "rotm", "(", "sx", ")", "# B x N x 1 x 3 x 3", "\n", "h", "=", "torch", ".", "norm", "(", "points_r", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "r_s2", "=", "points_r", "/", "h", "\n", "res", "=", "torch", ".", "einsum", "(", "'bnxy,bnky->bnkx'", ",", "m", "[", ":", ",", ":", ",", "0", "]", ",", "r_s2", ".", "expand", "(", "m", ".", "shape", "[", "0", "]", ",", "m", ".", "shape", "[", "1", "]", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "txj_inv_xi", "=", "torch", ".", "acos", "(", "torch", ".", "clamp", "(", "res", "[", "...", ",", "2", ":", "3", "]", ",", "-", "1.", ",", "1.", ")", ")", "/", "np", ".", "pi", "\n", "return", "torch", ".", "cat", "(", "[", "txj_inv_xi", ",", "h", ",", "l1_norm", ",", "l2_norm", ",", "l3_norm", ",", "theta1", ",", "theta2", ",", "theta3", "]", ",", "dim", "=", "-", "1", ")", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__": [[76, 116], ["torch.Module.__init__", "s2cnn.s2_equatorial_grid", "sequence.append", "range", "sequence.append", "sequence.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "s2cnn.S2HConvolution", "sequence.append", "sequence.append", "s2cnn.so3_equatorial_grid", "sequence.append", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "fcs.append", "len", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "s2cnn.SO3Convolution", "len", "torch.Linear", "torch.Linear", "torch.Linear", "fcs.append", "fcs.append", "len", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.__init__"], ["", "def", "conv_kernel", "(", "iunit", ",", "ounit", ",", "*", "hunits", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "for", "unit", "in", "hunits", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "iunit", ",", "unit", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "LayerNorm", "(", "unit", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "iunit", "=", "unit", "\n", "", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "iunit", ",", "ounit", ")", ")", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "\n", "", "class", "SparseSO3Conv", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "rank", ",", "n_in", ",", "n_out", ",", "*", "kernel_interns", ",", "layer_norm", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "kernel", "=", "conv_kernel", "(", "8", ",", "rank", ",", "*", "kernel_interns", ")", "\n", "self", ".", "outnet", "=", "nn", ".", "Linear", "(", "rank", "*", "n_in", ",", "n_out", ")", "\n", "self", ".", "rank", "=", "rank", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "n_out", ")", "if", "layer_norm", "else", "None", "\n", "\n", "", "def", "do_conv_ranked", "(", "self", ",", "r_inv_s", ",", "feat", ")", ":", "\n", "# [b, n, k, rank], [b, n, k, cin] -> [b, n, cout]", "\n", "        ", "kern", "=", "self", ".", "kernel", "(", "r_inv_s", ")", ".", "reshape", "(", "*", "feat", ".", "shape", "[", ":", "-", "1", "]", ",", "self", ".", "rank", ")", "\n", "# PointConv-like optimization", "\n", "contracted", "=", "torch", ".", "einsum", "(", "\"bnkr,bnki->bnri\"", ",", "kern", ",", "feat", ")", ".", "flatten", "(", "-", "2", ")", "\n", "return", "self", ".", "outnet", "(", "contracted", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "feat_points", ",", "feat", ",", "eval_points", ")", ":", "\n", "        ", "eval_points_e", "=", "torch", ".", "unsqueeze", "(", "eval_points", ",", "-", "2", ")", "\n", "r_inv_s", "=", "rifeat", "(", "feat_points", ",", "eval_points_e", ")", "\n", "conv", "=", "self", ".", "do_conv_ranked", "(", "r_inv_s", ",", "feat", ")", "\n", "if", "self", ".", "layer_norm", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "layer_norm", "(", "conv", ")", "\n", "", "return", "conv", "\n", "\n", "\n", "", "", "class", "GlobalInfoProp", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "n_in", ",", "n_global", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "n_in", ",", "n_global", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.ModelCls.forward": [[117, 124], ["model.ModelCls.sequential", "model.ModelCls.mean", "model.ModelCls.out_layer", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "model.ModelCls.view().max", "model.ModelCls.view", "model.ModelCls.size", "model.ModelCls.size"], "methods", ["None"], ["# [b, k, n_in] -> [b, k, n_in + n_global]", "\n", "        ", "tran", "=", "self", ".", "linear", "(", "feat", ")", "\n", "glob", "=", "tran", ".", "max", "(", "-", "2", ",", "keepdim", "=", "True", ")", "[", "0", "]", ".", "expand", "(", "*", "feat", ".", "shape", "[", ":", "-", "1", "]", ",", "tran", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "torch", ".", "cat", "(", "[", "feat", ",", "glob", "]", ",", "-", "1", ")", "\n", "\n", "\n", "", "", "class", "Neighbourhood", "(", "nn", ".", "Module", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.qq456cvb_SPRIN.prin.model.s2_rotation": [[126, 129], ["s2cnn.so3_rotation", "s2cnn.so3_rotation.view().expand", "s2cnn.so3_rotation.size", "s2cnn.so3_rotation.view", "s2cnn.so3_rotation.size", "s2cnn.so3_rotation.size"], "function", ["None"], ["# points: [*, 3] out: [*, k // stride]", "\n", "        ", "self_dist", "=", "torch", ".", "cdist", "(", "points_query", ",", "points_target", ")", "\n", "_", ",", "knn_indices", "=", "torch", ".", "topk", "(", "self_dist", ",", "k", ",", "-", "1", ",", "False", ",", "False", ")", "\n", "knn_indices", "=", "knn_indices", "[", "...", ",", "torch", ".", "randperm", "(", "knn_indices", ".", "size", "(", "-", "1", ")", ")", "]", "\n"]]}