{"home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.utilities_mnist.load_train_data": [[11, 45], ["scipy.loadmat", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "itertools.product", "set", "itertools.product", "itertools.product", "tncontract.Tensor", "range", "range", "set", "range", "range", "range", "range", "range", "tncontract.Tensor", "range", "int", "range", "numpy.sin", "range", "len", "numpy.cos", "list", "itertools.combinations", "int", "range"], "function", ["None"], ["def", "load_train_data", "(", "filename", ",", "n_train", ",", "n_train_each", ",", "bond_label", ",", "bond_data", ",", "current_class", ")", ":", "\n", "    ", "image", "=", "sio", ".", "loadmat", "(", "filename", ")", "\n", "image_group", "=", "image", "[", "'Data_group'", "]", "\n", "data_group", "=", "np", ".", "zeros", "(", "\n", "(", "16", ",", "16", ",", "10", ",", "image_group", ".", "shape", "[", "3", "]", ",", "bond_data", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n", "for", "i", "in", "range", "(", "bond_data", ")", ":", "\n", "        ", "data_group", "[", ":", ",", ":", ",", ":", ",", ":", ",", "i", "]", "=", "(", "len", "(", "[", "c", "for", "c", "in", "combinations", "(", "range", "(", "bond_data", "-", "1", ")", ",", "i", ")", "]", ")", "**", "0.5", ")", "*", "np", ".", "cos", "(", "(", "image_group", ")", "*", "(", "np", ".", "pi", "/", "2", ")", ")", "**", "(", "bond_data", "-", "(", "i", "+", "1", ")", ")", "*", "np", ".", "sin", "(", "\n", "(", "image_group", ")", "*", "(", "np", ".", "pi", "/", "2", ")", ")", "**", "i", "\n", "\n", "", "train_data", "=", "np", ".", "zeros", "(", "(", "16", ",", "16", ",", "bond_data", ",", "n_train", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "label_data", "=", "np", ".", "zeros", "(", "(", "n_train", ",", "bond_label", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n", "for", "k", ",", "m", "in", "product", "(", "range", "(", "bond_data", ")", ",", "range", "(", "n_train_each", ")", ")", ":", "\n", "        ", "train_data", "[", ":", ",", ":", ",", "k", ",", "m", "]", "=", "data_group", "[", ":", ",", ":", ",", "current_class", ",", "m", ",", "k", "]", "\n", "\n", "", "cc", "=", "set", "(", "[", "current_class", "]", ")", "\n", "rest", "=", "set", "(", "range", "(", "0", ",", "10", ")", ")", "-", "cc", "\n", "\n", "for", "k", ",", "l", ",", "m", "in", "product", "(", "range", "(", "bond_data", ")", ",", "range", "(", "9", ")", ",", "range", "(", "int", "(", "n_train_each", "/", "9", ")", ")", ")", ":", "\n", "        ", "train_data", "[", ":", ",", ":", ",", "k", ",", "n_train_each", "+", "l", "*", "\n", "int", "(", "n_train_each", "/", "9", ")", "+", "m", "]", "=", "data_group", "[", ":", ",", ":", ",", "list", "(", "rest", ")", "[", "l", "]", ",", "m", ",", "k", "]", "\n", "\n", "", "label_data", "[", "0", ":", "n_train_each", "]", "=", "[", "1", ",", "0", "]", "\n", "label_data", "[", "n_train_each", ":", "n_train", "]", "=", "[", "0", ",", "1", "]", "\n", "\n", "data_tensor", "=", "[", "[", "0", "for", "col", "in", "range", "(", "16", ")", "]", "for", "row", "in", "range", "(", "16", ")", "]", "\n", "for", "i", ",", "j", "in", "product", "(", "range", "(", "16", ")", ",", "range", "(", "16", ")", ")", ":", "\n", "        ", "data_tensor", "[", "i", "]", "[", "j", "]", "=", "tn", ".", "Tensor", "(", "\n", "train_data", "[", "i", ",", "j", ",", ":", ",", ":", "]", ",", "labels", "=", "[", "\"up\"", ",", "\"down\"", "]", ")", "\n", "\n", "", "label_tensor", "=", "tn", ".", "Tensor", "(", "label_data", ",", "labels", "=", "[", "\"up\"", ",", "\"down\"", "]", ")", "\n", "return", "data_tensor", ",", "label_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.utilities_mnist.load_test_data": [[47, 69], ["scipy.loadmat", "numpy.zeros", "range", "numpy.zeros", "itertools.product", "itertools.product", "range", "range", "range", "range", "range", "tncontract.Tensor", "range", "numpy.sin", "range", "len", "numpy.cos", "itertools.combinations", "range"], "function", ["None"], ["", "def", "load_test_data", "(", "filename", ",", "n_test", ",", "n_test_each", ",", "bond_data", ")", ":", "\n", "    ", "image", "=", "sio", ".", "loadmat", "(", "filename", ")", "\n", "image_group", "=", "image", "[", "'Data_test_group'", "]", "\n", "data_group", "=", "np", ".", "zeros", "(", "\n", "(", "16", ",", "16", ",", "10", ",", "image_group", ".", "shape", "[", "3", "]", ",", "bond_data", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n", "for", "i", "in", "range", "(", "bond_data", ")", ":", "\n", "        ", "data_group", "[", ":", ",", ":", ",", ":", ",", ":", ",", "i", "]", "=", "(", "len", "(", "[", "c", "for", "c", "in", "combinations", "(", "range", "(", "bond_data", "-", "1", ")", ",", "i", ")", "]", ")", "**", "0.5", ")", "*", "np", ".", "cos", "(", "(", "image_group", ")", "*", "(", "np", ".", "pi", "/", "2", ")", ")", "**", "(", "bond_data", "-", "(", "i", "+", "1", ")", ")", "*", "np", ".", "sin", "(", "\n", "(", "image_group", ")", "*", "(", "np", ".", "pi", "/", "2", ")", ")", "**", "i", "\n", "\n", "", "test_data", "=", "np", ".", "zeros", "(", "(", "16", ",", "16", ",", "bond_data", ",", "n_test", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n", "for", "k", ",", "l", ",", "m", "in", "product", "(", "range", "(", "bond_data", ")", ",", "range", "(", "10", ")", ",", "range", "(", "n_test_each", ")", ")", ":", "\n", "        ", "test_data", "[", ":", ",", ":", ",", "k", ",", "l", "*", "n_test_each", "+", "m", "]", "=", "data_group", "[", ":", ",", ":", ",", "l", ",", "m", ",", "k", "]", "\n", "\n", "", "test_tensor", "=", "[", "[", "0", "for", "col", "in", "range", "(", "16", ")", "]", "for", "row", "in", "range", "(", "16", ")", "]", "\n", "for", "i", ",", "j", "in", "product", "(", "range", "(", "16", ")", ",", "range", "(", "16", ")", ")", ":", "\n", "        ", "test_tensor", "[", "i", "]", "[", "j", "]", "=", "tn", ".", "Tensor", "(", "\n", "test_data", "[", "i", ",", "j", ",", ":", ",", ":", "]", ",", "labels", "=", "[", "\"up\"", ",", "\"down\"", "]", ")", "\n", "\n", "", "return", "test_tensor", "\n", "", ""]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.__init__": [[13, 50], ["numpy.zeros", "tree_tensor_network_mnist.TreeTensorNetwork.contracted.append", "range", "range", "tree_tensor_network_mnist.TreeTensorNetwork.contracted.append", "tree_tensor_network_mnist.TreeTensorNetwork.tn_layers.append", "range", "tree_tensor_network_mnist.TreeTensorNetwork.tn_layers[].append", "range", "[].append", "range", "numpy.random.random", "tncontract.Tensor", "range", "numpy.random.random", "numpy.random.random"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "labels", ",", "bond_data", ",", "bond_inner", ",", "bond_label", ",", "layer_units", ")", ":", "\n", "        ", "self", ".", "flag_contract", "=", "np", ".", "zeros", "(", "(", "5", ",", "8", ",", "8", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "# initialize contraction results", "\n", "self", ".", "layer_units", "=", "layer_units", "\n", "\n", "# self.contracted = [[]] * len(self.layer_units)", "\n", "\n", "self", ".", "contracted", "=", "[", "]", "\n", "\n", "self", ".", "contracted", ".", "append", "(", "data", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "            ", "self", ".", "contracted", ".", "append", "(", "\n", "[", "[", "0", "for", "_", "in", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", "]", "for", "_", "in", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", "]", ")", "\n", "", "self", ".", "tn_layers", "=", "[", "0", "]", "\n", "\n", "self", ".", "bond_inner", "=", "bond_inner", "\n", "self", ".", "bond_label", "=", "bond_label", "\n", "self", ".", "bond_data", "=", "bond_data", "\n", "self", ".", "labels", "=", "labels", "\n", "self", ".", "n_train", "=", "data", "[", "0", "]", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "            ", "self", ".", "tn_layers", ".", "append", "(", "[", "]", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ":", "\n", "                ", "self", ".", "tn_layers", "[", "i", "]", ".", "append", "(", "[", "]", ")", "\n", "for", "k", "in", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ":", "\n", "                    ", "if", "i", "==", "1", ":", "\n", "                        ", "temp", "=", "np", ".", "random", ".", "random", "(", "\n", "(", "self", ".", "bond_data", ",", "self", ".", "bond_data", ",", "self", ".", "bond_data", ",", "self", ".", "bond_data", ",", "self", ".", "bond_inner", ")", ")", "\n", "", "elif", "i", "==", "4", ":", "\n", "                        ", "temp", "=", "np", ".", "random", ".", "random", "(", "\n", "(", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_label", ")", ")", "\n", "", "else", ":", "\n", "                        ", "temp", "=", "np", ".", "random", ".", "random", "(", "\n", "(", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ")", ")", "\n", "", "self", ".", "tn_layers", "[", "i", "]", "[", "j", "]", ".", "append", "(", "\n", "tn", ".", "Tensor", "(", "temp", ",", "labels", "=", "[", "\"1\"", ",", "\"2\"", ",", "\"3\"", ",", "\"4\"", ",", "\"up\"", "]", ")", ")", "\n", "# return self.tn_layers", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_local": [[52, 91], ["tncontract.random_tensor", "itertools.product", "tncontract.random_tensor", "len", "len", "len", "len", "range", "range", "range", "range", "len", "itertools.product", "len", "itertools.product", "len", "itertools.product", "len", "itertools.product", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range"], "methods", ["None"], ["", "", "", "", "def", "contract_local", "(", "self", ",", "tensor1", ",", "tensor2", ",", "tensor3", ",", "tensor4", ",", "Num", ")", ":", "\n", "        ", "bond", "=", "tensor1", ".", "shape", "[", "0", "]", "\n", "if", "len", "(", "tensor1", ".", "shape", ")", "==", "2", "and", "len", "(", "tensor2", ".", "shape", ")", "==", "2", "and", "len", "(", "tensor3", ".", "shape", ")", "==", "2", "and", "len", "(", "tensor4", ".", "shape", ")", "==", "2", ":", "\n", "            ", "tensor_result", "=", "tn", ".", "random_tensor", "(", "bond", ",", "bond", ",", "bond", ",", "bond", ",", "Num", ",", "labels", "=", "[", "\n", "'a'", ",", "'b'", ",", "'c'", ",", "'d'", ",", "'down'", "]", ")", "\n", "\n", "for", "i", ",", "j", ",", "k", ",", "l", "in", "product", "(", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ")", ":", "\n", "                ", "tensor_result", ".", "data", "[", "i", ",", "j", ",", "k", ",", "l", ",", ":", "]", "=", "tensor1", ".", "data", "[", "i", ",", ":", "]", "*", "tensor2", ".", "data", "[", "j", ",", ":", "]", "*", "tensor3", ".", "data", "[", "k", ",", "\n", ":", "]", "*", "tensor4", ".", "data", "[", "l", ",", ":", "]", "\n", "\n", "", "", "else", ":", "\n", "            ", "tensor_result", "=", "tn", ".", "random_tensor", "(", "bond", ",", "bond", ",", "bond", ",", "bond", ",", "self", ".", "bond_inner", ",", "Num", ",", "labels", "=", "[", "\n", "'a'", ",", "'b'", ",", "'c'", ",", "'d'", ",", "'e'", ",", "'down'", "]", ")", "\n", "\n", "if", "len", "(", "tensor1", ".", "shape", ")", "==", "3", ":", "\n", "                ", "for", "i", ",", "j", ",", "k", ",", "l", ",", "n", "in", "product", "(", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "\n", "range", "(", "self", ".", "bond_inner", ")", ")", ":", "\n", "                    ", "tensor_result", ".", "data", "[", "i", ",", "j", ",", "k", ",", "l", ",", "n", ",", ":", "]", "=", "tensor1", ".", "data", "[", "i", ",", "n", ",", ":", "]", "*", "tensor2", ".", "data", "[", "j", ",", ":", "]", "*", "tensor3", ".", "data", "[", "k", ",", "\n", ":", "]", "*", "tensor4", ".", "data", "[", "l", ",", ":", "]", "\n", "", "", "if", "len", "(", "tensor2", ".", "shape", ")", "==", "3", ":", "\n", "                ", "for", "i", ",", "j", ",", "k", ",", "l", ",", "n", "in", "product", "(", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "\n", "range", "(", "self", ".", "bond_inner", ")", ")", ":", "\n", "                    ", "tensor_result", ".", "data", "[", "i", ",", "j", ",", "k", ",", "l", ",", "n", ",", ":", "]", "=", "tensor1", ".", "data", "[", "i", ",", ":", "]", "*", "tensor2", ".", "data", "[", "j", ",", "n", ",", ":", "]", "*", "tensor3", ".", "data", "[", "k", ",", "\n", ":", "]", "*", "tensor4", ".", "data", "[", "l", ",", ":", "]", "\n", "", "", "if", "len", "(", "tensor3", ".", "shape", ")", "==", "3", ":", "\n", "                ", "for", "i", ",", "j", ",", "k", ",", "l", ",", "n", "in", "product", "(", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "\n", "range", "(", "self", ".", "bond_inner", ")", ")", ":", "\n", "                    ", "tensor_result", ".", "data", "[", "i", ",", "j", ",", "k", ",", "l", ",", "n", ",", ":", "]", "=", "tensor1", ".", "data", "[", "i", ",", ":", "]", "*", "tensor2", ".", "data", "[", "j", ",", ":", "]", "*", "tensor3", ".", "data", "[", "k", ",", "n", ",", "\n", ":", "]", "*", "tensor4", ".", "data", "[", "l", ",", ":", "]", "\n", "", "", "if", "len", "(", "tensor4", ".", "shape", ")", "==", "3", ":", "\n", "                ", "for", "i", ",", "j", ",", "k", ",", "l", ",", "n", "in", "product", "(", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "\n", "range", "(", "self", ".", "bond_inner", ")", ")", ":", "\n", "                    ", "tensor_result", ".", "data", "[", "i", ",", "j", ",", "k", ",", "l", ",", "n", ",", ":", "]", "=", "tensor1", ".", "data", "[", "i", ",", ":", "]", "*", "tensor2", ".", "data", "[", "j", ",", ":", "]", "*", "tensor3", ".", "data", "[", "k", ",", "\n", ":", "]", "*", "tensor4", ".", "data", "[", "l", ",", "n", ",", ":", "]", "\n", "", "", "", "return", "tensor_result", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_local3": [[92, 101], ["tncontract.random_tensor", "itertools.product", "range", "range", "range"], "methods", ["None"], ["", "def", "contract_local3", "(", "self", ",", "tensor1", ",", "tensor2", ",", "tensor3", ",", "Num", ")", ":", "\n", "        ", "bond", "=", "tensor1", ".", "shape", "[", "0", "]", "\n", "tensor_result", "=", "tn", ".", "random_tensor", "(", "\n", "bond", ",", "bond", ",", "bond", ",", "Num", ",", "labels", "=", "[", "'a'", ",", "'b'", ",", "'c'", ",", "'down'", "]", ")", "\n", "\n", "for", "i", ",", "j", ",", "k", "in", "product", "(", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ",", "range", "(", "bond", ")", ")", ":", "\n", "            ", "tensor_result", ".", "data", "[", "i", ",", "j", ",", "k", ",", ":", "]", "=", "tensor1", ".", "data", "[", "i", ",", "\n", ":", "]", "*", "tensor2", ".", "data", "[", "j", ",", ":", "]", "*", "tensor3", ".", "data", "[", "k", ",", ":", "]", "\n", "", "return", "tensor_result", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_unit": [[102, 115], ["tree_tensor_network_mnist.TreeTensorNetwork.contract_local", "tncontract.contract", "len", "sklearn.preprocessing.normalize", "range", "sklearn.preprocessing.normalize"], "methods", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_local"], ["", "def", "contract_unit", "(", "self", ",", "tensor0", ",", "tensor1", ",", "tensor2", ",", "tensor3", ",", "tensor4", ",", "Num", ")", ":", "\n", "        ", "temp", "=", "self", ".", "contract_local", "(", "tensor1", ",", "tensor2", ",", "tensor3", ",", "tensor4", ",", "Num", ")", "\n", "tensor_result", "=", "tn", ".", "contract", "(", "\n", "tensor0", ",", "temp", ",", "[", "\"1\"", ",", "\"2\"", ",", "\"3\"", ",", "\"4\"", "]", ",", "[", "\"a\"", ",", "\"b\"", ",", "\"c\"", ",", "\"d\"", "]", ")", "\n", "\n", "if", "len", "(", "tensor_result", ".", "shape", ")", "==", "2", ":", "\n", "            ", "tensor_result", ".", "data", "=", "preprocessing", ".", "normalize", "(", "\n", "tensor_result", ".", "data", ",", "axis", "=", "0", ",", "norm", "=", "'l2'", ")", "# normalization", "\n", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "tensor_result", ".", "shape", "[", "1", "]", ")", ":", "# normalization", "\n", "                ", "tensor_result", ".", "data", "[", ":", ",", "i", ",", ":", "]", "=", "preprocessing", ".", "normalize", "(", "\n", "tensor_result", ".", "data", "[", ":", ",", "i", ",", ":", "]", ",", "axis", "=", "0", ",", "norm", "=", "'l2'", ")", "\n", "", "", "return", "tensor_result", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_special": [[116, 127], ["tree_tensor_network_mnist.TreeTensorNetwork.contract_local3", "tncontract.contract", "tncontract.contract.data.transpose", "range", "sklearn.preprocessing.normalize"], "methods", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_local3"], ["", "def", "contract_special", "(", "self", ",", "tensor0", ",", "tensor1", ",", "lab1", ",", "tensor2", ",", "lab2", ",", "tensor3", ",", "lab3", ",", "Num", ")", ":", "\n", "        ", "temp", "=", "self", ".", "contract_local3", "(", "tensor1", ",", "tensor2", ",", "tensor3", ",", "Num", ")", "\n", "tensor_result", "=", "tn", ".", "contract", "(", "\n", "tensor0", ",", "temp", ",", "[", "lab1", ",", "lab2", ",", "lab3", "]", ",", "[", "\"a\"", ",", "\"b\"", ",", "\"c\"", "]", ")", "\n", "tensor_result", ".", "data", "=", "tensor_result", ".", "data", ".", "transpose", "(", "1", ",", "0", ",", "2", ")", "\n", "tensor_result", ".", "labels", "[", "0", "]", ",", "tensor_result", ".", "labels", "[", "1", "]", "=", "tensor_result", ".", "labels", "[", "1", "]", ",", "tensor_result", ".", "labels", "[", "0", "]", "\n", "\n", "for", "i", "in", "range", "(", "tensor_result", ".", "shape", "[", "1", "]", ")", ":", "# normalization", "\n", "            ", "tensor_result", ".", "data", "[", ":", ",", "i", ",", ":", "]", "=", "preprocessing", ".", "normalize", "(", "\n", "tensor_result", ".", "data", "[", ":", ",", "i", ",", ":", "]", ",", "axis", "=", "0", ",", "norm", "=", "'l2'", ")", "\n", "", "return", "tensor_result", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.update_singletensor": [[128, 253], ["range", "range", "range", "tncontract.contract", "tncontract.contract.trace", "path.append", "tncontract.zeros_tensor", "itertools.product", "tncontract.contract", "tncontract.contract", "numpy.reshape", "numpy.linalg.svd", "numpy.reshape", "tree_tensor_network_mnist.TreeTensorNetwork.contract_unit", "itertools.product", "tree_tensor_network_mnist.TreeTensorNetwork.contract_local", "itertools.product", "range", "range", "range", "numpy.dot", "numpy.reshape", "numpy.linalg.svd", "numpy.reshape", "numpy.reshape", "numpy.linalg.svd", "numpy.reshape", "range", "range", "range", "range", "numpy.dot", "numpy.dot", "tree_tensor_network_mnist.TreeTensorNetwork.contract_unit", "tree_tensor_network_mnist.TreeTensorNetwork.contract_special", "tree_tensor_network_mnist.TreeTensorNetwork.contract_unit"], "methods", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_unit", "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_local", "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_unit", "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_special", "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_unit"], ["", "def", "update_singletensor", "(", "self", ",", "c_i", ",", "c_j", ",", "c_k", ")", ":", "\n", "\n", "        ", "path_len", "=", "5", "-", "c_i", "\n", "path", "=", "[", "[", "c_i", ",", "c_j", ",", "c_k", "]", "]", "\n", "tem_c_j", "=", "c_j", "\n", "tem_c_k", "=", "c_k", "\n", "for", "i", "in", "range", "(", "1", ",", "path_len", ")", ":", "\n", "            ", "tem_c_j", "=", "tem_c_j", "//", "2", "\n", "tem_c_k", "=", "tem_c_k", "//", "2", "\n", "path", ".", "append", "(", "[", "c_i", "+", "i", ",", "tem_c_j", ",", "tem_c_k", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "            ", "if", "i", "==", "c_i", ":", "\n", "                ", "for", "j", ",", "k", "in", "product", "(", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ",", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ")", ":", "\n", "                    ", "if", "(", "self", ".", "flag_contract", "[", "i", ",", "j", ",", "k", "]", "==", "0", ")", "and", "(", "(", "j", "!=", "c_j", ")", "or", "(", "k", "!=", "c_k", ")", ")", ":", "\n", "                        ", "self", ".", "contracted", "[", "i", "]", "[", "j", "]", "[", "k", "]", "=", "self", ".", "contract_unit", "(", "self", ".", "tn_layers", "[", "i", "]", "[", "j", "]", "[", "k", "]", ",", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "]", "[", "2", "*", "k", "]", ",", "self", ".", "contracted", "[", "(", "\n", "i", "-", "1", ")", "]", "[", "2", "*", "j", "]", "[", "2", "*", "k", "+", "1", "]", ",", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "2", "*", "k", "]", ",", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "2", "*", "k", "+", "1", "]", ",", "self", ".", "n_train", ")", "\n", "self", ".", "flag_contract", "[", "i", ",", "j", ",", "k", "]", "=", "1", "\n", "if", "i", "<", "4", ":", "\n", "                            ", "self", ".", "flag_contract", "[", "i", "+", "1", ",", "j", "//", "2", ",", "k", "//", "2", "]", "=", "0", "\n", "", "", "", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "]", "=", "self", ".", "contract_local", "(", "self", ".", "contracted", "[", "c_i", "-", "1", "]", "[", "2", "*", "c_j", "]", "[", "2", "*", "c_k", "]", ",", "self", ".", "contracted", "[", "(", "\n", "c_i", "-", "1", ")", "]", "[", "2", "*", "c_j", "]", "[", "2", "*", "c_k", "+", "1", "]", ",", "self", ".", "contracted", "[", "c_i", "-", "1", "]", "[", "2", "*", "c_j", "+", "1", "]", "[", "2", "*", "c_k", "]", ",", "self", ".", "contracted", "[", "c_i", "-", "1", "]", "[", "2", "*", "c_j", "+", "1", "]", "[", "2", "*", "c_k", "+", "1", "]", ",", "self", ".", "n_train", ")", "\n", "self", ".", "flag_contract", "[", "c_i", ",", "c_j", ",", "c_k", "]", "=", "0", "\n", "if", "i", "<", "4", ":", "\n", "                    ", "self", ".", "flag_contract", "[", "c_i", "+", "1", ",", "c_j", "//", "2", ",", "c_k", "//", "2", "]", "=", "0", "\n", "", "", "else", ":", "\n", "                ", "for", "j", ",", "k", "in", "product", "(", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ",", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ")", ":", "\n", "                    ", "if", "self", ".", "flag_contract", "[", "i", ",", "j", ",", "k", "]", "==", "0", ":", "\n", "                        ", "if", "(", "[", "i", ",", "j", ",", "k", "]", "in", "path", ")", "and", "(", "(", "i", "-", "1", ")", "==", "c_i", ")", ":", "\n", "                            ", "if", "(", "c_j", "%", "2", "==", "0", ")", "and", "(", "c_k", "%", "2", "==", "0", ")", ":", "\n", "                                ", "[", "lab1", ",", "lab2", ",", "lab3", "]", "=", "[", "\"2\"", ",", "\"3\"", ",", "\"4\"", "]", "\n", "tensor1", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "+", "1", "]", "\n", "tensor2", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "+", "1", "]", "[", "c_k", "]", "\n", "tensor3", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "+", "1", "]", "[", "c_k", "+", "1", "]", "\n", "\n", "", "if", "(", "c_j", "%", "2", "==", "0", ")", "and", "(", "c_k", "%", "2", "==", "1", ")", ":", "\n", "                                ", "[", "lab1", ",", "lab2", ",", "lab3", "]", "=", "[", "\"1\"", ",", "\"3\"", ",", "\"4\"", "]", "\n", "tensor1", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "-", "1", "]", "\n", "tensor2", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "+", "1", "]", "[", "c_k", "-", "1", "]", "\n", "tensor3", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "+", "1", "]", "[", "c_k", "]", "\n", "\n", "", "if", "(", "c_j", "%", "2", "==", "1", ")", "and", "(", "c_k", "%", "2", "==", "0", ")", ":", "\n", "                                ", "[", "lab1", ",", "lab2", ",", "lab3", "]", "=", "[", "\"1\"", ",", "\"2\"", ",", "\"4\"", "]", "\n", "tensor1", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "-", "1", "]", "[", "c_k", "]", "\n", "tensor2", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "-", "1", "]", "[", "c_k", "+", "1", "]", "\n", "tensor3", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "+", "1", "]", "\n", "\n", "", "if", "(", "c_j", "%", "2", "==", "1", ")", "and", "(", "c_k", "%", "2", "==", "1", ")", ":", "\n", "                                ", "[", "lab1", ",", "lab2", ",", "lab3", "]", "=", "[", "\"1\"", ",", "\"2\"", ",", "\"3\"", "]", "\n", "tensor1", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "-", "1", "]", "[", "c_k", "-", "1", "]", "\n", "tensor2", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "-", "1", "]", "[", "c_k", "]", "\n", "tensor3", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "-", "1", "]", "\n", "\n", "", "self", ".", "contracted", "[", "i", "]", "[", "j", "]", "[", "k", "]", "=", "self", ".", "contract_special", "(", "\n", "self", ".", "tn_layers", "[", "i", "]", "[", "j", "]", "[", "k", "]", ",", "tensor1", ",", "lab1", ",", "tensor2", ",", "lab2", ",", "tensor3", ",", "lab3", ",", "self", ".", "n_train", ")", "\n", "self", ".", "flag_contract", "[", "i", ",", "j", ",", "k", "]", "=", "0", "\n", "if", "i", "<", "4", ":", "\n", "                                ", "self", ".", "flag_contract", "[", "i", "+", "1", ",", "j", "//", "2", ",", "k", "//", "2", "]", "=", "0", "\n", "\n", "", "", "else", ":", "\n", "# print(i,j,k)", "\n", "                            ", "self", ".", "contracted", "[", "i", "]", "[", "j", "]", "[", "k", "]", "=", "self", ".", "contract_unit", "(", "self", ".", "tn_layers", "[", "i", "]", "[", "j", "]", "[", "k", "]", ",", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "]", "[", "2", "*", "k", "]", ",", "self", ".", "contracted", "[", "\n", "i", "-", "1", "]", "[", "2", "*", "j", "]", "[", "2", "*", "k", "+", "1", "]", ",", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "2", "*", "k", "]", ",", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "2", "*", "k", "+", "1", "]", ",", "self", ".", "n_train", ")", "\n", "if", "(", "[", "i", ",", "j", ",", "k", "]", "in", "path", ")", ":", "\n", "                                ", "self", ".", "flag_contract", "[", "i", ",", "j", ",", "k", "]", "=", "0", "\n", "", "else", ":", "\n", "                                ", "self", ".", "flag_contract", "[", "i", ",", "j", ",", "k", "]", "=", "1", "\n", "", "if", "i", "<", "4", ":", "\n", "                                ", "self", ".", "flag_contract", "[", "i", "+", "1", ",", "j", "//", "2", ",", "k", "//", "2", "]", "=", "0", "\n", "", "", "", "", "", "", "if", "c_i", "!=", "4", ":", "\n", "\n", "            ", "bond", "=", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "]", ".", "shape", "[", "0", "]", "\n", "\n", "tempD", "=", "tn", ".", "zeros_tensor", "(", "[", "self", ".", "bond_inner", ",", "self", ".", "n_train", "]", ",", "labels", "=", "[", "'m'", ",", "'g'", "]", ")", "\n", "for", "m", ",", "g", "in", "product", "(", "range", "(", "self", ".", "bond_inner", ")", ",", "range", "(", "self", ".", "n_train", ")", ")", ":", "\n", "                ", "sum1", "=", "0", "\n", "for", "f", "in", "range", "(", "self", ".", "bond_label", ")", ":", "\n", "                    ", "sum1", "=", "sum1", "+", "self", ".", "contracted", "[", "4", "]", "[", "0", "]", "[", "0", "]", ".", "data", "[", "f", ",", "m", ",", "g", "]", "*", "self", ".", "labels", ".", "data", "[", "g", ",", "f", "]", "\n", "", "tempD", ".", "data", "[", "m", ",", "g", "]", "=", "sum1", "\n", "\n", "", "tensor_environment", "=", "tn", ".", "contract", "(", "self", ".", "contracted", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "]", ",", "tempD", ",", "[", "\"down\"", "]", ",", "[", "\"g\"", "]", ")", "\n", "\n", "", "else", ":", "\n", "            ", "tensor_environment", "=", "tn", ".", "contract", "(", "\n", "self", ".", "contracted", "[", "4", "]", "[", "0", "]", "[", "0", "]", ",", "self", ".", "labels", ",", "\"down\"", ",", "\"up\"", ")", "\n", "\n", "", "if", "c_i", "==", "1", ":", "\n", "            ", "matrix", "=", "np", ".", "reshape", "(", "tensor_environment", ".", "data", ",", "(", "self", ".", "bond_data", "*", "\n", "self", ".", "bond_data", "*", "self", ".", "bond_data", "*", "self", ".", "bond_data", ",", "self", ".", "bond_inner", ")", ")", "\n", "u", ",", "sigma", ",", "vt", "=", "la", ".", "svd", "(", "matrix", ",", "0", ")", "\n", "self", ".", "tn_layers", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "]", ".", "data", "=", "np", ".", "reshape", "(", "\n", "np", ".", "dot", "(", "u", ",", "vt", ")", ",", "(", "self", ".", "bond_data", ",", "self", ".", "bond_data", ",", "self", ".", "bond_data", ",", "self", ".", "bond_data", ",", "self", ".", "bond_inner", ")", ")", "\n", "", "else", ":", "\n", "            ", "if", "c_i", "==", "4", ":", "\n", "                ", "matrix", "=", "np", ".", "reshape", "(", "tensor_environment", ".", "data", ",", "(", "self", ".", "bond_inner", "*", "\n", "self", ".", "bond_inner", "*", "self", ".", "bond_inner", "*", "self", ".", "bond_inner", ",", "self", ".", "bond_label", ")", ")", "\n", "u", ",", "sigma", ",", "vt", "=", "la", ".", "svd", "(", "matrix", ",", "0", ")", "\n", "self", ".", "tn_layers", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "]", ".", "data", "=", "np", ".", "reshape", "(", "\n", "np", ".", "dot", "(", "u", ",", "vt", ")", ",", "(", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_label", ")", ")", "\n", "", "else", ":", "\n", "                ", "matrix", "=", "np", ".", "reshape", "(", "tensor_environment", ".", "data", ",", "(", "self", ".", "bond_inner", "*", "\n", "self", ".", "bond_inner", "*", "self", ".", "bond_inner", "*", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ")", ")", "\n", "u", ",", "sigma", ",", "vt", "=", "la", ".", "svd", "(", "matrix", ",", "0", ")", "\n", "self", ".", "tn_layers", "[", "c_i", "]", "[", "c_j", "]", "[", "c_k", "]", ".", "data", "=", "np", ".", "reshape", "(", "\n", "np", ".", "dot", "(", "u", ",", "vt", ")", ",", "(", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ",", "self", ".", "bond_inner", ")", ")", "\n", "\n", "# compute the training accuracy-------------------------------------------", "\n", "", "", "j", "=", "c_j", "\n", "k", "=", "c_k", "\n", "for", "i", "in", "range", "(", "c_i", ",", "5", ")", ":", "\n", "            ", "self", ".", "contracted", "[", "i", "]", "[", "j", "]", "[", "k", "]", "=", "self", ".", "contract_unit", "(", "self", ".", "tn_layers", "[", "i", "]", "[", "j", "]", "[", "k", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "\n", "1", "]", "[", "2", "*", "j", "]", "[", "2", "*", "k", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "\n", "1", "]", "[", "2", "*", "j", "]", "[", "2", "*", "k", "+", "1", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "\n", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "2", "*", "k", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "2", "*", "k", "+", "1", "]", ",", "self", ".", "n_train", ")", "\n", "j", "=", "j", "//", "2", "\n", "k", "=", "k", "//", "2", "\n", "\n", "", "temp", "=", "tn", ".", "contract", "(", "self", ".", "contracted", "[", "4", "]", "[", "0", "]", "[", "0", "]", ",", "self", ".", "labels", ",", "\"up\"", ",", "\"down\"", ")", "\n", "temp", ".", "trace", "(", "\"up\"", ",", "\"down\"", ")", "\n", "acc", "=", "temp", ".", "data", "/", "self", ".", "n_train", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.train": [[254, 268], ["range", "print", "range", "print", "range", "range", "tree_tensor_network_mnist.TreeTensorNetwork.update_singletensor", "round"], "methods", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.update_singletensor"], ["", "def", "train", "(", "self", ",", "n_epochs", ")", ":", "\n", "        ", "acc_train", "=", "0", "\n", "for", "t", "in", "range", "(", "1", ",", "n_epochs", "+", "1", ")", ":", "\n", "            ", "print", "(", "\"epochs:\"", ",", "t", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "#print(\"layer:\", i)", "\n", "                ", "for", "j", "in", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ":", "\n", "# print([j])", "\n", "                    ", "for", "k", "in", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ":", "\n", "# print(i,j,k)", "\n", "                        ", "acc_train", "=", "self", ".", "update_singletensor", "(", "i", ",", "j", ",", "k", ")", "\n", "acc_train", "=", "round", "(", "acc_train", ",", "3", ")", "\n", "", "", "", "print", "(", "\"training average inner product:\"", ",", "acc_train", ")", "\n", "", "return", "acc_train", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.test": [[269, 315], ["itertools.product", "range", "tncontract.contract", "tncontract.contract.trace", "range", "range", "range", "tree_tensor_network_mnist.TreeTensorNetwork.contract_unit", "range", "numpy.argmax", "range", "range", "tree_tensor_network_mnist.TreeTensorNetwork.contract_unit"], "methods", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_unit", "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_unit"], ["", "def", "test", "(", "self", ",", "test_tensor", ",", "label_test_tensor", ")", ":", "\n", "        ", "Num", "=", "test_tensor", "[", "0", "]", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "for", "j", ",", "k", "in", "product", "(", "range", "(", "8", ")", ",", "range", "(", "8", ")", ")", ":", "\n", "            ", "self", ".", "contracted", "[", "1", "]", "[", "j", "]", "[", "k", "]", "=", "self", ".", "contract_unit", "(", "self", ".", "tn_layers", "[", "1", "]", "[", "j", "]", "[", "k", "]", ",", "\n", "test_tensor", "[", "2", "*", "\n", "j", "]", "[", "2", "*", "k", "]", ",", "\n", "test_tensor", "[", "2", "*", "\n", "j", "]", "[", "2", "*", "k", "+", "1", "]", ",", "\n", "test_tensor", "[", "2", "*", "\n", "j", "+", "1", "]", "[", "2", "*", "k", "]", ",", "\n", "test_tensor", "[", "2", "*", "j", "+", "1", "]", "[", "2", "*", "k", "+", "1", "]", ",", "Num", ")", "\n", "", "for", "i", "in", "range", "(", "2", ",", "5", ")", ":", "\n", "            ", "for", "j", "in", "(", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ")", ":", "\n", "                ", "for", "k", "in", "(", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ")", ":", "\n", "                    ", "self", ".", "contracted", "[", "i", "]", "[", "j", "]", "[", "k", "]", "=", "self", ".", "contract_unit", "(", "self", ".", "tn_layers", "[", "i", "]", "[", "j", "]", "[", "k", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "\n", "1", "]", "[", "2", "*", "j", "]", "[", "2", "*", "k", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "]", "[", "\n", "2", "*", "k", "+", "1", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "\n", "2", "*", "k", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "\n", "2", "*", "k", "+", "1", "]", ",", "Num", ")", "\n", "\n", "# option 1", "\n", "", "", "", "temp", "=", "tn", ".", "contract", "(", "\n", "self", ".", "contracted", "[", "4", "]", "[", "0", "]", "[", "0", "]", ",", "label_test_tensor", ",", "\"up\"", ",", "\"down\"", ")", "\n", "temp", ".", "trace", "(", "\"up\"", ",", "\"down\"", ")", "\n", "acc1", "=", "temp", ".", "data", "/", "Num", "\n", "\n", "# option 2", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "Num", ")", ":", "\n", "            ", "x", "=", "np", ".", "argmax", "(", "self", ".", "contracted", "[", "4", "]", "[", "0", "]", "[", "0", "]", ".", "data", "[", ":", ",", "i", "]", ")", "\n", "for", "j", "in", "range", "(", "2", ")", ":", "\n", "                ", "if", "j", "==", "x", ":", "\n", "                    ", "self", ".", "contracted", "[", "4", "]", "[", "0", "]", "[", "0", "]", ".", "data", "[", "j", ",", "i", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "self", ".", "contracted", "[", "4", "]", "[", "0", "]", "[", "0", "]", ".", "data", "[", "j", ",", "i", "]", "=", "0", "\n", "\n", "", "", "if", "(", "self", ".", "contracted", "[", "4", "]", "[", "0", "]", "[", "0", "]", ".", "data", "[", ":", ",", "i", "]", "==", "label_test_tensor", ".", "data", "[", "i", ",", ":", "]", ")", ".", "all", "(", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "\n", "", "", "acc2", "=", "count", "/", "Num", "\n", "\n", "return", "acc1", ",", "acc2", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.outputvalue": [[316, 340], ["itertools.product", "range", "range", "range", "tree_tensor_network_mnist.TreeTensorNetwork.contract_unit", "range", "range", "tree_tensor_network_mnist.TreeTensorNetwork.contract_unit"], "methods", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_unit", "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tree_tensor_network_mnist.TreeTensorNetwork.contract_unit"], ["", "def", "outputvalue", "(", "self", ",", "test_tensor", ",", "Num", ")", ":", "\n", "        ", "for", "j", ",", "k", "in", "product", "(", "range", "(", "8", ")", ",", "range", "(", "8", ")", ")", ":", "\n", "            ", "self", ".", "contracted", "[", "1", "]", "[", "j", "]", "[", "k", "]", "=", "self", ".", "contract_unit", "(", "self", ".", "tn_layers", "[", "1", "]", "[", "j", "]", "[", "k", "]", ",", "\n", "test_tensor", "[", "2", "*", "\n", "j", "]", "[", "2", "*", "k", "]", ",", "\n", "test_tensor", "[", "2", "*", "\n", "j", "]", "[", "2", "*", "k", "+", "1", "]", ",", "\n", "test_tensor", "[", "2", "*", "\n", "j", "+", "1", "]", "[", "2", "*", "k", "]", ",", "\n", "test_tensor", "[", "2", "*", "j", "+", "1", "]", "[", "2", "*", "k", "+", "1", "]", ",", "Num", ")", "\n", "", "for", "i", "in", "range", "(", "2", ",", "5", ")", ":", "\n", "            ", "for", "j", "in", "(", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ")", ":", "\n", "                ", "for", "k", "in", "(", "range", "(", "self", ".", "layer_units", "[", "i", "]", ")", ")", ":", "\n", "                    ", "self", ".", "contracted", "[", "i", "]", "[", "j", "]", "[", "k", "]", "=", "self", ".", "contract_unit", "(", "self", ".", "tn_layers", "[", "i", "]", "[", "j", "]", "[", "k", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "\n", "1", "]", "[", "2", "*", "j", "]", "[", "2", "*", "k", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "]", "[", "\n", "2", "*", "k", "+", "1", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "\n", "2", "*", "k", "]", ",", "\n", "self", ".", "contracted", "[", "i", "-", "1", "]", "[", "2", "*", "j", "+", "1", "]", "[", "\n", "2", "*", "k", "+", "1", "]", ",", "Num", ")", "\n", "\n", "", "", "", "return", "self", ".", "contracted", "[", "4", "]", "[", "0", "]", "[", "0", "]", ".", "data", "[", "0", ",", ":", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.squash_layer": [[46, 51], ["numpy.vstack"], "function", ["None"], ["def", "squash_layer", "(", "contraction", ",", "which_layer", ")", ":", "\n", "    ", "layer", "=", "[", "]", "\n", "for", "row", "in", "contraction", "[", "which_layer", "]", ":", "\n", "        ", "layer", "+=", "[", "element", ".", "data", "for", "element", "in", "row", "]", "\n", "", "return", "np", ".", "vstack", "(", "layer", ")", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.tsne": [[53, 63], ["numpy.random.choice", "sklearn.manifold.TSNE", "tsne_mnist.squash_layer", "sklearn.manifold.TSNE.fit_transform"], "function", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.squash_layer"], ["", "def", "tsne", "(", "contraction", ",", "which_layer", ",", "per", ",", "lear", ",", "tags", "=", "LAB", ")", ":", "\n", "    ", "selection", "=", "np", ".", "random", ".", "choice", "(", "n_train", ",", "size", "=", "n_train", ",", "replace", "=", "False", ")", "\n", "mf", "=", "TSNE", "(", "n_components", "=", "2", ",", "perplexity", "=", "per", ",", "\n", "learning_rate", "=", "lear", ",", "init", "=", "'pca'", ",", "n_iter", "=", "1200", ")", "\n", "M", "=", "squash_layer", "(", "contraction", ",", "which_layer", ")", "\n", "x", "=", "M", "[", "selection", "]", "\n", "x_embed", "=", "mf", ".", "fit_transform", "(", "x", ")", "\n", "TAGS", "=", "[", "]", "\n", "TAGS", "=", "tags", "[", "selection", "]", "\n", "return", "x_embed", ",", "TAGS", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.sort": [[65, 79], ["tsne_mnist.tsne", "range", "numpy.concatenate", "len", "CATS.append", "DOGS.append"], "function", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.tsne"], ["", "def", "sort", "(", "contraction", ",", "which_layer", ",", "per", ",", "lear", ",", "tags", "=", "LAB", ")", ":", "\n", "    ", "x_embed", ",", "TAGS", "=", "tsne", "(", "contraction", ",", "which_layer", ",", "per", ",", "lear", ",", "tags", "=", "LAB", ")", "\n", "CATS", "=", "[", "]", "\n", "DOGS", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "TAGS", ")", ")", ":", "\n", "        ", "if", "TAGS", "[", "i", "]", "==", "0", ":", "\n", "            ", "CATS", ".", "append", "(", "x_embed", "[", "i", "]", ")", "\n", "", "if", "TAGS", "[", "i", "]", "==", "1", ":", "\n", "            ", "DOGS", ".", "append", "(", "x_embed", "[", "i", "]", ")", "\n", "\n", "", "", "result", "=", "np", ".", "concatenate", "(", "(", "CATS", ",", "DOGS", ")", ",", "axis", "=", "0", ")", "\n", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.plot": [[82, 102], ["tsne_mnist.sort", "matplotlib.figure", "plt.figure.add_subplot", "fig.add_subplot.scatter", "fig.add_subplot.scatter", "matplotlib.legend", "matplotlib.axis", "matplotlib.backends.backend_pdf.PdfPages", "matplotlib.backends.backend_pdf.PdfPages.savefig", "matplotlib.backends.backend_pdf.PdfPages.close"], "function", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.sort"], ["", "def", "plot", "(", "contraction", ",", "which_layer", ",", "per", ",", "lear", ",", "tags", "=", "LAB", ")", ":", "\n", "\n", "    ", "result", "=", "sort", "(", "contraction", ",", "which_layer", ",", "per", ",", "lear", ",", "tags", "=", "LAB", ")", "\n", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax1", "=", "fig", ".", "add_subplot", "(", "111", ")", "\n", "x", "=", "result", "[", ":", ",", "0", "]", "\n", "y", "=", "result", "[", ":", ",", "1", "]", "\n", "ax1", ".", "scatter", "(", "x", "[", "0", ":", "n_train_each", "]", ",", "y", "[", "0", ":", "n_train_each", "]", ",", "s", "=", "11", ",", "\n", "c", "=", "'b'", ",", "marker", "=", "\"o\"", ",", "label", "=", "'Planes'", ",", "alpha", "=", "0.5", ")", "\n", "ax1", ".", "scatter", "(", "x", "[", "n_train_each", "+", "1", ":", "n_train", "]", ",", "y", "[", "n_train_each", "+", "1", ":", "n_train", "]", ",", "\n", "s", "=", "11", ",", "c", "=", "'r'", ",", "marker", "=", "\"o\"", ",", "label", "=", "'Horses'", ",", "alpha", "=", "0.5", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "'upper right'", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "# plt.show()", "\n", "pp", "=", "PdfPages", "(", "'%s_P%s_L%s.pdf'", "%", "(", "which_layer", ",", "per", ",", "lear", ")", ")", "\n", "pp", ".", "savefig", "(", "fig", ")", "\n", "pp", ".", "close", "(", ")", "\n", "\n", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.sweep": [[105, 113], ["range", "len", "tsne_mnist.plot"], "function", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.plot"], ["", "def", "sweep", "(", "contraction", ",", "which_layer", ",", "per", ",", "tags", "=", "LAB", ")", ":", "\n", "\n", "    ", "L", "=", "[", "200", ",", "250", ",", "300", ",", "350", ",", "400", ",", "450", ",", "500", ",", "550", ",", "600", ",", "650", ",", "700", ",", "750", "]", "\n", "f", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "L", ")", ")", ":", "\n", "        ", "f", "=", "plot", "(", "contraction", ",", "i", ",", "per", ",", "L", "[", "i", "]", ",", "tags", "=", "LAB", ")", "\n", "\n", "", "return", "f", "\n", "#%%", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.sweep2": [[116, 123], ["range", "len", "tsne_mnist.sweep"], "function", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.sweep"], ["", "def", "sweep2", "(", "contraction", ",", "which_layer", ",", "tags", "=", "LAB", ")", ":", "\n", "    ", "G", "=", "[", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", ",", "90", ",", "100", ",", "110", ",", "120", ",", "130", ",", "140", "]", "\n", "q", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "G", ")", ")", ":", "\n", "        ", "q", "=", "sweep", "(", "contraction", ",", "which_layer", ",", "G", "[", "i", "]", ",", "tags", "=", "LAB", ")", "\n", "\n", "", "return", "q", "\n", "#%%", "\n"]], "home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.sweep3": [[126, 133], ["range", "tsne_mnist.sweep2"], "function", ["home.repos.pwc.inspect_result.dingliu0305_Tree-Tensor-Networks-in-Machine-Learning.code.tsne_mnist.sweep2"], ["", "def", "sweep3", "(", "contraction", ",", "per", ",", "lear", ",", "tags", "=", "LAB", ")", ":", "\n", "\n", "    ", "m", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "        ", "m", "=", "sweep2", "(", "contraction", ",", "i", ",", "tags", "=", "LAB", ")", "\n", "\n", "", "return", "m", "\n", "\n"]]}