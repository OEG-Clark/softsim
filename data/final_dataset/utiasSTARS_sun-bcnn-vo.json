{"home.repos.pwc.inspect_result.utiasSTARS_sun-bcnn-vo.kitti-groundtruth.create_lmdb_kitti_dataset.readGroundTruth": [[53, 74], ["open", "line.split", "imageFileNames.append", "float", "math.degrees", "math.degrees", "sunDirList.append", "sunDirList.append", "math.atan2", "math.acos"], "function", ["None"], ["def", "readGroundTruth", "(", "datasetTxtFilepath", ")", ":", "\n", "    ", "sunDirList", "=", "[", "]", "\n", "imageFileNames", "=", "[", "]", "\n", "with", "open", "(", "datasetTxtFilepath", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "lineItems", "=", "line", ".", "split", "(", ")", "\n", "fname", "=", "lineItems", "[", "0", "]", "\n", "\n", "sunDir", "=", "lineItems", "[", "1", ":", "4", "]", "\n", "sunDir", "=", "[", "float", "(", "i", ")", "for", "i", "in", "sunDir", "]", "\n", "\n", "if", "azZenTarget", ":", "\n", "            \t", "sunAzZen", "=", "[", "0", ",", "0", "]", "\n", "sunAzZen", "[", "0", "]", "=", "math", ".", "degrees", "(", "math", ".", "atan2", "(", "sunDir", "[", "0", "]", ",", "sunDir", "[", "2", "]", ")", ")", "\n", "sunAzZen", "[", "1", "]", "=", "math", ".", "degrees", "(", "math", ".", "acos", "(", "-", "sunDir", "[", "1", "]", ")", ")", "\n", "sunDirList", ".", "append", "(", "sunAzZen", ")", "\n", "", "else", ":", "\n", "                ", "sunDirList", ".", "append", "(", "sunDir", ")", "\n", "", "imageFileNames", ".", "append", "(", "fname", ")", "\n", "\n", "", "", "return", "sunDirList", ",", "imageFileNames", "\n", "\n"]], "home.repos.pwc.inspect_result.utiasSTARS_sun-bcnn-vo.kitti-groundtruth.create_lmdb_kitti_dataset.createLMDB": [[77, 121], ["lmdb.open", "lmdb.open.close", "lmdb.open.begin", "list", "scipy.savemat", "int", "range", "random.shuffle", "random.shuffle", "cv2.imread", "numpy.transpose", "caffe.io.array_to_datum", "caffe.io.array_to_datum.float_data.extend", "txn.put", "len", "print", "numpy.ones", "cv2.resize", "numpy.array().astype", "str_id.encode", "caffe.io.array_to_datum.SerializeToString", "int", "cv2.resize", "cv2.resize", "int", "numpy.array"], "function", ["None"], ["", "def", "createLMDB", "(", "lmdbFileName", ",", "kittiDataDir", ",", "imageFileNames", ",", "sunDirList", ",", "shuffle", ")", ":", "\n", "    ", "env", "=", "lmdb", ".", "open", "(", "lmdbFileName", ",", "map_size", "=", "int", "(", "1e12", ")", ")", "\n", "count", "=", "0", "\n", "\n", "with", "env", ".", "begin", "(", "write", "=", "True", ")", "as", "txn", ":", "\n", "        ", "ids", "=", "list", "(", "range", "(", "len", "(", "imageFileNames", ")", ")", ")", "\n", "if", "shuffle", ":", "\n", "            ", "random", ".", "shuffle", "(", "ids", ")", "\n", "\n", "", "for", "i", "in", "ids", ":", "\n", "            ", "if", "(", "count", "+", "1", ")", "%", "500", "==", "0", ":", "\n", "                ", "print", "(", "'Saving image: %d (ID: %d)'", "%", "(", "count", "+", "1", ",", "i", ")", ")", "\n", "\n", "", "sunDir", "=", "sunDirList", "[", "int", "(", "i", ")", "]", "\n", "fileName_l", "=", "kittiDataDir", "+", "imageFileNames", "[", "int", "(", "i", ")", "]", "\n", "\n", "#Read in and ensure BGR", "\n", "im_orig_l", "=", "cv2", ".", "imread", "(", "fileName_l", ")", "\n", "\n", "#Resize", "\n", "if", "preserveAspectRatio", ":", "\n", "                ", "im_final", "=", "np", ".", "ones", "(", "[", "224", ",", "224", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "im_resize", "=", "cv2", ".", "resize", "(", "im_orig_l", ",", "(", "224", ",", "68", ")", ")", "\n", "im_final", "[", "78", ":", "146", ":", ",", ":", ",", ":", "]", "=", "im_resize", "\n", "", "elif", "centreCrop", ":", "\n", "                ", "im_crop", "=", "im_orig_l", "[", ":", ",", "434", ":", "434", "+", "376", ",", ":", "]", "#Centre crop to 376x376", "\n", "im_final", "=", "cv2", ".", "resize", "(", "im_crop", ",", "(", "224", ",", "224", ")", ")", "\n", "", "else", ":", "\n", "                ", "im_final", "=", "cv2", ".", "resize", "(", "im_orig_l", ",", "(", "224", ",", "224", ")", ")", "\n", "\n", "\n", "#Put the channels first", "\n", "", "X", "=", "np", ".", "transpose", "(", "im_final", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "#Convert to caffe LMDB", "\n", "im_dat", "=", "caffe", ".", "io", ".", "array_to_datum", "(", "np", ".", "array", "(", "X", ")", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "im_dat", ".", "float_data", ".", "extend", "(", "sunDir", ")", "\n", "str_id", "=", "'{:0>10d}'", ".", "format", "(", "count", ")", "\n", "txn", ".", "put", "(", "str_id", ".", "encode", "(", ")", ",", "im_dat", ".", "SerializeToString", "(", ")", ")", "\n", "count", "=", "count", "+", "1", "\n", "\n", "", "", "env", ".", "close", "(", ")", "\n", "if", "shuffle", ":", "\n", "        ", "io", ".", "savemat", "(", "lmdbFileName", "+", "'_indices.mat'", ",", "mdict", "=", "{", "'shuffled_ids'", ":", "ids", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.utiasSTARS_sun-bcnn-vo.scripts.test_sun_bcnn.computeAzZen": [[56, 64], ["numpy.empty", "math.atan2", "math.acos"], "function", ["None"], ["def", "computeAzZen", "(", "u_est", ")", ":", "\n", "    ", "azzen", "=", "np", ".", "empty", "(", "2", ")", "\n", "#azimuth error", "\n", "azzen", "[", "0", "]", "=", "math", ".", "atan2", "(", "u_est", "[", "0", "]", ",", "u_est", "[", "2", "]", ")", "\n", "#zenith error", "\n", "azzen", "[", "1", "]", "=", "math", ".", "acos", "(", "-", "u_est", "[", "1", "]", ")", "\n", "\n", "return", "azzen", "\n", "\n"]], "home.repos.pwc.inspect_result.utiasSTARS_sun-bcnn-vo.scripts.test_sun_bcnn.convertVecsToAzZen": [[80, 91], ["numpy.empty", "range", "test_sun_bcnn.computeAzZen", "math.atan2", "math.acos", "numpy.linalg.norm"], "function", ["home.repos.pwc.inspect_result.utiasSTARS_sun-bcnn-vo.scripts.test_sun_bcnn.computeAzZen"], ["", "def", "convertVecsToAzZen", "(", "u_mat", ")", ":", "\n", "    ", "if", "u_mat", ".", "ndim", ">", "1", ":", "\n", "        ", "numSamples", "=", "u_mat", ".", "shape", "[", "1", "]", "\n", "azzen_mat", "=", "np", ".", "empty", "(", "[", "2", ",", "numSamples", "]", ")", "\n", "for", "i", "in", "range", "(", "numSamples", ")", ":", "\n", "            ", "u_est", "=", "u_mat", "[", ":", ",", "i", "]", "/", "np", ".", "linalg", ".", "norm", "(", "u_mat", "[", ":", ",", "i", "]", ")", "\n", "azzen_mat", "[", "0", ",", "i", "]", "=", "math", ".", "atan2", "(", "u_est", "[", "0", "]", ",", "u_est", "[", "2", "]", ")", "\n", "azzen_mat", "[", "1", ",", "i", "]", "=", "math", ".", "acos", "(", "-", "u_est", "[", "1", "]", ")", "\n", "", "return", "azzen_mat", "\n", "", "else", ":", "\n", "        ", "return", "computeAzZen", "(", "u_mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.utiasSTARS_sun-bcnn-vo.scripts.test_sun_bcnn.convertAzZenToVec": [[93, 101], ["math.sin", "numpy.array", "math.cos", "math.sin", "math.cos"], "function", ["None"], ["", "", "def", "convertAzZenToVec", "(", "azzen", ")", ":", "\n", "    ", "az", "=", "azzen", "[", "0", "]", "\n", "zen", "=", "azzen", "[", "1", "]", "\n", "v_xz", "=", "math", ".", "sin", "(", "zen", ")", "\n", "y", "=", "-", "math", ".", "cos", "(", "zen", ")", "\n", "x", "=", "v_xz", "*", "math", ".", "sin", "(", "az", ")", "\n", "z", "=", "v_xz", "*", "math", ".", "cos", "(", "az", ")", "\n", "return", "np", ".", "array", "(", "[", "x", ",", "y", ",", "z", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.utiasSTARS_sun-bcnn-vo.scripts.test_sun_bcnn.convertToCosineDist": [[103, 111], ["numpy.empty", "range", "u_mat[].dot", "numpy.linalg.norm"], "function", ["None"], ["", "def", "convertToCosineDist", "(", "u_mat", ",", "u_mat_true", ")", ":", "\n", "    ", "numSamples", "=", "u_mat", ".", "shape", "[", "1", "]", "\n", "\n", "cosdist_mat", "=", "np", ".", "empty", "(", "numSamples", ")", "\n", "for", "i", "in", "range", "(", "numSamples", ")", ":", "\n", "        ", "cosdist_mat", "[", "i", "]", "=", "1.0", "-", "u_mat", "[", ":", ",", "i", "]", ".", "dot", "(", "u_mat_true", "[", ":", ",", "i", "]", ")", "/", "np", ".", "linalg", ".", "norm", "(", "u_mat", "[", ":", ",", "i", "]", ")", "\n", "\n", "", "return", "cosdist_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.utiasSTARS_sun-bcnn-vo.scripts.test_sun_bcnn.convertToVecError": [[112, 122], ["range", "numpy.arccos", "numpy.arccos", "u_mat.dot", "u_mat[].dot", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["", "def", "convertToVecError", "(", "u_mat", ",", "u_true", ")", ":", "\n", "    ", "if", "u_mat", ".", "ndim", ">", "1", ":", "\n", "        ", "numSamples", "=", "u_mat", ".", "shape", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "numSamples", ")", ":", "\n", "            ", "vecerror_mat", "[", "i", "]", "=", "np", ".", "arccos", "(", "(", "u_mat", "[", ":", ",", "i", "]", ".", "dot", "(", "u_true", ")", ")", "/", "(", "np", ".", "linalg", ".", "norm", "(", "u_mat", "[", ":", ",", "i", "]", ")", "*", "np", ".", "linalg", ".", "norm", "(", "u_true", "[", ":", ",", "i", "]", ")", ")", ")", "\n", "\n", "", "return", "vecerror_mat", "\n", "", "else", ":", "\n", "        ", "vec_error", "=", "np", ".", "arccos", "(", "(", "u_mat", ".", "dot", "(", "u_true", ")", ")", "/", "(", "np", ".", "linalg", ".", "norm", "(", "u_mat", ")", "*", "np", ".", "linalg", ".", "norm", "(", "u_true", ")", ")", ")", "\n", "return", "vec_error", "\n", "\n"]]}