{"home.repos.pwc.inspect_result.caotians1_OD-test-master.None.makefullfigure.plot_tsne": [[28, 77], ["os.walk", "os.walk", "any", "FileNotFoundError", "dict", "pandas.DataFrame", "seaborn.scatterplot", "ax.set_axis_off", "ax.legend_.remove", "seaborn.color_palette", "dict.items", "matplotlib.colors.ListedColormap", "len", "dict.items", "matplotlib.colors.ListedColormap", "numpy.load", "list", "os.path.join", "os.path.join", "numpy.load", "_pickle.load.items", "cat2color.items", "cat2color.values", "cat2color.keys", "this_color_list.append", "this_color_list.append", "os.path.join", "os.path.join", "open", "_pickle.load", "os.path.join", "os.path.join"], "function", ["None"], ["def", "plot_tsne", "(", "exp_path", ",", "uc", ",", "ax", ",", "color_space", "=", "None", ",", "n_color_max", "=", "30", ",", "cat2color", "=", "None", ")", ":", "\n", "    ", "X_embedded", "=", "None", "\n", "ALL_Y", "=", "None", "\n", "Cat2Y", "=", "None", "\n", "for", "(", "dirpath", ",", "dirnames", ",", "filenames", ")", "in", "os", ".", "walk", "(", "exp_path", ")", ":", "\n", "        ", "for", "filename", "in", "filenames", ":", "\n", "            ", "if", "(", "'embedded_UC%i'", "%", "uc", ")", "in", "filename", ":", "\n", "                ", "X_embedded", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "exp_path", ",", "filename", ")", ")", "\n", "", "elif", "(", "'selectedY_UC%i'", "%", "uc", ")", "in", "filename", ":", "\n", "                ", "ALL_Y", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "exp_path", ",", "filename", ")", ")", "\n", "", "elif", "(", "'cat2y_UC%i'", "%", "uc", ")", "in", "filename", ":", "\n", "                ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "exp_path", ",", "filename", ")", ",", "\"rb\"", ")", "as", "fp", ":", "\n", "                    ", "Cat2Y", "=", "_pickle", ".", "load", "(", "fp", ")", "\n", "", "", "", "", "if", "any", "(", "[", "X_embedded", "is", "None", ",", "ALL_Y", "is", "None", ",", "Cat2Y", "is", "None", "]", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\"Missing some files from exp dir: %s\"", "%", "exp_path", ")", "\n", "", "else", ":", "\n", "        ", "Y2Cat", "=", "dict", "(", "[", "(", "v", ",", "k", ")", "for", "k", ",", "v", "in", "Cat2Y", ".", "items", "(", ")", "]", ")", "\n", "cat_labels", "=", "[", "Y2Cat", "[", "y", "]", "for", "y", "in", "ALL_Y", "]", "\n", "\n", "if", "color_space", "is", "None", ":", "\n", "            ", "assert", "cat2color", "is", "None", "\n", "color_space", "=", "sns", ".", "color_palette", "(", "\"hls\"", ",", "20", ")", "\n", "cat2color", "=", "{", "}", "\n", "i", "=", "0", "\n", "for", "y", ",", "cat", "in", "Y2Cat", ".", "items", "(", ")", ":", "\n", "                ", "cat2color", "[", "cat", "]", "=", "color_space", "[", "i", "]", "\n", "i", "+=", "1", "\n", "", "this_color_list", "=", "[", "c", "for", "cat", ",", "c", "in", "cat2color", ".", "items", "(", ")", "]", "\n", "this_cmap", "=", "ListedColormap", "(", "this_color_list", ")", "\n", "", "else", ":", "\n", "            ", "assert", "cat2color", "is", "not", "None", "\n", "n_used_colors", "=", "len", "(", "list", "(", "cat2color", ".", "values", "(", ")", ")", ")", "\n", "this_color_list", "=", "[", "]", "\n", "for", "y", ",", "cat", "in", "Y2Cat", ".", "items", "(", ")", ":", "\n", "                ", "if", "cat", "in", "cat2color", ".", "keys", "(", ")", ":", "\n", "                    ", "this_color_list", ".", "append", "(", "cat2color", "[", "cat", "]", ")", "\n", "", "else", ":", "\n", "# new category", "\n", "                    ", "this_color_list", ".", "append", "(", "color_space", "[", "n_used_colors", "]", ")", "\n", "cat2color", "[", "cat", "]", "=", "color_space", "[", "n_used_colors", "]", "\n", "n_used_colors", "+=", "1", "\n", "", "", "this_cmap", "=", "ListedColormap", "(", "this_color_list", ")", "\n", "\n", "", "df", "=", "pd", ".", "DataFrame", "(", "{", "'x'", ":", "X_embedded", "[", ":", ",", "0", "]", ",", "'y'", ":", "X_embedded", "[", ":", ",", "1", "]", ",", "'Dataset'", ":", "cat_labels", "}", ")", "\n", "sns", ".", "scatterplot", "(", "'x'", ",", "'y'", ",", "hue", "=", "\"Dataset\"", ",", "s", "=", "1.0", ",", "data", "=", "df", ",", "ax", "=", "ax", ",", "linewidth", "=", "0", ",", "palette", "=", "cat2color", ")", "\n", "ax", ".", "set_axis_off", "(", ")", "\n", "ax", ".", "legend_", ".", "remove", "(", ")", "\n", "#ax.legend(loc='upper right')", "\n", "", "return", "ax", ",", "color_space", ",", "cat2color", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.makefullfigure.plot_image": [[78, 86], ["skimage.imread", "ax.set_axis_off", "len", "ax.imshow", "ax.imshow"], "function", ["None"], ["", "def", "plot_image", "(", "file_path", ",", "ax", ")", ":", "\n", "    ", "img", "=", "skio", ".", "imread", "(", "file_path", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", ">", "2", ":", "\n", "        ", "ax", ".", "imshow", "(", "img", ")", "\n", "", "else", ":", "\n", "        ", "ax", ".", "imshow", "(", "img", ",", "cmap", "=", "'gray'", ")", "\n", "", "ax", ".", "set_axis_off", "(", ")", "\n", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.makefullfigure.plot_result": [[87, 215], ["numpy.load", "os.path.isfile", "os.path.isfile", "numpy.average", "numpy.average", "numpy.average", "process_results_multiple.weighted_std", "process_results_multiple.weighted_std", "process_results_multiple.weighted_std", "makefullfigure.plot_result.proc_var"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std"], ["", "def", "plot_result", "(", "exp_path", ",", "d1", ",", "uc", ",", "ax", ",", "order", "=", "None", ",", "c_order", "=", "None", ",", "with_x_tick", "=", "False", ",", "keep_only_handles", "=", "None", ",", "alias", "=", "None", ")", ":", "\n", "    ", "csv_data", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "exp_path", ",", "\"data_UC%d_%s.npy\"", "%", "(", "uc", ",", "d1", ")", ")", ")", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "exp_path", ",", "\"headers_UC%d_%s.pkl\"", "%", "(", "uc", ",", "d1", ")", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "exp_path", ",", "\"headers_UC%d_%s.pkl\"", "%", "(", "uc", ",", "d1", ")", ")", ",", "\"rb\"", ")", "as", "fp", ":", "\n", "        ", "csv_headers", "=", "_pickle", ".", "load", "(", "fp", ")", "\n", "", "method_handles", "=", "csv_headers", "[", "0", "]", "\n", "weights", "=", "csv_data", "[", "0", "]", "\n", "uc_acc", "=", "csv_data", "[", "1", "]", "*", "100", "\n", "uc_roc", "=", "csv_data", "[", "2", "]", "*", "100", "\n", "uc_prc", "=", "csv_data", "[", "3", "]", "*", "100", "\n", "\n", "accm", "=", "np", ".", "average", "(", "uc_acc", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "weights", "=", "weights", ")", "\n", "rocm", "=", "np", ".", "average", "(", "uc_roc", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "weights", "=", "weights", ")", "\n", "prcm", "=", "np", ".", "average", "(", "uc_prc", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "weights", "=", "weights", ")", "\n", "accv", "=", "weighted_std", "(", "uc_acc", ",", "weights", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "rocv", "=", "weighted_std", "(", "uc_roc", ",", "weights", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "prcv", "=", "weighted_std", "(", "uc_prc", ",", "weights", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "\n", "if", "order", "is", "None", ":", "\n", "        ", "group1_handles_inds", "=", "[", "]", "\n", "group2_handles_inds", "=", "[", "]", "\n", "for", "i", ",", "handle", "in", "enumerate", "(", "method_handles", ")", ":", "\n", "            ", "if", "(", "\"ae\"", "in", "handle", ".", "lower", "(", ")", ")", "or", "(", "\"ali\"", "in", "handle", ".", "lower", "(", ")", ")", ":", "\n", "                ", "group2_handles_inds", ".", "append", "(", "i", ")", "\n", "", "else", ":", "\n", "                ", "group1_handles_inds", ".", "append", "(", "i", ")", "\n", "", "", "group1_sum", "=", "accm", "[", "group1_handles_inds", "]", "+", "rocm", "[", "group1_handles_inds", "]", "+", "prcm", "[", "group1_handles_inds", "]", "\n", "group2_sum", "=", "accm", "[", "group2_handles_inds", "]", "+", "rocm", "[", "group2_handles_inds", "]", "+", "prcm", "[", "group2_handles_inds", "]", "\n", "\n", "sorted_inds_g1", "=", "[", "group1_handles_inds", "[", "i", "]", "for", "i", "in", "np", ".", "argsort", "(", "group1_sum", ")", "]", "\n", "sorted_inds_g2", "=", "[", "group2_handles_inds", "[", "i", "]", "for", "i", "in", "np", ".", "argsort", "(", "group2_sum", ")", "]", "\n", "assert", "type", "(", "sorted_inds_g1", ")", "is", "list", "\n", "full_inds", "=", "np", ".", "array", "(", "sorted_inds_g1", "+", "sorted_inds_g2", ")", "\n", "", "else", ":", "\n", "        ", "full_inds", "=", "order", "\n", "", "sorted_accm", "=", "accm", "[", "full_inds", "]", "\n", "sorted_accv", "=", "accv", "[", "full_inds", "]", "\n", "\n", "sorted_rocm", "=", "rocm", "[", "full_inds", "]", "\n", "sorted_rocv", "=", "rocv", "[", "full_inds", "]", "\n", "\n", "sorted_prcm", "=", "prcm", "[", "full_inds", "]", "\n", "sorted_prcv", "=", "prcv", "[", "full_inds", "]", "\n", "\n", "sorted_method_handles", "=", "[", "method_handles", "[", "i", "]", "for", "i", "in", "full_inds", "]", "\n", "\n", "def", "proc_var", "(", "m", ",", "v", ")", ":", "\n", "        ", "upper", "=", "[", "]", "\n", "lower", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "m", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "m", "[", "n", "]", "-", "v", "[", "n", "]", "<", "0.0", ":", "\n", "                ", "lower", ".", "append", "(", "m", "[", "n", "]", ")", "\n", "", "else", ":", "\n", "                ", "lower", ".", "append", "(", "v", "[", "n", "]", ")", "\n", "", "if", "m", "[", "n", "]", "+", "v", "[", "n", "]", ">", "100.0", ":", "\n", "                ", "upper", ".", "append", "(", "100.0", "-", "m", "[", "n", "]", ")", "\n", "", "else", ":", "\n", "                ", "upper", ".", "append", "(", "v", "[", "n", "]", ")", "\n", "", "", "return", "np", ".", "array", "(", "[", "lower", ",", "upper", "]", ")", "\n", "\n", "\n", "", "pp_accv", "=", "proc_var", "(", "sorted_accm", ",", "sorted_accv", ")", "\n", "pp_rocv", "=", "proc_var", "(", "sorted_rocm", ",", "sorted_rocv", ")", "\n", "pp_prcv", "=", "proc_var", "(", "sorted_prcm", ",", "sorted_prcv", ")", "\n", "\n", "if", "keep_only_handles", "is", "not", "None", ":", "\n", "        ", "keep_inds", "=", "[", "]", "\n", "for", "i", ",", "method", "in", "enumerate", "(", "sorted_method_handles", ")", ":", "\n", "            ", "if", "method", "in", "keep_only_handles", ":", "\n", "                ", "keep_inds", ".", "append", "(", "i", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"leaving out %s\"", "%", "method", ")", "\n", "", "", "keep_inds", "=", "np", ".", "array", "(", "keep_inds", ")", "\n", "sorted_accm", "=", "sorted_accm", "[", "keep_inds", "]", "\n", "sorted_rocm", "=", "sorted_rocm", "[", "keep_inds", "]", "\n", "sorted_prcm", "=", "sorted_prcm", "[", "keep_inds", "]", "\n", "pp_accv", "=", "pp_accv", "[", ":", ",", "keep_inds", "]", "\n", "pp_rocv", "=", "pp_rocv", "[", ":", ",", "keep_inds", "]", "\n", "pp_prcv", "=", "pp_prcv", "[", ":", ",", "keep_inds", "]", "\n", "sorted_method_handles", "=", "[", "sorted_method_handles", "[", "i", "]", "for", "i", "in", "keep_inds", "]", "\n", "full_inds", "=", "full_inds", "[", "keep_inds", "]", "\n", "\n", "", "ind", "=", "np", ".", "arange", "(", "len", "(", "sorted_accm", ")", ")", "# the x locations for the groups", "\n", "width", "=", "0.25", "# the width of the bars", "\n", "\n", "rb", "=", "cm", ".", "get_cmap", "(", "'rainbow'", ")", "\n", "grad", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "len", "(", "sorted_accm", ")", ")", "\n", "colors", "=", "[", "rb", "(", "g", ")", "for", "g", "in", "grad", "]", "\n", "\n", "if", "c_order", "is", "None", ":", "\n", "        ", "this_order", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "full_inds", ")", ")", "\n", "c_order", "=", "{", "}", "\n", "for", "c", ",", "i", "in", "zip", "(", "this_order", ",", "full_inds", ")", ":", "\n", "            ", "c_order", "[", "i", "]", "=", "c", "\n", "", "", "else", ":", "\n", "        ", "this_order", "=", "[", "c_order", "[", "i", "]", "for", "i", "in", "full_inds", "]", "\n", "\n", "", "sorted_colors", "=", "[", "colors", "[", "i", "]", "for", "i", "in", "this_order", "]", "\n", "sorted_colors_0", "=", "[", "(", "color", "[", "0", "]", ",", "color", "[", "1", "]", ",", "color", "[", "2", "]", ",", "0.3", ",", ")", "for", "color", "in", "sorted_colors", "]", "\n", "sorted_colors_1", "=", "[", "(", "color", "[", "0", "]", ",", "color", "[", "1", "]", ",", "color", "[", "2", "]", ",", "0.7", ",", ")", "for", "color", "in", "sorted_colors", "]", "\n", "\n", "\n", "\n", "rects1", "=", "ax", ".", "bar", "(", "ind", "-", "width", "*", "0.99", ",", "sorted_accm", ",", "width", ",", "yerr", "=", "pp_accv", ",", "\n", "label", "=", "'Accuracy'", ",", "color", "=", "sorted_colors_1", ")", "\n", "rects2", "=", "ax", ".", "bar", "(", "ind", ",", "sorted_rocm", ",", "width", ",", "yerr", "=", "pp_rocv", ",", "\n", "label", "=", "'AUROC'", ",", "color", "=", "sorted_colors_0", ")", "\n", "rects3", "=", "ax", ".", "bar", "(", "ind", "+", "width", "*", "0.99", ",", "sorted_prcm", ",", "width", ",", "yerr", "=", "pp_prcv", ",", "\n", "label", "=", "'AUPRC'", ",", "color", "=", "sorted_colors", ")", "\n", "if", "with_x_tick", ":", "\n", "        ", "ax", ".", "set_xticks", "(", "ind", ")", "\n", "if", "alias", "is", "not", "None", ":", "\n", "            ", "this_method_handles", "=", "[", "]", "\n", "for", "handle", "in", "sorted_method_handles", ":", "\n", "                ", "if", "handle", "in", "alias", ":", "\n", "                    ", "this_method_handles", ".", "append", "(", "alias", "[", "handle", "]", ")", "\n", "", "else", ":", "\n", "                    ", "this_method_handles", ".", "append", "(", "handle", ")", "\n", "", "", "", "else", ":", "\n", "            ", "this_method_handles", "=", "sorted_method_handles", "\n", "", "ax", ".", "set_xticklabels", "(", "this_method_handles", ",", "rotation", "=", "-", "45", ",", "ha", "=", "'left'", ")", "\n", "", "else", ":", "\n", "        ", "ax", ".", "set_xticks", "(", "[", "]", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "", "ax", ".", "set_yticks", "(", "np", ".", "linspace", "(", "0", ",", "100", ",", "3", ")", ")", "\n", "ax", ".", "set_ylim", "(", "0", ",", "110", ")", "\n", "#ax.legend()", "\n", "return", "ax", ",", "full_inds", ",", "c_order", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.PADChest_eval_rand_seeds.train_subroutine": [[23, 40], ["D1.get_D1_train", "ODmethod.propose_H", "D1.get_D1_valid", "D2.get_D2_valid", "len", "len", "min", "print", "D1.get_D1_valid.trim_dataset", "D2.get_D2_valid.trim_dataset", "print", "ODmethod.train_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H"], ["def", "train_subroutine", "(", "ODmethod", ",", "D1", ",", "D2", ")", ":", "\n", "    ", "d1_train", "=", "D1", ".", "get_D1_train", "(", ")", "\n", "ODmethod", ".", "propose_H", "(", "d1_train", ")", "\n", "d1_valid", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "d2_valid", "=", "D2", ".", "get_D2_valid", "(", "D1", ")", "\n", "d1_valid_len", "=", "len", "(", "d1_valid", ")", "\n", "d2_valid_len", "=", "len", "(", "d2_valid", ")", "\n", "final_len", "=", "min", "(", "d1_valid_len", ",", "d2_valid_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d2_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "d2_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "valid_mixture", "=", "d1_valid", "+", "d2_valid", "\n", "print", "(", "\"Final valid size: %d+%d=%d\"", "%", "(", "len", "(", "d1_valid", ")", ",", "len", "(", "d2_valid", ")", ",", "len", "(", "valid_mixture", ")", ")", ")", "\n", "train_acc", "=", "ODmethod", ".", "train_H", "(", "valid_mixture", ")", "\n", "return", "train_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.PADChest_eval_rand_seeds.eval_subroutine": [[42, 59], ["D1.get_D1_test", "D3.get_D2_test", "len", "len", "min", "print", "D1.get_D1_test.trim_dataset", "D3.get_D2_test.trim_dataset", "print", "ODmethod.test_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H"], ["", "def", "eval_subroutine", "(", "ODmethod", ",", "D1", ",", "D3", ")", ":", "\n", "    ", "d1_test", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "d3_test", "=", "D3", ".", "get_D2_test", "(", "D1", ")", "\n", "# Adjust the sizes.", "\n", "d1_test_len", "=", "len", "(", "d1_test", ")", "\n", "d3_test_len", "=", "len", "(", "d3_test", ")", "\n", "final_len", "=", "min", "(", "d1_test_len", ",", "d3_test_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d3_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "d3_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "test_mixture", "=", "d1_test", "+", "d3_test", "\n", "print", "(", "\"Final test size: %d+%d=%d\"", "%", "(", "len", "(", "d1_test", ")", ",", "len", "(", "d3_test", ")", ",", "len", "(", "test_mixture", ")", ")", ")", "\n", "\n", "acc", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "=", "ODmethod", ".", "test_H", "(", "test_mixture", ")", "\n", "return", "acc", ",", "auroc", ",", "auprc", ",", "None", ",", "None", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.PADChest_eval_rand_seeds.init_and_load_results": [[61, 73], ["print", "os.path.exists", "print", "torch.load", "type", "print"], "function", ["None"], ["", "def", "init_and_load_results", "(", "path", ",", "args", ")", ":", "\n", "# If results exists already, just continue where left off.", "\n", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "args", ".", "force_run", ":", "\n", "        ", "print", "(", "\"Loading previous checkpoint\"", ")", "\n", "results", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "type", "(", "results", ")", "is", "dict", ":", "\n", "            ", "if", "results", "[", "'ver'", "]", "==", "RESULTS_VER", ":", "\n", "                ", "print", "(", "\"Loaded previous checkpoint\"", ")", "\n", "return", "results", "\n", "", "", "", "print", "(", "\"No compatible result found, initializing fresh results\"", ")", "\n", "return", "{", "'ver'", ":", "RESULTS_VER", ",", "'results'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.PADChest_eval_rand_seeds.has_done_before": [[75, 80], ["None"], "function", ["None"], ["", "def", "has_done_before", "(", "method", ",", "d1", ",", "d2", ",", "d3", ")", ":", "\n", "    ", "for", "res", "in", "results", "[", "'results'", "]", ":", "\n", "        ", "if", "res", "[", "0", "]", "==", "method", "and", "res", "[", "1", "]", "==", "d1", "and", "res", "[", "2", "]", "==", "d2", "and", "res", "[", "3", "]", "==", "d3", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_cifar_on_uc2.train_subroutine": [[16, 33], ["D1.get_D1_train", "ODmethod.propose_H", "D1.get_D1_valid", "D2.get_D2_valid", "len", "len", "min", "print", "D1.get_D1_valid.trim_dataset", "D2.get_D2_valid.trim_dataset", "print", "ODmethod.train_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H"], ["def", "train_subroutine", "(", "ODmethod", ",", "D1", ",", "D2", ")", ":", "\n", "    ", "d1_train", "=", "D1", ".", "get_D1_train", "(", ")", "\n", "ODmethod", ".", "propose_H", "(", "d1_train", ")", "\n", "d1_valid", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "d2_valid", "=", "D2", ".", "get_D2_valid", "(", "D1", ")", "\n", "d1_valid_len", "=", "len", "(", "d1_valid", ")", "\n", "d2_valid_len", "=", "len", "(", "d2_valid", ")", "\n", "final_len", "=", "min", "(", "d1_valid_len", ",", "d2_valid_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d2_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "d2_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "valid_mixture", "=", "d1_valid", "+", "d2_valid", "\n", "print", "(", "\"Final valid size: %d+%d=%d\"", "%", "(", "len", "(", "d1_valid", ")", ",", "len", "(", "d2_valid", ")", ",", "len", "(", "valid_mixture", ")", ")", ")", "\n", "train_acc", "=", "ODmethod", ".", "train_H", "(", "valid_mixture", ")", "\n", "return", "train_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_cifar_on_uc2.eval_subroutine": [[35, 87], ["D1.get_D1_test", "D3.get_D2_test", "len", "len", "min", "print", "D1.get_D1_test.trim_dataset", "D3.get_D2_test.trim_dataset", "print", "ODmethod.test_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H"], ["", "def", "eval_subroutine", "(", "ODmethod", ",", "D1", ",", "D3", ")", ":", "\n", "    ", "d1_test", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "d3_test", "=", "D3", ".", "get_D2_test", "(", "D1", ")", "\n", "# Adjust the sizes.", "\n", "d1_test_len", "=", "len", "(", "d1_test", ")", "\n", "d3_test_len", "=", "len", "(", "d3_test", ")", "\n", "final_len", "=", "min", "(", "d1_test_len", ",", "d3_test_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d3_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "d3_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "test_mixture", "=", "d1_test", "+", "d3_test", "\n", "print", "(", "\"Final test size: %d+%d=%d\"", "%", "(", "len", "(", "d1_test", ")", ",", "len", "(", "d3_test", ")", ",", "len", "(", "test_mixture", ")", ")", ")", "\n", "\n", "acc", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "=", "ODmethod", ".", "test_H", "(", "test_mixture", ")", "\n", "'''fig = plt.figure()\n    lw = 2\n    ax = fig.add_subplot(111)\n    ax.plot(fpr, tpr, color='g',\n             lw=lw, label='ROC curve (area = %0.2f)' % auroc)\n    ax.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\n    ax.axes.set_xlim([0.0, 1.0])\n    ax.axes.set_ylim([0.0, 1.05])\n    ax.axes.set_xlabel('False Positive Rate')\n    ax.axes.set_ylabel('True Positive Rate')\n    ax.axes.legend(loc=\"lower right\")\n    plt.setp([ax.get_xticklines() + ax.get_yticklines() + ax.get_xgridlines() + ax.get_ygridlines()], antialiased=False)\n    fig.canvas.draw()\n\n    # Now we can save it to a numpy array.\n    ROC = np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8)\n    ROC = ROC.reshape(fig.canvas.get_width_height()[::-1] + (3,))\n    plt.close(fig)\n    fig = plt.figure()\n    lw = 2\n    ax = fig.add_subplot(111)\n    ax.plot(recall, precision, color='b',\n            lw=lw, label='P-R curve (AP = %0.2f)' % auprc)\n    ax.axes.set_xlim([0.0, 1.0])\n    ax.axes.set_ylim([0.0, 1.05])\n    ax.axes.set_xlabel('Recall')\n    ax.axes.set_ylabel('Precision')\n    ax.axes.legend(loc=\"lower left\")\n    plt.setp([ax.get_xticklines() + ax.get_yticklines() + ax.get_xgridlines() + ax.get_ygridlines()], antialiased=False)\n    fig.canvas.draw()\n\n    # Now we can save it to a numpy array.\n    PRC = np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8)\n    PRC = PRC.reshape(fig.canvas.get_width_height()[::-1] + (3,))\n    plt.close(fig)'''", "\n", "return", "acc", ",", "auroc", ",", "auprc", ",", "None", ",", "None", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_cifar_on_uc2.init_and_load_results": [[89, 101], ["print", "os.path.exists", "print", "torch.load", "type", "print"], "function", ["None"], ["", "def", "init_and_load_results", "(", "path", ",", "args", ")", ":", "\n", "# If results exists already, just continue where left off.", "\n", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "args", ".", "force_run", ":", "\n", "        ", "print", "(", "\"Loading previous checkpoint\"", ")", "\n", "results", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "type", "(", "results", ")", "is", "dict", ":", "\n", "            ", "if", "results", "[", "'ver'", "]", "==", "RESULTS_VER", ":", "\n", "                ", "print", "(", "\"Loaded previous checkpoint\"", ")", "\n", "return", "results", "\n", "", "", "", "print", "(", "\"No compatible result found, initializing fresh results\"", ")", "\n", "return", "{", "'ver'", ":", "RESULTS_VER", ",", "'results'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_cifar_on_uc2.has_done_before": [[103, 108], ["None"], "function", ["None"], ["", "def", "has_done_before", "(", "method", ",", "d1", ",", "d2", ",", "d3", ")", ":", "\n", "    ", "for", "res", "in", "results", "[", "'results'", "]", ":", "\n", "        ", "if", "res", "[", "0", "]", "==", "method", "and", "res", "[", "1", "]", "==", "d1", "and", "res", "[", "2", "]", "==", "d2", "and", "res", "[", "3", "]", "==", "d3", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_nih.train_subroutine": [[16, 33], ["D1.get_D1_train", "ODmethod.propose_H", "D1.get_D1_valid", "D2.get_D2_valid", "len", "len", "min", "print", "D1.get_D1_valid.trim_dataset", "D2.get_D2_valid.trim_dataset", "print", "ODmethod.train_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H"], ["def", "train_subroutine", "(", "ODmethod", ",", "D1", ",", "D2", ")", ":", "\n", "    ", "d1_train", "=", "D1", ".", "get_D1_train", "(", ")", "\n", "ODmethod", ".", "propose_H", "(", "d1_train", ")", "\n", "d1_valid", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "d2_valid", "=", "D2", ".", "get_D2_valid", "(", "D1", ")", "\n", "d1_valid_len", "=", "len", "(", "d1_valid", ")", "\n", "d2_valid_len", "=", "len", "(", "d2_valid", ")", "\n", "final_len", "=", "min", "(", "d1_valid_len", ",", "d2_valid_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d2_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "d2_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "valid_mixture", "=", "d1_valid", "+", "d2_valid", "\n", "print", "(", "\"Final valid size: %d+%d=%d\"", "%", "(", "len", "(", "d1_valid", ")", ",", "len", "(", "d2_valid", ")", ",", "len", "(", "valid_mixture", ")", ")", ")", "\n", "train_acc", "=", "ODmethod", ".", "train_H", "(", "valid_mixture", ")", "\n", "return", "train_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_nih.eval_subroutine": [[35, 87], ["D1.get_D1_test", "D3.get_D2_test", "len", "len", "min", "print", "D1.get_D1_test.trim_dataset", "D3.get_D2_test.trim_dataset", "print", "ODmethod.test_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H"], ["", "def", "eval_subroutine", "(", "ODmethod", ",", "D1", ",", "D3", ")", ":", "\n", "    ", "d1_test", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "d3_test", "=", "D3", ".", "get_D2_test", "(", "D1", ")", "\n", "# Adjust the sizes.", "\n", "d1_test_len", "=", "len", "(", "d1_test", ")", "\n", "d3_test_len", "=", "len", "(", "d3_test", ")", "\n", "final_len", "=", "min", "(", "d1_test_len", ",", "d3_test_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d3_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "d3_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "test_mixture", "=", "d1_test", "+", "d3_test", "\n", "print", "(", "\"Final test size: %d+%d=%d\"", "%", "(", "len", "(", "d1_test", ")", ",", "len", "(", "d3_test", ")", ",", "len", "(", "test_mixture", ")", ")", ")", "\n", "\n", "acc", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "=", "ODmethod", ".", "test_H", "(", "test_mixture", ")", "\n", "'''fig = plt.figure()\n    lw = 2\n    ax = fig.add_subplot(111)\n    ax.plot(fpr, tpr, color='g',\n             lw=lw, label='ROC curve (area = %0.2f)' % auroc)\n    ax.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\n    ax.axes.set_xlim([0.0, 1.0])\n    ax.axes.set_ylim([0.0, 1.05])\n    ax.axes.set_xlabel('False Positive Rate')\n    ax.axes.set_ylabel('True Positive Rate')\n    ax.axes.legend(loc=\"lower right\")\n    plt.setp([ax.get_xticklines() + ax.get_yticklines() + ax.get_xgridlines() + ax.get_ygridlines()], antialiased=False)\n    fig.canvas.draw()\n\n    # Now we can save it to a numpy array.\n    ROC = np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8)\n    ROC = ROC.reshape(fig.canvas.get_width_height()[::-1] + (3,))\n    plt.close(fig)\n    fig = plt.figure()\n    lw = 2\n    ax = fig.add_subplot(111)\n    ax.plot(recall, precision, color='b',\n            lw=lw, label='P-R curve (AP = %0.2f)' % auprc)\n    ax.axes.set_xlim([0.0, 1.0])\n    ax.axes.set_ylim([0.0, 1.05])\n    ax.axes.set_xlabel('Recall')\n    ax.axes.set_ylabel('Precision')\n    ax.axes.legend(loc=\"lower left\")\n    plt.setp([ax.get_xticklines() + ax.get_yticklines() + ax.get_xgridlines() + ax.get_ygridlines()], antialiased=False)\n    fig.canvas.draw()\n\n    # Now we can save it to a numpy array.\n    PRC = np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8)\n    PRC = PRC.reshape(fig.canvas.get_width_height()[::-1] + (3,))\n    plt.close(fig)'''", "\n", "return", "acc", ",", "auroc", ",", "auprc", ",", "None", ",", "None", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_nih.init_and_load_results": [[89, 101], ["print", "os.path.exists", "print", "torch.load", "type", "print"], "function", ["None"], ["", "def", "init_and_load_results", "(", "path", ",", "args", ")", ":", "\n", "# If results exists already, just continue where left off.", "\n", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "args", ".", "force_run", ":", "\n", "        ", "print", "(", "\"Loading previous checkpoint\"", ")", "\n", "results", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "type", "(", "results", ")", "is", "dict", ":", "\n", "            ", "if", "results", "[", "'ver'", "]", "==", "RESULTS_VER", ":", "\n", "                ", "print", "(", "\"Loaded previous checkpoint\"", ")", "\n", "return", "results", "\n", "", "", "", "print", "(", "\"No compatible result found, initializing fresh results\"", ")", "\n", "return", "{", "'ver'", ":", "RESULTS_VER", ",", "'results'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_nih.has_done_before": [[103, 108], ["None"], "function", ["None"], ["", "def", "has_done_before", "(", "method", ",", "d1", ",", "d2", ",", "d3", ")", ":", "\n", "    ", "for", "res", "in", "results", "[", "'results'", "]", ":", "\n", "        ", "if", "res", "[", "0", "]", "==", "method", "and", "res", "[", "1", "]", "==", "d1", "and", "res", "[", "2", "]", "==", "d2", "and", "res", "[", "3", "]", "==", "d3", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Chest_eval_binary.train_subroutine": [[22, 39], ["D1.get_D1_train", "ODmethod.propose_H", "D1.get_D1_valid", "D2.get_D2_valid", "len", "len", "min", "print", "D1.get_D1_valid.trim_dataset", "D2.get_D2_valid.trim_dataset", "print", "ODmethod.train_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H"], ["def", "train_subroutine", "(", "ODmethod", ",", "D1", ",", "D2", ")", ":", "\n", "    ", "d1_train", "=", "D1", ".", "get_D1_train", "(", ")", "\n", "ODmethod", ".", "propose_H", "(", "d1_train", ")", "\n", "d1_valid", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "d2_valid", "=", "D2", ".", "get_D2_valid", "(", "D1", ")", "\n", "d1_valid_len", "=", "len", "(", "d1_valid", ")", "\n", "d2_valid_len", "=", "len", "(", "d2_valid", ")", "\n", "final_len", "=", "min", "(", "d1_valid_len", ",", "d2_valid_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d2_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "d2_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "valid_mixture", "=", "d1_valid", "+", "d2_valid", "\n", "print", "(", "\"Final valid size: %d+%d=%d\"", "%", "(", "len", "(", "d1_valid", ")", ",", "len", "(", "d2_valid", ")", ",", "len", "(", "valid_mixture", ")", ")", ")", "\n", "train_acc", "=", "ODmethod", ".", "train_H", "(", "valid_mixture", ")", "\n", "return", "train_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Chest_eval_binary.eval_subroutine": [[41, 58], ["D1.get_D1_test", "D3.get_D2_test", "len", "len", "min", "print", "D1.get_D1_test.trim_dataset", "D3.get_D2_test.trim_dataset", "print", "ODmethod.test_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H"], ["", "def", "eval_subroutine", "(", "ODmethod", ",", "D1", ",", "D3", ")", ":", "\n", "    ", "d1_test", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "d3_test", "=", "D3", ".", "get_D2_test", "(", "D1", ")", "\n", "# Adjust the sizes.", "\n", "d1_test_len", "=", "len", "(", "d1_test", ")", "\n", "d3_test_len", "=", "len", "(", "d3_test", ")", "\n", "final_len", "=", "min", "(", "d1_test_len", ",", "d3_test_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d3_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "d3_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "test_mixture", "=", "d1_test", "+", "d3_test", "\n", "print", "(", "\"Final test size: %d+%d=%d\"", "%", "(", "len", "(", "d1_test", ")", ",", "len", "(", "d3_test", ")", ",", "len", "(", "test_mixture", ")", ")", ")", "\n", "\n", "acc", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", ",", "pst", "=", "ODmethod", ".", "test_H", "(", "test_mixture", ")", "\n", "return", "acc", ",", "auroc", ",", "auprc", ",", "None", ",", "None", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Chest_eval_binary.init_and_load_results": [[60, 72], ["print", "os.path.exists", "print", "torch.load", "type", "print"], "function", ["None"], ["", "def", "init_and_load_results", "(", "path", ",", "args", ")", ":", "\n", "# If results exists already, just continue where left off.", "\n", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "args", ".", "force_run", ":", "\n", "        ", "print", "(", "\"Loading previous checkpoint\"", ")", "\n", "results", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "type", "(", "results", ")", "is", "dict", ":", "\n", "            ", "if", "results", "[", "'ver'", "]", "==", "RESULTS_VER", ":", "\n", "                ", "print", "(", "\"Loaded previous checkpoint\"", ")", "\n", "return", "results", "\n", "", "", "", "print", "(", "\"No compatible result found, initializing fresh results\"", ")", "\n", "return", "{", "'ver'", ":", "RESULTS_VER", ",", "'results'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Chest_eval_binary.has_done_before": [[74, 79], ["None"], "function", ["None"], ["", "def", "has_done_before", "(", "method", ",", "d1", ",", "d2", ",", "d3", ")", ":", "\n", "    ", "for", "res", "in", "results", "[", "'results'", "]", ":", "\n", "        ", "if", "res", "[", "0", "]", "==", "method", "and", "res", "[", "1", "]", "==", "d1", "and", "res", "[", "2", "]", "==", "d2", "and", "res", "[", "3", "]", "==", "d3", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.PCAM_eval_rand_seeds.train_subroutine": [[22, 39], ["D1.get_D1_train", "ODmethod.propose_H", "D1.get_D1_valid", "D2.get_D2_valid", "len", "len", "min", "print", "D1.get_D1_valid.trim_dataset", "D2.get_D2_valid.trim_dataset", "print", "ODmethod.train_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H"], ["def", "train_subroutine", "(", "ODmethod", ",", "D1", ",", "D2", ")", ":", "\n", "    ", "d1_train", "=", "D1", ".", "get_D1_train", "(", ")", "\n", "ODmethod", ".", "propose_H", "(", "d1_train", ")", "\n", "d1_valid", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "d2_valid", "=", "D2", ".", "get_D2_valid", "(", "D1", ")", "\n", "d1_valid_len", "=", "len", "(", "d1_valid", ")", "\n", "d2_valid_len", "=", "len", "(", "d2_valid", ")", "\n", "final_len", "=", "min", "(", "d1_valid_len", ",", "d2_valid_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d2_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "d2_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "valid_mixture", "=", "d1_valid", "+", "d2_valid", "\n", "print", "(", "\"Final valid size: %d+%d=%d\"", "%", "(", "len", "(", "d1_valid", ")", ",", "len", "(", "d2_valid", ")", ",", "len", "(", "valid_mixture", ")", ")", ")", "\n", "train_acc", "=", "ODmethod", ".", "train_H", "(", "valid_mixture", ")", "\n", "return", "train_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.PCAM_eval_rand_seeds.eval_subroutine": [[41, 58], ["D1.get_D1_test", "D3.get_D2_test", "len", "len", "min", "print", "D1.get_D1_test.trim_dataset", "D3.get_D2_test.trim_dataset", "print", "ODmethod.test_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H"], ["", "def", "eval_subroutine", "(", "ODmethod", ",", "D1", ",", "D3", ")", ":", "\n", "    ", "d1_test", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "d3_test", "=", "D3", ".", "get_D2_test", "(", "D1", ")", "\n", "# Adjust the sizes.", "\n", "d1_test_len", "=", "len", "(", "d1_test", ")", "\n", "d3_test_len", "=", "len", "(", "d3_test", ")", "\n", "final_len", "=", "min", "(", "d1_test_len", ",", "d3_test_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d3_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "d3_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "test_mixture", "=", "d1_test", "+", "d3_test", "\n", "print", "(", "\"Final test size: %d+%d=%d\"", "%", "(", "len", "(", "d1_test", ")", ",", "len", "(", "d3_test", ")", ",", "len", "(", "test_mixture", ")", ")", ")", "\n", "\n", "acc", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "=", "ODmethod", ".", "test_H", "(", "test_mixture", ")", "\n", "return", "acc", ",", "auroc", ",", "auprc", ",", "None", ",", "None", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.PCAM_eval_rand_seeds.init_and_load_results": [[60, 72], ["print", "os.path.exists", "print", "torch.load", "type", "print"], "function", ["None"], ["", "def", "init_and_load_results", "(", "path", ",", "args", ")", ":", "\n", "# If results exists already, just continue where left off.", "\n", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "args", ".", "force_run", ":", "\n", "        ", "print", "(", "\"Loading previous checkpoint\"", ")", "\n", "results", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "type", "(", "results", ")", "is", "dict", ":", "\n", "            ", "if", "results", "[", "'ver'", "]", "==", "RESULTS_VER", ":", "\n", "                ", "print", "(", "\"Loaded previous checkpoint\"", ")", "\n", "return", "results", "\n", "", "", "", "print", "(", "\"No compatible result found, initializing fresh results\"", ")", "\n", "return", "{", "'ver'", ":", "RESULTS_VER", ",", "'results'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.PCAM_eval_rand_seeds.has_done_before": [[74, 79], ["None"], "function", ["None"], ["", "def", "has_done_before", "(", "method", ",", "d1", ",", "d2", ",", "d3", ")", ":", "\n", "    ", "for", "res", "in", "results", "[", "'results'", "]", ":", "\n", "        ", "if", "res", "[", "0", "]", "==", "method", "and", "res", "[", "1", "]", "==", "d1", "and", "res", "[", "2", "]", "==", "d2", "and", "res", "[", "3", "]", "==", "d3", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results.weighted_std": [[25, 35], ["numpy.average", "numpy.average", "numpy.sqrt", "numpy.arange", "numpy.expand_dims", "len"], "function", ["None"], ["def", "weighted_std", "(", "values", ",", "weights", ",", "axis", "=", "None", ")", ":", "\n", "    ", "if", "axis", "is", "None", ":", "\n", "        ", "axis", "=", "np", ".", "arange", "(", "len", "(", "values", ".", "shape", ")", ")", "\n", "\n", "", "average", "=", "np", ".", "average", "(", "values", ",", "weights", "=", "weights", ",", "axis", "=", "axis", ")", "\n", "for", "axi", "in", "axis", ":", "\n", "        ", "average", "=", "np", ".", "expand_dims", "(", "average", ",", "axi", ")", "\n", "# Fast and numerically precise:", "\n", "", "variance", "=", "np", ".", "average", "(", "(", "values", "-", "average", ")", "**", "2", ",", "weights", "=", "weights", ",", "axis", "=", "axis", ")", "\n", "return", "np", ".", "sqrt", "(", "variance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results.make_plot": [[36, 136], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "zip", "numpy.nonzero", "range", "numpy.average", "numpy.average", "numpy.average", "process_results.weighted_std", "process_results.weighted_std", "process_results.weighted_std", "matplotlib.subplots", "numpy.arange", "ax.bar", "ax.bar", "ax.bar", "ax.set_xticks", "ax.set_xticklabels", "ax.set_title", "ax.legend", "fig.set_size_inches", "matplotlib.get_backend", "matplotlib.get_backend", "matplotlib.savefig", "type", "method_handles.index", "true_d2_handles.index", "d3_handles.index", "use_case1_acc.append", "use_case1_auroc.append", "use_case1_auprc.append", "numpy.array", "len", "print", "len", "matplotlib.get_current_fig_manager", "plt.get_current_fig_manager.window.showMaximized", "any", "method_handles.append", "true_d2_handles.append", "d3_handles.append", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "matplotlib.get_current_fig_manager", "plt.get_current_fig_manager.resize", "matplotlib.get_current_fig_manager", "plt.get_current_fig_manager.frame.Maximize", "plt.get_current_fig_manager.window.maxsize"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std"], ["", "def", "make_plot", "(", "filename", ",", "d2_handles", ",", "title", ")", ":", "\n", "    ", "if", "type", "(", "d2_handles", ")", "==", "str", ":", "\n", "        ", "d2_handles", "=", "[", "d2_handles", ",", "]", "\n", "", "use_case1_acc", "=", "[", "]", "\n", "use_case1_auroc", "=", "[", "]", "\n", "use_case1_auprc", "=", "[", "]", "\n", "tpr", "=", "[", "]", "\n", "\n", "method_handles", "=", "[", "]", "\n", "d3_handles", "=", "[", "]", "\n", "true_d2_handles", "=", "[", "]", "\n", "for", "row", "in", "results", ":", "\n", "        ", "if", "not", "any", "(", "[", "handle", "in", "row", "[", "2", "]", "for", "handle", "in", "d2_handles", "]", ")", ":", "\n", "            ", "continue", "\n", "", "if", "row", "[", "0", "]", "in", "rec_error", ":", "\n", "            ", "token", "=", "rec_error", "[", "row", "[", "0", "]", "]", "\n", "", "else", ":", "\n", "            ", "token", "=", "row", "[", "0", "]", "\n", "", "if", "token", "not", "in", "method_handles", ":", "\n", "            ", "method_handles", ".", "append", "(", "token", ")", "\n", "", "ind_1", "=", "method_handles", ".", "index", "(", "token", ")", "\n", "if", "row", "[", "2", "]", "not", "in", "true_d2_handles", ":", "\n", "            ", "true_d2_handles", ".", "append", "(", "row", "[", "2", "]", ")", "\n", "", "ind_2", "=", "true_d2_handles", ".", "index", "(", "row", "[", "2", "]", ")", "\n", "if", "row", "[", "3", "]", "not", "in", "d3_handles", ":", "\n", "            ", "d3_handles", ".", "append", "(", "row", "[", "3", "]", ")", "\n", "", "ind_3", "=", "d3_handles", ".", "index", "(", "row", "[", "3", "]", ")", "\n", "use_case1_acc", ".", "append", "(", "(", "row", "[", "6", "]", ",", "ind_1", ",", "ind_2", ",", "ind_3", ")", ")", "\n", "use_case1_auroc", ".", "append", "(", "(", "row", "[", "7", "]", ",", "ind_1", ",", "ind_2", ",", "ind_3", ")", ")", "\n", "use_case1_auprc", ".", "append", "(", "(", "row", "[", "8", "]", ",", "ind_1", ",", "ind_2", ",", "ind_3", ")", ")", "\n", "", "uc1_acc", "=", "np", ".", "zeros", "(", "(", "len", "(", "method_handles", ")", ",", "len", "(", "true_d2_handles", ")", ",", "len", "(", "d3_handles", ")", ")", ")", "\n", "uc1_roc", "=", "np", ".", "zeros", "(", "(", "len", "(", "method_handles", ")", ",", "len", "(", "true_d2_handles", ")", ",", "len", "(", "d3_handles", ")", ")", ")", "\n", "uc1_prc", "=", "np", ".", "zeros", "(", "(", "len", "(", "method_handles", ")", ",", "len", "(", "true_d2_handles", ")", ",", "len", "(", "d3_handles", ")", ")", ")", "\n", "weights", "=", "np", ".", "zeros", "(", "(", "len", "(", "method_handles", ")", ",", "len", "(", "true_d2_handles", ")", ",", "len", "(", "d3_handles", ")", ")", ")", "\n", "\n", "for", "acc", ",", "roc", ",", "prc", "in", "zip", "(", "use_case1_acc", ",", "use_case1_auroc", ",", "use_case1_auprc", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "uc1_acc", "[", "acc", "[", "1", "]", ",", "acc", "[", "2", "]", ",", "acc", "[", "3", "]", "]", "=", "acc", "[", "0", "]", "\n", "uc1_roc", "[", "roc", "[", "1", "]", ",", "roc", "[", "2", "]", ",", "roc", "[", "3", "]", "]", "=", "roc", "[", "0", "]", "\n", "uc1_prc", "[", "prc", "[", "1", "]", ",", "prc", "[", "2", "]", ",", "prc", "[", "3", "]", "]", "=", "prc", "[", "0", "]", "\n", "weights", "[", "prc", "[", "1", "]", ",", "prc", "[", "2", "]", ",", "prc", "[", "3", "]", "]", "=", "1", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "", "", "inds_0", ",", "inds_1", ",", "inds_2", "=", "np", ".", "nonzero", "(", "np", ".", "array", "(", "weights", "==", "0", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "inds_0", ")", ")", ":", "\n", "        ", "print", "(", "method_handles", "[", "inds_0", "[", "i", "]", "]", ",", "\", \"", ",", "true_d2_handles", "[", "inds_1", "[", "i", "]", "]", ",", "\",\"", ",", "d3_handles", "[", "inds_2", "[", "i", "]", "]", ",", "\", has no entry\"", ")", "\n", "# method means", "\n", "", "uc1_accm", "=", "np", ".", "average", "(", "uc1_acc", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "weights", "=", "weights", ")", "\n", "uc1_rocm", "=", "np", ".", "average", "(", "uc1_roc", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "weights", "=", "weights", ")", "\n", "uc1_prcm", "=", "np", ".", "average", "(", "uc1_prc", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "weights", "=", "weights", ")", "\n", "\n", "uc1_accv", "=", "weighted_std", "(", "uc1_acc", ",", "weights", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "uc1_rocv", "=", "weighted_std", "(", "uc1_roc", ",", "weights", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "uc1_prcv", "=", "weighted_std", "(", "uc1_prc", ",", "weights", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "\n", "#uc1_accq = np.quantile(uc1_acc, [.25, .75], axis=1)", "\n", "#uc1_rocq = np.quantile(uc1_roc, [.25, .75], axis=1)", "\n", "#uc1_prcq = np.quantile(uc1_prc, [.25, .75], axis=1)", "\n", "\n", "#accdelta = np.array((uc1_accq[1, :] - uc1_accm, uc1_accm - uc1_accq[0, :]))", "\n", "#rocdelta = np.array((uc1_rocq[1, :] - uc1_rocm, uc1_rocm - uc1_rocq[0, :]))", "\n", "#prcdelta = np.array((uc1_prcq[1, :] - uc1_prcm, uc1_prcm - uc1_prcq[0, :]))", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "ind", "=", "np", ".", "arange", "(", "len", "(", "uc1_accm", ")", ")", "# the x locations for the groups", "\n", "width", "=", "0.25", "# the width of the bars", "\n", "rects1", "=", "ax", ".", "bar", "(", "ind", "-", "width", "*", "0.75", ",", "uc1_accm", ",", "width", ",", "yerr", "=", "uc1_accv", ",", "\n", "label", "=", "'Accuracy'", ")", "\n", "rects2", "=", "ax", ".", "bar", "(", "ind", ",", "uc1_rocm", ",", "width", ",", "yerr", "=", "uc1_rocv", ",", "\n", "label", "=", "'AUROC'", ")", "\n", "rects3", "=", "ax", ".", "bar", "(", "ind", "+", "width", "*", "0.75", ",", "uc1_rocm", ",", "width", ",", "yerr", "=", "uc1_prcv", ",", "\n", "label", "=", "'AUPRC'", ")", "\n", "\n", "ax", ".", "set_xticks", "(", "ind", ")", "\n", "ax", ".", "set_xticklabels", "(", "method_handles", ",", "rotation", "=", "45", ",", "ha", "=", "'right'", ")", "\n", "title_str", "=", "title", "+", "\", D2=\"", "\n", "for", "handle", "in", "d2_handles", ":", "\n", "        ", "title_str", "+=", "handle", "+", "', '", "\n", "", "title_str", "+=", "\"error bar shows std\"", "\n", "ax", ".", "set_title", "(", "title_str", ")", "\n", "ax", ".", "legend", "(", ")", "\n", "fig", ".", "set_size_inches", "(", "25", ",", "9.5", ")", "\n", "# when saving, specify the DPI", "\n", "\n", "\n", "backend", "=", "matplotlib", ".", "get_backend", "(", ")", "\n", "\n", "if", "backend", "==", "\"QT\"", ":", "\n", "        ", "manager", "=", "plt", ".", "get_current_fig_manager", "(", ")", "\n", "manager", ".", "window", ".", "showMaximized", "(", ")", "\n", "", "elif", "backend", "==", "\"TkAgg\"", ":", "\n", "        ", "manager", "=", "plt", ".", "get_current_fig_manager", "(", ")", "\n", "manager", ".", "resize", "(", "*", "manager", ".", "window", ".", "maxsize", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "manager", "=", "plt", ".", "get_current_fig_manager", "(", ")", "\n", "manager", ".", "frame", ".", "Maximize", "(", "True", ")", "\n", "#plt.show()", "\n", "", "plt", ".", "savefig", "(", "filename", ",", "dpi", "=", "100", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.PCXRayDataset.__init__": [[34, 77], ["torch.utils.data.Dataset.__init__", "pandas.read_csv", "len", "Untitled.PCXRayDataset._build_labels", "sklearn.preprocessing.MultiLabelBinarizer", "Untitled.PCXRayDataset.mb.fit", "len", "Untitled.PCXRayDataset.df.PatientID.unique", "Untitled.PCXRayDataset.df.reset_index", "numpy.random.choice", "open", "pickle.load", "range", "Untitled.PCXRayDataset.df.PatientID.isin", "Untitled.PCXRayDataset.df.PatientID.isin", "Untitled.PCXRayDataset.df.PatientID.isin"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.PCXRayDataset._build_labels"], ["    ", "def", "__init__", "(", "self", ",", "datadir", ",", "csvpath", ",", "splitpath", "=", "None", ",", "transform", "=", "None", ",", "views", "=", "[", "\"PA\"", ",", "\"L\"", "]", ",", "\n", "dataset", "=", "'train'", ",", "pretrained", "=", "False", ",", "min_patients_per_label", "=", "50", ",", "\n", "counter_examples", "=", "False", ",", "duplicate", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Data reader. Only selects labels that at least min_patients_per_label patients have.\n        \"\"\"", "\n", "super", "(", "PCXRayDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "dataset", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", "\n", "\n", "self", ".", "datadir", "=", "datadir", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "threshold", "=", "min_patients_per_label", "\n", "self", ".", "views", "=", "views", "\n", "self", ".", "counter_examples", "=", "counter_examples", "\n", "self", ".", "duplicate", "=", "duplicate", "\n", "\n", "self", ".", "df", "=", "pd", ".", "read_csv", "(", "csvpath", ")", "\n", "self", ".", "total_samples", "=", "len", "(", "self", ".", "df", ".", "PatientID", ".", "unique", "(", ")", ")", "\n", "\n", "self", ".", "_build_labels", "(", ")", "\n", "self", ".", "mb", "=", "MultiLabelBinarizer", "(", "classes", "=", "self", ".", "labels", ")", "\n", "self", ".", "mb", ".", "fit", "(", "self", ".", "labels", ")", "\n", "\n", "# Split into train or validation", "\n", "if", "splitpath", "is", "not", "None", ":", "\n", "            ", "with", "open", "(", "splitpath", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "train_ids", ",", "val_ids", ",", "test_ids", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "if", "dataset", "==", "'train'", ":", "\n", "                ", "self", ".", "df", "=", "self", ".", "df", "[", "self", ".", "df", ".", "PatientID", ".", "isin", "(", "train_ids", ")", "]", "\n", "", "elif", "dataset", "==", "'val'", ":", "\n", "                ", "self", ".", "df", "=", "self", ".", "df", "[", "self", ".", "df", ".", "PatientID", ".", "isin", "(", "val_ids", ")", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "df", "=", "self", ".", "df", "[", "self", ".", "df", ".", "PatientID", ".", "isin", "(", "test_ids", ")", "]", "\n", "\n", "", "self", ".", "df", "=", "self", ".", "df", ".", "reset_index", "(", ")", "\n", "\n", "", "self", ".", "nb_classes", "=", "len", "(", "self", ".", "labels", ")", "\n", "\n", "if", "self", ".", "duplicate", ":", "\n", "            ", "self", ".", "to_duplicate", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "self", ".", "total_samples", ")", ",", "self", ".", "total_samples", "//", "2", ")", "\n", "self", ".", "nb_classes", "=", "self", ".", "nb_classes", "*", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.PCXRayDataset.__len__": [[78, 80], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.PCXRayDataset.get_labels": [[82, 89], ["eval", "set().difference", "eval.append", "subset.Clean_Labels.tolist", "set"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "get_labels", "(", "self", ",", "idx", ")", ":", "\n", "        ", "subset", "=", "self", ".", "df", "[", "self", ".", "df", ".", "PatientID", "==", "self", ".", "df", ".", "PatientID", "[", "idx", "*", "2", "]", "]", "\n", "labels", "=", "eval", "(", "subset", ".", "Clean_Labels", ".", "tolist", "(", ")", "[", "0", "]", ")", "\n", "if", "set", "(", "labels", ")", ".", "difference", "(", "self", ".", "labels", ")", ":", "\n", "            ", "labels", ".", "append", "(", "'other'", ")", "\n", "", "labels", "=", "[", "l", "for", "l", "in", "labels", "if", "l", "in", "self", ".", "labels", "]", "\n", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.PCXRayDataset.__getitem__": [[90, 146], ["Untitled.PCXRayDataset.get_labels", "Untitled.PCXRayDataset.mb.transform().squeeze", "torch.from_numpy", "torch.max", "os.path.join", "os.path.join", "Untitled.PCXRayDataset.transform", "Untitled.PCXRayDataset.astype", "numpy.random.choice", "torch.LongTensor().squeeze", "[].long().squeeze", "Untitled.PCXRayDataset.mb.transform", "numpy.array", "numpy.repeat", "numpy.array", "numpy.repeat", "torch.zeros().long", "range", "pa_path[].tolist", "PIL.Image.open", "l_path[].tolist", "PIL.Image.open", "len", "torch.LongTensor", "[].long", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.PCXRayDataset.get_labels"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "subset", "=", "self", ".", "df", "[", "self", ".", "df", ".", "PatientID", "==", "self", ".", "df", ".", "PatientID", "[", "idx", "*", "2", "]", "]", "\n", "labels", "=", "self", ".", "get_labels", "(", "idx", ")", "\n", "encoded_labels", "=", "self", ".", "mb", ".", "transform", "(", "[", "labels", "]", ")", ".", "squeeze", "(", ")", "\n", "\n", "sample", "=", "{", "}", "\n", "if", "\"PA\"", "in", "self", ".", "views", ":", "\n", "            ", "pa_path", "=", "subset", "[", "subset", ".", "Projection", "==", "'PA'", "]", "[", "[", "'ImageID'", ",", "'ImageDir'", "]", "]", "\n", "pa_path", "=", "join", "(", "self", ".", "datadir", ",", "pa_path", "[", "'ImageID'", "]", ".", "tolist", "(", ")", "[", "0", "]", ")", "\n", "#pa_path = join(self.datadir,'216840111366964012989926673512011108125227151_00-185-152.png')", "\n", "pa_img", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "pa_path", ")", ")", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "if", "self", ".", "pretrained", ":", "\n", "                ", "pa_img", "=", "np", ".", "repeat", "(", "pa_img", ",", "3", ",", "axis", "=", "-", "1", ")", "\n", "", "sample", "[", "\"PA\"", "]", "=", "pa_img", "\n", "\n", "", "if", "\"L\"", "in", "self", ".", "views", ":", "\n", "            ", "l_path", "=", "subset", "[", "subset", ".", "Projection", "==", "'L'", "]", "[", "[", "'ImageID'", ",", "'ImageDir'", "]", "]", "\n", "l_path", "=", "join", "(", "self", ".", "datadir", ",", "l_path", "[", "'ImageID'", "]", ".", "tolist", "(", ")", "[", "0", "]", ")", "\n", "# l_path = './data/processed/0/46523715740384360192496023767246369337_veyewt.png'", "\n", "l_img", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "l_path", ")", ")", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "if", "self", ".", "pretrained", ":", "\n", "                ", "l_img", "=", "np", ".", "repeat", "(", "l_img", ",", "3", ",", "axis", "=", "-", "1", ")", "\n", "", "sample", "[", "\"L\"", "]", "=", "l_img", "\n", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "\n", "", "sample", "[", "'labels'", "]", "=", "labels", "\n", "sample", "[", "'encoded_labels'", "]", "=", "torch", ".", "from_numpy", "(", "encoded_labels", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "sample", "[", "'sample_weight'", "]", "=", "torch", ".", "max", "(", "sample", "[", "'encoded_labels'", "]", "*", "self", ".", "labels_weights", ")", "\n", "\n", "\n", "if", "self", ".", "counter_examples", ":", "\n", "\n", "            ", "if", "self", ".", "duplicate", ":", "\n", "                ", "new_encoded_labels", "=", "torch", ".", "zeros", "(", "self", ".", "nb_classes", ")", ".", "long", "(", ")", "\n", "\n", "# put the labels at the lower or upper copy", "\n", "if", "idx", "in", "self", ".", "to_duplicate", ":", "\n", "                    ", "new_encoded_labels", "[", ":", "self", ".", "nb_classes", "//", "2", "]", "=", "sample", "[", "'encoded_labels'", "]", "\n", "", "else", ":", "\n", "                    ", "new_encoded_labels", "[", "self", ".", "nb_classes", "//", "2", ":", "]", "=", "sample", "[", "'encoded_labels'", "]", "\n", "\n", "", "sample", "[", "'encoded_labels'", "]", "=", "new_encoded_labels", "\n", "\n", "# pick a query label", "\n", "", "topresent", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "len", "(", "sample", "[", "'encoded_labels'", "]", ")", ")", ",", "p", "=", "self", ".", "labels_weights_dup", ")", "\n", "sample", "[", "'cond'", "]", "=", "torch", ".", "LongTensor", "(", "[", "topresent", "]", ")", ".", "squeeze", "(", ")", "\n", "\n", "# is the query in this sample?", "\n", "sample", "[", "'cond_target'", "]", "=", "sample", "[", "'encoded_labels'", "]", "[", "topresent", "]", ".", "long", "(", ")", ".", "squeeze", "(", ")", "\n", "\n", "sample", "[", "'cond_weight'", "]", "=", "self", ".", "labels_weights", "[", "sample", "[", "'cond'", "]", "//", "2", "]", "\n", "\n", "", "return", "sample", "[", "\"PA\"", "]", ",", "sample", "[", "'cond_target'", "]", ",", "sample", "[", "'cond'", "]", ",", "sample", "[", "'cond_weight'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.PCXRayDataset._build_labels": [[147, 179], ["labels_dict.items", "labels.append", "labels_count.append", "torch.from_numpy", "torch.cat().numpy", "Untitled.PCXRayDataset.labels_weights_dup.sum", "len", "eval", "sum", "numpy.array", "Untitled.PCXRayDataset.labels_weights.max", "label.strip.strip.strip", "labels.append", "labels_count.append", "other_counts.append", "torch.cat", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "_build_labels", "(", "self", ")", ":", "\n", "        ", "labels_dict", "=", "{", "}", "\n", "for", "labels", "in", "self", ".", "df", ".", "Clean_Labels", ":", "\n", "            ", "for", "label", "in", "eval", "(", "labels", ")", ":", "\n", "                ", "label", "=", "label", ".", "strip", "(", ")", "\n", "if", "label", "not", "in", "labels_dict", ":", "\n", "                    ", "labels_dict", "[", "label", "]", "=", "0", "\n", "", "labels_dict", "[", "label", "]", "+=", "1", "\n", "\n", "", "", "labels", "=", "[", "]", "\n", "labels_count", "=", "[", "]", "\n", "other_counts", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "labels_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "v", ">", "self", ".", "threshold", "*", "2", ":", "\n", "                ", "labels", ".", "append", "(", "k", ")", "\n", "labels_count", ".", "append", "(", "v", ")", "\n", "", "else", ":", "\n", "                ", "other_counts", ".", "append", "(", "v", ")", "\n", "\n", "", "", "labels", ".", "append", "(", "'other'", ")", "\n", "labels_count", ".", "append", "(", "sum", "(", "other_counts", ")", ")", "\n", "\n", "self", ".", "labels", "=", "labels", "\n", "self", ".", "labels_count", "=", "labels_count", "\n", "self", ".", "labels_weights", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "(", "len", "(", "self", ")", "/", "label", ")", "\n", "for", "label", "in", "labels_count", "]", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "self", ".", "labels_weights", "=", "self", ".", "labels_weights", "/", "self", ".", "labels_weights", ".", "max", "(", ")", "\n", "self", ".", "labels_weights", "=", "self", ".", "labels_weights", "**", "2", "\n", "self", ".", "labels_weights_dup", "=", "torch", ".", "cat", "(", "[", "self", ".", "labels_weights", "]", "*", "2", ")", ".", "numpy", "(", ")", "\n", "self", ".", "labels_weights_dup", "/=", "self", ".", "labels_weights_dup", ".", "sum", "(", ")", "\n", "#self.labels_weights = torch.clamp(self.labels_weights * 0.1, 1., 5.)", "\n", "self", ".", "nb_labels", "=", "len", "(", "self", ".", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.Normalize.__call__": [[185, 200], ["pa_img.astype.astype.astype", "l_img.astype.astype.astype"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "\n", "        ", "if", "'PA'", "in", "sample", ":", "\n", "            ", "pa_img", "=", "sample", "[", "'PA'", "]", "\n", "pa_img", "=", "2", "*", "(", "pa_img", "/", "65536", ")", "-", "1.", "\n", "pa_img", "=", "pa_img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "sample", "[", "'PA'", "]", "=", "pa_img", "\n", "\n", "", "if", "'L'", "in", "sample", ":", "\n", "            ", "l_img", "=", "sample", "[", "'L'", "]", "\n", "l_img", "=", "2", "*", "(", "l_img", "/", "65536", ")", "-", "1.", "\n", "l_img", "=", "l_img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "sample", "[", "'L'", "]", "=", "l_img", "\n", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.ToTensor.__call__": [[206, 214], ["torchvision.transforms.ToTensor", "torchvision.transforms.ToTensor.", "torchvision.transforms.ToTensor."], "methods", ["None"], ["def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "to_tensor", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "if", "'PA'", "in", "sample", ":", "\n", "            ", "sample", "[", "'PA'", "]", "=", "to_tensor", "(", "sample", "[", "'PA'", "]", ")", "\n", "", "if", "'L'", "in", "sample", ":", "\n", "            ", "sample", "[", "'L'", "]", "=", "to_tensor", "(", "sample", "[", "'L'", "]", ")", "\n", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.ToPILImage.__call__": [[220, 226], ["torchvision.transforms.ToPILImage", "torchvision.transforms.ToPILImage.", "torchvision.transforms.ToPILImage."], "methods", ["None"], ["def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "to_pil", "=", "transforms", ".", "ToPILImage", "(", ")", "\n", "sample", "[", "'PA'", "]", "=", "to_pil", "(", "sample", "[", "'PA'", "]", ")", "\n", "sample", "[", "'L'", "]", "=", "to_pil", "(", "sample", "[", "'L'", "]", ")", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.GaussianNoise.__call__": [[232, 241], ["torch.randn_like", "torch.randn_like"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "pa_img", ",", "l_img", "=", "sample", "[", "'PA'", "]", ",", "sample", "[", "'L'", "]", "\n", "\n", "pa_img", "+=", "torch", ".", "randn_like", "(", "pa_img", ")", "*", "0.05", "\n", "l_img", "+=", "torch", ".", "randn_like", "(", "l_img", ")", "*", "0.05", "\n", "\n", "sample", "[", "'PA'", "]", "=", "pa_img", "\n", "sample", "[", "'L'", "]", "=", "l_img", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.RandomRotation.__call__": [[247, 258], ["torchvision.transforms.RandomRotation", "torchvision.transforms.RandomRotation.", "torchvision.transforms.RandomRotation.", "numpy.random.rand"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "pa_img", ",", "l_img", "=", "sample", "[", "'PA'", "]", ",", "sample", "[", "'L'", "]", "\n", "\n", "rot_amount", "=", "np", ".", "random", ".", "rand", "(", ")", "*", "5.", "\n", "rot", "=", "transforms", ".", "RandomRotation", "(", "rot_amount", ")", "\n", "pa_img", "=", "rot", "(", "pa_img", ")", "\n", "l_img", "=", "rot", "(", "l_img", ")", "\n", "\n", "sample", "[", "'PA'", "]", "=", "pa_img", "\n", "sample", "[", "'L'", "]", "=", "l_img", "\n", "return", "sample", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Untitled.split_dataset": [[14, 31], ["pandas.read_csv", "df.sample().reset_index.sample().reset_index", "df.sample().reset_index.PatientID.unique", "int", "int", "open", "pickle.dump", "df.sample().reset_index.sample", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.pixelcnn_setup.sample"], ["def", "split_dataset", "(", "csvpath", ":", "str", ",", "output", ":", "str", ",", "train", "=", "0.6", ",", "val", "=", "0.2", ",", "seed", "=", "666", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Split the data contained in csvpath in train/val/test, and write the results in output.\n    \"\"\"", "\n", "df", "=", "pd", ".", "read_csv", "(", "csvpath", ")", "\n", "df", "=", "df", ".", "sample", "(", "frac", "=", "1", ",", "random_state", "=", "seed", ")", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "patients_ids", "=", "df", ".", "PatientID", ".", "unique", "(", ")", "\n", "\n", "train_val_split_idx", "=", "int", "(", "train", "*", "len", "(", "patients_ids", ")", ")", "\n", "val_test_split_idx", "=", "int", "(", "(", "train", "+", "val", ")", "*", "len", "(", "patients_ids", ")", ")", "\n", "\n", "train_ids", "=", "patients_ids", "[", ":", "train_val_split_idx", "]", "\n", "val_ids", "=", "patients_ids", "[", "train_val_split_idx", ":", "val_test_split_idx", "]", "\n", "test_ids", "=", "patients_ids", "[", "val_test_split_idx", ":", "]", "\n", "\n", "with", "open", "(", "output", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "(", "train_ids", ",", "val_ids", ",", "test_ids", ")", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Chest_eval_rand_seeds.train_subroutine": [[22, 39], ["D1.get_D1_train", "ODmethod.propose_H", "D1.get_D1_valid", "D2.get_D2_valid", "len", "len", "min", "print", "D1.get_D1_valid.trim_dataset", "D2.get_D2_valid.trim_dataset", "print", "ODmethod.train_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H"], ["def", "train_subroutine", "(", "ODmethod", ",", "D1", ",", "D2", ")", ":", "\n", "    ", "d1_train", "=", "D1", ".", "get_D1_train", "(", ")", "\n", "ODmethod", ".", "propose_H", "(", "d1_train", ")", "\n", "d1_valid", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "d2_valid", "=", "D2", ".", "get_D2_valid", "(", "D1", ")", "\n", "d1_valid_len", "=", "len", "(", "d1_valid", ")", "\n", "d2_valid_len", "=", "len", "(", "d2_valid", ")", "\n", "final_len", "=", "min", "(", "d1_valid_len", ",", "d2_valid_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d2_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "d2_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "valid_mixture", "=", "d1_valid", "+", "d2_valid", "\n", "print", "(", "\"Final valid size: %d+%d=%d\"", "%", "(", "len", "(", "d1_valid", ")", ",", "len", "(", "d2_valid", ")", ",", "len", "(", "valid_mixture", ")", ")", ")", "\n", "train_acc", "=", "ODmethod", ".", "train_H", "(", "valid_mixture", ")", "\n", "return", "train_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Chest_eval_rand_seeds.eval_subroutine": [[41, 58], ["D1.get_D1_test", "D3.get_D2_test", "len", "len", "min", "print", "D1.get_D1_test.trim_dataset", "D3.get_D2_test.trim_dataset", "print", "ODmethod.test_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H"], ["", "def", "eval_subroutine", "(", "ODmethod", ",", "D1", ",", "D3", ")", ":", "\n", "    ", "d1_test", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "d3_test", "=", "D3", ".", "get_D2_test", "(", "D1", ")", "\n", "# Adjust the sizes.", "\n", "d1_test_len", "=", "len", "(", "d1_test", ")", "\n", "d3_test_len", "=", "len", "(", "d3_test", ")", "\n", "final_len", "=", "min", "(", "d1_test_len", ",", "d3_test_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d3_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "d3_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "test_mixture", "=", "d1_test", "+", "d3_test", "\n", "print", "(", "\"Final test size: %d+%d=%d\"", "%", "(", "len", "(", "d1_test", ")", ",", "len", "(", "d3_test", ")", ",", "len", "(", "test_mixture", ")", ")", ")", "\n", "\n", "acc", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "=", "ODmethod", ".", "test_H", "(", "test_mixture", ")", "\n", "return", "acc", ",", "auroc", ",", "auprc", ",", "None", ",", "None", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Chest_eval_rand_seeds.init_and_load_results": [[60, 72], ["print", "os.path.exists", "print", "torch.load", "type", "print"], "function", ["None"], ["", "def", "init_and_load_results", "(", "path", ",", "args", ")", ":", "\n", "# If results exists already, just continue where left off.", "\n", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "args", ".", "force_run", ":", "\n", "        ", "print", "(", "\"Loading previous checkpoint\"", ")", "\n", "results", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "type", "(", "results", ")", "is", "dict", ":", "\n", "            ", "if", "results", "[", "'ver'", "]", "==", "RESULTS_VER", ":", "\n", "                ", "print", "(", "\"Loaded previous checkpoint\"", ")", "\n", "return", "results", "\n", "", "", "", "print", "(", "\"No compatible result found, initializing fresh results\"", ")", "\n", "return", "{", "'ver'", ":", "RESULTS_VER", ",", "'results'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Chest_eval_rand_seeds.has_done_before": [[74, 79], ["None"], "function", ["None"], ["", "def", "has_done_before", "(", "method", ",", "d1", ",", "d2", ",", "d3", ")", ":", "\n", "    ", "for", "res", "in", "results", "[", "'results'", "]", ":", "\n", "        ", "if", "res", "[", "0", "]", "==", "method", "and", "res", "[", "1", "]", "==", "d1", "and", "res", "[", "2", "]", "==", "d2", "and", "res", "[", "3", "]", "==", "d3", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std": [[10, 20], ["numpy.average", "numpy.average", "numpy.sqrt", "numpy.arange", "numpy.expand_dims", "len"], "function", ["None"], ["def", "weighted_std", "(", "values", ",", "weights", ",", "axis", "=", "None", ")", ":", "\n", "    ", "if", "axis", "is", "None", ":", "\n", "        ", "axis", "=", "np", ".", "arange", "(", "len", "(", "values", ".", "shape", ")", ")", "\n", "\n", "", "average", "=", "np", ".", "average", "(", "values", ",", "weights", "=", "weights", ",", "axis", "=", "axis", ")", "\n", "for", "axi", "in", "axis", ":", "\n", "        ", "average", "=", "np", ".", "expand_dims", "(", "average", ",", "axi", ")", "\n", "# Fast and numerically precise:", "\n", "", "variance", "=", "np", ".", "average", "(", "(", "values", "-", "average", ")", "**", "2", ",", "weights", "=", "weights", ",", "axis", "=", "axis", ")", "\n", "return", "np", ".", "sqrt", "(", "variance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.process_results": [[21, 91], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "zip", "numpy.nonzero", "range", "type", "method_handles.index", "true_d2_handles.index", "d3_handles.index", "__acc.append", "__auroc.append", "__auprc.append", "numpy.array", "len", "print", "numpy.stack", "any", "method_handles.append", "true_d2_handles.append", "d3_handles.append", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len"], "function", ["None"], ["", "def", "process_results", "(", "d2_handles", ",", "results", ")", ":", "\n", "    ", "rec_error", "=", "{", "\n", "\"reconst_thresh/0\"", ":", "\"12Layer-AE-BCE\"", ",", "\n", "\"reconst_thresh/1\"", ":", "\"12Layer-AE-MSE\"", ",", "\n", "\"reconst_thresh/2\"", ":", "\"12Layer-VAE-BCE\"", ",", "\n", "\"reconst_thresh/3\"", ":", "\"12Layer-VAE-MSE\"", ",", "\n", "\"reconst_thresh/4\"", ":", "\"ALIstyle-AE-BCE\"", ",", "\n", "\"reconst_thresh/5\"", ":", "\"ALIstyle-AE-MSE\"", ",", "\n", "\"reconst_thresh/6\"", ":", "\"ALIstyle-VAE-BCE\"", ",", "\n", "\"reconst_thresh/7\"", ":", "\"ALIstyle-VAE-MSE\"", ",", "\n", "\"reconst_thresh/8\"", ":", "\"DeepRes-AE-BCE\"", ",", "\n", "\"reconst_thresh/9\"", ":", "\"DeepRes-AE-MSE\"", ",", "\n", "\"reconst_thresh/10\"", ":", "\"ALIRes-AE-BCE\"", ",", "\n", "\"reconst_thresh/11\"", ":", "\"ALIRes-AE-MSE\"", ",", "\n", "\"reconst_thresh/12\"", ":", "\"ALIRes-VAE-BCE\"", ",", "\n", "\"reconst_thresh/13\"", ":", "\"ALIRes-VAE-MSE\"", ",", "\n", "}", "\n", "if", "type", "(", "d2_handles", ")", "==", "str", ":", "\n", "        ", "d2_handles", "=", "[", "d2_handles", ",", "]", "\n", "", "__acc", "=", "[", "]", "\n", "__auroc", "=", "[", "]", "\n", "__auprc", "=", "[", "]", "\n", "\n", "method_handles", "=", "[", "]", "\n", "d3_handles", "=", "[", "]", "\n", "true_d2_handles", "=", "[", "]", "\n", "for", "row", "in", "results", ":", "\n", "        ", "if", "not", "any", "(", "[", "handle", "in", "row", "[", "2", "]", "for", "handle", "in", "d2_handles", "]", ")", ":", "\n", "            ", "continue", "\n", "", "if", "row", "[", "0", "]", "in", "rec_error", ":", "\n", "            ", "token", "=", "rec_error", "[", "row", "[", "0", "]", "]", "\n", "", "else", ":", "\n", "            ", "token", "=", "row", "[", "0", "]", "\n", "", "if", "token", "not", "in", "method_handles", ":", "\n", "            ", "method_handles", ".", "append", "(", "token", ")", "\n", "", "ind_1", "=", "method_handles", ".", "index", "(", "token", ")", "\n", "if", "row", "[", "2", "]", "not", "in", "true_d2_handles", ":", "\n", "            ", "true_d2_handles", ".", "append", "(", "row", "[", "2", "]", ")", "\n", "", "ind_2", "=", "true_d2_handles", ".", "index", "(", "row", "[", "2", "]", ")", "\n", "if", "row", "[", "3", "]", "not", "in", "d3_handles", ":", "\n", "            ", "d3_handles", ".", "append", "(", "row", "[", "3", "]", ")", "\n", "", "ind_3", "=", "d3_handles", ".", "index", "(", "row", "[", "3", "]", ")", "\n", "__acc", ".", "append", "(", "(", "row", "[", "6", "]", ",", "ind_1", ",", "ind_2", ",", "ind_3", ")", ")", "\n", "__auroc", ".", "append", "(", "(", "row", "[", "7", "]", ",", "ind_1", ",", "ind_2", ",", "ind_3", ")", ")", "\n", "__auprc", ".", "append", "(", "(", "row", "[", "8", "]", ",", "ind_1", ",", "ind_2", ",", "ind_3", ")", ")", "\n", "", "uc_acc", "=", "np", ".", "zeros", "(", "(", "len", "(", "method_handles", ")", ",", "len", "(", "true_d2_handles", ")", ",", "len", "(", "d3_handles", ")", ")", ")", "\n", "uc_roc", "=", "np", ".", "zeros", "(", "(", "len", "(", "method_handles", ")", ",", "len", "(", "true_d2_handles", ")", ",", "len", "(", "d3_handles", ")", ")", ")", "\n", "uc_prc", "=", "np", ".", "zeros", "(", "(", "len", "(", "method_handles", ")", ",", "len", "(", "true_d2_handles", ")", ",", "len", "(", "d3_handles", ")", ")", ")", "\n", "weights", "=", "np", ".", "zeros", "(", "(", "len", "(", "method_handles", ")", ",", "len", "(", "true_d2_handles", ")", ",", "len", "(", "d3_handles", ")", ")", ")", "\n", "\n", "for", "acc", ",", "roc", ",", "prc", "in", "zip", "(", "__acc", ",", "__auroc", ",", "__auprc", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "weights", "[", "prc", "[", "1", "]", ",", "prc", "[", "2", "]", ",", "prc", "[", "3", "]", "]", "+=", "1", "\n", "uc_acc", "[", "acc", "[", "1", "]", ",", "acc", "[", "2", "]", ",", "acc", "[", "3", "]", "]", "=", "uc_acc", "[", "acc", "[", "1", "]", ",", "acc", "[", "2", "]", ",", "acc", "[", "3", "]", "]", "*", "(", "weights", "[", "acc", "[", "1", "]", ",", "acc", "[", "2", "]", ",", "acc", "[", "3", "]", "]", "-", "1", ")", "/", "weights", "[", "acc", "[", "1", "]", ",", "acc", "[", "2", "]", ",", "acc", "[", "3", "]", "]", "+", "acc", "[", "0", "]", "/", "(", "weights", "[", "acc", "[", "1", "]", ",", "acc", "[", "2", "]", ",", "acc", "[", "3", "]", "]", ")", "\n", "uc_roc", "[", "roc", "[", "1", "]", ",", "roc", "[", "2", "]", ",", "roc", "[", "3", "]", "]", "=", "uc_roc", "[", "roc", "[", "1", "]", ",", "roc", "[", "2", "]", ",", "roc", "[", "3", "]", "]", "*", "(", "weights", "[", "roc", "[", "1", "]", ",", "roc", "[", "2", "]", ",", "roc", "[", "3", "]", "]", "-", "1", ")", "/", "weights", "[", "roc", "[", "1", "]", ",", "roc", "[", "2", "]", ",", "roc", "[", "3", "]", "]", "+", "roc", "[", "0", "]", "/", "(", "weights", "[", "roc", "[", "1", "]", ",", "roc", "[", "2", "]", ",", "roc", "[", "3", "]", "]", ")", "\n", "uc_prc", "[", "prc", "[", "1", "]", ",", "prc", "[", "2", "]", ",", "prc", "[", "3", "]", "]", "=", "uc_prc", "[", "prc", "[", "1", "]", ",", "prc", "[", "2", "]", ",", "prc", "[", "3", "]", "]", "*", "(", "weights", "[", "prc", "[", "1", "]", ",", "prc", "[", "2", "]", ",", "prc", "[", "3", "]", "]", "-", "1", ")", "/", "weights", "[", "prc", "[", "1", "]", ",", "prc", "[", "2", "]", ",", "prc", "[", "3", "]", "]", "+", "prc", "[", "0", "]", "/", "(", "weights", "[", "prc", "[", "1", "]", ",", "prc", "[", "2", "]", ",", "prc", "[", "3", "]", "]", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "", "", "inds_0", ",", "inds_1", ",", "inds_2", "=", "np", ".", "nonzero", "(", "np", ".", "array", "(", "weights", "==", "0", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "inds_0", ")", ")", ":", "\n", "        ", "print", "(", "method_handles", "[", "inds_0", "[", "i", "]", "]", ",", "\", \"", ",", "true_d2_handles", "[", "inds_1", "[", "i", "]", "]", ",", "\",\"", ",", "d3_handles", "[", "inds_2", "[", "i", "]", "]", ",", "\", has no entry\"", ")", "\n", "\n", "", "return", "np", ".", "stack", "(", "[", "weights", ",", "uc_acc", ",", "uc_roc", ",", "uc_prc", "]", ")", ",", "[", "method_handles", ",", "true_d2_handles", ",", "d3_handles", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.make_plot": [[93, 155], ["numpy.average", "numpy.average", "numpy.average", "process_results_multiple.weighted_std", "process_results_multiple.weighted_std", "process_results_multiple.weighted_std", "process_results_multiple.make_plot.proc_var"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.process_results_multiple.weighted_std"], ["", "def", "make_plot", "(", "filename", ",", "title", ",", "true_d2_handles", ",", "method_handles", ",", "csv_data", ")", ":", "\n", "    ", "weights", "=", "csv_data", "[", "0", "]", "\n", "uc_acc", "=", "csv_data", "[", "1", "]", "\n", "uc_roc", "=", "csv_data", "[", "2", "]", "\n", "uc_prc", "=", "csv_data", "[", "3", "]", "\n", "uc1_accm", "=", "np", ".", "average", "(", "uc_acc", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "weights", "=", "weights", ")", "\n", "uc1_rocm", "=", "np", ".", "average", "(", "uc_roc", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "weights", "=", "weights", ")", "\n", "uc1_prcm", "=", "np", ".", "average", "(", "uc_prc", ",", "axis", "=", "(", "1", ",", "2", ")", ",", "weights", "=", "weights", ")", "\n", "\n", "uc1_accv", "=", "weighted_std", "(", "uc_acc", ",", "weights", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "uc1_rocv", "=", "weighted_std", "(", "uc_roc", ",", "weights", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "uc1_prcv", "=", "weighted_std", "(", "uc_prc", ",", "weights", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "def", "proc_var", "(", "m", ",", "v", ")", ":", "\n", "        ", "upper", "=", "[", "]", "\n", "lower", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "m", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "lower", ".", "append", "(", "v", "[", "n", "]", ")", "\n", "if", "m", "[", "n", "]", "+", "v", "[", "n", "]", ">", "1.0", ":", "\n", "                ", "upper", ".", "append", "(", "1.0", "-", "m", "[", "n", "]", ")", "\n", "", "else", ":", "\n", "                ", "upper", ".", "append", "(", "v", "[", "n", "]", ")", "\n", "", "", "return", "np", ".", "array", "(", "[", "lower", ",", "upper", "]", ")", "\n", "", "uc1_accv", "=", "proc_var", "(", "uc1_accm", ",", "uc1_accv", ")", "\n", "uc1_rocv", "=", "proc_var", "(", "uc1_rocm", ",", "uc1_rocv", ")", "\n", "uc1_prcv", "=", "proc_var", "(", "uc1_prcm", ",", "uc1_prcv", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "ind", "=", "np", ".", "arange", "(", "len", "(", "uc1_accm", ")", ")", "# the x locations for the groups", "\n", "width", "=", "0.25", "# the width of the bars", "\n", "rects1", "=", "ax", ".", "bar", "(", "ind", "-", "width", "*", "0.75", ",", "uc1_accm", ",", "width", ",", "yerr", "=", "uc1_accv", ",", "\n", "label", "=", "'Accuracy'", ")", "\n", "rects2", "=", "ax", ".", "bar", "(", "ind", ",", "uc1_rocm", ",", "width", ",", "yerr", "=", "uc1_rocv", ",", "\n", "label", "=", "'AUROC'", ")", "\n", "rects3", "=", "ax", ".", "bar", "(", "ind", "+", "width", "*", "0.75", ",", "uc1_prcm", ",", "width", ",", "yerr", "=", "uc1_prcv", ",", "\n", "label", "=", "'AUPRC'", ")", "\n", "\n", "ax", ".", "set_xticks", "(", "ind", ")", "\n", "ax", ".", "set_xticklabels", "(", "method_handles", ",", "rotation", "=", "45", ",", "ha", "=", "'right'", ")", "\n", "title_str", "=", "title", "+", "\", D2=\"", "\n", "for", "handle", "in", "true_d2_handles", ":", "\n", "        ", "title_str", "+=", "handle", "+", "', '", "\n", "", "title_str", "+=", "\"error bar shows std\"", "\n", "ax", ".", "set_title", "(", "title_str", ")", "\n", "ax", ".", "legend", "(", ")", "\n", "fig", ".", "set_size_inches", "(", "25", ",", "9.5", ")", "\n", "# when saving, specify the DPI", "\n", "\n", "\n", "backend", "=", "matplotlib", ".", "get_backend", "(", ")", "\n", "\n", "if", "backend", "==", "\"QT\"", "or", "backend", "==", "\"Qt5Agg\"", ":", "\n", "        ", "manager", "=", "plt", ".", "get_current_fig_manager", "(", ")", "\n", "manager", ".", "window", ".", "showMaximized", "(", ")", "\n", "", "elif", "backend", "==", "\"TkAgg\"", ":", "\n", "        ", "manager", "=", "plt", ".", "get_current_fig_manager", "(", ")", "\n", "manager", ".", "resize", "(", "*", "manager", ".", "window", ".", "maxsize", "(", ")", ")", "\n", "#else:", "\n", "#    manager = plt.get_current_fig_manager()", "\n", "#    manager.frame.Maximize(True)", "\n", "", "plt", ".", "show", "(", ")", "\n", "plt", ".", "savefig", "(", "filename", ",", "dpi", "=", "300", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.tsne_encoder.proc_data": [[53, 89], ["enumerate", "numpy.concatenate", "numpy.concatenate", "print", "max", "range", "numpy.zeros", "print", "numpy.concatenate", "numpy.concatenate", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "enumerate", "numpy.concatenate", "torch.utils.data.DataLoader", "enumerate", "int", "In_X.append", "len", "len", "torch.tensor", "model.encode().data.cpu().numpy", "np.concatenate.append", "X.numpy", "np.concatenate.append", "np.concatenate.append", "[].numpy", "model.encode().data.cpu", "numpy.ones", "model.encode", "X.cuda"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.encode"], ["def", "proc_data", "(", "args", ",", "model", ",", "D1", ",", "d2s", ",", "tags", ")", ":", "\n", "    ", "Out_X", "=", "[", "]", "\n", "Out_Y", "=", "[", "]", "\n", "Cat2Y", "=", "{", "}", "\n", "for", "y", ",", "D2", "in", "enumerate", "(", "d2s", ")", ":", "\n", "        ", "Cat2Y", "[", "tags", "[", "y", "]", "]", "=", "y", "+", "1", "\n", "loader", "=", "DataLoader", "(", "D2", ",", "shuffle", "=", "True", ",", "batch_size", "=", "args", ".", "points_per_d2", ")", "\n", "for", "i", ",", "(", "X", ",", "_", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "            ", "x", "=", "X", ".", "numpy", "(", ")", "\n", "Out_X", ".", "append", "(", "x", ")", "\n", "Out_Y", ".", "append", "(", "np", ".", "ones", "(", "x", ".", "shape", "[", "0", "]", ")", "*", "(", "y", "+", "1", ")", ")", "\n", "break", "\n", "\n", "", "", "Out_X", "=", "np", ".", "concatenate", "(", "Out_X", ",", "axis", "=", "0", ")", "\n", "Out_Y", "=", "np", ".", "concatenate", "(", "Out_Y", ",", "axis", "=", "0", ")", "\n", "N_out", "=", "Out_X", ".", "shape", "[", "0", "]", "\n", "print", "(", "N_out", ")", "\n", "N_in", "=", "max", "(", "int", "(", "N_out", "*", "0.2", ")", ",", "args", ".", "points_per_d2", ")", "\n", "In_X", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N_in", ")", ":", "\n", "        ", "In_X", ".", "append", "(", "D1", "[", "i", "]", "[", "0", "]", ".", "numpy", "(", ")", ")", "\n", "", "In_Y", "=", "np", ".", "zeros", "(", "N_in", ")", "\n", "print", "(", "N_in", ",", "len", "(", "In_X", ")", ",", "len", "(", "In_Y", ")", ")", "\n", "Cat2Y", "[", "\"In-Data\"", "]", "=", "0", "\n", "ALL_X", "=", "np", ".", "concatenate", "(", "(", "In_X", ",", "Out_X", ")", ")", "\n", "ALL_Y", "=", "np", ".", "concatenate", "(", "(", "In_Y", ",", "Out_Y", ")", ")", "\n", "\n", "new_dataset", "=", "TensorDataset", "(", "torch", ".", "tensor", "(", "ALL_X", ")", ")", "\n", "loader", "=", "DataLoader", "(", "new_dataset", ",", "batch_size", "=", "64", ")", "\n", "ALL_EMBS", "=", "[", "]", "\n", "for", "i", ",", "(", "X", ",", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "x", "=", "model", ".", "encode", "(", "X", ".", "cuda", "(", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "ALL_EMBS", ".", "append", "(", "x", ")", "\n", "", "ALL_EMBS", "=", "np", ".", "concatenate", "(", "ALL_EMBS", ",", "axis", "=", "0", ")", "\n", "\n", "return", "ALL_EMBS", ",", "ALL_Y", ",", "Cat2Y", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.ModelFactory.__init__": [[106, 109], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "parent_class", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "parent_class", "=", "parent_class", "\n", "self", ".", "kwargs", "=", "kwargs", "\n", "", "def", "__call__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.ModelFactory.__call__": [[109, 111], ["global_vars.ModelFactory.parent_class"], "methods", ["None"], ["", "def", "__call__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "parent_class", "(", "**", "self", ".", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_classifier": [[249, 253], ["NotImplementedError"], "function", ["None"], ["", "def", "get_ref_classifier", "(", "dataset", ")", ":", "\n", "    ", "if", "dataset", "in", "dataset_reference_classifiers", ":", "\n", "        ", "return", "dataset_reference_classifiers", "[", "dataset", "]", "\n", "", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_autoencoder": [[254, 258], ["NotImplementedError"], "function", ["None"], ["", "def", "get_ref_autoencoder", "(", "dataset", ")", ":", "\n", "    ", "if", "dataset", "in", "dataset_reference_autoencoders", ":", "\n", "        ", "return", "dataset_reference_autoencoders", "[", "dataset", "]", "\n", "", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_vae": [[259, 263], ["NotImplementedError"], "function", ["None"], ["", "def", "get_ref_vae", "(", "dataset", ")", ":", "\n", "    ", "if", "dataset", "in", "dataset_reference_vaes", ":", "\n", "        ", "return", "dataset_reference_vaes", "[", "dataset", "]", "\n", "", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_ali": [[264, 268], ["NotImplementedError"], "function", ["None"], ["", "def", "get_ref_ali", "(", "dataset", ")", ":", "\n", "    ", "if", "dataset", "in", "dataset_reference_ALI", ":", "\n", "        ", "return", "dataset_reference_ALI", "[", "dataset", "]", "\n", "", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_pixelcnn": [[269, 273], ["NotImplementedError"], "function", ["None"], ["", "def", "get_ref_pixelcnn", "(", "dataset", ")", ":", "\n", "    ", "if", "dataset", "in", "dataset_reference_pcnns", ":", "\n", "        ", "return", "dataset_reference_pcnns", "[", "dataset", "]", "\n", "", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_method": [[274, 280], ["name.split", "len", "int"], "function", ["None"], ["", "def", "get_method", "(", "name", ",", "args", ")", ":", "\n", "    ", "elements", "=", "name", ".", "split", "(", "'/'", ")", "\n", "instance", "=", "all_methods", "[", "elements", "[", "0", "]", "]", "(", "args", ")", "\n", "if", "len", "(", "elements", ")", ">", "1", ":", "\n", "        ", "instance", ".", "default_model", "=", "int", "(", "elements", "[", "1", "]", ")", "\n", "", "return", "instance", "\n", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.DRD_eval_rand_seeds.train_subroutine": [[22, 39], ["D1.get_D1_train", "ODmethod.propose_H", "D1.get_D1_valid", "D2.get_D2_valid", "len", "len", "min", "print", "D1.get_D1_valid.trim_dataset", "D2.get_D2_valid.trim_dataset", "print", "ODmethod.train_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H"], ["def", "train_subroutine", "(", "ODmethod", ",", "D1", ",", "D2", ")", ":", "\n", "    ", "d1_train", "=", "D1", ".", "get_D1_train", "(", ")", "\n", "ODmethod", ".", "propose_H", "(", "d1_train", ")", "\n", "d1_valid", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "d2_valid", "=", "D2", ".", "get_D2_valid", "(", "D1", ")", "\n", "d1_valid_len", "=", "len", "(", "d1_valid", ")", "\n", "d2_valid_len", "=", "len", "(", "d2_valid", ")", "\n", "final_len", "=", "min", "(", "d1_valid_len", ",", "d2_valid_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d2_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "d2_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "valid_mixture", "=", "d1_valid", "+", "d2_valid", "\n", "print", "(", "\"Final valid size: %d+%d=%d\"", "%", "(", "len", "(", "d1_valid", ")", ",", "len", "(", "d2_valid", ")", ",", "len", "(", "valid_mixture", ")", ")", ")", "\n", "train_acc", "=", "ODmethod", ".", "train_H", "(", "valid_mixture", ")", "\n", "return", "train_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.DRD_eval_rand_seeds.eval_subroutine": [[41, 58], ["D1.get_D1_test", "D3.get_D2_test", "len", "len", "min", "print", "D1.get_D1_test.trim_dataset", "D3.get_D2_test.trim_dataset", "print", "ODmethod.test_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H"], ["", "def", "eval_subroutine", "(", "ODmethod", ",", "D1", ",", "D3", ")", ":", "\n", "    ", "d1_test", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "d3_test", "=", "D3", ".", "get_D2_test", "(", "D1", ")", "\n", "# Adjust the sizes.", "\n", "d1_test_len", "=", "len", "(", "d1_test", ")", "\n", "d3_test_len", "=", "len", "(", "d3_test", ")", "\n", "final_len", "=", "min", "(", "d1_test_len", ",", "d3_test_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d3_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "d3_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "test_mixture", "=", "d1_test", "+", "d3_test", "\n", "print", "(", "\"Final test size: %d+%d=%d\"", "%", "(", "len", "(", "d1_test", ")", ",", "len", "(", "d3_test", ")", ",", "len", "(", "test_mixture", ")", ")", ")", "\n", "\n", "acc", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "=", "ODmethod", ".", "test_H", "(", "test_mixture", ")", "\n", "return", "acc", ",", "auroc", ",", "auprc", ",", "None", ",", "None", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.DRD_eval_rand_seeds.init_and_load_results": [[60, 72], ["print", "os.path.exists", "print", "torch.load", "type", "print"], "function", ["None"], ["", "def", "init_and_load_results", "(", "path", ",", "args", ")", ":", "\n", "# If results exists already, just continue where left off.", "\n", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "args", ".", "force_run", ":", "\n", "        ", "print", "(", "\"Loading previous checkpoint\"", ")", "\n", "results", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "type", "(", "results", ")", "is", "dict", ":", "\n", "            ", "if", "results", "[", "'ver'", "]", "==", "RESULTS_VER", ":", "\n", "                ", "print", "(", "\"Loaded previous checkpoint\"", ")", "\n", "return", "results", "\n", "", "", "", "print", "(", "\"No compatible result found, initializing fresh results\"", ")", "\n", "return", "{", "'ver'", ":", "RESULTS_VER", ",", "'results'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.DRD_eval_rand_seeds.has_done_before": [[74, 79], ["None"], "function", ["None"], ["", "def", "has_done_before", "(", "method", ",", "d1", ",", "d2", ",", "d3", ")", ":", "\n", "    ", "for", "res", "in", "results", "[", "'results'", "]", ":", "\n", "        ", "if", "res", "[", "0", "]", "==", "method", "and", "res", "[", "1", "]", "==", "d1", "and", "res", "[", "2", "]", "==", "d2", "and", "res", "[", "3", "]", "==", "d3", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Time_methods.train_subroutine": [[23, 40], ["D1.get_D1_train", "ODmethod.propose_H", "D1.get_D1_valid", "D2.get_D2_valid", "len", "len", "min", "print", "D1.get_D1_valid.trim_dataset", "D2.get_D2_valid.trim_dataset", "print", "ODmethod.train_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H"], ["def", "train_subroutine", "(", "ODmethod", ",", "D1", ",", "D2", ")", ":", "\n", "    ", "d1_train", "=", "D1", ".", "get_D1_train", "(", ")", "\n", "ODmethod", ".", "propose_H", "(", "d1_train", ")", "\n", "d1_valid", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "d2_valid", "=", "D2", ".", "get_D2_valid", "(", "D1", ")", "\n", "d1_valid_len", "=", "len", "(", "d1_valid", ")", "\n", "d2_valid_len", "=", "len", "(", "d2_valid", ")", "\n", "final_len", "=", "min", "(", "d1_valid_len", ",", "d2_valid_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d2_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "d2_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "valid_mixture", "=", "d1_valid", "+", "d2_valid", "\n", "print", "(", "\"Final valid size: %d+%d=%d\"", "%", "(", "len", "(", "d1_valid", ")", ",", "len", "(", "d2_valid", ")", ",", "len", "(", "valid_mixture", ")", ")", ")", "\n", "train_acc", "=", "ODmethod", ".", "train_H", "(", "valid_mixture", ")", "\n", "return", "train_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Time_methods.eval_subroutine": [[42, 59], ["D1.get_D1_test", "D3.get_D2_test", "len", "len", "min", "print", "D1.get_D1_test.trim_dataset", "D3.get_D2_test.trim_dataset", "print", "ODmethod.test_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H"], ["", "def", "eval_subroutine", "(", "ODmethod", ",", "D1", ",", "D3", ")", ":", "\n", "    ", "d1_test", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "d3_test", "=", "D3", ".", "get_D2_test", "(", "D1", ")", "\n", "# Adjust the sizes.", "\n", "d1_test_len", "=", "len", "(", "d1_test", ")", "\n", "d3_test_len", "=", "len", "(", "d3_test", ")", "\n", "final_len", "=", "min", "(", "d1_test_len", ",", "d3_test_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d3_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "d3_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "test_mixture", "=", "d1_test", "+", "d3_test", "\n", "print", "(", "\"Final test size: %d+%d=%d\"", "%", "(", "len", "(", "d1_test", ")", ",", "len", "(", "d3_test", ")", ",", "len", "(", "test_mixture", ")", ")", ")", "\n", "\n", "acc", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", ",", "avg_time", "=", "ODmethod", ".", "test_H", "(", "test_mixture", ")", "\n", "return", "acc", ",", "auroc", ",", "auprc", ",", "None", ",", "None", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", ",", "avg_time", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Time_methods.init_and_load_results": [[61, 73], ["print", "os.path.exists", "print", "torch.load", "type", "print"], "function", ["None"], ["", "def", "init_and_load_results", "(", "path", ",", "args", ")", ":", "\n", "# If results exists already, just continue where left off.", "\n", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "args", ".", "force_run", ":", "\n", "        ", "print", "(", "\"Loading previous checkpoint\"", ")", "\n", "results", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "type", "(", "results", ")", "is", "dict", ":", "\n", "            ", "if", "results", "[", "'ver'", "]", "==", "RESULTS_VER", ":", "\n", "                ", "print", "(", "\"Loaded previous checkpoint\"", ")", "\n", "return", "results", "\n", "", "", "", "print", "(", "\"No compatible result found, initializing fresh results\"", ")", "\n", "return", "{", "'ver'", ":", "RESULTS_VER", ",", "'results'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.Time_methods.has_done_before": [[75, 80], ["None"], "function", ["None"], ["", "def", "has_done_before", "(", "method", ",", "d1", ",", "d2", ",", "d3", ")", ":", "\n", "    ", "for", "res", "in", "results", "[", "'results'", "]", ":", "\n", "        ", "if", "res", "[", "0", "]", "==", "method", "and", "res", "[", "1", "]", "==", "d1", "and", "res", "[", "2", "]", "==", "d2", "and", "res", "[", "3", "]", "==", "d3", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_nih_3264.train_subroutine": [[16, 33], ["D1.get_D1_train", "ODmethod.propose_H", "D1.get_D1_valid", "D2.get_D2_valid", "len", "len", "min", "print", "D1.get_D1_valid.trim_dataset", "D2.get_D2_valid.trim_dataset", "print", "ODmethod.train_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H"], ["def", "train_subroutine", "(", "ODmethod", ",", "D1", ",", "D2", ")", ":", "\n", "    ", "d1_train", "=", "D1", ".", "get_D1_train", "(", ")", "\n", "ODmethod", ".", "propose_H", "(", "d1_train", ")", "\n", "d1_valid", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "d2_valid", "=", "D2", ".", "get_D2_valid", "(", "D1", ")", "\n", "d1_valid_len", "=", "len", "(", "d1_valid", ")", "\n", "d2_valid_len", "=", "len", "(", "d2_valid", ")", "\n", "final_len", "=", "min", "(", "d1_valid_len", ",", "d2_valid_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d2_valid_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "d2_valid", ".", "trim_dataset", "(", "final_len", ")", "\n", "valid_mixture", "=", "d1_valid", "+", "d2_valid", "\n", "print", "(", "\"Final valid size: %d+%d=%d\"", "%", "(", "len", "(", "d1_valid", ")", ",", "len", "(", "d2_valid", ")", ",", "len", "(", "valid_mixture", ")", ")", ")", "\n", "train_acc", "=", "ODmethod", ".", "train_H", "(", "valid_mixture", ")", "\n", "return", "train_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_nih_3264.eval_subroutine": [[35, 87], ["D1.get_D1_test", "D3.get_D2_test", "len", "len", "min", "print", "D1.get_D1_test.trim_dataset", "D3.get_D2_test.trim_dataset", "print", "ODmethod.test_H", "termcolor.colored", "termcolor.colored", "termcolor.colored", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H"], ["", "def", "eval_subroutine", "(", "ODmethod", ",", "D1", ",", "D3", ")", ":", "\n", "    ", "d1_test", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "d3_test", "=", "D3", ".", "get_D2_test", "(", "D1", ")", "\n", "# Adjust the sizes.", "\n", "d1_test_len", "=", "len", "(", "d1_test", ")", "\n", "d3_test_len", "=", "len", "(", "d3_test", ")", "\n", "final_len", "=", "min", "(", "d1_test_len", ",", "d3_test_len", ")", "\n", "print", "(", "\"Adjusting %s and %s to %s\"", "%", "(", "colored", "(", "'D1=%d'", "%", "d1_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'D2=%d'", "%", "d3_test_len", ",", "'red'", ")", ",", "\n", "colored", "(", "'Min=%d'", "%", "final_len", ",", "'green'", ")", ")", ")", "\n", "d1_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "d3_test", ".", "trim_dataset", "(", "final_len", ")", "\n", "test_mixture", "=", "d1_test", "+", "d3_test", "\n", "print", "(", "\"Final test size: %d+%d=%d\"", "%", "(", "len", "(", "d1_test", ")", ",", "len", "(", "d3_test", ")", ",", "len", "(", "test_mixture", ")", ")", ")", "\n", "\n", "acc", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "=", "ODmethod", ".", "test_H", "(", "test_mixture", ")", "\n", "'''fig = plt.figure()\n    lw = 2\n    ax = fig.add_subplot(111)\n    ax.plot(fpr, tpr, color='g',\n             lw=lw, label='ROC curve (area = %0.2f)' % auroc)\n    ax.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\n    ax.axes.set_xlim([0.0, 1.0])\n    ax.axes.set_ylim([0.0, 1.05])\n    ax.axes.set_xlabel('False Positive Rate')\n    ax.axes.set_ylabel('True Positive Rate')\n    ax.axes.legend(loc=\"lower right\")\n    plt.setp([ax.get_xticklines() + ax.get_yticklines() + ax.get_xgridlines() + ax.get_ygridlines()], antialiased=False)\n    fig.canvas.draw()\n\n    # Now we can save it to a numpy array.\n    ROC = np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8)\n    ROC = ROC.reshape(fig.canvas.get_width_height()[::-1] + (3,))\n    plt.close(fig)\n    fig = plt.figure()\n    lw = 2\n    ax = fig.add_subplot(111)\n    ax.plot(recall, precision, color='b',\n            lw=lw, label='P-R curve (AP = %0.2f)' % auprc)\n    ax.axes.set_xlim([0.0, 1.0])\n    ax.axes.set_ylim([0.0, 1.05])\n    ax.axes.set_xlabel('Recall')\n    ax.axes.set_ylabel('Precision')\n    ax.axes.legend(loc=\"lower left\")\n    plt.setp([ax.get_xticklines() + ax.get_yticklines() + ax.get_xgridlines() + ax.get_ygridlines()], antialiased=False)\n    fig.canvas.draw()\n\n    # Now we can save it to a numpy array.\n    PRC = np.frombuffer(fig.canvas.tostring_rgb(), dtype=np.uint8)\n    PRC = PRC.reshape(fig.canvas.get_width_height()[::-1] + (3,))\n    plt.close(fig)'''", "\n", "return", "acc", ",", "auroc", ",", "auprc", ",", "None", ",", "None", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_nih_3264.init_and_load_results": [[89, 101], ["print", "os.path.exists", "print", "torch.load", "type", "print"], "function", ["None"], ["", "def", "init_and_load_results", "(", "path", ",", "args", ")", ":", "\n", "# If results exists already, just continue where left off.", "\n", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", "and", "not", "args", ".", "force_run", ":", "\n", "        ", "print", "(", "\"Loading previous checkpoint\"", ")", "\n", "results", "=", "torch", ".", "load", "(", "path", ")", "\n", "if", "type", "(", "results", ")", "is", "dict", ":", "\n", "            ", "if", "results", "[", "'ver'", "]", "==", "RESULTS_VER", ":", "\n", "                ", "print", "(", "\"Loaded previous checkpoint\"", ")", "\n", "return", "results", "\n", "", "", "", "print", "(", "\"No compatible result found, initializing fresh results\"", ")", "\n", "return", "{", "'ver'", ":", "RESULTS_VER", ",", "'results'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.eval3d_nih_3264.has_done_before": [[103, 108], ["None"], "function", ["None"], ["", "def", "has_done_before", "(", "method", ",", "d1", ",", "d2", ",", "d3", ")", ":", "\n", "    ", "for", "res", "in", "results", "[", "'results'", "]", ":", "\n", "        ", "if", "res", "[", "0", "]", "==", "method", "and", "res", "[", "1", "]", "==", "d1", "and", "res", "[", "2", "]", "==", "d2", "and", "res", "[", "3", "]", "==", "d3", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.experiment_merger.does_match": [[25, 34], ["len", "len", "len", "experiment_merger.does_match"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.experiment_merger.does_match"], ["def", "does_match", "(", "record_a", ",", "record_b", ")", ":", "\n", "    ", "if", "len", "(", "record_a", ")", "!=", "len", "(", "record_b", ")", ":", "\n", "        ", "return", "False", "\n", "", "if", "len", "(", "record_a", ")", "==", "0", ":", "\n", "        ", "return", "True", "\n", "", "if", "record_a", "[", "0", "]", "==", "record_b", "[", "0", "]", ":", "\n", "        ", "return", "does_match", "(", "record_a", "[", "1", ":", "]", ",", "record_b", "[", "1", ":", "]", ")", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.experiment_merger.is_duplicate": [[35, 40], ["experiment_merger.does_match"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.experiment_merger.does_match"], ["", "", "def", "is_duplicate", "(", "base", ",", "new_record", ")", ":", "\n", "    ", "for", "entry", "in", "base", ":", "\n", "        ", "if", "does_match", "(", "entry", ",", "new_record", ")", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.__init__": [[11, 14], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "measure_name", ")", ":", "\n", "        ", "self", ".", "measure_name", "=", "measure_name", "\n", "self", ".", "measurements", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.reset": [[15, 17], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "measurements", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.add_measurement": [[18, 29], ["logger.Measure.measurements.append", "len", "logger.Measure.measurements[].append", "len"], "methods", ["None"], ["", "def", "add_measurement", "(", "self", ",", "measurement", ",", "epoch", ",", "iteration", "=", "None", ")", ":", "\n", "        ", "while", "len", "(", "self", ".", "measurements", ")", "-", "1", "<", "epoch", ":", "\n", "            ", "self", ".", "measurements", ".", "append", "(", "None", ")", "\n", "", "if", "iteration", "is", "None", ":", "\n", "            ", "self", ".", "measurements", "[", "epoch", "]", "=", "measurement", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "measurements", "[", "epoch", "]", "is", "None", ":", "\n", "                ", "self", ".", "measurements", "[", "epoch", "]", "=", "[", "]", "\n", "", "while", "len", "(", "self", ".", "measurements", "[", "epoch", "]", ")", "-", "1", "<", "iteration", ":", "\n", "                ", "self", ".", "measurements", "[", "epoch", "]", ".", "append", "(", "None", ")", "\n", "", "self", ".", "measurements", "[", "epoch", "]", "[", "iteration", "]", "=", "measurement", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.mean_epoch": [[30, 39], ["type", "numpy.array().mean", "numpy.array().sum", "numpy.array", "numpy.array"], "methods", ["None"], ["", "", "def", "mean_epoch", "(", "self", ",", "epoch", "=", "-", "1", ")", ":", "\n", "        ", "vals", "=", "self", ".", "measurements", "[", "epoch", "]", "\n", "if", "type", "(", "vals", ")", "==", "list", ":", "\n", "            ", "if", "self", ".", "measure_normalizer", "is", "None", ":", "\n", "                ", "return", "np", ".", "array", "(", "vals", ")", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "                ", "return", "np", ".", "array", "(", "vals", ")", ".", "sum", "(", ")", "/", "self", ".", "measure_normalizer", "\n", "", "", "else", ":", "\n", "            ", "return", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.sum_epoch": [[40, 46], ["type", "numpy.array().sum", "numpy.array"], "methods", ["None"], ["", "", "def", "sum_epoch", "(", "self", ",", "epoch", "=", "-", "1", ")", ":", "\n", "        ", "vals", "=", "self", ".", "measurements", "[", "epoch", "]", "\n", "if", "type", "(", "vals", ")", "==", "list", ":", "\n", "            ", "return", "np", ".", "array", "(", "vals", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.visualize_epoch": [[47, 59], ["numpy.arange", "numpy.array", "visdom.line", "type", "len", "len", "dict"], "methods", ["None"], ["", "", "def", "visualize_epoch", "(", "self", ",", "visdom", ",", "epoch", "=", "-", "1", ")", ":", "\n", "        ", "vals", "=", "self", ".", "measurements", "[", "epoch", "]", "\n", "assert", "type", "(", "vals", ")", "==", "list", ",", "'The requested epoch visualization is not a list! %s'", "%", "self", ".", "measure_name", "\n", "\n", "title", "=", "self", ".", "measure_name", "\n", "win", "=", "self", ".", "measure_name", "\n", "X", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "measurements", "[", "epoch", "]", ")", ")", ";", "\n", "Y", "=", "np", ".", "array", "(", "self", ".", "measurements", "[", "epoch", "]", ")", "\n", "if", "epoch", "==", "-", "1", ":", "\n", "            ", "epoch", "=", "len", "(", "self", ".", "measurements", ")", "-", "1", "\n", "", "visdom", ".", "line", "(", "X", "=", "X", ",", "Y", "=", "Y", ",", "\n", "opts", "=", "dict", "(", "title", "=", "'Epoch %d - %s'", "%", "(", "epoch", ",", "title", ")", ")", ",", "win", "=", "win", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.visualize_all_epochs": [[60, 74], ["numpy.arange", "numpy.array", "visdom.line", "type", "len", "dict"], "methods", ["None"], ["", "def", "visualize_all_epochs", "(", "self", ",", "visdom", ")", ":", "\n", "        ", "\"\"\"\n            When you've been loggin a vector/iteration you'd want to visualize\n            them all this way.\n        \"\"\"", "\n", "vals", "=", "self", ".", "measurements", "\n", "assert", "type", "(", "vals", ")", "==", "list", ",", "'The requested epoch visualization is not a list! %s'", "%", "self", ".", "measure_name", "\n", "\n", "title", "=", "self", ".", "measure_name", "\n", "win", "=", "self", ".", "measure_name", "\n", "X", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "measurements", ")", ")", "\n", "Y", "=", "np", ".", "array", "(", "self", ".", "measurements", ")", "\n", "visdom", ".", "line", "(", "X", "=", "X", ",", "Y", "=", "Y", ",", "\n", "opts", "=", "dict", "(", "title", "=", "'All Epochs - %s'", "%", "(", "title", ")", ",", "legend", "=", "self", ".", "legend", ")", ",", "win", "=", "win", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.generate_average_XY": [[75, 119], ["range", "numpy.arange", "numpy.array", "len", "len", "range", "numpy.array", "numpy.delete", "numpy.delete", "numpy.zeros", "range", "type", "len", "len", "len", "Y[].mean", "type", "max", "type", "type", "len", "dummy_Y.append", "dummy_Y.append", "dummy_Y.append", "dummy_Y.append", "dummy_Y.append", "dummy_Y.append", "numpy.nanmean", "numpy.nanmean", "float", "numpy.array", "numpy.nansum", "numpy.nansum", "float", "numpy.array", "range"], "methods", ["None"], ["", "def", "generate_average_XY", "(", "self", ",", "second_order", "=", "False", ")", ":", "\n", "        ", "is_average", "=", "False", "\n", "measure_dim", "=", "1", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "measurements", ")", ")", ":", "\n", "            ", "if", "type", "(", "self", ".", "measurements", "[", "i", "]", ")", "==", "list", ":", "\n", "                ", "is_average", "=", "True", "\n", "if", "type", "(", "self", ".", "measurements", "[", "i", "]", "[", "0", "]", ")", "==", "list", ":", "\n", "                    ", "measure_dim", "=", "max", "(", "measure_dim", ",", "len", "(", "self", ".", "measurements", "[", "i", "]", "[", "0", "]", ")", ")", "\n", "\n", "", "", "", "X", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "measurements", ")", ")", "\n", "Y", "=", "np", ".", "array", "(", "self", ".", "measurements", ")", "\n", "skip", "=", "False", "\n", "if", "is_average", ":", "\n", "            ", "dummy_Y", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "Y", ")", ")", ":", "\n", "                ", "if", "type", "(", "Y", "[", "i", "]", ")", "==", "list", ":", "\n", "                    ", "if", "self", ".", "measure_normalizer", "is", "None", ":", "\n", "                        ", "dummy_Y", ".", "append", "(", "np", ".", "nanmean", "(", "np", ".", "array", "(", "Y", "[", "i", "]", ")", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "                        ", "dummy_Y", ".", "append", "(", "np", ".", "nansum", "(", "np", ".", "array", "(", "Y", "[", "i", "]", ")", ",", "0", ")", "/", "self", ".", "measure_normalizer", ")", "\n", "", "", "if", "type", "(", "Y", "[", "i", "]", ")", "==", "np", ".", "ndarray", ":", "\n", "                    ", "if", "self", ".", "measure_normalizer", "is", "None", ":", "\n", "                        ", "dummy_Y", ".", "append", "(", "np", ".", "nanmean", "(", "Y", "[", "i", "]", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "                        ", "dummy_Y", ".", "append", "(", "np", ".", "nansum", "(", "Y", "[", "i", "]", ",", "0", ")", "/", "self", ".", "measure_normalizer", ")", "\n", "", "", "if", "Y", "[", "i", "]", "is", "None", ":", "\n", "                    ", "if", "measure_dim", ">", "1", ":", "\n", "                        ", "dummy_Y", ".", "append", "(", "[", "float", "(", "'nan'", ")", "for", "q", "in", "range", "(", "measure_dim", ")", "]", ")", "\n", "", "else", ":", "\n", "                        ", "dummy_Y", ".", "append", "(", "float", "(", "'nan'", ")", ")", "\n", "", "skip", "=", "skip", "or", "(", "i", "==", "0", ")", "\n", "", "", "Y", "=", "np", ".", "array", "(", "dummy_Y", ")", "\n", "", "else", ":", "\n", "            ", "if", "Y", "[", "0", "]", "is", "None", ":", "\n", "                ", "skip", "=", "True", "\n", "", "", "if", "skip", ":", "\n", "            ", "X", "=", "np", ".", "delete", "(", "X", ",", "0", ",", "axis", "=", "0", ")", "\n", "Y", "=", "np", ".", "delete", "(", "Y", ",", "0", ",", "axis", "=", "0", ")", "\n", "", "if", "second_order", ":", "\n", "            ", "Y_n", "=", "np", ".", "zeros", "(", "len", "(", "Y", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "Y", ")", ")", ":", "\n", "                ", "Y_n", "[", "i", "]", "=", "Y", "[", "i", "]", ".", "mean", "(", ")", "\n", "", "Y", "=", "Y_n", "\n", "", "return", "X", ",", "Y", ",", "is_average", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.visualize_average": [[120, 134], ["logger.Measure.generate_average_XY", "visdom.line", "dict"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.generate_average_XY"], ["", "def", "visualize_average", "(", "self", ",", "visdom", ",", "second_order", "=", "False", ")", ":", "\n", "        ", "title", "=", "self", ".", "measure_name", "\n", "win", "=", "self", ".", "measure_name", "\n", "legend", "=", "self", ".", "legend", "\n", "X", ",", "Y", ",", "is_average", "=", "self", ".", "generate_average_XY", "(", "second_order", ")", "\n", "if", "is_average", ":", "\n", "            ", "title", "=", "'Average %s'", "%", "(", "title", ")", "\n", "win", "=", "'ave%s'", "%", "(", "win", ")", "\n", "if", "second_order", ":", "\n", "                ", "title", "=", "'Mean %s'", "%", "(", "title", ")", "\n", "win", "=", "'mean%s'", "%", "(", "win", ")", "\n", "legend", "=", "None", "\n", "", "", "visdom", ".", "line", "(", "X", "=", "X", ",", "Y", "=", "Y", ",", "\n", "opts", "=", "dict", "(", "title", "=", "title", ",", "legend", "=", "legend", ")", ",", "win", "=", "win", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.__init__": [[139, 143], ["tensorboardX.SummaryWriter"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "logdir", ")", ":", "\n", "        ", "self", ".", "measures", "=", "{", "}", "\n", "self", ".", "writer", "=", "SummaryWriter", "(", "logdir", ")", "\n", "self", ".", "logdir", "=", "logdir", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log": [[144, 153], ["logger.Measure.add_measurement", "logger.Logger.measures.keys", "logger.Measure"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.add_measurement"], ["", "def", "log", "(", "self", ",", "measure_name", ",", "measurement", ",", "epoch", ",", "iteration", "=", "None", ")", ":", "\n", "        ", "measure", "=", "None", "\n", "if", "measure_name", "in", "self", ".", "measures", ".", "keys", "(", ")", ":", "\n", "            ", "measure", "=", "self", ".", "measures", "[", "measure_name", "]", "\n", "", "else", ":", "\n", "            ", "measure", "=", "Measure", "(", "measure_name", ")", "\n", "self", ".", "measures", "[", "measure_name", "]", "=", "measure", "\n", "#self.writer.add_scalar(measure_name, measurement, epoch)", "\n", "", "measure", ".", "add_measurement", "(", "measurement", ",", "epoch", ",", "iteration", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure": [[154, 157], ["logger.Logger.measures.keys"], "methods", ["None"], ["", "def", "get_measure", "(", "self", ",", "measure_name", ")", ":", "\n", "        ", "assert", "measure_name", "in", "self", ".", "measures", ".", "keys", "(", ")", ",", "'Measure %s is not defined'", "%", "measure_name", "\n", "return", "self", ".", "measures", "[", "measure_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.reset_measure": [[158, 161], ["logger.Logger.measures.keys", "logger.Logger.measures[].reset"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.reset"], ["", "def", "reset_measure", "(", "self", ",", "measure_name", ")", ":", "\n", "        ", "if", "measure_name", "in", "self", ".", "measures", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "measures", "[", "measure_name", "]", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch": [[162, 165], ["logger.Logger.get_measure", "logger.Logger.mean_epoch"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch"], ["", "", "def", "mean_epoch", "(", "self", ",", "measure_name", ",", "epoch", "=", "-", "1", ")", ":", "\n", "        ", "measure", "=", "self", ".", "get_measure", "(", "measure_name", ")", "\n", "return", "measure", ".", "mean_epoch", "(", "epoch", "=", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.sum_epoch": [[166, 169], ["logger.Logger.get_measure", "logger.Logger.sum_epoch"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.sum_epoch"], ["", "def", "sum_epoch", "(", "self", ",", "measure_name", ",", "epoch", "=", "-", "1", ")", ":", "\n", "        ", "measure", "=", "self", ".", "get_measure", "(", "measure_name", ")", "\n", "return", "measure", ".", "sum_epoch", "(", "epoch", "=", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_epoch": [[170, 173], ["logger.Logger.get_measure", "logger.Logger.visualize_epoch"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_epoch"], ["", "def", "visualize_epoch", "(", "self", ",", "measure_name", ",", "visdom", ",", "epoch", "=", "-", "1", ")", ":", "\n", "        ", "measure", "=", "self", ".", "get_measure", "(", "measure_name", ")", "\n", "measure", ".", "visualize_epoch", "(", "visdom", ",", "epoch", "=", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average": [[174, 177], ["logger.Logger.get_measure", "logger.Logger.visualize_average"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average"], ["", "def", "visualize_average", "(", "self", ",", "measure_name", ",", "visdom", ",", "second_order", "=", "False", ")", ":", "\n", "        ", "measure", "=", "self", ".", "get_measure", "(", "measure_name", ")", "\n", "measure", ".", "visualize_average", "(", "visdom", ",", "second_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_all_average": [[178, 181], ["logger.Logger.measures.values", "measure.visualize_average"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average"], ["", "def", "visualize_all_average", "(", "self", ",", "visdom", ")", ":", "\n", "        ", "for", "measure", "in", "self", ".", "measures", ".", "values", "(", ")", ":", "\n", "            ", "measure", ".", "visualize_average", "(", "visdom", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys": [[182, 197], ["re.compile", "logger.Logger.measures.items", "re.compile.match", "len", "visdom.update_window_opts", "measure.generate_average_XY", "legend.append", "visdom.line", "visdom.line", "dict"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.generate_average_XY"], ["", "", "def", "visualize_average_keys", "(", "self", ",", "pattern", ",", "title", ",", "visdom", ",", "is_setup", "=", "False", ",", "prefix", "=", "''", ")", ":", "\n", "        ", "pat", "=", "re", ".", "compile", "(", "pattern", ")", "\n", "legend", "=", "[", "]", "\n", "for", "key", ",", "measure", "in", "self", ".", "measures", ".", "items", "(", ")", ":", "\n", "            ", "if", "pat", ".", "match", "(", "key", ")", ":", "\n", "                ", "nX", ",", "nY", ",", "_", "=", "measure", ".", "generate_average_XY", "(", ")", "\n", "legend", ".", "append", "(", "'%s%s'", "%", "(", "prefix", ",", "key", ")", ")", "\n", "if", "is_setup", ":", "\n", "# visdom.updateTrace(X=nX, Y=nY, win=title, name='%s%s'%(prefix, key))", "\n", "                    ", "visdom", ".", "line", "(", "X", "=", "nX", ",", "Y", "=", "nY", ",", "win", "=", "title", ",", "name", "=", "'%s%s'", "%", "(", "prefix", ",", "key", ")", ",", "update", "=", "'new'", ")", "\n", "", "else", ":", "\n", "                    ", "visdom", ".", "line", "(", "X", "=", "nX", ",", "Y", "=", "nY", ",", "win", "=", "title", ")", "\n", "is_setup", "=", "True", "\n", "", "", "", "if", "len", "(", "legend", ")", ">", "0", ":", "\n", "            ", "visdom", ".", "update_window_opts", "(", "win", "=", "title", ",", "opts", "=", "dict", "(", "title", "=", "title", ",", "legend", "=", "legend", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.__str__": [[198, 200], ["logger.Logger.measures.keys"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'Logger with measures\\n(%s)'", "%", "(", "', '", ".", "join", "(", "self", ".", "measures", ".", "keys", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.__init__": [[18, 38], ["defaults.items", "visdom.Visdom", "hasattr", "print", "setattr", "termcolor.colored"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "args", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "device", "=", "args", ".", "device", "\n", "if", "config", ".", "visualize", ":", "\n", "            ", "self", ".", "visdom", "=", "Visdom", "(", "ipv6", "=", "False", ",", "env", "=", "'(%s)-%s:%s'", "%", "(", "args", ".", "hostname", ",", "args", ".", "experiment_id", ",", "config", ".", "name", ")", ")", "\n", "# Set the default behaviours if not set.", "\n", "", "defaults", "=", "{", "\n", "'classification'", ":", "False", ",", "\n", "'cast_float_label'", ":", "False", ",", "\n", "'autoencoder_target'", ":", "False", ",", "\n", "'autoencoder_class'", ":", "False", ",", "\n", "'stochastic_gradient'", ":", "True", ",", "\n", "'visualize'", ":", "True", ",", "\n", "'sigmoid_viz'", ":", "True", ",", "\n", "}", "\n", "for", "key", ",", "value", "in", "defaults", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "hasattr", "(", "self", ".", "config", ",", "key", ")", ":", "\n", "                ", "print", "(", "colored", "(", "'Setting default value %s to %s'", "%", "(", "key", ",", "value", ")", ",", "'red'", ")", ")", "\n", "setattr", "(", "self", ".", "config", ",", "key", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch": [[39, 190], ["timeit.default_timer", "model.train", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "model.eval", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "len", "timeit.default_timer", "len", "tqdm.tqdm.tqdm", "enumerate", "logger.get_measure", "len", "optimizer.zero_grad", "pbar.update", "criterion", "logger.log", "pbar.set_description", "optimizer.step", "print", "logger.get_measure", "len", "bool", "optimizer.zero_grad", "torch.typename", "torch.typename", "torch.typename", "torch.typename", "input.clone", "target.float().unsqueeze.float().unsqueeze.float().unsqueeze", "input.to", "target.float().unsqueeze.float().unsqueeze.to", "model", "model", "criterion.item", "logger.visualize_epoch", "iterative_trainer.IterativeTrainer.visdom.images", "timeit.default_timer", "termcolor.colored", "os.environ.get", "len", "criterion.backward", "optimizer.step", "loss2.backward", "criterion.data.mul_", "criterion.item", "model.size", "model.classify", "logger.log", "logger.log", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "zip", "print", "sklearn.metrics.roc_auc_score", "logger.log", "image.numpy", "iterative_trainer.IterativeTrainer.visdom.images", "target.float().unsqueeze.float().unsqueeze.float", "len", "model.max", "target.float().unsqueeze.float().unsqueeze.numel", "target.float().unsqueeze.float().unsqueeze.view", "model.classify.view", "target.float().unsqueeze.float().unsqueeze.data.cpu().numpy", "model.data.cpu().view().numpy", "timeit.default_timer", "model.size", "torch.sigmoid().cpu().detach().numpy", "torch.sigmoid().cpu().detach().numpy", "model.cpu().detach().numpy", "len", "torch.zeros.diag", "torch.zeros.diag", "torch.zeros.sum", "torch.zeros.sum", "target.float().unsqueeze.float().unsqueeze.data.cpu", "model.data.cpu().view", "torch.sigmoid().cpu().detach", "torch.sigmoid().cpu().detach", "model.cpu().detach", "t.long", "p.long", "model.data.cpu", "torch.sigmoid().cpu", "torch.sigmoid().cpu", "model.cpu", "torch.sigmoid", "torch.sigmoid", "target.float().unsqueeze.float().unsqueeze.long", "target.float().unsqueeze.float().unsqueeze.long"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.classify", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log"], ["", "", "", "def", "run_epoch", "(", "self", ",", "epoch", ",", "phase", "=", "'train'", ")", ":", "\n", "# Retrieve the appropriate config.", "\n", "        ", "config", "=", "self", ".", "config", ".", "phases", "[", "phase", "]", "\n", "dataset", "=", "config", "[", "'dataset'", "]", "\n", "backward", "=", "config", "[", "'backward'", "]", "\n", "phase_name", "=", "phase", "\n", "#print(\"Doing %s\"%colored(phase, 'green'))", "\n", "\n", "model", "=", "self", ".", "config", ".", "model", "\n", "visualize", "=", "self", ".", "config", ".", "visualize", "\n", "criterion", "=", "self", ".", "config", ".", "criterion", "\n", "optimizer", "=", "self", ".", "config", ".", "optim", "\n", "logger", "=", "self", ".", "config", ".", "logger", "\n", "stochastic", "=", "self", ".", "config", ".", "stochastic_gradient", "\n", "classification", "=", "self", ".", "config", ".", "classification", "\n", "\n", "# See the network to the target mode.", "\n", "if", "backward", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "torch", ".", "set_grad_enabled", "(", "True", ")", "\n", "", "else", ":", "\n", "            ", "model", ".", "eval", "(", ")", "\n", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n", "", "start_time", "=", "timeit", ".", "default_timer", "(", ")", "\n", "last_viz_update", "=", "start_time", "\n", "\n", "# For full gradient optimization we need to rescale the loss", "\n", "# to calculate the gradient correctly.", "\n", "loss_scaler", "=", "1", "\n", "if", "not", "stochastic", ":", "\n", "            ", "loss_scaler", "=", "1.", "/", "len", "(", "dataset", ".", "dataset", ")", "\n", "\n", "", "try", ":", "\n", "# TQDM sometimes throws IOError exceptions when you", "\n", "# try to close it. We ignore those exceptions.", "\n", "            ", "with", "tqdm", "(", "total", "=", "len", "(", "dataset", ")", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", "as", "pbar", ":", "\n", "                ", "if", "backward", "and", "not", "stochastic", ":", "\n", "                    ", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "dataset", ")", ":", "\n", "                    ", "pbar", ".", "update", "(", ")", "\n", "if", "backward", "and", "stochastic", ":", "\n", "                        ", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Get and prepare data.", "\n", "", "input", ",", "target", ",", "data_indices", "=", "image", ",", "None", ",", "None", "\n", "if", "torch", ".", "typename", "(", "label", ")", "==", "'list'", ":", "\n", "                        ", "assert", "len", "(", "label", ")", "==", "2", ",", "'There should be two entries in the label'", "\n", "# Need to unpack the label. This is for when the data provider", "\n", "# has the cached flag enabled, therefore the y is now (y, idx).", "\n", "target", ",", "data_indices", "=", "label", "\n", "", "else", ":", "\n", "                        ", "target", "=", "label", "\n", "\n", "", "if", "self", ".", "config", ".", "autoencoder_target", ":", "\n", "                        ", "target", "=", "input", ".", "clone", "(", ")", "\n", "\n", "", "if", "self", ".", "config", ".", "cast_float_label", ":", "\n", "                        ", "target", "=", "target", ".", "float", "(", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "input", ",", "target", "=", "input", ".", "to", "(", "self", ".", "device", ")", ",", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# Do a forward propagation and get the loss.", "\n", "prediction", "=", "None", "\n", "if", "data_indices", "is", "None", ":", "\n", "                        ", "prediction", "=", "model", "(", "input", ")", "\n", "", "else", ":", "\n", "# Run in the cached mode. This is necessary to speed up", "\n", "# some of the underlying optimization procedures. It is not", "\n", "# always used though.", "\n", "                        ", "prediction", "=", "model", "(", "input", ",", "indices", "=", "data_indices", ",", "group", "=", "phase_name", ")", "\n", "\n", "", "loss", "=", "criterion", "(", "prediction", ",", "target", ")", "\n", "\n", "if", "backward", ":", "\n", "                        ", "if", "stochastic", ":", "\n", "                            ", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                            ", "nscaler", "=", "loss_scaler", "\n", "if", "criterion", ".", "reduction", "==", "\"mean\"", ":", "\n", "                                ", "nscaler", "=", "nscaler", "*", "len", "(", "input", ")", "\n", "", "loss2", "=", "loss", "*", "nscaler", "\n", "loss2", ".", "backward", "(", ")", "\n", "\n", "# Compute various measure. Can be safely skipped.", "\n", "", "", "if", "not", "backward", "or", "not", "stochastic", ":", "\n", "                        ", "if", "criterion", ".", "reduction", "==", "\"mean\"", ":", "\n", "                            ", "loss", ".", "data", ".", "mul_", "(", "len", "(", "input", ")", ")", "\n", "", "", "logger", ".", "log", "(", "'%s_loss'", "%", "phase_name", ",", "loss", ".", "item", "(", ")", ",", "epoch", ",", "i", ")", "\n", "message", "=", "'%s Batch loss %.3f'", "%", "(", "phase_name", ",", "loss", ".", "item", "(", ")", ")", "\n", "\n", "if", "classification", ":", "\n", "                        ", "pred", "=", "[", "]", "\n", "if", "prediction", ".", "size", "(", "1", ")", "==", "1", ":", "\n", "# For binary classification, we do this to make the", "\n", "# prediction code consistent with the max.", "\n", "                            ", "pred", "=", "model", ".", "classify", "(", "prediction", ")", "\n", "", "else", ":", "\n", "                            ", "pred", "=", "prediction", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "", "if", "stochastic", "and", "backward", ":", "\n", "                            ", "acc", "=", "(", "pred", "==", "target", ".", "long", "(", ")", ")", ".", "float", "(", ")", ".", "view", "(", "-", "1", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "logger", ".", "log", "(", "'%s_accuracy'", "%", "phase_name", ",", "acc", ",", "epoch", ",", "i", ")", "\n", "", "else", ":", "\n", "                            ", "acc", "=", "(", "pred", "==", "target", ".", "long", "(", ")", ")", ".", "float", "(", ")", ".", "view", "(", "-", "1", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "logger", ".", "log", "(", "'%s_accuracy'", "%", "phase_name", ",", "acc", ",", "epoch", ",", "i", ")", "\n", "acc", "=", "acc", "/", "target", ".", "numel", "(", ")", "\n", "", "if", "'num_classes'", "in", "self", ".", "args", ":", "\n", "                            ", "nc", "=", "self", ".", "args", ".", "num_classes", "\n", "confusion_matrix", "=", "torch", ".", "zeros", "(", "nc", ",", "nc", ")", "\n", "for", "t", ",", "p", "in", "zip", "(", "target", ".", "view", "(", "-", "1", ")", ",", "pred", ".", "view", "(", "-", "1", ")", ")", ":", "\n", "                                ", "confusion_matrix", "[", "t", ".", "long", "(", ")", ",", "p", ".", "long", "(", ")", "]", "+=", "1", "\n", "", "print", "(", "confusion_matrix", ".", "diag", "(", ")", "/", "confusion_matrix", ".", "sum", "(", "1", ")", ")", "\n", "", "message", "=", "'%s Accuracy %.2f'", "%", "(", "message", ",", "acc", ")", "\n", "try", ":", "\n", "                            ", "roc", "=", "roc_auc_score", "(", "target", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "prediction", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ".", "numpy", "(", ")", ",", "average", "=", "\"micro\"", ")", "\n", "logger", ".", "log", "(", "'%s_AUROC'", "%", "phase_name", ",", "roc", ",", "epoch", ",", "i", ")", "\n", "message", "=", "'%s AUROC %.2f'", "%", "(", "message", ",", "roc", ")", "\n", "", "except", "ValueError", ":", "\n", "                            ", "pass", "\n", "\n", "", "", "pbar", ".", "set_description", "(", "message", ")", "\n", "\n", "if", "visualize", "and", "i", "%", "20", "==", "0", "and", "(", "timeit", ".", "default_timer", "(", ")", "-", "last_viz_update", ">", "5", ")", ":", "\n", "# we don't want to update too quickly. visdom breaks!", "\n", "                        ", "logger", ".", "visualize_epoch", "(", "'%s_loss'", "%", "phase_name", ",", "self", ".", "visdom", ")", "\n", "self", ".", "visdom", ".", "images", "(", "image", ".", "numpy", "(", ")", ",", "win", "=", "'in_images'", ")", "\n", "if", "self", ".", "config", ".", "autoencoder_target", "and", "prediction", ".", "size", "(", "1", ")", "in", "[", "1", ",", "3", "]", ":", "\n", "                            ", "viz_ten", "=", "None", "\n", "if", "self", ".", "config", ".", "sigmoid_viz", ":", "\n", "                                ", "viz_ten", "=", "F", ".", "sigmoid", "(", "prediction", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "                                ", "viz_ten", "=", "prediction", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "", "self", ".", "visdom", ".", "images", "(", "viz_ten", ",", "win", "=", "'out_images'", ")", "\n", "", "last_viz_update", "=", "timeit", ".", "default_timer", "(", ")", "\n", "\n", "", "", "if", "backward", "and", "not", "stochastic", ":", "\n", "                    ", "optimizer", ".", "step", "(", ")", "\n", "", "", "", "except", "IOError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "!=", "errno", ".", "EINTR", ":", "\n", "                ", "raise", "\n", "", "else", ":", "\n", "                ", "print", "(", "colored", "(", "\"Problem averted :D\"", ",", "'green'", ")", ")", "\n", "\n", "", "", "if", "not", "backward", "or", "not", "stochastic", ":", "\n", "            ", "logger", ".", "get_measure", "(", "'%s_loss'", "%", "phase_name", ")", ".", "measure_normalizer", "=", "len", "(", "dataset", ".", "dataset", ")", "\n", "if", "classification", ":", "\n", "                ", "logger", ".", "get_measure", "(", "'%s_accuracy'", "%", "phase_name", ")", ".", "measure_normalizer", "=", "len", "(", "dataset", ".", "dataset", ")", "\n", "\n", "", "", "elapsed", "=", "timeit", ".", "default_timer", "(", ")", "-", "start_time", "\n", "#print('  %s Epoch %d in %.2fs' %(phase_name, epoch, elapsed))", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURABase.__init__": [[23, 45], ["torch.Dataset.__init__", "torchvision.Compose", "MURA.MURABase.extract", "MURA.MURABase.generate_index", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_index"], ["    ", "def", "__init__", "(", "self", ",", "source_dir", ",", "split", ",", "index_file", "=", "\"train_image_paths.csv\"", ",", "\n", "image_dir", "=", "\"train\"", ",", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "to_rgb", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "MURABase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "index_file", "=", "index_file", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "to_rgb", "=", "to_rgb", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "", "assert", "split", "in", "[", "\"train\"", ",", "\"val\"", "]", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "cache_file", "=", "self", ".", "generate_index", "(", ")", "\n", "self", ".", "img_list", "=", "cache_file", "[", "'img_list'", "]", "\n", "self", ".", "label_tensors", "=", "cache_file", "[", "'label_tensors'", "]", "\n", "self", ".", "split_inds", "=", "cache_file", "[", "\"split_inds\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURABase.__len__": [[46, 48], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "split_inds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURABase.__getitem__": [[49, 62], ["os.join", "os.join", "open", "PIL.Image.open", "MURA.MURABase.transforms", "MURA.MURABase.transforms", "MURA.MURABase.convert", "MURA.MURABase.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "index", "=", "self", ".", "split_inds", "[", "item", "]", "\n", "img_name", "=", "self", ".", "img_list", "[", "index", "]", "\n", "label", "=", "self", ".", "label_tensors", "[", "index", "]", "\n", "\n", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "img_name", ")", "\n", "with", "open", "(", "imp", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "                ", "if", "self", ".", "to_rgb", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "else", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'L'", ")", ")", "\n", "", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURABase.extract": [[63, 70], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "tarfile.open", "tar.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "return", "\n", "", "import", "tarfile", "\n", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "\"images.tar.gz\"", ")", ")", "as", "tar", ":", "\n", "            ", "tar", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURABase.generate_index": [[71, 100], ["print", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "open", "csv.DictReader", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "os.join", "os.join", "os.join", "os.join", "os.exists", "os.exists", "len", "row[].split", "img_list.append", "numpy.zeros", "enumerate", "label_list.append", "os.join", "os.join", "numpy.zeros.sum", "print", "row[].split"], "methods", ["None"], ["", "def", "generate_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Scan index file to create list of images and labels for each image\n        :return:\n        \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "print", "(", "\"Reading %s\"", "%", "self", ".", "index_file", ")", "\n", "with", "open", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "index_file", ")", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "csvf", "=", "csv", ".", "DictReader", "(", "fp", ",", "[", "'Image Path'", ",", "]", ")", "\n", "for", "row", "in", "csvf", ":", "\n", "                ", "raw_path", "=", "row", "[", "'Image Path'", "]", ".", "split", "(", "'/'", ")", "[", "2", ":", "]", "\n", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "*", "raw_path", ")", "\n", "\n", "if", "osp", ".", "exists", "(", "imp", ")", ":", "\n", "#add subpath after 'train' or 'valid' and image name to img_list", "\n", "                    ", "img_list", ".", "append", "(", "osp", ".", "join", "(", "*", "row", "[", "'Image Path'", "]", ".", "split", "(", "'/'", ")", "[", "2", ":", "]", ")", ")", "\n", "label", "=", "np", ".", "zeros", "(", "N_CLASS", ")", "\n", "for", "i", ",", "l", "in", "enumerate", "(", "LABELS", ")", ":", "\n", "                        ", "if", "l", "in", "row", "[", "'Image Path'", "]", ":", "\n", "                            ", "label", "[", "i", "]", "=", "1", "\n", "break", "\n", "", "", "if", "label", ".", "sum", "(", ")", "<", "1", ":", "\n", "                        ", "print", "(", "\"AHH\"", ")", "\n", "#label = [0, 1] if 'positive' in row['Image Path'] else [1, 0]", "\n", "", "label_list", ".", "append", "(", "label", ")", "\n", "", "", "", "label_tensors", "=", "torch", ".", "LongTensor", "(", "label_list", ")", "\n", "return", "{", "'img_list'", ":", "img_list", ",", "'label_tensors'", ":", "label_tensors", ",", "'label_list'", ":", "label_list", ",", "\n", "'split_inds'", ":", "torch", ".", "arange", "(", "len", "(", "img_list", ")", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURA.__init__": [[106, 144], ["datasets.AbstractDomainInterface.__init__", "MURA.MURABase", "MURA.MURABase", "print", "torchvision.Compose", "torchvision.Compose", "MURA.MURA.get_filtered_inds", "MURA.MURA.get_filtered_inds", "MURA.MURA.get_filtered_inds", "MURA.MURA.get_filtered_inds", "MURA.MURA.get_filtered_inds", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/MURA\"", ",", "keep_class", "=", "None", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "self", ".", "name", "=", "\"MURA\"", "\n", "super", "(", "MURA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "keep_in_classes", "=", "keep_class", "\n", "self", ".", "expand_channels", "=", "expand_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_train", "=", "MURABase", "(", "source_path", ",", "\"train\"", ",", "transforms", "=", "transform", ",", "index_file", "=", "\"train_image_paths.csv\"", ",", "\n", "image_dir", "=", "\"images_224\"", ",", "to_rgb", "=", "expand_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "MURABase", "(", "source_path", ",", "\"val\"", ",", "transforms", "=", "transform", ",", "index_file", "=", "\"valid_image_paths.csv\"", ",", "\n", "image_dir", "=", "\"images_224\"", ",", "to_rgb", "=", "expand_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURA.get_filtered_inds": [[145, 169], ["torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "enumerate", "torch.Tensor().int", "torch.Tensor().int", "torch.Tensor().int", "torch.Tensor().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "LABELS.index", "basedata.label_tensors[].int", "len", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "keep_inds.append", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "MURABase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "if", "not", "self", ".", "keep_in_classes", "is", "None", ":", "\n", "#print(basedata.__dict__)", "\n", "            ", "keep_in_mask_label", "=", "torch", ".", "zeros", "(", "N_CLASS", ")", ".", "int", "(", ")", "\n", "for", "cla", "in", "self", ".", "keep_in_classes", ":", "\n", "                ", "ii", "=", "LABELS", ".", "index", "(", "cla", ")", "\n", "keep_in_mask_label", "[", "ii", "]", "=", "1", "\n", "", "keep_inds", "=", "[", "]", "\n", "for", "seq_ind", ",", "base_ind", "in", "enumerate", "(", "basedata", ".", "split_inds", ")", ":", "\n", "                ", "label", "=", "basedata", ".", "label_tensors", "[", "base_ind", "]", ".", "int", "(", ")", "\n", "if", "torch", ".", "sum", "(", "label", "*", "keep_in_mask_label", ")", ">", "0", ":", "\n", "                    ", "keep_inds", ".", "append", "(", "seq_ind", ")", "\n", "", "else", ":", "\n", "                    ", "pass", "\n", "", "", "output_inds", "=", "torch", ".", "Tensor", "(", "keep_inds", ")", ".", "int", "(", ")", "\n", "", "else", ":", "\n", "            ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "#output_inds = torch.arange(0, len(basedata)).int()", "\n", "", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURA.get_D1_train": [[170, 172], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURA.get_D1_valid": [[172, 174], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURA.get_D1_test": [[174, 176], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURA.get_D2_valid": [[177, 181], ["MURA.MURA.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURA.get_D2_test": [[182, 186], ["MURA.MURA.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURA.conformity_transform": [[187, 203], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "224", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "if", "self", ".", "expand_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURAHAND.__init__": [[207, 211], ["MURA.MURA.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/MURA\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "MURAHAND", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"HAND\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURAWRIST.__init__": [[214, 218], ["MURA.MURA.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/MURA\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "MURAWRIST", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"WRIST\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURASHOULDER.__init__": [[221, 225], ["MURA.MURA.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/MURA\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "MURASHOULDER", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"SHOULDER\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "#[\"ELBOW\", \"FINGER\", \"FOREARM\", \"HAND\", \"HUMERUS\", \"SHOULDER\", \"WRIST\"]", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURAFOREARM.__init__": [[228, 232], ["MURA.MURA.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/MURA\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "MURAFOREARM", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"FOREARM\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "", "", "class", "MURAFINGER", "(", "MURA", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURAFINGER.__init__": [[234, 238], ["MURA.MURA.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/MURA\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "MURAFINGER", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"FINGER\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURAELBOW.__init__": [[241, 245], ["MURA.MURA.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/MURA\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "MURAELBOW", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"ELBOW\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.MURAHUMERUS.__init__": [[248, 252], ["MURA.MURA.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/MURA\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "MURAHUMERUS", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"HUMERUS\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.to_tensor": [[15, 17], ["torch.stack", "torch.stack", "torchvision.ToTensor"], "function", ["None"], ["def", "to_tensor", "(", "crops", ")", ":", "\n", "    ", "return", "torch", ".", "stack", "(", "[", "transforms", ".", "ToTensor", "(", ")", "(", "crop", ")", "for", "crop", "in", "crops", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MURA.group_normalize": [[18, 21], ["torch.stack", "torch.stack", "torchvision.Normalize"], "function", ["None"], ["", "def", "group_normalize", "(", "crops", ")", ":", "\n", "    ", "return", "torch", ".", "stack", "(", "[", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "(", "crop", ")", "for", "crop", "in", "crops", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBase.__init__": [[23, 56], ["torch.Dataset.__init__", "torchvision.Compose", "NIH_Chest.NIHChestBase.extract", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.exists", "os.exists", "NIH_Chest.NIHChestBase.generate_index", "os.join", "os.join", "NIH_Chest.NIHChestBase.generate_split", "os.join", "os.join", "torchvision.Resize", "torchvision.RandomCrop", "torchvision.ToTensor", "os.join", "os.join", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_index", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_split"], ["    ", "def", "__init__", "(", "self", ",", "index_cache_path", ",", "source_dir", ",", "split", ",", "index_file", "=", "\"Data_Entry_2017.csv\"", ",", "image_dir", "=", "\"images_224\"", ",", "\n", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "binary", "=", "False", ",", "to_rgb", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "NIHChestBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "index_cache_path", "=", "index_cache_path", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "cache_file", "=", "\"NIHChestIndex.pkl\"", "\n", "self", ".", "index_file", "=", "index_file", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "binary", "=", "binary", "\n", "self", ".", "to_rgb", "=", "to_rgb", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "256", ",", "256", ")", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "", "assert", "split", "in", "[", "\"train\"", ",", "\"val\"", ",", "\"test\"", "]", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "if", "not", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", ":", "\n", "                ", "self", ".", "generate_index", "(", ")", "\n", "", "cache_file", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", "\n", "self", ".", "img_list", "=", "cache_file", "[", "'img_list'", "]", "\n", "self", ".", "label_tensors", "=", "cache_file", "[", "'label_tensors'", "]", "\n", "\n", "if", "not", "(", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'val_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'train_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'test_split.pt'", ")", ")", ")", ":", "\n", "                ", "self", ".", "generate_split", "(", ")", "\n", "\n", "", "self", ".", "split_inds", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"%s_split.pt\"", "%", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBase.__len__": [[57, 59], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "split_inds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBase.__getitem__": [[60, 74], ["os.join", "os.join", "open", "PIL.Image.open", "NIH_Chest.NIHChestBase.transforms", "NIH_Chest.NIHChestBase.transforms", "NIH_Chest.NIHChestBase.convert", "NIH_Chest.NIHChestBase.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "index", "=", "self", ".", "split_inds", "[", "item", "]", "\n", "img_name", "=", "self", ".", "img_list", "[", "index", "]", "\n", "label", "=", "self", ".", "label_tensors", "[", "index", "]", "\n", "if", "self", ".", "binary", ":", "\n", "            ", "label", "=", "label", "[", "7", "]", "\n", "", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "img_name", ")", "\n", "with", "open", "(", "imp", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "                ", "if", "self", ".", "to_rgb", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "else", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'L'", ")", ")", "\n", "", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBase.extract": [[75, 95], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "tarfile.open", "tar.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "return", "\n", "", "import", "tarfile", "\n", "tarsplits_list", "=", "[", "\"images_01.tar.gz\"", ",", "\n", "\"images_02.tar.gz\"", ",", "\n", "\"images_03.tar.gz\"", ",", "\n", "\"images_04.tar.gz\"", ",", "\n", "\"images_05.tar.gz\"", ",", "\n", "\"images_06.tar.gz\"", ",", "\n", "\"images_07.tar.gz\"", ",", "\n", "\"images_08.tar.gz\"", ",", "\n", "\"images_09.tar.gz\"", ",", "\n", "\"images_10.tar.gz\"", ",", "\n", "\"images_11.tar.gz\"", ",", "\n", "\"images_12.tar.gz\"", ",", "\n", "]", "\n", "for", "tar_split", "in", "tarsplits_list", ":", "\n", "            ", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "tar_split", ")", ")", "as", "tar", ":", "\n", "                ", "tar", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBase.generate_index": [[97, 120], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "torch.save", "torch.save", "torch.save", "torch.save", "open", "csv.DictReader", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.exists", "os.exists", "img_list.append", "row[].split", "label_list.append", "any", "print"], "methods", ["None"], ["", "", "", "def", "generate_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Scan index file to create list of images and labels for each image. Also stores index files in index_cache_path\n        :return:\n        \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "with", "open", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "index_file", ")", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "csvf", "=", "csv", ".", "DictReader", "(", "fp", ")", "\n", "for", "row", "in", "csvf", ":", "\n", "                ", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "row", "[", "'Image Index'", "]", ")", "\n", "if", "osp", ".", "exists", "(", "imp", ")", ":", "\n", "                    ", "img_list", ".", "append", "(", "row", "[", "'Image Index'", "]", ")", "\n", "findings", "=", "row", "[", "'Finding Labels'", "]", ".", "split", "(", "'|'", ")", "\n", "label", "=", "[", "1", "if", "cond", "in", "findings", "else", "0", "for", "cond", "in", "CLASSES", "]", "\n", "if", "not", "any", "(", "label", ")", ":", "\n", "                        ", "print", "(", "findings", ")", "\n", "", "label_list", ".", "append", "(", "label", ")", "\n", "", "", "", "label_tensors", "=", "torch", ".", "LongTensor", "(", "label_list", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "index_cache_path", ",", "exist_ok", "=", "True", ")", "\n", "torch", ".", "save", "(", "{", "'img_list'", ":", "img_list", ",", "'label_tensors'", ":", "label_tensors", ",", "'label_list'", ":", "label_list", "}", ",", "\n", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBase.generate_split": [[121, 158], ["len", "int", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "open", "fp.readlines", "open", "fp.readlines", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "train_inds.append", "val_inds.append", "os.join", "os.join", "test_inds.append", "NIH_Chest.NIHChestBase.img_list.index", "NIH_Chest.NIHChestBase.img_list.index", "NIH_Chest.NIHChestBase.img_list.index", "len", "entry.strip", "entry.strip", "entry.strip"], "methods", ["None"], ["", "def", "generate_split", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'train_val_list.txt'", ")", ",", "'r+'", ")", "as", "fp", ":", "\n", "            ", "lines", "=", "fp", ".", "readlines", "(", ")", "\n", "\n", "", "n_trainval", "=", "len", "(", "lines", ")", "\n", "train_num", "=", "int", "(", "n_trainval", "*", "7.0", "/", "8.0", ")", "\n", "train_inds", "=", "[", "]", "\n", "val_inds", "=", "[", "]", "\n", "test_inds", "=", "[", "]", "\n", "missing_train", "=", "0", "\n", "missing_val", "=", "0", "\n", "missing_test", "=", "0", "\n", "for", "entry", "in", "lines", "[", ":", "train_num", "]", ":", "\n", "            ", "try", ":", "\n", "                ", "train_inds", ".", "append", "(", "self", ".", "img_list", ".", "index", "(", "entry", ".", "strip", "(", "\"\\n\"", ")", ")", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "missing_train", "+=", "1", "\n", "", "", "for", "entry", "in", "lines", "[", "train_num", ":", "]", ":", "\n", "            ", "try", ":", "\n", "                ", "val_inds", ".", "append", "(", "self", ".", "img_list", ".", "index", "(", "entry", ".", "strip", "(", "\"\\n\"", ")", ")", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "missing_val", "+=", "1", "\n", "\n", "", "", "with", "open", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'test_list.txt'", ")", ",", "'r+'", ")", "as", "fp", ":", "\n", "            ", "lines", "=", "fp", ".", "readlines", "(", ")", "\n", "", "for", "entry", "in", "lines", ":", "\n", "            ", "try", ":", "\n", "                ", "test_inds", ".", "append", "(", "self", ".", "img_list", ".", "index", "(", "entry", ".", "strip", "(", "\"\\n\"", ")", ")", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "missing_test", "+=", "1", "\n", "", "", "print", "(", "\"%i, %i,and %i found in original split file; %i, %i, and %i missing\"", "%", "\n", "(", "train_num", ",", "n_trainval", "-", "train_num", ",", "len", "(", "lines", ")", ",", "missing_train", ",", "missing_val", ",", "missing_test", ")", ")", "\n", "\n", "torch", ".", "save", "(", "train_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"train_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "val_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"val_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "test_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"test_split.pt\"", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChest.__init__": [[163, 210], ["datasets.AbstractDomainInterface.__init__", "NIH_Chest.NIHChestBase", "NIH_Chest.NIHChestBase", "NIH_Chest.NIHChestBase", "print", "torchvision.Compose", "torchvision.Compose", "NIH_Chest.NIHChest.get_filtered_inds", "NIH_Chest.NIHChest.get_filtered_inds", "NIH_Chest.NIHChest.get_filtered_inds", "NIH_Chest.NIHChest.get_filtered_inds", "NIH_Chest.NIHChest.get_filtered_inds", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/NIHCC\"", ",", "leave_out_classes", "=", "(", ")", ",", "keep_in_classes", "=", "None", ",", "\n", "binary", "=", "False", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "test_length", "=", "None", ",", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param leave_out_classes: if a sample has ANY class from this list as positive, then it is removed from indices.\n        :param keep_in_classes: when specified, if a sample has None of the class from this list as positive, then it\n         is removed from indices..\n        \"\"\"", "\n", "self", ".", "name", "=", "\"NIHCC\"", "\n", "super", "(", "NIHChest", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "leave_out_classes", "=", "leave_out_classes", "\n", "self", ".", "keep_in_classes", "=", "keep_in_classes", "\n", "self", ".", "binary", "=", "binary", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "expand_channels", "=", "expand_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_train", "=", "NIHChestBase", "(", "cache_path", ",", "source_path", ",", "\"train\"", ",", "transforms", "=", "transform", ",", "binary", "=", "self", ".", "binary", ",", "\n", "to_rgb", "=", "expand_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "NIHChestBase", "(", "cache_path", ",", "source_path", ",", "\"val\"", ",", "transforms", "=", "transform", ",", "binary", "=", "self", ".", "binary", ",", "\n", "to_rgb", "=", "expand_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_test", "=", "NIHChestBase", "(", "cache_path", ",", "source_path", ",", "\"test\"", ",", "transforms", "=", "transform", ",", "binary", "=", "self", ".", "binary", ",", "\n", "to_rgb", "=", "expand_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChest.get_filtered_inds": [[212, 241], ["torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "enumerate", "torch.Tensor().int", "torch.Tensor().int", "torch.Tensor().int", "torch.Tensor().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "CLASSES.index", "torch.ones().int", "torch.ones().int", "torch.ones().int", "torch.ones().int", "torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "basedata.label_tensors[].int", "len", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "CLASSES.index", "keep_inds.append", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "len", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "NIHChestBase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "if", "not", "(", "self", ".", "leave_out_classes", "==", "(", ")", "and", "self", ".", "keep_in_classes", "is", "None", ")", ":", "\n", "            ", "leave_out_mask_label", "=", "torch", ".", "zeros", "(", "N_CLASS", ")", ".", "int", "(", ")", "\n", "for", "cla", "in", "self", ".", "leave_out_classes", ":", "\n", "                ", "ii", "=", "CLASSES", ".", "index", "(", "cla", ")", "\n", "leave_out_mask_label", "[", "ii", "]", "=", "1", "\n", "", "if", "self", ".", "keep_in_classes", "is", "None", ":", "\n", "                ", "keep_in_mask_label", "=", "torch", ".", "ones", "(", "N_CLASS", ")", ".", "int", "(", ")", "\n", "", "else", ":", "\n", "                ", "keep_in_mask_label", "=", "torch", ".", "zeros", "(", "N_CLASS", ")", ".", "int", "(", ")", "\n", "for", "cla", "in", "self", ".", "keep_in_classes", ":", "\n", "                    ", "ii", "=", "CLASSES", ".", "index", "(", "cla", ")", "\n", "keep_in_mask_label", "[", "ii", "]", "=", "1", "\n", "", "", "keep_inds", "=", "[", "]", "\n", "for", "seq_ind", ",", "base_ind", "in", "enumerate", "(", "basedata", ".", "split_inds", ")", ":", "\n", "                ", "label", "=", "basedata", ".", "label_tensors", "[", "base_ind", "]", ".", "int", "(", ")", "\n", "if", "torch", ".", "sum", "(", "label", "*", "leave_out_mask_label", ")", "==", "0", "and", "torch", ".", "sum", "(", "label", "*", "keep_in_mask_label", ")", ">", "0", ":", "\n", "                    ", "keep_inds", ".", "append", "(", "seq_ind", ")", "\n", "", "else", ":", "\n", "                    ", "pass", "\n", "", "", "output_inds", "=", "torch", ".", "Tensor", "(", "keep_inds", ")", ".", "int", "(", ")", "\n", "", "else", ":", "\n", "            ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChest.get_D1_train": [[242, 244], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChest.get_D1_valid": [[244, 246], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChest.get_D1_test": [[246, 248], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChest.get_D2_valid": [[249, 253], ["NIH_Chest.NIHChest.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChest.get_D2_test": [[254, 258], ["NIH_Chest.NIHChest.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChest.conformity_transform": [[259, 276], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "224", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "if", "self", ".", "expand_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "#transforms.Grayscale(),", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBinary.__init__": [[280, 284], ["kwargs.update", "NIH_Chest.NIHChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "update", "(", "{", "'binary'", ":", "True", "}", ")", "\n", "super", "(", "NIHChestBinary", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBinaryTest.__init__": [[286, 292], ["kwargs.update", "print", "print", "NIH_Chest.NIHChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "update", "(", "{", "'test_length'", ":", "2000", "}", ")", "\n", "print", "(", "args", ")", "\n", "print", "(", "kwargs", ")", "\n", "super", "(", "NIHChestBinaryTest", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBinaryTrainSplit.__init__": [[295, 299], ["kwargs.update", "NIH_Chest.NIHChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "update", "(", "{", "'binary'", ":", "True", ",", "'test_length'", ":", "20000", ",", "\n", "'leave_out_classes'", ":", "[", "'Cardiomegaly'", ",", "'Pneumothorax'", ",", "'Nodule'", ",", "'Mass'", "]", "}", ")", "\n", "super", "(", "NIHChestBinaryTrainSplit", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBinaryValSplit.__init__": [[302, 306], ["kwargs.update", "NIH_Chest.NIHChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "update", "(", "{", "'binary'", ":", "True", ",", "'test_length'", ":", "5000", ",", "\n", "'keep_in_classes'", ":", "[", "'Cardiomegaly'", ",", "]", "}", ")", "\n", "super", "(", "NIHChestBinaryValSplit", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.NIHChestBinaryTestSplit.__init__": [[309, 313], ["kwargs.update", "NIH_Chest.NIHChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "update", "(", "{", "'binary'", ":", "True", ",", "'test_length'", ":", "5000", ",", "\n", "'keep_in_classes'", ":", "[", "'Pneumothorax'", ",", "'Nodule'", ",", "'Mass'", "]", "}", ")", "\n", "super", "(", "NIHChestBinaryTestSplit", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.to_tensor": [[15, 17], ["torch.stack", "torch.stack", "torchvision.ToTensor"], "function", ["None"], ["def", "to_tensor", "(", "crops", ")", ":", "\n", "    ", "return", "torch", ".", "stack", "(", "[", "transforms", ".", "ToTensor", "(", ")", "(", "crop", ")", "for", "crop", "in", "crops", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.NIH_Chest.group_normalize": [[18, 21], ["torch.stack", "torch.stack", "torchvision.Normalize"], "function", ["None"], ["", "def", "group_normalize", "(", "crops", ")", ":", "\n", "    ", "return", "torch", ".", "stack", "(", "[", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "(", "crop", ")", "for", "crop", "in", "crops", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.UnifGenerator.__init__": [[6, 13], ["torch.FloatTensor().uniform_", "torch.FloatTensor().uniform_", "torch.FloatTensor().uniform_", "torch.FloatTensor().uniform_", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "height", ",", "width", ",", "length", ")", ":", "\n", "        ", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "length", "=", "length", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "name", "=", "'UniformNoise'", "\n", "self", ".", "dataset", "=", "torch", ".", "FloatTensor", "(", "self", ".", "length", ",", "self", ".", "channels", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "uniform_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.UnifGenerator.__len__": [[14, 16], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.UnifGenerator.__getitem__": [[16, 19], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "# Unif generator always has label 1 because it comes as D2.", "\n", "        ", "return", "self", ".", "dataset", "[", "idx", "]", ",", "1", "\n", "", "def", "trim_dataset", "(", "self", ",", "new_length", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.UnifGenerator.trim_dataset": [[19, 23], ["len"], "methods", ["None"], ["", "def", "trim_dataset", "(", "self", ",", "new_length", ")", ":", "\n", "        ", "assert", "self", ".", "length", ">=", "new_length", "\n", "self", ".", "dataset", "=", "self", ".", "dataset", "[", "0", ":", "new_length", "]", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.GaussGenerator.__init__": [[25, 32], ["torch.FloatTensor().normal_().clamp_", "torch.FloatTensor().normal_().clamp_", "torch.FloatTensor().normal_().clamp_", "torch.FloatTensor().normal_().clamp_", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.FloatTensor().normal_", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "height", ",", "width", ",", "length", ")", ":", "\n", "        ", "self", ".", "height", "=", "height", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "length", "=", "length", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "name", "=", "'NormalNoise'", "\n", "self", ".", "dataset", "=", "torch", ".", "FloatTensor", "(", "self", ".", "length", ",", "self", ".", "channels", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "normal_", "(", "mean", "=", "0.5", ",", "std", "=", "0.25", ")", ".", "clamp_", "(", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.GaussGenerator.__len__": [[33, 35], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.GaussGenerator.__getitem__": [[35, 38], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "# Unif generator always has label 1 because it comes as D2.", "\n", "        ", "return", "self", ".", "dataset", "[", "idx", "]", ",", "1", "\n", "", "def", "trim_dataset", "(", "self", ",", "new_length", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.GaussGenerator.trim_dataset": [[38, 42], ["len"], "methods", ["None"], ["", "def", "trim_dataset", "(", "self", ",", "new_length", ")", ":", "\n", "        ", "assert", "self", ".", "length", ">=", "new_length", "\n", "self", ".", "dataset", "=", "self", ".", "dataset", "[", "0", ":", "new_length", "]", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.UniformNoise.get_D2_valid": [[48, 54], ["D1.get_D1_valid", "len", "noise.UnifGenerator", "im.size", "im.size", "im.size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid"], ["def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "other_ds", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "# other_train = D1.get_D1_train() # We will trim it later if necessary.", "\n", "im", ",", "_", "=", "other_ds", "[", "0", "]", "\n", "length", "=", "len", "(", "other_ds", ")", "# + len(other_train)", "\n", "return", "UnifGenerator", "(", "im", ".", "size", "(", "0", ")", ",", "im", ".", "size", "(", "1", ")", ",", "im", ".", "size", "(", "2", ")", ",", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.UniformNoise.get_D2_test": [[55, 60], ["D1.get_D1_test", "len", "noise.UnifGenerator", "im.size", "im.size", "im.size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "other_ds", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "im", ",", "_", "=", "other_ds", "[", "0", "]", "\n", "length", "=", "len", "(", "other_ds", ")", "\n", "return", "UnifGenerator", "(", "im", ".", "size", "(", "0", ")", ",", "im", ".", "size", "(", "1", ")", ",", "im", ".", "size", "(", "2", ")", ",", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.UniformNoise.is_compatible": [[61, 63], ["None"], "methods", ["None"], ["", "def", "is_compatible", "(", "self", ",", "D1", ")", ":", "\n", "        ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.NormalNoise.get_D2_valid": [[69, 75], ["D1.get_D1_valid", "len", "noise.GaussGenerator", "im.size", "im.size", "im.size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid"], ["def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "other_ds", "=", "D1", ".", "get_D1_valid", "(", ")", "\n", "# other_train = D1.get_D1_train() # We will trim it later if necessary.        ", "\n", "im", ",", "_", "=", "other_ds", "[", "0", "]", "\n", "length", "=", "len", "(", "other_ds", ")", "# + len(other_train)", "\n", "return", "GaussGenerator", "(", "im", ".", "size", "(", "0", ")", ",", "im", ".", "size", "(", "1", ")", ",", "im", ".", "size", "(", "2", ")", ",", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.NormalNoise.get_D2_test": [[76, 81], ["D1.get_D1_test", "len", "noise.GaussGenerator", "im.size", "im.size", "im.size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "other_ds", "=", "D1", ".", "get_D1_test", "(", ")", "\n", "im", ",", "_", "=", "other_ds", "[", "0", "]", "\n", "length", "=", "len", "(", "other_ds", ")", "\n", "return", "GaussGenerator", "(", "im", ".", "size", "(", "0", ")", ",", "im", ".", "size", "(", "1", ")", ",", "im", ".", "size", "(", "2", ")", ",", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.noise.NormalNoise.is_compatible": [[82, 84], ["None"], "methods", ["None"], ["", "def", "is_compatible", "(", "self", ",", "D1", ")", ":", "\n", "        ", "return", "True", "", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDCBase.__init__": [[15, 42], ["torch.Dataset.__init__", "torchvision.Compose", "IDC.IDCBase.extract", "IDC.IDCBase.generate_index", "torch.load", "torch.load", "torch.load", "torch.load", "IDC.IDCBase.generate_split", "os.join", "os.join", "torchvision.Resize", "torchvision.ToTensor", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_index", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_split"], ["    ", "def", "__init__", "(", "self", ",", "index_cache_path", ",", "source_dir", ",", "split", ",", "image_dir", "=", "\"images\"", ",", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "\n", "to_gray", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "IDCBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "index_cache_path", "=", "index_cache_path", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "to_gray", "=", "to_gray", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "", "assert", "split", "in", "[", "\"train\"", ",", "\"val\"", ",", "\"test\"", "]", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "cache_file", "=", "self", ".", "generate_index", "(", ")", "\n", "self", ".", "img_list", "=", "cache_file", "[", "'img_list'", "]", "\n", "self", ".", "label_tensors", "=", "cache_file", "[", "'label_tensors'", "]", "\n", "self", ".", "split_inds", "=", "cache_file", "[", "\"split_inds\"", "]", "\n", "if", "not", "(", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'val_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'train_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'test_split.pt'", ")", ")", ")", ":", "\n", "                ", "self", ".", "generate_split", "(", ")", "\n", "\n", "", "self", ".", "split_inds", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"%s_split.pt\"", "%", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDCBase.__len__": [[43, 45], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "split_inds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDCBase.__getitem__": [[46, 59], ["os.join", "os.join", "open", "PIL.Image.open", "IDC.IDCBase.transforms", "IDC.IDCBase.transforms", "IDC.IDCBase.convert", "IDC.IDCBase.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "index", "=", "self", ".", "split_inds", "[", "item", "]", "\n", "img_name", "=", "self", ".", "img_list", "[", "index", "]", "\n", "label", "=", "self", ".", "label_tensors", "[", "index", "]", "\n", "\n", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "img_name", ")", "\n", "with", "open", "(", "imp", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "                ", "if", "not", "self", ".", "to_gray", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "else", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'L'", ")", ")", "\n", "", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDCBase.extract": [[60, 66], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "zipfile.ZipFile", "zipObj.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "return", "\n", "", "with", "ZipFile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "'IDC_regular_ps50_idx5.zip'", ")", ",", "'r'", ")", "as", "zipObj", ":", "\n", "            ", "zipObj", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDCBase.generate_index": [[67, 93], ["len", "os.walk", "os.walk", "os.walk", "os.walk", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "os.path.join().split", "os.path.join().split", "os.path.join().split", "os.path.join().split", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "label_list.append", "dirpath.split", "len", "os.join", "os.join", "img_list.append", "img_list.append", "int", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "filename.split"], "methods", ["None"], ["", "def", "generate_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Scan index file to create list of images and labels for each image\n        :return:\n        \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "if", "os", ".", "name", "==", "\"posix\"", ":", "\n", "            ", "split_char", "=", "\"/\"", "\n", "", "else", ":", "\n", "            ", "split_char", "=", "\"\\\\\"", "\n", "", "dir_level", "=", "len", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ".", "split", "(", "split_char", ")", ")", "\n", "for", "(", "dirpath", ",", "dirnames", ",", "filenames", ")", "in", "os", ".", "walk", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "for", "filename", "in", "filenames", ":", "\n", "                ", "if", "'.png'", "in", "filename", ":", "\n", "                    ", "dir_strs", "=", "dirpath", ".", "split", "(", "split_char", ")", "[", "dir_level", ":", "]", "\n", "if", "len", "(", "dir_strs", ")", ">", "0", ":", "\n", "                        ", "dir_strs", "=", "osp", ".", "join", "(", "*", "dir_strs", ")", "\n", "img_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dir_strs", ",", "filename", ")", ")", "\n", "", "else", ":", "\n", "                        ", "img_list", ".", "append", "(", "filename", ")", "\n", "", "label_list", ".", "append", "(", "int", "(", "filename", ".", "split", "(", "'.'", ")", "[", "0", "]", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "", "label_tensors", "=", "torch", ".", "LongTensor", "(", "label_list", ")", "\n", "return", "{", "'img_list'", ":", "img_list", ",", "'label_tensors'", ":", "label_tensors", ",", "'label_list'", ":", "label_list", ",", "\n", "'split_inds'", ":", "torch", ".", "arange", "(", "len", "(", "img_list", ")", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDCBase.generate_split": [[95, 107], ["len", "int", "int", "numpy.arange", "numpy.arange", "numpy.arange", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["None"], ["", "def", "generate_split", "(", "self", ")", ":", "\n", "        ", "n_total", "=", "len", "(", "self", ".", "img_list", ")", "\n", "train_num", "=", "int", "(", "0.6", "*", "n_total", ")", "\n", "val_num", "=", "int", "(", "0.7", "*", "n_total", ")", "\n", "train_inds", "=", "np", ".", "arange", "(", "train_num", ")", "\n", "val_inds", "=", "np", ".", "arange", "(", "start", "=", "train_num", ",", "stop", "=", "val_num", ")", "\n", "test_inds", "=", "np", ".", "arange", "(", "start", "=", "val_num", ",", "stop", "=", "n_total", ")", "\n", "\n", "torch", ".", "save", "(", "train_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"train_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "val_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"val_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "test_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"test_split.pt\"", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDC.__init__": [[111, 154], ["datasets.AbstractDomainInterface.__init__", "IDC.IDCBase", "IDC.IDCBase", "IDC.IDCBase", "print", "torchvision.Compose", "torchvision.Compose", "IDC.IDC.get_filtered_inds", "IDC.IDC.get_filtered_inds", "IDC.IDC.get_filtered_inds", "IDC.IDC.get_filtered_inds", "IDC.IDC.get_filtered_inds", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/IDC\"", ",", "downsample", "=", "None", ",", "shrink_channels", "=", "False", ",", "test_length", "=", "None", ",", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param leave_out_classes: if a sample has ANY class from this list as positive, then it is removed from indices.\n        :param keep_in_classes: when specified, if a sample has None of the class from this list as positive, then it\n         is removed from indices..\n        \"\"\"", "\n", "self", ".", "name", "=", "\"IDC\"", "\n", "super", "(", "IDC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "shrink_channels", "=", "shrink_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_train", "=", "IDCBase", "(", "cache_path", ",", "source_path", ",", "\"train\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "IDCBase", "(", "cache_path", ",", "source_path", ",", "\"val\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_test", "=", "IDCBase", "(", "cache_path", ",", "source_path", ",", "\"test\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDC.get_filtered_inds": [[156, 164], ["torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "IDCBase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDC.get_D1_train": [[165, 167], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDC.get_D1_valid": [[168, 170], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDC.get_D1_test": [[171, 173], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDC.get_D2_valid": [[174, 178], ["IDC.IDC.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDC.get_D2_test": [[179, 183], ["IDC.IDC.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.IDC.IDC.conformity_transform": [[184, 200], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "224", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "if", "self", ".", "shrink_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Lambda(lambda x: x.repeat(3, 1, 1)),", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR10.__init__": [[21, 39], ["datasets.AbstractDomainInterface.__init__", "torchvision.Compose", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.ToTensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "'./workspace/datasets/cifar10'", ",", "download", "=", "False", ",", "extract", "=", "False", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "CIFAR10", ",", "self", ")", ".", "__init__", "(", ")", "\n", "im_transformer", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "D1_train_ind", "=", "torch", ".", "arange", "(", "0", ",", "40000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_valid_ind", "=", "torch", ".", "arange", "(", "40000", ",", "50000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "10000", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "torch", ".", "arange", "(", "0", ",", "50000", ")", ".", "int", "(", ")", "\n", "self", ".", "D2_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "10000", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "ds_train", "=", "datasets", ".", "CIFAR10", "(", "root_path", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "self", ".", "ds_test", "=", "datasets", ".", "CIFAR10", "(", "root_path", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR10.get_D1_train": [[40, 42], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR10.get_D1_valid": [[42, 44], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR10.get_D1_test": [[44, 46], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR10.get_D2_valid": [[47, 50], ["CIFAR.CIFAR10.is_compatible", "torchvision.datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D2_valid_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR10.get_D2_test": [[51, 54], ["CIFAR.CIFAR10.is_compatible", "torchvision.datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D2_test_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR10.conformity_transform": [[55, 60], ["torchvision.Compose", "torchvision.datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "32", ",", "32", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR100.__init__": [[69, 103], ["datasets.AbstractDomainInterface.__init__", "torchvision.Compose", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.ToTensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/cifar100\"", ",", "download", "=", "False", ",", "extract", "=", "False", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "CIFAR100", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "im_transformer", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "D1_train_ind", "=", "torch", ".", "arange", "(", "0", ",", "40000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_valid_ind", "=", "torch", ".", "arange", "(", "40000", ",", "50000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "10000", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "torch", ".", "arange", "(", "0", ",", "50000", ")", ".", "int", "(", ")", "\n", "self", ".", "D2_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "10000", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "ds_train", "=", "datasets", ".", "CIFAR100", "(", "root_path", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "self", ".", "ds_test", "=", "datasets", ".", "CIFAR100", "(", "root_path", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "\n", "\"\"\"\n            TinyImagenet:\n                 6:bee with 38:bee\n                 21:chimpanzee with 55:chimpanzee, chimp, Pan troglodytes\n                 24:cockroach with 41:cockroach, roach\n                 43:lion with 34:lion, king of beasts, Panthera leo\n                 51:mushroom with 185:mushroom\n                 53:orange with 186:orange\n                 61:plate with 177:plate\n                 77:snail with 15:snail\n                 89:tractor with 164:tractor\n        \"\"\"", "\n", "self", ".", "filter_rules", "=", "{", "\n", "'TinyImagenet'", ":", "[", "6", ",", "21", ",", "24", ",", "43", ",", "51", ",", "53", ",", "61", ",", "77", ",", "89", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR100.get_D1_train": [[105, 107], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR100.get_D1_valid": [[107, 109], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR100.get_D1_test": [[109, 111], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR100.get_D2_valid": [[112, 118], ["CIFAR.CIFAR100.is_compatible", "torchvision.datasets.SubDataset", "CIFAR.filter_indices", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.filter_indices", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "if", "D1", ".", "name", "in", "self", ".", "filter_rules", ":", "\n", "            ", "target_indices", "=", "filter_indices", "(", "self", ".", "ds_train", ",", "target_indices", ",", "self", ".", "filter_rules", "[", "D1", ".", "name", "]", ")", "\n", "", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR100.get_D2_test": [[119, 125], ["CIFAR.CIFAR100.is_compatible", "torchvision.datasets.SubDataset", "CIFAR.filter_indices", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.filter_indices", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "if", "D1", ".", "name", "in", "self", ".", "filter_rules", ":", "\n", "            ", "target_indices", "=", "filter_indices", "(", "self", ".", "ds_test", ",", "target_indices", ",", "self", ".", "filter_rules", "[", "D1", ".", "name", "]", ")", "\n", "", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.CIFAR100.conformity_transform": [[126, 131], ["torchvision.Compose", "torchvision.datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "32", ",", "32", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.CIFAR.filter_indices": [[6, 13], ["torch.IntTensor", "accept.append"], "function", ["None"], ["def", "filter_indices", "(", "dataset", ",", "indices", ",", "filter_label", ")", ":", "\n", "    ", "accept", "=", "[", "]", "\n", "for", "ind", "in", "indices", ":", "\n", "        ", "_", ",", "label", "=", "dataset", "[", "ind", "]", "\n", "if", "label", "not", "in", "filter_label", ":", "\n", "            ", "accept", ".", "append", "(", "ind", ")", "\n", "", "", "return", "torch", ".", "IntTensor", "(", "accept", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDBBase.__init__": [[14, 38], ["torch.Dataset.__init__", "torchvision.Compose", "numpy.load", "numpy.arange", "torch.load", "torch.load", "torch.load", "torch.load", "os.join", "os.join", "len", "DRIMDB.DRIMDBBase.generate_split", "os.join", "os.join", "torchvision.Resize", "torchvision.ToTensor", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_split"], ["    ", "def", "__init__", "(", "self", ",", "index_cache_path", ",", "source_dir", ",", "split", ",", "image_path", "=", "\"images_224.npy\"", ",", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "\n", "to_gray", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "DRIMDBBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "index_cache_path", "=", "index_cache_path", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "image_path", "=", "image_path", "\n", "self", ".", "to_gray", "=", "to_gray", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "", "assert", "split", "in", "[", "\"train\"", ",", "\"val\"", ",", "\"test\"", "]", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "data", "=", "np", ".", "load", "(", "osp", ".", "join", "(", "source_dir", ",", "image_path", ")", ")", "\n", "self", ".", "img_list", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", "\n", "if", "not", "(", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'val_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'train_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'test_split.pt'", ")", ")", ")", ":", "\n", "                ", "self", ".", "generate_split", "(", ")", "\n", "\n", "", "self", ".", "split_inds", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"%s_split.pt\"", "%", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDBBase.__len__": [[39, 41], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "split_inds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDBBase.__getitem__": [[42, 51], ["PIL.Image.fromarray", "DRIMDB.DRIMDBBase.transforms", "DRIMDB.DRIMDBBase.transforms", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "DRIMDB.DRIMDBBase.convert", "DRIMDB.DRIMDBBase.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "index", "=", "self", ".", "split_inds", "[", "item", "]", "\n", "img", "=", "self", ".", "data", "[", "index", "]", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "if", "not", "self", ".", "to_gray", ":", "\n", "            ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "else", ":", "\n", "            ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'L'", ")", ")", "\n", "", "return", "img", ",", "torch", ".", "LongTensor", "(", "[", "0", ",", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDBBase.generate_split": [[52, 64], ["len", "int", "int", "numpy.arange", "numpy.arange", "numpy.arange", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["None"], ["", "def", "generate_split", "(", "self", ")", ":", "\n", "        ", "n_total", "=", "len", "(", "self", ".", "img_list", ")", "\n", "train_num", "=", "int", "(", "0.6", "*", "n_total", ")", "\n", "val_num", "=", "int", "(", "0.7", "*", "n_total", ")", "\n", "train_inds", "=", "np", ".", "arange", "(", "train_num", ")", "\n", "val_inds", "=", "np", ".", "arange", "(", "start", "=", "train_num", ",", "stop", "=", "val_num", ")", "\n", "test_inds", "=", "np", ".", "arange", "(", "start", "=", "val_num", ",", "stop", "=", "n_total", ")", "\n", "\n", "torch", ".", "save", "(", "train_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"train_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "val_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"val_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "test_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"test_split.pt\"", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDB.__init__": [[68, 117], ["datasets.AbstractDomainInterface.__init__", "DRIMDB.DRIMDBBase", "DRIMDB.DRIMDBBase", "DRIMDB.DRIMDBBase", "print", "torchvision.Compose", "torchvision.Compose", "DRIMDB.DRIMDB.get_filtered_inds", "DRIMDB.DRIMDB.get_filtered_inds", "DRIMDB.DRIMDB.get_filtered_inds", "DRIMDB.DRIMDB.get_filtered_inds", "DRIMDB.DRIMDB.get_filtered_inds", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/DRIMDB\"", ",", "downsample", "=", "None", ",", "shrink_channels", "=", "False", ",", "test_length", "=", "None", ",", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param leave_out_classes: if a sample has ANY class from this list as positive, then it is removed from indices.\n        :param keep_in_classes: when specified, if a sample has None of the class from this list as positive, then it\n         is removed from indices..\n        \"\"\"", "\n", "self", ".", "name", "=", "\"DRIMDB\"", "\n", "super", "(", "DRIMDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "shrink_channels", "=", "shrink_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Normalize(mean=[0.485, 0.456, 0.406],", "\n", "#                     std=[0.229, 0.224, 0.225]),", "\n", "]", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Normalize(mean=[0.485, 0.456, 0.406],", "\n", "#                     std=[0.229, 0.224, 0.225]),", "\n", "]", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_train", "=", "DRIMDBBase", "(", "cache_path", ",", "source_path", ",", "\"train\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "DRIMDBBase", "(", "cache_path", ",", "source_path", ",", "\"val\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_test", "=", "DRIMDBBase", "(", "cache_path", ",", "source_path", ",", "\"test\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDB.get_filtered_inds": [[119, 127], ["torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "DRIMDBBase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDB.get_D1_train": [[128, 130], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDB.get_D1_valid": [[131, 133], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDB.get_D1_test": [[134, 136], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDB.get_D2_valid": [[137, 141], ["DRIMDB.DRIMDB.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDB.get_D2_test": [[142, 146], ["DRIMDB.DRIMDB.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRIMDB.DRIMDB.conformity_transform": [[147, 164], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Lambda", "x.repeat"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "224", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "if", "self", ".", "shrink_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Lambda", "(", "lambda", "x", ":", "x", ".", "repeat", "(", "3", ",", "1", ",", "1", ")", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent.__init__": [[99, 118], ["os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "TinyImagenet.TinyImagenetParent.download", "TinyImagenet.TinyImagenetParent.extract", "torch.load", "torch.load", "torch.load", "torch.load", "TinyImagenet.TinyImagenetParent._check_exists_proc", "RuntimeError", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNISTParent.download", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent._check_exists_proc"], ["def", "__init__", "(", "self", ",", "root", ",", "split", "=", "'train'", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "False", ")", ":", "\n", "        ", "assert", "split", "in", "[", "'train'", ",", "'test'", ",", "'valid'", "]", "\n", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "split", "=", "split", "# train, test or valid", "\n", "\n", "self", ".", "file_path", "=", "None", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "if", "not", "self", ".", "_check_exists_proc", "(", ")", ":", "\n", "                ", "raise", "RuntimeError", "(", "'Dataset not found.'", "+", "\n", "' You can use download=True to download it'", ")", "\n", "\n", "", "self", ".", "index", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "\n", "self", ".", "key", "=", "split", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent.__getitem__": [[123, 146], ["TinyImagenet.default_loader", "TinyImagenet.TinyImagenetParent.transform", "TinyImagenet.TinyImagenetParent.target_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.default_loader"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (image, target) where target is index of the target class.\n        \"\"\"", "\n", "\n", "im_path", ",", "target", "=", "self", ".", "index", "[", "self", ".", "key", "]", "[", "index", "]", "\n", "\n", "# doing this so that it is consistent with all other datasets", "\n", "# to return a PIL Image", "\n", "\n", "img", "=", "default_loader", "(", "im_path", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent.__len__": [[147, 149], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "index", "[", "self", ".", "key", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent._check_exists_raw": [[150, 152], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_check_exists_raw", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'tiny-imagenet-200.zip'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent._check_exists_proc": [[153, 155], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_check_exists_proc", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent.download": [[156, 183], ["TinyImagenet.TinyImagenetParent._check_exists_raw", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "print", "urllib.request.urlopen", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "url.rpartition", "open", "f.write", "urllib.request.urlopen.read"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent._check_exists_raw"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "\"\"\"Download the TinyImagenet data if it doesn't exist in processed_folder already.\"\"\"", "\n", "from", "six", ".", "moves", "import", "urllib", "\n", "import", "gzip", "\n", "\n", "if", "self", ".", "_check_exists_raw", "(", ")", ":", "\n", "            ", "return", "\n", "\n", "# download files", "\n", "", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ")", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "==", "errno", ".", "EEXIST", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "\n", "\n", "", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'tiny-imagenet-200.zip'", ")", ")", ":", "\n", "            ", "for", "url", "in", "self", ".", "urls", ":", "\n", "                ", "print", "(", "'Downloading '", "+", "url", ")", "\n", "data", "=", "urllib", ".", "request", ".", "urlopen", "(", "url", ")", "\n", "filename", "=", "url", ".", "rpartition", "(", "'/'", ")", "[", "2", "]", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "filename", ")", "\n", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "f", ":", "\n", "                    ", "f", ".", "write", "(", "data", ".", "read", "(", ")", ")", "\n", "", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent.extract": [[184, 215], ["TinyImagenet.TinyImagenetParent._check_exists_proc", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "TinyImagenet.TinyImagenetParent.urls[].rpartition", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "print", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "TinyImagenet.find_classes", "TinyImagenet.make_dataset", "TinyImagenet.make_dataset", "torch.save", "torch.save", "torch.save", "torch.save", "print", "zipfile.ZipFile", "z.extractall", "open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "row.split.split.split", "valid_set.append", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetParent._check_exists_proc", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.find_classes", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.make_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.make_dataset"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_check_exists_proc", "(", ")", ":", "\n", "            ", "return", "\n", "", "filename", "=", "self", ".", "urls", "[", "0", "]", ".", "rpartition", "(", "'/'", ")", "[", "2", "]", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "filename", ")", "\n", "extract_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ")", "\n", "output_path", "=", "os", ".", "path", ".", "join", "(", "extract_path", ",", "'tiny-imagenet-200'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "output_path", ")", ":", "\n", "            ", "import", "zipfile", "\n", "with", "zipfile", ".", "ZipFile", "(", "file_path", ",", "'r'", ")", "as", "z", ":", "\n", "                ", "z", ".", "extractall", "(", "extract_path", ")", "\n", "\n", "", "", "index_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "index_path", ")", ":", "\n", "# process and save as torch files", "\n", "            ", "print", "(", "'Processing...'", ")", "\n", "\n", "train_path", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "'train'", ")", "\n", "classes", ",", "class_to_idx", "=", "find_classes", "(", "train_path", ")", "\n", "train_set", "=", "make_dataset", "(", "train_path", ",", "class_to_idx", ")", "\n", "valid_set", "=", "[", "]", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "'val'", ",", "'val_annotations.txt'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "for", "row", "in", "f", ":", "\n", "                    ", "row", "=", "row", ".", "split", "(", "'\\t'", ")", "\n", "valid_set", ".", "append", "(", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "'val'", ",", "'images'", ",", "row", "[", "0", "]", ")", ",", "class_to_idx", "[", "row", "[", "1", "]", "]", ")", ")", "\n", "", "", "test_set", "=", "make_dataset", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "'test'", ")", ",", "{", "'images'", ":", "-", "1", "}", ")", "\n", "\n", "torch", ".", "save", "(", "{", "'class_to_index'", ":", "class_to_idx", ",", "'train'", ":", "train_set", ",", "'valid'", ":", "valid_set", ",", "'test'", ":", "test_set", "}", ",", "\n", "index_path", ")", "\n", "print", "(", "'Done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenet.__init__": [[232, 291], ["datasets.AbstractDomainInterface.__init__", "TinyImagenet.TinyImagenetParent", "TinyImagenet.TinyImagenetParent", "TinyImagenet.TinyImagenetParent", "torchvision.Compose", "torchvision.Compose", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "torch.randperm.int", "torch.randperm.int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.randperm.int", "torch.randperm.int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torchvision.Resize", "torch.load", "torch.load", "torch.load", "torch.load", "print", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.save", "torch.save", "torch.save", "torch.save", "termcolor.colored", "len", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "'./workspace/datasets/tinyimagenet'", ",", "downsample", "=", "None", ",", "download", "=", "True", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "TinyImagenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "im_transformer", "=", "None", "\n", "self", ".", "downsample", "=", "downsample", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "self", ".", "downsample", "is", "None", ":", "\n", "            ", "im_transformer", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "im_transformer", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "[", "transforms", ".", "Resize", "(", "(", "self", ".", "downsample", ",", "self", ".", "downsample", ")", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "self", ".", "ds_train", "=", "TinyImagenetParent", "(", "root_path", ",", "\n", "split", "=", "'train'", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ",", "\n", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "TinyImagenetParent", "(", "root_path", ",", "\n", "split", "=", "'valid'", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ",", "\n", "extract", "=", "extract", ")", "\n", "self", ".", "ds_test", "=", "TinyImagenetParent", "(", "root_path", ",", "\n", "split", "=", "'test'", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ",", "\n", "extract", "=", "extract", ")", "\n", "if", "extract", ":", "\n", "            ", "index_file", "=", "os", ".", "path", ".", "join", "(", "'./datasets/permutation_files/'", ",", "'tinyimagenet.pth'", ")", "\n", "train_indices", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "index_file", ")", ":", "\n", "                ", "train_indices", "=", "torch", ".", "load", "(", "index_file", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "colored", "(", "'GENERATING PERMUTATION FOR <TinyImagenet train>'", ",", "'red'", ")", ")", "\n", "train_indices", "=", "torch", ".", "randperm", "(", "len", "(", "self", ".", "ds_train", ")", ")", "\n", "torch", ".", "save", "(", "train_indices", ",", "index_file", ")", "\n", "\n", "", "self", ".", "D1_train_ind", "=", "train_indices", ".", "int", "(", ")", "\n", "self", ".", "D1_valid_ind", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "self", ".", "ds_valid", ")", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "self", ".", "ds_test", ")", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "train_indices", ".", "int", "(", ")", "\n", "self", ".", "D2_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "self", ".", "ds_valid", ")", ")", ".", "int", "(", ")", "\n", "\n", "", "\"\"\"\n        CIFAR100:\n                 15:snail with 77:snail\n                 34:lion, king of beasts, Panthera leo with 43:lion\n                 38:bee with 6:bee\n                 41:cockroach, roach with 24:cockroach\n                 55:chimpanzee, chimp, Pan troglodytes with 21:chimpanzee\n                 164:tractor with 89:tractor\n                 177:plate with 61:plate\n                 185:mushroom with 51:mushroom\n                 186:orange with 53:orange\n        \"\"\"", "\n", "self", ".", "filter_rules", "=", "{", "\n", "'CIFAR100'", ":", "[", "15", ",", "34", ",", "38", ",", "41", ",", "55", ",", "164", ",", "177", ",", "185", ",", "186", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenet.get_D1_train": [[293, 295], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenet.get_D1_valid": [[295, 297], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenet.get_D1_test": [[297, 299], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenet.get_D2_valid": [[300, 306], ["TinyImagenet.TinyImagenet.is_compatible", "datasets.SubDataset", "TinyImagenet.filter_indices", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.filter_indices", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "if", "D1", ".", "name", "in", "self", ".", "filter_rules", ":", "\n", "            ", "target_indices", "=", "filter_indices", "(", "self", ".", "ds_train", ",", "target_indices", ",", "self", ".", "filter_rules", "[", "D1", ".", "name", "]", ")", "\n", "", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenet.get_D2_test": [[307, 313], ["TinyImagenet.TinyImagenet.is_compatible", "datasets.SubDataset", "TinyImagenet.filter_indices", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.filter_indices", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "if", "D1", ".", "name", "in", "self", ".", "filter_rules", ":", "\n", "            ", "target_indices", "=", "filter_indices", "(", "self", ".", "ds_valid", ",", "target_indices", ",", "self", ".", "filter_rules", "[", "D1", ".", "name", "]", ")", "\n", "", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenet.conformity_transform": [[314, 324], ["torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "64", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "out_transform", "=", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "return", "out_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.TinyImagenetd32.__init__": [[326, 328], ["TinyImagenet.TinyImagenet.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "TinyImagenetd32", ",", "self", ")", ".", "__init__", "(", "downsample", "=", "32", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.is_image_file": [[17, 28], ["filename.lower", "any", "filename.lower.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "\"\"\"Checks if a file is an image.\n\n    Args:\n        filename (string): path to a file\n\n    Returns:\n        bool: True if the filename ends with a known image extension\n    \"\"\"", "\n", "filename_lower", "=", "filename", ".", "lower", "(", ")", "\n", "return", "any", "(", "filename_lower", ".", "endswith", "(", "ext", ")", "for", "ext", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.find_classes": [[29, 34], ["classes.sort", "os.listdir", "os.listdir", "os.path.isdir", "os.path.isdir", "range", "os.path.join", "os.path.join", "len"], "function", ["None"], ["", "def", "find_classes", "(", "dir", ")", ":", "\n", "    ", "classes", "=", "[", "d", "for", "d", "in", "os", ".", "listdir", "(", "dir", ")", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "dir", ",", "d", ")", ")", "]", "\n", "classes", ".", "sort", "(", ")", "\n", "class_to_idx", "=", "{", "classes", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "classes", ")", ")", "}", "\n", "return", "classes", ",", "class_to_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.make_dataset": [[35, 54], ["os.path.expanduser", "os.path.expanduser", "sorted", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "sorted", "os.path.join", "os.path.join", "os.path.isdir", "os.path.isdir", "os.walk", "os.walk", "sorted", "TinyImagenet.is_image_file", "os.path.join", "os.path.join", "images.append"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.is_image_file"], ["", "def", "make_dataset", "(", "dir", ",", "class_to_idx", ",", "suffix", "=", "''", ")", ":", "\n", "    ", "images", "=", "[", "]", "\n", "dir", "=", "os", ".", "path", ".", "expanduser", "(", "dir", ")", "\n", "for", "target", "in", "sorted", "(", "os", ".", "listdir", "(", "dir", ")", ")", ":", "\n", "        ", "d", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "target", ")", "\n", "if", "suffix", "!=", "''", ":", "\n", "            ", "d", "=", "os", ".", "path", ".", "join", "(", "d", ",", "suffix", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "d", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "for", "root", ",", "_", ",", "fnames", "in", "sorted", "(", "os", ".", "walk", "(", "d", ")", ")", ":", "\n", "            ", "for", "fname", "in", "sorted", "(", "fnames", ")", ":", "\n", "                ", "if", "is_image_file", "(", "fname", ")", ":", "\n", "                    ", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "fname", ")", "\n", "item", "=", "(", "path", ",", "class_to_idx", "[", "target", "]", ")", "\n", "images", ".", "append", "(", "item", ")", "\n", "\n", "", "", "", "", "return", "images", "\n", "", "def", "pil_loader", "(", "path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.pil_loader": [[54, 59], ["open", "PIL.Image.open", "img.convert"], "function", ["None"], ["", "def", "pil_loader", "(", "path", ")", ":", "\n", "# open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "            ", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.accimage_loader": [[61, 68], ["accimage.Image", "TinyImagenet.pil_loader"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.pil_loader"], ["", "", "", "def", "accimage_loader", "(", "path", ")", ":", "\n", "    ", "import", "accimage", "\n", "try", ":", "\n", "        ", "return", "accimage", ".", "Image", "(", "path", ")", "\n", "", "except", "IOError", ":", "\n", "# Potentially a decoding problem, fall back to PIL.Image", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.default_loader": [[70, 76], ["get_image_backend", "TinyImagenet.accimage_loader", "TinyImagenet.pil_loader"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.accimage_loader", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.pil_loader"], ["", "", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "from", "torchvision", "import", "get_image_backend", "\n", "if", "get_image_backend", "(", ")", "==", "'accimage'", ":", "\n", "        ", "return", "accimage_loader", "(", "path", ")", "\n", "", "else", ":", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.TinyImagenet.filter_indices": [[216, 223], ["torch.IntTensor", "torch.IntTensor", "accept.append"], "function", ["None"], ["", "", "", "def", "filter_indices", "(", "dataset", ",", "indices", ",", "filter_label", ")", ":", "\n", "    ", "accept", "=", "[", "]", "\n", "for", "ind", "in", "indices", ":", "\n", "        ", "_", ",", "label", "=", "dataset", ".", "index", "[", "dataset", ".", "key", "]", "[", "ind", "]", "\n", "if", "label", "not", "in", "filter_label", ":", "\n", "            ", "accept", ".", "append", "(", "ind", ")", "\n", "", "", "return", "torch", ".", "IntTensor", "(", "accept", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MNIST.MNIST.__init__": [[13, 33], ["datasets.AbstractDomainInterface.__init__", "torchvision.Compose", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.ToTensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "'./workspace/datasets/mnist'", ",", "download", "=", "False", ",", "extract", "=", "False", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "MNIST", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "im_transformer", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "D1_train_ind", "=", "torch", ".", "arange", "(", "0", ",", "50000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_valid_ind", "=", "torch", ".", "arange", "(", "50000", ",", "60000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "10000", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "torch", ".", "arange", "(", "0", ",", "60000", ")", ".", "int", "(", ")", "\n", "self", ".", "D2_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "10000", ")", ".", "int", "(", ")", "\n", "\n", "\n", "self", ".", "ds_train", "=", "datasets", ".", "MNIST", "(", "root_path", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "self", ".", "ds_test", "=", "datasets", ".", "MNIST", "(", "root_path", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MNIST.MNIST.get_D1_train": [[34, 36], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MNIST.MNIST.get_D1_valid": [[36, 38], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MNIST.MNIST.get_D1_test": [[38, 40], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MNIST.MNIST.get_D2_valid": [[41, 44], ["MNIST.MNIST.is_compatible", "torchvision.datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D2_valid_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MNIST.MNIST.get_D2_test": [[45, 48], ["MNIST.MNIST.is_compatible", "torchvision.datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D2_test_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.MNIST.MNIST.conformity_transform": [[49, 54], ["torchvision.Compose", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.Grayscale", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "return", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "28", ",", "28", ")", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGABase.__init__": [[15, 42], ["torch.Dataset.__init__", "torchvision.Compose", "RIGA.RIGABase.extract", "RIGA.RIGABase.generate_index", "torch.load", "torch.load", "torch.load", "torch.load", "RIGA.RIGABase.generate_split", "os.join", "os.join", "torchvision.Resize", "torchvision.ToTensor", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_index", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_split"], ["    ", "def", "__init__", "(", "self", ",", "index_cache_path", ",", "source_dir", ",", "split", ",", "image_dir", "=", "\"images_224\"", ",", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "\n", "to_gray", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "RIGABase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "index_cache_path", "=", "index_cache_path", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "to_gray", "=", "to_gray", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "", "assert", "split", "in", "[", "\"train\"", ",", "\"val\"", ",", "\"test\"", "]", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "cache_file", "=", "self", ".", "generate_index", "(", ")", "\n", "self", ".", "img_list", "=", "cache_file", "[", "'img_list'", "]", "\n", "self", ".", "label_tensors", "=", "cache_file", "[", "'label_tensors'", "]", "\n", "self", ".", "split_inds", "=", "cache_file", "[", "\"split_inds\"", "]", "\n", "if", "not", "(", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'val_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'train_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'test_split.pt'", ")", ")", ")", ":", "\n", "                ", "self", ".", "generate_split", "(", ")", "\n", "\n", "", "self", ".", "split_inds", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"%s_split.pt\"", "%", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGABase.__len__": [[43, 45], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "split_inds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGABase.__getitem__": [[46, 59], ["os.join", "os.join", "open", "PIL.Image.open", "RIGA.RIGABase.transforms", "RIGA.RIGABase.transforms", "RIGA.RIGABase.convert", "RIGA.RIGABase.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "index", "=", "self", ".", "split_inds", "[", "item", "]", "\n", "img_name", "=", "self", ".", "img_list", "[", "index", "]", "\n", "label", "=", "self", ".", "label_tensors", "[", "index", "]", "\n", "\n", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "img_name", ")", "\n", "with", "open", "(", "imp", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "                ", "if", "not", "self", ".", "to_gray", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "else", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'L'", ")", ")", "\n", "", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGABase.extract": [[60, 69], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "tarfile.open", "tar.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "return", "\n", "", "import", "tarfile", "\n", "tarsplits_list", "=", "[", "\"images-224.tar.gz\"", ",", "\n", "]", "\n", "for", "tar_split", "in", "tarsplits_list", ":", "\n", "            ", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "tar_split", ")", ")", "as", "tar", ":", "\n", "                ", "tar", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGABase.generate_index": [[70, 96], ["len", "os.walk", "os.walk", "os.walk", "os.walk", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "os.path.join().split", "os.path.join().split", "os.path.join().split", "os.path.join().split", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "label_list.append", "dirpath.split", "len", "os.join", "os.join", "img_list.append", "img_list.append", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "", "", "def", "generate_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Scan index file to create list of images and labels for each image\n        :return:\n        \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "if", "os", ".", "name", "==", "\"posix\"", ":", "\n", "            ", "split_char", "=", "\"/\"", "\n", "", "else", ":", "\n", "            ", "split_char", "=", "\"\\\\\"", "\n", "", "dir_level", "=", "len", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ".", "split", "(", "split_char", ")", ")", "\n", "for", "(", "dirpath", ",", "dirnames", ",", "filenames", ")", "in", "os", ".", "walk", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "for", "filename", "in", "filenames", ":", "\n", "                ", "if", "'.jpg'", "in", "filename", ":", "\n", "                    ", "dir_strs", "=", "dirpath", ".", "split", "(", "split_char", ")", "[", "dir_level", ":", "]", "\n", "if", "len", "(", "dir_strs", ")", ">", "0", ":", "\n", "                        ", "dir_strs", "=", "osp", ".", "join", "(", "*", "dir_strs", ")", "\n", "img_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dir_strs", ",", "filename", ")", ")", "\n", "", "else", ":", "\n", "                        ", "img_list", ".", "append", "(", "filename", ")", "\n", "", "label_list", ".", "append", "(", "1", ")", "\n", "\n", "", "", "", "label_tensors", "=", "torch", ".", "LongTensor", "(", "label_list", ")", "\n", "return", "{", "'img_list'", ":", "img_list", ",", "'label_tensors'", ":", "label_tensors", ",", "'label_list'", ":", "label_list", ",", "\n", "'split_inds'", ":", "torch", ".", "arange", "(", "len", "(", "img_list", ")", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGABase.generate_split": [[98, 110], ["len", "int", "int", "numpy.arange", "numpy.arange", "numpy.arange", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["None"], ["", "def", "generate_split", "(", "self", ")", ":", "\n", "        ", "n_total", "=", "len", "(", "self", ".", "img_list", ")", "\n", "train_num", "=", "int", "(", "0.6", "*", "n_total", ")", "\n", "val_num", "=", "int", "(", "0.7", "*", "n_total", ")", "\n", "train_inds", "=", "np", ".", "arange", "(", "train_num", ")", "\n", "val_inds", "=", "np", ".", "arange", "(", "start", "=", "train_num", ",", "stop", "=", "val_num", ")", "\n", "test_inds", "=", "np", ".", "arange", "(", "start", "=", "val_num", ",", "stop", "=", "n_total", ")", "\n", "\n", "torch", ".", "save", "(", "train_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"train_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "val_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"val_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "test_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"test_split.pt\"", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGA.__init__": [[114, 163], ["datasets.AbstractDomainInterface.__init__", "RIGA.RIGABase", "RIGA.RIGABase", "RIGA.RIGABase", "print", "torchvision.Compose", "torchvision.Compose", "RIGA.RIGA.get_filtered_inds", "RIGA.RIGA.get_filtered_inds", "RIGA.RIGA.get_filtered_inds", "RIGA.RIGA.get_filtered_inds", "RIGA.RIGA.get_filtered_inds", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/RIGA-dataset\"", ",", "downsample", "=", "None", ",", "shrink_channels", "=", "False", ",", "test_length", "=", "None", ",", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param leave_out_classes: if a sample has ANY class from this list as positive, then it is removed from indices.\n        :param keep_in_classes: when specified, if a sample has None of the class from this list as positive, then it\n         is removed from indices..\n        \"\"\"", "\n", "self", ".", "name", "=", "\"RIGA\"", "\n", "super", "(", "RIGA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "shrink_channels", "=", "shrink_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Normalize(mean=[0.485, 0.456, 0.406],", "\n", "#                     std=[0.229, 0.224, 0.225]),", "\n", "]", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Normalize(mean=[0.485, 0.456, 0.406],", "\n", "#                     std=[0.229, 0.224, 0.225]),", "\n", "]", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_train", "=", "RIGABase", "(", "cache_path", ",", "source_path", ",", "\"train\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "RIGABase", "(", "cache_path", ",", "source_path", ",", "\"val\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_test", "=", "RIGABase", "(", "cache_path", ",", "source_path", ",", "\"test\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGA.get_filtered_inds": [[165, 173], ["torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "RIGABase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGA.get_D1_train": [[174, 176], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGA.get_D1_valid": [[177, 179], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGA.get_D1_test": [[180, 182], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGA.get_D2_valid": [[183, 187], ["datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "#assert self.is_compatible(D1)", "\n", "        ", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGA.get_D2_test": [[188, 192], ["datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "#assert self.is_compatible(D1)", "\n", "        ", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.RIGA.RIGA.conformity_transform": [[193, 210], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Lambda", "x.repeat"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "224", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "if", "self", ".", "shrink_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Lambda", "(", "lambda", "x", ":", "x", ".", "repeat", "(", "3", ",", "1", ",", "1", ")", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.STL.STL10.__init__": [[15, 43], ["datasets.AbstractDomainInterface.__init__", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torchvision.datasets.STL10", "torchvision.datasets.STL10", "torchvision.Compose", "torchvision.Compose", "torchvision.Resize", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "downsample", "=", "None", ",", "root_path", "=", "'./workspace/datasets/stl10'", ",", "download", "=", "False", ",", "extract", "=", "False", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "STL10", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "im_transformer", "=", "None", "\n", "self", ".", "downsample", "=", "downsample", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "self", ".", "downsample", "is", "None", ":", "\n", "            ", "im_transformer", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "im_transformer", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "[", "transforms", ".", "Resize", "(", "(", "self", ".", "downsample", ",", "self", ".", "downsample", ")", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "self", ".", "D1_train_ind", "=", "torch", ".", "arange", "(", "0", ",", "5000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_valid_ind", "=", "torch", ".", "arange", "(", "0", ",", "4000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_test_ind", "=", "torch", ".", "arange", "(", "4000", ",", "8000", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "torch", ".", "arange", "(", "0", ",", "5000", ")", ".", "int", "(", ")", "\n", "self", ".", "D2_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "8000", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "ds_train", "=", "datasets", ".", "STL10", "(", "root_path", ",", "\n", "split", "=", "'train'", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "self", ".", "ds_test", "=", "datasets", ".", "STL10", "(", "root_path", ",", "\n", "split", "=", "'test'", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.STL.STL10.get_D1_train": [[44, 46], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.STL.STL10.get_D1_valid": [[46, 48], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.STL.STL10.get_D1_test": [[48, 50], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.STL.STL10.get_D2_valid": [[51, 54], ["STL.STL10.is_compatible", "torchvision.datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D2_valid_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.STL.STL10.get_D2_test": [[55, 58], ["STL.STL10.is_compatible", "torchvision.datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D2_test_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.STL.STL10.conformity_transform": [[59, 69], ["torchvision.Compose", "torchvision.datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "96", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "out_transform", "=", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "return", "out_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.STL.STL10d32.__init__": [[71, 73], ["STL.STL10.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root_path", "=", "'./workspace/datasets/stl10'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "STL10d32", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "downsample", "=", "32", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestBase.__init__": [[27, 51], ["torch.Dataset.__init__", "torchvision.Compose", "PADChest.PADChestBase.extract", "torch.load", "torch.load", "torch.load", "torch.load", "os.exists", "os.exists", "PADChest.PADChestBase.generate_index", "os.join", "os.join", "torchvision.Resize", "torchvision.ToTensor", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_index"], ["    ", "def", "__init__", "(", "self", ",", "index_cache_path", ",", "source_dir", ",", "\n", "index_file", "=", "\"PADCHEST_chest_x_ray_images_labels_160K_01.02.19.csv\"", ",", "image_dir", "=", "\"images-64\"", ",", "\n", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "binary", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "PADChestBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "index_cache_path", "=", "index_cache_path", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "cache_file", "=", "\"PADChestIndex.pkl\"", "\n", "self", ".", "index_file", "=", "index_file", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "binary", "=", "binary", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "\n", "", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "if", "not", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", ":", "\n", "                ", "self", ".", "generate_index", "(", ")", "\n", "", "cache_file", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", "\n", "self", ".", "img_list", "=", "cache_file", "[", "'img_list'", "]", "\n", "self", ".", "label_tensors", "=", "cache_file", "[", "'label_tensors'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestBase.__len__": [[52, 54], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "label_tensors", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestBase.__getitem__": [[55, 78], ["os.join", "os.join", "skimage.io.imread", "PIL.Image.fromarray", "PADChest.PADChestBase.transforms", "numpy.max", "numpy.max", "numpy.max"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "\n", "        ", "img_name", "=", "self", ".", "img_list", "[", "item", "]", "\n", "label", "=", "self", ".", "label_tensors", "[", "item", "]", "\n", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "img_name", ")", "\n", "img", "=", "io", ".", "imread", "(", "imp", ",", "as_gray", "=", "True", ")", "\n", "if", "np", ".", "max", "(", "img", ")", ">", "256", ":", "\n", "            ", "img", "=", "img", "/", "(", "256", "*", "256", ")", "\n", "", "elif", "np", ".", "max", "(", "img", ")", ">", "1", ":", "\n", "            ", "img", "=", "img", "/", "np", ".", "max", "(", "img", ")", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "img", "=", "self", ".", "transforms", "(", "img", ")", "\n", "#if self.to_rgb:", "\n", "#    img = self.transforms(img)#.convert('RGB'))", "\n", "#else:", "\n", "#    img = self.transforms(img)#.convert('L'))", "\n", "'''with open(imp, 'rb') as f:\n            with Image.open(f) as img:\n                if self.to_rgb:\n                    img = self.transforms(img.convert('RGB'))\n                else:\n                    img = self.transforms(img.convert('L'))'''", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestBase.extract": [[79, 88], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "tarfile.open", "tar.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "return", "\n", "", "import", "tarfile", "\n", "tarsplits_list", "=", "[", "\"images-64.tar\"", ",", "\n", "]", "\n", "for", "tar_split", "in", "tarsplits_list", ":", "\n", "            ", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "tar_split", ")", ")", "as", "tar", ":", "\n", "                ", "tar", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestBase.generate_index": [[90, 119], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "torch.save", "torch.save", "torch.save", "torch.save", "open", "csv.DictReader", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.exists", "os.exists", "img_list.append", "label_list.append", "numpy.zeros", "numpy.zeros", "CLASSES.index"], "methods", ["None"], ["", "", "", "def", "generate_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Scan index file to create list of images and labels for each image. Also stores index files in index_cache_path\n        :return:\n        \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "disease_label_list", "=", "[", "]", "\n", "with", "open", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "index_file", ")", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "csvf", "=", "csv", ".", "DictReader", "(", "fp", ")", "\n", "for", "row", "in", "csvf", ":", "\n", "                ", "if", "not", "row", "[", "'Projection'", "]", "in", "[", "'L'", ",", "'PA'", ",", "'AP'", ",", "'AP_horizontal'", "]", ":", "\n", "                    ", "continue", "\n", "", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "row", "[", "'ImageID'", "]", ")", "\n", "if", "osp", ".", "exists", "(", "imp", ")", ":", "\n", "                    ", "img_list", ".", "append", "(", "row", "[", "'ImageID'", "]", ")", "\n", "if", "row", "[", "'Pediatric'", "]", "==", "\"PED\"", ":", "\n", "                        ", "label", "=", "np", ".", "zeros", "(", "5", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "label", "[", "4", "]", "=", "1", "\n", "", "else", ":", "\n", "                        ", "label", "=", "np", ".", "zeros", "(", "5", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "ind", "=", "CLASSES", ".", "index", "(", "row", "[", "'Projection'", "]", ")", "\n", "label", "[", "ind", "]", "=", "1", "\n", "", "label_list", ".", "append", "(", "label", ")", "\n", "", "", "", "label_tensors", "=", "torch", ".", "LongTensor", "(", "label_list", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "index_cache_path", ",", "exist_ok", "=", "True", ")", "\n", "torch", ".", "save", "(", "{", "'img_list'", ":", "img_list", ",", "'label_tensors'", ":", "label_tensors", ",", "'label_list'", ":", "label_list", "}", ",", "\n", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChest.__init__": [[123, 162], ["datasets.AbstractDomainInterface.__init__", "PADChest.PADChestBase", "int", "torch.random_split", "torch.random_split", "print", "torchvision.Compose", "torchvision.Compose", "len", "PADChest.PADChest.get_filtered_inds", "PADChest.PADChest.get_filtered_inds", "PADChest.PADChest.get_filtered_inds", "PADChest.PADChest.get_filtered_inds", "PADChest.PADChest.get_filtered_inds", "torchvision.Resize", "len", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/PADChest\"", ",", "keep_class", "=", "None", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "name", "=", "\"PADChest\"", "\n", "super", "(", "PADChest", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "keep_in_classes", "=", "keep_class", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "expand_channels", "=", "expand_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "[", "\n", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "[", "transforms", ".", "Resize", "(", "(", "64", ",", "64", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "64", ",", "64", ")", "\n", "\n", "", "self", ".", "ds_all", "=", "PADChestBase", "(", "cache_path", ",", "source_path", ",", "transforms", "=", "transform", ",", "\n", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "n_train", "=", "int", "(", "0.6", "*", "len", "(", "self", ".", "ds_all", ")", ")", "# A generous 6-4 split since we don't use the train split at all...", "\n", "n_val", "=", "len", "(", "self", ".", "ds_all", ")", "-", "n_train", "\n", "self", ".", "ds_train", ",", "self", ".", "ds_valid", "=", "data", ".", "random_split", "(", "self", ".", "ds_all", ",", "[", "n_train", ",", "n_val", "]", ")", "\n", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChest.get_filtered_inds": [[164, 187], ["torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "enumerate", "torch.Tensor().int", "torch.Tensor().int", "torch.Tensor().int", "torch.Tensor().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "CLASSES.index", "basedata.dataset.label_tensors[].int", "len", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "keep_inds.append", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "PADChestBase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "if", "not", "self", ".", "keep_in_classes", "is", "None", ":", "\n", "#print(basedata.__dict__)", "\n", "            ", "keep_in_mask_label", "=", "torch", ".", "zeros", "(", "N_CLASS", ")", ".", "int", "(", ")", "\n", "for", "cla", "in", "self", ".", "keep_in_classes", ":", "\n", "                ", "ii", "=", "CLASSES", ".", "index", "(", "cla", ")", "\n", "keep_in_mask_label", "[", "ii", "]", "=", "1", "\n", "", "keep_inds", "=", "[", "]", "\n", "for", "seq_ind", ",", "base_ind", "in", "enumerate", "(", "basedata", ".", "indices", ")", ":", "\n", "                ", "label", "=", "basedata", ".", "dataset", ".", "label_tensors", "[", "base_ind", "]", ".", "int", "(", ")", "\n", "if", "torch", ".", "sum", "(", "label", "*", "keep_in_mask_label", ")", ">", "0", ":", "\n", "                    ", "keep_inds", ".", "append", "(", "seq_ind", ")", "\n", "", "else", ":", "\n", "                    ", "pass", "\n", "", "", "output_inds", "=", "torch", ".", "Tensor", "(", "keep_inds", ")", ".", "int", "(", ")", "\n", "", "else", ":", "\n", "            ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChest.get_D1_train": [[188, 190], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChest.get_D1_valid": [[190, 192], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChest.get_D1_test": [[192, 194], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChest.get_D2_valid": [[195, 199], ["PADChest.PADChest.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChest.get_D2_test": [[200, 204], ["PADChest.PADChest.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChest.conformity_transform": [[205, 222], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "64", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "if", "self", ".", "expand_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "#transforms.Grayscale(),", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestPA.__init__": [[226, 230], ["PADChest.PADChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/PADChest\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "PADChestPA", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"PA\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestAP.__init__": [[233, 237], ["PADChest.PADChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/PADChest\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "PADChestAP", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"AP\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestL.__init__": [[241, 245], ["PADChest.PADChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/PADChest\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "PADChestL", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"L\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestAPHorizontal.__init__": [[249, 253], ["PADChest.PADChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/PADChest\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "PADChestAPHorizontal", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"AP_horizontal\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestPED.__init__": [[257, 261], ["PADChest.PADChest.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/PADChest\"", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "\n", "test_length", "=", "None", ",", "download", "=", "False", ",", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "PADChestPED", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "[", "\"PED\"", ",", "]", ",", "downsample", ",", "expand_channels", ",", "\n", "test_length", ",", "download", ",", "extract", ",", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSVBase.__init__": [[264, 289], ["torch.Dataset.__init__", "torchvision.Compose", "PADChest.PADChestSVBase.extract", "torch.load", "torch.load", "torch.load", "torch.load", "os.exists", "os.exists", "PADChest.PADChestSVBase.generate_index", "os.join", "os.join", "torchvision.Resize", "torchvision.ToTensor", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_index"], ["    ", "def", "__init__", "(", "self", ",", "index_cache_path", ",", "source_dir", ",", "\n", "index_file", "=", "\"PADCHEST_chest_x_ray_images_labels_160K_01.02.19.csv\"", ",", "image_dir", "=", "\"images-299\"", ",", "\n", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "binary", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "PADChestSVBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "index_cache_path", "=", "index_cache_path", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "cache_file", "=", "\"PADChestSVIndex.pkl\"", "\n", "self", ".", "index_file", "=", "index_file", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "binary", "=", "binary", "\n", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "\n", "", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "if", "not", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", ":", "\n", "                ", "self", ".", "generate_index", "(", ")", "\n", "", "cache_file", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", "\n", "self", ".", "img_list", "=", "cache_file", "[", "'img_list'", "]", "\n", "self", ".", "label_tensors", "=", "cache_file", "[", "'label_tensors'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSVBase.__len__": [[290, 292], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "label_tensors", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSVBase.__getitem__": [[293, 314], ["os.join", "os.join", "skimage.io.imread", "PIL.Image.fromarray", "PADChest.PADChestSVBase.transforms", "numpy.max", "numpy.max", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "numpy.max"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "img_name", "=", "self", ".", "img_list", "[", "item", "]", "\n", "label", "=", "self", ".", "label_tensors", "[", "item", "]", "\n", "if", "self", ".", "binary", ":", "\n", "            ", "label", "=", "label", "[", "7", "]", "*", "(", "torch", ".", "sum", "(", "label", ")", "==", "1", ")", "\n", "", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "img_name", ")", "\n", "img", "=", "io", ".", "imread", "(", "imp", ",", "as_gray", "=", "True", ")", "\n", "if", "np", ".", "max", "(", "img", ")", ">", "256", ":", "\n", "            ", "img", "=", "img", "/", "(", "256", "*", "256", ")", "\n", "", "elif", "np", ".", "max", "(", "img", ")", ">", "1", ":", "\n", "            ", "img", "=", "img", "/", "np", ".", "max", "(", "img", ")", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "img", "=", "self", ".", "transforms", "(", "img", ")", "\n", "\n", "'''with open(imp, 'rb') as f:\n            with Image.open(f) as img:\n                if self.to_rgb:\n                    img = self.transforms(img.convert('RGB'))\n                else:\n                    img = self.transforms(img.convert('L'))'''", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSVBase.extract": [[315, 328], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "tarfile.open", "tar.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "return", "\n", "", "import", "tarfile", "\n", "if", "self", ".", "image_dir", "==", "\"images-64\"", ":", "\n", "            ", "tarsplits_list", "=", "[", "\"images-64.tar\"", ",", "\n", "]", "\n", "", "else", ":", "\n", "            ", "tarsplits_list", "=", "[", "\"images-299.tar.gz\"", ",", "\n", "]", "\n", "", "for", "tar_split", "in", "tarsplits_list", ":", "\n", "            ", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "tar_split", ")", ")", "as", "tar", ":", "\n", "                ", "tar", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSVBase.generate_index": [[329, 363], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "torch.save", "torch.save", "torch.save", "torch.save", "open", "csv.DictReader", "os.join", "os.join", "os.join", "os.join", "row[].strip().split", "numpy.zeros", "enumerate", "list", "os.join", "os.join", "os.exists", "os.exists", "l.strip", "len", "any", "img_list.append", "label_list.append", "row[].strip"], "methods", ["None"], ["", "", "", "def", "generate_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Scan index file to create list of images and labels for each image. Also stores index files in index_cache_path\n        :return:\n        \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "with", "open", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "index_file", ")", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "csvf", "=", "csv", ".", "DictReader", "(", "fp", ")", "\n", "for", "row", "in", "csvf", ":", "\n", "                ", "if", "not", "row", "[", "'Projection'", "]", "==", "'L'", ":", "\n", "                    ", "continue", "\n", "", "labels", "=", "row", "[", "'Labels'", "]", ".", "strip", "(", "\"[]\"", ")", ".", "split", "(", "','", ")", "\n", "labels", "=", "[", "l", ".", "strip", "(", "\"\\\\ '\"", ")", "for", "l", "in", "labels", "]", "\n", "numlabel", "=", "np", ".", "zeros", "(", "len", "(", "SVCLASSES", ")", ")", "\n", "for", "i", ",", "svc", "in", "enumerate", "(", "SVCLASSES", ")", ":", "\n", "                    ", "for", "l", "in", "labels", ":", "\n", "                        ", "if", "svc", "in", "l", "or", "l", "in", "svc", ":", "\n", "                            ", "numlabel", "[", "i", "]", "=", "1", "\n", "", "", "", "numlabel", "=", "list", "(", "numlabel", ")", "\n", "if", "not", "any", "(", "numlabel", ")", ":", "\n", "                    ", "continue", "\n", "#if not any(l in SVCLASSES for l in labels):", "\n", "#    continue", "\n", "", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "row", "[", "'ImageID'", "]", ")", "\n", "if", "osp", ".", "exists", "(", "imp", ")", ":", "\n", "                    ", "img_list", ".", "append", "(", "row", "[", "'ImageID'", "]", ")", "\n", "#numlabel = [1 if cond in labels else 0 for cond in SVCLASSES]", "\n", "label_list", ".", "append", "(", "numlabel", ")", "\n", "", "", "", "label_tensors", "=", "torch", ".", "LongTensor", "(", "label_list", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "index_cache_path", ",", "exist_ok", "=", "True", ")", "\n", "torch", ".", "save", "(", "{", "'img_list'", ":", "img_list", ",", "'label_tensors'", ":", "label_tensors", ",", "'label_list'", ":", "label_list", "}", ",", "\n", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSV.__init__": [[367, 432], ["datasets.AbstractDomainInterface.__init__", "PADChest.PADChestSVBase", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "PADChest.PADChestSV.get_filtered_inds", "len", "int", "int", "print", "torchvision.Compose", "torchvision.Compose", "len", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/PADChest\"", ",", "leave_out_classes", "=", "(", ")", ",", "keep_in_classes", "=", "None", ",", "\n", "binary", "=", "False", ",", "downsample", "=", "None", ",", "expand_channels", "=", "False", ",", "test_length", "=", "None", ",", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param leave_out_classes: if a sample has ANY class from this list as positive, then it is removed from indices.\n        :param keep_in_classes: when specified, if a sample has None of the class from this list as positive, then it\n         is removed from indices..\n        \"\"\"", "\n", "self", ".", "name", "=", "\"PADChest\"", "\n", "super", "(", "PADChestSV", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "leave_out_classes", "=", "leave_out_classes", "\n", "self", ".", "keep_in_classes", "=", "keep_in_classes", "\n", "self", ".", "binary", "=", "binary", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "expand_channels", "=", "expand_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "img_dir", "=", "\"images-299\"", "\n", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "[", "\n", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "if", "downsample", "==", "64", ":", "\n", "                ", "img_dir", "=", "\"images-64\"", "\n", "", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_all", "=", "PADChestSVBase", "(", "cache_path", ",", "source_path", ",", "transforms", "=", "transform", ",", "binary", "=", "self", ".", "binary", ",", "\n", "download", "=", "download", ",", "extract", "=", "extract", ",", "image_dir", "=", "img_dir", ")", "\n", "self", ".", "ds_all", ".", "indices", "=", "torch", ".", "arange", "(", "len", "(", "self", ".", "ds_all", ")", ")", "\n", "\n", "self", ".", "useful_inds", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_all", ",", "shuffle", "=", "True", ")", "\n", "\n", "N", "=", "len", "(", "self", ".", "useful_inds", ")", "\n", "self", ".", "n_train", "=", "int", "(", "0.8", "*", "N", ")", "\n", "self", ".", "n_val", "=", "int", "(", "0.1", "*", "N", ")", "\n", "self", ".", "n_test", "=", "N", "-", "self", ".", "n_train", "-", "self", ".", "n_val", "\n", "\n", "self", ".", "train_ind", "=", "self", ".", "useful_inds", "[", ":", "self", ".", "n_train", "]", "\n", "self", ".", "val_ind", "=", "self", ".", "useful_inds", "[", "self", ".", "n_train", ":", "self", ".", "n_val", "+", "self", ".", "n_train", "]", "\n", "self", ".", "test_ind", "=", "self", ".", "useful_inds", "[", "self", ".", "n_val", "+", "self", ".", "n_train", ":", "]", "\n", "\n", "if", "test_length", "is", "not", "None", "and", "self", ".", "n_val", ">", "test_length", ":", "\n", "            ", "self", ".", "val_d1_ind", "=", "self", ".", "val_ind", "[", ":", "test_length", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "val_d1_ind", "=", "self", ".", "val_ind", "\n", "\n", "#self.ds_train, self.ds_valid, self.ds_test = data.random_split(self.ds_all, [self.n_train, self.n_val, self.n_test])", "\n", "\n", "", "'''if extract:\n            self.D1_train_ind = self.get_filtered_inds(self.ds_train, shuffle=True)\n            self.D1_valid_ind = self.get_filtered_inds(self.ds_valid, shuffle=True, max_l=self.max_l)\n            self.D1_test_ind = self.get_filtered_inds(self.ds_test, shuffle=True)\n\n            self.D2_valid_ind = self.get_filtered_inds(self.ds_valid, shuffle=True)\n            self.D2_test_ind = self.get_filtered_inds(self.ds_test, shuffle=True)'''", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSV.get_filtered_inds": [[434, 463], ["torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "enumerate", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "SVCLASSES.index", "torch.ones().int", "torch.ones().int", "torch.ones().int", "torch.ones().int", "torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "torch.zeros().int", "basedata.label_tensors[].int", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "SVCLASSES.index", "keep_inds.append", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "len", "len"], "methods", ["None"], ["", "def", "get_filtered_inds", "(", "self", ",", "basedata", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "if", "not", "(", "self", ".", "leave_out_classes", "==", "(", ")", "and", "self", ".", "keep_in_classes", "is", "None", ")", ":", "\n", "            ", "leave_out_mask_label", "=", "torch", ".", "zeros", "(", "N_CLASS_SV", ")", ".", "int", "(", ")", "\n", "for", "cla", "in", "self", ".", "leave_out_classes", ":", "\n", "                ", "ii", "=", "SVCLASSES", ".", "index", "(", "cla", ")", "\n", "leave_out_mask_label", "[", "ii", "]", "=", "1", "\n", "", "if", "self", ".", "keep_in_classes", "is", "None", ":", "\n", "                ", "keep_in_mask_label", "=", "torch", ".", "ones", "(", "N_CLASS_SV", ")", ".", "int", "(", ")", "\n", "", "else", ":", "\n", "                ", "keep_in_mask_label", "=", "torch", ".", "zeros", "(", "N_CLASS_SV", ")", ".", "int", "(", ")", "\n", "for", "cla", "in", "self", ".", "keep_in_classes", ":", "\n", "                    ", "ii", "=", "SVCLASSES", ".", "index", "(", "cla", ")", "\n", "keep_in_mask_label", "[", "ii", "]", "=", "1", "\n", "", "", "keep_inds", "=", "[", "]", "\n", "for", "seq_ind", ",", "base_ind", "in", "enumerate", "(", "basedata", ".", "indices", ")", ":", "\n", "                ", "label", "=", "basedata", ".", "label_tensors", "[", "base_ind", "]", ".", "int", "(", ")", "\n", "if", "torch", ".", "sum", "(", "label", "*", "leave_out_mask_label", ")", "==", "0", "and", "torch", ".", "sum", "(", "label", "*", "keep_in_mask_label", ")", ">", "0", ":", "\n", "                    ", "keep_inds", ".", "append", "(", "seq_ind", ")", "\n", "", "else", ":", "\n", "                    ", "pass", "\n", "", "", "output_inds", "=", "torch", ".", "Tensor", "(", "keep_inds", ")", ".", "long", "(", ")", "\n", "", "else", ":", "\n", "            ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "long", "(", ")", "\n", "", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "#if max_l is not None:", "\n", "#    if len(output_inds) >max_l:", "\n", "#        output_inds = output_inds[:max_l]", "\n", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSV.get_D1_train": [[464, 466], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_all", ",", "self", ".", "train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSV.get_D1_valid": [[466, 468], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_all", ",", "self", ".", "val_d1_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSV.get_D1_test": [[468, 470], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_all", ",", "self", ".", "test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSV.get_D2_valid": [[471, 474], ["PADChest.PADChestSV.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_all", ",", "self", ".", "val_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSV.get_D2_test": [[475, 478], ["PADChest.PADChestSV.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_all", ",", "self", ".", "test_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestSV.conformity_transform": [[479, 496], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "224", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "if", "self", ".", "expand_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "#transforms.Grayscale(),", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestBinaryTrainSplit.__init__": [[500, 504], ["kwargs.update", "PADChest.PADChestSV.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "update", "(", "{", "'binary'", ":", "True", ",", "'test_length'", ":", "5000", ",", "\n", "'leave_out_classes'", ":", "[", "'cardiomegaly'", ",", "'pneumothorax'", ",", "'nodule'", ",", "'mass'", "]", "}", ")", "\n", "super", "(", "PADChestBinaryTrainSplit", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestBinaryValSplit.__init__": [[507, 511], ["kwargs.update", "PADChest.PADChestSV.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "update", "(", "{", "'binary'", ":", "True", ",", "'test_length'", ":", "5000", ",", "\n", "'keep_in_classes'", ":", "[", "'cardiomegaly'", ",", "]", "}", ")", "\n", "super", "(", "PADChestBinaryValSplit", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.PADChestBinaryTestSplit.__init__": [[514, 518], ["kwargs.update", "PADChest.PADChestSV.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", ".", "update", "(", "{", "'binary'", ":", "True", ",", "'test_length'", ":", "5000", ",", "\n", "'keep_in_classes'", ":", "[", "'pneumothorax'", ",", "'nodule'", ",", "'mass'", "]", "}", ")", "\n", "super", "(", "PADChestBinaryTestSplit", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.to_tensor": [[19, 21], ["torch.stack", "torch.stack", "torchvision.ToTensor"], "function", ["None"], ["def", "to_tensor", "(", "crops", ")", ":", "\n", "    ", "return", "torch", ".", "stack", "(", "[", "transforms", ".", "ToTensor", "(", ")", "(", "crop", ")", "for", "crop", "in", "crops", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PADChest.group_normalize": [[22, 25], ["torch.stack", "torch.stack", "torchvision.Normalize"], "function", ["None"], ["", "def", "group_normalize", "(", "crops", ")", ":", "\n", "    ", "return", "torch", ".", "stack", "(", "[", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "(", "crop", ")", "for", "crop", "in", "crops", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNISTParent.__init__": [[40, 58], ["os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "notMNIST.NotMNISTParent.download", "notMNIST.NotMNISTParent._check_exists", "RuntimeError", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNISTParent.download", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNISTParent._check_exists"], ["def", "__init__", "(", "self", ",", "root", ",", "train", "=", "True", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "download", "=", "False", ")", ":", "\n", "        ", "assert", "train", "==", "True", ",", "'There is no separate test file. Must initialize in train mode'", "\n", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "train", "=", "train", "# training set or test set", "\n", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "_check_exists", "(", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Dataset not found.'", "+", "\n", "' You can use download=True to download it'", ")", "\n", "\n", "", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "train_data", ",", "self", ".", "train_labels", "=", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNISTParent.__getitem__": [[59, 81], ["PIL.Image.fromarray", "notMNIST.NotMNISTParent.numpy", "notMNIST.NotMNISTParent.transform", "notMNIST.NotMNISTParent.target_transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (image, target) where target is index of the target class.\n        \"\"\"", "\n", "if", "self", ".", "train", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "\n", "# doing this so that it is consistent with all other datasets", "\n", "# to return a PIL Image", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "numpy", "(", ")", ",", "mode", "=", "'L'", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNISTParent.__len__": [[82, 85], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "train_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNISTParent._check_exists": [[86, 88], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "", "def", "_check_exists", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNISTParent.download": [[89, 133], ["notMNIST.NotMNISTParent._check_exists", "print", "sio.loadmat", "torch.ByteTensor().permute", "torch.ByteTensor().permute", "torch.ByteTensor().permute", "torch.ByteTensor().permute", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "print", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "print", "urllib.request.urlopen", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "url.rpartition", "open", "f.write", "urllib.request.urlopen.read"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNISTParent._check_exists"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "\"\"\"Download the MNIST data if it doesn't exist in processed_folder already.\"\"\"", "\n", "from", "six", ".", "moves", "import", "urllib", "\n", "import", "gzip", "\n", "\n", "if", "self", ".", "_check_exists", "(", ")", ":", "\n", "            ", "return", "\n", "\n", "# download files", "\n", "", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ")", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "==", "errno", ".", "EEXIST", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "\n", "\n", "", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'notMNIST_small.mat'", ")", ")", ":", "\n", "            ", "for", "url", "in", "self", ".", "urls", ":", "\n", "                ", "print", "(", "'Downloading '", "+", "url", ")", "\n", "data", "=", "urllib", ".", "request", ".", "urlopen", "(", "url", ")", "\n", "filename", "=", "url", ".", "rpartition", "(", "'/'", ")", "[", "2", "]", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "filename", ")", "\n", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "f", ":", "\n", "                    ", "f", ".", "write", "(", "data", ".", "read", "(", ")", ")", "\n", "\n", "# process and save as torch files", "\n", "", "", "", "print", "(", "'Processing...'", ")", "\n", "import", "scipy", ".", "io", "as", "sio", "\n", "\n", "data", "=", "sio", ".", "loadmat", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'notMNIST_small.mat'", ")", ")", "\n", "images", "=", "torch", ".", "ByteTensor", "(", "data", "[", "'images'", "]", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "# The data is stored as HxWxN, need to permute!", "\n", "labels", "=", "torch", ".", "LongTensor", "(", "data", "[", "'labels'", "]", ")", "\n", "\n", "data_set", "=", "(", "\n", "images", ",", "\n", "labels", ",", "\n", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "torch", ".", "save", "(", "data_set", ",", "f", ")", "\n", "\n", "", "print", "(", "'Done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNIST.__init__": [[141, 162], ["datasets.AbstractDomainInterface.__init__", "torchvision.Compose", "notMNIST.NotMNISTParent", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "torch.load", "torch.load", "torch.load", "torch.load", "print", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.save", "torch.save", "torch.save", "torch.save", "torchvision.ToTensor", "termcolor.colored"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "'./workspace/datasets/notmnist'", ",", "download", "=", "False", ",", "extract", "=", "False", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "NotMNIST", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "im_transformer", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "#root_path       = './workspace/datasets/notmnist'", "\n", "self", ".", "ds_train", "=", "NotMNISTParent", "(", "root_path", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "\n", "index_file", "=", "os", ".", "path", ".", "join", "(", "'./datasets/permutation_files/'", ",", "'notmnist.pth'", ")", "\n", "all_indices", "=", "None", "\n", "if", "os", ".", "path", ".", "isfile", "(", "index_file", ")", ":", "\n", "            ", "all_indices", "=", "torch", ".", "load", "(", "index_file", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "colored", "(", "'GENERATING PERMUTATION FOR NOT MNIST'", ",", "'red'", ")", ")", "\n", "all_indices", "=", "torch", ".", "randperm", "(", "18724", ")", "\n", "torch", ".", "save", "(", "all_indices", ",", "index_file", ")", "\n", "\n", "", "self", ".", "D2_valid_ind", "=", "all_indices", "[", "0", ":", "9362", "]", "\n", "self", ".", "D2_test_ind", "=", "all_indices", "[", "9362", ":", "18724", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNIST.get_D2_valid": [[163, 166], ["notMNIST.NotMNIST.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D2_valid_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.notMNIST.NotMNIST.get_D2_test": [[167, 170], ["notMNIST.NotMNIST.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D2_test_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMBase.__init__": [[16, 34], ["torch.Dataset.__init__", "torchvision.ToTensor", "PCAM.PCAMBase.extract", "numpy.load", "numpy.load", "os.join", "os.join", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract"], ["    ", "def", "__init__", "(", "self", ",", "source_dir", ",", "split", ",", "imsize", "=", "96", ",", "transforms", "=", "None", ",", "\n", "to_gray", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "PCAMBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "to_gray", "=", "to_gray", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "", "assert", "split", "in", "[", "\"train\"", ",", "\"valid\"", ",", "\"test\"", "]", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "#self.h5x = h5py.File(osp.join(self.source_dir, \"camelyonpatch_level_2_split_%s_x.h5\" % self.split), mode='r', swmr=True)", "\n", "#self.h5y = h5py.File(osp.join(self.source_dir, \"camelyonpatch_level_2_split_%s_y.h5\" % self.split), mode='r', swmr=True)", "\n", "self", ".", "x", "=", "np", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "\"camelyonpatch_level_2_split_%s_x.npy\"", "%", "self", ".", "split", ")", ")", "\n", "self", ".", "label_tensors", "=", "np", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "\"camelyonpatch_level_2_split_%s_y.npy\"", "%", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMBase.__len__": [[35, 37], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "label_tensors", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMBase.__getitem__": [[38, 46], ["torch.LongTensor().squeeze", "torch.LongTensor().squeeze", "torch.LongTensor().squeeze", "torch.LongTensor().squeeze", "PCAM.PCAMBase.transforms", "PCAM.PCAMBase.transforms", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torchvision.ToPILImage", "torchvision.ToPILImage"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "x", "=", "self", ".", "x", "[", "item", "]", "\n", "label", "=", "torch", ".", "LongTensor", "(", "self", ".", "label_tensors", "[", "item", "]", ")", ".", "squeeze", "(", ")", "\n", "if", "self", ".", "to_gray", ":", "\n", "            ", "img", "=", "self", ".", "transforms", "(", "transforms", ".", "ToPILImage", "(", ")", "(", "x", ")", ".", "convert", "(", "'L'", ")", ")", "\n", "", "else", ":", "\n", "            ", "img", "=", "self", ".", "transforms", "(", "transforms", ".", "ToPILImage", "(", ")", "(", "x", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMBase.extract": [[47, 62], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "gzip.open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "shutil.copyfileobj", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "tar_split.split"], "methods", ["None"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "\"camelyonpatch_level_2_split_test_x.npy\"", ")", ")", ":", "\n", "            ", "return", "\n", "", "import", "shutil", "\n", "tarsplits_list", "=", "[", "\"camelyonpatch_level_2_split_test_x.h5.gz\"", ",", "\n", "\"camelyonpatch_level_2_split_train_x.h5.gz\"", ",", "\n", "\"camelyonpatch_level_2_split_valid_x.h5.gz\"", ",", "\n", "\"camelyonpatch_level_2_split_train_y.h5.gz\"", ",", "\n", "\"camelyonpatch_level_2_split_valid_y.h5.gz\"", ",", "\n", "\"camelyonpatch_level_2_split_test_y.h5.gz\"", ",", "\n", "]", "\n", "for", "tar_split", "in", "tarsplits_list", ":", "\n", "            ", "with", "gzip", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "tar_split", ")", ",", "'rb'", ")", "as", "f_in", ":", "\n", "                ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "tar_split", ".", "split", "(", "\".\"", ")", "[", "0", "]", ")", ",", "'wb'", ")", "as", "f_out", ":", "\n", "                    ", "shutil", ".", "copyfileobj", "(", "f_in", ",", "f_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAM.__init__": [[67, 118], ["datasets.AbstractDomainInterface.__init__", "PCAM.PCAMBase", "PCAM.PCAMBase", "PCAM.PCAMBase", "print", "torchvision.Compose", "torchvision.Compose", "PCAM.PCAM.get_filtered_inds", "PCAM.PCAM.get_filtered_inds", "PCAM.PCAM.get_filtered_inds", "PCAM.PCAM.get_filtered_inds", "PCAM.PCAM.get_filtered_inds", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Grayscale", "torchvision.Grayscale"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/pcam\"", ",", "downsample", "=", "None", ",", "shrink_channels", "=", "False", ",", "test_length", "=", "None", ",", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param leave_out_classes: if a sample has ANY class from this list as positive, then it is removed from indices.\n        :param keep_in_classes: when specified, if a sample has None of the class from this list as positive, then it\n         is removed from indices..\n        \"\"\"", "\n", "self", ".", "name", "=", "\"PCAM\"", "\n", "super", "(", "PCAM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "shrink_channels", "=", "shrink_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform_list", "+=", "[", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "]", "\n", "if", "self", ".", "shrink_channels", ":", "\n", "                ", "transform_list", "+=", "[", "transforms", ".", "Grayscale", "(", ")", ",", "]", "\n", "#    else:", "\n", "#    transform_list += [transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),]", "\n", "", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform_list", "+=", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "]", "\n", "if", "self", ".", "shrink_channels", ":", "\n", "                ", "transform_list", "+=", "[", "transforms", ".", "Grayscale", "(", ")", ",", "]", "\n", "#else:", "\n", "#    transform_list += [transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),]", "\n", "", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_train", "=", "PCAMBase", "(", "source_path", ",", "\"train\"", ",", "imsize", "=", "self", ".", "image_size", "[", "0", "]", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "PCAMBase", "(", "source_path", ",", "\"valid\"", ",", "imsize", "=", "self", ".", "image_size", "[", "0", "]", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_test", "=", "PCAMBase", "(", "source_path", ",", "\"test\"", ",", "imsize", "=", "self", ".", "image_size", "[", "0", "]", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAM.get_filtered_inds": [[120, 128], ["torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "PCAMBase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAM.get_D1_train": [[129, 131], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAM.get_D1_valid": [[132, 134], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAM.get_D1_test": [[135, 137], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAM.get_D2_valid": [[138, 142], ["PCAM.PCAM.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAM.get_D2_test": [[143, 147], ["PCAM.PCAM.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAM.conformity_transform": [[148, 163], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "self", ".", "image_size", "[", "0", "]", "\n", "if", "self", ".", "shrink_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMResize.__init__": [[167, 187], ["datasets.AbstractDomainInterface.__init__", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "source_data", ",", "downsample", ")", ":", "\n", "        ", "super", "(", "PCAMResize", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "source_data", ".", "name", "\n", "if", "source_data", ".", "shrink_channels", ":", "\n", "            ", "transform_list", "=", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "]", "\n", "\n", "\n", "", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "self", ".", "source_data", "=", "source_data", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMResize.get_D1_train": [[188, 190], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "source_data", ".", "ds_train", ",", "self", ".", "source_data", ".", "D1_train_ind", ",", "transform", "=", "self", ".", "transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMResize.get_D1_valid": [[191, 193], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "source_data", ".", "ds_valid", ",", "self", ".", "source_data", ".", "D1_valid_ind", ",", "label", "=", "0", ",", "transform", "=", "self", ".", "transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMResize.get_D1_test": [[194, 196], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "source_data", ".", "ds_test", ",", "self", ".", "source_data", ".", "D1_test_ind", ",", "label", "=", "0", ",", "transform", "=", "self", ".", "transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMResize.get_D2_valid": [[197, 201], ["PCAM.PCAMResize.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "source_data", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "source_data", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMResize.get_D2_test": [[202, 206], ["PCAM.PCAMResize.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "source_data", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "source_data", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMResize.conformity_transform": [[207, 222], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "self", ".", "image_size", "[", "0", "]", "\n", "if", "self", ".", "source_data", ".", "shrink_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.PCAM.PCAMGray.__init__": [[228, 235], ["PCAM.PCAM.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/pcam\"", ",", "downsample", "=", "None", ",", "shrink_channels", "=", "False", ",", "test_length", "=", "None", ",", "\n", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "self", ".", "name", "=", "\"PCAMGray\"", "\n", "shrink_channels", "=", "True", "\n", "super", "(", "PCAMGray", ",", "self", ")", ".", "__init__", "(", "root_path", ",", "downsample", ",", "shrink_channels", ",", "test_length", ",", "download", ",", "extract", ",", "\n", "doubledownsample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIRBase.__init__": [[16, 50], ["torch.Dataset.__init__", "torchvision.Compose", "numpy.load", "numpy.arange", "torch.load", "torch.load", "torch.load", "torch.load", "os.join", "os.join", "len", "open", "pickle.load", "numpy.stack", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "ANHIR.ANHIRBase.generate_split", "os.join", "os.join", "torchvision.Resize", "torchvision.ToTensor", "os.join", "os.join", "numpy.zeros", "numeric_labels.append", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "CLASSES.index"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_split"], ["    ", "def", "__init__", "(", "self", ",", "source_dir", ",", "split", ",", "image_path", "=", "\"images_96.npy\"", ",", "label_path", "=", "\"labels.pkl\"", ",", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "\n", "to_gray", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "ANHIRBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "index_cache_path", "=", "source_dir", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "image_path", "=", "image_path", "\n", "self", ".", "to_gray", "=", "to_gray", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "", "assert", "split", "in", "[", "\"train\"", ",", "\"valid\"", ",", "\"test\"", "]", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "data", "=", "np", ".", "load", "(", "osp", ".", "join", "(", "source_dir", ",", "image_path", ")", ")", "\n", "self", ".", "img_list", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", "\n", "with", "open", "(", "osp", ".", "join", "(", "source_dir", ",", "label_path", ")", ",", "\"rb\"", ")", "as", "fp", ":", "\n", "                ", "str_labels", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "numeric_labels", "=", "[", "]", "\n", "for", "l", "in", "str_labels", ":", "\n", "                    ", "label", "=", "np", ".", "zeros", "(", "5", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "label", "[", "CLASSES", ".", "index", "(", "l", ")", "]", "=", "1", "\n", "numeric_labels", ".", "append", "(", "label", ")", "\n", "", "labels", "=", "np", ".", "stack", "(", "numeric_labels", ")", "\n", "self", ".", "labels", "=", "torch", ".", "LongTensor", "(", "labels", ")", "\n", "\n", "", "if", "not", "(", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'valid_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'train_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'test_split.pt'", ")", ")", ")", ":", "\n", "                ", "self", ".", "generate_split", "(", ")", "\n", "\n", "", "self", ".", "split_inds", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"%s_split.pt\"", "%", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIRBase.__len__": [[51, 53], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "split_inds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIRBase.__getitem__": [[54, 63], ["PIL.Image.fromarray", "ANHIR.ANHIRBase.transforms", "ANHIR.ANHIRBase.transforms", "ANHIR.ANHIRBase.convert", "ANHIR.ANHIRBase.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "index", "=", "self", ".", "split_inds", "[", "item", "]", "\n", "img", "=", "self", ".", "data", "[", "index", "]", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "if", "not", "self", ".", "to_gray", ":", "\n", "            ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "else", ":", "\n", "            ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'L'", ")", ")", "\n", "", "return", "img", ",", "self", ".", "labels", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIRBase.generate_split": [[64, 76], ["len", "int", "int", "numpy.arange", "numpy.arange", "numpy.arange", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["None"], ["", "def", "generate_split", "(", "self", ")", ":", "\n", "        ", "n_total", "=", "len", "(", "self", ".", "img_list", ")", "\n", "train_num", "=", "int", "(", "0.6", "*", "n_total", ")", "\n", "val_num", "=", "int", "(", "0.7", "*", "n_total", ")", "\n", "train_inds", "=", "np", ".", "arange", "(", "train_num", ")", "\n", "val_inds", "=", "np", ".", "arange", "(", "start", "=", "train_num", ",", "stop", "=", "val_num", ")", "\n", "test_inds", "=", "np", ".", "arange", "(", "start", "=", "val_num", ",", "stop", "=", "n_total", ")", "\n", "\n", "torch", ".", "save", "(", "train_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"train_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "val_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"valid_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "test_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"test_split.pt\"", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIR.__init__": [[80, 131], ["datasets.AbstractDomainInterface.__init__", "ANHIR.ANHIRBase", "ANHIR.ANHIRBase", "ANHIR.ANHIRBase", "print", "torchvision.Compose", "torchvision.Compose", "ANHIR.ANHIR.get_filtered_inds", "ANHIR.ANHIR.get_filtered_inds", "ANHIR.ANHIR.get_filtered_inds", "ANHIR.ANHIR.get_filtered_inds", "ANHIR.ANHIR.get_filtered_inds", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Grayscale", "torchvision.Grayscale"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/ANHIR\"", ",", "downsample", "=", "None", ",", "shrink_channels", "=", "False", ",", "test_length", "=", "None", ",", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param leave_out_classes: if a sample has ANY class from this list as positive, then it is removed from indices.\n        :param keep_in_classes: when specified, if a sample has None of the class from this list as positive, then it\n         is removed from indices..\n        \"\"\"", "\n", "self", ".", "name", "=", "\"ANHIR\"", "\n", "super", "(", "ANHIR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "shrink_channels", "=", "shrink_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform_list", "+=", "[", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "]", "\n", "if", "self", ".", "shrink_channels", ":", "\n", "                ", "transform_list", "+=", "[", "transforms", ".", "Grayscale", "(", ")", ",", "]", "\n", "#else:", "\n", "#    transform_list += [transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),]", "\n", "", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform_list", "+=", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "]", "\n", "if", "self", ".", "shrink_channels", ":", "\n", "                ", "transform_list", "+=", "[", "transforms", ".", "Grayscale", "(", ")", ",", "]", "\n", "#else:", "\n", "#    transform_list += [transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),]", "\n", "", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_train", "=", "ANHIRBase", "(", "source_path", ",", "\"train\"", ",", "imsize", "=", "self", ".", "image_size", "[", "0", "]", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "ANHIRBase", "(", "source_path", ",", "\"valid\"", ",", "imsize", "=", "self", ".", "image_size", "[", "0", "]", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_test", "=", "ANHIRBase", "(", "source_path", ",", "\"test\"", ",", "imsize", "=", "self", ".", "image_size", "[", "0", "]", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIR.get_filtered_inds": [[133, 141], ["torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "ANHIRBase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIR.get_D1_train": [[142, 144], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIR.get_D1_valid": [[145, 147], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIR.get_D1_test": [[148, 150], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIR.get_D2_valid": [[151, 155], ["ANHIR.ANHIR.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIR.get_D2_test": [[156, 160], ["ANHIR.ANHIR.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.ANHIR.ANHIR.conformity_transform": [[161, 176], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "self", ".", "image_size", "[", "0", "]", "\n", "if", "self", ".", "shrink_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.FashionMNIST.FashionMNIST.__init__": [[14, 33], ["datasets.AbstractDomainInterface.__init__", "torchvision.Compose", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.ToTensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "root_path", "=", "'./workspace/datasets/fmnist'", ",", "download", "=", "False", ",", "extract", "=", "False", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "FashionMNIST", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "im_transformer", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "D1_train_ind", "=", "torch", ".", "arange", "(", "0", ",", "50000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_valid_ind", "=", "torch", ".", "arange", "(", "50000", ",", "60000", ")", ".", "int", "(", ")", "\n", "self", ".", "D1_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "10000", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "torch", ".", "arange", "(", "0", ",", "60000", ")", ".", "int", "(", ")", "\n", "self", ".", "D2_test_ind", "=", "torch", ".", "arange", "(", "0", ",", "10000", ")", ".", "int", "(", ")", "\n", "\n", "self", ".", "ds_train", "=", "datasets", ".", "FashionMNIST", "(", "root_path", ",", "\n", "train", "=", "True", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "self", ".", "ds_test", "=", "datasets", ".", "FashionMNIST", "(", "root_path", ",", "\n", "train", "=", "False", ",", "\n", "transform", "=", "im_transformer", ",", "\n", "download", "=", "download", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.FashionMNIST.FashionMNIST.get_D1_train": [[34, 36], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "", "def", "get_D1_valid", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.FashionMNIST.FashionMNIST.get_D1_valid": [[36, 38], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "", "def", "get_D1_test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.FashionMNIST.FashionMNIST.get_D1_test": [[38, 40], ["torchvision.datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.FashionMNIST.FashionMNIST.get_D2_valid": [[41, 44], ["FashionMNIST.FashionMNIST.is_compatible", "torchvision.datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D2_valid_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.FashionMNIST.FashionMNIST.get_D2_test": [[45, 48], ["FashionMNIST.FashionMNIST.is_compatible", "torchvision.datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D2_test_ind", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.FashionMNIST.FashionMNIST.conformity_transform": [[49, 54], ["torchvision.Compose", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.Grayscale", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "return", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "28", ",", "28", ")", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.MalariaBase.__init__": [[15, 42], ["torch.Dataset.__init__", "torchvision.Compose", "malaria.MalariaBase.extract", "malaria.MalariaBase.generate_index", "torch.load", "torch.load", "torch.load", "torch.load", "malaria.MalariaBase.generate_split", "os.join", "os.join", "torchvision.Resize", "torchvision.ToTensor", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_index", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_split"], ["    ", "def", "__init__", "(", "self", ",", "index_cache_path", ",", "source_dir", ",", "split", ",", "image_dir", "=", "\"cell_images\"", ",", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "\n", "to_gray", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "MalariaBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "index_cache_path", "=", "index_cache_path", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "to_gray", "=", "to_gray", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "", "assert", "split", "in", "[", "\"train\"", ",", "\"val\"", ",", "\"test\"", "]", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "cache_file", "=", "self", ".", "generate_index", "(", ")", "\n", "self", ".", "img_list", "=", "cache_file", "[", "'img_list'", "]", "\n", "self", ".", "label_tensors", "=", "cache_file", "[", "'label_tensors'", "]", "\n", "self", ".", "split_inds", "=", "cache_file", "[", "\"split_inds\"", "]", "\n", "if", "not", "(", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'val_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'train_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'test_split.pt'", ")", ")", ")", ":", "\n", "                ", "self", ".", "generate_split", "(", ")", "\n", "\n", "", "self", ".", "split_inds", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"%s_split.pt\"", "%", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.MalariaBase.__len__": [[43, 45], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "split_inds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.MalariaBase.__getitem__": [[46, 59], ["os.join", "os.join", "open", "PIL.Image.open", "malaria.MalariaBase.transforms", "malaria.MalariaBase.transforms", "malaria.MalariaBase.convert", "malaria.MalariaBase.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "index", "=", "self", ".", "split_inds", "[", "item", "]", "\n", "img_name", "=", "self", ".", "img_list", "[", "index", "]", "\n", "label", "=", "self", ".", "label_tensors", "[", "index", "]", "\n", "\n", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "img_name", ")", "\n", "with", "open", "(", "imp", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "                ", "if", "not", "self", ".", "to_gray", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "else", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'L'", ")", ")", "\n", "", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.MalariaBase.extract": [[60, 66], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "zipfile.ZipFile", "zipObj.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "return", "\n", "", "from", "zipfile", "import", "ZipFile", "\n", "with", "ZipFile", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "'cell_images.zip'", ")", ",", "'r'", ")", "as", "zipObj", ":", "\n", "            ", "zipObj", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.MalariaBase.generate_index": [[67, 93], ["len", "os.walk", "os.walk", "os.walk", "os.walk", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "os.path.join().split", "os.path.join().split", "os.path.join().split", "os.path.join().split", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "label_list.append", "dirpath.split", "len", "os.join", "os.join", "img_list.append", "img_list.append", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "", "def", "generate_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Scan index file to create list of images and labels for each image\n        :return:\n        \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "if", "os", ".", "name", "==", "\"posix\"", ":", "\n", "            ", "split_char", "=", "\"/\"", "\n", "", "else", ":", "\n", "            ", "split_char", "=", "\"\\\\\"", "\n", "", "dir_level", "=", "len", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ".", "split", "(", "split_char", ")", ")", "\n", "for", "(", "dirpath", ",", "dirnames", ",", "filenames", ")", "in", "os", ".", "walk", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "for", "filename", "in", "filenames", ":", "\n", "                ", "if", "(", "'.jpg'", "in", "filename", ")", "or", "(", "'.png'", "in", "filename", ")", ":", "\n", "                    ", "dir_strs", "=", "dirpath", ".", "split", "(", "split_char", ")", "[", "dir_level", ":", "]", "\n", "if", "len", "(", "dir_strs", ")", ">", "0", ":", "\n", "                        ", "dir_strs", "=", "osp", ".", "join", "(", "*", "dir_strs", ")", "\n", "img_list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dir_strs", ",", "filename", ")", ")", "\n", "", "else", ":", "\n", "                        ", "img_list", ".", "append", "(", "filename", ")", "\n", "", "label_list", ".", "append", "(", "1", ")", "\n", "\n", "", "", "", "label_tensors", "=", "torch", ".", "LongTensor", "(", "label_list", ")", "\n", "return", "{", "'img_list'", ":", "img_list", ",", "'label_tensors'", ":", "label_tensors", ",", "'label_list'", ":", "label_list", ",", "\n", "'split_inds'", ":", "torch", ".", "arange", "(", "len", "(", "img_list", ")", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.MalariaBase.generate_split": [[95, 107], ["len", "int", "int", "numpy.arange", "numpy.arange", "numpy.arange", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["None"], ["", "def", "generate_split", "(", "self", ")", ":", "\n", "        ", "n_total", "=", "len", "(", "self", ".", "img_list", ")", "\n", "train_num", "=", "int", "(", "0.6", "*", "n_total", ")", "\n", "val_num", "=", "int", "(", "0.7", "*", "n_total", ")", "\n", "train_inds", "=", "np", ".", "arange", "(", "train_num", ")", "\n", "val_inds", "=", "np", ".", "arange", "(", "start", "=", "train_num", ",", "stop", "=", "val_num", ")", "\n", "test_inds", "=", "np", ".", "arange", "(", "start", "=", "val_num", ",", "stop", "=", "n_total", ")", "\n", "\n", "torch", ".", "save", "(", "train_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"train_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "val_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"val_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "test_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"test_split.pt\"", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.Malaria.__init__": [[111, 160], ["datasets.AbstractDomainInterface.__init__", "malaria.MalariaBase", "malaria.MalariaBase", "malaria.MalariaBase", "print", "torchvision.Compose", "torchvision.Compose", "malaria.Malaria.get_filtered_inds", "malaria.Malaria.get_filtered_inds", "malaria.Malaria.get_filtered_inds", "malaria.Malaria.get_filtered_inds", "malaria.Malaria.get_filtered_inds", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/malaria\"", ",", "downsample", "=", "None", ",", "shrink_channels", "=", "False", ",", "test_length", "=", "None", ",", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param leave_out_classes: if a sample has ANY class from this list as positive, then it is removed from indices.\n        :param keep_in_classes: when specified, if a sample has None of the class from this list as positive, then it\n         is removed from indices..\n        \"\"\"", "\n", "self", ".", "name", "=", "\"Malaria\"", "\n", "super", "(", "Malaria", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "shrink_channels", "=", "shrink_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Normalize(mean=[0.485, 0.456, 0.406],", "\n", "#                     std=[0.229, 0.224, 0.225]),", "\n", "]", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Normalize(mean=[0.485, 0.456, 0.406],", "\n", "#                     std=[0.229, 0.224, 0.225]),", "\n", "]", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_train", "=", "MalariaBase", "(", "cache_path", ",", "source_path", ",", "\"train\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "MalariaBase", "(", "cache_path", ",", "source_path", ",", "\"val\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_test", "=", "MalariaBase", "(", "cache_path", ",", "source_path", ",", "\"test\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.Malaria.get_filtered_inds": [[162, 170], ["torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "MalariaBase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.Malaria.get_D1_train": [[171, 173], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.Malaria.get_D1_valid": [[174, 176], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.Malaria.get_D1_test": [[177, 179], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.Malaria.get_D2_valid": [[180, 184], ["malaria.Malaria.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.Malaria.get_D2_test": [[185, 189], ["malaria.Malaria.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.malaria.Malaria.conformity_transform": [[190, 207], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Lambda", "x.repeat"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "224", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "if", "self", ".", "shrink_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Lambda", "(", "lambda", "x", ":", "x", ".", "repeat", "(", "3", ",", "1", ",", "1", ")", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.__init__": [[15, 47], ["torch.Dataset.__init__", "torchvision.Compose", "DRD.DRDBase.extract", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.exists", "os.exists", "DRD.DRDBase.generate_index", "os.join", "os.join", "DRD.DRDBase.generate_split", "os.join", "os.join", "torchvision.Resize", "torchvision.ToTensor", "os.join", "os.join", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.exists", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_index", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_split"], ["    ", "def", "__init__", "(", "self", ",", "index_cache_path", ",", "source_dir", ",", "split", ",", "index_file", "=", "\"trainLabels.csv\"", ",", "image_dir", "=", "\"images_224\"", ",", "\n", "imsize", "=", "224", ",", "transforms", "=", "None", ",", "to_gray", "=", "False", ",", "download", "=", "False", ",", "extract", "=", "True", ")", ":", "\n", "        ", "super", "(", "DRDBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "index_cache_path", "=", "index_cache_path", "\n", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "cache_file", "=", "\"DRD.pkl\"", "\n", "self", ".", "index_file", "=", "index_file", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "imsize", "=", "imsize", "\n", "self", ".", "to_gray", "=", "to_gray", "\n", "if", "transforms", "is", "None", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "imsize", ",", "imsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transforms", "=", "transforms", "\n", "", "assert", "split", "in", "[", "\"train\"", ",", "\"val\"", ",", "\"test\"", "]", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "extract", "(", ")", "\n", "if", "not", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", ":", "\n", "                ", "self", ".", "generate_index", "(", ")", "\n", "", "cache_file", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", "\n", "self", ".", "img_list", "=", "cache_file", "[", "'img_list'", "]", "\n", "self", ".", "label_tensors", "=", "cache_file", "[", "'label_tensors'", "]", "\n", "\n", "if", "not", "(", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'val_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'train_split.pt'", ")", ")", "\n", "and", "osp", ".", "exists", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "'test_split.pt'", ")", ")", ")", ":", "\n", "                ", "self", ".", "generate_split", "(", ")", "\n", "\n", "", "self", ".", "split_inds", "=", "torch", ".", "load", "(", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"%s_split.pt\"", "%", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.__len__": [[48, 50], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "split_inds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.__getitem__": [[51, 63], ["os.join", "os.join", "open", "PIL.Image.open", "DRD.DRDBase.transforms", "DRD.DRDBase.transforms", "DRD.DRDBase.convert", "DRD.DRDBase.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "index", "=", "self", ".", "split_inds", "[", "item", "]", "\n", "img_name", "=", "self", ".", "img_list", "[", "index", "]", "\n", "label", "=", "self", ".", "label_tensors", "[", "index", "]", "\n", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "img_name", ")", "\n", "with", "open", "(", "imp", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "                ", "if", "self", ".", "to_gray", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'L'", ")", ")", "\n", "", "else", ":", "\n", "                    ", "img", "=", "self", ".", "transforms", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "", "", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.extract": [[64, 73], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "tarfile.open", "tar.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "extract", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", ":", "\n", "            ", "return", "\n", "", "import", "tarfile", "\n", "tarsplits_list", "=", "[", "\"images_224.tar.gz\"", ",", "\n", "]", "\n", "for", "tar_split", "in", "tarsplits_list", ":", "\n", "            ", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "tar_split", ")", ")", "as", "tar", ":", "\n", "                ", "tar", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_index": [[75, 96], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "torch.save", "torch.save", "torch.save", "torch.save", "open", "csv.DictReader", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.exists", "os.exists", "img_list.append", "label_list.append", "int"], "methods", ["None"], ["", "", "", "def", "generate_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Scan index file to create list of images and labels for each image. Also stores index files in index_cache_path\n        :return:\n        \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "with", "open", "(", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "index_file", ")", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "csvf", "=", "csv", ".", "DictReader", "(", "fp", ")", "\n", "for", "row", "in", "csvf", ":", "\n", "                ", "imp", "=", "osp", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "image_dir", ",", "row", "[", "'image'", "]", "+", "\".jpeg\"", ")", "\n", "if", "osp", ".", "exists", "(", "imp", ")", ":", "\n", "                    ", "img_list", ".", "append", "(", "row", "[", "'image'", "]", "+", "\".jpeg\"", ")", "\n", "\n", "label", "=", "0", "if", "int", "(", "row", "[", "'level'", "]", ")", ">", "0", "else", "1", "\n", "label_list", ".", "append", "(", "label", ")", "\n", "", "", "", "label_tensors", "=", "torch", ".", "LongTensor", "(", "label_list", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "index_cache_path", ",", "exist_ok", "=", "True", ")", "\n", "torch", ".", "save", "(", "{", "'img_list'", ":", "img_list", ",", "'label_tensors'", ":", "label_tensors", ",", "'label_list'", ":", "label_list", "}", ",", "\n", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "self", ".", "cache_file", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRDBase.generate_split": [[97, 109], ["len", "int", "int", "numpy.arange", "numpy.arange", "numpy.arange", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join"], "methods", ["None"], ["", "def", "generate_split", "(", "self", ")", ":", "\n", "        ", "n_total", "=", "len", "(", "self", ".", "img_list", ")", "\n", "train_num", "=", "int", "(", "0.7", "*", "n_total", ")", "\n", "val_num", "=", "int", "(", "0.8", "*", "n_total", ")", "\n", "train_inds", "=", "np", ".", "arange", "(", "train_num", ")", "\n", "val_inds", "=", "np", ".", "arange", "(", "start", "=", "train_num", ",", "stop", "=", "val_num", ")", "\n", "test_inds", "=", "np", ".", "arange", "(", "start", "=", "val_num", ",", "stop", "=", "n_total", ")", "\n", "\n", "torch", ".", "save", "(", "train_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"train_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "val_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"val_split.pt\"", ")", ")", "\n", "torch", ".", "save", "(", "test_inds", ",", "osp", ".", "join", "(", "self", ".", "index_cache_path", ",", "\"test_split.pt\"", ")", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.__init__": [[114, 163], ["datasets.AbstractDomainInterface.__init__", "DRD.DRDBase", "DRD.DRDBase", "DRD.DRDBase", "print", "torchvision.Compose", "torchvision.Compose", "DRD.DRD.get_filtered_inds", "DRD.DRD.get_filtered_inds", "DRD.DRD.get_filtered_inds", "DRD.DRD.get_filtered_inds", "DRD.DRD.get_filtered_inds", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds"], ["def", "__init__", "(", "self", ",", "root_path", "=", "\"./workspace/datasets/diabetic-retinopathy-detection\"", ",", "downsample", "=", "None", ",", "shrink_channels", "=", "False", ",", "test_length", "=", "None", ",", "download", "=", "False", ",", "\n", "extract", "=", "True", ",", "doubledownsample", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param leave_out_classes: if a sample has ANY class from this list as positive, then it is removed from indices.\n        :param keep_in_classes: when specified, if a sample has None of the class from this list as positive, then it\n         is removed from indices..\n        \"\"\"", "\n", "self", ".", "name", "=", "\"DRD\"", "\n", "super", "(", "DRD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "shrink_channels", "=", "shrink_channels", "\n", "self", ".", "max_l", "=", "test_length", "\n", "cache_path", "=", "root_path", "\n", "source_path", "=", "root_path", "\n", "if", "doubledownsample", "is", "not", "None", ":", "\n", "            ", "transform_list", "=", "[", "transforms", ".", "Resize", "(", "doubledownsample", ")", ",", "]", "\n", "", "else", ":", "\n", "            ", "transform_list", "=", "[", "]", "\n", "", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"downsampling to\"", ",", "downsample", ")", "\n", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "downsample", ",", "downsample", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Normalize(mean=[0.485, 0.456, 0.406],", "\n", "#                     std=[0.229, 0.224, 0.225]),", "\n", "]", ")", "\n", "self", ".", "image_size", "=", "(", "downsample", ",", "downsample", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "transform_list", "+", "\n", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Normalize(mean=[0.485, 0.456, 0.406],", "\n", "#                     std=[0.229, 0.224, 0.225]),", "\n", "]", ")", "\n", "self", ".", "image_size", "=", "(", "224", ",", "224", ")", "\n", "\n", "", "self", ".", "ds_train", "=", "DRDBase", "(", "cache_path", ",", "source_path", ",", "\"train\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_valid", "=", "DRDBase", "(", "cache_path", ",", "source_path", ",", "\"val\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "self", ".", "ds_test", "=", "DRDBase", "(", "cache_path", ",", "source_path", ",", "\"test\"", ",", "transforms", "=", "transform", ",", "\n", "to_gray", "=", "shrink_channels", ",", "download", "=", "download", ",", "extract", "=", "extract", ")", "\n", "if", "extract", ":", "\n", "            ", "self", ".", "D1_train_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D1_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_valid", ",", "shuffle", "=", "True", ",", "max_l", "=", "self", ".", "max_l", ")", "\n", "self", ".", "D1_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ",", "shuffle", "=", "True", ")", "\n", "\n", "self", ".", "D2_valid_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_train", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "D2_test_ind", "=", "self", ".", "get_filtered_inds", "(", "self", ".", "ds_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_filtered_inds": [[165, 173], ["torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len"], "methods", ["None"], ["", "", "def", "get_filtered_inds", "(", "self", ",", "basedata", ":", "DRDBase", ",", "shuffle", "=", "False", ",", "max_l", "=", "None", ")", ":", "\n", "        ", "output_inds", "=", "torch", ".", "arange", "(", "0", ",", "len", "(", "basedata", ")", ")", ".", "int", "(", ")", "\n", "if", "shuffle", ":", "\n", "            ", "output_inds", "=", "output_inds", "[", "torch", ".", "randperm", "(", "len", "(", "output_inds", ")", ")", "]", "\n", "", "if", "max_l", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "output_inds", ")", ">", "max_l", ":", "\n", "                ", "output_inds", "=", "output_inds", "[", ":", "max_l", "]", "\n", "", "", "return", "output_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_D1_train": [[174, 176], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_train", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "self", ".", "D1_train_ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_D1_valid": [[177, 179], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_valid", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_valid", ",", "self", ".", "D1_valid_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_D1_test": [[180, 182], ["datasets.SubDataset"], "methods", ["None"], ["", "def", "get_D1_test", "(", "self", ")", ":", "\n", "        ", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "self", ".", "D1_test_ind", ",", "label", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_D2_valid": [[183, 187], ["DRD.DRD.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_valid", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_valid_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_train", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.get_D2_test": [[188, 192], ["DRD.DRD.is_compatible", "datasets.SubDataset", "D1.conformity_transform"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform"], ["", "def", "get_D2_test", "(", "self", ",", "D1", ")", ":", "\n", "        ", "assert", "self", ".", "is_compatible", "(", "D1", ")", "\n", "target_indices", "=", "self", ".", "D2_test_ind", "\n", "return", "SubDataset", "(", "self", ".", "name", ",", "self", ".", "ds_test", ",", "target_indices", ",", "label", "=", "1", ",", "transform", "=", "D1", ".", "conformity_transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.DRD.DRD.conformity_transform": [[193, 209], ["torchvision.Compose", "torchvision.Compose", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Grayscale", "torchvision.Resize", "torchvision.ToTensor", "datasets.ExpandRGBChannels", "torchvision.ToPILImage", "torchvision.Resize", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "conformity_transform", "(", "self", ")", ":", "\n", "        ", "target", "=", "224", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "downsample", "\n", "", "if", "self", ".", "shrink_channels", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Grayscale", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "transforms", ".", "Compose", "(", "[", "ExpandRGBChannels", "(", ")", ",", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "target", ",", "target", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#transforms.Lambda(lambda x: x.repeat(3, 1, 1)),", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.__init__": [[26, 34], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.__len__": [[35, 37], ["__init__.SubDataset.indices.numel"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.__getitem__": [[38, 53], ["__init__.SubDataset.transform"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.trim_dataset": [[54, 62], ["__init__.SubDataset.indices.numel", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset": [[63, 73], ["torch.FloatTensor().fill_().bernoulli().byte", "torch.FloatTensor().fill_().bernoulli().byte", "torch.FloatTensor().fill_().bernoulli().byte", "torch.FloatTensor().fill_().bernoulli().byte", "__init__.SubDataset", "__init__.SubDataset", "torch.FloatTensor().fill_().bernoulli", "torch.FloatTensor().fill_().bernoulli", "torch.FloatTensor().fill_().bernoulli", "torch.FloatTensor().fill_().bernoulli", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "__init__.SubDataset.indices.numel"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ExpandRGBChannels.__call__": [[81, 93], ["tensor.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.__init__": [[99, 102], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.get_D1_train": [[109, 111], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.get_D1_valid": [[111, 113], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.get_D1_test": [[113, 115], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.get_D2_valid": [[122, 124], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.get_D2_test": [[124, 126], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.is_compatible": [[133, 144], ["NotImplementedError", "print"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.conformity_transform": [[148, 150], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.AbstractDomainInterface.__add__": [[151, 153], ["__init__.ADISum"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.__init__": [[155, 160], ["__init__.AbstractDomainInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train": [[161, 165], ["__init__.ADISum.src.get_D1_train", "__init__.ADISum.other.get_D1_train", "__init__.SubDataset", "torch.ConcatDataset", "torch.ConcatDataset", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_train"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid": [[166, 170], ["__init__.ADISum.src.get_D1_valid", "__init__.ADISum.other.get_D1_valid", "__init__.SubDataset", "torch.ConcatDataset", "torch.ConcatDataset", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_valid"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test": [[171, 175], ["__init__.ADISum.src.get_D1_test", "__init__.ADISum.other.get_D1_test", "__init__.SubDataset", "torch.ConcatDataset", "torch.ConcatDataset", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D1_test"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid": [[176, 180], ["__init__.ADISum.src.get_D2_valid", "__init__.ADISum.other.get_D2_valid", "__init__.SubDataset", "torch.ConcatDataset", "torch.ConcatDataset", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_valid"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test": [[181, 185], ["__init__.ADISum.src.get_D2_test", "__init__.ADISum.other.get_D2_test", "__init__.SubDataset", "torch.ConcatDataset", "torch.ConcatDataset", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test", "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.get_D2_test"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.ADISum.is_compatible": [[186, 190], ["warnings.warn"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.MirroredDataset.__init__": [[193, 198], ["len", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "im.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.MirroredDataset.__len__": [[199, 201], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.MirroredDataset.__getitem__": [[201, 204], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PartialForwardable.partial_forward": [[11, 19], ["hasattr", "classifiers.PartialForwardable.densenet121.features", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "hasattr", "classifiers.PartialForwardable.size", "classifiers.PartialForwardable.model.features().view", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "x.size", "classifiers.PartialForwardable.model.features"], "methods", ["None"], ["    ", "def", "partial_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "'densenet121'", ")", ":", "\n", "            ", "features", "=", "self", ".", "densenet121", ".", "features", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "features", ",", "inplace", "=", "True", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ")", ".", "view", "(", "features", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "out", "\n", "", "elif", "hasattr", "(", "self", ",", "'model'", ")", ":", "\n", "            ", "return", "self", ".", "model", ".", "features", "(", "x", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers": [[25, 39], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["def", "make_layers", "(", "self", ",", "cfg", ",", "batch_norm", "=", "False", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "1", "\n", "for", "v", "in", "cfg", ":", "\n", "            ", "if", "v", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.__init__": [[40, 57], ["torch.Module.__init__", "torchvision.VGG", "torchvision.VGG", "torchvision.VGG", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "classifiers.MNIST_VGG.model._initialize_weights", "classifiers.MNIST_VGG.make_layers", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers"], ["", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MNIST_VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "# Reduced VGG16.", "\n", "self", ".", "cfg", "=", "[", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "'M'", "]", "\n", "self", ".", "model", "=", "VGG", ".", "VGG", "(", "self", ".", "make_layers", "(", "self", ".", "cfg", ",", "batch_norm", "=", "True", ")", ",", "num_classes", "=", "10", ")", "\n", "# MNIST would have a different sized feature map.", "\n", "self", ".", "model", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "1", "*", "1", ",", "256", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "256", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "10", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.forward": [[58, 66], ["classifiers.MNIST_VGG.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.output_size": [[67, 69], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "10", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.train_config": [[70, 76], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.MNIST_VGG.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "60", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_Resnet.__init__": [[83, 99], ["torch.Module.__init__", "torchvision.ResNet", "torchvision.ResNet", "torchvision.ResNet", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MNIST_Resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "# Resnet50.", "\n", "self", ".", "model", "=", "Resnet", ".", "ResNet", "(", "Resnet", ".", "Bottleneck", ",", "[", "2", ",", "3", ",", "5", ",", "2", "]", ",", "num_classes", "=", "10", ")", "\n", "\n", "# MNIST would have a different sized feature map.", "\n", "self", ".", "model", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "# The first part also needs to be fixed.", "\n", "self", ".", "model", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "# Replace the harsh convolution.", "\n", "del", "self", ".", "model", ".", "maxpool", "\n", "self", ".", "model", ".", "maxpool", "=", "lambda", "x", ":", "x", "# Remove the early maxpool.", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_Resnet.forward": [[100, 108], ["classifiers.MNIST_Resnet.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_Resnet.output_size": [[109, 111], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "10", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_Resnet.train_config": [[112, 118], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.MNIST_Resnet.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "60", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR10_VGG.__init__": [[125, 142], ["torch.Module.__init__", "torchvision.VGG", "torchvision.VGG", "torchvision.VGG", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "classifiers.CIFAR10_VGG.model._initialize_weights", "torchvision.make_layers", "torchvision.make_layers", "torchvision.make_layers", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CIFAR10_VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "# VGG16 minus last maxpool.", "\n", "self", ".", "cfg", "=", "[", "64", ",", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", ",", "512", ",", "512", ",", "512", "]", "\n", "self", ".", "model", "=", "VGG", ".", "VGG", "(", "VGG", ".", "make_layers", "(", "self", ".", "cfg", ",", "batch_norm", "=", "True", ")", ",", "num_classes", "=", "10", ")", "\n", "# Cifar 10 would have a different sized feature map.", "\n", "self", ".", "model", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "2", "*", "2", ",", "4096", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "10", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR10_VGG.forward": [[143, 151], ["classifiers.CIFAR10_VGG.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR10_VGG.output_size": [[152, 154], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "10", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR10_VGG.train_config": [[155, 161], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.CIFAR10_VGG.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "60", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR10_Resnet.__init__": [[168, 184], ["torch.Module.__init__", "torchvision.ResNet", "torchvision.ResNet", "torchvision.ResNet", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CIFAR10_Resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "# Resnet50.", "\n", "self", ".", "model", "=", "Resnet", ".", "ResNet", "(", "Resnet", ".", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "10", ")", "\n", "\n", "# Cifar 10 would have a different sized feature map.", "\n", "self", ".", "model", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "# The first part also needs to be fixed.", "\n", "self", ".", "model", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "# Replace the harsh convolution.", "\n", "del", "self", ".", "model", ".", "maxpool", "\n", "self", ".", "model", ".", "maxpool", "=", "lambda", "x", ":", "x", "# Remove the early maxpool.", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR10_Resnet.forward": [[185, 193], ["classifiers.CIFAR10_Resnet.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR10_Resnet.output_size": [[194, 196], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "10", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR10_Resnet.train_config": [[197, 203], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.CIFAR10_Resnet.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "60", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR100_VGG.__init__": [[210, 227], ["torch.Module.__init__", "torchvision.VGG", "torchvision.VGG", "torchvision.VGG", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "classifiers.CIFAR100_VGG.model._initialize_weights", "torchvision.make_layers", "torchvision.make_layers", "torchvision.make_layers", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CIFAR100_VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "# VGG16 minus last maxpool.", "\n", "self", ".", "cfg", "=", "[", "64", ",", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", ",", "512", ",", "512", ",", "512", "]", "\n", "self", ".", "model", "=", "VGG", ".", "VGG", "(", "VGG", ".", "make_layers", "(", "self", ".", "cfg", ",", "batch_norm", "=", "True", ")", ",", "num_classes", "=", "100", ")", "\n", "# Cifar 10 would have a different sized feature map.", "\n", "self", ".", "model", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "2", "*", "2", ",", "4096", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "100", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR100_VGG.forward": [[228, 236], ["classifiers.CIFAR100_VGG.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR100_VGG.output_size": [[237, 239], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "100", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR100_VGG.train_config": [[240, 246], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.CIFAR100_VGG.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "120", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR100_Resnet.__init__": [[253, 269], ["torch.Module.__init__", "torchvision.ResNet", "torchvision.ResNet", "torchvision.ResNet", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CIFAR100_Resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "# Resnet50.", "\n", "self", ".", "model", "=", "Resnet", ".", "ResNet", "(", "Resnet", ".", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "100", ")", "\n", "\n", "# Cifar 100 would have a different sized feature map.", "\n", "self", ".", "model", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "# The first part also needs to be fixed.", "\n", "self", ".", "model", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "# Replace the harsh convolution.", "\n", "del", "self", ".", "model", ".", "maxpool", "\n", "self", ".", "model", ".", "maxpool", "=", "lambda", "x", ":", "x", "# Remove the early maxpool.", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR100_Resnet.forward": [[270, 278], ["classifiers.CIFAR100_Resnet.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR100_Resnet.output_size": [[279, 281], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "100", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.CIFAR100_Resnet.train_config": [[282, 288], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.CIFAR100_Resnet.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "120", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.STL10_VGG.__init__": [[295, 312], ["torch.Module.__init__", "torchvision.VGG", "torchvision.VGG", "torchvision.VGG", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "classifiers.STL10_VGG.model._initialize_weights", "torchvision.make_layers", "torchvision.make_layers", "torchvision.make_layers", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "STL10_VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "# VGG16.", "\n", "self", ".", "cfg", "=", "[", "64", ",", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", "]", "\n", "self", ".", "model", "=", "VGG", ".", "VGG", "(", "VGG", ".", "make_layers", "(", "self", ".", "cfg", ",", "batch_norm", "=", "True", ")", ",", "num_classes", "=", "10", ")", "\n", "# Cifar 10 would have a different sized feature map.", "\n", "self", ".", "model", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "3", "*", "3", ",", "4096", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "10", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.STL10_VGG.forward": [[313, 321], ["classifiers.STL10_VGG.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.STL10_VGG.output_size": [[322, 324], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "10", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.STL10_VGG.train_config": [[325, 331], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.STL10_VGG.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "120", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.STL10_Resnet.__init__": [[338, 354], ["torch.Module.__init__", "torchvision.ResNet", "torchvision.ResNet", "torchvision.ResNet", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "STL10_Resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "# Resnet50.", "\n", "self", ".", "model", "=", "Resnet", ".", "ResNet", "(", "Resnet", ".", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "10", ")", "\n", "\n", "# STL10 would have a different sized feature map.", "\n", "self", ".", "model", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "# The first part also needs to be fixed.", "\n", "self", ".", "model", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "# Replace the harsh convolution.", "\n", "del", "self", ".", "model", ".", "maxpool", "\n", "self", ".", "model", ".", "maxpool", "=", "lambda", "x", ":", "x", "# Remove the early maxpool.", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.STL10_Resnet.forward": [[355, 363], ["classifiers.STL10_Resnet.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.STL10_Resnet.output_size": [[364, 366], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "10", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.STL10_Resnet.train_config": [[367, 373], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.STL10_Resnet.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "120", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.TinyImagenet_VGG.__init__": [[380, 396], ["torch.Module.__init__", "torchvision.VGG", "torchvision.VGG", "torchvision.VGG", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "classifiers.TinyImagenet_VGG.model._initialize_weights", "torchvision.make_layers", "torchvision.make_layers", "torchvision.make_layers", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "TinyImagenet_VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "self", ".", "cfg", "=", "[", "64", ",", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", "]", "\n", "self", ".", "model", "=", "VGG", ".", "VGG", "(", "VGG", ".", "make_layers", "(", "self", ".", "cfg", ",", "batch_norm", "=", "True", ")", ",", "num_classes", "=", "200", ")", "\n", "# TinyImagenet would have a different sized feature map.", "\n", "self", ".", "model", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "2", "*", "2", ",", "4096", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "200", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.TinyImagenet_VGG.forward": [[397, 405], ["classifiers.TinyImagenet_VGG.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.TinyImagenet_VGG.output_size": [[406, 408], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "200", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.TinyImagenet_VGG.train_config": [[409, 415], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.TinyImagenet_VGG.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "120", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.TinyImagenet_Resnet.__init__": [[422, 436], ["torch.Module.__init__", "torchvision.ResNet", "torchvision.ResNet", "torchvision.ResNet", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "TinyImagenet_Resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "self", ".", "offset", "=", "0.44900", "\n", "self", ".", "multiplier", "=", "4.42477", "\n", "\n", "# Resnet50.", "\n", "self", ".", "model", "=", "Resnet", ".", "ResNet", "(", "Resnet", ".", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "200", ")", "\n", "\n", "# TinyImagenet would have a different sized feature map.", "\n", "self", ".", "model", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "# The first part also needs to be fixed.", "\n", "self", ".", "model", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "# Replace the harsh convolution.", "\n", "# del self.model.maxpool", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.TinyImagenet_Resnet.forward": [[439, 447], ["classifiers.TinyImagenet_Resnet.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "offset", ")", "*", "self", ".", "multiplier", "\n", "\n", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.TinyImagenet_Resnet.output_size": [[448, 450], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "200", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.TinyImagenet_Resnet.train_config": [[451, 457], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.TinyImagenet_Resnet.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "120", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHDense.__init__": [[460, 463], ["super().__init__", "torchvision.densenet121", "torchvision.densenet121", "torchvision.densenet121"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NIHDense", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "densenet121", "=", "Densenet", ".", "densenet121", "(", "pretrained", "=", "True", ")", "\n", "#TODO: ChestXNet specific implementation params (substitute for kLog)", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHDense.forward": [[465, 471], ["classifiers.NIHDense.densenet121", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "        ", "output", "=", "self", ".", "densenet121", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "return", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHDense.output_size": [[472, 474], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "14", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHDense.train_config": [[475, 483], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.NIHDense.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "# TODO: chestXnet suitable arguments", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "\n", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "120", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHDenseBinary.__init__": [[486, 510], ["super().__init__", "torchvision.densenet121", "torchvision.densenet121", "torchvision.densenet121", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "state_dict[].copy().keys", "classifiers.NIHDenseBinary.load_state_dict", "state_dict[].copy", "state_dict[].pop", "state_dict[].pop", "key[].replace", "state_dict[].pop", "key[].replace", "state_dict[].pop", "state_dict[].pop", "key[].replace", "key[].replace"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained_weights_path", "=", "None", ",", "train_features", "=", "False", ")", ":", "\n", "        ", "super", "(", "NIHDenseBinary", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "train_features", "=", "train_features", "\n", "self", ".", "densenet121", "=", "Densenet", ".", "densenet121", "(", "pretrained", "=", "False", ")", "\n", "self", ".", "densenet121", ".", "features", "[", "0", "]", "=", "nn", ".", "Conv2d", "(", "1", ",", "64", ",", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "3", ",", "3", ")", ",", "bias", "=", "False", ")", "\n", "if", "pretrained_weights_path", "is", "not", "None", ":", "\n", "            ", "print", "(", "\"NIHDenseBinary loading weights from \"", ",", "pretrained_weights_path", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "pretrained_weights_path", ")", "\n", "keys", "=", "state_dict", "[", "'state_dict'", "]", ".", "copy", "(", ")", ".", "keys", "(", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "if", "\"norm.1\"", "in", "key", ":", "\n", "                    ", "state_dict", "[", "'state_dict'", "]", "[", "key", "[", "7", ":", "]", ".", "replace", "(", "\"norm.1\"", ",", "\"norm1\"", ")", "]", "=", "state_dict", "[", "'state_dict'", "]", ".", "pop", "(", "key", ")", "\n", "", "elif", "\"norm.2\"", "in", "key", ":", "\n", "                    ", "state_dict", "[", "'state_dict'", "]", "[", "key", "[", "7", ":", "]", ".", "replace", "(", "\"norm.2\"", ",", "\"norm2\"", ")", "]", "=", "state_dict", "[", "'state_dict'", "]", ".", "pop", "(", "key", ")", "\n", "", "elif", "\"conv.1\"", "in", "key", ":", "\n", "                    ", "state_dict", "[", "'state_dict'", "]", "[", "key", "[", "7", ":", "]", ".", "replace", "(", "\"conv.1\"", ",", "\"conv1\"", ")", "]", "=", "state_dict", "[", "'state_dict'", "]", ".", "pop", "(", "key", ")", "\n", "", "elif", "\"conv.2\"", "in", "key", ":", "\n", "                    ", "state_dict", "[", "'state_dict'", "]", "[", "key", "[", "7", ":", "]", ".", "replace", "(", "\"conv.2\"", ",", "\"conv2\"", ")", "]", "=", "state_dict", "[", "'state_dict'", "]", ".", "pop", "(", "key", ")", "\n", "", "else", ":", "\n", "                    ", "state_dict", "[", "'state_dict'", "]", "[", "key", "[", "7", ":", "]", "]", "=", "state_dict", "[", "'state_dict'", "]", ".", "pop", "(", "key", ")", "\n", "\n", "", "", "self", ".", "load_state_dict", "(", "state_dict", "[", "'state_dict'", "]", ",", "strict", "=", "False", ")", "\n", "", "feature_dim", "=", "self", ".", "densenet121", ".", "classifier", ".", "in_features", "\n", "self", ".", "densenet121", ".", "classifier", "=", "nn", ".", "Linear", "(", "feature_dim", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHDenseBinary.forward": [[511, 517], ["classifiers.NIHDenseBinary.densenet121", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "        ", "output", "=", "self", ".", "densenet121", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "return", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHDenseBinary.output_size": [[518, 520], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHDenseBinary.train_config": [[521, 532], ["torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "classifiers.NIHDenseBinary.densenet121.classifier.parameters", "classifiers.NIHDenseBinary.densenet121.classifier.parameters", "classifiers.NIHDenseBinary.densenet121.features.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "if", "self", ".", "train_features", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "\n", "[", "{", "'params'", ":", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "'lr'", ":", "1e-1", "}", ",", "{", "'params'", ":", "self", ".", "densenet121", ".", "features", ".", "parameters", "(", ")", "}", "]", ",", "\n", "lr", "=", "1e-1", ")", "\n", "", "else", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ",", ")", "\n", "", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "config", "[", "'optim'", "]", ",", "1", ",", "gamma", "=", "0.1", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "20", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHChestVGG.__init__": [[535, 551], ["super().__init__", "torchvision.VGG", "torchvision.VGG", "torchvision.VGG", "classifiers.NIHChestVGG.model._initialize_weights", "torchvision.make_layers", "torchvision.make_layers", "torchvision.make_layers"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.MNIST_VGG.make_layers"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NIHChestVGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Based on the imagenet normalization params.", "\n", "#self.offset = 0.44900", "\n", "#self.multiplier = 4.42477", "\n", "\n", "self", ".", "cfg", "=", "[", "64", ",", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", "]", "\n", "self", ".", "model", "=", "VGG", ".", "VGG", "(", "VGG", ".", "make_layers", "(", "self", ".", "cfg", ",", "batch_norm", "=", "True", ")", ",", "num_classes", "=", "2", ")", "\n", "# TinyImagenet would have a different sized feature map.", "\n", "#self.model.classifier = nn.Sequential(", "\n", "#    nn.Linear(512 * 2 * 2, 4096), nn.ReLU(True), nn.Dropout(),", "\n", "#    nn.Linear(4096, 4096), nn.ReLU(True), nn.Dropout(),", "\n", "#    nn.Linear(4096, 2),", "\n", "#)", "\n", "self", ".", "model", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHChestVGG.forward": [[552, 558], ["classifiers.NIHChestVGG.model", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "# Perform late normalization.", "\n", "        ", "output", "=", "self", ".", "model", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "output", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHChestVGG.output_size": [[559, 561], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.NIHChestVGG.train_config": [[562, 568], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "classifiers.NIHChestVGG.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "120", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PADDense.__init__": [[570, 579], ["super().__init__", "torchvision.densenet121", "torchvision.densenet121", "torchvision.densenet121", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "classifiers.PADDense.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained_weights_path", "=", "None", ",", "train_features", "=", "True", ")", ":", "\n", "        ", "super", "(", "PADDense", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "train_features", "=", "train_features", "\n", "self", ".", "densenet121", "=", "Densenet", ".", "densenet121", "(", "pretrained", "=", "False", ")", "\n", "if", "pretrained_weights_path", "is", "not", "None", ":", "\n", "            ", "self", ".", "load_state_dict", "(", "torch", ".", "load", "(", "pretrained_weights_path", ")", ",", "strict", "=", "False", ")", "\n", "", "self", ".", "densenet121", ".", "features", "[", "0", "]", "=", "nn", ".", "Conv2d", "(", "1", ",", "64", ",", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "3", ",", "3", ")", ",", "bias", "=", "False", ")", "\n", "feature_dim", "=", "self", ".", "densenet121", ".", "classifier", ".", "in_features", "\n", "self", ".", "densenet121", ".", "classifier", "=", "nn", ".", "Linear", "(", "feature_dim", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PADDense.forward": [[580, 586], ["classifiers.PADDense.densenet121", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "        ", "output", "=", "self", ".", "densenet121", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "return", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PADDense.output_size": [[587, 589], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PADDense.train_config": [[590, 601], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "classifiers.PADDense.densenet121.classifier.parameters", "classifiers.PADDense.densenet121.classifier.parameters", "classifiers.PADDense.densenet121.features.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "if", "self", ".", "train_features", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "\n", "[", "{", "'params'", ":", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "'lr'", ":", "1e-3", "}", ",", "{", "'params'", ":", "self", ".", "densenet121", ".", "features", ".", "parameters", "(", ")", "}", "]", ",", "\n", "lr", "=", "1e-3", ")", "\n", "", "else", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ",", ")", "\n", "#config['scheduler'] = optim.lr_scheduler.StepLR(config['optim'], 30, gamma=0.1)", "\n", "", "config", "[", "'max_epoch'", "]", "=", "100", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.DRDDense.__init__": [[603, 611], ["super().__init__", "torchvision.densenet121", "torchvision.densenet121", "torchvision.densenet121", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "classifiers.DRDDense.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained_weights_path", "=", "None", ",", "train_features", "=", "False", ")", ":", "\n", "        ", "super", "(", "DRDDense", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "train_features", "=", "train_features", "\n", "self", ".", "densenet121", "=", "Densenet", ".", "densenet121", "(", "pretrained", "=", "False", ")", "\n", "if", "pretrained_weights_path", "is", "not", "None", ":", "\n", "            ", "self", ".", "load_state_dict", "(", "torch", ".", "load", "(", "pretrained_weights_path", ")", ",", "strict", "=", "False", ")", "\n", "", "feature_dim", "=", "self", ".", "densenet121", ".", "classifier", ".", "in_features", "\n", "self", ".", "densenet121", ".", "classifier", "=", "nn", ".", "Linear", "(", "feature_dim", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.DRDDense.forward": [[612, 618], ["classifiers.DRDDense.densenet121", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "        ", "output", "=", "self", ".", "densenet121", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "return", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.DRDDense.output_size": [[619, 621], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.DRDDense.train_config": [[622, 633], ["torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "classifiers.DRDDense.densenet121.classifier.parameters", "classifiers.DRDDense.densenet121.classifier.parameters", "classifiers.DRDDense.densenet121.features.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "if", "self", ".", "train_features", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "\n", "[", "{", "'params'", ":", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "'lr'", ":", "1e-3", "}", ",", "{", "'params'", ":", "self", ".", "densenet121", ".", "features", ".", "parameters", "(", ")", "}", "]", ",", "\n", "lr", "=", "1e-3", ")", "\n", "", "else", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ",", ")", "\n", "", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "config", "[", "'optim'", "]", ",", "30", ",", "gamma", "=", "0.5", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "100", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PCAMDense.__init__": [[635, 643], ["super().__init__", "torchvision.densenet121", "torchvision.densenet121", "torchvision.densenet121", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "classifiers.PCAMDense.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained_weights_path", "=", "None", ",", "train_features", "=", "False", ")", ":", "\n", "        ", "super", "(", "PCAMDense", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "train_features", "=", "train_features", "\n", "self", ".", "densenet121", "=", "Densenet", ".", "densenet121", "(", "pretrained", "=", "False", ")", "\n", "if", "pretrained_weights_path", "is", "not", "None", ":", "\n", "            ", "self", ".", "load_state_dict", "(", "torch", ".", "load", "(", "pretrained_weights_path", ")", ",", "strict", "=", "False", ")", "\n", "", "feature_dim", "=", "self", ".", "densenet121", ".", "classifier", ".", "in_features", "\n", "self", ".", "densenet121", ".", "classifier", "=", "nn", ".", "Linear", "(", "feature_dim", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PCAMDense.forward": [[644, 650], ["classifiers.PCAMDense.densenet121", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "True", ")", ":", "\n", "        ", "output", "=", "self", ".", "densenet121", "(", "x", ")", "\n", "if", "softmax", ":", "\n", "            ", "return", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PCAMDense.output_size": [[651, 653], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PCAMDense.train_config": [[654, 665], ["torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "classifiers.PCAMDense.densenet121.classifier.parameters", "classifiers.PCAMDense.densenet121.classifier.parameters", "classifiers.PCAMDense.densenet121.features.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "if", "self", ".", "train_features", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "\n", "[", "{", "'params'", ":", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "'lr'", ":", "1e-1", "}", ",", "{", "'params'", ":", "self", ".", "densenet121", ".", "features", ".", "parameters", "(", ")", "}", "]", ",", "\n", "lr", "=", "1e-1", ")", "\n", "", "else", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ",", ")", "\n", "", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "config", "[", "'optim'", "]", ",", "10", ",", "gamma", "=", "0.5", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "100", "\n", "return", "config", "", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ELU_BatchNorm2d.__init__": [[15, 18], ["super().__init__", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "filters", ")", ":", "\n", "        ", "super", "(", "ELU_BatchNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "torch", ".", "nn", ".", "BatchNorm2d", "(", "filters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ELU_BatchNorm2d.forward": [[19, 21], ["autoencoders.ELU_BatchNorm2d.bn", "torch.elu", "torch.elu", "torch.elu", "torch.elu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "bn", "(", "F", ".", "elu", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ResidualBlock.__init__": [[24, 31], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "autoencoders.ELU_BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "filters", ",", "kernel_size", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ops", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "filters", ",", "filters", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "False", ")", ",", "\n", "ELU_BatchNorm2d", "(", "filters", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "filters", ",", "filters", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "filters", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ResidualBlock.forward": [[33, 35], ["torch.elu", "torch.elu", "torch.elu", "torch.elu", "autoencoders.ResidualBlock.ops"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "elu", "(", "x", "+", "self", ".", "ops", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Residual_AE.__init__": [[38, 81], ["torch.Module.__init__", "max", "modules.append", "modules.append", "modules.append", "range", "modules.append", "modules.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "autoencoders.Residual_AE._calculate_out_pad", "range", "modules.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "torch.nn.ELU", "modules.append", "min", "modules.append", "modules.append", "spatial_sizes.append", "autoencoders.ELU_BatchNorm2d", "autoencoders.ResidualBlock", "modules.append", "modules.append", "modules.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "autoencoders.ResidualBlock", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "autoencoders.ELU_BatchNorm2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "autoencoders.ELU_BatchNorm2d", "autoencoders.ResidualBlock", "math.floor", "math.floor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Residual_AE._calculate_out_pad"], ["    ", "def", "__init__", "(", "self", ",", "dims", ",", "max_channels", "=", "1024", ",", "depth", "=", "7", ",", "n_hidden", "=", "1024", ")", ":", "\n", "        ", "assert", "len", "(", "dims", ")", "==", "3", ",", "'Please specify 3 values for dims'", "\n", "super", "(", "Residual_AE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel_size", "=", "3", "\n", "current_channels", "=", "16", "\n", "self", ".", "epoch_factor", "=", "max", "(", "1", ",", "n_hidden", "//", "256", ")", "\n", "self", ".", "default_sigmoid", "=", "False", "\n", "self", ".", "netid", "=", "'max.%d.d.%d.nH.%d'", "%", "(", "max_channels", ",", "depth", ",", "n_hidden", ")", "\n", "\n", "# encoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "spatial_sizes", "=", "[", "(", "dims", "[", "1", "]", ",", "dims", "[", "2", "]", ")", "]", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "dims", "[", "0", "]", ",", "out_channels", "=", "current_channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "False", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "BatchNorm2d", "(", "current_channels", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "ELU", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "modules", ".", "append", "(", "ResidualBlock", "(", "current_channels", ",", "kernel_size", ")", ")", "\n", "next_channels", "=", "min", "(", "current_channels", "*", "2", ",", "max_channels", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "Conv2d", "(", "current_channels", ",", "next_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "bias", "=", "False", ",", "padding", "=", "1", ")", ")", "\n", "current_channels", "=", "next_channels", "\n", "modules", ".", "append", "(", "ELU_BatchNorm2d", "(", "current_channels", ")", ")", "\n", "spatial_sizes", ".", "append", "(", "(", "math", ".", "floor", "(", "(", "(", "spatial_sizes", "[", "-", "1", "]", "[", "0", "]", "-", "1", ")", "/", "2", ")", "+", "1", ")", ",", "math", ".", "floor", "(", "(", "(", "spatial_sizes", "[", "-", "1", "]", "[", "1", "]", "-", "1", ")", "/", "2", ")", "+", "1", ")", ")", ")", "\n", "\n", "# Bottleneck layer", "\n", "", "modules", ".", "append", "(", "ELU_BatchNorm2d", "(", "current_channels", ")", ")", "\n", "modules", ".", "append", "(", "ResidualBlock", "(", "filters", "=", "current_channels", ",", "kernel_size", "=", "kernel_size", ")", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "#", "\n", "# # decoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "out_pads", "=", "self", ".", "_calculate_out_pad", "(", "spatial_sizes", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "next_channels", "=", "current_channels", "//", "2", "\n", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "current_channels", ",", "next_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "bias", "=", "False", ",", "padding", "=", "1", ",", "output_padding", "=", "out_pads", "[", "i", "]", ")", ")", "\n", "current_channels", "=", "next_channels", "\n", "modules", ".", "append", "(", "ELU_BatchNorm2d", "(", "current_channels", ")", ")", "\n", "modules", ".", "append", "(", "ResidualBlock", "(", "current_channels", ",", "kernel_size", ")", ")", "\n", "# Final layer", "\n", "", "modules", ".", "append", "(", "nn", ".", "Conv2d", "(", "current_channels", ",", "dims", "[", "0", "]", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "False", ")", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Residual_AE._calculate_out_pad": [[82, 96], ["reversed", "range", "range", "out_pad.append", "len", "len"], "methods", ["None"], ["", "def", "_calculate_out_pad", "(", "self", ",", "spatial_sizes", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "kernel_size", "=", "3", ",", "d", "=", "1", ")", ":", "\n", "        ", "out_pad", "=", "[", "]", "\n", "for", "i", "in", "reversed", "(", "range", "(", "1", ",", "len", "(", "spatial_sizes", ")", ")", ")", ":", "\n", "            ", "current", "=", "spatial_sizes", "[", "i", "]", "\n", "next", "=", "spatial_sizes", "[", "i", "-", "1", "]", "\n", "\n", "pad", "=", "[", "0", ",", "0", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "current", ")", ")", ":", "\n", "                ", "outputsize", "=", "(", "current", "[", "j", "]", "-", "1", ")", "*", "stride", "-", "2", "*", "padding", "+", "(", "kernel_size", "-", "1", ")", "*", "d", "+", "1", "\n", "if", "outputsize", "<", "next", "[", "j", "]", ":", "\n", "                    ", "pad", "[", "j", "]", "=", "1", "\n", "", "", "out_pad", ".", "append", "(", "pad", ")", "\n", "\n", "", "return", "out_pad", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Residual_AE.encode": [[97, 102], ["x.size", "autoencoders.Residual_AE.encoder", "autoencoders.Residual_AE.view"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "size", "(", "0", ")", "\n", "code", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out", "=", "code", ".", "view", "(", "n_samples", ",", "-", "1", ")", "# flatten to vectors.", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Residual_AE.forward": [[103, 109], ["autoencoders.Residual_AE.encoder", "autoencoders.Residual_AE.decoder", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "sigmoid", "=", "False", ")", ":", "\n", "        ", "enc", "=", "self", ".", "encoder", "(", "x", ")", "\n", "dec", "=", "self", ".", "decoder", "(", "enc", ")", "\n", "if", "sigmoid", "or", "self", ".", "default_sigmoid", ":", "\n", "            ", "dec", "=", "F", ".", "sigmoid", "(", "dec", ")", "\n", "", "return", "dec", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Residual_AE.train_config": [[110, 116], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "autoencoders.Residual_AE.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-3", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "240", "*", "self", ".", "epoch_factor", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Residual_AE.preferred_name": [[117, 119], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "\".\"", "+", "self", ".", "netid", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Generic_AE.__init__": [[122, 180], ["torch.Module.__init__", "max", "range", "modules.append", "modules.append", "modules.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "modules.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "modules.append", "modules.append", "modules.append", "all_channels.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "nonLin", "len", "len", "modules.append", "modules.append", "modules.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "nonLin", "modules.append", "min", "remainder_layers.append", "math.floor", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "nonLin", "modules.append", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "modules.append", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dims", ",", "max_channels", "=", "512", ",", "depth", "=", "10", ",", "n_hidden", "=", "256", ")", ":", "\n", "        ", "assert", "len", "(", "dims", ")", "==", "3", ",", "'Please specify 3 values for dims'", "\n", "super", "(", "Generic_AE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel_size", "=", "3", "\n", "all_channels", "=", "[", "]", "\n", "current_channels", "=", "64", "\n", "nonLin", "=", "nn", ".", "ELU", "\n", "self", ".", "epoch_factor", "=", "max", "(", "1", ",", "n_hidden", "//", "256", ")", "\n", "self", ".", "default_sigmoid", "=", "False", "\n", "max_pool_layers", "=", "[", "i", "%", "2", "==", "0", "for", "i", "in", "range", "(", "depth", ")", "]", "\n", "remainder_layers", "=", "[", "]", "\n", "self", ".", "netid", "=", "'max.%d.d.%d.nH.%d'", "%", "(", "max_channels", ",", "depth", ",", "n_hidden", ")", "\n", "\n", "# encoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "dims", "[", "0", "]", "\n", "in_spatial_size", "=", "dims", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "current_channels", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "current_channels", ")", ")", "\n", "modules", ".", "append", "(", "nonLin", "(", ")", ")", "\n", "in_channels", "=", "current_channels", "\n", "all_channels", ".", "append", "(", "current_channels", ")", "\n", "if", "max_pool_layers", "[", "i", "]", ":", "\n", "                ", "modules", ".", "append", "(", "nn", ".", "MaxPool2d", "(", "2", ")", ")", "\n", "current_channels", "=", "min", "(", "current_channels", "*", "2", ",", "max_channels", ")", "\n", "remainder_layers", ".", "append", "(", "in_spatial_size", "%", "2", ")", "\n", "in_spatial_size", "=", "math", ".", "floor", "(", "in_spatial_size", "/", "2", ")", "\n", "\n", "# Final layer", "\n", "", "", "modules", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "n_hidden", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_hidden", ")", ")", "\n", "modules", ".", "append", "(", "nonLin", "(", ")", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n", "# decoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "n_hidden", "\n", "if", "self", ".", "__class__", "==", "Generic_VAE", ":", "\n", "            ", "in_channels", "=", "in_channels", "//", "2", "\n", "", "current_index", "=", "len", "(", "all_channels", ")", "-", "1", "\n", "r_ind", "=", "len", "(", "remainder_layers", ")", "-", "1", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "all_channels", "[", "current_index", "]", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "all_channels", "[", "current_index", "]", ")", ")", "\n", "modules", ".", "append", "(", "nonLin", "(", ")", ")", "\n", "if", "max_pool_layers", "[", "i", "]", ":", "\n", "                ", "modules", ".", "append", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", ")", "\n", "if", "remainder_layers", "[", "r_ind", "]", ">", "0", ":", "\n", "                    ", "modules", ".", "append", "(", "nn", ".", "ZeroPad2d", "(", "(", "1", ",", "0", ",", "1", ",", "0", ")", ")", ")", "\n", "", "r_ind", "-=", "1", "\n", "\n", "", "in_channels", "=", "all_channels", "[", "current_index", "]", "\n", "current_index", "-=", "1", "\n", "# Final layer", "\n", "", "modules", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "dims", "[", "0", "]", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ")", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Generic_AE.encode": [[181, 186], ["x.size", "autoencoders.Generic_AE.encoder", "autoencoders.Generic_AE.view"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "size", "(", "0", ")", "\n", "code", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out", "=", "code", ".", "view", "(", "n_samples", ",", "-", "1", ")", "# flatten to vectors.", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Generic_AE.forward": [[187, 193], ["autoencoders.Generic_AE.encoder", "autoencoders.Generic_AE.decoder", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "sigmoid", "=", "False", ")", ":", "\n", "        ", "enc", "=", "self", ".", "encoder", "(", "x", ")", "\n", "dec", "=", "self", ".", "decoder", "(", "enc", ")", "\n", "if", "sigmoid", "or", "self", ".", "default_sigmoid", ":", "\n", "            ", "dec", "=", "F", ".", "sigmoid", "(", "dec", ")", "\n", "", "return", "dec", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Generic_AE.train_config": [[194, 200], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "autoencoders.Generic_AE.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-3", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "240", "*", "self", ".", "epoch_factor", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Generic_AE.preferred_name": [[201, 203], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "\".\"", "+", "self", ".", "netid", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Generic_VAE.__init__": [[205, 209], ["autoencoders.Generic_AE.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dims", ",", "max_channels", "=", "512", ",", "depth", "=", "10", ",", "n_hidden", "=", "256", ")", ":", "\n", "        ", "super", "(", "Generic_VAE", ",", "self", ")", ".", "__init__", "(", "dims", ",", "max_channels", ",", "depth", ",", "2", "*", "n_hidden", ")", "\n", "self", ".", "fc_e_mu", "=", "nn", ".", "Linear", "(", "2", "*", "n_hidden", ",", "n_hidden", ")", "\n", "self", ".", "fc_e_std", "=", "nn", ".", "Linear", "(", "2", "*", "n_hidden", ",", "n_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Generic_VAE.reparameterize": [[210, 217], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like.mul().add_", "torch.randn_like.mul().add_", "torch.randn_like.mul().add_", "torch.randn_like.mul().add_", "torch.randn_like.mul", "torch.randn_like.mul", "torch.randn_like.mul", "torch.randn_like.mul"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ")", ":", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "return", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "", "else", ":", "\n", "            ", "return", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Generic_VAE.encode": [[218, 223], ["x.size", "autoencoders.Generic_VAE.encoder", "autoencoders.Generic_VAE.fc_e_mu", "autoencoders.Generic_VAE.view"], "methods", ["None"], ["", "", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "size", "(", "0", ")", "\n", "h_out", "=", "self", ".", "encoder", "(", "x", ")", "\n", "code", "=", "self", ".", "fc_e_mu", "(", "h_out", ".", "view", "(", "n_samples", ",", "-", "1", ")", ")", "\n", "return", "code", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.Generic_VAE.forward": [[224, 234], ["autoencoders.Generic_VAE.encoder", "autoencoders.Generic_VAE.size", "autoencoders.Generic_VAE.reparameterize", "autoencoders.Generic_VAE.decoder", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "autoencoders.Generic_VAE.fc_e_mu", "autoencoders.Generic_VAE.fc_e_std", "autoencoders.Generic_VAE.view", "autoencoders.Generic_VAE.view", "autoencoders.Generic_VAE.view", "autoencoders.Generic_VAE.size", "autoencoders.Generic_VAE.size", "autoencoders.Generic_VAE.size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResVAE.reparameterize"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "enc", "=", "self", ".", "encoder", "(", "x", ")", "\n", "n_size", "=", "enc", ".", "size", "(", "0", ")", "\n", "mu", ",", "logvar", "=", "self", ".", "fc_e_mu", "(", "enc", ".", "view", "(", "n_size", ",", "-", "1", ")", ")", ",", "self", ".", "fc_e_std", "(", "enc", ".", "view", "(", "n_size", ",", "-", "1", ")", ")", "\n", "self", ".", "last_mu", "=", "mu", "\n", "self", ".", "last_std", "=", "logvar", "\n", "z", "=", "self", ".", "reparameterize", "(", "mu", ",", "logvar", ")", "\n", "dec", "=", "self", ".", "decoder", "(", "z", ".", "view", "(", "n_size", ",", "enc", ".", "size", "(", "1", ")", "//", "2", ",", "enc", ".", "size", "(", "2", ")", ",", "enc", ".", "size", "(", "3", ")", ")", ")", "\n", "dec", "=", "F", ".", "sigmoid", "(", "dec", ")", "\n", "return", "dec", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeAE.__init__": [[237, 282], ["torch.Module.__init__", "max", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dims", ",", "max_channels", "=", "1024", ",", "depth", "=", "6", ",", "n_hidden", "=", "512", ")", ":", "\n", "        ", "assert", "len", "(", "dims", ")", "==", "3", ",", "'Please specify 3 values for dims'", "\n", "super", "(", "ALILikeAE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "EncKernel", "=", "[", "2", ",", "7", ",", "5", ",", "7", ",", "4", ",", "1", "]", "\n", "EncStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", "]", "\n", "EncDepth", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", ",", "n_hidden", "]", "\n", "\n", "# Generator param", "\n", "GenKernel", "=", "[", "4", ",", "7", ",", "5", ",", "7", ",", "2", ",", "1", "]", "\n", "GenStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", "]", "\n", "GenDepth", "=", "[", "256", ",", "128", ",", "64", ",", "32", ",", "32", ",", "dims", "[", "0", "]", "]", "\n", "\n", "self", ".", "epoch_factor", "=", "max", "(", "1", ",", "n_hidden", "//", "256", ")", "\n", "self", ".", "default_sigmoid", "=", "False", "\n", "\n", "remainder_layers", "=", "[", "]", "\n", "self", ".", "netid", "=", "'max.%d.d.%d.nH.%d'", "%", "(", "max_channels", ",", "depth", ",", "n_hidden", ")", "\n", "\n", "# encoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "dims", "[", "0", "]", "\n", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "EncDepth", "[", "i", "]", ",", "kernel_size", "=", "EncKernel", "[", "i", "]", ",", "padding", "=", "0", ",", "stride", "=", "EncStride", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "EncDepth", "[", "i", "]", ")", ")", "\n", "in_channels", "=", "EncDepth", "[", "i", "]", "\n", "\n", "", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "self", ".", "fc_e_mu", "=", "nn", ".", "Linear", "(", "2", "*", "n_hidden", ",", "n_hidden", ")", "\n", "self", ".", "fc_e_std", "=", "nn", ".", "Linear", "(", "2", "*", "n_hidden", ",", "n_hidden", ")", "\n", "# decoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "n_hidden", "\n", "if", "self", ".", "__class__", "==", "Generic_VAE", ":", "\n", "            ", "in_channels", "=", "in_channels", "//", "2", "\n", "\n", "", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "ConvTranspose2d", "(", "in_channels", ",", "GenDepth", "[", "i", "]", ",", "kernel_size", "=", "GenKernel", "[", "i", "]", ",", "padding", "=", "0", ",", "stride", "=", "GenStride", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "GenDepth", "[", "i", "]", ")", ")", "\n", "in_channels", "=", "GenDepth", "[", "i", "]", "\n", "# Final layer", "\n", "", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeAE.encode": [[283, 288], ["x.size", "autoencoders.ALILikeAE.encoder", "autoencoders.ALILikeAE.view"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "size", "(", "0", ")", "\n", "code", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out", "=", "code", ".", "view", "(", "n_samples", ",", "-", "1", ")", "# flatten to vectors.", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeAE.forward": [[289, 295], ["autoencoders.ALILikeAE.encoder", "autoencoders.ALILikeAE.decoder", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "sigmoid", "=", "False", ")", ":", "\n", "        ", "enc", "=", "self", ".", "encoder", "(", "x", ")", "\n", "dec", "=", "self", ".", "decoder", "(", "enc", ")", "\n", "if", "sigmoid", "or", "self", ".", "default_sigmoid", ":", "\n", "            ", "dec", "=", "(", "F", ".", "tanh", "(", "dec", ")", "+", "1", ")", "/", "2.", "# It's actually TanhHHHHHH", "\n", "", "return", "dec", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeAE.train_config": [[296, 302], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "autoencoders.ALILikeAE.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-3", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "240", "*", "self", ".", "epoch_factor", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeAE.preferred_name": [[303, 305], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "\".\"", "+", "self", ".", "netid", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeVAE.__init__": [[308, 354], ["torch.Module.__init__", "max", "range", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dims", ",", "max_channels", "=", "1024", ",", "depth", "=", "6", ",", "n_hidden", "=", "512", ")", ":", "\n", "        ", "assert", "len", "(", "dims", ")", "==", "3", ",", "'Please specify 3 values for dims'", "\n", "super", "(", "ALILikeVAE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "EncKernel", "=", "[", "2", ",", "7", ",", "5", ",", "7", ",", "4", "]", "\n", "EncStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", "]", "\n", "EncDepth", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", "]", "\n", "\n", "# Generator param", "\n", "GenKernel", "=", "[", "4", ",", "7", ",", "5", ",", "7", ",", "2", ",", "1", "]", "\n", "GenStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", "]", "\n", "GenDepth", "=", "[", "256", ",", "128", ",", "64", ",", "32", ",", "32", ",", "dims", "[", "0", "]", "]", "\n", "\n", "self", ".", "epoch_factor", "=", "max", "(", "1", ",", "n_hidden", "//", "256", ")", "\n", "self", ".", "default_sigmoid", "=", "False", "\n", "\n", "remainder_layers", "=", "[", "]", "\n", "self", ".", "netid", "=", "'max.%d.d.%d.nH.%d'", "%", "(", "max_channels", ",", "depth", ",", "n_hidden", ")", "\n", "\n", "# encoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "dims", "[", "0", "]", "\n", "\n", "for", "i", "in", "range", "(", "depth", "-", "1", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "EncDepth", "[", "i", "]", ",", "kernel_size", "=", "EncKernel", "[", "i", "]", ",", "padding", "=", "0", ",", "stride", "=", "EncStride", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "EncDepth", "[", "i", "]", ")", ")", "\n", "in_channels", "=", "EncDepth", "[", "i", "]", "\n", "\n", "", "self", ".", "fc_e_mu", "=", "nn", ".", "Linear", "(", "in_channels", ",", "n_hidden", ")", "\n", "self", ".", "fc_e_std", "=", "nn", ".", "Linear", "(", "in_channels", ",", "n_hidden", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n", "# decoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "n_hidden", "\n", "if", "self", ".", "__class__", "==", "Generic_VAE", ":", "\n", "            ", "in_channels", "=", "in_channels", "//", "2", "\n", "\n", "", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "ConvTranspose2d", "(", "in_channels", ",", "GenDepth", "[", "i", "]", ",", "kernel_size", "=", "GenKernel", "[", "i", "]", ",", "padding", "=", "0", ",", "stride", "=", "GenStride", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "GenDepth", "[", "i", "]", ")", ")", "\n", "in_channels", "=", "GenDepth", "[", "i", "]", "\n", "# Final layer", "\n", "", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeVAE.reparameterize": [[355, 362], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like.mul().add_", "torch.randn_like.mul().add_", "torch.randn_like.mul().add_", "torch.randn_like.mul().add_", "torch.randn_like.mul", "torch.randn_like.mul", "torch.randn_like.mul", "torch.randn_like.mul"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ")", ":", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "return", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "", "else", ":", "\n", "            ", "return", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeVAE.encode": [[363, 368], ["x.size", "autoencoders.ALILikeVAE.encoder", "autoencoders.ALILikeVAE.fc_e_mu", "autoencoders.ALILikeVAE.view"], "methods", ["None"], ["", "", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "size", "(", "0", ")", "\n", "h_out", "=", "self", ".", "encoder", "(", "x", ")", "\n", "code", "=", "self", ".", "fc_e_mu", "(", "h_out", ".", "view", "(", "n_samples", ",", "-", "1", ")", ")", "\n", "return", "code", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeVAE.forward": [[369, 379], ["autoencoders.ALILikeVAE.encoder", "autoencoders.ALILikeVAE.size", "autoencoders.ALILikeVAE.reparameterize", "autoencoders.ALILikeVAE.decoder", "autoencoders.ALILikeVAE.fc_e_mu", "autoencoders.ALILikeVAE.fc_e_std", "autoencoders.ALILikeVAE.view", "autoencoders.ALILikeVAE.view", "autoencoders.ALILikeVAE.view", "autoencoders.ALILikeVAE.size", "autoencoders.ALILikeVAE.size", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResVAE.reparameterize"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "enc", "=", "self", ".", "encoder", "(", "x", ")", "\n", "n_size", "=", "enc", ".", "size", "(", "0", ")", "\n", "mu", ",", "logvar", "=", "self", ".", "fc_e_mu", "(", "enc", ".", "view", "(", "n_size", ",", "-", "1", ")", ")", ",", "self", ".", "fc_e_std", "(", "enc", ".", "view", "(", "n_size", ",", "-", "1", ")", ")", "\n", "self", ".", "last_mu", "=", "mu", "\n", "self", ".", "last_std", "=", "logvar", "\n", "z", "=", "self", ".", "reparameterize", "(", "mu", ",", "logvar", ")", "\n", "dec", "=", "self", ".", "decoder", "(", "z", ".", "view", "(", "n_size", ",", "-", "1", ",", "enc", ".", "size", "(", "2", ")", ",", "enc", ".", "size", "(", "3", ")", ")", ")", "\n", "dec", "=", "(", "F", ".", "tanh", "(", "dec", ")", "+", "1.0", ")", "/", "2.0", "\n", "return", "dec", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeVAE.train_config": [[380, 386], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "autoencoders.ALILikeVAE.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-3", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "240", "*", "self", ".", "epoch_factor", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeVAE.preferred_name": [[387, 389], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "\".\"", "+", "self", ".", "netid", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResAE.__init__": [[391, 440], ["torch.Module.__init__", "max", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "autoencoders.ResidualBlock", "autoencoders.ELU_BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "autoencoders.ResidualBlock", "autoencoders.ELU_BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dims", ",", "max_channels", "=", "1024", ",", "depth", "=", "6", ",", "n_hidden", "=", "512", ")", ":", "\n", "        ", "assert", "len", "(", "dims", ")", "==", "3", ",", "'Please specify 3 values for dims'", "\n", "super", "(", "ALILikeResAE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "EncKernel", "=", "[", "2", ",", "7", ",", "5", ",", "7", ",", "4", ",", "1", "]", "\n", "EncStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", "]", "\n", "EncDepth", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", ",", "n_hidden", "]", "\n", "\n", "# Generator param", "\n", "GenKernel", "=", "[", "4", ",", "7", ",", "5", ",", "7", ",", "2", ",", "1", "]", "\n", "GenStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", "]", "\n", "GenDepth", "=", "[", "256", ",", "128", ",", "64", ",", "32", ",", "32", ",", "dims", "[", "0", "]", "]", "\n", "\n", "self", ".", "epoch_factor", "=", "max", "(", "1", ",", "n_hidden", "//", "256", ")", "\n", "self", ".", "default_sigmoid", "=", "False", "\n", "\n", "remainder_layers", "=", "[", "]", "\n", "self", ".", "netid", "=", "'max.%d.d.%d.nH.%d'", "%", "(", "max_channels", ",", "depth", ",", "n_hidden", ")", "\n", "\n", "# encoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "dims", "[", "0", "]", "\n", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "EncDepth", "[", "i", "]", ",", "kernel_size", "=", "EncKernel", "[", "i", "]", ",", "padding", "=", "0", ",", "stride", "=", "EncStride", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "EncDepth", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "ResidualBlock", "(", "EncDepth", "[", "i", "]", ",", "3", ")", ")", "\n", "modules", ".", "append", "(", "ELU_BatchNorm2d", "(", "EncDepth", "[", "i", "]", ")", ")", "\n", "in_channels", "=", "EncDepth", "[", "i", "]", "\n", "\n", "", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "self", ".", "fc_e_mu", "=", "nn", ".", "Linear", "(", "2", "*", "n_hidden", ",", "n_hidden", ")", "\n", "self", ".", "fc_e_std", "=", "nn", ".", "Linear", "(", "2", "*", "n_hidden", ",", "n_hidden", ")", "\n", "# decoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "n_hidden", "\n", "if", "self", ".", "__class__", "==", "Generic_VAE", ":", "\n", "            ", "in_channels", "=", "in_channels", "//", "2", "\n", "\n", "", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "ConvTranspose2d", "(", "in_channels", ",", "GenDepth", "[", "i", "]", ",", "kernel_size", "=", "GenKernel", "[", "i", "]", ",", "padding", "=", "0", ",", "stride", "=", "GenStride", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "GenDepth", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "ResidualBlock", "(", "GenDepth", "[", "i", "]", ",", "3", ")", ")", "\n", "modules", ".", "append", "(", "ELU_BatchNorm2d", "(", "GenDepth", "[", "i", "]", ")", ")", "\n", "in_channels", "=", "GenDepth", "[", "i", "]", "\n", "# Final layer", "\n", "", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResAE.encode": [[441, 446], ["x.size", "autoencoders.ALILikeResAE.encoder", "autoencoders.ALILikeResAE.view"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "size", "(", "0", ")", "\n", "code", "=", "self", ".", "encoder", "(", "x", ")", "\n", "out", "=", "code", ".", "view", "(", "n_samples", ",", "-", "1", ")", "# flatten to vectors.", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResAE.forward": [[447, 453], ["autoencoders.ALILikeResAE.encoder", "autoencoders.ALILikeResAE.decoder", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "sigmoid", "=", "False", ")", ":", "\n", "        ", "enc", "=", "self", ".", "encoder", "(", "x", ")", "\n", "dec", "=", "self", ".", "decoder", "(", "enc", ")", "\n", "if", "sigmoid", "or", "self", ".", "default_sigmoid", ":", "\n", "            ", "dec", "=", "(", "F", ".", "tanh", "(", "dec", ")", "+", "1", ")", "/", "2.", "# It's actually TanhHHHHHH", "\n", "", "return", "dec", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResAE.train_config": [[454, 460], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "autoencoders.ALILikeResAE.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-3", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "240", "*", "self", ".", "epoch_factor", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResAE.preferred_name": [[461, 463], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "\".\"", "+", "self", ".", "netid", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResVAE.__init__": [[465, 515], ["torch.Module.__init__", "max", "range", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "modules.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "autoencoders.ResidualBlock", "autoencoders.ELU_BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "autoencoders.ResidualBlock", "autoencoders.ELU_BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dims", ",", "max_channels", "=", "1024", ",", "depth", "=", "6", ",", "n_hidden", "=", "512", ")", ":", "\n", "        ", "assert", "len", "(", "dims", ")", "==", "3", ",", "'Please specify 3 values for dims'", "\n", "super", "(", "ALILikeResVAE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "EncKernel", "=", "[", "2", ",", "7", ",", "5", ",", "7", ",", "4", "]", "\n", "EncStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", "]", "\n", "EncDepth", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", "]", "\n", "\n", "# Generator param", "\n", "GenKernel", "=", "[", "4", ",", "7", ",", "5", ",", "7", ",", "2", ",", "1", "]", "\n", "GenStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", "]", "\n", "GenDepth", "=", "[", "256", ",", "128", ",", "64", ",", "32", ",", "32", ",", "dims", "[", "0", "]", "]", "\n", "\n", "self", ".", "epoch_factor", "=", "max", "(", "1", ",", "n_hidden", "//", "256", ")", "\n", "self", ".", "default_sigmoid", "=", "False", "\n", "\n", "remainder_layers", "=", "[", "]", "\n", "self", ".", "netid", "=", "'max.%d.d.%d.nH.%d'", "%", "(", "max_channels", ",", "depth", ",", "n_hidden", ")", "\n", "\n", "# encoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "dims", "[", "0", "]", "\n", "\n", "for", "i", "in", "range", "(", "depth", "-", "1", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "EncDepth", "[", "i", "]", ",", "kernel_size", "=", "EncKernel", "[", "i", "]", ",", "padding", "=", "0", ",", "stride", "=", "EncStride", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "EncDepth", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "ResidualBlock", "(", "EncDepth", "[", "i", "]", ",", "3", ")", ")", "\n", "modules", ".", "append", "(", "ELU_BatchNorm2d", "(", "EncDepth", "[", "i", "]", ")", ")", "\n", "in_channels", "=", "EncDepth", "[", "i", "]", "\n", "\n", "", "self", ".", "fc_e_mu", "=", "nn", ".", "Linear", "(", "in_channels", ",", "n_hidden", ")", "\n", "self", ".", "fc_e_std", "=", "nn", ".", "Linear", "(", "in_channels", ",", "n_hidden", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n", "# decoder ###########################################", "\n", "modules", "=", "[", "]", "\n", "in_channels", "=", "n_hidden", "\n", "if", "self", ".", "__class__", "==", "Generic_VAE", ":", "\n", "            ", "in_channels", "=", "in_channels", "//", "2", "\n", "\n", "", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "modules", ".", "append", "(", "nn", ".", "ConvTranspose2d", "(", "in_channels", ",", "GenDepth", "[", "i", "]", ",", "kernel_size", "=", "GenKernel", "[", "i", "]", ",", "padding", "=", "0", ",", "stride", "=", "GenStride", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "GenDepth", "[", "i", "]", ")", ")", "\n", "modules", ".", "append", "(", "ResidualBlock", "(", "GenDepth", "[", "i", "]", ",", "3", ")", ")", "\n", "modules", ".", "append", "(", "ELU_BatchNorm2d", "(", "GenDepth", "[", "i", "]", ")", ")", "\n", "in_channels", "=", "GenDepth", "[", "i", "]", "\n", "# Final layer", "\n", "", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResVAE.reparameterize": [[516, 523], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like.mul().add_", "torch.randn_like.mul().add_", "torch.randn_like.mul().add_", "torch.randn_like.mul().add_", "torch.randn_like.mul", "torch.randn_like.mul", "torch.randn_like.mul", "torch.randn_like.mul"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ")", ":", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "return", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "", "else", ":", "\n", "            ", "return", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResVAE.encode": [[524, 529], ["x.size", "autoencoders.ALILikeResVAE.encoder", "autoencoders.ALILikeResVAE.fc_e_mu", "autoencoders.ALILikeResVAE.view"], "methods", ["None"], ["", "", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "size", "(", "0", ")", "\n", "h_out", "=", "self", ".", "encoder", "(", "x", ")", "\n", "code", "=", "self", ".", "fc_e_mu", "(", "h_out", ".", "view", "(", "n_samples", ",", "-", "1", ")", ")", "\n", "return", "code", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResVAE.forward": [[530, 540], ["autoencoders.ALILikeResVAE.encoder", "autoencoders.ALILikeResVAE.size", "autoencoders.ALILikeResVAE.reparameterize", "autoencoders.ALILikeResVAE.decoder", "autoencoders.ALILikeResVAE.fc_e_mu", "autoencoders.ALILikeResVAE.fc_e_std", "autoencoders.ALILikeResVAE.view", "autoencoders.ALILikeResVAE.view", "autoencoders.ALILikeResVAE.view", "autoencoders.ALILikeResVAE.size", "autoencoders.ALILikeResVAE.size", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResVAE.reparameterize"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "enc", "=", "self", ".", "encoder", "(", "x", ")", "\n", "n_size", "=", "enc", ".", "size", "(", "0", ")", "\n", "mu", ",", "logvar", "=", "self", ".", "fc_e_mu", "(", "enc", ".", "view", "(", "n_size", ",", "-", "1", ")", ")", ",", "self", ".", "fc_e_std", "(", "enc", ".", "view", "(", "n_size", ",", "-", "1", ")", ")", "\n", "self", ".", "last_mu", "=", "mu", "\n", "self", ".", "last_std", "=", "logvar", "\n", "z", "=", "self", ".", "reparameterize", "(", "mu", ",", "logvar", ")", "\n", "dec", "=", "self", ".", "decoder", "(", "z", ".", "view", "(", "n_size", ",", "-", "1", ",", "enc", ".", "size", "(", "2", ")", ",", "enc", ".", "size", "(", "3", ")", ")", ")", "\n", "dec", "=", "(", "F", ".", "tanh", "(", "dec", ")", "+", "1.0", ")", "/", "2.0", "\n", "return", "dec", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResVAE.train_config": [[541, 547], ["torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "autoencoders.ALILikeResVAE.parameters"], "methods", ["None"], ["", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", "[", "'optim'", "]", ",", "patience", "=", "10", ",", "threshold", "=", "1e-3", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "240", "*", "self", ".", "epoch_factor", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.ALILikeResVAE.preferred_name": [[548, 550], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "\".\"", "+", "self", ".", "netid", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.VAE_Loss.__init__": [[552, 562], ["torch.Module.__init__", "torch.BCELoss", "torch.BCELoss", "torch.BCELoss", "torch.BCELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "VAE_model", ",", "BCE", ")", ":", "\n", "        ", "super", "(", "VAE_Loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#assert VAE_model.__class__ == Generic_VAE, 'Only Generic_VAEs are accepted.'", "\n", "self", ".", "VAE", "=", "VAE_model", "\n", "self", ".", "size_average", "=", "True", "\n", "self", ".", "reduction", "=", "'sum'", "\n", "if", "BCE", ":", "\n", "            ", "self", ".", "loss", "=", "nn", ".", "BCELoss", "(", "size_average", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "loss", "=", "nn", ".", "MSELoss", "(", "size_average", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.autoencoders.VAE_Loss.forward": [[563, 568], ["autoencoders.VAE_Loss.loss", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "X.numel", "logvar.exp", "mu.pow"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "X", ",", "Y", ")", ":", "\n", "        ", "BCE_loss", "=", "self", ".", "loss", "(", "X", ",", "Y", ")", "\n", "mu", ",", "logvar", "=", "self", ".", "VAE", ".", "last_mu", ",", "self", ".", "VAE", ".", "last_std", "\n", "KLD", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "logvar", "-", "mu", ".", "pow", "(", "2", ")", "-", "logvar", ".", "exp", "(", ")", ")", "\n", "return", "(", "BCE_loss", "+", "KLD", ")", "/", "X", ".", "numel", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.__init__": [[10, 98], ["torch.Module.__init__", "ALImodel.DiscriminatorX", "ALImodel.DiscriminatorZ", "ALImodel.DiscriminatorXZ", "ALImodel.Encoder", "ALImodel.Generator", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dims", "=", "(", "1", ",", "64", ",", "64", ")", ",", "n_hidden", "=", "512", ")", ":", "\n", "        ", "super", "(", "ALIModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# Encoder param", "\n", "assert", "len", "(", "dims", ")", "==", "3", "\n", "EncKernel", "=", "[", "5", ",", "4", ",", "4", ",", "4", ",", "4", ",", "1", ",", "1", "]", "\n", "EncStride", "=", "[", "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", "]", "\n", "EncDepth", "=", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", ",", "512", ",", "n_hidden", "]", "\n", "\n", "# Generator param", "\n", "GenKernel", "=", "[", "4", ",", "4", ",", "4", ",", "4", ",", "5", ",", "1", ",", "1", "]", "\n", "GenStride", "=", "[", "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", "]", "\n", "GenDepth", "=", "[", "256", ",", "128", ",", "64", ",", "32", ",", "32", ",", "32", ",", "dims", "[", "0", "]", "]", "\n", "\n", "# Discriminator X param", "\n", "DxKernel", "=", "[", "5", ",", "4", ",", "4", ",", "4", ",", "4", "]", "\n", "DxStride", "=", "[", "1", ",", "2", ",", "1", ",", "2", ",", "1", "]", "\n", "DxDepth", "=", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "\n", "# Discriminator Z param", "\n", "DzKernel", "=", "[", "1", ",", "1", "]", "\n", "DzStride", "=", "[", "1", ",", "1", "]", "\n", "DzDepth", "=", "[", "512", ",", "512", "]", "\n", "\n", "# Concat Discriminator param", "\n", "DxzKernel", "=", "[", "1", ",", "1", ",", "1", "]", "\n", "DxzStride", "=", "[", "1", ",", "1", ",", "1", "]", "\n", "DxzDepth", "=", "[", "1024", ",", "1024", ",", "1", "]", "\n", "\n", "if", "dims", "[", "2", "]", "==", "64", ":", "\n", "# Encoder param", "\n", "            ", "EncKernel", "=", "[", "2", ",", "7", ",", "5", ",", "7", ",", "4", ",", "1", "]", "\n", "EncStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", "]", "\n", "EncDepth", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", ",", "n_hidden", "]", "\n", "\n", "# Generator param", "\n", "GenKernel", "=", "[", "4", ",", "7", ",", "5", ",", "7", ",", "2", ",", "1", "]", "\n", "GenStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", "]", "\n", "GenDepth", "=", "[", "256", ",", "128", ",", "64", ",", "32", ",", "32", ",", "dims", "[", "0", "]", "]", "\n", "\n", "# Discriminator X param", "\n", "DxKernel", "=", "[", "2", ",", "7", ",", "5", ",", "7", ",", "4", "]", "\n", "DxStride", "=", "[", "1", ",", "2", ",", "2", ",", "2", ",", "1", "]", "\n", "DxDepth", "=", "[", "64", ",", "128", ",", "256", ",", "256", ",", "512", "]", "\n", "\n", "# Discriminator Z param", "\n", "DzKernel", "=", "[", "1", ",", "1", "]", "\n", "DzStride", "=", "[", "1", ",", "1", "]", "\n", "DzDepth", "=", "[", "512", ",", "512", "]", "\n", "\n", "# Concat Discriminator param", "\n", "DxzKernel", "=", "[", "1", ",", "1", ",", "1", "]", "\n", "DxzStride", "=", "[", "1", ",", "1", ",", "1", "]", "\n", "DxzDepth", "=", "[", "2048", ",", "2048", ",", "1", "]", "\n", "\n", "", "if", "dims", "[", "2", "]", "==", "128", ":", "\n", "# Generator param", "\n", "            ", "GenKernel", "=", "[", "2", ",", "4", ",", "3", ",", "5", ",", "3", ",", "6", ",", "6", ",", "4", "]", "\n", "GenStride", "=", "[", "1", ",", "3", ",", "2", ",", "1", ",", "2", ",", "3", ",", "1", ",", "1", "]", "\n", "GenDepth", "=", "[", "256", ",", "128", ",", "64", ",", "64", ",", "32", ",", "32", ",", "32", ",", "dims", "[", "0", "]", "]", "\n", "\n", "# Encoder param", "\n", "EncKernel", "=", "GenKernel", "[", ":", ":", "-", "1", "]", "\n", "EncStride", "=", "GenStride", "[", ":", ":", "-", "1", "]", "\n", "EncDepth", "=", "[", "64", ",", "128", ",", "128", ",", "256", ",", "256", ",", "512", ",", "512", ",", "n_hidden", "]", "\n", "\n", "# Discriminator X param", "\n", "DxKernel", "=", "EncKernel", "\n", "DxStride", "=", "EncStride", "\n", "DxDepth", "=", "[", "64", ",", "128", ",", "128", ",", "256", ",", "256", ",", "512", ",", "512", ",", "512", "]", "\n", "\n", "# Discriminator Z param", "\n", "DzKernel", "=", "[", "1", ",", "1", "]", "\n", "DzStride", "=", "[", "1", ",", "1", "]", "\n", "DzDepth", "=", "[", "512", ",", "512", "]", "\n", "\n", "# Concat Discriminator param", "\n", "DxzKernel", "=", "[", "1", ",", "1", ",", "1", "]", "\n", "DxzStride", "=", "[", "1", ",", "1", ",", "1", "]", "\n", "DxzDepth", "=", "[", "2048", ",", "2048", ",", "1", "]", "\n", "", "self", ".", "size", "=", "dims", "[", "2", "]", "\n", "self", ".", "LS", "=", "n_hidden", "\n", "# Create Model", "\n", "self", ".", "DisX", "=", "DiscriminatorX", "(", "KS", "=", "DxKernel", ",", "ST", "=", "DxStride", ",", "DP", "=", "DxDepth", ",", "nc", "=", "dims", "[", "0", "]", ")", "\n", "self", ".", "DisZ", "=", "DiscriminatorZ", "(", "KS", "=", "DzKernel", ",", "ST", "=", "DzStride", ",", "DP", "=", "DzDepth", ",", "LS", "=", "self", ".", "LS", ",", "nc", "=", "dims", "[", "0", "]", ")", "\n", "self", ".", "DisXZ", "=", "DiscriminatorXZ", "(", "KS", "=", "DxzKernel", ",", "ST", "=", "DxzStride", ",", "DP", "=", "DxzDepth", ",", "nc", "=", "dims", "[", "0", "]", ")", "\n", "self", ".", "GenZ", "=", "Encoder", "(", "KS", "=", "EncKernel", ",", "ST", "=", "EncStride", ",", "DP", "=", "EncDepth", ",", "LS", "=", "self", ".", "LS", ",", "nc", "=", "dims", "[", "0", "]", ")", "\n", "self", ".", "GenX", "=", "Generator", "(", "latent_size", "=", "self", ".", "LS", ",", "KS", "=", "GenKernel", ",", "ST", "=", "GenStride", ",", "DP", "=", "GenDepth", ",", "nc", "=", "dims", "[", "0", "]", ")", "\n", "self", ".", "netid", "=", "'Exp_%d_%d'", "%", "(", "dims", "[", "2", "]", ",", "self", ".", "LS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.encode": [[99, 101], ["ALImodel.ALIModel.GenZ"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "GenZ", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.generate": [[102, 104], ["ALImodel.ALIModel.GenX"], "methods", ["None"], ["", "def", "generate", "(", "self", ",", "z", ")", ":", "\n", "        ", "return", "self", ".", "GenX", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.sample": [[105, 113], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "ALImodel.ALIModel.generate"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.generate"], ["", "def", "sample", "(", "self", ",", "n", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        convenience function for sampling.\n        :param n:\n        :return:\n        \"\"\"", "\n", "z", "=", "torch", ".", "randn", "(", "n", ",", "self", ".", "LS", ",", "1", ",", "1", ")", "\n", "return", "self", ".", "generate", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.discriminate": [[114, 118], ["ALImodel.ALIModel.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ALImodel.ALIModel.DisXZ", "ALImodel.ALIModel.DisZ", "ALImodel.ALIModel.DisX"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.encode"], ["", "def", "discriminate", "(", "self", ",", "x", ")", ":", "\n", "        ", "z", "=", "self", ".", "encode", "(", "x", ")", "\n", "cat_feature", "=", "torch", ".", "cat", "(", "(", "self", ".", "DisZ", "(", "z", ")", ",", "self", ".", "DisX", "(", "x", ")", ")", ",", "1", ")", "\n", "return", "self", ".", "DisXZ", "(", "cat_feature", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.forward": [[119, 132], ["ALImodel.ALIModel.generate", "ALImodel.ALIModel.encode", "ALImodel.ALIModel.generate", "ALImodel.ALIModel.generate", "ALImodel.ALIModel.encode", "ALImodel.ALIModel.DisXZ", "ALImodel.ALIModel.DisXZ", "ALImodel.ALIModel.sample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ALImodel.ALIModel.DisZ", "ALImodel.ALIModel.DisX", "ALImodel.ALIModel.DisZ", "ALImodel.ALIModel.DisX"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.generate", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.encode", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.generate", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.generate", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.encode", "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.pixelcnn_setup.sample"], ["", "def", "forward", "(", "self", ",", "x", "=", "None", ",", "z", "=", "None", ")", ":", "\n", "        ", "if", "x", "is", "not", "None", "and", "z", "is", "None", ":", "\n", "            ", "return", "self", ".", "generate", "(", "self", ".", "encode", "(", "x", ")", ")", "\n", "", "elif", "x", "is", "None", "and", "z", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "generate", "(", "z", ")", "\n", "", "elif", "x", "is", "not", "None", "and", "z", "is", "not", "None", ":", "\n", "            ", "gen_x", "=", "self", ".", "generate", "(", "z", ")", "\n", "gen_z", "=", "self", ".", "encode", "(", "x", ")", "\n", "p_real", "=", "self", ".", "DisXZ", "(", "torch", ".", "cat", "(", "(", "self", ".", "DisZ", "(", "gen_z", ")", ",", "self", ".", "DisX", "(", "x", ")", ")", ",", "1", ")", ")", "\n", "p_fake", "=", "self", ".", "DisXZ", "(", "torch", ".", "cat", "(", "(", "self", ".", "DisZ", "(", "z", ")", ",", "self", ".", "DisX", "(", "gen_x", ")", ")", ",", "1", ")", ")", "\n", "return", "p_real", ",", "p_fake", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "sample", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.Generator.__init__": [[136, 177], ["torch.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "ALImodel.Generator.main.add_module", "len", "ALImodel.Generator.main.add_module", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "ALImodel.Generator.main.add_module", "ALImodel.Generator.main.add_module", "len", "str", "len", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "str", "str"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "latent_size", "=", "32", ",", "output_shape", "=", "224", ",", "nc", "=", "1", ",", "KS", "=", "(", "4", ",", "221", ")", ",", "ST", "=", "(", "1", ",", "1", ")", ",", "DP", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "        ", "self", ".", "latent_size", "=", "latent_size", "\n", "self", ".", "output_shape", "=", "output_shape", "\n", "self", ".", "nc", "=", "nc", "\n", "\n", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "#Build ConvTranspose layer", "\n", "self", ".", "main", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "lastdepth", "=", "self", ".", "latent_size", "\n", "OldDim", "=", "1", "\n", "for", "i", "in", "range", "(", "len", "(", "KS", ")", ")", ":", "\n", "#Depth", "\n", "            ", "nnc", "=", "DP", "[", "i", "]", "\n", "#Kernel Size", "\n", "kernel_size", "=", "KS", "[", "i", "]", "\n", "#Stride", "\n", "stride", "=", "ST", "[", "i", "]", "\n", "\n", "#Default value", "\n", "padding", "=", "0", "\n", "output_pading", "=", "0", "\n", "\n", "if", "i", "==", "len", "(", "KS", ")", "-", "1", ":", "\n", "                ", "nnc", "=", "self", ".", "nc", "\n", "\n", "#Add ConvTranspose", "\n", "", "self", ".", "main", ".", "add_module", "(", "\"ConvT_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "lastdepth", ",", "nnc", ",", "kernel_size", ",", "stride", ",", "padding", ",", "output_pading", ",", "bias", "=", "False", ")", ")", "\n", "\n", "#Some regurlarisation", "\n", "if", "i", "!=", "len", "(", "KS", ")", "-", "1", ":", "\n", "                ", "self", ".", "main", ".", "add_module", "(", "\"Relu_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "self", ".", "main", ".", "add_module", "(", "\"BN_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "BatchNorm2d", "(", "nnc", ")", ")", "\n", "#OldDimension (for information)", "\n", "", "OldDim", "=", "(", "OldDim", "-", "1", ")", "*", "stride", "+", "kernel_size", "-", "2", "*", "padding", "+", "output_pading", "\n", "\n", "#Last depth (to pass to next ConvT layer)", "\n", "lastdepth", "=", "nnc", "\n", "#print(\"I=%d K=%d ST=%d Size=%d\" % (i,kernel_size,stride,OldDim))", "\n", "#self.main.add_module(\"Sigmoid\",nn.Sigmoid())", "\n", "", "self", ".", "main", ".", "add_module", "(", "\"Tanh\"", ",", "nn", ".", "Tanh", "(", ")", ")", "#Apparently Tanh is better than Sigmoid", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.Generator.forward": [[178, 180], ["ALImodel.Generator.main"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "main", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.Encoder.__init__": [[184, 213], ["torch.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "len", "ALImodel.Encoder.main.add_module", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ALImodel.Encoder.main.add_module", "ALImodel.Encoder.main.add_module", "str", "len", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "str", "str"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "KS", ",", "ST", ",", "DP", ",", "LS", ",", "nc", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "#Sequential model        ", "\n", "self", ".", "main", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "lastdepth", "=", "nc", "#This is the number of color (1)", "\n", "nnc", "=", "1", "\n", "for", "i", "in", "range", "(", "len", "(", "KS", ")", ")", ":", "\n", "\n", "#Kernel, Stride and Depth from param", "\n", "            ", "kernel_size", "=", "KS", "[", "i", "]", "\n", "stride", "=", "ST", "[", "i", "]", "\n", "nnc", "=", "DP", "[", "i", "]", "\n", "\n", "#No padding!", "\n", "padding", "=", "0", "\n", "output_pading", "=", "0", "\n", "\n", "#Conv layer", "\n", "self", ".", "main", ".", "add_module", "(", "\"Conv_\"", "+", "str", "(", "i", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "lastdepth", ",", "out_channels", "=", "nnc", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ")", "\n", "\n", "#Some regul", "\n", "if", "i", "!=", "len", "(", "KS", ")", "-", "1", ":", "\n", "                ", "self", ".", "main", ".", "add_module", "(", "\"LRelu_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "main", ".", "add_module", "(", "\"BN_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "BatchNorm2d", "(", "nnc", ")", ")", "\n", "", "lastdepth", "=", "nnc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.Encoder.forward": [[214, 216], ["ALImodel.Encoder.main"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "main", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.DiscriminatorX.__init__": [[220, 248], ["torch.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "len", "ALImodel.DiscriminatorX.main.add_module", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ALImodel.DiscriminatorX.main.add_module", "ALImodel.DiscriminatorX.main.add_module", "str", "len", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "str", "str"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "KS", ",", "ST", ",", "DP", ",", "nc", ")", ":", "\n", "        ", "super", "(", "DiscriminatorX", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "main", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "lastdepth", "=", "nc", "\n", "nnc", "=", "1", "\n", "dp", "=", "0.5", "#Dropout rate is 0.5 for first", "\n", "for", "i", "in", "range", "(", "len", "(", "KS", ")", ")", ":", "\n", "\n", "#Kernel, Stride and Depth from param", "\n", "            ", "kernel_size", "=", "KS", "[", "i", "]", "\n", "stride", "=", "ST", "[", "i", "]", "\n", "nnc", "=", "DP", "[", "i", "]", "\n", "\n", "#No padding", "\n", "padding", "=", "0", "\n", "output_pading", "=", "0", "\n", "\n", "self", ".", "main", ".", "add_module", "(", "\"Conv_\"", "+", "str", "(", "i", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "lastdepth", ",", "out_channels", "=", "nnc", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ")", "\n", "#Some regularization", "\n", "if", "i", "!=", "len", "(", "KS", ")", "-", "1", ":", "\n", "                ", "self", ".", "main", ".", "add_module", "(", "\"LRelu_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "main", ".", "add_module", "(", "\"DropOut_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "Dropout", "(", "dp", ")", ")", "\n", "\n", "", "lastdepth", "=", "nnc", "\n", "dp", "=", "0.2", "#New dropout rate", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.DiscriminatorX.forward": [[250, 252], ["ALImodel.DiscriminatorX.main"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "main", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.DiscriminatorZ.__init__": [[256, 284], ["torch.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "len", "ALImodel.DiscriminatorZ.main.add_module", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ALImodel.DiscriminatorZ.main.add_module", "ALImodel.DiscriminatorZ.main.add_module", "str", "len", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "str", "str"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "KS", ",", "ST", ",", "DP", ",", "LS", ",", "nc", ")", ":", "\n", "        ", "super", "(", "DiscriminatorZ", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "main", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "lastdepth", "=", "LS", "\n", "nnc", "=", "1", "\n", "dp", "=", "0.5", "\n", "for", "i", "in", "range", "(", "len", "(", "KS", ")", ")", ":", "\n", "\n", "#Kernel, Stride and Depth from param", "\n", "            ", "kernel_size", "=", "KS", "[", "i", "]", "\n", "stride", "=", "ST", "[", "i", "]", "\n", "nnc", "=", "DP", "[", "i", "]", "\n", "\n", "#No padding!", "\n", "padding", "=", "0", "\n", "output_pading", "=", "0", "\n", "\n", "#Conv", "\n", "self", ".", "main", ".", "add_module", "(", "\"Conv_\"", "+", "str", "(", "i", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "lastdepth", ",", "out_channels", "=", "nnc", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ")", "\n", "\n", "if", "i", "!=", "len", "(", "KS", ")", "-", "1", ":", "\n", "                ", "self", ".", "main", ".", "add_module", "(", "\"LRelu_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "main", ".", "add_module", "(", "\"DropOut_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "Dropout", "(", "dp", ")", ")", "\n", "", "lastdepth", "=", "nnc", "\n", "dp", "=", "0.2", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.DiscriminatorZ.forward": [[285, 287], ["ALImodel.DiscriminatorZ.main"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "main", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.DiscriminatorXZ.__init__": [[290, 318], ["torch.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "ALImodel.DiscriminatorXZ.main.add_module", "len", "ALImodel.DiscriminatorXZ.main.add_module", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ALImodel.DiscriminatorXZ.main.add_module", "ALImodel.DiscriminatorXZ.main.add_module", "str", "len", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "str", "str"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "KS", ",", "ST", ",", "DP", ",", "nc", ")", ":", "\n", "        ", "super", "(", "DiscriminatorXZ", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "main", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "lastdepth", "=", "1024", "\n", "nnc", "=", "1", "\n", "dp", "=", "0.5", "\n", "for", "i", "in", "range", "(", "len", "(", "KS", ")", ")", ":", "\n", "\n", "            ", "kernel_size", "=", "KS", "[", "i", "]", "\n", "stride", "=", "ST", "[", "i", "]", "\n", "nnc", "=", "DP", "[", "i", "]", "\n", "\n", "padding", "=", "0", "\n", "output_pading", "=", "0", "\n", "\n", "self", ".", "main", ".", "add_module", "(", "\"Conv_\"", "+", "str", "(", "i", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "lastdepth", ",", "out_channels", "=", "nnc", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ")", "\n", "\n", "\n", "if", "i", "!=", "len", "(", "KS", ")", "-", "1", ":", "\n", "                ", "self", ".", "main", ".", "add_module", "(", "\"LRelu_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "main", ".", "add_module", "(", "\"DropOut_\"", "+", "str", "(", "i", ")", ",", "torch", ".", "nn", ".", "Dropout", "(", "dp", ")", ")", "\n", "\n", "", "lastdepth", "=", "nnc", "\n", "dp", "=", "0.2", "\n", "", "self", ".", "main", ".", "add_module", "(", "\"Sigmoid\"", ",", "torch", ".", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.DiscriminatorXZ.forward": [[321, 323], ["ALImodel.DiscriminatorXZ.main"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "main", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path": [[3, 10], ["os.path.join", "os.path.join", "os.path.join"], "function", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.nin.__init__": [[9, 13], ["torch.Module.__init__", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "nin", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lin_a", "=", "wn", "(", "nn", ".", "Linear", "(", "dim_in", ",", "dim_out", ")", ")", "\n", "self", ".", "dim_out", "=", "dim_out", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.nin.forward": [[14, 25], ["x.permute.permute.permute", "layers.nin.lin_a", "out.view.view.view", "out.view.view.permute", "int", "x.permute.permute.contiguous().view", "x.permute.permute.size", "x.permute.permute.contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "og_x", "=", "x", "\n", "# assumes pytorch ordering", "\n", "\"\"\" a network in network layer (1x1 CONV) \"\"\"", "\n", "# TODO : try with original ordering", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "shp", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "out", "=", "self", ".", "lin_a", "(", "x", ".", "contiguous", "(", ")", ".", "view", "(", "shp", "[", "0", "]", "*", "shp", "[", "1", "]", "*", "shp", "[", "2", "]", ",", "shp", "[", "3", "]", ")", ")", "\n", "shp", "[", "-", "1", "]", "=", "self", ".", "dim_out", "\n", "out", "=", "out", ".", "view", "(", "shp", ")", "\n", "return", "out", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.down_shifted_conv2d.__init__": [[28, 48], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "int", "int", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "utils.down_shift", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.down_shift"], ["    ", "def", "__init__", "(", "self", ",", "num_filters_in", ",", "num_filters_out", ",", "filter_size", "=", "(", "2", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "\n", "shift_output_down", "=", "False", ",", "norm", "=", "'weight_norm'", ")", ":", "\n", "        ", "super", "(", "down_shifted_conv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "norm", "in", "[", "None", ",", "'batch_norm'", ",", "'weight_norm'", "]", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "num_filters_in", ",", "num_filters_out", ",", "filter_size", ",", "stride", ")", "\n", "self", ".", "shift_output_down", "=", "shift_output_down", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "int", "(", "(", "filter_size", "[", "1", "]", "-", "1", ")", "/", "2", ")", ",", "# pad left", "\n", "int", "(", "(", "filter_size", "[", "1", "]", "-", "1", ")", "/", "2", ")", ",", "# pad right", "\n", "filter_size", "[", "0", "]", "-", "1", ",", "# pad top", "\n", "0", ")", ")", "# pad down", "\n", "\n", "if", "norm", "==", "'weight_norm'", ":", "\n", "            ", "self", ".", "conv", "==", "wn", "(", "self", ".", "conv", ")", "\n", "", "elif", "norm", "==", "'batch_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_filters_out", ")", "\n", "\n", "", "if", "shift_output_down", ":", "\n", "            ", "self", ".", "down_shift", "=", "lambda", "x", ":", "down_shift", "(", "x", ",", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "0", ",", "0", ",", "1", ",", "0", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.down_shifted_conv2d.forward": [[49, 54], ["layers.down_shifted_conv2d.pad", "layers.down_shifted_conv2d.conv", "layers.down_shifted_conv2d.bn", "layers.down_shifted_conv2d.down_shift"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.down_shift"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "pad", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "if", "self", ".", "norm", "==", "'batch_norm'", "else", "x", "\n", "return", "self", ".", "down_shift", "(", "x", ")", "if", "self", ".", "shift_output_down", "else", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.down_shifted_deconv2d.__init__": [[57, 63], ["torch.Module.__init__", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filters_in", ",", "num_filters_out", ",", "filter_size", "=", "(", "2", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "        ", "super", "(", "down_shifted_deconv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "deconv", "=", "wn", "(", "nn", ".", "ConvTranspose2d", "(", "num_filters_in", ",", "num_filters_out", ",", "filter_size", ",", "stride", ",", "\n", "output_padding", "=", "1", ")", ")", "\n", "self", ".", "filter_size", "=", "filter_size", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.down_shifted_deconv2d.forward": [[64, 69], ["layers.down_shifted_deconv2d.deconv", "int", "layers.down_shifted_deconv2d.size", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "deconv", "(", "x", ")", "\n", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "return", "x", "[", ":", ",", ":", ",", ":", "(", "xs", "[", "2", "]", "-", "self", ".", "filter_size", "[", "0", "]", "+", "1", ")", ",", "\n", "int", "(", "(", "self", ".", "filter_size", "[", "1", "]", "-", "1", ")", "/", "2", ")", ":", "(", "xs", "[", "3", "]", "-", "int", "(", "(", "self", ".", "filter_size", "[", "1", "]", "-", "1", ")", "/", "2", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.down_right_shifted_conv2d.__init__": [[72, 89], ["torch.Module.__init__", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "utils.right_shift", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.right_shift"], ["    ", "def", "__init__", "(", "self", ",", "num_filters_in", ",", "num_filters_out", ",", "filter_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "\n", "shift_output_right", "=", "False", ",", "norm", "=", "'weight_norm'", ")", ":", "\n", "        ", "super", "(", "down_right_shifted_conv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "norm", "in", "[", "None", ",", "'batch_norm'", ",", "'weight_norm'", "]", "\n", "self", ".", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "filter_size", "[", "1", "]", "-", "1", ",", "0", ",", "filter_size", "[", "0", "]", "-", "1", ",", "0", ")", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "num_filters_in", ",", "num_filters_out", ",", "filter_size", ",", "stride", "=", "stride", ")", "\n", "self", ".", "shift_output_right", "=", "shift_output_right", "\n", "self", ".", "norm", "=", "norm", "\n", "\n", "if", "norm", "==", "'weight_norm'", ":", "\n", "            ", "self", ".", "conv", "==", "wn", "(", "self", ".", "conv", ")", "\n", "", "elif", "norm", "==", "'batch_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_filters_out", ")", "\n", "\n", "", "if", "shift_output_right", ":", "\n", "            ", "self", ".", "right_shift", "=", "lambda", "x", ":", "right_shift", "(", "x", ",", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "1", ",", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.down_right_shifted_conv2d.forward": [[90, 95], ["layers.down_right_shifted_conv2d.pad", "layers.down_right_shifted_conv2d.conv", "layers.down_right_shifted_conv2d.bn", "layers.down_right_shifted_conv2d.right_shift"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.right_shift"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "pad", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "if", "self", ".", "norm", "==", "'batch_norm'", "else", "x", "\n", "return", "self", ".", "right_shift", "(", "x", ")", "if", "self", ".", "shift_output_right", "else", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.down_right_shifted_deconv2d.__init__": [[98, 105], ["torch.Module.__init__", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filters_in", ",", "num_filters_out", ",", "filter_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "\n", "shift_output_right", "=", "False", ")", ":", "\n", "        ", "super", "(", "down_right_shifted_deconv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "deconv", "=", "wn", "(", "nn", ".", "ConvTranspose2d", "(", "num_filters_in", ",", "num_filters_out", ",", "filter_size", ",", "\n", "stride", ",", "output_padding", "=", "1", ")", ")", "\n", "self", ".", "filter_size", "=", "filter_size", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.down_right_shifted_deconv2d.forward": [[106, 111], ["layers.down_right_shifted_deconv2d.deconv", "int", "layers.down_right_shifted_deconv2d.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "deconv", "(", "x", ")", "\n", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", "(", "xs", "[", "2", "]", "-", "self", ".", "filter_size", "[", "0", "]", "+", "1", ")", ":", ",", ":", "(", "xs", "[", "3", "]", "-", "self", ".", "filter_size", "[", "1", "]", "+", "1", ")", "]", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.gated_resnet.__init__": [[119, 130], ["torch.Module.__init__", "conv_op", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "conv_op", "layers.nin"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filters", ",", "conv_op", ",", "nonlinearity", "=", "concat_elu", ",", "skip_connection", "=", "0", ")", ":", "\n", "        ", "super", "(", "gated_resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "skip_connection", "=", "skip_connection", "\n", "self", ".", "nonlinearity", "=", "nonlinearity", "\n", "self", ".", "conv_input", "=", "conv_op", "(", "2", "*", "num_filters", ",", "num_filters", ")", "# cuz of concat elu", "\n", "\n", "if", "skip_connection", "!=", "0", ":", "\n", "            ", "self", ".", "nin_skip", "=", "nin", "(", "2", "*", "skip_connection", "*", "num_filters", ",", "num_filters", ")", "\n", "\n", "", "self", ".", "dropout", "=", "nn", ".", "Dropout2d", "(", "0.5", ")", "\n", "self", ".", "conv_out", "=", "conv_op", "(", "2", "*", "num_filters", ",", "2", "*", "num_filters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.layers.gated_resnet.forward": [[132, 142], ["layers.gated_resnet.conv_input", "layers.gated_resnet.nonlinearity", "layers.gated_resnet.dropout", "layers.gated_resnet.conv_out", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "layers.gated_resnet.nonlinearity", "layers.gated_resnet.nin_skip", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "layers.gated_resnet.nonlinearity"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "og_x", ",", "a", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_input", "(", "self", ".", "nonlinearity", "(", "og_x", ")", ")", "\n", "if", "a", "is", "not", "None", ":", "\n", "            ", "x", "+=", "self", ".", "nin_skip", "(", "self", ".", "nonlinearity", "(", "a", ")", ")", "\n", "", "x", "=", "self", ".", "nonlinearity", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_out", "(", "x", ")", "\n", "a", ",", "b", "=", "torch", ".", "chunk", "(", "x", ",", "2", ",", "dim", "=", "1", ")", "\n", "c3", "=", "a", "*", "F", ".", "sigmoid", "(", "b", ")", "\n", "return", "og_x", "+", "c3", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.model.PixelCNNLayer_up.__init__": [[9, 21], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "layers.gated_resnet", "layers.gated_resnet", "range", "range"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nr_resnet", ",", "nr_filters", ",", "resnet_nonlinearity", ")", ":", "\n", "        ", "super", "(", "PixelCNNLayer_up", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nr_resnet", "=", "nr_resnet", "\n", "# stream from pixels above", "\n", "self", ".", "u_stream", "=", "nn", ".", "ModuleList", "(", "[", "gated_resnet", "(", "nr_filters", ",", "down_shifted_conv2d", ",", "\n", "resnet_nonlinearity", ",", "skip_connection", "=", "0", ")", "\n", "for", "_", "in", "range", "(", "nr_resnet", ")", "]", ")", "\n", "\n", "# stream from pixels above and to thes left", "\n", "self", ".", "ul_stream", "=", "nn", ".", "ModuleList", "(", "[", "gated_resnet", "(", "nr_filters", ",", "down_right_shifted_conv2d", ",", "\n", "resnet_nonlinearity", ",", "skip_connection", "=", "1", ")", "\n", "for", "_", "in", "range", "(", "nr_resnet", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.model.PixelCNNLayer_up.forward": [[22, 32], ["range"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "u", ",", "ul", ")", ":", "\n", "        ", "u_list", ",", "ul_list", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "nr_resnet", ")", ":", "\n", "            ", "u", "=", "self", ".", "u_stream", "[", "i", "]", "(", "u", ")", "\n", "ul", "=", "self", ".", "ul_stream", "[", "i", "]", "(", "ul", ",", "a", "=", "u", ")", "\n", "u_list", "+=", "[", "u", "]", "\n", "ul_list", "+=", "[", "ul", "]", "\n", "\n", "", "return", "u_list", ",", "ul_list", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.model.PixelCNNLayer_down.__init__": [[35, 47], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "layers.gated_resnet", "layers.gated_resnet", "range", "range"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nr_resnet", ",", "nr_filters", ",", "resnet_nonlinearity", ")", ":", "\n", "        ", "super", "(", "PixelCNNLayer_down", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nr_resnet", "=", "nr_resnet", "\n", "# stream from pixels above", "\n", "self", ".", "u_stream", "=", "nn", ".", "ModuleList", "(", "[", "gated_resnet", "(", "nr_filters", ",", "down_shifted_conv2d", ",", "\n", "resnet_nonlinearity", ",", "skip_connection", "=", "1", ")", "\n", "for", "_", "in", "range", "(", "nr_resnet", ")", "]", ")", "\n", "\n", "# stream from pixels above and to thes left", "\n", "self", ".", "ul_stream", "=", "nn", ".", "ModuleList", "(", "[", "gated_resnet", "(", "nr_filters", ",", "down_right_shifted_conv2d", ",", "\n", "resnet_nonlinearity", ",", "skip_connection", "=", "2", ")", "\n", "for", "_", "in", "range", "(", "nr_resnet", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.model.PixelCNNLayer_down.forward": [[48, 54], ["range", "u_list.pop", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ul_list.pop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "u", ",", "ul", ",", "u_list", ",", "ul_list", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "nr_resnet", ")", ":", "\n", "            ", "u", "=", "self", ".", "u_stream", "[", "i", "]", "(", "u", ",", "a", "=", "u_list", ".", "pop", "(", ")", ")", "\n", "ul", "=", "self", ".", "ul_stream", "[", "i", "]", "(", "ul", ",", "a", "=", "torch", ".", "cat", "(", "(", "u", ",", "ul_list", ".", "pop", "(", ")", ")", ",", "1", ")", ")", "\n", "\n", "", "return", "u", ",", "ul", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.model.PixelCNN.__init__": [[57, 103], ["torch.Module.__init__", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "layers.down_shifted_conv2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "layers.nin", "Exception", "utils.concat_elu", "model.PixelCNNLayer_down", "model.PixelCNNLayer_up", "layers.down_shifted_conv2d", "layers.down_right_shifted_conv2d", "layers.down_shifted_deconv2d", "layers.down_right_shifted_deconv2d", "layers.down_shifted_conv2d", "layers.down_right_shifted_conv2d", "range", "range", "range", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.concat_elu"], ["    ", "def", "__init__", "(", "self", ",", "nr_resnet", "=", "5", ",", "nr_filters", "=", "80", ",", "nr_logistic_mix", "=", "10", ",", "\n", "resnet_nonlinearity", "=", "'concat_elu'", ",", "input_channels", "=", "3", ")", ":", "\n", "        ", "super", "(", "PixelCNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "netid", "=", "'nr-resnet{}.nr-filters{}.nr-logmix{}'", ".", "format", "(", "nr_resnet", ",", "nr_filters", ",", "nr_logistic_mix", ")", "\n", "\n", "if", "resnet_nonlinearity", "==", "'concat_elu'", ":", "\n", "            ", "self", ".", "resnet_nonlinearity", "=", "lambda", "x", ":", "concat_elu", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'right now only concat elu is supported as resnet nonlinearity.'", ")", "\n", "\n", "", "self", ".", "nr_filters", "=", "nr_filters", "\n", "self", ".", "input_channels", "=", "input_channels", "\n", "self", ".", "nr_logistic_mix", "=", "nr_logistic_mix", "\n", "self", ".", "right_shift_pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "1", ",", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "down_shift_pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "0", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n", "down_nr_resnet", "=", "[", "nr_resnet", "]", "+", "[", "nr_resnet", "+", "1", "]", "*", "2", "\n", "self", ".", "down_layers", "=", "nn", ".", "ModuleList", "(", "[", "PixelCNNLayer_down", "(", "down_nr_resnet", "[", "i", "]", ",", "nr_filters", ",", "\n", "self", ".", "resnet_nonlinearity", ")", "for", "i", "in", "range", "(", "3", ")", "]", ")", "\n", "\n", "self", ".", "up_layers", "=", "nn", ".", "ModuleList", "(", "[", "PixelCNNLayer_up", "(", "nr_resnet", ",", "nr_filters", ",", "\n", "self", ".", "resnet_nonlinearity", ")", "for", "_", "in", "range", "(", "3", ")", "]", ")", "\n", "\n", "self", ".", "downsize_u_stream", "=", "nn", ".", "ModuleList", "(", "[", "down_shifted_conv2d", "(", "nr_filters", ",", "nr_filters", ",", "\n", "stride", "=", "(", "2", ",", "2", ")", ")", "for", "_", "in", "range", "(", "2", ")", "]", ")", "\n", "\n", "self", ".", "downsize_ul_stream", "=", "nn", ".", "ModuleList", "(", "[", "down_right_shifted_conv2d", "(", "nr_filters", ",", "\n", "nr_filters", ",", "stride", "=", "(", "2", ",", "2", ")", ")", "for", "_", "in", "range", "(", "2", ")", "]", ")", "\n", "\n", "self", ".", "upsize_u_stream", "=", "nn", ".", "ModuleList", "(", "[", "down_shifted_deconv2d", "(", "nr_filters", ",", "nr_filters", ",", "\n", "stride", "=", "(", "2", ",", "2", ")", ")", "for", "_", "in", "range", "(", "2", ")", "]", ")", "\n", "\n", "self", ".", "upsize_ul_stream", "=", "nn", ".", "ModuleList", "(", "[", "down_right_shifted_deconv2d", "(", "nr_filters", ",", "\n", "nr_filters", ",", "stride", "=", "(", "2", ",", "2", ")", ")", "for", "_", "in", "range", "(", "2", ")", "]", ")", "\n", "\n", "self", ".", "u_init", "=", "down_shifted_conv2d", "(", "input_channels", "+", "1", ",", "nr_filters", ",", "filter_size", "=", "(", "2", ",", "3", ")", ",", "\n", "shift_output_down", "=", "True", ")", "\n", "\n", "self", ".", "ul_init", "=", "nn", ".", "ModuleList", "(", "[", "down_shifted_conv2d", "(", "input_channels", "+", "1", ",", "nr_filters", ",", "\n", "filter_size", "=", "(", "1", ",", "3", ")", ",", "shift_output_down", "=", "True", ")", ",", "\n", "down_right_shifted_conv2d", "(", "input_channels", "+", "1", ",", "nr_filters", ",", "\n", "filter_size", "=", "(", "2", ",", "1", ")", ",", "shift_output_right", "=", "True", ")", "]", ")", "\n", "\n", "num_mix", "=", "3", "if", "self", ".", "input_channels", "==", "1", "else", "10", "\n", "self", ".", "nin_out", "=", "nin", "(", "nr_filters", ",", "num_mix", "*", "nr_logistic_mix", ")", "\n", "self", ".", "init_padding", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.model.PixelCNN.preferred_name": [[104, 106], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "\".\"", "+", "self", ".", "netid", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.model.PixelCNN.forward": [[107, 157], ["range", "u_list.pop", "ul_list.pop", "range", "model.PixelCNN.nin_out", "pdb.set_trace", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.PixelCNN.u_init", "torch.elu", "torch.elu", "torch.elu", "len", "len", "int", "torch.ones.cuda", "torch.ones.cuda", "torch.ones.cuda", "int", "torch.ones.cuda", "torch.ones.cuda", "torch.ones.cuda", "model.PixelCNN.init_padding.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "sample", "=", "False", ")", ":", "\n", "# The input must be in [-1, 1]", "\n", "        ", "if", "not", "sample", ":", "\n", "            ", "x", "=", "(", "x", "-", "0.5", ")", "*", "2", "\n", "\n", "# similar as done in the tf repo :  ", "\n", "", "if", "(", "self", ".", "init_padding", "is", "None", "or", "self", ".", "init_padding", ".", "size", "(", "0", ")", "!=", "x", ".", "size", "(", "0", ")", ")", "and", "not", "sample", ":", "\n", "            ", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "padding", "=", "torch", ".", "ones", "(", "xs", "[", "0", "]", ",", "1", ",", "xs", "[", "2", "]", ",", "xs", "[", "3", "]", ")", "\n", "self", ".", "init_padding", "=", "padding", ".", "cuda", "(", ")", "if", "x", ".", "is_cuda", "else", "padding", "\n", "\n", "", "if", "sample", ":", "\n", "            ", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "padding", "=", "torch", ".", "ones", "(", "xs", "[", "0", "]", ",", "1", ",", "xs", "[", "2", "]", ",", "xs", "[", "3", "]", ")", "\n", "padding", "=", "padding", ".", "cuda", "(", ")", "if", "x", ".", "is_cuda", "else", "padding", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "padding", ")", ",", "1", ")", "\n", "\n", "###      UP PASS    ###", "\n", "", "x", "=", "x", "if", "sample", "else", "torch", ".", "cat", "(", "(", "x", ",", "self", ".", "init_padding", ")", ",", "1", ")", "\n", "u_list", "=", "[", "self", ".", "u_init", "(", "x", ")", "]", "\n", "ul_list", "=", "[", "self", ".", "ul_init", "[", "0", "]", "(", "x", ")", "+", "self", ".", "ul_init", "[", "1", "]", "(", "x", ")", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "# resnet block", "\n", "            ", "u_out", ",", "ul_out", "=", "self", ".", "up_layers", "[", "i", "]", "(", "u_list", "[", "-", "1", "]", ",", "ul_list", "[", "-", "1", "]", ")", "\n", "u_list", "+=", "u_out", "\n", "ul_list", "+=", "ul_out", "\n", "\n", "if", "i", "!=", "2", ":", "\n", "# downscale (only twice)", "\n", "                ", "u_list", "+=", "[", "self", ".", "downsize_u_stream", "[", "i", "]", "(", "u_list", "[", "-", "1", "]", ")", "]", "\n", "ul_list", "+=", "[", "self", ".", "downsize_ul_stream", "[", "i", "]", "(", "ul_list", "[", "-", "1", "]", ")", "]", "\n", "\n", "###    DOWN PASS    ###", "\n", "", "", "u", "=", "u_list", ".", "pop", "(", ")", "\n", "ul", "=", "ul_list", ".", "pop", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "# resnet block", "\n", "            ", "u", ",", "ul", "=", "self", ".", "down_layers", "[", "i", "]", "(", "u", ",", "ul", ",", "u_list", ",", "ul_list", ")", "\n", "\n", "# upscale (only twice)", "\n", "if", "i", "!=", "2", ":", "\n", "                ", "u", "=", "self", ".", "upsize_u_stream", "[", "i", "]", "(", "u", ")", "\n", "ul", "=", "self", ".", "upsize_ul_stream", "[", "i", "]", "(", "ul", ")", "\n", "\n", "", "", "x_out", "=", "self", ".", "nin_out", "(", "F", ".", "elu", "(", "ul", ")", ")", "\n", "\n", "assert", "len", "(", "u_list", ")", "==", "len", "(", "ul_list", ")", "==", "0", ",", "pdb", ".", "set_trace", "(", ")", "\n", "\n", "return", "x_out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.PCNN_Loss.__init__": [[155, 163], ["torch.Module.__init__", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log"], ["    ", "def", "__init__", "(", "self", ",", "one_d", ")", ":", "\n", "        ", "super", "(", "PCNN_Loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "size_average", "=", "True", "\n", "self", ".", "log2", "=", "np", ".", "log", "(", "2.0", ")", "\n", "if", "one_d", ":", "\n", "            ", "self", ".", "loss_func", "=", "discretized_mix_logistic_loss_1d", "\n", "", "else", ":", "\n", "            ", "self", ".", "loss_func", "=", "discretized_mix_logistic_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.PCNN_Loss.forward": [[164, 174], ["utils.PCNN_Loss.loss_func", "Y.numel"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "X", ",", "Y", ",", "do_reduce", "=", "True", ")", ":", "\n", "# The input must be in [-1, 1], it is [0, 1] by default.", "\n", "        ", "Y", "=", "(", "Y", "-", "0.5", ")", "*", "2", "\n", "# Get the loss", "\n", "loss", "=", "self", ".", "loss_func", "(", "Y", ",", "X", ",", "do_reduce", "=", "do_reduce", ")", "\n", "deno", "=", "self", ".", "log2", "\n", "if", "do_reduce", ":", "\n", "            ", "obs", "=", "Y", ".", "numel", "(", ")", "\n", "deno", "=", "deno", "*", "obs", "\n", "", "return", "loss", "/", "deno", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.concat_elu": [[8, 13], ["torch.elu", "len", "torch.cat", "torch.cat", "torch.cat", "x.size"], "function", ["None"], ["def", "concat_elu", "(", "x", ")", ":", "\n", "    ", "\"\"\" like concatenated ReLU (http://arxiv.org/abs/1603.05201), but then with ELU \"\"\"", "\n", "# Pytorch ordering", "\n", "axis", "=", "len", "(", "x", ".", "size", "(", ")", ")", "-", "3", "\n", "return", "F", ".", "elu", "(", "torch", ".", "cat", "(", "[", "x", ",", "-", "x", "]", ",", "dim", "=", "axis", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.log_sum_exp": [[15, 22], ["torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "len", "torch.log", "torch.log", "torch.log", "x.size", "torch.sum", "torch.sum", "torch.sum", "torch.exp", "torch.exp", "torch.exp"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log"], ["", "def", "log_sum_exp", "(", "x", ")", ":", "\n", "    ", "\"\"\" numerically stable log_sum_exp implementation that prevents overflow \"\"\"", "\n", "# TF ordering", "\n", "axis", "=", "len", "(", "x", ".", "size", "(", ")", ")", "-", "1", "\n", "m", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "dim", "=", "axis", ")", "\n", "m2", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "dim", "=", "axis", ",", "keepdim", "=", "True", ")", "\n", "return", "m", "+", "torch", ".", "log", "(", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "x", "-", "m2", ")", ",", "dim", "=", "axis", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.log_prob_from_logits": [[24, 30], ["torch.max", "torch.max", "torch.max", "len", "torch.log", "torch.log", "torch.log", "x.size", "torch.sum", "torch.sum", "torch.sum", "torch.exp", "torch.exp", "torch.exp"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log"], ["", "def", "log_prob_from_logits", "(", "x", ")", ":", "\n", "    ", "\"\"\" numerically stable log_softmax implementation that prevents overflow \"\"\"", "\n", "# TF ordering", "\n", "axis", "=", "len", "(", "x", ".", "size", "(", ")", ")", "-", "1", "\n", "m", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "dim", "=", "axis", ",", "keepdim", "=", "True", ")", "\n", "return", "x", "-", "m", "-", "torch", ".", "log", "(", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "x", "-", "m", ")", ",", "dim", "=", "axis", ",", "keepdim", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.discretized_mix_logistic_loss": [[32, 103], ["x.contiguous.permute", "l[].contiguous().view.permute", "int", "l[].contiguous().view", "torch.clamp", "torch.clamp", "torch.clamp", "torch.tanh", "x.contiguous.contiguous", "torch.cat", "torch.cat", "torch.cat", "torch.exp", "torch.exp", "torch.exp", "torch.sigmoid", "torch.sigmoid", "int", "int", "x.contiguous.unsqueeze", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.softplus", "torch.softplus", "torch.sum", "torch.sum", "torch.sum", "utils.log_prob_from_logits", "utils.log_sum_exp", "lse_val.view().mean.view().mean", "x.contiguous.size", "l[].contiguous().view.size", "l[].contiguous", "means[].unsqueeze", "torch.softplus", "torch.log", "torch.log", "torch.log", "torch.sum", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.clamp", "torch.clamp", "torch.clamp", "numpy.log", "utils.log_sum_exp", "lse_val.view().mean.view", "lse_val.view().mean.size"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.log_prob_from_logits", "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.log_sum_exp", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.log_sum_exp"], ["", "def", "discretized_mix_logistic_loss", "(", "x", ",", "l", ",", "do_reduce", "=", "True", ")", ":", "\n", "    ", "\"\"\" log-likelihood for mixture of discretized logistics, assumes the data has been rescaled to [-1,1] interval \"\"\"", "\n", "# Pytorch ordering", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "l", "=", "l", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "\n", "# here and below: unpacking the params of the mixture of logistics", "\n", "nr_mix", "=", "int", "(", "ls", "[", "-", "1", "]", "/", "10", ")", "\n", "logit_probs", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "l", "=", "l", "[", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "]", ".", "contiguous", "(", ")", ".", "view", "(", "xs", "+", "[", "nr_mix", "*", "3", "]", ")", "# 3 for mean, scale, coef", "\n", "means", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "# log_scales = torch.max(l[:, :, :, :, nr_mix:2 * nr_mix], -7.)", "\n", "log_scales", "=", "torch", ".", "clamp", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "2", "*", "nr_mix", "]", ",", "min", "=", "-", "7.", ")", "\n", "\n", "coeffs", "=", "F", ".", "tanh", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "2", "*", "nr_mix", ":", "3", "*", "nr_mix", "]", ")", "\n", "# here and below: getting the means and adjusting them based on preceding", "\n", "# sub-pixels", "\n", "x", "=", "x", ".", "contiguous", "(", ")", "\n", "x", "=", "x", ".", "unsqueeze", "(", "-", "1", ")", "+", "torch", ".", "zeros", "(", "xs", "+", "[", "nr_mix", "]", ")", ".", "cuda", "(", ")", "\n", "m2", "=", "(", "means", "[", ":", ",", ":", ",", ":", ",", "1", ",", ":", "]", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", "\n", "*", "x", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", ")", ".", "view", "(", "xs", "[", "0", "]", ",", "xs", "[", "1", "]", ",", "xs", "[", "2", "]", ",", "1", ",", "nr_mix", ")", "\n", "\n", "m3", "=", "(", "means", "[", ":", ",", ":", ",", ":", ",", "2", ",", ":", "]", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "1", ",", ":", "]", "*", "x", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", "+", "\n", "coeffs", "[", ":", ",", ":", ",", ":", ",", "2", ",", ":", "]", "*", "x", "[", ":", ",", ":", ",", ":", ",", "1", ",", ":", "]", ")", ".", "view", "(", "xs", "[", "0", "]", ",", "xs", "[", "1", "]", ",", "xs", "[", "2", "]", ",", "1", ",", "nr_mix", ")", "\n", "\n", "means", "=", "torch", ".", "cat", "(", "(", "means", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", ".", "unsqueeze", "(", "3", ")", ",", "m2", ",", "m3", ")", ",", "dim", "=", "3", ")", "\n", "centered_x", "=", "x", "-", "means", "\n", "inv_stdv", "=", "torch", ".", "exp", "(", "-", "log_scales", ")", "\n", "plus_in", "=", "inv_stdv", "*", "(", "centered_x", "+", "1.", "/", "255.", ")", "\n", "cdf_plus", "=", "F", ".", "sigmoid", "(", "plus_in", ")", "\n", "min_in", "=", "inv_stdv", "*", "(", "centered_x", "-", "1.", "/", "255.", ")", "\n", "cdf_min", "=", "F", ".", "sigmoid", "(", "min_in", ")", "\n", "# log probability for edge case of 0 (before scaling)", "\n", "log_cdf_plus", "=", "plus_in", "-", "F", ".", "softplus", "(", "plus_in", ")", "\n", "# log probability for edge case of 255 (before scaling)", "\n", "log_one_minus_cdf_min", "=", "-", "F", ".", "softplus", "(", "min_in", ")", "\n", "cdf_delta", "=", "cdf_plus", "-", "cdf_min", "# probability for all other cases", "\n", "mid_in", "=", "inv_stdv", "*", "centered_x", "\n", "# log probability in the center of the bin, to be used in extreme cases", "\n", "# (not actually used in our code)", "\n", "log_pdf_mid", "=", "mid_in", "-", "log_scales", "-", "2.", "*", "F", ".", "softplus", "(", "mid_in", ")", "\n", "\n", "# now select the right output: left edge case, right edge case, normal", "\n", "# case, extremely low prob case (doesn't actually happen for us)", "\n", "\n", "# this is what we are really doing, but using the robust version below for extreme cases in other applications and to avoid NaN issue with tf.select()", "\n", "# log_probs = tf.select(x < -0.999, log_cdf_plus, tf.select(x > 0.999, log_one_minus_cdf_min, tf.log(cdf_delta)))", "\n", "\n", "# robust version, that still works if probabilities are below 1e-5 (which never happens in our code)", "\n", "# tensorflow backpropagates through tf.select() by multiplying with zero instead of selecting: this requires use to use some ugly tricks to avoid potential NaNs", "\n", "# the 1e-12 in tf.maximum(cdf_delta, 1e-12) is never actually used as output, it's purely there to get around the tf.select() gradient issue", "\n", "# if the probability on a sub-pixel is below 1e-5, we use an approximation", "\n", "# based on the assumption that the log-density is constant in the bin of", "\n", "# the observed sub-pixel value", "\n", "\n", "inner_inner_cond", "=", "(", "cdf_delta", ">", "1e-5", ")", ".", "float", "(", ")", "\n", "inner_inner_out", "=", "inner_inner_cond", "*", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "cdf_delta", ",", "min", "=", "1e-12", ")", ")", "+", "(", "1.", "-", "inner_inner_cond", ")", "*", "(", "log_pdf_mid", "-", "np", ".", "log", "(", "127.5", ")", ")", "\n", "inner_cond", "=", "(", "x", ">", "0.999", ")", ".", "float", "(", ")", "\n", "inner_out", "=", "inner_cond", "*", "log_one_minus_cdf_min", "+", "(", "1.", "-", "inner_cond", ")", "*", "inner_inner_out", "\n", "cond", "=", "(", "x", "<", "-", "0.999", ")", ".", "float", "(", ")", "\n", "log_probs", "=", "cond", "*", "log_cdf_plus", "+", "(", "1.", "-", "cond", ")", "*", "inner_out", "\n", "log_probs", "=", "torch", ".", "sum", "(", "log_probs", ",", "dim", "=", "3", ")", "+", "log_prob_from_logits", "(", "logit_probs", ")", "\n", "\n", "if", "do_reduce", ":", "\n", "        ", "return", "-", "torch", ".", "sum", "(", "log_sum_exp", "(", "log_probs", ")", ")", "\n", "", "else", ":", "\n", "        ", "lse_val", "=", "log_sum_exp", "(", "log_probs", ")", "\n", "lse_val", "=", "lse_val", ".", "view", "(", "lse_val", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "return", "-", "lse_val", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.discretized_mix_logistic_loss_1d": [[104, 153], ["x.contiguous.permute", "l[].contiguous().view.permute", "int", "l[].contiguous().view", "torch.clamp", "torch.clamp", "torch.clamp", "x.contiguous.contiguous", "torch.exp", "torch.exp", "torch.exp", "torch.sigmoid", "torch.sigmoid", "int", "int", "x.contiguous.unsqueeze", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.softplus", "torch.softplus", "torch.sum", "torch.sum", "torch.sum", "utils.log_prob_from_logits", "utils.log_sum_exp", "lse_val.view().mean.view().mean", "x.contiguous.size", "l[].contiguous().view.size", "l[].contiguous", "torch.softplus", "torch.log", "torch.log", "torch.log", "torch.sum", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.clamp", "torch.clamp", "torch.clamp", "numpy.log", "utils.log_sum_exp", "lse_val.view().mean.view", "lse_val.view().mean.size"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.log_prob_from_logits", "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.log_sum_exp", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.log_sum_exp"], ["", "", "def", "discretized_mix_logistic_loss_1d", "(", "x", ",", "l", ",", "do_reduce", "=", "True", ")", ":", "\n", "    ", "\"\"\" log-likelihood for mixture of discretized logistics, assumes the data has been rescaled to [-1,1] interval \"\"\"", "\n", "# Pytorch ordering", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "l", "=", "l", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "\n", "# here and below: unpacking the params of the mixture of logistics", "\n", "nr_mix", "=", "int", "(", "ls", "[", "-", "1", "]", "/", "3", ")", "\n", "logit_probs", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "l", "=", "l", "[", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "]", ".", "contiguous", "(", ")", ".", "view", "(", "xs", "+", "[", "nr_mix", "*", "2", "]", ")", "# 2 for mean, scale", "\n", "means", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "log_scales", "=", "torch", ".", "clamp", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "2", "*", "nr_mix", "]", ",", "min", "=", "-", "7.", ")", "\n", "# here and below: getting the means and adjusting them based on preceding", "\n", "# sub-pixels", "\n", "x", "=", "x", ".", "contiguous", "(", ")", "\n", "x", "=", "x", ".", "unsqueeze", "(", "-", "1", ")", "+", "torch", ".", "zeros", "(", "xs", "+", "[", "nr_mix", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "# means = torch.cat((means[:, :, :, 0, :].unsqueeze(3), m2, m3), dim=3)", "\n", "centered_x", "=", "x", "-", "means", "\n", "inv_stdv", "=", "torch", ".", "exp", "(", "-", "log_scales", ")", "\n", "plus_in", "=", "inv_stdv", "*", "(", "centered_x", "+", "1.", "/", "255.", ")", "\n", "cdf_plus", "=", "F", ".", "sigmoid", "(", "plus_in", ")", "\n", "min_in", "=", "inv_stdv", "*", "(", "centered_x", "-", "1.", "/", "255.", ")", "\n", "cdf_min", "=", "F", ".", "sigmoid", "(", "min_in", ")", "\n", "# log probability for edge case of 0 (before scaling)", "\n", "log_cdf_plus", "=", "plus_in", "-", "F", ".", "softplus", "(", "plus_in", ")", "\n", "# log probability for edge case of 255 (before scaling)", "\n", "log_one_minus_cdf_min", "=", "-", "F", ".", "softplus", "(", "min_in", ")", "\n", "cdf_delta", "=", "cdf_plus", "-", "cdf_min", "# probability for all other cases", "\n", "mid_in", "=", "inv_stdv", "*", "centered_x", "\n", "# log probability in the center of the bin, to be used in extreme cases", "\n", "# (not actually used in our code)", "\n", "log_pdf_mid", "=", "mid_in", "-", "log_scales", "-", "2.", "*", "F", ".", "softplus", "(", "mid_in", ")", "\n", "\n", "inner_inner_cond", "=", "(", "cdf_delta", ">", "1e-5", ")", ".", "float", "(", ")", "\n", "inner_inner_out", "=", "inner_inner_cond", "*", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "cdf_delta", ",", "min", "=", "1e-12", ")", ")", "+", "(", "1.", "-", "inner_inner_cond", ")", "*", "(", "log_pdf_mid", "-", "np", ".", "log", "(", "127.5", ")", ")", "\n", "inner_cond", "=", "(", "x", ">", "0.999", ")", ".", "float", "(", ")", "\n", "inner_out", "=", "inner_cond", "*", "log_one_minus_cdf_min", "+", "(", "1.", "-", "inner_cond", ")", "*", "inner_inner_out", "\n", "cond", "=", "(", "x", "<", "-", "0.999", ")", ".", "float", "(", ")", "\n", "log_probs", "=", "cond", "*", "log_cdf_plus", "+", "(", "1.", "-", "cond", ")", "*", "inner_out", "\n", "log_probs", "=", "torch", ".", "sum", "(", "log_probs", ",", "dim", "=", "3", ")", "+", "log_prob_from_logits", "(", "logit_probs", ")", "\n", "if", "do_reduce", ":", "\n", "        ", "return", "-", "torch", ".", "sum", "(", "log_sum_exp", "(", "log_probs", ")", ")", "\n", "", "else", ":", "\n", "        ", "lse_val", "=", "log_sum_exp", "(", "log_probs", ")", "\n", "lse_val", "=", "lse_val", ".", "view", "(", "lse_val", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "return", "-", "lse_val", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.to_one_hot": [[175, 181], ["torch.FloatTensor().zero_", "torch.FloatTensor().zero_", "torch.FloatTensor().zero_", "one_hot.cuda.scatter_", "one_hot.cuda.cuda", "len", "tensor.unsqueeze", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "tensor.size", "tensor.size"], "function", ["None"], ["", "", "def", "to_one_hot", "(", "tensor", ",", "n", ",", "fill_with", "=", "1.", ")", ":", "\n", "# we perform one hot encore with respect to the last axis", "\n", "    ", "one_hot", "=", "torch", ".", "FloatTensor", "(", "tensor", ".", "size", "(", ")", "+", "(", "n", ",", ")", ")", ".", "zero_", "(", ")", "\n", "if", "tensor", ".", "is_cuda", ":", "one_hot", "=", "one_hot", ".", "cuda", "(", ")", "\n", "one_hot", ".", "scatter_", "(", "len", "(", "tensor", ".", "size", "(", ")", ")", ",", "tensor", ".", "unsqueeze", "(", "-", "1", ")", ",", "fill_with", ")", "\n", "return", "one_hot", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.sample_from_discretized_mix_logistic_1d": [[183, 213], ["l[].contiguous().view.permute", "l[].contiguous().view", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "temp.cuda.uniform_", "temp.cuda.max", "utils.to_one_hot", "to_one_hot.view", "torch.sum", "torch.sum", "torch.sum", "torch.clamp", "torch.clamp", "torch.clamp", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "u.cuda.uniform_", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp.unsqueeze", "int", "logit_probs.size", "temp.cuda.cuda", "torch.log", "torch.log", "torch.log", "torch.sum", "torch.sum", "torch.sum", "torch.sum.size", "u.cuda.cuda", "torch.clamp", "torch.clamp", "torch.clamp", "l[].contiguous().view.size", "l[].contiguous", "torch.exp", "torch.exp", "torch.exp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.to_one_hot", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log"], ["", "def", "sample_from_discretized_mix_logistic_1d", "(", "l", ",", "nr_mix", ")", ":", "\n", "# Pytorch ordering", "\n", "    ", "l", "=", "l", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "xs", "=", "ls", "[", ":", "-", "1", "]", "+", "[", "1", "]", "#[3]", "\n", "\n", "# unpack parameters", "\n", "logit_probs", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "l", "=", "l", "[", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "]", ".", "contiguous", "(", ")", ".", "view", "(", "xs", "+", "[", "nr_mix", "*", "2", "]", ")", "# for mean, scale", "\n", "\n", "# sample mixture indicator from softmax", "\n", "temp", "=", "torch", ".", "FloatTensor", "(", "logit_probs", ".", "size", "(", ")", ")", "\n", "if", "l", ".", "is_cuda", ":", "temp", "=", "temp", ".", "cuda", "(", ")", "\n", "temp", ".", "uniform_", "(", "1e-5", ",", "1.", "-", "1e-5", ")", "\n", "temp", "=", "logit_probs", ".", "data", "-", "torch", ".", "log", "(", "-", "torch", ".", "log", "(", "temp", ")", ")", "\n", "_", ",", "argmax", "=", "temp", ".", "max", "(", "dim", "=", "3", ")", "\n", "\n", "one_hot", "=", "to_one_hot", "(", "argmax", ",", "nr_mix", ")", "\n", "sel", "=", "one_hot", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", ",", "nr_mix", "]", ")", "\n", "# select logistic parameters", "\n", "means", "=", "torch", ".", "sum", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "*", "sel", ",", "dim", "=", "4", ")", "\n", "log_scales", "=", "torch", ".", "clamp", "(", "torch", ".", "sum", "(", "\n", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "2", "*", "nr_mix", "]", "*", "sel", ",", "dim", "=", "4", ")", ",", "min", "=", "-", "7.", ")", "\n", "u", "=", "torch", ".", "FloatTensor", "(", "means", ".", "size", "(", ")", ")", "\n", "if", "l", ".", "is_cuda", ":", "u", "=", "u", ".", "cuda", "(", ")", "\n", "u", ".", "uniform_", "(", "1e-5", ",", "1.", "-", "1e-5", ")", "\n", "x", "=", "means", "+", "torch", ".", "exp", "(", "log_scales", ")", "*", "(", "torch", ".", "log", "(", "u", ")", "-", "torch", ".", "log", "(", "1.", "-", "u", ")", ")", "\n", "x0", "=", "torch", ".", "clamp", "(", "torch", ".", "clamp", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", ",", "min", "=", "-", "1.", ")", ",", "max", "=", "1.", ")", "\n", "out", "=", "x0", ".", "unsqueeze", "(", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.sample_from_discretized_mix_logistic": [[215, 255], ["l[].contiguous().view.permute", "l[].contiguous().view", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "temp.cuda.uniform_", "temp.cuda.max", "utils.to_one_hot", "to_one_hot.view", "torch.sum", "torch.sum", "torch.sum", "torch.clamp", "torch.clamp", "torch.clamp", "torch.sum", "torch.sum", "torch.sum", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "u.cuda.uniform_", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.cat", "torch.cat", "torch.cat", "out.permute.permute", "int", "logit_probs.size", "temp.cuda.cuda", "torch.log", "torch.log", "torch.log", "torch.sum", "torch.sum", "torch.sum", "torch.sum.size", "u.cuda.cuda", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "l[].contiguous().view.size", "l[].contiguous", "torch.tanh", "torch.exp", "torch.exp", "torch.exp", "torch.clamp.view", "torch.clamp.view", "torch.clamp.view", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.to_one_hot", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log"], ["", "def", "sample_from_discretized_mix_logistic", "(", "l", ",", "nr_mix", ")", ":", "\n", "# Pytorch ordering", "\n", "    ", "l", "=", "l", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "ls", "=", "[", "int", "(", "y", ")", "for", "y", "in", "l", ".", "size", "(", ")", "]", "\n", "xs", "=", "ls", "[", ":", "-", "1", "]", "+", "[", "3", "]", "\n", "\n", "# unpack parameters", "\n", "logit_probs", "=", "l", "[", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "\n", "l", "=", "l", "[", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "]", ".", "contiguous", "(", ")", ".", "view", "(", "xs", "+", "[", "nr_mix", "*", "3", "]", ")", "\n", "# sample mixture indicator from softmax", "\n", "temp", "=", "torch", ".", "FloatTensor", "(", "logit_probs", ".", "size", "(", ")", ")", "\n", "if", "l", ".", "is_cuda", ":", "temp", "=", "temp", ".", "cuda", "(", ")", "\n", "temp", ".", "uniform_", "(", "1e-5", ",", "1.", "-", "1e-5", ")", "\n", "temp", "=", "logit_probs", ".", "data", "-", "torch", ".", "log", "(", "-", "torch", ".", "log", "(", "temp", ")", ")", "\n", "_", ",", "argmax", "=", "temp", ".", "max", "(", "dim", "=", "3", ")", "\n", "\n", "one_hot", "=", "to_one_hot", "(", "argmax", ",", "nr_mix", ")", "\n", "sel", "=", "one_hot", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", ",", "nr_mix", "]", ")", "\n", "# select logistic parameters", "\n", "means", "=", "torch", ".", "sum", "(", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", ":", "nr_mix", "]", "*", "sel", ",", "dim", "=", "4", ")", "\n", "log_scales", "=", "torch", ".", "clamp", "(", "torch", ".", "sum", "(", "\n", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "nr_mix", ":", "2", "*", "nr_mix", "]", "*", "sel", ",", "dim", "=", "4", ")", ",", "min", "=", "-", "7.", ")", "\n", "coeffs", "=", "torch", ".", "sum", "(", "F", ".", "tanh", "(", "\n", "l", "[", ":", ",", ":", ",", ":", ",", ":", ",", "2", "*", "nr_mix", ":", "3", "*", "nr_mix", "]", ")", "*", "sel", ",", "dim", "=", "4", ")", "\n", "# sample from logistic & clip to interval", "\n", "# we don't actually round to the nearest 8bit value when sampling", "\n", "u", "=", "torch", ".", "FloatTensor", "(", "means", ".", "size", "(", ")", ")", "\n", "if", "l", ".", "is_cuda", ":", "u", "=", "u", ".", "cuda", "(", ")", "\n", "u", ".", "uniform_", "(", "1e-5", ",", "1.", "-", "1e-5", ")", "\n", "x", "=", "means", "+", "torch", ".", "exp", "(", "log_scales", ")", "*", "(", "torch", ".", "log", "(", "u", ")", "-", "torch", ".", "log", "(", "1.", "-", "u", ")", ")", "\n", "x0", "=", "torch", ".", "clamp", "(", "torch", ".", "clamp", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", "]", ",", "min", "=", "-", "1.", ")", ",", "max", "=", "1.", ")", "\n", "x1", "=", "torch", ".", "clamp", "(", "torch", ".", "clamp", "(", "\n", "x", "[", ":", ",", ":", ",", ":", ",", "1", "]", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "0", "]", "*", "x0", ",", "min", "=", "-", "1.", ")", ",", "max", "=", "1.", ")", "\n", "x2", "=", "torch", ".", "clamp", "(", "torch", ".", "clamp", "(", "\n", "x", "[", ":", ",", ":", ",", ":", ",", "2", "]", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "1", "]", "*", "x0", "+", "coeffs", "[", ":", ",", ":", ",", ":", ",", "2", "]", "*", "x1", ",", "min", "=", "-", "1.", ")", ",", "max", "=", "1.", ")", "\n", "\n", "out", "=", "torch", ".", "cat", "(", "[", "x0", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", "]", ")", ",", "x1", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", "]", ")", ",", "x2", ".", "view", "(", "xs", "[", ":", "-", "1", "]", "+", "[", "1", "]", ")", "]", ",", "dim", "=", "3", ")", "\n", "# put back in Pytorch ordering", "\n", "out", "=", "out", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.down_shift": [[259, 267], ["pad", "int", "torch.ZeroPad2d", "x.size"], "function", ["None"], ["def", "down_shift", "(", "x", ",", "pad", "=", "None", ")", ":", "\n", "# Pytorch ordering", "\n", "    ", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "# when downshifting, the last row is removed ", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", "xs", "[", "2", "]", "-", "1", ",", ":", "]", "\n", "# padding left, padding right, padding top, padding bottom", "\n", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "0", ",", "0", ",", "1", ",", "0", ")", ")", "if", "pad", "is", "None", "else", "pad", "\n", "return", "pad", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.right_shift": [[269, 277], ["pad", "int", "torch.ZeroPad2d", "x.size"], "function", ["None"], ["", "def", "right_shift", "(", "x", ",", "pad", "=", "None", ")", ":", "\n", "# Pytorch ordering", "\n", "    ", "xs", "=", "[", "int", "(", "y", ")", "for", "y", "in", "x", ".", "size", "(", ")", "]", "\n", "# when righshifting, the last column is removed ", "\n", "x", "=", "x", "[", ":", ",", ":", ",", ":", ",", ":", "xs", "[", "3", "]", "-", "1", "]", "\n", "# padding left, padding right, padding top, padding bottom", "\n", "pad", "=", "nn", ".", "ZeroPad2d", "(", "(", "1", ",", "0", ",", "0", ",", "0", ")", ")", "if", "pad", "is", "None", "else", "pad", "\n", "return", "pad", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.load_part_of_model": [[279, 291], ["torch.load", "torch.load", "torch.load", "torch.load.items", "print", "model.state_dict().keys", "[].copy_", "float", "model.state_dict", "print", "len", "model.state_dict().keys", "model.state_dict", "model.state_dict"], "function", ["None"], ["", "def", "load_part_of_model", "(", "model", ",", "path", ")", ":", "\n", "    ", "params", "=", "torch", ".", "load", "(", "path", ")", "\n", "added", "=", "0", "\n", "for", "name", ",", "param", "in", "params", ".", "items", "(", ")", ":", "\n", "        ", "if", "name", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "model", ".", "state_dict", "(", ")", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "added", "+=", "1", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "print", "(", "e", ")", "\n", "pass", "\n", "", "", "", "print", "(", "'added %s of params:'", "%", "(", "added", "/", "float", "(", "len", "(", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ")", ")", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.setup.setup.execfile": [[6, 15], ["globals.update", "open", "exec", "compile", "file.read"], "function", ["None"], ["def", "execfile", "(", "filepath", ",", "globals", "=", "None", ",", "locals", "=", "None", ")", ":", "\n", "    ", "if", "globals", "is", "None", ":", "\n", "        ", "globals", "=", "{", "}", "\n", "", "globals", ".", "update", "(", "{", "\n", "\"__file__\"", ":", "filepath", ",", "\n", "\"__name__\"", ":", "\"__main__\"", ",", "\n", "}", ")", "\n", "with", "open", "(", "filepath", ",", "'rb'", ")", "as", "file", ":", "\n", "        ", "exec", "(", "compile", "(", "file", ".", "read", "(", ")", ",", "filepath", ",", "'exec'", ")", ",", "globals", ",", "locals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.setup.setup.setup_workspace": [[31, 97], ["socket.gethostname", "os.path.abspath", "print", "paths.items", "print", "print", "os.path.isdir", "print", "os.makedirs", "print", "print", "os.path.join", "files.items", "colored", "os.path.isdir", "os.makedirs", "os.path.join", "print", "colored", "colored", "os.path.islink", "os.system", "colored", "colored"], "function", ["None"], ["def", "setup_workspace", "(", ")", ":", "\n", "    ", "\"\"\"Sets up the workspace for the project by creating a virtual environment,\n    installing the required packages and creating symlinks for the dataset.\n    \"\"\"", "\n", "\n", "hostname", "=", "socket", ".", "gethostname", "(", ")", "\n", "\n", "# Create the workspace folder if it does not exist.", "\n", "workspace_path", "=", "os", ".", "path", ".", "abspath", "(", "workspace_name", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "workspace_path", ")", ":", "\n", "        ", "print", "(", "'Creating workspace: {}'", ".", "format", "(", "workspace_path", ")", ")", "\n", "os", ".", "makedirs", "(", "workspace_path", ")", "\n", "\n", "# Create the virtual environment if it does not exist.", "\n", "# env_path = os.path.join(workspace_path, env_name)", "\n", "# if not os.path.isdir(env_path):", "\n", "#     print('Creating environment: {}'.format(env_path))", "\n", "#     virtualenv.create_environment(home_dir=env_path, site_packages=False)", "\n", "#", "\n", "# # Activate the environment.", "\n", "# print('Activating virtual environment.')", "\n", "# activate_script = os.path.join(env_path, 'bin', 'activate_this.py')", "\n", "# execfile(activate_script, dict(__file__=activate_script))", "\n", "# if hasattr(sys, 'real_prefix'):", "\n", "#     print('Activation done.')", "\n", "# else:", "\n", "#     print('Activation failed!')", "\n", "#", "\n", "# # Install the requirements.", "\n", "# # Since using the pip API is not working, we are just running bash commands", "\n", "# # through Python's os library.", "\n", "# commands = [", "\n", "#         'python -m pip install --upgrade pip',", "\n", "#         'pip install --upgrade -r {}'.format(requirements)", "\n", "#         ]", "\n", "# print('Installing requirements.')", "\n", "# for command in commands:", "\n", "#     os.system(command)", "\n", "# print('Installed requirements.')", "\n", "\n", "# Set up symlinks and project folders.", "\n", "", "from", "termcolor", "import", "colored", "\n", "print", "(", "'Setting up for {}'", ".", "format", "(", "colored", "(", "hostname", ",", "'red'", ")", ")", ")", "\n", "\n", "paths", "=", "None", "\n", "if", "hostname", "not", "in", "datastore", ":", "\n", "        ", "print", "(", "\"\"\"Hostname {} is not setup. Using default Cluster\"\"\"", ".", "format", "(", "colored", "(", "hostname", ",", "'red'", ")", ")", ")", "\n", "paths", "=", "datastore", "[", "'default'", "]", "\n", "", "else", ":", "\n", "        ", "paths", "=", "datastore", "[", "hostname", "]", "\n", "\n", "", "for", "parent", ",", "files", "in", "paths", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "'Preparing {}'", ".", "format", "(", "colored", "(", "parent", ")", ")", ")", "\n", "parent_path", "=", "os", ".", "path", ".", "join", "(", "workspace_path", ",", "parent", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "parent_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "parent_path", ")", "\n", "\n", "", "for", "key", ",", "value", "in", "files", ".", "items", "(", ")", ":", "\n", "            ", "target_path", "=", "os", ".", "path", ".", "join", "(", "parent_path", ",", "key", ")", "\n", "print", "(", "'\\t{} -> {}'", ".", "format", "(", "colored", "(", "target_path", ",", "'green'", ")", ",", "\n", "colored", "(", "value", ",", "'blue'", ")", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "islink", "(", "target_path", ")", ":", "\n", "                ", "os", ".", "system", "(", "'ln -s \"{}\" \"{}\"'", ".", "format", "(", "value", ",", "target_path", ")", ")", "\n", "", "", "", "print", "(", "'Setting up symlinks finished.'", ")", "\n", "\n", "print", "(", "\"\"\"Setup finished.\\nRun \"source {}/bin/activate\" \"\"\"", ".", "format", "(", "env_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.pixelcnn_setup.sample": [[18, 36], ["model.train", "torch.zeros", "torch.zeros", "torch.zeros", "data.cuda.cuda", "rescaling_inv", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "range", "range", "model", "models.sample_from_discretized_mix_logistic_1d", "models.sample_from_discretized_mix_logistic"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.sample_from_discretized_mix_logistic_1d", "home.repos.pwc.inspect_result.caotians1_OD-test-master.pixelcnn.utils.sample_from_discretized_mix_logistic"], ["def", "sample", "(", "model", ",", "batch_size", ",", "obs", ")", ":", "\n", "    ", "model", ".", "train", "(", "False", ")", "\n", "nmix", "=", "model", ".", "nr_logistic_mix", "\n", "data", "=", "torch", ".", "zeros", "(", "batch_size", ",", "obs", "[", "0", "]", ",", "obs", "[", "1", "]", ",", "obs", "[", "2", "]", ")", "\n", "data", "=", "data", ".", "cuda", "(", ")", "\n", "rescaling_inv", "=", "lambda", "x", ":", ".5", "*", "x", "+", ".5", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "obs", "[", "1", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "obs", "[", "2", "]", ")", ":", "\n", "                ", "data_v", "=", "data", "\n", "out", "=", "model", "(", "data_v", ",", "sample", "=", "True", ")", "\n", "out_sample", "=", "None", "\n", "if", "obs", "[", "0", "]", "==", "1", ":", "\n", "                    ", "out_sample", "=", "pcnn_utils", ".", "sample_from_discretized_mix_logistic_1d", "(", "out", ",", "nmix", ")", "\n", "", "else", ":", "\n", "                    ", "out_sample", "=", "pcnn_utils", ".", "sample_from_discretized_mix_logistic", "(", "out", ",", "nmix", ")", "\n", "", "data", "[", ":", ",", ":", ",", "i", ",", "j", "]", "=", "out_sample", ".", "data", "[", ":", ",", ":", ",", "i", ",", "j", "]", "\n", "", "", "", "return", "rescaling_inv", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.pixelcnn_setup.get_pcnn_config": [[37, 96], ["print", "sample_im.size", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "model.to.to", "models.PCNN_Loss", "utils.iterative_trainer.IterativeTrainerConfig", "utils.logger.Logger", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "hasattr", "int", "print", "pixelcnn_setup.sample", "model.to.parameters", "model.to.train_config", "model.train_config.items", "termcolor.colored", "datasets.MirroredDataset", "model.to.preferred_name", "print", "utils.iterative_trainer.IterativeTrainerConfig.__setattr__"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.pixelcnn_setup.sample", "home.repos.pwc.inspect_result.caotians1_OD-test-master.DRD.DRDTrain2.DRDDenseCustom.train_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_pcnn_config", "(", "args", ",", "model", ",", "home_path", ",", "dataset", ")", ":", "\n", "    ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "name", ")", ")", "\n", "\n", "sample_im", ",", "_", "=", "dataset", "[", "0", "]", "\n", "obs", "=", "sample_im", ".", "size", "(", ")", "\n", "obs", "=", "[", "int", "(", "d", ")", "for", "d", "in", "obs", "]", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "dataset", ".", "name", "in", "Global", ".", "mirror_augment", ":", "\n", "        ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "dataset", ".", "name", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "pcnn_utils", ".", "PCNN_Loss", "(", "one_d", "=", "(", "model", ".", "input_channels", "==", "1", ")", ")", "\n", "\n", "# Set up the config", "\n", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'PCNN_%s_%s'", "%", "(", "dataset", ".", "name", ",", "model", ".", "preferred_name", "(", ")", ")", "\n", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "False", "\n", "config", ".", "cast_float_label", "=", "False", "\n", "config", ".", "autoencoder_target", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "logger", "=", "Logger", "(", "home_path", ")", "\n", "config", ".", "sampler", "=", "lambda", "x", ":", "sample", "(", "x", ".", "model", ",", "32", ",", "obs", ")", "\n", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-5", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", ".", "max_epoch", "=", "60", "\n", "\n", "if", "hasattr", "(", "model", ",", "'train_config'", ")", ":", "\n", "        ", "model_train_config", "=", "model", ".", "train_config", "(", ")", "\n", "for", "key", ",", "value", "in", "model_train_config", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "'Overriding config.%s'", "%", "key", ")", "\n", "config", ".", "__setattr__", "(", "key", ",", "value", ")", "\n", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.pixelcnn_setup.train_pixelcnn": [[98, 154], ["models.get_ref_model_path", "os.path.join", "os.path.join", "os.path.isdir", "os.makedirs", "os.path.isfile", "pixelcnn_setup.get_pcnn_config", "utils.iterative_trainer.IterativeTrainer", "print", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "termcolor.colored", "get_pcnn_config.logger.log", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "get_pcnn_config.logger.get_measure().mean_epoch", "get_pcnn_config.logger.get_measure().mean_epoch", "get_pcnn_config.scheduler.step", "torch.save", "torch.save", "torch.save", "get_pcnn_config.model.state_dict", "utils.iterative_trainer.IterativeTrainer.visdom.save", "float", "get_pcnn_config.logger.get_measure", "get_pcnn_config.logger.visualize_average_keys", "get_pcnn_config.logger.visualize_average", "get_pcnn_config.sampler", "utils.iterative_trainer.IterativeTrainer.visdom.images", "os.path.join", "print", "torch.save", "torch.save", "torch.save", "termcolor.colored", "range", "get_pcnn_config.logger.get_measure", "get_pcnn_config.logger.get_measure", "config.sampler.cpu", "get_pcnn_config.model.state_dict", "len", "termcolor.colored"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.pixelcnn_setup.get_pcnn_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "train_pixelcnn", "(", "args", ",", "model", ",", "dataset", ")", ":", "\n", "    ", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "args", ",", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "model_setup", "=", "True", ",", "suffix_str", "=", "model", ".", "netid", ")", "\n", "hbest_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "hlast_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.last.pth'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "home_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "home_path", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isfile", "(", "hbest_path", "+", "\".done\"", ")", ":", "\n", "        ", "config", "=", "get_pcnn_config", "(", "args", ",", "model", ",", "home_path", ",", "dataset", ")", "\n", "trainer", "=", "IterativeTrainer", "(", "config", ",", "args", ")", "\n", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "best_loss", "=", "999999999", "\n", "for", "epoch", "in", "range", "(", "1", ",", "config", ".", "max_epoch", "+", "1", ")", ":", "\n", "\n", "# Track the learning rates.", "\n", "            ", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "config", ".", "optim", ".", "param_groups", "]", "\n", "config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "# One epoch of train and test.", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "test_loss", "=", "config", ".", "logger", ".", "get_measure", "(", "'test_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "\n", "config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "if", "config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                ", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "samples", "=", "config", ".", "sampler", "(", "config", ")", "\n", "trainer", ".", "visdom", ".", "images", "(", "samples", ".", "cpu", "(", ")", ",", "win", "=", "'sample_images'", ")", "\n", "\n", "# Save the logger for future reference.", "\n", "", "torch", ".", "save", "(", "config", ".", "logger", ".", "measures", ",", "os", ".", "path", ".", "join", "(", "home_path", ",", "'logger.pth'", ")", ")", "\n", "\n", "# Saving a checkpoint. Enable if needed!", "\n", "# if args.save and epoch % 10 == 0:", "\n", "#     print('Saving a %s at iter %s'%(colored('snapshot', 'yellow'), colored('%d'%epoch, 'yellow')))", "\n", "#     torch.save(config.model.state_dict(), os.path.join(home_path, 'model.%d.pth'%epoch))", "\n", "\n", "if", "args", ".", "save", "and", "test_loss", "<", "best_loss", ":", "\n", "                ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_loss", ",", "'red'", ")", ")", ")", "\n", "best_loss", "=", "test_loss", "\n", "torch", ".", "save", "(", "config", ".", "model", ".", "state_dict", "(", ")", ",", "hbest_path", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "hbest_path", "+", "\".done\"", ")", "\n", "torch", ".", "save", "(", "config", ".", "model", ".", "state_dict", "(", ")", ",", "hlast_path", ")", "\n", "\n", "if", "config", ".", "visualize", ":", "\n", "            ", "trainer", ".", "visdom", ".", "save", "(", "[", "trainer", ".", "visdom", ".", "env", "]", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"Skipping %s\"", "%", "(", "colored", "(", "home_path", ",", "'yellow'", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ali_setup.Train_ALI": [[20, 113], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "models.get_ref_model_path", "utils.logger.Logger", "os.path.join", "os.path.isdir", "os.makedirs", "os.path.isfile", "print", "torch.Adam", "torch.Adam", "range", "termcolor.colored", "torch.BCELoss", "torch.MSELoss", "model.train", "utils.logger.Logger.get_measure().mean_epoch", "utils.logger.Logger.get_measure().mean_epoch", "print", "utils.logger.Logger.writer.add_scalar", "utils.logger.Logger.writer.add_scalar", "torch.save", "torch.save", "torch.save", "tqdm.tqdm", "enumerate", "model().data.cpu().squeeze().numpy", "min", "matplotlib.subplots", "image.data.squeeze().numpy.data.squeeze().numpy", "range", "utils.logger.Logger.writer.add_figure", "matplotlib.close", "os.path.join", "print", "torch.save", "torch.save", "torch.save", "model.GenX.parameters", "model.GenZ.parameters", "model.DisZ.parameters", "model.DisX.parameters", "model.DisXZ.parameters", "pbar.update", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "model.forward", "torch.zeros", "torch.zeros", "torch.zeros", "truelabel.cuda.cuda", "fakelabel.cuda.cuda", "utils.logger.Logger.log", "utils.logger.Logger.log", "utils.logger.Logger.get_measure", "utils.logger.Logger.get_measure", "ax[].imshow", "ax[].imshow", "model.state_dict", "len", "bool", "x.cuda", "torch.ones", "torch.ones", "torch.ones", "nn.MSELoss.", "nn.MSELoss.", "nn.MSELoss.", "nn.MSELoss.", "loss_d.item", "loss_g.item", "optim.Adam.zero_grad", "loss_g.backward", "optim.Adam.step", "pbar.set_description", "model().data.cpu().squeeze", "image.data.squeeze().numpy.data.squeeze", "termcolor.colored", "os.environ.get", "torch.randn", "torch.randn", "torch.randn", "pred_real.view", "pred_fake.view", "pred_fake.view", "pred_real.view", "optim.Adam.zero_grad", "loss_d.backward", "optim.Adam.step", "pbar.set_description", "optim.Adam.zero_grad", "loss_d.backward", "optim.Adam.step", "optim.Adam.zero_grad", "loss_g.backward", "optim.Adam.step", "pbar.set_description", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "model().data.cpu", "loss_d.item", "loss_g.item", "loss_d.item", "loss_g.item", "loss_d.item", "loss_g.item", "model", "image.data.squeeze().numpy.cuda"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.forward", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["def", "Train_ALI", "(", "args", ",", "model", ",", "dataset", ",", "BCE_Loss", "=", "True", ")", ":", "\n", "    ", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "args", ".", "batch_size", ",", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "args", ",", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "model_setup", "=", "True", ",", "\n", "suffix_str", "=", "'base0'", ")", "\n", "logger", "=", "Logger", "(", "home_path", ")", "\n", "\n", "hbest_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "home_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "home_path", ")", "\n", "", "best_gen_loss", "=", "9999", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "hbest_path", "+", "\".done\"", ")", ":", "\n", "        ", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "\n", "optimizerG", "=", "optim", ".", "Adam", "(", "[", "{", "'params'", ":", "model", ".", "GenX", ".", "parameters", "(", ")", "}", ",", "\n", "{", "'params'", ":", "model", ".", "GenZ", ".", "parameters", "(", ")", "}", "]", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "args", ".", "beta1", ",", "args", ".", "beta2", ")", ")", "\n", "\n", "optimizerD", "=", "optim", ".", "Adam", "(", "[", "{", "'params'", ":", "model", ".", "DisZ", ".", "parameters", "(", ")", "}", ",", "{", "'params'", ":", "model", ".", "DisX", ".", "parameters", "(", ")", "}", ",", "\n", "{", "'params'", ":", "model", ".", "DisXZ", ".", "parameters", "(", ")", "}", "]", ",", "lr", "=", "args", ".", "lr", ",", "betas", "=", "(", "args", ".", "beta1", ",", "args", ".", "beta2", ")", ")", "\n", "if", "BCE_Loss", ":", "\n", "            ", "criterion", "=", "nn", ".", "BCELoss", "(", ")", "\n", "", "else", ":", "\n", "            ", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "", "for", "epoch", "in", "range", "(", "1", ",", "100", "+", "1", ")", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "dataloader", ")", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", "as", "pbar", ":", "\n", "                ", "for", "i", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "                    ", "pbar", ".", "update", "(", ")", "\n", "batchsize", "=", "x", ".", "shape", "[", "0", "]", "\n", "fakeZ", "=", "torch", ".", "randn", "(", "batchsize", ",", "512", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "pred_real", ",", "pred_fake", "=", "model", ".", "forward", "(", "x", ".", "cuda", "(", ")", ",", "fakeZ", ")", "\n", "truelabel", "=", "torch", ".", "ones", "(", "batchsize", ")", "-", "0.1", "\n", "fakelabel", "=", "torch", ".", "zeros", "(", "batchsize", ")", "\n", "\n", "if", "args", ".", "random_label", "==", "True", ":", "\n", "                        ", "truelabel", "=", "torch", ".", "randint", "(", "low", "=", "70", ",", "high", "=", "110", ",", "size", "=", "(", "1", ",", "batchsize", ")", ")", "[", "0", "]", "/", "100", "\n", "fakelabel", "=", "torch", ".", "randint", "(", "low", "=", "-", "10", ",", "high", "=", "30", ",", "size", "=", "(", "1", ",", "batchsize", ")", ")", "[", "0", "]", "/", "100", "\n", "", "truelabel", "=", "truelabel", ".", "cuda", "(", ")", "\n", "fakelabel", "=", "fakelabel", ".", "cuda", "(", ")", "\n", "loss_d", "=", "criterion", "(", "pred_real", ".", "view", "(", "-", "1", ")", ",", "truelabel", ")", "+", "criterion", "(", "pred_fake", ".", "view", "(", "-", "1", ")", ",", "fakelabel", ")", "\n", "loss_g", "=", "criterion", "(", "pred_fake", ".", "view", "(", "-", "1", ")", ",", "truelabel", ")", "+", "criterion", "(", "pred_real", ".", "view", "(", "-", "1", ")", ",", "fakelabel", ")", "\n", "logger", ".", "log", "(", "'Disc_loss'", ",", "loss_d", ".", "item", "(", ")", ",", "epoch", ",", "i", ")", "\n", "logger", ".", "log", "(", "'Gen_loss'", ",", "loss_g", ".", "item", "(", ")", ",", "epoch", ",", "i", ")", "\n", "\n", "\n", "if", "loss_g", ">", "args", ".", "max_loss_g", ":", "\n", "                        ", "optimizerG", ".", "zero_grad", "(", ")", "\n", "loss_g", ".", "backward", "(", ")", "\n", "optimizerG", ".", "step", "(", ")", "\n", "pbar", ".", "set_description", "(", "\"Skipped D, Disc_loss %.4f, Gen_loss %.4f\"", "%", "(", "loss_d", ".", "item", "(", ")", ",", "loss_g", ".", "item", "(", ")", ")", ")", "\n", "", "elif", "loss_g", "<", "args", ".", "min_loss_g", ":", "\n", "                        ", "optimizerD", ".", "zero_grad", "(", ")", "\n", "loss_d", ".", "backward", "(", ")", "\n", "optimizerD", ".", "step", "(", ")", "\n", "pbar", ".", "set_description", "(", "\n", "\"Skipped G, Disc_loss %.4f, Gen_loss %.4f\"", "%", "(", "loss_d", ".", "item", "(", ")", ",", "loss_g", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                        ", "optimizerD", ".", "zero_grad", "(", ")", "\n", "loss_d", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "optimizerD", ".", "step", "(", ")", "\n", "optimizerG", ".", "zero_grad", "(", ")", "\n", "loss_g", ".", "backward", "(", ")", "\n", "optimizerG", ".", "step", "(", ")", "\n", "pbar", ".", "set_description", "(", "\n", "\"Disc_loss %.4f, Gen_loss %.4f\"", "%", "(", "loss_d", ".", "item", "(", ")", ",", "loss_g", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "", "", "disc_loss", "=", "logger", ".", "get_measure", "(", "'Disc_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "gen_loss", "=", "logger", ".", "get_measure", "(", "'Gen_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "print", "(", "\"Discriminator loss %.4f, Generator loss %.4f\"", "%", "(", "disc_loss", ",", "gen_loss", ")", ")", "\n", "\n", "logger", ".", "writer", ".", "add_scalar", "(", "'disc_loss'", ",", "disc_loss", ",", "epoch", ")", "\n", "logger", ".", "writer", ".", "add_scalar", "(", "'gen_loss'", ",", "gen_loss", ",", "epoch", ")", "\n", "\n", "# vis in tensorboard", "\n", "for", "(", "image", ",", "label", ")", "in", "dataloader", ":", "\n", "                ", "prediction", "=", "model", "(", "x", "=", "image", ".", "cuda", "(", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "N", "=", "min", "(", "prediction", ".", "shape", "[", "0", "]", ",", "5", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "N", ",", "2", ")", "\n", "image", "=", "image", ".", "data", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "                    ", "ax", "[", "i", ",", "0", "]", ".", "imshow", "(", "prediction", "[", "i", "]", ")", "\n", "ax", "[", "i", ",", "1", "]", ".", "imshow", "(", "image", "[", "i", "]", ")", "\n", "", "logger", ".", "writer", ".", "add_figure", "(", "'Vis'", ",", "fig", ",", "epoch", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "break", "\n", "\n", "", "torch", ".", "save", "(", "logger", ".", "measures", ",", "os", ".", "path", ".", "join", "(", "home_path", ",", "'logger.pth'", ")", ")", "\n", "\n", "if", "args", ".", "save", "and", "gen_loss", "<", "best_gen_loss", ":", "\n", "                ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "gen_loss", ",", "'red'", ")", ")", ")", "\n", "best_gen_loss", "=", "gen_loss", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "hbest_path", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.get_ae_config": [[23, 83], ["print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "model.to.to", "utils.iterative_trainer.IterativeTrainerConfig", "utils.logger.Logger", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "hasattr", "print", "torch.BCEWithLogitsLoss().to", "torch.MSELoss().to", "model.to.parameters", "model.to.train_config", "model.train_config.items", "termcolor.colored", "datasets.MirroredDataset", "model.to.preferred_name", "print", "utils.iterative_trainer.IterativeTrainerConfig.__setattr__", "torch.BCEWithLogitsLoss", "torch.MSELoss"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.DRD.DRDTrain2.DRDDenseCustom.train_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["def", "get_ae_config", "(", "args", ",", "model", ",", "dataset", ",", "home_path", ",", "BCE_Loss", ")", ":", "\n", "    ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "name", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "dataset", ".", "name", "in", "Global", ".", "mirror_augment", ":", "\n", "        ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "dataset", ".", "name", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "None", "\n", "if", "BCE_Loss", ":", "\n", "        ", "criterion", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "", "else", ":", "\n", "        ", "criterion", "=", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "model", ".", "default_sigmoid", "=", "True", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'autoencoder_%s_%s'", "%", "(", "dataset", ".", "name", ",", "model", ".", "preferred_name", "(", ")", ")", "\n", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "False", "\n", "config", ".", "cast_float_label", "=", "False", "\n", "config", ".", "autoencoder_target", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "args", ".", "no_visualize", "\n", "config", ".", "sigmoid_viz", "=", "BCE_Loss", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "logger", "=", "Logger", "(", "home_path", ")", "\n", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-3", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", ".", "max_epoch", "=", "120", "\n", "\n", "if", "hasattr", "(", "model", ",", "'train_config'", ")", ":", "\n", "        ", "model_train_config", "=", "model", ".", "train_config", "(", ")", "\n", "for", "key", ",", "value", "in", "model_train_config", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "'Overriding config.%s'", "%", "key", ")", "\n", "config", ".", "__setattr__", "(", "key", ",", "value", ")", "\n", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.get_vae_config": [[84, 140], ["print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "model.to.to", "models.autoencoders.VAE_Loss", "utils.iterative_trainer.IterativeTrainerConfig", "utils.logger.Logger", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "hasattr", "print", "model.to.parameters", "model.to.train_config", "model.train_config.items", "termcolor.colored", "datasets.MirroredDataset", "model.to.preferred_name", "print", "utils.iterative_trainer.IterativeTrainerConfig.__setattr__"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.DRD.DRDTrain2.DRDDenseCustom.train_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_vae_config", "(", "args", ",", "model", ",", "dataset", ",", "home_path", ",", "BCE_Loss", ")", ":", "\n", "    ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "name", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "dataset", ".", "name", "in", "Global", ".", "mirror_augment", ":", "\n", "        ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "dataset", ".", "name", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Set up the criterion", "\n", "\n", "criterion", "=", "VAE_Loss", "(", "model", ",", "BCE_Loss", ")", "\n", "\n", "# Set up the config", "\n", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'vae_%s_%s'", "%", "(", "dataset", ".", "name", ",", "model", ".", "preferred_name", "(", ")", ")", "\n", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "False", "\n", "config", ".", "cast_float_label", "=", "False", "\n", "config", ".", "autoencoder_target", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "args", ".", "no_visualize", "\n", "config", ".", "sigmoid_viz", "=", "False", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "logger", "=", "Logger", "(", "home_path", ")", "\n", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-3", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", ".", "max_epoch", "=", "120", "\n", "\n", "if", "hasattr", "(", "model", ",", "'train_config'", ")", ":", "\n", "        ", "model_train_config", "=", "model", ".", "train_config", "(", ")", "\n", "for", "key", ",", "value", "in", "model_train_config", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "'Overriding config.%s'", "%", "key", ")", "\n", "config", ".", "__setattr__", "(", "key", ",", "value", ")", "\n", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.train_BCE_AE": [[141, 143], ["ae_setup.train_autoencoder"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.train_autoencoder"], ["", "def", "train_BCE_AE", "(", "args", ",", "model", ",", "dataset", ")", ":", "\n", "    ", "train_autoencoder", "(", "args", ",", "model", ",", "dataset", ",", "BCE_Loss", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.train_MSE_AE": [[144, 146], ["ae_setup.train_autoencoder"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.train_autoencoder"], ["", "def", "train_MSE_AE", "(", "args", ",", "model", ",", "dataset", ")", ":", "\n", "    ", "train_autoencoder", "(", "args", ",", "model", ",", "dataset", ",", "BCE_Loss", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.train_autoencoder": [[147, 227], ["models.get_ref_model_path", "os.path.join", "os.path.join", "os.path.isdir", "os.makedirs", "os.path.isfile", "ae_setup.get_ae_config", "utils.iterative_trainer.IterativeTrainer", "print", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "termcolor.colored", "get_ae_config.logger.log", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "get_ae_config.logger.get_measure().mean_epoch", "get_ae_config.logger.get_measure().mean_epoch", "get_ae_config.logger.writer.add_scalar", "get_ae_config.logger.writer.add_scalar", "get_ae_config.scheduler.step", "torch.save", "torch.save", "torch.save", "get_ae_config.model.state_dict", "utils.iterative_trainer.IterativeTrainer.visdom.save", "float", "get_ae_config.logger.get_measure", "model().data.cpu().squeeze().numpy", "min", "matplotlib.subplots", "image.transpose.data.squeeze().numpy", "range", "get_ae_config.logger.writer.add_figure", "matplotlib.close", "get_ae_config.logger.visualize_average_keys", "get_ae_config.logger.visualize_average_keys", "get_ae_config.logger.visualize_average", "os.path.join", "print", "torch.save", "torch.save", "torch.save", "termcolor.colored", "range", "get_ae_config.logger.get_measure", "get_ae_config.logger.get_measure", "prediction.transpose.transpose", "image.transpose.transpose", "ax[].imshow", "ax[].imshow", "get_ae_config.model.state_dict", "len", "model().data.cpu().squeeze", "prediction.transpose.min", "prediction.transpose.max", "prediction.transpose.min", "len", "image.transpose.data.squeeze", "image.transpose.min", "image.transpose.max", "image.transpose.min", "len", "termcolor.colored", "model().data.cpu", "model", "image.transpose.cuda"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.get_ae_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "train_autoencoder", "(", "args", ",", "model", ",", "dataset", ",", "BCE_Loss", ")", ":", "\n", "    ", "if", "BCE_Loss", ":", "\n", "        ", "model", ".", "netid", "=", "\"BCE.\"", "+", "model", ".", "netid", "\n", "", "else", ":", "\n", "        ", "model", ".", "netid", "=", "\"MSE.\"", "+", "model", ".", "netid", "\n", "\n", "", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "args", ",", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "model_setup", "=", "True", ",", "suffix_str", "=", "model", ".", "netid", ")", "\n", "hbest_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "hlast_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.last.pth'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "home_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "home_path", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isfile", "(", "hbest_path", "+", "\".done\"", ")", ":", "\n", "        ", "config", "=", "get_ae_config", "(", "args", ",", "model", ",", "dataset", ",", "home_path", ",", "BCE_Loss", "=", "BCE_Loss", ")", "\n", "trainer", "=", "IterativeTrainer", "(", "config", ",", "args", ")", "\n", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "best_loss", "=", "999999999", "\n", "for", "epoch", "in", "range", "(", "1", ",", "config", ".", "max_epoch", "+", "1", ")", ":", "\n", "\n", "# Track the learning rates.", "\n", "            ", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "config", ".", "optim", ".", "param_groups", "]", "\n", "config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "# One epoch of train and test.", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "test_loss", "=", "config", ".", "logger", ".", "get_measure", "(", "'test_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "config", ".", "logger", ".", "writer", ".", "add_scalar", "(", "'train_loss'", ",", "train_loss", ",", "epoch", ")", "\n", "config", ".", "logger", ".", "writer", ".", "add_scalar", "(", "'test_loss'", ",", "test_loss", ",", "epoch", ")", "\n", "config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "# vis in tensorboard", "\n", "for", "(", "image", ",", "label", ")", "in", "config", ".", "valid_loader", ":", "\n", "                ", "prediction", "=", "model", "(", "image", ".", "cuda", "(", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "prediction", "=", "(", "prediction", "-", "prediction", ".", "min", "(", ")", ")", "/", "(", "prediction", ".", "max", "(", ")", "-", "prediction", ".", "min", "(", ")", ")", "\n", "if", "len", "(", "prediction", ".", "shape", ")", ">", "3", "and", "prediction", ".", "shape", "[", "1", "]", "==", "3", ":", "\n", "                    ", "prediction", "=", "prediction", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "# change to N W H C", "\n", "", "N", "=", "min", "(", "prediction", ".", "shape", "[", "0", "]", ",", "5", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "N", ",", "2", ")", "\n", "image", "=", "image", ".", "data", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "image", "=", "(", "image", "-", "image", ".", "min", "(", ")", ")", "/", "(", "image", ".", "max", "(", ")", "-", "image", ".", "min", "(", ")", ")", "\n", "if", "len", "(", "image", ".", "shape", ")", ">", "3", "and", "image", ".", "shape", "[", "1", "]", "==", "3", ":", "\n", "                    ", "image", "=", "image", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "                    ", "ax", "[", "i", ",", "0", "]", ".", "imshow", "(", "prediction", "[", "i", "]", ")", "\n", "ax", "[", "i", ",", "1", "]", ".", "imshow", "(", "image", "[", "i", "]", ")", "\n", "", "config", ".", "logger", ".", "writer", ".", "add_figure", "(", "'Vis'", ",", "fig", ",", "epoch", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "break", "\n", "\n", "", "if", "config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                ", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_accuracy'", ",", "'Average Accuracy'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "\n", "# Save the logger for future reference.", "\n", "", "torch", ".", "save", "(", "config", ".", "logger", ".", "measures", ",", "os", ".", "path", ".", "join", "(", "home_path", ",", "'logger.pth'", ")", ")", "\n", "\n", "# Saving a checkpoint. Enable if needed!", "\n", "# if args.save and epoch % 10 == 0:", "\n", "#     print('Saving a %s at iter %s'%(colored('snapshot', 'yellow'), colored('%d'%epoch, 'yellow')))", "\n", "#     torch.save(config.model.state_dict(), os.path.join(home_path, 'model.%d.pth'%epoch))", "\n", "\n", "if", "args", ".", "save", "and", "test_loss", "<", "best_loss", ":", "\n", "                ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_loss", ",", "'red'", ")", ")", ")", "\n", "best_loss", "=", "test_loss", "\n", "torch", ".", "save", "(", "config", ".", "model", ".", "state_dict", "(", ")", ",", "hbest_path", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "hbest_path", "+", "\".done\"", ")", "\n", "torch", ".", "save", "(", "config", ".", "model", ".", "state_dict", "(", ")", ",", "hlast_path", ")", "\n", "\n", "if", "config", ".", "visualize", ":", "\n", "            ", "trainer", ".", "visdom", ".", "save", "(", "[", "trainer", ".", "visdom", ".", "env", "]", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"Skipping %s\"", "%", "(", "colored", "(", "home_path", ",", "'yellow'", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.train_variational_autoencoder": [[228, 308], ["models.get_ref_model_path", "os.path.join", "os.path.join", "os.path.isdir", "os.makedirs", "os.path.isfile", "ae_setup.get_vae_config", "utils.iterative_trainer.IterativeTrainer", "print", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "termcolor.colored", "get_vae_config.logger.log", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "get_vae_config.logger.get_measure().mean_epoch", "get_vae_config.logger.get_measure().mean_epoch", "get_vae_config.logger.writer.add_scalar", "get_vae_config.logger.writer.add_scalar", "get_vae_config.scheduler.step", "torch.save", "torch.save", "torch.save", "get_vae_config.model.state_dict", "utils.iterative_trainer.IterativeTrainer.visdom.save", "float", "get_vae_config.logger.get_measure", "model().data.cpu().squeeze().numpy", "min", "matplotlib.subplots", "image.transpose.data.squeeze().numpy", "range", "get_vae_config.logger.writer.add_figure", "matplotlib.close", "get_vae_config.logger.visualize_average_keys", "get_vae_config.logger.visualize_average_keys", "get_vae_config.logger.visualize_average", "os.path.join", "print", "torch.save", "torch.save", "torch.save", "termcolor.colored", "range", "get_vae_config.logger.get_measure", "get_vae_config.logger.get_measure", "prediction.transpose.transpose", "image.transpose.transpose", "ax[].imshow", "ax[].imshow", "get_vae_config.model.state_dict", "len", "model().data.cpu().squeeze", "prediction.transpose.min", "prediction.transpose.max", "prediction.transpose.min", "len", "image.transpose.data.squeeze", "image.transpose.min", "image.transpose.max", "image.transpose.min", "len", "termcolor.colored", "model().data.cpu", "model", "image.transpose.cuda"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.ae_setup.get_vae_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "", "def", "train_variational_autoencoder", "(", "args", ",", "model", ",", "dataset", ",", "BCE_Loss", "=", "True", ")", ":", "\n", "    ", "if", "BCE_Loss", ":", "\n", "        ", "model", ".", "netid", "=", "\"BCE.\"", "+", "model", ".", "netid", "\n", "", "else", ":", "\n", "        ", "model", ".", "netid", "=", "\"MSE.\"", "+", "model", ".", "netid", "\n", "", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "args", ",", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "model_setup", "=", "True", ",", "suffix_str", "=", "model", ".", "netid", ")", "\n", "hbest_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "hlast_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.last.pth'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "home_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "home_path", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isfile", "(", "hbest_path", "+", "\".done\"", ")", ":", "\n", "        ", "config", "=", "get_vae_config", "(", "args", ",", "model", ",", "dataset", ",", "home_path", ",", "BCE_Loss", ")", "\n", "trainer", "=", "IterativeTrainer", "(", "config", ",", "args", ")", "\n", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "best_loss", "=", "999999999", "\n", "for", "epoch", "in", "range", "(", "1", ",", "config", ".", "max_epoch", "+", "1", ")", ":", "\n", "\n", "# Track the learning rates.", "\n", "            ", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "config", ".", "optim", ".", "param_groups", "]", "\n", "config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "# One epoch of train and test.", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "test_loss", "=", "config", ".", "logger", ".", "get_measure", "(", "'test_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "\n", "config", ".", "logger", ".", "writer", ".", "add_scalar", "(", "'train_loss'", ",", "train_loss", ",", "epoch", ")", "\n", "config", ".", "logger", ".", "writer", ".", "add_scalar", "(", "'test_loss'", ",", "test_loss", ",", "epoch", ")", "\n", "config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "# vis in tensorboard", "\n", "for", "(", "image", ",", "label", ")", "in", "config", ".", "valid_loader", ":", "\n", "                ", "prediction", "=", "model", "(", "image", ".", "cuda", "(", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "prediction", "=", "(", "prediction", "-", "prediction", ".", "min", "(", ")", ")", "/", "(", "prediction", ".", "max", "(", ")", "-", "prediction", ".", "min", "(", ")", ")", "\n", "if", "len", "(", "prediction", ".", "shape", ")", ">", "3", "and", "prediction", ".", "shape", "[", "1", "]", "==", "3", ":", "\n", "                    ", "prediction", "=", "prediction", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "# change to N W H C", "\n", "", "N", "=", "min", "(", "prediction", ".", "shape", "[", "0", "]", ",", "5", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "N", ",", "2", ")", "\n", "image", "=", "image", ".", "data", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "image", "=", "(", "image", "-", "image", ".", "min", "(", ")", ")", "/", "(", "image", ".", "max", "(", ")", "-", "image", ".", "min", "(", ")", ")", "\n", "if", "len", "(", "image", ".", "shape", ")", ">", "3", "and", "image", ".", "shape", "[", "1", "]", "==", "3", ":", "\n", "                    ", "image", "=", "image", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "                    ", "ax", "[", "i", ",", "0", "]", ".", "imshow", "(", "prediction", "[", "i", "]", ")", "\n", "ax", "[", "i", ",", "1", "]", ".", "imshow", "(", "image", "[", "i", "]", ")", "\n", "", "config", ".", "logger", ".", "writer", ".", "add_figure", "(", "'Vis'", ",", "fig", ",", "epoch", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "break", "\n", "\n", "", "if", "config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                ", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_accuracy'", ",", "'Average Accuracy'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "\n", "# Save the logger for future reference.", "\n", "", "torch", ".", "save", "(", "config", ".", "logger", ".", "measures", ",", "os", ".", "path", ".", "join", "(", "home_path", ",", "'logger.pth'", ")", ")", "\n", "\n", "# Saving a checkpoint. Enable if needed!", "\n", "# if args.save and epoch % 10 == 0:", "\n", "#     print('Saving a %s at iter %s'%(colored('snapshot', 'yellow'), colored('%d'%epoch, 'yellow')))", "\n", "#     torch.save(config.model.state_dict(), os.path.join(home_path, 'model.%d.pth'%epoch))", "\n", "\n", "if", "args", ".", "save", "and", "test_loss", "<", "best_loss", ":", "\n", "                ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_loss", ",", "'red'", ")", ")", ")", "\n", "best_loss", "=", "test_loss", "\n", "torch", ".", "save", "(", "config", ".", "model", ".", "state_dict", "(", ")", ",", "hbest_path", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "hbest_path", "+", "\".done\"", ")", "\n", "torch", ".", "save", "(", "config", ".", "model", ".", "state_dict", "(", ")", ",", "hlast_path", ")", "\n", "\n", "if", "config", ".", "visualize", ":", "\n", "            ", "trainer", ".", "visdom", ".", "save", "(", "[", "trainer", ".", "visdom", ".", "env", "]", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"Skipping %s\"", "%", "(", "colored", "(", "home_path", ",", "'yellow'", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.kway_logistic_setup.get_KLclassifier_config": [[17, 69], ["print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "methods.logistic_threshold.KWayLogisticLoss().to", "methods.logistic_threshold.KWayLogisticWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "utils.logger.Logger", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "hasattr", "print", "KWayLogisticWrapper().to.parameters", "model.train_config", "model.train_config.items", "termcolor.colored", "datasets.MirroredDataset", "methods.logistic_threshold.KWayLogisticLoss", "methods.logistic_threshold.KWayLogisticWrapper", "print", "utils.iterative_trainer.IterativeTrainerConfig.__setattr__"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.DRD.DRDTrain2.DRDDenseCustom.train_config"], ["def", "get_KLclassifier_config", "(", "args", ",", "model", ",", "home_path", ",", "dataset", ")", ":", "\n", "    ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "name", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "dataset", ".", "name", "in", "Global", ".", "mirror_augment", ":", "\n", "        ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "dataset", ".", "name", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "KWayLogisticLoss", "(", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Set up the model", "\n", "klmodel", "=", "KWayLogisticWrapper", "(", "model", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Set up the config", "\n", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'KWayLogistic_%s_%s'", "%", "(", "dataset", ".", "name", ",", "model", ".", "__class__", ".", "__name__", ")", "\n", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "klmodel", "\n", "config", ".", "logger", "=", "Logger", "(", "home_path", ")", "\n", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "klmodel", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", ".", "max_epoch", "=", "120", "\n", "\n", "if", "hasattr", "(", "model", ",", "'train_config'", ")", ":", "\n", "        ", "model_train_config", "=", "model", ".", "train_config", "(", ")", "\n", "for", "key", ",", "value", "in", "model_train_config", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "'Overriding config.%s'", "%", "key", ")", "\n", "config", ".", "__setattr__", "(", "key", ",", "value", ")", "\n", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.kway_logistic_setup.train_classifier": [[70, 132], ["models.get_ref_model_path", "kway_logistic_setup.get_KLclassifier_config", "os.path.join", "utils.iterative_trainer.IterativeTrainer", "print", "get_KLclassifier_config.model.load_state_dict", "get_KLclassifier_config.model.eval", "utils.iterative_trainer.IterativeTrainer.run_epoch", "get_KLclassifier_config.logger.get_measure().mean_epoch", "print", "os.path.isdir", "os.makedirs", "os.path.isfile", "print", "range", "torch.save", "torch.save", "print", "torch.load", "torch.load", "termcolor.colored", "get_KLclassifier_config.logger.log", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "get_KLclassifier_config.logger.get_measure().mean_epoch", "get_KLclassifier_config.scheduler.step", "get_KLclassifier_config.logger.get_measure().mean_epoch", "torch.save", "torch.save", "utils.iterative_trainer.IterativeTrainer.visdom.save", "get_KLclassifier_config.logger.get_measure", "termcolor.colored", "float", "get_KLclassifier_config.logger.get_measure", "get_KLclassifier_config.logger.visualize_average_keys", "get_KLclassifier_config.logger.visualize_average_keys", "get_KLclassifier_config.logger.visualize_average", "os.path.join", "print", "torch.save", "torch.save", "termcolor.colored", "range", "get_KLclassifier_config.logger.get_measure", "get_KLclassifier_config.logger.get_measure", "get_KLclassifier_config.model.state_dict", "len", "termcolor.colored"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.kway_logistic_setup.get_KLclassifier_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "train_classifier", "(", "args", ",", "model", ",", "dataset", ")", ":", "\n", "    ", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "args", ",", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "model_setup", "=", "True", ",", "suffix_str", "=", "'KLogistic'", ")", "\n", "config", "=", "get_KLclassifier_config", "(", "args", ",", "model", ",", "home_path", ",", "dataset", ")", "\n", "\n", "hbest_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "home_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "home_path", ")", "\n", "\n", "", "trainer", "=", "IterativeTrainer", "(", "config", ",", "args", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "hbest_path", "+", "\".done\"", ")", ":", "\n", "        ", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "best_accuracy", "=", "-", "1", "\n", "for", "epoch", "in", "range", "(", "1", ",", "config", ".", "max_epoch", "+", "1", ")", ":", "\n", "\n", "# Track the learning rates.", "\n", "            ", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "config", ".", "optim", ".", "param_groups", "]", "\n", "config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "# One epoch of train and test.", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "if", "config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                ", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_accuracy'", ",", "'Average Accuracy'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "\n", "", "test_average_acc", "=", "config", ".", "logger", ".", "get_measure", "(", "'test_accuracy'", ")", ".", "mean_epoch", "(", ")", "\n", "\n", "# Save the logger for future reference.", "\n", "torch", ".", "save", "(", "config", ".", "logger", ".", "measures", ",", "os", ".", "path", ".", "join", "(", "home_path", ",", "'logger.pth'", ")", ")", "\n", "\n", "# Saving a checkpoint. Enable if needed!", "\n", "# if args.save and epoch % 10 == 0:", "\n", "#     print('Saving a %s at iter %s'%(colored('snapshot', 'yellow'), colored('%d'%epoch, 'yellow')))", "\n", "#     torch.save(config.model.state_dict(), os.path.join(home_path, 'model.%d.pth'%epoch))", "\n", "\n", "if", "args", ".", "save", "and", "best_accuracy", "<", "test_average_acc", ":", "\n", "                ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_average_acc", ",", "'red'", ")", ")", ")", "\n", "best_accuracy", "=", "test_average_acc", "\n", "torch", ".", "save", "(", "config", ".", "model", ".", "state_dict", "(", ")", ",", "hbest_path", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "hbest_path", "+", "\".done\"", ")", "\n", "if", "config", ".", "visualize", ":", "\n", "            ", "trainer", ".", "visdom", ".", "save", "(", "[", "trainer", ".", "visdom", ".", "env", "]", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"Skipping %s\"", "%", "(", "colored", "(", "home_path", ",", "'yellow'", ")", ")", ")", "\n", "\n", "", "print", "(", "\"Loading the best model.\"", ")", "\n", "config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "hbest_path", ")", ")", "\n", "config", ".", "model", ".", "eval", "(", ")", "\n", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'all'", ")", "\n", "test_average_acc", "=", "config", ".", "logger", ".", "get_measure", "(", "'all_accuracy'", ")", ".", "mean_epoch", "(", "epoch", "=", "0", ")", "\n", "print", "(", "\"All average accuracy %s\"", "%", "colored", "(", "'%.4f%%'", "%", "(", "test_average_acc", "*", "100", ")", ",", "'red'", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.deep_ensemble_setup.get_classifier_config": [[15, 72], ["print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "DE.DeepEnsembleWrapper().to", "DE.DeepEnsembleLoss().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "utils.logger.Logger", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "hasattr", "print", "DE.DeepEnsembleWrapper().to.preferred_name", "DE.DeepEnsembleWrapper().to.parameters", "DE.DeepEnsembleWrapper().to.model.train_config", "model.model.train_config.items", "termcolor.colored", "datasets.MirroredDataset", "DE.DeepEnsembleWrapper", "DE.DeepEnsembleLoss", "print", "utils.iterative_trainer.IterativeTrainerConfig.__setattr__"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name", "home.repos.pwc.inspect_result.caotians1_OD-test-master.DRD.DRDTrain2.DRDDenseCustom.train_config"], ["def", "get_classifier_config", "(", "args", ",", "model", ",", "dataset", ",", "home_path", ",", "mid", "=", "0", ")", ":", "\n", "    ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "name", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "dataset", ".", "name", "in", "Global", ".", "mirror_augment", ":", "\n", "        ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "dataset", ".", "name", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "args", ".", "batch_size", "/", "2", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "import", "methods", ".", "deep_ensemble", "as", "DE", "\n", "# Set up the model", "\n", "model", "=", "DE", ".", "DeepEnsembleWrapper", "(", "model", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "DE", ".", "DeepEnsembleLoss", "(", "ensemble_network", "=", "model", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Set up the config", "\n", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "model", ",", "'preferred_name'", ")", ":", "\n", "        ", "base_model_name", "=", "model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'DeepEnsemble_%s_%s(%d)'", "%", "(", "dataset", ".", "name", ",", "base_model_name", ",", "mid", ")", "\n", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "logger", "=", "Logger", "(", "home_path", ")", "\n", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", ".", "max_epoch", "=", "120", "\n", "\n", "if", "hasattr", "(", "model", ".", "model", ",", "'train_config'", ")", ":", "\n", "        ", "model_train_config", "=", "model", ".", "model", ".", "train_config", "(", ")", "\n", "for", "key", ",", "value", "in", "model_train_config", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "'Overriding config.%s'", "%", "key", ")", "\n", "config", ".", "__setattr__", "(", "key", ",", "value", ")", "\n", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.deep_ensemble_setup.train_classifier": [[73, 142], ["range", "models.get_ref_model_path", "os.path.join", "deep_ensemble_setup.get_classifier_config", "utils.iterative_trainer.IterativeTrainer", "print", "get_classifier_config.model.load_state_dict", "get_classifier_config.model.eval", "utils.iterative_trainer.IterativeTrainer.run_epoch", "get_classifier_config.logger.get_measure().mean_epoch", "print", "os.path.isdir", "os.makedirs", "os.path.isfile", "model.__class__", "os.path.isfile", "print", "range", "torch.save", "torch.save", "print", "torch.load", "torch.load", "print", "termcolor.colored", "get_classifier_config.logger.log", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "get_classifier_config.logger.get_measure().mean_epoch", "get_classifier_config.scheduler.step", "get_classifier_config.logger.get_measure().mean_epoch", "torch.save", "torch.save", "utils.iterative_trainer.IterativeTrainer.visdom.save", "get_classifier_config.logger.get_measure", "termcolor.colored", "float", "get_classifier_config.logger.get_measure", "get_classifier_config.logger.visualize_average_keys", "get_classifier_config.logger.visualize_average_keys", "get_classifier_config.logger.visualize_average", "os.path.join", "print", "torch.save", "torch.save", "termcolor.colored", "termcolor.colored", "range", "get_classifier_config.logger.get_measure", "get_classifier_config.logger.get_measure", "get_classifier_config.model.state_dict", "len", "termcolor.colored"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.classifier_setup.get_classifier_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "train_classifier", "(", "args", ",", "model", ",", "dataset", ")", ":", "\n", "    ", "config", "=", "None", "\n", "\n", "for", "mid", "in", "range", "(", "5", ")", ":", "\n", "        ", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "args", ",", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "model_setup", "=", "True", ",", "suffix_str", "=", "'DE.%d'", "%", "mid", ")", "\n", "hbest_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "home_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "home_path", ")", "\n", "", "else", ":", "\n", "            ", "if", "os", ".", "path", ".", "isfile", "(", "hbest_path", "+", "\".done\"", ")", ":", "\n", "                ", "print", "(", "\"Skipping %s\"", "%", "(", "colored", "(", "home_path", ",", "'yellow'", ")", ")", ")", "\n", "continue", "\n", "\n", "", "", "config", "=", "get_classifier_config", "(", "args", ",", "model", ".", "__class__", "(", ")", ",", "dataset", ",", "home_path", ",", "mid", "=", "mid", ")", "\n", "\n", "trainer", "=", "IterativeTrainer", "(", "config", ",", "args", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "hbest_path", "+", "\".done\"", ")", ":", "\n", "            ", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "best_accuracy", "=", "-", "1", "\n", "for", "epoch", "in", "range", "(", "1", ",", "config", ".", "max_epoch", "+", "1", ")", ":", "\n", "\n", "# Track the learning rates.", "\n", "                ", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "config", ".", "optim", ".", "param_groups", "]", "\n", "config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "# One epoch of train and test.", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "if", "config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                    ", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_accuracy'", ",", "'Average Accuracy'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "\n", "", "test_average_acc", "=", "config", ".", "logger", ".", "get_measure", "(", "'test_accuracy'", ")", ".", "mean_epoch", "(", ")", "\n", "\n", "# Save the logger for future reference.", "\n", "torch", ".", "save", "(", "config", ".", "logger", ".", "measures", ",", "os", ".", "path", ".", "join", "(", "home_path", ",", "'logger.pth'", ")", ")", "\n", "\n", "# Saving a checkpoint. Enable if needed!", "\n", "# if args.save and epoch % 10 == 0:", "\n", "#     print('Saving a %s at iter %s'%(colored('snapshot', 'yellow'), colored('%d'%epoch, 'yellow')))", "\n", "#     torch.save(config.model.state_dict(), os.path.join(home_path, 'model.%d.pth'%epoch))", "\n", "\n", "if", "args", ".", "save", "and", "best_accuracy", "<", "test_average_acc", ":", "\n", "                    ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_average_acc", ",", "'red'", ")", ")", ")", "\n", "best_accuracy", "=", "test_average_acc", "\n", "torch", ".", "save", "(", "config", ".", "model", ".", "state_dict", "(", ")", ",", "hbest_path", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "hbest_path", "+", "\".done\"", ")", "\n", "if", "config", ".", "visualize", ":", "\n", "                ", "trainer", ".", "visdom", ".", "save", "(", "[", "trainer", ".", "visdom", ".", "env", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "\"Skipping %s\"", "%", "(", "colored", "(", "home_path", ",", "'yellow'", ")", ")", ")", "\n", "\n", "", "print", "(", "\"Loading the best model.\"", ")", "\n", "config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "hbest_path", ")", ")", "\n", "config", ".", "model", ".", "eval", "(", ")", "\n", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'all'", ")", "\n", "test_average_acc", "=", "config", ".", "logger", ".", "get_measure", "(", "'all_accuracy'", ")", ".", "mean_epoch", "(", "epoch", "=", "0", ")", "\n", "print", "(", "\"All average accuracy %s\"", "%", "colored", "(", "'%.4f%%'", "%", "(", "test_average_acc", "*", "100", ")", ",", "'red'", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.classifier_setup.get_classifier_config": [[21, 107], ["print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.NLLLoss().to", "model.to.to", "utils.iterative_trainer.IterativeTrainerConfig", "models.get_ref_model_path", "utils.logger.Logger", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "hasattr", "print", "numpy.array", "numpy.array", "print", "numpy.array", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.utils.data.sampler.WeightedRandomSampler", "torch.utils.data.DataLoader", "numpy.array", "numpy.array", "print", "numpy.array", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.utils.data.sampler.WeightedRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "model.to.parameters", "model.to.train_config", "model.train_config.items", "termcolor.colored", "datasets.MirroredDataset", "np.array.append", "torch.from_numpy.type", "len", "np.array.append", "torch.from_numpy.type", "len", "torch.NLLLoss", "print", "utils.iterative_trainer.IterativeTrainerConfig.__setattr__", "y.numpy", "len", "y.numpy", "len", "numpy.unique", "numpy.unique", "numpy.where", "numpy.where"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.DRD.DRDTrain2.DRDDenseCustom.train_config"], ["def", "get_classifier_config", "(", "args", ",", "model", ",", "dataset", ",", "balanced", "=", "False", ")", ":", "\n", "    ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "name", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "dataset", ".", "name", "in", "Global", ".", "mirror_augment", ":", "\n", "        ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "dataset", ".", "name", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "if", "balanced", ":", "\n", "        ", "y_train", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "train_ds", ":", "\n", "            ", "y_train", ".", "append", "(", "y", ".", "numpy", "(", ")", ")", "\n", "", "y_train", "=", "np", ".", "array", "(", "y_train", ")", "\n", "class_sample_count", "=", "np", ".", "array", "(", "[", "len", "(", "np", ".", "where", "(", "y_train", "==", "t", ")", "[", "0", "]", ")", "for", "t", "in", "np", ".", "unique", "(", "y_train", ")", "]", ")", "\n", "print", "(", "class_sample_count", ")", "\n", "weight", "=", "1.", "/", "class_sample_count", "\n", "samples_weight", "=", "np", ".", "array", "(", "[", "weight", "[", "t", "]", "for", "t", "in", "y_train", "]", ")", "\n", "\n", "samples_weight", "=", "torch", ".", "from_numpy", "(", "samples_weight", ")", "\n", "sampler", "=", "WeightedRandomSampler", "(", "samples_weight", ".", "type", "(", "'torch.DoubleTensor'", ")", ",", "len", "(", "samples_weight", ")", ")", "\n", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "\n", "pin_memory", "=", "True", ",", "sampler", "=", "sampler", ")", "\n", "\n", "y_val", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "valid_ds", ":", "\n", "            ", "y_val", ".", "append", "(", "y", ".", "numpy", "(", ")", ")", "\n", "", "y_val", "=", "np", ".", "array", "(", "y_val", ")", "\n", "class_sample_count", "=", "np", ".", "array", "(", "[", "len", "(", "np", ".", "where", "(", "y_val", "==", "t", ")", "[", "0", "]", ")", "for", "t", "in", "np", ".", "unique", "(", "y_val", ")", "]", ")", "\n", "print", "(", "class_sample_count", ")", "\n", "weight", "=", "1.", "/", "class_sample_count", "\n", "samples_weight", "=", "np", ".", "array", "(", "[", "weight", "[", "t", "]", "for", "t", "in", "y_val", "]", ")", "\n", "\n", "samples_weight", "=", "torch", ".", "from_numpy", "(", "samples_weight", ")", "\n", "sampler", "=", "WeightedRandomSampler", "(", "samples_weight", ".", "type", "(", "'torch.DoubleTensor'", ")", ",", "len", "(", "samples_weight", ")", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "\n", "pin_memory", "=", "True", ",", "sampler", "=", "sampler", ")", "\n", "\n", "", "else", ":", "\n", "        ", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "nn", ".", "NLLLoss", "(", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Set up the config", "\n", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'classifier_%s_%s'", "%", "(", "dataset", ".", "name", ",", "model", ".", "__class__", ".", "__name__", ")", "\n", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "args", ",", "config", ".", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "model_setup", "=", "True", ",", "\n", "suffix_str", "=", "'base0'", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "home_path", ")", "\n", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", ".", "max_epoch", "=", "120", "\n", "\n", "if", "hasattr", "(", "model", ",", "'train_config'", ")", ":", "\n", "        ", "model_train_config", "=", "model", ".", "train_config", "(", ")", "\n", "for", "key", ",", "value", "in", "model_train_config", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "'Overriding config.%s'", "%", "key", ")", "\n", "config", ".", "__setattr__", "(", "key", ",", "value", ")", "\n", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.classifier_setup.train_classifier": [[108, 174], ["classifier_setup.get_classifier_config", "models.get_ref_model_path", "os.path.join", "utils.iterative_trainer.IterativeTrainer", "print", "get_classifier_config.model.load_state_dict", "get_classifier_config.model.eval", "utils.iterative_trainer.IterativeTrainer.run_epoch", "get_classifier_config.logger.get_measure().mean_epoch", "print", "os.path.isdir", "os.makedirs", "os.path.isfile", "print", "range", "torch.save", "torch.save", "torch.save", "print", "torch.load", "torch.load", "torch.load", "termcolor.colored", "get_classifier_config.logger.log", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "get_classifier_config.logger.get_measure().mean_epoch", "get_classifier_config.logger.get_measure().mean_epoch", "print", "get_classifier_config.scheduler.step", "get_classifier_config.logger.get_measure().mean_epoch", "get_classifier_config.logger.writer.add_scalar", "get_classifier_config.logger.writer.add_scalar", "print", "torch.save", "torch.save", "torch.save", "utils.iterative_trainer.IterativeTrainer.visdom.save", "get_classifier_config.logger.get_measure", "termcolor.colored", "float", "get_classifier_config.logger.get_measure", "get_classifier_config.logger.visualize_average_keys", "get_classifier_config.logger.visualize_average_keys", "get_classifier_config.logger.visualize_average", "os.path.join", "print", "torch.save", "torch.save", "torch.save", "termcolor.colored", "range", "get_classifier_config.logger.get_measure", "get_classifier_config.logger.get_measure", "get_classifier_config.logger.get_measure", "get_classifier_config.model.state_dict", "len", "termcolor.colored"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.categories.classifier_setup.get_classifier_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "train_classifier", "(", "args", ",", "model", ",", "dataset", ",", "balanced", "=", "False", ")", ":", "\n", "    ", "config", "=", "get_classifier_config", "(", "args", ",", "model", ",", "dataset", ",", "balanced", ")", "\n", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "args", ",", "config", ".", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "model_setup", "=", "True", ",", "suffix_str", "=", "'base0'", ")", "\n", "hbest_path", "=", "os", ".", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "home_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "home_path", ")", "\n", "\n", "", "trainer", "=", "IterativeTrainer", "(", "config", ",", "args", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "hbest_path", "+", "\".done\"", ")", ":", "\n", "        ", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "best_accuracy", "=", "-", "1", "\n", "for", "epoch", "in", "range", "(", "1", ",", "config", ".", "max_epoch", "+", "1", ")", ":", "\n", "\n", "# Track the learning rates.", "\n", "            ", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "config", ".", "optim", ".", "param_groups", "]", "\n", "config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "# One epoch of train and test.", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "train_average_acc", "=", "config", ".", "logger", ".", "get_measure", "(", "'train_accuracy'", ")", ".", "mean_epoch", "(", ")", "\n", "print", "(", "\"Train Loss %.3f, Train Accuracy %.3f\"", "%", "(", "train_loss", ",", "train_average_acc", ")", ")", "\n", "\n", "config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "if", "config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                ", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_accuracy'", ",", "'Average Accuracy'", ",", "trainer", ".", "visdom", ")", "\n", "config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "\n", "", "test_average_acc", "=", "config", ".", "logger", ".", "get_measure", "(", "'test_accuracy'", ")", ".", "mean_epoch", "(", ")", "\n", "config", ".", "logger", ".", "writer", ".", "add_scalar", "(", "'train_acc'", ",", "train_average_acc", ",", "epoch", ")", "\n", "config", ".", "logger", ".", "writer", ".", "add_scalar", "(", "'test_acc'", ",", "test_average_acc", ",", "epoch", ")", "\n", "print", "(", "\"Test Accuracy\"", ",", "test_average_acc", ")", "\n", "# Save the logger for future reference.", "\n", "torch", ".", "save", "(", "config", ".", "logger", ".", "measures", ",", "os", ".", "path", ".", "join", "(", "home_path", ",", "'logger.pth'", ")", ")", "\n", "\n", "# Saving a checkpoint. Enable if needed!", "\n", "# if args.save and epoch % 10 == 0:", "\n", "#     print('Saving a %s at iter %s'%(colored('snapshot', 'yellow'), colored('%d'%epoch, 'yellow')))", "\n", "#     torch.save(config.model.state_dict(), os.path.join(home_path, 'model.%d.pth'%epoch))", "\n", "\n", "if", "args", ".", "save", "and", "best_accuracy", "<", "test_average_acc", ":", "\n", "                ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_average_acc", ",", "'red'", ")", ")", ")", "\n", "best_accuracy", "=", "test_average_acc", "\n", "torch", ".", "save", "(", "config", ".", "model", ".", "state_dict", "(", ")", ",", "hbest_path", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "hbest_path", "+", "\".done\"", ")", "\n", "if", "config", ".", "visualize", ":", "\n", "            ", "trainer", ".", "visdom", ".", "save", "(", "[", "trainer", ".", "visdom", ".", "env", "]", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"Skipping %s\"", "%", "(", "colored", "(", "home_path", ",", "'yellow'", ")", ")", ")", "\n", "\n", "", "print", "(", "\"Loading the best model.\"", ")", "\n", "config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "hbest_path", ")", ")", "\n", "config", ".", "model", ".", "eval", "(", ")", "\n", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'all'", ")", "\n", "test_average_acc", "=", "config", ".", "logger", ".", "get_measure", "(", "'all_accuracy'", ")", ".", "mean_epoch", "(", "epoch", "=", "0", ")", "\n", "print", "(", "\"All average accuracy %s\"", "%", "colored", "(", "'%.4f%%'", "%", "(", "test_average_acc", "*", "100", ")", ",", "'red'", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.DRD.DRDTrain.DRDDenseCustom.train_config": [[15, 26], ["torch.optim.lr_scheduler.StepLR", "torch.optim.Adam", "torch.optim.Adam", "DRDTrain.DRDDenseCustom.densenet121.classifier.parameters", "DRDTrain.DRDDenseCustom.densenet121.classifier.parameters", "DRDTrain.DRDDenseCustom.densenet121.features.parameters"], "methods", ["None"], ["    ", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "if", "self", ".", "train_features", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "\n", "[", "{", "'params'", ":", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "'lr'", ":", "1e-3", "}", ",", "{", "'params'", ":", "self", ".", "densenet121", ".", "features", ".", "parameters", "(", ")", "}", "]", ",", "\n", "lr", "=", "1e-3", ")", "\n", "", "else", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ",", ")", "\n", "", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "config", "[", "'optim'", "]", ",", "30", ",", "gamma", "=", "0.5", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "300", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.DRD.DRDTrain2.DRDDenseCustom.train_config": [[21, 32], ["torch.optim.lr_scheduler.StepLR", "torch.optim.Adam", "torch.optim.Adam", "DRDTrain2.DRDDenseCustom.densenet121.classifier.parameters", "DRDTrain2.DRDDenseCustom.densenet121.classifier.parameters", "DRDTrain2.DRDDenseCustom.densenet121.features.parameters"], "methods", ["None"], ["    ", "def", "train_config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "if", "self", ".", "train_features", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "\n", "[", "{", "'params'", ":", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "'lr'", ":", "1e-3", "}", ",", "{", "'params'", ":", "self", ".", "densenet121", ".", "features", ".", "parameters", "(", ")", "}", "]", ",", "\n", "lr", "=", "1e-3", ")", "\n", "", "else", ":", "\n", "            ", "config", "[", "'optim'", "]", "=", "optim", ".", "Adam", "(", "self", ".", "densenet121", ".", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ",", ")", "\n", "", "config", "[", "'scheduler'", "]", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "config", "[", "'optim'", "]", ",", "30", ",", "gamma", "=", "0.5", ")", "\n", "config", "[", "'max_epoch'", "]", "=", "100", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.KNNModel.__init__": [[22, 31], ["torch.Module.__init__", "base_data.half().cuda", "nearest_neighbor.KNNModel.base_data.size", "nearest_neighbor.KNNModel.base_data.view", "base_data.half"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "base_data", ",", "k", "=", "1", ")", ":", "\n", "        ", "super", "(", "KNNModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_data", "=", "base_data", ".", "half", "(", ")", ".", "cuda", "(", ")", "# We probably have to rewrite this part of the code ", "\n", "# as larger datasets may not entirely fit into the GPU memory.", "\n", "n_data", "=", "self", ".", "base_data", ".", "size", "(", "0", ")", "\n", "self", ".", "base_data", "=", "self", ".", "base_data", ".", "view", "(", "n_data", ",", "-", "1", ")", "# Flatten the train data.", "\n", "self", ".", "base_data_norm", "=", "(", "self", ".", "base_data", "*", "self", ".", "base_data", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "self", ".", "K", "=", "k", "\n", "self", ".", "norm", "=", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.KNNModel.forward": [[32, 46], ["x.data.view().half.data.view().half.size", "x.data.view().half.data.view().half.data.view().half", "base_data.size", "diffs.sqrt_().detach_", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "output.float", "x.data.view().half.data.view().half.data.view", "base_norm.unsqueeze().expand", "x_norm.unsqueeze().expand", "x.data.view().half.data.view().half.matmul", "diffs.sqrt_", "base_data.t", "base_norm.unsqueeze", "x_norm.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "**", "kwargs", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "x", ".", "data", ".", "view", "(", "n_samples", ",", "-", "1", ")", ".", "half", "(", ")", "# flatten to vectors.", "\n", "base_data", "=", "self", ".", "base_data", "\n", "base_norm", "=", "self", ".", "base_data_norm", "\n", "ref_size", "=", "base_data", ".", "size", "(", "0", ")", "\n", "\n", "x_norm", "=", "(", "x", "*", "x", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "diffs", "=", "base_norm", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "n_samples", ",", "ref_size", ")", "+", "x_norm", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "n_samples", ",", "ref_size", ")", "-", "2", "*", "x", ".", "matmul", "(", "base_data", ".", "t", "(", ")", ")", "\n", "diffs", ".", "sqrt_", "(", ")", ".", "detach_", "(", ")", "\n", "\n", "output", ",", "_", "=", "torch", ".", "topk", "(", "diffs", ",", "self", ".", "K", ",", "dim", "=", "1", ",", "largest", "=", "False", ",", "sorted", "=", "True", ")", "\n", "\n", "return", "output", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.KNNModel.preferred_name": [[47, 49], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "'%d-NN'", "%", "self", ".", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.KNNModel.output_size": [[50, 52], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "self", ".", "K", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.KNNSVM.__init__": [[54, 58], ["methods.score_svm.ScoreSVM.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "KNNSVM", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "self", ".", "base_data", "=", "None", "\n", "self", ".", "default_model", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.KNNSVM.method_identifier": [[59, 62], ["None"], "methods", ["None"], ["", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"KNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.KNNSVM.propose_H": [[63, 86], ["len", "[].numel", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "KNNModel().to", "nearest_neighbor.KNNSVM.base_model.eval", "print", "tqdm.tqdm.tqdm", "pbar.set_description", "enumerate", "termcolor.colored", "datasets.MirroredDataset", "nearest_neighbor.KNNSVM.base_data[].copy_", "pbar.update", "nearest_neighbor.KNNModel", "bool", "x.view", "os.environ.get"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "assert", "self", ".", "default_model", ">", "0", ",", "'KNN needs K>0'", "\n", "if", "self", ".", "base_model", "is", "not", "None", ":", "\n", "            ", "self", ".", "base_model", ".", "base_data", "=", "None", "\n", "self", ".", "base_model", "=", "None", "\n", "\n", "", "if", "dataset", ".", "name", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "dataset", ".", "name", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "dataset", "+", "MirroredDataset", "(", "dataset", ")", "\n", "dataset", "=", "new_train_ds", "\n", "\n", "", "n_data", "=", "len", "(", "dataset", ")", "\n", "n_dim", "=", "dataset", "[", "0", "]", "[", "0", "]", ".", "numel", "(", ")", "\n", "self", ".", "base_data", "=", "torch", ".", "zeros", "(", "n_data", ",", "n_dim", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n", "with", "tqdm", "(", "total", "=", "n_data", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", "as", "pbar", ":", "\n", "            ", "pbar", ".", "set_description", "(", "'Caching X_train for %d-nn'", "%", "self", ".", "default_model", ")", "\n", "for", "i", ",", "(", "x", ",", "_", ")", "in", "enumerate", "(", "dataset", ")", ":", "\n", "                ", "self", ".", "base_data", "[", "i", "]", ".", "copy_", "(", "x", ".", "view", "(", "-", "1", ")", ")", "\n", "pbar", ".", "update", "(", ")", "\n", "# self.base_data = torch.cat([x.view(1, -1) for x,_ in dataset])", "\n", "", "", "self", ".", "base_model", "=", "KNNModel", "(", "self", ".", "base_data", ",", "k", "=", "self", ".", "default_model", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.AEKNNModel.__init__": [[92, 102], ["torch.Module.__init__", "base_data.cuda", "nearest_neighbor.AEKNNModel.base_data.size", "nearest_neighbor.AEKNNModel.base_data.view"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "subnetwork", ",", "base_data", ",", "k", "=", "1", ",", "SV", "=", "False", ")", ":", "\n", "        ", "super", "(", "AEKNNModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_data", "=", "base_data", ".", "cuda", "(", ")", "\n", "n_data", "=", "self", ".", "base_data", ".", "size", "(", "0", ")", "\n", "self", ".", "base_data", "=", "self", ".", "base_data", ".", "view", "(", "n_data", ",", "-", "1", ")", "# Flatten the train data.", "\n", "self", ".", "base_data_norm", "=", "(", "self", ".", "base_data", "*", "self", ".", "base_data", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "self", ".", "K", "=", "k", "\n", "self", ".", "norm", "=", "2", "\n", "self", ".", "subnetwork", "=", "subnetwork", "\n", "self", ".", "SV", "=", "SV", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.AEKNNModel.forward": [[103, 123], ["x.squeeze().squeeze.squeeze().squeeze.size", "nearest_neighbor.AEKNNModel.subnetwork.eval", "base_data.size", "diffs.sqrt_().detach_", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "output.float", "nearest_neighbor.AEKNNModel.subnetwork.encode", "len", "x.squeeze().squeeze.squeeze().squeeze.squeeze().squeeze", "nearest_neighbor.AEKNNModel.subnetwork.partial_forward", "base_norm.unsqueeze().expand", "x_norm.unsqueeze().expand", "x.squeeze().squeeze.squeeze().squeeze.matmul", "diffs.sqrt_", "base_data.t", "x.squeeze().squeeze.squeeze().squeeze.squeeze", "base_norm.unsqueeze", "x_norm.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.encode", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PartialForwardable.partial_forward"], ["", "def", "forward", "(", "self", ",", "x", ",", "**", "kwargs", ")", ":", "\n", "        ", "n_samples", "=", "x", ".", "size", "(", "0", ")", "\n", "self", ".", "subnetwork", ".", "eval", "(", ")", "\n", "if", "not", "self", ".", "SV", ":", "\n", "            ", "x", "=", "self", ".", "subnetwork", ".", "encode", "(", "x", ")", ".", "data", "\n", "if", "len", "(", "x", ".", "shape", ")", "==", "4", ":", "\n", "                ", "x", "=", "x", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "subnetwork", ".", "partial_forward", "(", "x", ")", ".", "data", "\n", "", "base_data", "=", "self", ".", "base_data", "\n", "base_norm", "=", "self", ".", "base_data_norm", "\n", "ref_size", "=", "base_data", ".", "size", "(", "0", ")", "\n", "\n", "x_norm", "=", "(", "x", "*", "x", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "diffs", "=", "base_norm", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "n_samples", ",", "ref_size", ")", "+", "x_norm", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "n_samples", ",", "ref_size", ")", "-", "2", "*", "x", ".", "matmul", "(", "base_data", ".", "t", "(", ")", ")", "\n", "diffs", ".", "sqrt_", "(", ")", ".", "detach_", "(", ")", "\n", "\n", "output", ",", "_", "=", "torch", ".", "topk", "(", "diffs", ",", "self", ".", "K", ",", "dim", "=", "1", ",", "largest", "=", "False", ",", "sorted", "=", "True", ")", "\n", "\n", "return", "output", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.AEKNNModel.preferred_name": [[124, 126], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "'%d-AENN'", "%", "self", ".", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.AEKNNModel.output_size": [[127, 129], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "[", "1", ",", "self", ".", "K", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.AEKNNSVM.__init__": [[131, 135], ["methods.score_svm.ScoreSVM.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "AEKNNSVM", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "self", ".", "base_data", "=", "None", "\n", "self", ".", "default_model", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.AEKNNSVM.method_identifier": [[136, 139], ["None"], "methods", ["None"], ["", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"AEKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.AEKNNSVM.propose_H": [[140, 218], ["os.path.join", "print", "base_model.load_state_dict", "base_model.eval", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "base_model.encode().numel", "print", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "AEKNNModel().to", "nearest_neighbor.AEKNNSVM.base_model.eval", "isinstance", "isinstance", "isinstance", "models.get_ref_model_path", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "print", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "isinstance", "isinstance", "isinstance", "models.get_ref_model_path", "termcolor.colored", "datasets.MirroredDataset", "base_model.encode", "tqdm.tqdm.tqdm", "pbar.set_description", "enumerate", "nearest_neighbor.AEKNNModel", "isinstance", "isinstance", "isinstance", "models.get_ref_model_path", "[].to().unsqueeze", "x.size", "nearest_neighbor.AEKNNSVM.base_data[].copy_", "pbar.update", "isinstance", "isinstance", "isinstance", "models.get_ref_model_path", "isinstance", "len", "bool", "base_model.encode", "len", "output.squeeze.squeeze.squeeze", "global_vars.get_ref_autoencoder", "isinstance", "models.get_ref_model_path", "NotImplementedError", "[].to", "os.environ.get", "x.to", "global_vars.get_ref_vae", "global_vars.get_ref_autoencoder", "global_vars.get_ref_vae", "global_vars.get_ref_ali"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.encode", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.ALImodel.ALIModel.encode", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_autoencoder", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_vae", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_autoencoder", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_vae", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_ali"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "assert", "self", ".", "default_model", ">", "0", ",", "'KNN needs K>0'", "\n", "if", "self", ".", "base_model", "is", "not", "None", ":", "\n", "            ", "self", ".", "base_model", ".", "base_data", "=", "None", "\n", "self", ".", "base_model", "=", "None", "\n", "\n", "# Set up the base0-model", "\n", "", "if", "isinstance", "(", "self", ",", "BCEKNNSVM", ")", "or", "isinstance", "(", "self", ",", "MSEKNNSVM", ")", ":", "\n", "            ", "base_model", "=", "Global", ".", "get_ref_autoencoder", "(", "dataset", ".", "name", ")", "[", "0", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "if", "isinstance", "(", "self", ",", "BCEKNNSVM", ")", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"BCE.\"", "+", "base_model", ".", "netid", "\n", "", "else", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"MSE.\"", "+", "base_model", ".", "netid", "\n", "", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "self", ".", "args", ",", "base_model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "suffix_str", "=", "base_model", ".", "netid", ")", "\n", "", "elif", "isinstance", "(", "self", ",", "VAEBCEKNNSVM", ")", "or", "isinstance", "(", "self", ",", "VAEMSEKNNSVM", ")", ":", "\n", "            ", "base_model", "=", "Global", ".", "get_ref_vae", "(", "dataset", ".", "name", ")", "[", "0", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "if", "isinstance", "(", "self", ",", "VAEBCEKNNSVM", ")", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"BCE.\"", "+", "base_model", ".", "netid", "\n", "", "else", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"MSE.\"", "+", "base_model", ".", "netid", "\n", "", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "self", ".", "args", ",", "base_model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "suffix_str", "=", "base_model", ".", "netid", ")", "\n", "", "elif", "isinstance", "(", "self", ",", "ALIBCEKNNSVM", ")", "or", "isinstance", "(", "self", ",", "ALIMSEKNNSVM", ")", ":", "\n", "            ", "base_model", "=", "Global", ".", "get_ref_autoencoder", "(", "dataset", ".", "name", ")", "[", "1", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "if", "isinstance", "(", "self", ",", "ALIBCEKNNSVM", ")", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"BCE.\"", "+", "base_model", ".", "netid", "\n", "", "else", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"MSE.\"", "+", "base_model", ".", "netid", "\n", "", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "self", ".", "args", ",", "base_model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "suffix_str", "=", "base_model", ".", "netid", ")", "\n", "", "elif", "isinstance", "(", "self", ",", "ALIVAEBCEKNNSVM", ")", "or", "isinstance", "(", "self", ",", "ALIVAEMSEKNNSVM", ")", ":", "\n", "            ", "base_model", "=", "Global", ".", "get_ref_vae", "(", "dataset", ".", "name", ")", "[", "1", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "if", "isinstance", "(", "self", ",", "ALIVAEBCEKNNSVM", ")", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"BCE.\"", "+", "base_model", ".", "netid", "\n", "", "else", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"MSE.\"", "+", "base_model", ".", "netid", "\n", "", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "self", ".", "args", ",", "base_model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "suffix_str", "=", "base_model", ".", "netid", ")", "\n", "", "elif", "isinstance", "(", "self", ",", "ALIKNNSVM", ")", ":", "\n", "            ", "base_model", "=", "Global", ".", "get_ref_ali", "(", "dataset", ".", "name", ")", "[", "0", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "if", "isinstance", "(", "self", ",", "ALIKNNSVM", ")", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"BCE.\"", "+", "base_model", ".", "netid", "\n", "", "else", ":", "\n", "                ", "base_model", ".", "netid", "=", "\"MSE.\"", "+", "base_model", ".", "netid", "\n", "", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "self", ".", "args", ",", "base_model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "suffix_str", "=", "base_model", ".", "netid", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "\n", "", "hbest_path", "=", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "best_h_path", "=", "hbest_path", "\n", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "base_model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "base_model", ".", "eval", "(", ")", "\n", "\n", "if", "dataset", ".", "name", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "dataset", ".", "name", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "dataset", "+", "MirroredDataset", "(", "dataset", ")", "\n", "dataset", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "1", ",", "pin_memory", "=", "True", ")", "\n", "\n", "n_data", "=", "len", "(", "dataset", ")", "\n", "n_dim", "=", "base_model", ".", "encode", "(", "dataset", "[", "0", "]", "[", "0", "]", ".", "to", "(", "self", ".", "args", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ")", ".", "numel", "(", ")", "\n", "print", "(", "'nHidden %d'", "%", "(", "n_dim", ")", ")", "\n", "self", ".", "base_data", "=", "torch", ".", "zeros", "(", "n_data", ",", "n_dim", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "base_ind", "=", "0", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "with", "tqdm", "(", "total", "=", "len", "(", "all_loader", ")", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", "as", "pbar", ":", "\n", "                ", "pbar", ".", "set_description", "(", "'Caching X_train for %d-nn'", "%", "self", ".", "default_model", ")", "\n", "for", "i", ",", "(", "x", ",", "_", ")", "in", "enumerate", "(", "all_loader", ")", ":", "\n", "                    ", "n_data", "=", "x", ".", "size", "(", "0", ")", "\n", "output", "=", "base_model", ".", "encode", "(", "x", ".", "to", "(", "self", ".", "args", ".", "device", ")", ")", ".", "data", "\n", "if", "len", "(", "output", ".", "shape", ")", "==", "4", ":", "\n", "                        ", "output", "=", "output", ".", "squeeze", "(", ")", "\n", "", "self", ".", "base_data", "[", "base_ind", ":", "base_ind", "+", "n_data", "]", ".", "copy_", "(", "output", ")", "\n", "base_ind", "=", "base_ind", "+", "n_data", "\n", "pbar", ".", "update", "(", ")", "\n", "# self.base_data = torch.cat([x.view(1, -1) for x,_ in dataset])", "\n", "", "", "", "self", ".", "base_model", "=", "AEKNNModel", "(", "base_model", ",", "self", ".", "base_data", ",", "k", "=", "self", ".", "default_model", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.SVKNNSVM.__init__": [[220, 224], ["methods.score_svm.ScoreSVM.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "SVKNNSVM", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "self", ".", "base_data", "=", "None", "\n", "self", ".", "default_model", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.SVKNNSVM.method_identifier": [[225, 228], ["None"], "methods", ["None"], ["", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"SVKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.SVKNNSVM.propose_H": [[229, 271], ["get_ref_model_path", "os.path.join", "print", "base_model.load_state_dict", "base_model.eval", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "base_model.partial_forward().numel", "print", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "AEKNNModel().to", "nearest_neighbor.SVKNNSVM.base_model.eval", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "print", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "termcolor.colored", "datasets.MirroredDataset", "base_model.partial_forward", "tqdm.tqdm.tqdm", "pbar.set_description", "enumerate", "nearest_neighbor.AEKNNModel", "[].to().unsqueeze", "x.size", "nearest_neighbor.SVKNNSVM.base_data[].copy_", "pbar.update", "global_vars.get_ref_classifier", "len", "bool", "base_model.partial_forward", "[].to", "os.environ.get", "x.to"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PartialForwardable.partial_forward", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_classifier", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.classifiers.PartialForwardable.partial_forward"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "assert", "self", ".", "default_model", ">", "0", ",", "'KNN needs K>0'", "\n", "if", "self", ".", "base_model", "is", "not", "None", ":", "\n", "            ", "self", ".", "base_model", ".", "base_data", "=", "None", "\n", "self", ".", "base_model", "=", "None", "\n", "\n", "# Set up the base0-model", "\n", "", "base_model", "=", "Global", ".", "get_ref_classifier", "(", "dataset", ".", "name", ")", "[", "0", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "from", "models", "import", "get_ref_model_path", "\n", "home_path", "=", "get_ref_model_path", "(", "self", ".", "args", ",", "base_model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ")", "\n", "\n", "hbest_path", "=", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "best_h_path", "=", "hbest_path", "\n", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "base_model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "base_model", ".", "eval", "(", ")", "\n", "\n", "if", "dataset", ".", "name", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "dataset", ".", "name", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "dataset", "+", "MirroredDataset", "(", "dataset", ")", "\n", "dataset", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "1", ",", "pin_memory", "=", "True", ")", "\n", "\n", "n_data", "=", "len", "(", "dataset", ")", "\n", "n_dim", "=", "base_model", ".", "partial_forward", "(", "dataset", "[", "0", "]", "[", "0", "]", ".", "to", "(", "self", ".", "args", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ")", ".", "numel", "(", ")", "\n", "print", "(", "'nHidden %d'", "%", "(", "n_dim", ")", ")", "\n", "self", ".", "base_data", "=", "torch", ".", "zeros", "(", "n_data", ",", "n_dim", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "base_ind", "=", "0", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "with", "tqdm", "(", "total", "=", "len", "(", "all_loader", ")", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", "as", "pbar", ":", "\n", "                ", "pbar", ".", "set_description", "(", "'Caching X_train for %d-nn'", "%", "self", ".", "default_model", ")", "\n", "for", "i", ",", "(", "x", ",", "_", ")", "in", "enumerate", "(", "all_loader", ")", ":", "\n", "                    ", "n_data", "=", "x", ".", "size", "(", "0", ")", "\n", "output", "=", "base_model", ".", "partial_forward", "(", "x", ".", "to", "(", "self", ".", "args", ".", "device", ")", ")", ".", "data", "\n", "self", ".", "base_data", "[", "base_ind", ":", "base_ind", "+", "n_data", "]", ".", "copy_", "(", "output", ")", "\n", "base_ind", "=", "base_ind", "+", "n_data", "\n", "pbar", ".", "update", "(", ")", "\n", "# self.base_data = torch.cat([x.view(1, -1) for x,_ in dataset])", "\n", "", "", "", "self", ".", "base_model", "=", "AEKNNModel", "(", "base_model", ",", "self", ".", "base_data", ",", "k", "=", "self", ".", "default_model", ",", "SV", "=", "True", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.BCEKNNSVM.method_identifier": [[276, 279], ["None"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"BCEKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "", "", "class", "MSEKNNSVM", "(", "AEKNNSVM", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.MSEKNNSVM.method_identifier": [[280, 283], ["None"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"MSEKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "", "", "class", "VAEMSEKNNSVM", "(", "AEKNNSVM", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.VAEMSEKNNSVM.method_identifier": [[284, 287], ["None"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"VAEMSEKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "", "", "class", "VAEBCEKNNSVM", "(", "AEKNNSVM", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.VAEBCEKNNSVM.method_identifier": [[288, 291], ["None"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"VAEBCEKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "", "", "class", "ALIBCEKNNSVM", "(", "AEKNNSVM", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.ALIBCEKNNSVM.method_identifier": [[292, 295], ["None"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"ALIBCEKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "", "", "class", "ALIMSEKNNSVM", "(", "AEKNNSVM", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.ALIMSEKNNSVM.method_identifier": [[296, 299], ["None"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"ALIMSEKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "", "", "class", "ALIVAEMSEKNNSVM", "(", "AEKNNSVM", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.ALIVAEMSEKNNSVM.method_identifier": [[300, 303], ["None"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"ALIVAEMSEKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "", "", "class", "ALIVAEBCEKNNSVM", "(", "AEKNNSVM", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.ALIVAEBCEKNNSVM.method_identifier": [[304, 307], ["None"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"ALIVAEBCEKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.nearest_neighbor.ALIKNNSVM.method_identifier": [[309, 312], ["None"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"ALIKNNSVM/%d\"", "%", "self", ".", "default_model", "\n", "return", "output", "", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.odin.ODINModelWrapper.__init__": [[40, 52], ["methods.AbstractModelWrapper.__init__", "torch.Module", "torch.Module", "torch.Module", "torch.Module", "torch.Module", "odin.ODINModelWrapper.H.register_parameter", "odin.ODINModelWrapper.H.register_buffer", "odin.ODINModelWrapper.H.register_buffer", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "base_model", ",", "epsilon", "=", "0.0012", ",", "temperature", "=", "1000", ")", ":", "\n", "        ", "super", "(", "ODINModelWrapper", ",", "self", ")", ".", "__init__", "(", "base_model", ")", "\n", "# Let's have these fixed for now!", "\n", "\n", "self", ".", "H", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "H", ".", "register_parameter", "(", "'threshold'", ",", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "0.5", "]", ")", ")", ")", "# initialize to prob=0.5 for faster convergence.", "\n", "\n", "# register params under H for storage.", "\n", "self", ".", "H", ".", "register_buffer", "(", "'epsilon'", ",", "torch", ".", "FloatTensor", "(", "[", "epsilon", "]", ")", ")", "\n", "self", ".", "H", ".", "register_buffer", "(", "'temperature'", ",", "torch", ".", "FloatTensor", "(", "[", "1.", "/", "temperature", "]", ")", ")", "\n", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.odin.ODINModelWrapper.subnetwork_eval": [[53, 93], ["x.clone", "x.clone", "new_input.detach_", "odin.ODINModelWrapper.base_model().detach", "odin.ODINModelWrapper.mul_", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "[].detach().view", "[].detach().view.detach", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "odin.ODINModelWrapper.base_model", "[].detach", "odin.ODINModelWrapper.criterion", "x.clone.detach", "x.clone.grad.zero_", "torch.grad", "torch.grad", "torch.grad", "torch.grad", "torch.grad", "grad_input_x.detach().sign", "odin.ODINModelWrapper.base_model", "[].detach", "odin.ODINModelWrapper.max", "grad_input_x.detach", "torch.softmax.max"], "methods", ["None"], ["", "def", "subnetwork_eval", "(", "self", ",", "x", ")", ":", "\n", "# We have to backpropagate through the input.", "\n", "# The model must be fixed in the eval mode.", "\n", "        ", "new_x", "=", "x", ".", "clone", "(", ")", "\n", "cur_x", "=", "x", ".", "clone", "(", ")", "\n", "\n", "grad_input_x", "=", "None", "\n", "with", "torch", ".", "set_grad_enabled", "(", "True", ")", ":", "\n", "            ", "cur_x", ".", "requires_grad", "=", "True", "\n", "if", "cur_x", ".", "grad", "is", "not", "None", ":", "\n", "                ", "cur_x", ".", "grad", ".", "zero_", "(", ")", "\n", "", "base_output", "=", "self", ".", "base_model", "(", "cur_x", ",", "softmax", "=", "False", ")", "\n", "y_hat", "=", "base_output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", "\n", "base_output", "=", "base_output", "*", "self", ".", "H", ".", "temperature", "\n", "loss", "=", "self", ".", "criterion", "(", "base_output", ",", "y_hat", ")", "\n", "grad_input_x", "=", "autograd", ".", "grad", "(", "[", "loss", "]", ",", "[", "cur_x", "]", ",", "retain_graph", "=", "False", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "\n", "# This code is written based on author's code.", "\n", "# https://github.com/ShiyuLiang/odin-pytorch/blob/34e53f5a982811a0d74baba049538d34efc0732d/code/calData.py#L183", "\n", "# construct X' - Fast Gradient Sign Method + Projection", "\n", "# They scale the gradient by 4.1 because of the normalization they apply", "\n", "# to the images. But we do a late normalization of images in the architecture", "\n", "# itself, so the gradient is scaled properly already. Though it doesn't really", "\n", "# matter, because we learn the Epsilon anyway. Normally you should project the ", "\n", "# perturbed image back to the hypercupe, but they don't do it. So I didn't either.", "\n", "", "new_input", "=", "(", "new_x", ".", "detach", "(", ")", "-", "self", ".", "H", ".", "epsilon", "*", "(", "grad_input_x", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ")", "\n", "new_input", ".", "detach_", "(", ")", "\n", "new_input", ".", "requires_grad", "=", "False", "\n", "\n", "# second evaluation.", "\n", "new_output", "=", "self", ".", "base_model", "(", "new_input", ",", "softmax", "=", "False", ")", ".", "detach", "(", ")", "\n", "\n", "new_output", ".", "mul_", "(", "self", ".", "H", ".", "temperature", ")", "\n", "\n", "probabilities", "=", "F", ".", "softmax", "(", "new_output", ",", "dim", "=", "1", ")", "\n", "\n", "# Get the max probability out", "\n", "input", "=", "probabilities", ".", "max", "(", "1", ")", "[", "0", "]", ".", "detach", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "#.unsqueeze_(1)", "\n", "\n", "return", "input", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.odin.ODINModelWrapper.wrapper_eval": [[94, 98], ["None"], "methods", ["None"], ["", "def", "wrapper_eval", "(", "self", ",", "x", ")", ":", "\n", "# Threshold hold the max probability.", "\n", "        ", "output", "=", "self", ".", "H", ".", "threshold", "-", "x", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.odin.ODINModelWrapper.classify": [[99, 101], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.odin.ODIN.method_identifier": [[103, 108], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"ODIN\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.odin.ODIN.get_H_config": [[109, 184], ["print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "methods.SVMLoss().to", "ODINModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "torch.Adagrad", "torch.Adagrad", "torch.Adagrad", "torch.Adagrad", "torch.Adagrad", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "os.join", "os.join", "os.dirname", "os.dirname", "utils.logger.Logger", "get_cached", "get_cached", "TensorDataset", "trainX[].mean", "trainX[].mean", "print", "TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "ODINModelWrapper().to.set_eval_direct", "odin.ODIN.base_model.preferred_name", "ODINModelWrapper().to.H.parameters", "methods.SVMLoss", "odin.ODINModelWrapper", "init_value.view", "init_value.cuda().view", "init_value.item", "init_value.cuda"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_H_config", "(", "self", ",", "train_ds", ",", "valid_ds", ",", "will_train", "=", "True", ",", "epsilon", "=", "0.0012", ",", "temperature", "=", "1000", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "# To make the threshold learning, actually threshold learning", "\n", "# the margin must be set to 0.", "\n", "criterion", "=", "SVMLoss", "(", "margin", "=", "0.0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "ODINModelWrapper", "(", "self", ".", "base_model", ",", "epsilon", "=", "epsilon", ",", "temperature", "=", "temperature", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "if", "will_train", ":", "\n", "# cache the subnetwork for faster optimization.", "\n", "            ", "from", "methods", "import", "get_cached", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataset", "import", "TensorDataset", "\n", "\n", "trainX", ",", "trainY", "=", "get_cached", "(", "model", ",", "train_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "validX", ",", "validY", "=", "get_cached", "(", "model", ",", "valid_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "\n", "new_train_ds", "=", "TensorDataset", "(", "trainX", ",", "trainY", ")", "\n", "x_center", "=", "trainX", "[", "trainY", "==", "0", "]", ".", "mean", "(", ")", "\n", "y_center", "=", "trainX", "[", "trainY", "==", "1", "]", ".", "mean", "(", ")", "\n", "init_value", "=", "(", "x_center", "+", "y_center", ")", "/", "2", "\n", "if", "model", ".", "H", ".", "threshold", ".", "device", ".", "type", "==", "\"cpu\"", ":", "\n", "                ", "model", ".", "H", ".", "threshold", ".", "data", "=", "init_value", ".", "view", "(", "(", "1", ",", ")", ")", "\n", "", "else", ":", "\n", "                ", "model", ".", "H", ".", "threshold", ".", "data", "=", "init_value", ".", "cuda", "(", ")", ".", "view", "(", "(", "1", ",", ")", ")", "\n", "#model.H.threshold.fill_(init_value)", "\n", "", "print", "(", "\"Initializing threshold to %.2f\"", "%", "(", "init_value", ".", "item", "(", ")", ")", ")", "\n", "\n", "new_valid_ds", "=", "TensorDataset", "(", "validX", ",", "validY", ")", "\n", "\n", "# Initialize the new multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "new_train_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "new_valid_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# Set model to direct evaluation (for cached data)", "\n", "model", ".", "set_eval_direct", "(", "True", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "self", ".", "base_model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'_%s[%s](%s-%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "Adagrad", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-2", ",", "weight_decay", "=", "0", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "5", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-8", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "config", ".", "max_epoch", "=", "30", "\n", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.odin.ODIN.train_H": [[185, 289], ["datasets.SubDataset", "datasets.SubDataset.split_dataset", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "os.join", "os.join", "os.dirname", "os.dirname", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "odin.ODIN.model.H.load_state_dict", "odin.ODIN.model.set_eval_direct", "print", "utils.iterative_trainer.IterativeTrainer.run_epoch", "odin.ODIN.logger.get_measure().mean_epoch", "print", "odin.ODIN.H_class.eval", "odin.ODIN.H_class.set_eval_direct", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "print", "len", "len", "os.isdir", "os.isdir", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "enumerate", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "odin.ODIN.get_H_config", "utils.iterative_trainer.IterativeTrainer", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "os.isfile", "os.isfile", "enumerate", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "val.view", "odin.ODIN.logger.get_measure", "termcolor.colored", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "print", "timeit.default_timer", "odin.ODIN.get_H_config", "utils.iterative_trainer.IterativeTrainer", "print", "utils.iterative_trainer.IterativeTrainer.run_epoch", "range", "print", "termcolor.colored", "termcolor.colored", "len", "termcolor.colored", "termcolor.colored", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "odin.ODIN.logger.get_measure().mean_epoch", "odin.ODIN.scheduler.step", "odin.ODIN.logger.log", "odin.ODIN.logger.get_measure().mean_epoch", "timeit.default_timer", "odin.ODIN.model.H.temperature.item", "odin.ODIN.model.H.epsilon.item", "float", "odin.ODIN.logger.get_measure", "hasattr", "hasattr", "odin.ODIN.logger.log", "odin.ODIN.logger.visualize_average_keys", "odin.ODIN.logger.visualize_average_keys", "odin.ODIN.logger.visualize_average", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "len", "odin.ODIN.logger.get_measure", "range", "odin.ODIN.model.H.threshold.cpu().numpy", "odin.ODIN.logger.get_measure", "odin.ODIN.logger.get_measure().visualize_all_epochs", "odin.ODIN.logger.get_measure", "odin.ODIN.model.H.state_dict", "len", "termcolor.colored", "odin.ODIN.model.H.threshold.cpu", "odin.ODIN.logger.get_measure"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.get_H_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.get_H_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.visualize_all_epochs", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "train_H", "(", "self", ",", "dataset", ")", ":", "\n", "# Wrap the (mixture)dataset in SubDataset so to easily", "\n", "# split it later.", "\n", "        ", "dataset", "=", "SubDataset", "(", "'%s-%s'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ",", "dataset", ",", "torch", ".", "arange", "(", "len", "(", "dataset", ")", ")", ".", "int", "(", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# As suggested by the authors.", "\n", "", "all_temperatures", "=", "[", "1", ",", "2", ",", "5", ",", "10", ",", "20", ",", "50", ",", "100", ",", "200", ",", "500", ",", "1000", "]", "\n", "all_epsilons", "=", "torch", ".", "linspace", "(", "0", ",", "0.004", ",", "21", ")", "\n", "total_params", "=", "len", "(", "all_temperatures", ")", "*", "len", "(", "all_epsilons", ")", "\n", "best_accuracy", "=", "-", "1", "\n", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "if", "not", "path", ".", "isdir", "(", "h_parent", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "h_parent", ")", "\n", "\n", "", "done_path", "=", "h_path", "+", "'.done'", "\n", "trainer", ",", "h_config", "=", "None", ",", "None", "\n", "\n", "if", "self", ".", "args", ".", "force_train_h", "or", "not", "path", ".", "isfile", "(", "done_path", ")", ":", "\n", "# Grid search over the temperature and the epsilons.", "\n", "            ", "for", "i_eps", ",", "eps", "in", "enumerate", "(", "all_epsilons", ")", ":", "\n", "                ", "for", "i_temp", ",", "temp", "in", "enumerate", "(", "all_temperatures", ")", ":", "\n", "                    ", "so_far", "=", "i_eps", "*", "len", "(", "all_temperatures", ")", "+", "i_temp", "+", "1", "\n", "print", "(", "colored", "(", "'Checking eps=%.2e temp=%.1f (%d/%d)'", "%", "(", "eps", ",", "temp", ",", "so_far", ",", "total_params", ")", ",", "'green'", ")", ")", "\n", "start_time", "=", "timeit", ".", "default_timer", "(", ")", "\n", "\n", "h_config", "=", "self", ".", "get_H_config", "(", "train_ds", "=", "train_ds", ",", "valid_ds", "=", "valid_ds", ",", "\n", "epsilon", "=", "eps", ",", "temperature", "=", "temp", ")", "\n", "\n", "trainer", "=", "IterativeTrainer", "(", "h_config", ",", "self", ".", "args", ")", "\n", "\n", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'test'", ")", "\n", "for", "epoch", "in", "range", "(", "1", ",", "h_config", ".", "max_epoch", "+", "1", ")", ":", "\n", "                        ", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "h_config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "# Track the learning rates and threshold.", "\n", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "h_config", ".", "optim", ".", "param_groups", "]", "\n", "h_config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "h_config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "if", "hasattr", "(", "h_config", ".", "model", ",", "'H'", ")", "and", "hasattr", "(", "h_config", ".", "model", ".", "H", ",", "'threshold'", ")", ":", "\n", "                            ", "h_config", ".", "logger", ".", "log", "(", "'threshold'", ",", "h_config", ".", "model", ".", "H", ".", "threshold", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "epoch", "-", "1", ")", "\n", "h_config", ".", "logger", ".", "get_measure", "(", "'threshold'", ")", ".", "legend", "=", "[", "'threshold'", "]", "\n", "if", "h_config", ".", "visualize", ":", "\n", "                                ", "h_config", ".", "logger", ".", "get_measure", "(", "'threshold'", ")", ".", "visualize_all_epochs", "(", "trainer", ".", "visdom", ")", "\n", "\n", "", "", "if", "h_config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                            ", "h_config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "h_config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_accuracy'", ",", "'Average Accuracy'", ",", "trainer", ".", "visdom", ")", "\n", "h_config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "\n", "", "test_average_acc", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'test_accuracy'", ")", ".", "mean_epoch", "(", ")", "\n", "\n", "if", "best_accuracy", "<", "test_average_acc", ":", "\n", "                            ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_average_acc", ",", "'red'", ")", ")", ")", "\n", "best_accuracy", "=", "test_average_acc", "\n", "torch", ".", "save", "(", "h_config", ".", "model", ".", "H", ".", "state_dict", "(", ")", ",", "h_path", ")", "\n", "\n", "", "", "elapsed", "=", "timeit", ".", "default_timer", "(", ")", "-", "start_time", "\n", "print", "(", "'Hyper-param check (%.2e, %.1f) in %.2fs'", "%", "(", "eps", ",", "temp", ",", "elapsed", ")", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "done_path", ")", "\n", "\n", "# If we load the pretrained model directly, we will have to initialize these.", "\n", "", "if", "trainer", "is", "None", "or", "h_config", "is", "None", ":", "\n", "            ", "h_config", "=", "self", ".", "get_H_config", "(", "train_ds", "=", "train_ds", ",", "valid_ds", "=", "valid_ds", ",", "\n", "epsilon", "=", "0", ",", "temperature", "=", "1", ",", "will_train", "=", "False", ")", "\n", "# don't worry about the values of epsilon or temperature. it will be overwritten.", "\n", "trainer", "=", "IterativeTrainer", "(", "h_config", ",", "self", ".", "args", ")", "\n", "\n", "# Load the best model.", "\n", "", "print", "(", "colored", "(", "'Loading H model from %s'", "%", "h_path", ",", "'red'", ")", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "h_path", ")", "\n", "for", "key", ",", "val", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "val", ".", "shape", "==", "torch", ".", "Size", "(", "[", "]", ")", ":", "\n", "                ", "state_dict", "[", "key", "]", "=", "val", ".", "view", "(", "(", "1", ",", ")", ")", "\n", "", "", "h_config", ".", "model", ".", "H", ".", "load_state_dict", "(", "state_dict", ")", "\n", "h_config", ".", "model", ".", "set_eval_direct", "(", "False", ")", "\n", "print", "(", "'Temperature %s Epsilon %s'", "%", "(", "colored", "(", "h_config", ".", "model", ".", "H", ".", "temperature", ".", "item", "(", ")", ",", "'red'", ")", ",", "colored", "(", "h_config", ".", "model", ".", "H", ".", "epsilon", ".", "item", "(", ")", ",", "'red'", ")", ")", ")", "\n", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'testU'", ")", "\n", "test_average_acc", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'testU_accuracy'", ")", ".", "mean_epoch", "(", "epoch", "=", "0", ")", "\n", "print", "(", "\"Valid/Test average accuracy %s\"", "%", "colored", "(", "'%.4f%%'", "%", "(", "test_average_acc", "*", "100", ")", ",", "'red'", ")", ")", "\n", "self", ".", "H_class", "=", "h_config", ".", "model", "\n", "self", ".", "H_class", ".", "eval", "(", ")", "\n", "self", ".", "H_class", ".", "set_eval_direct", "(", "False", ")", "\n", "return", "test_average_acc", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.logistic_threshold.KWayLogisticWrapper.__init__": [[17, 20], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "parent_model", ")", ":", "\n", "        ", "super", "(", "KWayLogisticWrapper", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "parent_model", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.logistic_threshold.KWayLogisticWrapper.forward": [[21, 26], ["logistic_threshold.KWayLogisticWrapper.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "'softmax'", "in", "kwargs", ":", "\n", "            ", "del", "kwargs", "[", "'softmax'", "]", "\n", "", "model_output", "=", "self", ".", "model", "(", "x", ",", "softmax", "=", "False", ",", "**", "kwargs", ")", "\n", "return", "model_output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.logistic_threshold.KWayLogisticWrapper.preferred_name": [[27, 29], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "__class__", ".", "__name__", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.logistic_threshold.KWayLogisticWrapper.output_size": [[30, 32], ["logistic_threshold.KWayLogisticWrapper.model.output_size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleWrapper.output_size"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "output_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.logistic_threshold.KWayLogisticLoss.__init__": [[34, 38], ["torch.Module.__init__", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "KWayLogisticLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reduction", "=", "\"mean\"", "\n", "self", ".", "loss", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.logistic_threshold.KWayLogisticLoss.forward": [[39, 47], ["input.size", "input.size", "input.new().zero_", "input.new().zero_.scatter_", "logistic_threshold.KWayLogisticLoss.loss", "target.data.unsqueeze", "input.new"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "n_classes", "=", "input", ".", "size", "(", "1", ")", "\n", "n_samples", "=", "input", ".", "size", "(", "0", ")", "\n", "target_expansion", "=", "input", ".", "new", "(", "n_samples", ",", "n_classes", ")", ".", "zero_", "(", ")", "\n", "target_expansion", ".", "scatter_", "(", "1", ",", "target", ".", "data", ".", "unsqueeze", "(", "1", ")", ",", "1", ")", "\n", "target_expansion", ".", "requires_grad", "=", "False", "\n", "loss", "=", "self", ".", "loss", "(", "input", ",", "target_expansion", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.logistic_threshold.LogisticSVM.method_identifier": [[49, 54], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"LogisticSVM\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.logistic_threshold.LogisticSVM.propose_H": [[55, 80], ["logistic_threshold.LogisticSVM.get_base_config", "logistic_threshold.KWayLogisticWrapper", "logistic_threshold.LogisticSVM.model.to", "models.get_ref_model_path", "os.path.join", "utils.iterative_trainer.IterativeTrainer", "utils.iterative_trainer.IterativeTrainer.run_epoch", "logistic_threshold.LogisticSVM.logger.get_measure().mean_epoch", "print", "logistic_threshold.LogisticSVM.base_model.eval", "os.path.isfile", "NotImplementedError", "print", "logistic_threshold.LogisticSVM.model.load_state_dict", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "logistic_threshold.LogisticSVM.logger.get_measure", "termcolor.colored"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.get_base_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "config", "=", "self", ".", "get_base_config", "(", "dataset", ")", "\n", "\n", "# Wrap the class in KWLWrapper", "\n", "original_class_name", "=", "config", ".", "model", ".", "__class__", ".", "__name__", "\n", "config", ".", "model", "=", "KWayLogisticWrapper", "(", "config", ".", "model", ")", "\n", "config", ".", "model", "=", "config", ".", "model", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "h_path", "=", "Models", ".", "get_ref_model_path", "(", "self", ".", "args", ",", "original_class_name", ",", "dataset", ".", "name", ",", "suffix_str", "=", "'KLogistic'", ")", "\n", "best_h_path", "=", "path", ".", "join", "(", "h_path", ",", "'model.best.pth'", ")", "\n", "\n", "trainer", "=", "IterativeTrainer", "(", "config", ",", "self", ".", "args", ")", "\n", "\n", "if", "not", "path", ".", "isfile", "(", "best_h_path", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Please use setup_model to pretrain the networks first!\"", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "\n", "", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'all'", ")", "\n", "test_average_acc", "=", "config", ".", "logger", ".", "get_measure", "(", "'all_accuracy'", ")", ".", "mean_epoch", "(", "epoch", "=", "0", ")", "\n", "print", "(", "\"All average accuracy %s\"", "%", "colored", "(", "'%.4f%%'", "%", "(", "test_average_acc", "*", "100", ")", ",", "'red'", ")", ")", "\n", "\n", "self", ".", "base_model", "=", "config", ".", "model", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.pixelcnn.PixelCNNModelWrapper.__init__": [[24, 30], ["isinstance", "methods.AbstractModelWrapper.__init__", "torch.Module", "torch.Module", "torch.Module", "pixelcnn.PixelCNNModelWrapper.H.register_parameter", "models.pixelcnn.utils.PCNN_Loss", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "base_model", ")", ":", "\n", "        ", "assert", "isinstance", "(", "base_model", ",", "PCNNModel", ".", "PixelCNN", ")", ",", "'We only support PixelCNN objects.'", "\n", "super", "(", "PixelCNNModelWrapper", ",", "self", ")", ".", "__init__", "(", "base_model", ")", "\n", "self", ".", "H", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "H", ".", "register_parameter", "(", "'threshold'", ",", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "0", "]", ")", ")", ")", "# initialize to 0 for faster convergence.", "\n", "self", ".", "loss_func", "=", "PCNN_Loss", "(", "one_d", "=", "(", "base_model", ".", "input_channels", "==", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.pixelcnn.PixelCNNModelWrapper.subnetwork_eval": [[31, 39], ["pixelcnn.PixelCNNModelWrapper.base_model.eval", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "pixelcnn.PixelCNNModelWrapper.base_model", "pixelcnn.PixelCNNModelWrapper.loss_func"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "subnetwork_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "output_tensor", "=", "None", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "x", ".", "requires_grad", "=", "False", "\n", "output", "=", "self", ".", "base_model", "(", "x", ")", "\n", "output_tensor", "=", "self", ".", "loss_func", "(", "output", ",", "x", ",", "do_reduce", "=", "False", ")", ".", "data", "\n", "", "return", "output_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.pixelcnn.PixelCNNModelWrapper.wrapper_eval": [[40, 45], ["None"], "methods", ["None"], ["", "def", "wrapper_eval", "(", "self", ",", "x", ")", ":", "\n", "# Threshold hold the NLL.", "\n", "# The lower log-likelihood has a higher probability.", "\n", "        ", "output", "=", "x", "-", "self", ".", "H", ".", "threshold", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.pixelcnn.PixelCNNModelWrapper.classify": [[46, 48], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.pixelcnn.PixelCNN.method_identifier": [[50, 55], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"PixelCNN\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.pixelcnn.PixelCNN.get_base_config": [[56, 100], ["print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "get_ref_model_path", "os.path.join", "models.pixelcnn.utils.PCNN_Loss().to", "utils.iterative_trainer.IterativeTrainerConfig", "os.path.join", "os.path.dirname", "utils.logger.Logger", "os.path.isfile", "NotImplementedError", "print", "model.load_state_dict", "model.eval", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "models.pixelcnn.utils.PCNN_Loss", "global_vars.get_ref_pixelcnn"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_pixelcnn"], ["", "def", "get_base_config", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "parent_dataset", ".", "__class__", ".", "__name__", ")", ")", "\n", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "Global", ".", "get_ref_pixelcnn", "(", "dataset", ".", "name", ")", "[", "self", ".", "default_model", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "add_identifier", "=", "model", ".", "__class__", ".", "__name__", "\n", "\n", "# Load the snapshot", "\n", "from", "models", "import", "get_ref_model_path", "\n", "h_path", "=", "get_ref_model_path", "(", "self", ".", "args", ",", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "suffix_str", "=", "model", ".", "netid", ")", "\n", "best_h_path", "=", "path", ".", "join", "(", "h_path", ",", "'model.best.pth'", ")", "\n", "if", "not", "path", ".", "isfile", "(", "best_h_path", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Please use setup_model to pretrain the networks first! Can't find %s\"", "%", "best_h_path", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "# Set up the criterion", "\n", "", "criterion", "=", "PCNN_Loss", "(", "one_d", "=", "(", "model", ".", "input_channels", "==", "1", ")", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the config", "\n", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'%s-pcnn'", "%", "(", "self", ".", "args", ".", "D1", ")", "\n", "config", ".", "phases", "=", "{", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "False", "\n", "config", ".", "cast_float_label", "=", "False", "\n", "config", ".", "autoencoder_target", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "None", "\n", "config", ".", "visualize", "=", "False", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.pixelcnn.PixelCNN.propose_H": [[101, 114], ["pixelcnn.PixelCNN.get_base_config", "pixelcnn.PixelCNN.base_model.eval"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.get_base_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "config", "=", "self", ".", "get_base_config", "(", "dataset", ")", "\n", "\n", "\"\"\" This is really time consuming.\n            Feel free to uncomment these lines if you want to see the performance.\n        \"\"\"", "\n", "# trainer = IterativeTrainer(config, self.args)", "\n", "# trainer.run_epoch(0, phase='all')", "\n", "# test_average_loss = config.logger.get_measure('all_loss').mean_epoch(epoch=0)", "\n", "# print(\"All average loss (bpd)  %s\"%colored('%.4f'%(test_average_loss), 'red'))", "\n", "\n", "self", ".", "base_model", "=", "config", ".", "model", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.pixelcnn.PixelCNN.get_H_config": [[115, 195], ["print", "print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "methods.SVMLoss().to", "PixelCNNModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "torch.Adagrad", "torch.Adagrad", "torch.Adagrad", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "os.path.join", "os.path.dirname", "utils.logger.Logger", "print", "get_cached", "get_cached", "TensorDataset", "trainX[].mean", "trainX[].mean", "PixelCNNModelWrapper().to.H.threshold.data.fill_", "print", "TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "PixelCNNModelWrapper().to.set_eval_direct", "pixelcnn.PixelCNN.base_model.preferred_name", "PixelCNNModelWrapper().to.H.parameters", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "methods.SVMLoss", "pixelcnn.PixelCNNModelWrapper", "init_value.item", "init_value.item", "len", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_H_config", "(", "self", ",", "dataset", ",", "will_train", "=", "True", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "print", "(", "\"Mixture size: %s\"", "%", "colored", "(", "'%d'", "%", "len", "(", "dataset", ")", ",", "'green'", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# To make the threshold learning, actually threshold learning", "\n", "# the margin must be set to 0.", "\n", "criterion", "=", "SVMLoss", "(", "margin", "=", "0.0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "PixelCNNModelWrapper", "(", "self", ".", "base_model", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "if", "will_train", ":", "\n", "# cache the subnetwork for faster optimization.", "\n", "            ", "from", "methods", "import", "get_cached", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataset", "import", "TensorDataset", "\n", "\n", "trainX", ",", "trainY", "=", "get_cached", "(", "model", ",", "train_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "validX", ",", "validY", "=", "get_cached", "(", "model", ",", "valid_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "\n", "new_train_ds", "=", "TensorDataset", "(", "trainX", ",", "trainY", ")", "\n", "# Init the threshold.", "\n", "x_center", "=", "trainX", "[", "trainY", "==", "0", "]", ".", "mean", "(", ")", "\n", "y_center", "=", "trainX", "[", "trainY", "==", "1", "]", ".", "mean", "(", ")", "\n", "init_value", "=", "(", "x_center", "+", "y_center", ")", "/", "2", "\n", "model", ".", "H", ".", "threshold", ".", "data", ".", "fill_", "(", "init_value", ".", "item", "(", ")", ")", "\n", "print", "(", "\"Initializing threshold to %.2f\"", "%", "(", "init_value", ".", "item", "(", ")", ")", ")", "\n", "\n", "new_valid_ds", "=", "TensorDataset", "(", "validX", ",", "validY", ")", "\n", "\n", "# Initialize the new multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "new_train_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "new_valid_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# Set model to direct evaluation (for cached data)", "\n", "model", ".", "set_eval_direct", "(", "True", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "self", ".", "base_model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'_%s[%s](%s->%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "Adagrad", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ",", "weight_decay", "=", "1.0", "/", "len", "(", "train_ds", ")", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-8", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "config", ".", "max_epoch", "=", "100", "\n", "\n", "return", "config", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.binary_classifier.BinaryModelWrapper.__init__": [[22, 29], ["torch.Module.__init__", "[].item", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "base_model.output_size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleWrapper.output_size"], ["def", "__init__", "(", "self", ",", "base_model", ")", ":", "\n", "        ", "super", "(", "BinaryModelWrapper", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_model", "=", "base_model", "\n", "output_size", "=", "base_model", ".", "output_size", "(", ")", "[", "1", "]", ".", "item", "(", ")", "\n", "self", ".", "H", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm1d", "(", "output_size", ")", ",", "\n", "nn", ".", "Linear", "(", "output_size", ",", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.binary_classifier.BinaryModelWrapper.forward": [[31, 35], ["binary_classifier.BinaryModelWrapper.base_model.forward", "binary_classifier.BinaryModelWrapper.H"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "base_output", "=", "self", ".", "base_model", ".", "forward", "(", "x", ",", "softmax", "=", "False", ")", "\n", "output", "=", "self", ".", "H", "(", "base_output", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.binary_classifier.BinaryModelWrapper.preferred_name": [[36, 38], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.binary_classifier.BinaryModelWrapper.classify": [[39, 41], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.binary_classifier.BinaryClassifier.method_identifier": [[43, 48], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"BinaryClassifier\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.binary_classifier.BinaryClassifier.get_H_config": [[49, 116], ["print", "print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "hasattr", "BinaryModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "os.path.join", "os.path.dirname", "utils.logger.Logger", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "hasattr", "print", "BinaryModelWrapper().to.preferred_name", "BinaryModelWrapper().to.preferred_name", "BinaryModelWrapper().to.parameters", "BinaryModelWrapper().to.train_config", "BinaryModelWrapper().to.train_config.items", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "binary_classifier.BinaryModelWrapper", "print", "utils.iterative_trainer.IterativeTrainerConfig.__setattr__", "len", "Global.get_ref_classifier"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name", "home.repos.pwc.inspect_result.caotians1_OD-test-master.DRD.DRDTrain2.DRDDenseCustom.train_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_classifier"], ["", "def", "get_H_config", "(", "self", ",", "dataset", ",", "will_train", "=", "True", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "print", "(", "\"Mixture size: %s\"", "%", "colored", "(", "'%d'", "%", "len", "(", "dataset", ")", ",", "'green'", ")", ")", "\n", "import", "global_vars", "as", "Global", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "Global", ".", "get_ref_classifier", "(", "self", ".", "args", ".", "D1", ")", "[", "self", ".", "default_model", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "add_identifier", "=", "model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "model", ",", "'preferred_name'", ")", ":", "\n", "            ", "self", ".", "add_identifier", "=", "model", ".", "preferred_name", "(", ")", "\n", "", "model", "=", "BinaryModelWrapper", "(", "model", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the config", "\n", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'_%s[%s](%s-%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "1e-3", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "5", ",", "threshold", "=", "1e-2", ",", "min_lr", "=", "1e-6", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", ".", "max_epoch", "=", "30", "\n", "\n", "if", "hasattr", "(", "model", ",", "'train_config'", ")", ":", "\n", "            ", "model_train_config", "=", "model", ".", "train_config", "(", ")", "\n", "for", "key", ",", "value", "in", "model_train_config", ".", "items", "(", ")", ":", "\n", "                ", "print", "(", "'Overriding config.%s'", "%", "key", ")", "\n", "config", ".", "__setattr__", "(", "key", ",", "value", ")", "\n", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.binary_classifier.BinaryClassifier.propose_H": [[117, 119], ["None"], "methods", ["None"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "return", "\n", "#raise NotImplementedError(\"You know, you're not supposed to treat me like this!\")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.binary_classifier.BinaryClassifier.train_H": [[121, 192], ["SubDataset", "os.path.join", "os.path.dirname", "binary_classifier.BinaryClassifier.get_H_config", "utils.iterative_trainer.IterativeTrainer", "print", "binary_classifier.BinaryClassifier.model.load_state_dict", "utils.iterative_trainer.IterativeTrainer.run_epoch", "binary_classifier.BinaryClassifier.logger.get_measure().mean_epoch", "print", "binary_classifier.BinaryClassifier.H_class.eval", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "os.path.isdir", "os.makedirs", "print", "utils.iterative_trainer.IterativeTrainer.run_epoch", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.isfile", "termcolor.colored", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "binary_classifier.BinaryClassifier.logger.get_measure().mean_epoch", "binary_classifier.BinaryClassifier.scheduler.step", "binary_classifier.BinaryClassifier.logger.log", "binary_classifier.BinaryClassifier.logger.get_measure().mean_epoch", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "utils.iterative_trainer.IterativeTrainer.visdom.save", "binary_classifier.BinaryClassifier.logger.get_measure", "termcolor.colored", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "float", "binary_classifier.BinaryClassifier.logger.get_measure", "binary_classifier.BinaryClassifier.logger.visualize_average_keys", "binary_classifier.BinaryClassifier.logger.visualize_average_keys", "binary_classifier.BinaryClassifier.logger.visualize_average", "os.path.join", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "len", "binary_classifier.BinaryClassifier.logger.get_measure", "range", "binary_classifier.BinaryClassifier.logger.get_measure", "binary_classifier.BinaryClassifier.model.state_dict", "len", "termcolor.colored"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.get_H_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "train_H", "(", "self", ",", "dataset", ")", ":", "\n", "# Wrap the (mixture)dataset in SubDataset so to easily", "\n", "# split it later. God knows how many wrappers we have by this point.", "\n", "        ", "from", "datasets", "import", "SubDataset", "\n", "self", ".", "args", ".", "batch_size", "=", "64", "\n", "dataset", "=", "SubDataset", "(", "'%s-%s'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ",", "dataset", ",", "torch", ".", "arange", "(", "len", "(", "dataset", ")", ")", ".", "int", "(", ")", ")", "\n", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "if", "not", "path", ".", "isdir", "(", "h_parent", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "h_parent", ")", "\n", "\n", "", "done_path", "=", "h_path", "+", "'.done'", "\n", "will_train", "=", "self", ".", "args", ".", "force_train_h", "or", "not", "path", ".", "isfile", "(", "done_path", ")", "\n", "\n", "h_config", "=", "self", ".", "get_H_config", "(", "dataset", ")", "\n", "\n", "trainer", "=", "IterativeTrainer", "(", "h_config", ",", "self", ".", "args", ")", "\n", "\n", "if", "will_train", ":", "\n", "            ", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "best_accuracy", "=", "-", "1", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'test'", ")", "\n", "for", "epoch", "in", "range", "(", "1", ",", "h_config", ".", "max_epoch", ")", ":", "\n", "                ", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "h_config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "# Track the learning rates and threshold.", "\n", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "h_config", ".", "optim", ".", "param_groups", "]", "\n", "h_config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "h_config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "if", "h_config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                    ", "h_config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "h_config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_accuracy'", ",", "'Average Accuracy'", ",", "trainer", ".", "visdom", ")", "\n", "h_config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "\n", "", "test_average_acc", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'test_accuracy'", ")", ".", "mean_epoch", "(", ")", "\n", "\n", "# Save the logger for future reference.", "\n", "torch", ".", "save", "(", "h_config", ".", "logger", ".", "measures", ",", "path", ".", "join", "(", "h_parent", ",", "'logger.%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", ")", "\n", "\n", "if", "best_accuracy", "<", "test_average_acc", ":", "\n", "                    ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_average_acc", ",", "'red'", ")", ")", ")", "\n", "best_accuracy", "=", "test_average_acc", "\n", "torch", ".", "save", "(", "h_config", ".", "model", ".", "state_dict", "(", ")", ",", "h_path", ")", "\n", "\n", "", "if", "test_average_acc", ">", "1", "-", "1e-4", ":", "\n", "                    ", "break", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "done_path", ")", "\n", "\n", "if", "h_config", ".", "visualize", ":", "\n", "                ", "trainer", ".", "visdom", ".", "save", "(", "[", "trainer", ".", "visdom", ".", "env", "]", ")", "\n", "\n", "# Load the best model.", "\n", "", "", "print", "(", "colored", "(", "'Loading H model from %s'", "%", "h_path", ",", "'red'", ")", ")", "\n", "h_config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "h_path", ")", ")", "\n", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'testU'", ")", "\n", "test_average_acc", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'testU_accuracy'", ")", ".", "mean_epoch", "(", "epoch", "=", "0", ")", "\n", "print", "(", "\"Valid/Test average accuracy %s\"", "%", "colored", "(", "'%.4f%%'", "%", "(", "test_average_acc", "*", "100", ")", ",", "'red'", ")", ")", "\n", "self", ".", "H_class", "=", "h_config", ".", "model", "\n", "self", ".", "H_class", ".", "eval", "(", ")", "\n", "return", "test_average_acc", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.score_svm.ScoreSVMModelWrapper.__init__": [[20, 27], ["methods.AbstractModelWrapper.__init__", "[].item", "torch.Sequential", "torch.Sequential", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "base_model.output_size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleWrapper.output_size"], ["def", "__init__", "(", "self", ",", "base_model", ")", ":", "\n", "        ", "super", "(", "ScoreSVMModelWrapper", ",", "self", ")", ".", "__init__", "(", "base_model", ")", "\n", "\n", "output_size", "=", "base_model", ".", "output_size", "(", ")", "[", "1", "]", ".", "item", "(", ")", "\n", "self", ".", "H", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm1d", "(", "output_size", ")", ",", "# Helps with faster convergence.", "\n", "nn", ".", "Linear", "(", "output_size", ",", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.score_svm.ScoreSVMModelWrapper.subnetwork_eval": [[29, 33], ["score_svm.ScoreSVMModelWrapper.base_model.forward", "score_svm.ScoreSVMModelWrapper.detach"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.forward"], ["", "def", "subnetwork_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "base_output", "=", "self", ".", "base_model", ".", "forward", "(", "x", ",", "softmax", "=", "False", ")", "# We want the logits.", "\n", "output", "=", "base_output", ".", "detach", "(", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.score_svm.ScoreSVMModelWrapper.wrapper_eval": [[34, 37], ["score_svm.ScoreSVMModelWrapper.H"], "methods", ["None"], ["", "def", "wrapper_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "self", ".", "H", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.score_svm.ScoreSVMModelWrapper.classify": [[38, 40], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.score_svm.ScoreSVM.method_identifier": [[42, 47], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"ScoreSVM\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.score_svm.ScoreSVM.get_H_config": [[48, 121], ["print", "print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "methods.SVMLoss().cuda", "ScoreSVMModelWrapper().cuda", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "torch.Adagrad", "torch.Adagrad", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "os.join", "os.dirname", "utils.logger.Logger", "print", "get_cached", "get_cached", "TensorDataset", "TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "ScoreSVMModelWrapper().cuda.set_eval_direct", "score_svm.ScoreSVM.base_model.preferred_name", "ScoreSVMModelWrapper().cuda.H.parameters", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "methods.SVMLoss", "score_svm.ScoreSVMModelWrapper", "len", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_H_config", "(", "self", ",", "dataset", ",", "will_train", "=", "True", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "print", "(", "\"Mixture size: %s\"", "%", "colored", "(", "'%d'", "%", "len", "(", "dataset", ")", ",", "'green'", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "# margin must be non-zero.", "\n", "criterion", "=", "SVMLoss", "(", "margin", "=", "1.0", ")", ".", "cuda", "(", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "ScoreSVMModelWrapper", "(", "self", ".", "base_model", ")", ".", "cuda", "(", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "if", "will_train", ":", "\n", "# cache the subnetwork for faster optimization.", "\n", "            ", "from", "methods", "import", "get_cached", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataset", "import", "TensorDataset", "\n", "\n", "trainX", ",", "trainY", "=", "get_cached", "(", "model", ",", "train_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "validX", ",", "validY", "=", "get_cached", "(", "model", ",", "valid_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "\n", "new_train_ds", "=", "TensorDataset", "(", "trainX", ",", "trainY", ")", "\n", "new_valid_ds", "=", "TensorDataset", "(", "validX", ",", "validY", ")", "\n", "\n", "# Initialize the new multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "new_train_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "new_valid_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# Set model to direct evaluation (for cached data)", "\n", "model", ".", "set_eval_direct", "(", "True", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "self", ".", "base_model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'_%s[%s](%s->%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "Adagrad", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ",", "weight_decay", "=", "1.0", "/", "len", "(", "train_ds", ")", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-8", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "config", ".", "max_epoch", "=", "100", "\n", "\n", "return", "config", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.RTModelWrapper.__init__": [[23, 33], ["methods.AbstractModelWrapper.__init__", "torch.Module", "torch.Module", "torch.Module", "torch.Module", "reconstruction_error.RTModelWrapper.H.register_parameter", "reconstruction_error.RTModelWrapper.H.register_parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "print", "print", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "termcolor.colored", "termcolor.colored"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "base_model", ",", "loss_variant", "=", "0", ")", ":", "\n", "        ", "super", "(", "RTModelWrapper", ",", "self", ")", ".", "__init__", "(", "base_model", ")", "\n", "self", ".", "H", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "H", ".", "register_parameter", "(", "'threshold'", ",", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "0.5", "]", ")", ")", ")", "\n", "self", ".", "H", ".", "register_parameter", "(", "'transfer'", ",", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "[", "0.0", "]", ")", ")", ")", "\n", "self", ".", "loss_variant", "=", "loss_variant", "\n", "if", "self", ".", "loss_variant", "==", "0", ":", "\n", "            ", "print", "(", "colored", "(", "'BCE Loss'", ",", "'green'", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "colored", "(", "'MSE Loss'", ",", "'green'", ")", ")", "\n", "# from visdom import Visdom", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.RTModelWrapper.calculate_loss": [[36, 44], ["torch.mse_loss.detach", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss"], "methods", ["None"], ["", "", "def", "calculate_loss", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "loss", "=", "None", "\n", "if", "self", ".", "loss_variant", "==", "0", ":", "\n", "            ", "loss", "=", "Fn", ".", "binary_cross_entropy_with_logits", "(", "input", ",", "target", ",", "reduction", "=", "'none'", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "Fn", ".", "mse_loss", "(", "input", ",", "target", ",", "reduction", "=", "'none'", ")", "\n", "\n", "", "return", "loss", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.RTModelWrapper.subnetwork_eval": [[45, 53], ["reconstruction_error.RTModelWrapper.base_model().detach", "reconstruction_error.RTModelWrapper.calculate_loss", "loss.view().mean.view().mean.view().mean", "reconstruction_error.RTModelWrapper.base_model", "loss.view().mean.view().mean.view", "loss.view().mean.view().mean.size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.RTModelWrapper.calculate_loss"], ["", "def", "subnetwork_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ".", "requires_grad", "=", "False", "\n", "base_output", "=", "self", ".", "base_model", "(", "x", ")", ".", "detach", "(", ")", "\n", "loss", "=", "self", ".", "calculate_loss", "(", "base_output", ",", "x", ")", "\n", "loss", "=", "loss", ".", "view", "(", "loss", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "# self.visdom.images(x.data.cpu().numpy(), win='input')", "\n", "# self.visdom.images(nn.functional.sigmoid(base_output).data.cpu().numpy(), win='output')", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.RTModelWrapper.wrapper_eval": [[54, 59], ["None"], "methods", ["None"], ["", "def", "wrapper_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "-", "self", ".", "H", ".", "transfer", "\n", "x", "=", "x", "*", "x", "\n", "output", "=", "x", "-", "self", ".", "H", ".", "threshold", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.RTModelWrapper.classify": [[60, 62], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.ReconstructionThreshold.method_identifier": [[64, 69], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"REThreshold\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.ReconstructionThreshold.get_base_config": [[70, 123], ["print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "utils.iterative_trainer.IterativeTrainerConfig", "os.path.join", "os.path.dirname", "utils.logger.Logger", "torch.BCEWithLogitsLoss().to", "torch.BCEWithLogitsLoss().to", "torch.BCEWithLogitsLoss().to", "torch.BCEWithLogitsLoss().to", "torch.MSELoss().to", "torch.MSELoss().to", "torch.MSELoss().to", "torch.MSELoss().to", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "global_vars.get_ref_autoencoder", "global_vars.get_ref_vae", "global_vars.get_ref_autoencoder", "global_vars.get_ref_vae", "global_vars.get_ref_autoencoder", "global_vars.get_ref_autoencoder", "global_vars.get_ref_vae"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_autoencoder", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_vae", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_autoencoder", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_vae", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_autoencoder", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_autoencoder", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_vae"], ["", "def", "get_base_config", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "name", ")", ")", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the model", "\n", "if", "self", ".", "default_model", "<", "2", ":", "\n", "            ", "model", "=", "Global", ".", "get_ref_autoencoder", "(", "dataset", ".", "name", ")", "[", "0", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "elif", "self", ".", "default_model", "<", "4", ":", "\n", "            ", "model", "=", "Global", ".", "get_ref_vae", "(", "dataset", ".", "name", ")", "[", "0", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "elif", "self", ".", "default_model", "<", "6", ":", "\n", "            ", "model", "=", "Global", ".", "get_ref_autoencoder", "(", "dataset", ".", "name", ")", "[", "1", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "elif", "self", ".", "default_model", "<", "8", ":", "\n", "            ", "model", "=", "Global", ".", "get_ref_vae", "(", "dataset", ".", "name", ")", "[", "1", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "elif", "self", ".", "default_model", "<", "10", ":", "\n", "            ", "model", "=", "Global", ".", "get_ref_autoencoder", "(", "dataset", ".", "name", ")", "[", "2", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "elif", "self", ".", "default_model", "<", "12", ":", "\n", "            ", "model", "=", "Global", ".", "get_ref_autoencoder", "(", "dataset", ".", "name", ")", "[", "3", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "elif", "self", ".", "default_model", "<", "14", ":", "\n", "            ", "model", "=", "Global", ".", "get_ref_vae", "(", "dataset", ".", "name", ")", "[", "2", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the criterion", "\n", "", "criterion", "=", "None", "\n", "if", "self", ".", "default_model", "%", "2", "==", "0", ":", "\n", "            ", "criterion", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "criterion", "=", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "model", ".", "default_sigmoid", "=", "True", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'%s-AE1'", "%", "(", "self", ".", "args", ".", "D1", ")", "\n", "config", ".", "phases", "=", "{", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "False", "\n", "config", ".", "cast_float_label", "=", "False", "\n", "config", ".", "autoencoder_target", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "sigmoid_viz", "=", "self", ".", "default_model", "==", "0", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "None", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.ReconstructionThreshold.propose_H": [[124, 151], ["reconstruction_error.ReconstructionThreshold.get_base_config", "Models.get_ref_model_path", "os.path.join", "reconstruction_error.ReconstructionThreshold.base_model.eval", "os.path.isfile", "NotImplementedError", "print", "reconstruction_error.ReconstructionThreshold.model.load_state_dict", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.get_base_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "config", "=", "self", ".", "get_base_config", "(", "dataset", ")", "\n", "\n", "import", "models", "as", "Models", "\n", "if", "self", ".", "default_model", "%", "2", "==", "0", ":", "\n", "            ", "config", ".", "model", ".", "netid", "=", "\"BCE.\"", "+", "config", ".", "model", ".", "netid", "\n", "", "else", ":", "\n", "            ", "config", ".", "model", ".", "netid", "=", "\"MSE.\"", "+", "config", ".", "model", ".", "netid", "\n", "\n", "", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "self", ".", "args", ",", "config", ".", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "suffix_str", "=", "config", ".", "model", ".", "netid", ")", "\n", "hbest_path", "=", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "best_h_path", "=", "hbest_path", "\n", "\n", "#trainer = IterativeTrainer(config, self.args)", "\n", "\n", "if", "not", "path", ".", "isfile", "(", "best_h_path", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"%s not found!, Please use setup_model to pretrain the networks first!\"", "%", "best_h_path", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "\n", "#trainer.run_epoch(0, phase='all')", "\n", "#test_loss = config.logger.get_measure('all_loss').mean_epoch(epoch=0)", "\n", "#print(\"All average loss %s\"%colored('%.4f'%(test_loss), 'red'))", "\n", "\n", "", "self", ".", "base_model", "=", "config", ".", "model", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.reconstruction_error.ReconstructionThreshold.get_H_config": [[152, 227], ["print", "print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "methods.SVMLoss().to", "RTModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "os.path.join", "os.path.dirname", "utils.logger.Logger", "print", "get_cached", "get_cached", "TensorDataset", "TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "RTModelWrapper().to.set_eval_direct", "reconstruction_error.ReconstructionThreshold.base_model.preferred_name", "RTModelWrapper().to.H.parameters", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "methods.SVMLoss", "reconstruction_error.RTModelWrapper", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_H_config", "(", "self", ",", "dataset", ",", "will_train", "=", "True", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "print", "(", "\"Mixture size: %s\"", "%", "colored", "(", "'%d'", "%", "len", "(", "dataset", ")", ",", "'green'", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "# To make the threshold learning, actually threshold learning", "\n", "# the margin must be set to 0.", "\n", "criterion", "=", "SVMLoss", "(", "margin", "=", "0.0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "RTModelWrapper", "(", "self", ".", "base_model", ",", "loss_variant", "=", "self", ".", "default_model", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "if", "will_train", ":", "\n", "# cache the subnetwork for faster optimization.", "\n", "            ", "from", "methods", "import", "get_cached", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataset", "import", "TensorDataset", "\n", "\n", "trainX", ",", "trainY", "=", "get_cached", "(", "model", ",", "train_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "validX", ",", "validY", "=", "get_cached", "(", "model", ",", "valid_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "\n", "new_train_ds", "=", "TensorDataset", "(", "trainX", ",", "trainY", ")", "\n", "new_valid_ds", "=", "TensorDataset", "(", "validX", ",", "validY", ")", "\n", "\n", "# Initialize the new multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "new_train_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "new_valid_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# Set model to direct evaluation (for cached data)", "\n", "model", ".", "set_eval_direct", "(", "True", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "self", ".", "base_model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'_%s[%s](%s->%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ",", "weight_decay", "=", "1e-5", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-8", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "\n", "config", ".", "max_epoch", "=", "30", "\n", "\n", "return", "config", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaModelWrapper.__init__": [[28, 39], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "base_model", ":", "NIHDenseBinary", ",", "num_class", "=", "2", ",", "intermediate_nodes", "=", "(", "3", ",", "5", ",", "7", ",", "9", ",", "11", ")", ")", ":", "\n", "        ", "super", "(", "MahaModelWrapper", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_model", "=", "base_model", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "intermediate_nodes", "=", "intermediate_nodes", "\n", "#self.activations = OrderedDict()", "\n", "#intermediate_nodes = [3, 5, 7, 9, 11]", "\n", "\n", "#for i in intermediate_nodes:", "\n", "#    self.track_channel_mean(self.base_model.densenet121.features[i], self.activations)", "\n", "self", ".", "trained", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaModelWrapper.track_channel_mean": [[40, 45], ["module.register_forward_hook", "output.mean"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "track_channel_mean", "(", "module", ",", "cache", ")", ":", "\n", "        ", "def", "hook", "(", "model", ",", "input", ",", "output", ")", ":", "\n", "            ", "cache", "[", "module", "]", "=", "output", ".", "mean", "(", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "", "return", "module", ".", "register_forward_hook", "(", "hook", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaModelWrapper.collect_states": [[46, 91], ["collections.defaultdict", "tqdm.tqdm.tqdm", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict.items", "x.to.to.to", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "collections.OrderedDict", "mahalanobis.MahaModelWrapper.base_model.forward", "collections.OrderedDict.items", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "bool", "mahalanobis.MahaModelWrapper.track_channel_mean", "hooks.append", "all_xs[].append", "mahalanobis.MahaModelWrapper.remove", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "mahalanobis.MahaModelWrapper.mus[].append", "mahalanobis.MahaModelWrapper.Ts[].append", "os.environ.get", "os.environ.get", "os.environ.get", "os.environ.get", "activation.detach().cpu", "len", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero", "torch.eq().nonzero.squeeze", "torch.eq().nonzero.squeeze", "torch.eq().nonzero.squeeze", "torch.eq().nonzero.squeeze", "torch.eq().nonzero.squeeze", "torch.mean.view", "torch.mean.view", "torch.mean.view", "torch.mean.view", "torch.mean.view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "x_demean.transpose", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "torch.pinverse", "activation.detach", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.cat.new", "torch.cat.new", "torch.cat.new", "torch.cat.new", "torch.cat.new", "torch.cat.new", "torch.cat.new", "torch.cat.new", "torch.cat.new", "torch.cat.new"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.forward", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaModelWrapper.track_channel_mean"], ["", "def", "collect_states", "(", "self", ",", "data_loader", ",", "device", ")", ":", "\n", "        ", "all_xs", "=", "defaultdict", "(", "list", ")", "\n", "all_ys", "=", "[", "]", "\n", "\n", "for", "x", ",", "y", "in", "tqdm", "(", "data_loader", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", ":", "\n", "            ", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "all_ys", ".", "append", "(", "y", ")", "\n", "\n", "activations", "=", "OrderedDict", "(", ")", "\n", "intermediate_nodes", "=", "self", ".", "intermediate_nodes", "\n", "hooks", "=", "[", "]", "\n", "for", "i", "in", "intermediate_nodes", ":", "\n", "                ", "hook", "=", "self", ".", "track_channel_mean", "(", "self", ".", "base_model", ".", "densenet121", ".", "features", "[", "i", "]", ",", "activations", ")", "\n", "hooks", ".", "append", "(", "hook", ")", "\n", "", "_", "=", "self", ".", "base_model", ".", "forward", "(", "x", ")", "\n", "for", "module", ",", "activation", "in", "activations", ".", "items", "(", ")", ":", "\n", "                ", "all_xs", "[", "module", "]", ".", "append", "(", "activation", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "del", "activation", "\n", "", "for", "hook", "in", "hooks", ":", "\n", "                ", "hook", ".", "remove", "(", ")", "\n", "", "del", "activations", "\n", "del", "_", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "", "all_ys", "=", "torch", ".", "cat", "(", "all_ys", ",", "dim", "=", "0", ")", "\n", "self", ".", "mus", "=", "defaultdict", "(", "list", ")", "\n", "self", ".", "Ts", "=", "defaultdict", "(", "list", ")", "\n", "for", "layer", ",", "xs", "in", "all_xs", ".", "items", "(", ")", ":", "\n", "            ", "xs", "=", "torch", ".", "cat", "(", "xs", ",", "dim", "=", "0", ")", "\n", "for", "c", "in", "range", "(", "self", ".", "num_class", ")", ":", "\n", "                ", "if", "len", "(", "all_ys", ".", "shape", ")", "==", "1", ":", "\n", "                    ", "this_class_indices", "=", "torch", ".", "eq", "(", "all_ys", ",", "all_ys", ".", "new", "(", "[", "c", "]", ")", ")", ".", "nonzero", "(", ")", "\n", "", "else", ":", "\n", "                    ", "this_class_indices", "=", "torch", ".", "eq", "(", "all_ys", "[", ":", ",", "c", "]", ",", "all_ys", ".", "new", "(", "[", "1", "]", ")", ")", ".", "nonzero", "(", ")", "\n", "", "this_class_x", "=", "torch", ".", "index_select", "(", "xs", ",", "0", ",", "this_class_indices", ".", "squeeze", "(", ")", ")", "\n", "mu", "=", "torch", ".", "mean", "(", "this_class_x", ",", "dim", "=", "0", ")", "\n", "x_demean", "=", "(", "this_class_x", "-", "mu", ".", "view", "(", "1", ",", "-", "1", ")", ")", "\n", "covar", "=", "torch", ".", "matmul", "(", "x_demean", ".", "transpose", "(", "0", ",", "1", ")", ",", "x_demean", ")", "/", "(", "x_demean", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "covar", "=", "covar", "+", "torch", ".", "eye", "(", "covar", ".", "shape", "[", "0", "]", ")", "*", "1e-5", "\n", "try", ":", "\n", "                    ", "T", "=", "torch", ".", "inverse", "(", "covar", ")", "\n", "", "except", ":", "\n", "                    ", "T", "=", "torch", ".", "pinverse", "(", "covar", ")", "\n", "", "self", ".", "mus", "[", "layer", "]", ".", "append", "(", "mu", ")", "\n", "self", ".", "Ts", "[", "layer", "]", ".", "append", "(", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaModelWrapper.forward": [[92, 127], ["collections.OrderedDict", "mahalanobis.MahaModelWrapper.base_model.forward", "collections.OrderedDict.items", "len", "mahalanobis.MahaModelWrapper.base_model.forward", "mahalanobis.MahaModelWrapper.track_channel_mean", "hooks.append", "activation.unsqueeze().expand.unsqueeze().expand.size", "activation.unsqueeze().expand.unsqueeze().expand.size", "activation.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "all_LL.append", "mahalanobis.MahaModelWrapper.remove", "[].view().cuda", "[].cuda", "mu.unsqueeze().expand.unsqueeze().expand.size", "mu.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "zs.append", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "activation.unsqueeze().expand.unsqueeze().expand.unsqueeze", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "[].view", "mu.unsqueeze().expand.unsqueeze().expand.unsqueeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot", "torch.tensordot"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.forward", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.forward", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaModelWrapper.track_channel_mean"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "softmax", "=", "False", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "mus", ")", "==", "0", ":", "\n", "            ", "return", "self", ".", "base_model", ".", "forward", "(", "x", ",", "softmax", "=", "softmax", ")", "\n", "", "activations", "=", "OrderedDict", "(", ")", "\n", "intermediate_nodes", "=", "self", ".", "intermediate_nodes", "\n", "hooks", "=", "[", "]", "\n", "for", "i", "in", "intermediate_nodes", ":", "\n", "            ", "hook", "=", "self", ".", "track_channel_mean", "(", "self", ".", "base_model", ".", "densenet121", ".", "features", "[", "i", "]", ",", "activations", ")", "\n", "hooks", ".", "append", "(", "hook", ")", "\n", "", "_", "=", "self", ".", "base_model", ".", "forward", "(", "x", ")", "# run the model once to populate hooks", "\n", "all_LL", "=", "[", "]", "\n", "del", "_", "\n", "\n", "for", "module", ",", "activation", "in", "activations", ".", "items", "(", ")", ":", "\n", "            ", "n", "=", "activation", ".", "size", "(", "0", ")", "\n", "d", "=", "activation", ".", "size", "(", "1", ")", "\n", "activation", "=", "activation", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "n", ",", "1", ",", "d", ")", "\n", "zs", "=", "[", "]", "\n", "for", "c", "in", "range", "(", "self", ".", "num_class", ")", ":", "\n", "                ", "mu", "=", "self", ".", "mus", "[", "module", "]", "[", "c", "]", ".", "view", "(", "1", ",", "-", "1", ")", ".", "cuda", "(", ")", "\n", "T", "=", "self", ".", "Ts", "[", "module", "]", "[", "c", "]", ".", "cuda", "(", ")", "\n", "m", "=", "mu", ".", "size", "(", "0", ")", "# should be 1", "\n", "assert", "m", "==", "1", "\n", "mu", "=", "mu", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "n", ",", "1", ",", "d", ")", "\n", "cLL", "=", "-", "torch", ".", "mul", "(", "torch", ".", "tensordot", "(", "activation", "-", "mu", ",", "T", ",", "dims", "=", "1", ")", ",", "activation", "-", "mu", ")", ".", "sum", "(", "2", ")", "# n by 1", "\n", "zs", ".", "append", "(", "cLL", ")", "\n", "", "LL", "=", "torch", ".", "cat", "(", "zs", ",", "dim", "=", "1", ")", "\n", "if", "softmax", ":", "\n", "                ", "LL", "=", "nn", ".", "Softmax", "(", "LL", ")", "\n", "", "all_LL", ".", "append", "(", "LL", ")", "\n", "\n", "", "for", "hook", "in", "hooks", ":", "\n", "            ", "hook", ".", "remove", "(", ")", "\n", "\n", "", "return", "all_LL", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaODModelWrapper.__init__": [[134, 154], ["methods.AbstractModelWrapper.__init__", "torch.Module", "torch.Module", "torch.Module", "torch.Module", "torch.Module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mahalanobis.MahaODModelWrapper.H.register_buffer", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "base_model", ":", "MahaModelWrapper", ",", "num_class", ",", "num_layers", ",", "epsilon", "=", "0.0012", ")", ":", "\n", "        ", "\"\"\"\n\n        :param base_model: A classifier model\n        :param num_class:\n        :param num_layers:\n\n        :param epsilon:\n        \"\"\"", "\n", "super", "(", "MahaODModelWrapper", ",", "self", ")", ".", "__init__", "(", "base_model", ")", "\n", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "H", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "H", ".", "regressor", "=", "nn", ".", "Sequential", "(", "#nn.BatchNorm1d(num_layers),", "\n", "nn", ".", "Linear", "(", "num_layers", ",", "1", ")", ",", ")", "\n", "# register params under H for storage.", "\n", "self", ".", "H", ".", "register_buffer", "(", "'epsilon'", ",", "torch", ".", "FloatTensor", "(", "[", "epsilon", "]", ")", ")", "\n", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaODModelWrapper.subnetwork_eval": [[155, 189], ["x.clone", "x.clone", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "mahalanobis.MahaODModelWrapper.base_model", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.clone.grad.zero_", "[].detach", "mahalanobis.MahaODModelWrapper.criterion", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "new_input.detach_", "[].detach", "[].detach().unsqueeze_", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "len", "torch.grad", "torch.grad", "torch.grad", "torch.grad", "torch.grad", "torch.grad", "torch.grad", "torch.grad", "torch.grad", "torch.grad", "x.clone.detach", "base_output.max", "grad_input_x.detach().sign", "[].detach", "mahalanobis.MahaODModelWrapper.base_model", "grad_input_x.detach", "[].detach.max"], "methods", ["None"], ["", "def", "subnetwork_eval", "(", "self", ",", "x", ")", ":", "\n", "# We have to backpropagate through the input.", "\n", "# The model must be fixed in the eval mode.", "\n", "        ", "new_x", "=", "x", ".", "clone", "(", ")", "\n", "cur_x", "=", "x", ".", "clone", "(", ")", "\n", "\n", "grad_input_x", "=", "None", "\n", "with", "torch", ".", "set_grad_enabled", "(", "True", ")", ":", "\n", "            ", "cur_x", ".", "requires_grad", "=", "True", "\n", "if", "cur_x", ".", "grad", "is", "not", "None", ":", "\n", "                ", "cur_x", ".", "grad", ".", "zero_", "(", ")", "\n", "", "base_outputs", "=", "self", ".", "base_model", "(", "cur_x", ",", "softmax", "=", "False", ")", "\n", "all_layer_outputs", "=", "[", "]", "\n", "for", "i", ",", "base_output", "in", "enumerate", "(", "base_outputs", ")", ":", "\n", "                ", "y_hat", "=", "base_output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "base_output", ",", "y_hat", ")", "\n", "if", "i", "==", "len", "(", "base_outputs", ")", "-", "1", ":", "\n", "                    ", "grad_input_x", "=", "autograd", ".", "grad", "(", "[", "loss", "]", ",", "[", "cur_x", "]", ",", "retain_graph", "=", "False", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "                    ", "grad_input_x", "=", "autograd", ".", "grad", "(", "[", "loss", "]", ",", "[", "cur_x", "]", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "                    ", "new_input", "=", "(", "new_x", ".", "detach", "(", ")", "-", "self", ".", "H", ".", "epsilon", "*", "(", "grad_input_x", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ")", "\n", "new_input", ".", "detach_", "(", ")", "\n", "new_input", ".", "requires_grad", "=", "False", "\n", "\n", "# second evaluation.", "\n", "new_output", "=", "self", ".", "base_model", "(", "new_input", ",", "softmax", "=", "False", ")", "[", "i", "]", ".", "detach", "(", ")", "\n", "input", "=", "new_output", ".", "max", "(", "1", ")", "[", "0", "]", ".", "detach", "(", ")", ".", "unsqueeze_", "(", "1", ")", "\n", "#input = base_output.max(1)[0].detach().unsqueeze_(1)", "\n", "all_layer_outputs", ".", "append", "(", "input", ")", "\n", "", "del", "base_output", "\n", "", "del", "base_outputs", "\n", "all_layer_outputs", "=", "torch", ".", "cat", "(", "all_layer_outputs", ",", "dim", "=", "1", ")", "# batchsize x num_layers", "\n", "", "return", "all_layer_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaODModelWrapper.wrapper_eval": [[207, 210], ["mahalanobis.MahaODModelWrapper.H.regressor"], "methods", ["None"], ["", "def", "wrapper_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "pred", "=", "self", ".", "H", ".", "regressor", "(", "x", ")", "\n", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaODModelWrapper.classify": [[211, 213], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahalanobisDetector.method_identifier": [[216, 221], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"MAHA\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahalanobisDetector.propose_H": [[222, 244], ["mahalanobis.MahalanobisDetector.get_base_config", "get_ref_model_path", "os.join", "os.join", "mahalanobis.MahaModelWrapper", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "mahalanobis.MahalanobisDetector.base_model.collect_states", "mahalanobis.MahalanobisDetector.base_model.eval", "os.isfile", "os.isfile", "NotImplementedError", "print", "mahalanobis.MahalanobisDetector.model.load_state_dict", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.get_base_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaModelWrapper.collect_states", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "config", "=", "self", ".", "get_base_config", "(", "dataset", ")", "\n", "\n", "from", "models", "import", "get_ref_model_path", "\n", "h_path", "=", "get_ref_model_path", "(", "self", ".", "args", ",", "config", ".", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ")", "\n", "best_h_path", "=", "path", ".", "join", "(", "h_path", ",", "'model.best.pth'", ")", "\n", "\n", "if", "not", "path", ".", "isfile", "(", "best_h_path", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Please use model_setup to pretrain the networks first!\"", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "\n", "# trainer.run_epoch(0, phase='all')", "\n", "# test_average_acc = config.logger.get_measure('all_accuracy').mean_epoch(epoch=0)", "\n", "# print(\"All average accuracy %s\"%colored('%.4f%%'%(test_average_acc*100), 'red'))", "\n", "\n", "", "self", ".", "base_model", "=", "MahaModelWrapper", "(", "config", ".", "model", ",", "2", ")", "\n", "loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "self", ".", "base_model", ".", "collect_states", "(", "loader", ",", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahalanobisDetector.get_H_config": [[245, 309], ["print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "MahaODModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "os.join", "os.join", "os.dirname", "os.dirname", "utils.logger.Logger", "get_cached", "get_cached", "TensorDataset", "TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "MahaODModelWrapper().to.set_eval_direct", "mahalanobis.MahalanobisDetector.base_model.preferred_name", "MahaODModelWrapper().to.H.parameters", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "mahalanobis.MahaODModelWrapper"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_H_config", "(", "self", ",", "train_ds", ",", "valid_ds", ",", "will_train", "=", "True", ",", "epsilon", "=", "0.0012", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", ".", "cuda", "(", ")", "\n", "# Set up the model", "\n", "model", "=", "MahaODModelWrapper", "(", "self", ".", "base_model", ",", "epsilon", "=", "epsilon", ",", "num_class", "=", "2", ",", "num_layers", "=", "5", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "if", "will_train", ":", "\n", "# cache the subnetwork for faster optimization.", "\n", "            ", "from", "methods", "import", "get_cached", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataset", "import", "TensorDataset", "\n", "\n", "trainX", ",", "trainY", "=", "get_cached", "(", "model", ",", "train_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "validX", ",", "validY", "=", "get_cached", "(", "model", ",", "valid_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "\n", "new_train_ds", "=", "TensorDataset", "(", "trainX", ",", "trainY", ")", "\n", "new_valid_ds", "=", "TensorDataset", "(", "validX", ",", "validY", ")", "\n", "\n", "# Initialize the new multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "new_train_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "new_valid_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# Set model to direct evaluation (for cached data)", "\n", "model", ".", "set_eval_direct", "(", "True", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "self", ".", "base_model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'_%s[%s](%s-%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "5", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-6", ",", "\n", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "config", ".", "max_epoch", "=", "100", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahalanobisDetector.train_H": [[310, 413], ["datasets.SubDataset", "datasets.SubDataset.split_dataset", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "len", "os.join", "os.join", "os.dirname", "os.dirname", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "mahalanobis.MahalanobisDetector.model.H.load_state_dict", "mahalanobis.MahalanobisDetector.model.set_eval_direct", "print", "utils.iterative_trainer.IterativeTrainer.run_epoch", "mahalanobis.MahalanobisDetector.logger.get_measure().mean_epoch", "print", "mahalanobis.MahalanobisDetector.H_class.eval", "mahalanobis.MahalanobisDetector.H_class.set_eval_direct", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "print", "os.isdir", "os.isdir", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "enumerate", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "mahalanobis.MahalanobisDetector.get_H_config", "utils.iterative_trainer.IterativeTrainer", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "os.isfile", "os.isfile", "print", "timeit.default_timer", "mahalanobis.MahalanobisDetector.get_H_config", "utils.iterative_trainer.IterativeTrainer", "print", "utils.iterative_trainer.IterativeTrainer.run_epoch", "range", "print", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "val.view", "termcolor.colored", "mahalanobis.MahalanobisDetector.logger.get_measure", "termcolor.colored", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "termcolor.colored", "termcolor.colored", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "mahalanobis.MahalanobisDetector.logger.get_measure().mean_epoch", "mahalanobis.MahalanobisDetector.scheduler.step", "mahalanobis.MahalanobisDetector.logger.log", "mahalanobis.MahalanobisDetector.logger.get_measure().mean_epoch", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "timeit.default_timer", "mahalanobis.MahalanobisDetector.model.H.epsilon.item", "len", "float", "mahalanobis.MahalanobisDetector.logger.get_measure", "mahalanobis.MahalanobisDetector.logger.visualize_average_keys", "mahalanobis.MahalanobisDetector.logger.visualize_average_keys", "mahalanobis.MahalanobisDetector.logger.visualize_average", "os.join", "os.join", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "mahalanobis.MahalanobisDetector.logger.get_measure", "range", "mahalanobis.MahalanobisDetector.logger.get_measure", "mahalanobis.MahalanobisDetector.model.H.state_dict", "len", "termcolor.colored"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.get_H_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.get_H_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "train_H", "(", "self", ",", "dataset", ")", ":", "\n", "# Wrap the (mixture)dataset in SubDataset so to easily", "\n", "# split it later.", "\n", "        ", "dataset", "=", "SubDataset", "(", "'%s-%s'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ",", "dataset", ",", "torch", ".", "arange", "(", "len", "(", "dataset", ")", ")", ".", "int", "(", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# As suggested by the authors.", "\n", "", "all_epsilons", "=", "torch", ".", "linspace", "(", "0.0", ",", "0.004", ",", "21", ")", "\n", "total_params", "=", "len", "(", "all_epsilons", ")", "\n", "best_accuracy", "=", "-", "1", "\n", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "if", "not", "path", ".", "isdir", "(", "h_parent", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "h_parent", ")", "\n", "\n", "", "done_path", "=", "h_path", "+", "'.done'", "\n", "trainer", ",", "h_config", "=", "None", ",", "None", "\n", "\n", "if", "self", ".", "args", ".", "force_train_h", "or", "not", "path", ".", "isfile", "(", "done_path", ")", ":", "\n", "# Grid search over the temperature and the epsilons.", "\n", "            ", "for", "i_eps", ",", "eps", "in", "enumerate", "(", "all_epsilons", ")", ":", "\n", "                ", "so_far", "=", "i_eps", "+", "1", "\n", "print", "(", "colored", "(", "'Checking eps=%.2e (%d/%d)'", "%", "(", "eps", ",", "so_far", ",", "total_params", ")", ",", "'green'", ")", ")", "\n", "start_time", "=", "timeit", ".", "default_timer", "(", ")", "\n", "h_config", "=", "self", ".", "get_H_config", "(", "train_ds", "=", "train_ds", ",", "valid_ds", "=", "valid_ds", ",", "\n", "epsilon", "=", "eps", ")", "\n", "\n", "trainer", "=", "IterativeTrainer", "(", "h_config", ",", "self", ".", "args", ")", "\n", "\n", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'test'", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "1", ",", "h_config", ".", "max_epoch", ")", ":", "\n", "                    ", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "h_config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "# Track the learning rates and threshold.", "\n", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "h_config", ".", "optim", ".", "param_groups", "]", "\n", "h_config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "h_config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "if", "h_config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                        ", "h_config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "h_config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_accuracy'", ",", "'Average Accuracy'", ",", "trainer", ".", "visdom", ")", "\n", "h_config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "\n", "", "test_average_acc", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'test_accuracy'", ")", ".", "mean_epoch", "(", ")", "\n", "\n", "# Save the logger for future reference.", "\n", "torch", ".", "save", "(", "h_config", ".", "logger", ".", "measures", ",", "\n", "path", ".", "join", "(", "h_parent", ",", "'logger.%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", ")", "\n", "\n", "if", "best_accuracy", "<", "test_average_acc", ":", "\n", "                        ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_average_acc", ",", "'red'", ")", ")", ")", "\n", "best_accuracy", "=", "test_average_acc", "\n", "torch", ".", "save", "(", "h_config", ".", "model", ".", "H", ".", "state_dict", "(", ")", ",", "h_path", ")", "\n", "\n", "", "if", "test_average_acc", ">", "1", "-", "1e-4", ":", "\n", "                        ", "break", "\n", "\n", "", "", "elapsed", "=", "timeit", ".", "default_timer", "(", ")", "-", "start_time", "\n", "print", "(", "'Hyper-param check %.2e in %.2fs'", "%", "(", "eps", ",", "elapsed", ")", ")", "\n", "\n", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "done_path", ")", "\n", "\n", "# If we load the pretrained model directly, we will have to initialize these.", "\n", "", "if", "trainer", "is", "None", "or", "h_config", "is", "None", ":", "\n", "            ", "h_config", "=", "self", ".", "get_H_config", "(", "train_ds", "=", "train_ds", ",", "valid_ds", "=", "valid_ds", ",", "\n", "epsilon", "=", "0", ",", "will_train", "=", "False", ")", "\n", "# don't worry about the values of epsilon or temperature. it will be overwritten.", "\n", "trainer", "=", "IterativeTrainer", "(", "h_config", ",", "self", ".", "args", ")", "\n", "\n", "# Load the best model.", "\n", "", "print", "(", "colored", "(", "'Loading H model from %s'", "%", "h_path", ",", "'red'", ")", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "h_path", ")", "\n", "for", "key", ",", "val", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "val", ".", "shape", "==", "torch", ".", "Size", "(", "[", "]", ")", ":", "\n", "                ", "state_dict", "[", "key", "]", "=", "val", ".", "view", "(", "(", "1", ",", ")", ")", "\n", "", "", "h_config", ".", "model", ".", "H", ".", "load_state_dict", "(", "state_dict", ")", "\n", "h_config", ".", "model", ".", "set_eval_direct", "(", "False", ")", "\n", "print", "(", "'Epsilon %s'", "%", "(", "colored", "(", "h_config", ".", "model", ".", "H", ".", "epsilon", ".", "item", "(", ")", ",", "'red'", ")", ")", ")", "\n", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'testU'", ")", "\n", "test_average_acc", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'testU_accuracy'", ")", ".", "mean_epoch", "(", "epoch", "=", "0", ")", "\n", "print", "(", "\"Valid/Test average accuracy %s\"", "%", "colored", "(", "'%.4f%%'", "%", "(", "test_average_acc", "*", "100", ")", ",", "'red'", ")", ")", "\n", "self", ".", "H_class", "=", "h_config", ".", "model", "\n", "self", ".", "H_class", ".", "eval", "(", ")", "\n", "self", ".", "H_class", ".", "set_eval_direct", "(", "False", ")", "\n", "return", "test_average_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahalanobisDetectorOneLayer.propose_H": [[415, 437], ["mahalanobis.MahalanobisDetectorOneLayer.get_base_config", "get_ref_model_path", "os.join", "os.join", "mahalanobis.MahaModelWrapper", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "mahalanobis.MahalanobisDetectorOneLayer.base_model.collect_states", "mahalanobis.MahalanobisDetectorOneLayer.base_model.eval", "os.isfile", "os.isfile", "NotImplementedError", "print", "mahalanobis.MahalanobisDetectorOneLayer.model.load_state_dict", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.get_base_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahaModelWrapper.collect_states", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["    ", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "config", "=", "self", ".", "get_base_config", "(", "dataset", ")", "\n", "\n", "from", "models", "import", "get_ref_model_path", "\n", "h_path", "=", "get_ref_model_path", "(", "self", ".", "args", ",", "config", ".", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ")", "\n", "best_h_path", "=", "path", ".", "join", "(", "h_path", ",", "'model.best.pth'", ")", "\n", "\n", "if", "not", "path", ".", "isfile", "(", "best_h_path", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Please use model_setup to pretrain the networks first!\"", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "\n", "# trainer.run_epoch(0, phase='all')", "\n", "# test_average_acc = config.logger.get_measure('all_accuracy').mean_epoch(epoch=0)", "\n", "# print(\"All average accuracy %s\"%colored('%.4f%%'%(test_average_acc*100), 'red'))", "\n", "\n", "", "self", ".", "base_model", "=", "MahaModelWrapper", "(", "config", ".", "model", ",", "2", ",", "intermediate_nodes", "=", "(", "11", ",", ")", ")", "\n", "loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "self", ".", "base_model", ".", "collect_states", "(", "loader", ",", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mahalanobis.MahalanobisDetectorOneLayer.get_H_config": [[438, 502], ["print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "torch.BCEWithLogitsLoss().cuda", "MahaODModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "os.join", "os.join", "os.dirname", "os.dirname", "utils.logger.Logger", "get_cached", "get_cached", "TensorDataset", "TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "MahaODModelWrapper().to.set_eval_direct", "mahalanobis.MahalanobisDetectorOneLayer.base_model.preferred_name", "MahaODModelWrapper().to.H.parameters", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "mahalanobis.MahaODModelWrapper"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_H_config", "(", "self", ",", "train_ds", ",", "valid_ds", ",", "will_train", "=", "True", ",", "epsilon", "=", "0.0012", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", ".", "cuda", "(", ")", "\n", "# Set up the model", "\n", "model", "=", "MahaODModelWrapper", "(", "self", ".", "base_model", ",", "epsilon", "=", "epsilon", ",", "num_class", "=", "2", ",", "num_layers", "=", "1", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "if", "will_train", ":", "\n", "# cache the subnetwork for faster optimization.", "\n", "            ", "from", "methods", "import", "get_cached", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataset", "import", "TensorDataset", "\n", "\n", "trainX", ",", "trainY", "=", "get_cached", "(", "model", ",", "train_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "validX", ",", "validY", "=", "get_cached", "(", "model", ",", "valid_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "\n", "new_train_ds", "=", "TensorDataset", "(", "trainX", ",", "trainY", ")", "\n", "new_valid_ds", "=", "TensorDataset", "(", "validX", ",", "validY", ")", "\n", "\n", "# Initialize the new multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "new_train_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "new_valid_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# Set model to direct evaluation (for cached data)", "\n", "model", ".", "set_eval_direct", "(", "True", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "self", ".", "base_model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'_%s[%s](%s-%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "Adam", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "5", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-6", ",", "\n", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "config", ".", "max_epoch", "=", "100", "\n", "return", "config", "", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleWrapper.__init__": [[19, 25], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "parent_model", ")", ":", "\n", "        ", "super", "(", "DeepEnsembleWrapper", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "parent_model", "\n", "# We need to keep track of the previous X", "\n", "# to efficiently calculate the perturbed loss.", "\n", "self", ".", "previous_X", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleWrapper.forward": [[26, 34], ["deep_ensemble.DeepEnsembleWrapper.model", "x.grad.zero_"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "x", ".", "requires_grad", "=", "True", "\n", "self", ".", "previous_X", "=", "x", "\n", "if", "x", ".", "grad", "is", "not", "None", ":", "\n", "                ", "x", ".", "grad", ".", "zero_", "(", ")", "\n", "", "", "model_output", "=", "self", ".", "model", "(", "x", ",", "**", "kwargs", ")", "\n", "return", "model_output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleWrapper.preferred_name": [[35, 37], ["None"], "methods", ["None"], ["", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "__class__", ".", "__name__", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleWrapper.output_size": [[38, 40], ["deep_ensemble.DeepEnsembleWrapper.model.output_size"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleWrapper.output_size"], ["", "def", "output_size", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "output_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleLoss.__init__": [[43, 50], ["torch.Module.__init__", "torch.NLLLoss", "torch.NLLLoss", "torch.NLLLoss"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ensemble_network", ",", "epsilon", "=", "0.01", ")", ":", "\n", "        ", "super", "(", "DeepEnsembleLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "ensemble_network", ".", "__class__", "==", "DeepEnsembleWrapper", ",", "'Only EnsembleWrappers are accepted.'", "\n", "self", ".", "ensemble_network", "=", "ensemble_network", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "reduction", "=", "\"mean\"", "\n", "self", ".", "loss", "=", "nn", ".", "NLLLoss", "(", "reduction", "=", "self", ".", "reduction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleLoss.forward": [[51, 79], ["deep_ensemble.DeepEnsembleLoss.loss", "new_input.detach_", "deep_ensemble.DeepEnsembleLoss.ensemble_network.model", "deep_ensemble.DeepEnsembleLoss.loss", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "input_x.detach", "grad_input_x.detach().sign", "grad_input_x.detach"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "\"\"\"\n            In deep ensembles, we optimize the following objective:\n            l(w, X, Y) + l(w, X', Y) where X' is the X FGSM-perturbed sample.\n        \"\"\"", "\n", "# Let's calculate the first part of the loss.", "\n", "loss_1", "=", "self", ".", "loss", "(", "input", ",", "target", ")", "\n", "\n", "total_loss", "=", "loss_1", "\n", "\n", "# During test, we don't do this.", "\n", "if", "self", ".", "ensemble_network", ".", "training", ":", "\n", "# Let's do the backward pass.", "\n", "            ", "input_x", "=", "self", ".", "ensemble_network", ".", "previous_X", "\n", "grad_input_x", "=", "autograd", ".", "grad", "(", "[", "loss_1", "]", ",", "[", "input_x", "]", ",", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "\n", "# construct X' - Fast Gradient Sign Method + Projection", "\n", "new_input", "=", "(", "input_x", ".", "detach", "(", ")", "+", "0.01", "*", "grad_input_x", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "new_input", ".", "detach_", "(", ")", "\n", "new_input", ".", "requires_grad", "=", "False", "\n", "new_output", "=", "self", ".", "ensemble_network", ".", "model", "(", "new_input", ")", "\n", "\n", "# Calculate the second term.", "\n", "loss_2", "=", "self", ".", "loss", "(", "new_output", ",", "target", ")", "\n", "\n", "total_loss", "=", "loss_1", "+", "loss_2", "\n", "\n", "", "return", "total_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.__init__": [[85, 89], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "subwrappers", ")", ":", "\n", "        ", "assert", "subwrappers", "is", "not", "None", "\n", "super", "(", "DeepEnsembleMasterWrapper", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "subwrappers", "=", "subwrappers", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.forward": [[90, 101], ["torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "model.eval", "model().unsqueeze().detach().exp", "outputs.append", "torch.cat().mean.log", "torch.cat().mean.log", "torch.cat().mean.log", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model().unsqueeze().detach", "model().unsqueeze", "model"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log"], ["", "def", "forward", "(", "self", ",", "x", ",", "take_log", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "outputs", "=", "[", "]", "\n", "for", "model", "in", "self", ".", "subwrappers", ":", "\n", "            ", "model", ".", "eval", "(", ")", "\n", "predictions", "=", "model", "(", "x", ")", ".", "unsqueeze", "(", "0", ")", ".", "detach", "(", ")", ".", "exp", "(", ")", "# Must average over the probabilities.", "\n", "outputs", ".", "append", "(", "predictions", ")", "\n", "", "output", "=", "torch", ".", "cat", "(", "outputs", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "if", "take_log", ":", "\n", "            ", "return", "output", ".", "log", "(", ")", "# take the log for consistency with other models after averaging.", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "", "", "def", "preferred_name", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name": [[101, 103], ["deep_ensemble.DeepEnsembleMasterWrapper.subwrappers[].preferred_name"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "", "def", "preferred_name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "subwrappers", "[", "0", "]", ".", "preferred_name", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleModelWrapper.__init__": [[109, 113], ["methods.AbstractModelWrapper.__init__", "torch.Module", "torch.Module", "torch.Module", "deep_ensemble.DeepEnsembleModelWrapper.H.register_parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "base_model", ")", ":", "\n", "        ", "super", "(", "DeepEnsembleModelWrapper", ",", "self", ")", ".", "__init__", "(", "base_model", ")", "\n", "self", ".", "H", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "H", ".", "register_parameter", "(", "'threshold'", ",", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "0", "]", ")", ")", ")", "# initialize to 0 for faster convergence.", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleModelWrapper.subnetwork_eval": [[114, 119], ["deep_ensemble.DeepEnsembleModelWrapper.base_model().detach", "deep_ensemble.DeepEnsembleModelWrapper.base_model", "deep_ensemble.DeepEnsembleModelWrapper.log"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log"], ["", "def", "subnetwork_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ".", "requires_grad", "=", "False", "\n", "average", "=", "self", ".", "base_model", "(", "x", ",", "take_log", "=", "False", ")", ".", "detach", "(", ")", "\n", "output_tensor", "=", "(", "average", "*", "average", ".", "log", "(", ")", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "return", "output_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleModelWrapper.wrapper_eval": [[120, 124], ["None"], "methods", ["None"], ["", "def", "wrapper_eval", "(", "self", ",", "x", ")", ":", "\n", "# Threshold hold the uncertainty.", "\n", "        ", "output", "=", "self", ".", "H", ".", "threshold", "-", "x", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleModelWrapper.classify": [[125, 127], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsemble.method_identifier": [[130, 135], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"DeepEnsemble\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsemble.get_base_config": [[136, 187], ["print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.NLLLoss().cuda", "torch.NLLLoss().cuda", "torch.NLLLoss().cuda", "range", "deep_ensemble.DeepEnsembleMasterWrapper", "utils.iterative_trainer.IterativeTrainerConfig", "os.path.join", "os.path.dirname", "utils.logger.Logger", "global_vars.get_ref_classifier", "model_class", "deep_ensemble.DeepEnsembleWrapper", "model.to.to.to", "get_ref_model_path", "os.path.join", "all_models.append", "torch.NLLLoss", "torch.NLLLoss", "torch.NLLLoss", "os.path.isfile", "NotImplementedError", "print", "model.to.to.load_state_dict", "model.to.to.eval", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_classifier", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "get_base_config", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "parent_dataset", ".", "__class__", ".", "__name__", ")", ")", "\n", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "nn", ".", "NLLLoss", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "# Set up the model", "\n", "model_class", "=", "Global", ".", "get_ref_classifier", "(", "dataset", ".", "name", ")", "[", "self", ".", "default_model", "]", "\n", "self", ".", "add_identifier", "=", "model_class", ".", "__name__", "\n", "\n", "# We must create 5 instances of this class.", "\n", "from", "models", "import", "get_ref_model_path", "\n", "all_models", "=", "[", "]", "\n", "for", "mid", "in", "range", "(", "5", ")", ":", "\n", "            ", "model", "=", "model_class", "(", ")", "\n", "model", "=", "DeepEnsembleWrapper", "(", "model", ")", "\n", "model", "=", "model", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "h_path", "=", "get_ref_model_path", "(", "self", ".", "args", ",", "model_class", ".", "__name__", ",", "dataset", ".", "name", ",", "suffix_str", "=", "'DE.%d'", "%", "mid", ")", "\n", "best_h_path", "=", "path", ".", "join", "(", "h_path", ",", "'model.best.pth'", ")", "\n", "if", "not", "path", ".", "isfile", "(", "best_h_path", ")", ":", "\n", "                ", "raise", "NotImplementedError", "(", "\"Please use setup_model to pretrain the networks first! Can't find %s\"", "%", "best_h_path", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "model", ".", "eval", "(", ")", "\n", "", "all_models", ".", "append", "(", "model", ")", "\n", "", "master_model", "=", "DeepEnsembleMasterWrapper", "(", "all_models", ")", "\n", "\n", "# Set up the config", "\n", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'%s-CLS'", "%", "(", "self", ".", "args", ".", "D1", ")", "\n", "config", ".", "phases", "=", "{", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "False", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "model", "=", "master_model", "\n", "config", ".", "optim", "=", "None", "\n", "config", ".", "autoencoder_target", "=", "False", "\n", "config", ".", "visualize", "=", "False", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsemble.propose_H": [[188, 201], ["deep_ensemble.DeepEnsemble.get_base_config", "deep_ensemble.DeepEnsemble.base_model.eval"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.get_base_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "config", "=", "self", ".", "get_base_config", "(", "dataset", ")", "\n", "\n", "\"\"\" This is really time consuming, especially for Resnet models.\n            Feel free to uncomment these lines if you want to see the performance.\n        \"\"\"", "\n", "# trainer = IterativeTrainer(config, self.args)", "\n", "# trainer.run_epoch(0, phase='all')", "\n", "# test_average_acc = config.logger.get_measure('all_accuracy').mean_epoch(epoch=0)", "\n", "# print(\"All average accuracy %s\"%colored('%.4f%%'%(test_average_acc*100), 'red'))", "\n", "\n", "self", ".", "base_model", "=", "config", ".", "model", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsemble.get_H_config": [[202, 274], ["print", "print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "methods.SVMLoss().to", "DeepEnsembleModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "deep_ensemble.DeepEnsemble.base_model.preferred_name", "torch.Adagrad", "torch.Adagrad", "torch.Adagrad", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "os.path.join", "os.path.dirname", "utils.logger.Logger", "print", "get_cached", "get_cached", "TensorDataset", "TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "DeepEnsembleModelWrapper().to.set_eval_direct", "DeepEnsembleModelWrapper().to.H.parameters", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "methods.SVMLoss", "deep_ensemble.DeepEnsembleModelWrapper", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct"], ["", "def", "get_H_config", "(", "self", ",", "dataset", ",", "will_train", "=", "True", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "print", "(", "\"Mixture size: %s\"", "%", "colored", "(", "'%d'", "%", "len", "(", "dataset", ")", ",", "'green'", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# To make the threshold learning, actually threshold learning", "\n", "# the margin must be set to 0.", "\n", "criterion", "=", "SVMLoss", "(", "margin", "=", "0.0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "DeepEnsembleModelWrapper", "(", "self", ".", "base_model", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "if", "will_train", ":", "\n", "# cache the subnetwork for faster optimization.", "\n", "            ", "from", "methods", "import", "get_cached", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataset", "import", "TensorDataset", "\n", "\n", "trainX", ",", "trainY", "=", "get_cached", "(", "model", ",", "train_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "validX", ",", "validY", "=", "get_cached", "(", "model", ",", "valid_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "\n", "new_train_ds", "=", "TensorDataset", "(", "trainX", ",", "trainY", ")", "\n", "new_valid_ds", "=", "TensorDataset", "(", "validX", ",", "validY", ")", "\n", "\n", "# Initialize the new multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "new_train_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "new_valid_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# Set model to direct evaluation (for cached data)", "\n", "model", ".", "set_eval_direct", "(", "True", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "config", ".", "name", "=", "'_%s[%s](%s-%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "Adagrad", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ",", "weight_decay", "=", "0", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-8", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "config", ".", "max_epoch", "=", "100", "\n", "\n", "return", "config", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.PTModelWrapper.__init__": [[26, 30], ["methods.AbstractModelWrapper.__init__", "torch.Module", "torch.Module", "torch.Module", "base_threshold.PTModelWrapper.H.register_parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "base_model", ")", ":", "\n", "        ", "super", "(", "PTModelWrapper", ",", "self", ")", ".", "__init__", "(", "base_model", ")", "\n", "self", ".", "H", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "H", ".", "register_parameter", "(", "'threshold'", ",", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "0.5", "]", ")", ")", ")", "# initialize to prob=0.5 for faster convergence.", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.PTModelWrapper.subnetwork_eval": [[31, 36], ["base_threshold.PTModelWrapper.base_model", "[].unsqueeze_", "[].unsqueeze_.detach", "base_threshold.PTModelWrapper.exp().max", "base_threshold.PTModelWrapper.exp"], "methods", ["None"], ["", "def", "subnetwork_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "base_output", "=", "self", ".", "base_model", "(", "x", ")", "\n", "# Get the max probability out", "\n", "input", "=", "base_output", ".", "exp", "(", ")", ".", "max", "(", "1", ")", "[", "0", "]", ".", "unsqueeze_", "(", "1", ")", "\n", "return", "input", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.PTModelWrapper.wrapper_eval": [[37, 41], ["None"], "methods", ["None"], ["", "def", "wrapper_eval", "(", "self", ",", "x", ")", ":", "\n", "# Threshold hold the max probability.", "\n", "        ", "output", "=", "self", ".", "H", ".", "threshold", "-", "x", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.PTModelWrapper.classify": [[42, 44], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.ProbabilityThreshold.__init__": [[46, 54], ["methods.AbstractMethodInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "ProbabilityThreshold", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_model", "=", "None", "\n", "self", ".", "H_class", "=", "None", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "default_model", "=", "0", "\n", "self", ".", "add_identifier", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.ProbabilityThreshold.method_identifier": [[55, 60], ["len"], "methods", ["None"], ["", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"ProbThresh\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.ProbabilityThreshold.get_base_config": [[61, 98], ["print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "os.path.join", "os.path.dirname", "torch.NLLLoss().to", "torch.NLLLoss().to", "torch.NLLLoss().to", "hasattr", "utils.iterative_trainer.IterativeTrainerConfig", "utils.logger.Logger", "model.preferred_name", "torch.NLLLoss", "torch.NLLLoss", "torch.NLLLoss", "global_vars.get_ref_classifier"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name", "home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_classifier"], ["", "def", "get_base_config", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "name", ")", ")", "\n", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "nn", ".", "NLLLoss", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the model", "\n", "import", "global_vars", "as", "Global", "\n", "model", "=", "Global", ".", "get_ref_classifier", "(", "dataset", ".", "name", ")", "[", "self", ".", "default_model", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "self", ".", "add_identifier", "=", "model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "model", ",", "'preferred_name'", ")", ":", "\n", "            ", "self", ".", "add_identifier", "=", "model", ".", "preferred_name", "(", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'%s-CLS'", "%", "(", "self", ".", "args", ".", "D1", ")", "\n", "config", ".", "phases", "=", "{", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "False", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "None", "\n", "config", ".", "autoencoder_target", "=", "False", "\n", "config", ".", "visualize", "=", "False", "\n", "config", ".", "logger", "=", "Logger", "(", "logdir", "=", "h_parent", ")", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.ProbabilityThreshold.propose_H": [[99, 120], ["base_threshold.ProbabilityThreshold.get_base_config", "get_ref_model_path", "os.path.join", "utils.iterative_trainer.IterativeTrainer", "base_threshold.ProbabilityThreshold.base_model.eval", "os.path.isfile", "NotImplementedError", "print", "base_threshold.ProbabilityThreshold.model.load_state_dict", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.get_base_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "config", "=", "self", ".", "get_base_config", "(", "dataset", ")", "\n", "\n", "from", "models", "import", "get_ref_model_path", "\n", "h_path", "=", "get_ref_model_path", "(", "self", ".", "args", ",", "config", ".", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ")", "\n", "best_h_path", "=", "path", ".", "join", "(", "h_path", ",", "'model.best.pth'", ")", "\n", "\n", "trainer", "=", "IterativeTrainer", "(", "config", ",", "self", ".", "args", ")", "\n", "\n", "if", "not", "path", ".", "isfile", "(", "best_h_path", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Please use model_setup to pretrain the networks first!\"", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "\n", "#trainer.run_epoch(0, phase='all')", "\n", "#test_average_acc = config.logger.get_measure('all_accuracy').mean_epoch(epoch=0)", "\n", "#print(\"All average accuracy %s\"%colored('%.4f%%'%(test_average_acc*100), 'red'))", "\n", "\n", "", "self", ".", "base_model", "=", "config", ".", "model", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.ProbabilityThreshold.get_H_config": [[121, 205], ["print", "print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "methods.SVMLoss().to", "PTModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "os.path.join", "os.path.dirname", "torch.Adagrad", "torch.Adagrad", "torch.Adagrad", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "utils.logger.Logger", "print", "get_cached", "get_cached", "TensorDataset", "trainX[].mean", "trainX[].mean", "print", "TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "PTModelWrapper().to.set_eval_direct", "base_threshold.ProbabilityThreshold.base_model.preferred_name", "PTModelWrapper().to.H.parameters", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "methods.SVMLoss", "base_threshold.PTModelWrapper", "init_value.view", "init_value.cuda().view", "init_value.item", "len", "init_value.cuda"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_H_config", "(", "self", ",", "dataset", ",", "will_train", "=", "True", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "print", "(", "\"Mixture size: %s\"", "%", "colored", "(", "'%d'", "%", "len", "(", "dataset", ")", ",", "'green'", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "# To make the threshold learning, actually threshold learning", "\n", "# the margin must be set to 0.", "\n", "criterion", "=", "SVMLoss", "(", "margin", "=", "0.0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "PTModelWrapper", "(", "self", ".", "base_model", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "if", "will_train", ":", "\n", "# cache the subnetwork for faster optimization.", "\n", "            ", "from", "methods", "import", "get_cached", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataset", "import", "TensorDataset", "\n", "\n", "trainX", ",", "trainY", "=", "get_cached", "(", "model", ",", "train_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "validX", ",", "validY", "=", "get_cached", "(", "model", ",", "valid_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "\n", "new_train_ds", "=", "TensorDataset", "(", "trainX", ",", "trainY", ")", "\n", "x_center", "=", "trainX", "[", "trainY", "==", "0", "]", ".", "mean", "(", ")", "\n", "y_center", "=", "trainX", "[", "trainY", "==", "1", "]", ".", "mean", "(", ")", "\n", "init_value", "=", "(", "x_center", "+", "y_center", ")", "/", "2", "\n", "if", "model", ".", "H", ".", "threshold", ".", "device", ".", "type", "==", "\"cpu\"", ":", "\n", "                ", "model", ".", "H", ".", "threshold", ".", "data", "=", "init_value", ".", "view", "(", "(", "1", ",", ")", ")", "\n", "", "else", ":", "\n", "                ", "model", ".", "H", ".", "threshold", ".", "data", "=", "init_value", ".", "cuda", "(", ")", ".", "view", "(", "(", "1", ",", ")", ")", "\n", "", "print", "(", "\"Initializing threshold to %.2f\"", "%", "(", "init_value", ".", "item", "(", ")", ")", ")", "\n", "\n", "new_valid_ds", "=", "TensorDataset", "(", "validX", ",", "validY", ")", "\n", "\n", "# Initialize the new multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "new_train_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "new_valid_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# Set model to direct evaluation (for cached data)", "\n", "model", ".", "set_eval_direct", "(", "True", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "self", ".", "base_model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "\n", "config", ".", "name", "=", "'_%s[%s](%s->%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "Adagrad", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ",", "weight_decay", "=", "0", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-8", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "logdir", "=", "h_parent", ")", "\n", "config", ".", "max_epoch", "=", "10", "\n", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.ProbabilityThreshold.train_H": [[206, 283], ["SubDataset", "os.path.join", "os.path.dirname", "base_threshold.ProbabilityThreshold.get_H_config", "utils.iterative_trainer.IterativeTrainer", "print", "base_threshold.ProbabilityThreshold.model.H.load_state_dict", "base_threshold.ProbabilityThreshold.model.set_eval_direct", "utils.iterative_trainer.IterativeTrainer.run_epoch", "base_threshold.ProbabilityThreshold.logger.get_measure().mean_epoch", "print", "base_threshold.ProbabilityThreshold.H_class.eval", "base_threshold.ProbabilityThreshold.H_class.set_eval_direct", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "os.path.isdir", "os.makedirs", "print", "utils.iterative_trainer.IterativeTrainer.run_epoch", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.isfile", "termcolor.colored", "utils.iterative_trainer.IterativeTrainer.run_epoch", "utils.iterative_trainer.IterativeTrainer.run_epoch", "base_threshold.ProbabilityThreshold.logger.get_measure().mean_epoch", "base_threshold.ProbabilityThreshold.scheduler.step", "base_threshold.ProbabilityThreshold.logger.log", "base_threshold.ProbabilityThreshold.logger.get_measure().mean_epoch", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "utils.iterative_trainer.IterativeTrainer.visdom.save", "base_threshold.ProbabilityThreshold.logger.get_measure", "termcolor.colored", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "float", "base_threshold.ProbabilityThreshold.logger.get_measure", "base_threshold.ProbabilityThreshold.logger.visualize_average_keys", "base_threshold.ProbabilityThreshold.logger.visualize_average_keys", "base_threshold.ProbabilityThreshold.logger.visualize_average", "os.path.join", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "len", "base_threshold.ProbabilityThreshold.logger.get_measure", "range", "hasattr", "hasattr", "base_threshold.ProbabilityThreshold.logger.log", "base_threshold.ProbabilityThreshold.logger.get_measure", "base_threshold.ProbabilityThreshold.model.H.state_dict", "len", "getattr().cpu().numpy", "base_threshold.ProbabilityThreshold.logger.get_measure", "base_threshold.ProbabilityThreshold.logger.get_measure().visualize_all_epochs", "termcolor.colored", "getattr().cpu", "base_threshold.ProbabilityThreshold.logger.get_measure", "getattr"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.get_H_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.iterative_trainer.IterativeTrainer.run_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.mean_epoch", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average_keys", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.visualize_average", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Measure.visualize_all_epochs", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.get_measure"], ["", "def", "train_H", "(", "self", ",", "dataset", ")", ":", "\n", "# Wrap the (mixture)dataset in SubDataset so to easily", "\n", "# split it later.", "\n", "        ", "from", "datasets", "import", "SubDataset", "\n", "dataset", "=", "SubDataset", "(", "'%s-%s'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ",", "dataset", ",", "torch", ".", "arange", "(", "len", "(", "dataset", ")", ")", ".", "int", "(", ")", ")", "\n", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "if", "not", "path", ".", "isdir", "(", "h_parent", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "h_parent", ")", "\n", "\n", "", "done_path", "=", "h_path", "+", "'.done'", "\n", "will_train", "=", "self", ".", "args", ".", "force_train_h", "or", "not", "path", ".", "isfile", "(", "done_path", ")", "\n", "\n", "h_config", "=", "self", ".", "get_H_config", "(", "dataset", ",", "will_train", ")", "\n", "\n", "trainer", "=", "IterativeTrainer", "(", "h_config", ",", "self", ".", "args", ")", "\n", "\n", "if", "will_train", ":", "\n", "            ", "print", "(", "colored", "(", "'Training from scratch'", ",", "'green'", ")", ")", "\n", "best_accuracy", "=", "-", "1", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'test'", ")", "\n", "for", "epoch", "in", "range", "(", "1", ",", "h_config", ".", "max_epoch", "+", "1", ")", ":", "\n", "                ", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'train'", ")", "\n", "trainer", ".", "run_epoch", "(", "epoch", ",", "phase", "=", "'test'", ")", "\n", "\n", "train_loss", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'train_loss'", ")", ".", "mean_epoch", "(", ")", "\n", "h_config", ".", "scheduler", ".", "step", "(", "train_loss", ")", "\n", "\n", "# Track the learning rates and threshold.", "\n", "lrs", "=", "[", "float", "(", "param_group", "[", "'lr'", "]", ")", "for", "param_group", "in", "h_config", ".", "optim", ".", "param_groups", "]", "\n", "h_config", ".", "logger", ".", "log", "(", "'LRs'", ",", "lrs", ",", "epoch", ")", "\n", "h_config", ".", "logger", ".", "get_measure", "(", "'LRs'", ")", ".", "legend", "=", "[", "'LR%d'", "%", "i", "for", "i", "in", "range", "(", "len", "(", "lrs", ")", ")", "]", "\n", "\n", "viz_params", "=", "[", "'threshold'", ",", "'transfer'", "]", "\n", "for", "viz_param", "in", "viz_params", ":", "\n", "                    ", "if", "hasattr", "(", "h_config", ".", "model", ",", "'H'", ")", "and", "hasattr", "(", "h_config", ".", "model", ".", "H", ",", "viz_param", ")", ":", "\n", "                        ", "h_config", ".", "logger", ".", "log", "(", "viz_param", ",", "getattr", "(", "h_config", ".", "model", ".", "H", ",", "viz_param", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "epoch", "-", "1", ")", "\n", "h_config", ".", "logger", ".", "get_measure", "(", "viz_param", ")", ".", "legend", "=", "[", "viz_param", "]", "\n", "if", "h_config", ".", "visualize", ":", "\n", "                            ", "h_config", ".", "logger", ".", "get_measure", "(", "viz_param", ")", ".", "visualize_all_epochs", "(", "trainer", ".", "visdom", ")", "\n", "\n", "", "", "", "if", "h_config", ".", "visualize", ":", "\n", "# Show the average losses for all the phases in one figure.", "\n", "                    ", "h_config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_loss'", ",", "'Average Loss'", ",", "trainer", ".", "visdom", ")", "\n", "h_config", ".", "logger", ".", "visualize_average_keys", "(", "'.*_accuracy'", ",", "'Average Accuracy'", ",", "trainer", ".", "visdom", ")", "\n", "h_config", ".", "logger", ".", "visualize_average", "(", "'LRs'", ",", "trainer", ".", "visdom", ")", "\n", "\n", "", "test_average_acc", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'test_accuracy'", ")", ".", "mean_epoch", "(", ")", "\n", "\n", "# Save the logger for future reference.", "\n", "torch", ".", "save", "(", "h_config", ".", "logger", ".", "measures", ",", "path", ".", "join", "(", "h_parent", ",", "'logger.%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", ")", "\n", "\n", "if", "best_accuracy", "<", "test_average_acc", ":", "\n", "                    ", "print", "(", "'Updating the on file model with %s'", "%", "(", "colored", "(", "'%.4f'", "%", "test_average_acc", ",", "'red'", ")", ")", ")", "\n", "best_accuracy", "=", "test_average_acc", "\n", "torch", ".", "save", "(", "h_config", ".", "model", ".", "H", ".", "state_dict", "(", ")", ",", "h_path", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'finished'", ":", "True", "}", ",", "done_path", ")", "\n", "\n", "if", "h_config", ".", "visualize", ":", "\n", "                ", "trainer", ".", "visdom", ".", "save", "(", "[", "trainer", ".", "visdom", ".", "env", "]", ")", "\n", "\n", "# Load the best model.", "\n", "", "", "print", "(", "colored", "(", "'Loading H model from %s'", "%", "h_path", ",", "'red'", ")", ")", "\n", "h_config", ".", "model", ".", "H", ".", "load_state_dict", "(", "torch", ".", "load", "(", "h_path", ")", ")", "\n", "h_config", ".", "model", ".", "set_eval_direct", "(", "False", ")", "\n", "\n", "trainer", ".", "run_epoch", "(", "0", ",", "phase", "=", "'testU'", ")", "\n", "test_average_acc", "=", "h_config", ".", "logger", ".", "get_measure", "(", "'testU_accuracy'", ")", ".", "mean_epoch", "(", "epoch", "=", "0", ")", "\n", "print", "(", "\"Valid/Test average accuracy %s\"", "%", "colored", "(", "'%.4f%%'", "%", "(", "test_average_acc", "*", "100", ")", ",", "'red'", ")", ")", "\n", "self", ".", "H_class", "=", "h_config", ".", "model", "\n", "self", ".", "H_class", ".", "eval", "(", ")", "\n", "self", ".", "H_class", ".", "set_eval_direct", "(", "False", ")", "\n", "return", "test_average_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.base_threshold.ProbabilityThreshold.test_H": [[284, 349], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "base_threshold.ProbabilityThreshold.H_class.eval", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.mean", "print", "print", "print", "print", "sklearn.metrics.roc_curve", "sklearn.metrics.precision_recall_curve", "sklearn.metrics.average_precision_score", "sklearn.metrics.roc_auc_score", "print", "tqdm.tqdm.tqdm", "enumerate", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.array", "base_threshold.ProbabilityThreshold.mean", "base_threshold.ProbabilityThreshold.max", "base_threshold.ProbabilityThreshold.min", "test_average_acc.item", "pbar.update", "time.time", "base_threshold.ProbabilityThreshold.H_class", "pred_aggregate.append", "y_aggregate.append", "base_threshold.ProbabilityThreshold.H_class.classify", "time.time", "times.append", "clas_aggregate.append", "len", "pbar.set_description", "len", "bool", "image.to", "label.to", "base_threshold.ProbabilityThreshold.data.cpu().view().numpy", "numpy.concatenate.data.cpu().numpy", "base_threshold.ProbabilityThreshold.data.cpu().view().numpy", "termcolor.colored", "termcolor.colored", "termcolor.colored", "os.environ.get", "base_threshold.ProbabilityThreshold.data.cpu().view", "numpy.concatenate.data.cpu", "base_threshold.ProbabilityThreshold.data.cpu().view", "numpy.isnan", "numpy.isnan", "numpy.isnan", "base_threshold.ProbabilityThreshold.data.cpu", "base_threshold.ProbabilityThreshold.data.cpu", "base_threshold.ProbabilityThreshold.detach().view", "numpy.concatenate.detach().view().long", "base_threshold.ProbabilityThreshold.detach", "numpy.concatenate.detach().view", "numpy.concatenate.detach"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.classify"], ["", "def", "test_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "dataset", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "correct", "=", "0.0", "\n", "total_count", "=", "0", "\n", "self", ".", "H_class", ".", "eval", "(", ")", "\n", "#weighted_AUROC = 0.0", "\n", "pred_aggregate", "=", "[", "]", "\n", "clas_aggregate", "=", "[", "]", "\n", "y_aggregate", "=", "[", "]", "\n", "times", "=", "[", "]", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "dataset", ")", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", "as", "pbar", ":", "\n", "            ", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "dataset", ")", ":", "\n", "                ", "pbar", ".", "update", "(", ")", "\n", "\n", "# Get and prepare data.", "\n", "input", ",", "target", "=", "image", ".", "to", "(", "self", ".", "args", ".", "device", ")", ",", "label", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "ts", "=", "time", ".", "time", "(", ")", "\n", "prediction", "=", "self", ".", "H_class", "(", "input", ")", "\n", "pred_aggregate", ".", "append", "(", "prediction", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ".", "numpy", "(", ")", ")", "\n", "y_aggregate", ".", "append", "(", "target", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "classification", "=", "self", ".", "H_class", ".", "classify", "(", "prediction", ")", "\n", "te", "=", "time", ".", "time", "(", ")", "\n", "times", ".", "append", "(", "(", "te", "-", "ts", ")", "/", "target", ".", "shape", "[", "0", "]", ")", "\n", "clas_aggregate", ".", "append", "(", "classification", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ".", "numpy", "(", ")", ")", "\n", "#roc = roc_auc_score(target.data.cpu().numpy(), prediction.data.cpu().view(-1).numpy(), average=\"micro\")", "\n", "#weighted_AUROC += roc * len(input)", "\n", "\n", "correct", "+=", "(", "classification", ".", "detach", "(", ")", ".", "view", "(", "-", "1", ")", "==", "target", ".", "detach", "(", ")", ".", "view", "(", "-", "1", ")", ".", "long", "(", ")", ")", ".", "float", "(", ")", ".", "view", "(", "-", "1", ")", ".", "sum", "(", ")", "\n", "total_count", "+=", "len", "(", "input", ")", "\n", "\n", "message", "=", "'Accuracy %.4f'", "%", "(", "correct", "/", "total_count", ")", "\n", "pbar", ".", "set_description", "(", "message", ")", "\n", "\n", "# c1 = (classification.data.view(-1) == 0)", "\n", "# c1n = c1.nonzero()", "\n", "# if c1n.numel()>0:", "\n", "#     s1 = input.data[c1n.squeeze()]", "\n", "#     visdom.images(s1.cpu().numpy(), win='in_images')                                    ", "\n", "# c2n = (1-c1).nonzero()", "\n", "# if c2n.numel()>0:", "\n", "#     s2 = input.data[c2n.squeeze()]", "\n", "#     visdom.images(s2.cpu().numpy(), win='out_images')                                    ", "\n", "\n", "", "", "test_average_acc", "=", "correct", "/", "total_count", "\n", "target", "=", "np", ".", "concatenate", "(", "y_aggregate", ",", "axis", "=", "-", "1", ")", "\n", "prediction", "=", "np", ".", "concatenate", "(", "pred_aggregate", ",", "axis", "=", "-", "1", ")", "\n", "classification", "=", "np", ".", "concatenate", "(", "clas_aggregate", ",", "axis", "=", "-", "1", ")", "\n", "prediction", "=", "prediction", "[", "(", "~", "np", ".", "isnan", "(", "prediction", ")", ")", ".", "nonzero", "(", ")", "]", "\n", "target", "=", "target", "[", "(", "~", "np", ".", "isnan", "(", "prediction", ")", ")", ".", "nonzero", "(", ")", "]", "\n", "classification", "=", "classification", "[", "(", "~", "np", ".", "isnan", "(", "prediction", ")", ")", ".", "nonzero", "(", ")", "]", "\n", "TP", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "classification", "==", "1", ",", "target", "==", "1", ")", ")", "\n", "TN", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "classification", "==", "0", ",", "target", "==", "0", ")", ")", "\n", "FP", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "classification", "==", "1", ",", "target", "==", "0", ")", ")", "\n", "FN", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "classification", "==", "0", ",", "target", "==", "1", ")", ")", "\n", "per_sample_time", "=", "np", ".", "mean", "(", "np", ".", "array", "(", "times", ")", ")", "\n", "print", "(", "\"pred mean, max, min\"", ")", "\n", "print", "(", "prediction", ".", "mean", "(", ")", ",", "prediction", ".", "max", "(", ")", ",", "prediction", ".", "min", "(", ")", ")", "\n", "print", "(", "\"TP, TN, FP, FN\"", ")", "\n", "print", "(", "TP", ",", "TN", ",", "FP", ",", "FN", ")", "\n", "fpr", ",", "tpr", ",", "thresholds", "=", "roc_curve", "(", "target", ",", "prediction", ")", "\n", "precision", ",", "recall", ",", "pr_thresholds", "=", "precision_recall_curve", "(", "target", ",", "prediction", ")", "\n", "auprc", "=", "average_precision_score", "(", "target", ",", "prediction", ")", "\n", "auroc", "=", "roc_auc_score", "(", "target", ",", "prediction", ")", "\n", "print", "(", "\"Final Test average accuracy %s, AUROC %s, AP %s\"", "%", "(", "colored", "(", "'%.4f%%'", "%", "(", "test_average_acc", "*", "100", ")", ",", "'red'", ")", ",", "colored", "(", "'%.4f%%'", "%", "(", "auroc", "*", "100", ")", ",", "'green'", ")", ",", "colored", "(", "'%.4f%%'", "%", "(", "auprc", "*", "100", ")", ",", "'blue'", ")", ")", ")", "\n", "return", "test_average_acc", ".", "item", "(", ")", ",", "auroc", ",", "auprc", ",", "fpr", ",", "tpr", ",", "precision", ",", "recall", ",", "TP", ",", "TN", ",", "FP", ",", "FN", ",", "per_sample_time", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.__init__": [[6, 8], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.propose_H": [[9, 11], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.train_H": [[12, 14], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.test_H": [[15, 17], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractMethodInterface.method_identifier": [[18, 20], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.__init__": [[22, 33], ["torch.Module.__init__", "hasattr", "hasattr", "__init__.AbstractModelWrapper.base_model.eval", "__init__.AbstractModelWrapper.base_model.parameters"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.set_eval_direct": [[34, 36], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.train": [[37, 48], ["__init__.AbstractModelWrapper.children", "hasattr", "module.train", "__init__.AbstractModelWrapper.base_model.eval"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.subnetwork_eval": [[49, 51], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.wrapper_eval": [[52, 54], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.subnetwork_cached_eval": [[55, 76], ["__init__.AbstractModelWrapper.cache.has_key", "torch.ByteTensor().all", "torch.ByteTensor().all", "torch.ByteTensor().all", "torch.ByteTensor().all", "cache.has_key", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "__init__.AbstractModelWrapper.subnetwork_eval", "enumerate", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "entry.unsqueeze_"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.subnetwork_eval"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.forward": [[77, 92], ["__init__.AbstractModelWrapper.wrapper_eval", "__init__.AbstractModelWrapper.detach", "__init__.AbstractModelWrapper.subnetwork_eval", "__init__.AbstractModelWrapper.subnetwork_cached_eval"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.wrapper_eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.subnetwork_eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.subnetwork_cached_eval"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.__init__": [[95, 99], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.forward": [[100, 112], ["target.clone.clone.clone", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp.mean", "torch.clamp.mean", "torch.clamp.sum", "torch.clamp.sum"], "methods", ["None"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached": [[113, 127], ["torch.set_grad_enabled", "torch.set_grad_enabled", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tqdm", "pbar.set_description", "enumerate", "pbar.update", "model.subnetwork_eval", "outputX.append", "outputY.append", "len", "bool", "image.to", "label.to", "os.environ.get"], "function", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.subnetwork_eval"], []], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mcdropout.MCDropoutModelWrapper.__init__": [[22, 27], ["methods.AbstractModelWrapper.__init__", "torch.Module", "torch.Module", "torch.Module", "mcdropout.MCDropoutModelWrapper.H.register_parameter", "mcdropout.MCDropoutModelWrapper.H.register_buffer", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.IntTensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["def", "__init__", "(", "self", ",", "base_model", ")", ":", "\n", "        ", "super", "(", "MCDropoutModelWrapper", ",", "self", ")", ".", "__init__", "(", "base_model", ")", "\n", "self", ".", "H", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "H", ".", "register_parameter", "(", "'threshold'", ",", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "0", "]", ")", ")", ")", "# initialize to 0 for faster convergence.", "\n", "self", ".", "H", ".", "register_buffer", "(", "'n_evals'", ",", "torch", ".", "IntTensor", "(", "[", "7", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mcdropout.MCDropoutModelWrapper.subnetwork_eval": [[28, 47], ["mcdropout.MCDropoutModelWrapper.base_model.modules", "mcdropout.MCDropoutModelWrapper.H.n_evals.item", "x.repeat", "mcdropout.MCDropoutModelWrapper.base_model().detach().exp", "mcdropout.MCDropoutModelWrapper.view().mean", "isinstance", "isinstance", "m.train", "mcdropout.MCDropoutModelWrapper.base_model().detach", "mcdropout.MCDropoutModelWrapper.view", "x.size", "mcdropout.MCDropoutModelWrapper.view().mean.log", "mcdropout.MCDropoutModelWrapper.base_model"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.AbstractModelWrapper.train", "home.repos.pwc.inspect_result.caotians1_OD-test-master.utils.logger.Logger.log"], ["", "def", "subnetwork_eval", "(", "self", ",", "x", ")", ":", "\n", "# On MCDropout, we set the dropouts to train mode.", "\n", "        ", "count", "=", "0", "\n", "for", "m", "in", "self", ".", "base_model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Dropout", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Dropout2d", ")", ":", "\n", "                ", "m", ".", "train", "(", "True", ")", "\n", "count", "+=", "1", "\n", "", "", "assert", "count", ">", "0", ",", "'We can only do models with dropout!'", "\n", "\n", "x", ".", "requires_grad", "=", "False", "\n", "n_evals", "=", "self", ".", "H", ".", "n_evals", ".", "item", "(", ")", "\n", "\n", "process_input", "=", "x", ".", "repeat", "(", "n_evals", ",", "1", ",", "1", ",", "1", ")", "\n", "unprocessed_output", "=", "self", ".", "base_model", "(", "process_input", ")", ".", "detach", "(", ")", ".", "exp", "(", ")", "\n", "average", "=", "unprocessed_output", ".", "view", "(", "n_evals", ",", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "\n", "output_tensor", "=", "(", "average", "*", "average", ".", "log", "(", ")", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "output_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mcdropout.MCDropoutModelWrapper.wrapper_eval": [[48, 52], ["None"], "methods", ["None"], ["", "def", "wrapper_eval", "(", "self", ",", "x", ")", ":", "\n", "# Threshold hold the uncertainty.", "\n", "        ", "output", "=", "self", ".", "H", ".", "threshold", "-", "x", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mcdropout.MCDropoutModelWrapper.classify": [[53, 55], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mcdropout.MCDropout.method_identifier": [[57, 62], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"MCDropout-7\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.mcdropout.MCDropout.get_H_config": [[63, 121], ["print", "print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "methods.SVMLoss().to", "MCDropoutModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "torch.Adagrad", "torch.Adagrad", "torch.Adagrad", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "os.join", "os.dirname", "utils.logger.Logger", "print", "mcdropout.MCDropout.base_model.preferred_name", "MCDropoutModelWrapper().to.H.parameters", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "methods.SVMLoss", "mcdropout.MCDropoutModelWrapper", "len"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "def", "get_H_config", "(", "self", ",", "dataset", ",", "will_train", "=", "True", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "print", "(", "\"Mixture size: %s\"", "%", "colored", "(", "'%d'", "%", "len", "(", "dataset", ")", ",", "'green'", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# To make the threshold learning, actually threshold learning", "\n", "# the margin must be set to 0.", "\n", "criterion", "=", "SVMLoss", "(", "margin", "=", "0.0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "MCDropoutModelWrapper", "(", "self", ".", "base_model", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "\n", "# By definition, this approach is uncacheable :(", "\n", "\n", "# Set up the config", "\n", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "self", ".", "base_model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'_%s[%s](%s-%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "Adagrad", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-1", ",", "weight_decay", "=", "0", ")", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-8", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "config", ".", "max_epoch", "=", "100", "\n", "\n", "return", "config", "\n", "", "", ""]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.__init__": [[44, 54], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "tailsize", "=", "20", ")", ":", "\n", "        ", "self", ".", "tailsize", "=", "tailsize", "\n", "self", ".", "min_val", "=", "None", "\n", "self", ".", "translation", "=", "10000", "# this constant comes from the library.", "\n", "# it only makes small numerical differences.", "\n", "# we keep it for authenticity.", "\n", "self", ".", "a", "=", "1", "\n", "self", ".", "loc", "=", "0", "\n", "self", ".", "c", "=", "None", "\n", "self", ".", "scale", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.fit_high": [[55, 63], ["inputs.numpy.numpy.numpy", "numpy.min", "scipy.stats.exponweib.fit", "sorted"], "methods", ["None"], ["", "def", "fit_high", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "inputs", "=", "inputs", ".", "numpy", "(", ")", "\n", "tailtofit", "=", "sorted", "(", "inputs", ")", "[", "-", "self", ".", "tailsize", ":", "]", "\n", "self", ".", "min_val", "=", "np", ".", "min", "(", "tailtofit", ")", "\n", "new_inputs", "=", "[", "i", "+", "self", ".", "translation", "-", "self", ".", "min_val", "for", "i", "in", "tailtofit", "]", "\n", "params", "=", "scipy", ".", "stats", ".", "exponweib", ".", "fit", "(", "new_inputs", ",", "floc", "=", "0", ",", "f0", "=", "1", ")", "\n", "self", ".", "c", "=", "params", "[", "1", "]", "\n", "self", ".", "scale", "=", "params", "[", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.w_score": [[64, 68], ["scipy.stats.exponweib.cdf"], "methods", ["None"], ["", "def", "w_score", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "new_inputs", "=", "inputs", "+", "self", ".", "translation", "-", "self", ".", "min_val", "\n", "new_score", "=", "scipy", ".", "stats", ".", "exponweib", ".", "cdf", "(", "new_inputs", ",", "a", "=", "self", ".", "a", ",", "c", "=", "self", ".", "c", ",", "loc", "=", "self", ".", "loc", ",", "scale", "=", "self", ".", "scale", ")", "\n", "return", "new_score", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.serialize": [[69, 71], ["torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["None"], ["", "def", "serialize", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "FloatTensor", "(", "[", "self", ".", "min_val", ",", "self", ".", "c", ",", "self", ".", "scale", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.deserialize": [[72, 76], ["params[].item", "params[].item", "params[].item"], "methods", ["None"], ["", "def", "deserialize", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "min_val", "=", "params", "[", "0", "]", ".", "item", "(", ")", "\n", "self", ".", "c", "=", "params", "[", "1", "]", ".", "item", "(", ")", "\n", "self", ".", "scale", "=", "params", "[", "2", "]", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.__str__": [[77, 79], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'Weib: C=%.2f scale=%.2f min_val=%.2f'", "%", "(", "self", ".", "c", ",", "self", ".", "scale", ",", "self", ".", "min_val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.__init__": [[92, 109], ["methods.AbstractModelWrapper.__init__", "mav.size", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "openmax.OTModelWrapper.H.register_buffer", "openmax.OTModelWrapper.H.register_buffer", "openmax.OTModelWrapper.reload_mr", "mr_models[].serialize", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "mav.clone", "torch.FloatTensor().fill_.clone", "torch.FloatTensor().fill_.clone", "torch.FloatTensor().fill_.clone", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.reload_mr", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.serialize"], ["def", "__init__", "(", "self", ",", "base_model", ",", "mav", ",", "mr_models", ",", "alpharank", "=", "10", ")", ":", "\n", "        ", "super", "(", "OTModelWrapper", ",", "self", ")", ".", "__init__", "(", "base_model", ")", "\n", "\n", "# Serialize the MR models.", "\n", "n_classes", "=", "mav", ".", "size", "(", "0", ")", "\n", "weib_params", "=", "torch", ".", "FloatTensor", "(", "n_classes", ",", "3", ")", ".", "fill_", "(", "0", ")", "\n", "for", "cl", "in", "range", "(", "n_classes", ")", ":", "\n", "            ", "weib_params", "[", "cl", "]", "=", "mr_models", "[", "cl", "]", ".", "serialize", "(", ")", "\n", "\n", "", "self", ".", "H", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm1d", "(", "n_classes", "+", "1", ")", ",", "# Helps with faster convergence.", "\n", "nn", ".", "Linear", "(", "n_classes", "+", "1", ",", "1", ")", ",", "\n", ")", "\n", "self", ".", "H", ".", "register_buffer", "(", "'MAV'", ",", "mav", ".", "clone", "(", ")", ")", "\n", "self", ".", "H", ".", "register_buffer", "(", "'mr_params'", ",", "weib_params", ".", "clone", "(", ")", ")", "\n", "self", ".", "alpharank", "=", "alpharank", "\n", "self", ".", "reload_mr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.reload_mr": [[110, 117], ["openmax.OTModelWrapper.H.MAV.size", "range", "openmax.LibNotMR", "openmax.LibNotMR.deserialize", "openmax.OTModelWrapper.mr_models.append"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.deserialize"], ["", "def", "reload_mr", "(", "self", ")", ":", "\n", "        ", "self", ".", "mr_models", "=", "[", "]", "\n", "n_classes", "=", "self", ".", "H", ".", "MAV", ".", "size", "(", "0", ")", "\n", "for", "cl", "in", "range", "(", "n_classes", ")", ":", "\n", "            ", "mr_model", "=", "LibNotMR", "(", ")", "\n", "mr_model", ".", "deserialize", "(", "self", ".", "H", ".", "mr_params", "[", "cl", "]", ")", "\n", "self", ".", "mr_models", ".", "append", "(", "mr_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct": [[118, 121], ["super().set_eval_direct", "openmax.OTModelWrapper.reload_mr"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.reload_mr"], ["", "", "def", "set_eval_direct", "(", "self", ",", "eval_direct", ")", ":", "\n", "        ", "super", "(", "OTModelWrapper", ",", "self", ")", ".", "set_eval_direct", "(", "eval_direct", ")", "\n", "self", ".", "reload_mr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval": [[122, 125], ["super().eval", "openmax.OTModelWrapper.reload_mr"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.reload_mr"], ["", "def", "eval", "(", "self", ")", ":", "\n", "        ", "super", "(", "OTModelWrapper", ",", "self", ")", ".", "eval", "(", ")", "\n", "self", ".", "reload_mr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.subnetwork_eval": [[126, 161], ["openmax.OTModelWrapper.base_model", "openmax.OTModelWrapper.size", "min", "openmax.OTModelWrapper.new().fill_", "range", "openmax.OTModelWrapper.new().fill_.detach", "openmax.OTModelWrapper.new_zeros", "activation.sort", "range", "range", "openmax.OTModelWrapper.new", "openmax.OTModelWrapper.new", "openmax.OTModelWrapper.new.exp", "openmax.OTModelWrapper.new", "len", "openmax.distance_measure", "openmax.OTModelWrapper.new", "base_output.new.exp.sum().item", "openmax.OTModelWrapper.new.sum().exp().item", "openmax.OTModelWrapper.new.sum().exp", "float", "range", "openmax.OTModelWrapper.mr_models[].w_score", "base_output.new.exp.sum", "openmax.OTModelWrapper.new.sum().exp", "openmax.OTModelWrapper.new.sum", "openmax.OTModelWrapper.new.sum"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.distance_measure", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.w_score"], ["", "def", "subnetwork_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "base_output", "=", "self", ".", "base_model", "(", "x", ",", "softmax", "=", "False", ")", "\n", "\n", "n_instances", ",", "n_classes", "=", "base_output", ".", "size", "(", ")", "\n", "alpharank", "=", "min", "(", "self", ".", "alpharank", ",", "n_classes", ")", "\n", "\n", "output", "=", "base_output", ".", "new", "(", "n_instances", ",", "n_classes", "+", "1", ")", ".", "fill_", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "n_instances", ")", ":", "\n", "            ", "openmax_activation", "=", "[", "]", "\n", "openmax_unknown", "=", "[", "]", "\n", "activation", "=", "base_output", "[", "i", "]", "\n", "\n", "alpha_weights", "=", "[", "(", "(", "alpharank", "+", "1", ")", "-", "t", ")", "/", "float", "(", "alpharank", ")", "for", "t", "in", "range", "(", "1", ",", "alpharank", "+", "1", ")", "]", "\n", "ranked_alpha", "=", "base_output", ".", "new_zeros", "(", "n_classes", ")", "\n", "_", ",", "ranked_list", "=", "activation", ".", "sort", "(", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "alpha_weights", ")", ")", ":", "\n", "                ", "ranked_alpha", "[", "ranked_list", "[", "k", "]", "]", "=", "alpha_weights", "[", "k", "]", "\n", "", "for", "j", "in", "range", "(", "n_classes", ")", ":", "\n", "                ", "query_dist", "=", "distance_measure", "(", "self", ".", "H", ".", "MAV", "[", "j", ",", ":", "]", ",", "activation", ")", "\n", "wscore", "=", "base_output", ".", "new", "(", "[", "self", ".", "mr_models", "[", "j", "]", ".", "w_score", "(", "query_dist", ")", "]", ")", "\n", "modified_score", "=", "activation", "[", "j", "]", "*", "(", "1", "-", "wscore", "*", "ranked_alpha", "[", "j", "]", ")", "\n", "openmax_activation", "+=", "[", "modified_score", "]", "\n", "openmax_unknown", "+=", "[", "activation", "[", "j", "]", "-", "modified_score", "]", "\n", "", "openmax_activation", "=", "base_output", ".", "new", "(", "openmax_activation", ")", "\n", "openmax_unknown", "=", "base_output", ".", "new", "(", "openmax_unknown", ")", "\n", "\n", "activation_exp", "=", "openmax_activation", ".", "exp", "(", ")", "\n", "total_sum", "=", "activation_exp", ".", "sum", "(", ")", ".", "item", "(", ")", "+", "openmax_unknown", ".", "sum", "(", ")", ".", "exp", "(", ")", ".", "item", "(", ")", "\n", "\n", "probs", "=", "activation_exp", "/", "total_sum", "\n", "unks", "=", "openmax_unknown", ".", "sum", "(", ")", ".", "exp", "(", ")", "/", "total_sum", "\n", "output", "[", "i", ",", "0", ":", "n_classes", "]", "=", "probs", "\n", "output", "[", "i", ",", "n_classes", "]", "=", "unks", "\n", "\n", "", "return", "output", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.wrapper_eval": [[162, 165], ["openmax.OTModelWrapper.H"], "methods", ["None"], ["", "def", "wrapper_eval", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "self", ".", "H", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.classify": [[166, 168], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "(", "x", ">", "0", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__": [[171, 174], ["methods.base_threshold.ProbabilityThreshold.__init__"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "OpenMax", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "self", ".", "tailsize", "=", "20", "# default in the paper.", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.method_identifier": [[175, 180], ["len"], "methods", ["None"], ["", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"OpenMax\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.propose_H": [[181, 235], ["super().propose_H", "[].item", "torch.FloatTensor().fill_().to", "torch.FloatTensor().fill_().to", "torch.FloatTensor().fill_().to", "torch.FloatTensor().fill_().to", "torch.FloatTensor().fill_().to", "torch.FloatTensor().fill_().to", "torch.FloatTensor().fill_().to", "torch.FloatTensor().fill_().to", "torch.FloatTensor().fill_().to", "torch.LongTensor().fill_().to", "torch.LongTensor().fill_().to", "torch.LongTensor().fill_().to", "torch.LongTensor().fill_().to", "torch.LongTensor().fill_().to", "torch.LongTensor().fill_().to", "torch.LongTensor().fill_().to", "torch.LongTensor().fill_().to", "torch.LongTensor().fill_().to", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.FloatTensor().fill_().to.div_", "torch.FloatTensor().fill_().to.div_", "torch.FloatTensor().fill_().to.div_", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.LongTensor().fill_().to.float().unsqueeze().expand_as", "torch.LongTensor().fill_().to.float().unsqueeze().expand_as", "torch.LongTensor().fill_().to.float().unsqueeze().expand_as", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "tqdm.tqdm.tqdm", "pbar.set_description", "range", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.FloatTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "tqdm.tqdm.tqdm", "pbar.set_description", "enumerate", "range", "tqdm.tqdm.tqdm", "pbar.set_description", "enumerate", "pbar.update", "openmax.LibNotMR", "openmax.LibNotMR.fit_high", "openmax.OpenMax.weib_models.append", "openmax.OpenMax.base_model.output_size", "pbar.update", "openmax.OpenMax.base_model.forward", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "range", "torch.LongTensor().fill_().to.float().unsqueeze", "torch.LongTensor().fill_().to.float().unsqueeze", "torch.LongTensor().fill_().to.float().unsqueeze", "pbar.update", "openmax.OpenMax.base_model.forward", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "range", "bool", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "len", "bool", "image.to", "label.to", "len", "len", "bool", "image.to", "label.to", "len", "os.environ.get", "os.environ.get", "os.environ.get", "os.environ.get", "os.environ.get", "os.environ.get", "os.environ.get", "os.environ.get", "max_ind[].item", "label[].item", "mav[].add_", "mav_count[].add_", "torch.LongTensor().fill_().to.float", "torch.LongTensor().fill_().to.float", "torch.LongTensor().fill_().to.float", "os.environ.get", "os.environ.get", "os.environ.get", "os.environ.get", "max_ind[].item", "label[].item", "openmax.distance_measure", "distance_values[].append"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.LibNotMR.fit_high", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleWrapper.output_size", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.forward", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.SVMLoss.forward", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.distance_measure"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "# Do the PBThresh propose_h first.", "\n", "        ", "super", "(", "OpenMax", ",", "self", ")", ".", "propose_H", "(", "dataset", ")", "\n", "\n", "\"\"\"\n            For each class we calculate the mean of logits over _correct classifications_.\n        \"\"\"", "\n", "n_classes", "=", "self", ".", "base_model", ".", "output_size", "(", ")", "[", "1", "]", ".", "item", "(", ")", "\n", "mav", "=", "torch", ".", "FloatTensor", "(", "n_classes", ",", "n_classes", ")", ".", "fill_", "(", "0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "mav_count", "=", "torch", ".", "LongTensor", "(", "n_classes", ")", ".", "fill_", "(", "0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "data_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "with", "tqdm", "(", "total", "=", "len", "(", "data_loader", ")", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", "as", "pbar", ":", "\n", "                ", "pbar", ".", "set_description", "(", "'Calculating MAV'", ")", "\n", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                    ", "pbar", ".", "update", "(", ")", "\n", "input", ",", "target", "=", "image", ".", "to", "(", "self", ".", "args", ".", "device", ")", ",", "label", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "prediction", "=", "self", ".", "base_model", ".", "forward", "(", "input", ",", "softmax", "=", "False", ")", "\n", "_", ",", "max_ind", "=", "torch", ".", "max", "(", "prediction", ",", "dim", "=", "1", ")", "\n", "for", "sub_ind", "in", "range", "(", "len", "(", "image", ")", ")", ":", "\n", "                        ", "if", "max_ind", "[", "sub_ind", "]", ".", "item", "(", ")", "==", "label", "[", "sub_ind", "]", ".", "item", "(", ")", ":", "\n", "                            ", "mav", "[", "label", "[", "sub_ind", "]", ",", ":", "]", ".", "add_", "(", "prediction", "[", "sub_ind", "]", ")", "\n", "mav_count", "[", "label", "[", "sub_ind", "]", "]", ".", "add_", "(", "1", ")", "\n", "", "", "", "", "", "assert", "(", "mav_count", ">", "0", ")", ".", "all", "(", ")", ".", "item", "(", ")", "==", "1", ",", "'Something wrong with the classes! Need at least one sample/class.'", "\n", "mav", ".", "div_", "(", "mav_count", ".", "float", "(", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand_as", "(", "mav", ")", ")", "\n", "self", ".", "mav", "=", "mav", "# Store the MAV.", "\n", "\n", "# In the original source code calculates three different distance measures", "\n", "# Cosine, Euclidean, and a combination, however, the default mode of ", "\n", "# distance is set to the combination and the other two are not used.", "\n", "distance_values", "=", "[", "[", "]", "for", "i", "in", "range", "(", "n_classes", ")", "]", "\n", "with", "torch", ".", "set_grad_enabled", "(", "False", ")", ":", "\n", "            ", "with", "tqdm", "(", "total", "=", "len", "(", "data_loader", ")", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", "as", "pbar", ":", "\n", "                ", "pbar", ".", "set_description", "(", "'Calculating the distances'", ")", "\n", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                    ", "pbar", ".", "update", "(", ")", "\n", "input", ",", "target", "=", "image", ".", "to", "(", "self", ".", "args", ".", "device", ")", ",", "label", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "prediction", "=", "self", ".", "base_model", ".", "forward", "(", "input", ",", "softmax", "=", "False", ")", "\n", "_", ",", "max_ind", "=", "torch", ".", "max", "(", "prediction", ",", "dim", "=", "1", ")", "\n", "for", "sub_ind", "in", "range", "(", "len", "(", "image", ")", ")", ":", "\n", "                        ", "if", "max_ind", "[", "sub_ind", "]", ".", "item", "(", ")", "==", "label", "[", "sub_ind", "]", ".", "item", "(", ")", ":", "\n", "                            ", "query_dist", "=", "distance_measure", "(", "mav", "[", "label", "[", "sub_ind", "]", ",", ":", "]", ",", "prediction", "[", "sub_ind", "]", ")", "\n", "distance_values", "[", "label", "[", "sub_ind", "]", "]", ".", "append", "(", "query_dist", ")", "\n", "", "", "", "", "", "torch_values", "=", "[", "torch", ".", "FloatTensor", "(", "dv", ")", "for", "dv", "in", "distance_values", "]", "\n", "\n", "self", ".", "weib_models", "=", "[", "]", "\n", "with", "tqdm", "(", "total", "=", "n_classes", ",", "disable", "=", "bool", "(", "os", ".", "environ", ".", "get", "(", "\"DISABLE_TQDM\"", ",", "False", ")", ")", ")", "as", "pbar", ":", "\n", "            ", "pbar", ".", "set_description", "(", "'Learning the Weibull model'", ")", "\n", "for", "cl", "in", "range", "(", "n_classes", ")", ":", "\n", "                ", "pbar", ".", "update", "(", ")", "\n", "mr_model", "=", "LibNotMR", "(", "tailsize", "=", "self", ".", "tailsize", ")", "\n", "mr_model", ".", "fit_high", "(", "torch_values", "[", "cl", "]", ")", "\n", "self", ".", "weib_models", ".", "append", "(", "mr_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OpenMax.get_H_config": [[236, 313], ["print", "print", "dataset.split_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "methods.SVMLoss().cuda", "OTModelWrapper().to", "utils.iterative_trainer.IterativeTrainerConfig", "hasattr", "torch.SGD", "torch.SGD", "torch.SGD", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "torch.lr_scheduler.ReduceLROnPlateau", "os.join", "os.join", "os.dirname", "os.dirname", "utils.logger.Logger", "print", "get_cached", "get_cached", "TensorDataset", "TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "OTModelWrapper().to.set_eval_direct", "openmax.OpenMax.base_model.preferred_name", "OTModelWrapper().to.H.parameters", "termcolor.colored", "termcolor.colored", "datasets.MirroredDataset", "methods.SVMLoss", "openmax.OTModelWrapper", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "torch.logical_not().nonzero().squeeze", "len", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not().nonzero", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.logical_not", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.datasets.__init__.SubDataset.split_dataset", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.__init__.get_cached", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.set_eval_direct", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.deep_ensemble.DeepEnsembleMasterWrapper.preferred_name"], ["", "", "", "def", "get_H_config", "(", "self", ",", "dataset", ",", "will_train", "=", "True", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1+D2 (H)\"", ")", "\n", "print", "(", "\"Mixture size: %s\"", "%", "colored", "(", "'%d'", "%", "len", "(", "dataset", ")", ",", "'green'", ")", ")", "\n", "\n", "# 80%, 20% for local train+test", "\n", "train_ds", ",", "valid_ds", "=", "dataset", ".", "split_dataset", "(", "0.8", ")", "\n", "\n", "if", "self", ".", "args", ".", "D1", "in", "Global", ".", "mirror_augment", ":", "\n", "            ", "print", "(", "colored", "(", "\"Mirror augmenting %s\"", "%", "self", ".", "args", ".", "D1", ",", "'green'", ")", ")", "\n", "new_train_ds", "=", "train_ds", "+", "MirroredDataset", "(", "train_ds", ")", "\n", "train_ds", "=", "new_train_ds", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "", "train_loader", "=", "DataLoader", "(", "train_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "DataLoader", "(", "valid_ds", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the criterion", "\n", "# margin must be non-zero.", "\n", "criterion", "=", "SVMLoss", "(", "margin", "=", "1.0", ")", ".", "cuda", "(", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "OTModelWrapper", "(", "self", ".", "base_model", ",", "self", ".", "mav", ",", "self", ".", "weib_models", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "old_valid_loader", "=", "valid_loader", "\n", "if", "will_train", ":", "\n", "# cache the subnetwork for faster optimization.", "\n", "            ", "from", "methods", "import", "get_cached", "\n", "from", "torch", ".", "utils", ".", "data", ".", "dataset", "import", "TensorDataset", "\n", "\n", "trainX", ",", "trainY", "=", "get_cached", "(", "model", ",", "train_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "validX", ",", "validY", "=", "get_cached", "(", "model", ",", "valid_loader", ",", "self", ".", "args", ".", "device", ")", "\n", "\n", "trainX_notnan", "=", "trainX", "[", "torch", ".", "logical_not", "(", "torch", ".", "isnan", "(", "trainX", ")", "[", ":", ",", "0", "]", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", "1", ")", "]", "\n", "trainY_notnan", "=", "trainY", "[", "torch", ".", "logical_not", "(", "torch", ".", "isnan", "(", "trainX", ")", "[", ":", ",", "0", "]", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", "1", ")", "]", "\n", "validX_notnan", "=", "validX", "[", "torch", ".", "logical_not", "(", "torch", ".", "isnan", "(", "validX", ")", "[", ":", ",", "0", "]", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", "1", ")", "]", "\n", "validY_notnan", "=", "validY", "[", "torch", ".", "logical_not", "(", "torch", ".", "isnan", "(", "validX", ")", "[", ":", ",", "0", "]", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", "1", ")", "]", "\n", "new_train_ds", "=", "TensorDataset", "(", "trainX_notnan", ",", "trainY_notnan", ")", "\n", "new_valid_ds", "=", "TensorDataset", "(", "validX_notnan", ",", "validY_notnan", ")", "\n", "\n", "# Initialize the new multi-threaded loaders.", "\n", "train_loader", "=", "DataLoader", "(", "new_train_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "valid_loader", "=", "DataLoader", "(", "new_valid_ds", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "False", ")", "\n", "\n", "# Set model to direct evaluation (for cached data)", "\n", "model", ".", "set_eval_direct", "(", "True", ")", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "base_model_name", "=", "self", ".", "base_model", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "self", ".", "base_model", ",", "'preferred_name'", ")", ":", "\n", "            ", "base_model_name", "=", "self", ".", "base_model", ".", "preferred_name", "(", ")", "\n", "\n", "", "config", ".", "name", "=", "'_%s[%s](%s->%s)'", "%", "(", "self", ".", "__class__", ".", "__name__", ",", "base_model_name", ",", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", "\n", "config", ".", "train_loader", "=", "train_loader", "\n", "config", ".", "valid_loader", "=", "valid_loader", "\n", "config", ".", "phases", "=", "{", "\n", "'train'", ":", "{", "'dataset'", ":", "train_loader", ",", "'backward'", ":", "True", "}", ",", "\n", "'test'", ":", "{", "'dataset'", ":", "valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "'testU'", ":", "{", "'dataset'", ":", "old_valid_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "True", "\n", "config", ".", "cast_float_label", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "optim", ".", "SGD", "(", "model", ".", "H", ".", "parameters", "(", ")", ",", "lr", "=", "1e-2", ",", "weight_decay", "=", "0.0", ")", "#1.0/len(train_ds))", "\n", "config", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "config", ".", "optim", ",", "patience", "=", "10", ",", "threshold", "=", "1e-1", ",", "min_lr", "=", "1e-8", ",", "factor", "=", "0.1", ",", "verbose", "=", "True", ")", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "config", ".", "max_epoch", "=", "100", "\n", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.distance_measure": [[80, 88], ["ref.unsqueeze.unsqueeze", "target.unsqueeze.unsqueeze", "torch.pairwise_distance", "torch.pairwise_distance", "torch.pairwise_distance", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cosine_similarity", "cos_dist.item", "torch.pairwise_distance.item"], "function", ["None"], ["", "", "def", "distance_measure", "(", "ref", ",", "target", ")", ":", "\n", "    ", "ref", "=", "ref", ".", "unsqueeze", "(", "0", ")", "\n", "target", "=", "target", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "euc_dist", "=", "torch", ".", "pairwise_distance", "(", "ref", ",", "target", ")", "\n", "cos_dist", "=", "1", "-", "torch", ".", "nn", ".", "functional", ".", "cosine_similarity", "(", "ref", ",", "target", ")", "\n", "query_dist", "=", "euc_dist", ".", "item", "(", ")", "/", "200.0", "+", "cos_dist", ".", "item", "(", ")", "# the coefficients are taken from the original implementation.", "\n", "return", "query_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.method_identifier": [[23, 28], ["len"], "methods", ["None"], ["    ", "def", "method_identifier", "(", "self", ")", ":", "\n", "        ", "output", "=", "\"ALIReconstruction\"", "\n", "if", "len", "(", "self", ".", "add_identifier", ")", ">", "0", ":", "\n", "            ", "output", "=", "output", "+", "\"/\"", "+", "self", ".", "add_identifier", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.get_base_config": [[29, 72], ["print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "utils.iterative_trainer.IterativeTrainerConfig", "os.path.join", "os.path.dirname", "utils.logger.Logger", "torch.BCEWithLogitsLoss().to", "torch.BCEWithLogitsLoss().to", "torch.BCEWithLogitsLoss().to", "torch.BCEWithLogitsLoss().to", "torch.MSELoss().to", "torch.MSELoss().to", "torch.MSELoss().to", "torch.MSELoss().to", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "global_vars.get_ref_ali"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.None.global_vars.get_ref_ali"], ["", "def", "get_base_config", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "print", "(", "\"Preparing training D1 for %s\"", "%", "(", "dataset", ".", "name", ")", ")", "\n", "\n", "# Initialize the multi-threaded loaders.", "\n", "all_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "# Set up the model", "\n", "model", "=", "Global", ".", "get_ref_ali", "(", "dataset", ".", "name", ")", "[", "0", "]", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "\n", "# Set up the criterion", "\n", "criterion", "=", "None", "\n", "if", "self", ".", "default_model", "==", "0", ":", "\n", "            ", "criterion", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "criterion", "=", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "model", ".", "default_sigmoid", "=", "True", "\n", "\n", "# Set up the config", "\n", "", "config", "=", "IterativeTrainerConfig", "(", ")", "\n", "\n", "config", ".", "name", "=", "'%s-ALIAE1'", "%", "(", "self", ".", "args", ".", "D1", ")", "\n", "config", ".", "phases", "=", "{", "\n", "'all'", ":", "{", "'dataset'", ":", "all_loader", ",", "'backward'", ":", "False", "}", ",", "\n", "}", "\n", "config", ".", "criterion", "=", "criterion", "\n", "config", ".", "classification", "=", "False", "\n", "config", ".", "cast_float_label", "=", "False", "\n", "config", ".", "autoencoder_target", "=", "True", "\n", "config", ".", "stochastic_gradient", "=", "True", "\n", "config", ".", "visualize", "=", "not", "self", ".", "args", ".", "no_visualize", "\n", "config", ".", "sigmoid_viz", "=", "self", ".", "default_model", "==", "0", "\n", "config", ".", "model", "=", "model", "\n", "config", ".", "optim", "=", "None", "\n", "\n", "h_path", "=", "path", ".", "join", "(", "self", ".", "args", ".", "experiment_path", ",", "'%s'", "%", "(", "self", ".", "__class__", ".", "__name__", ")", ",", "\n", "'%d'", "%", "(", "self", ".", "default_model", ")", ",", "\n", "'%s-%s.pth'", "%", "(", "self", ".", "args", ".", "D1", ",", "self", ".", "args", ".", "D2", ")", ")", "\n", "h_parent", "=", "path", ".", "dirname", "(", "h_path", ")", "\n", "\n", "config", ".", "logger", "=", "Logger", "(", "h_parent", ")", "\n", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.propose_H": [[73, 104], ["ALI.ALIReconstruction.get_base_config", "Models.get_ref_model_path", "os.path.join", "ALI.ALIReconstruction.base_model.eval", "os.path.isfile", "NotImplementedError", "print", "ALI.ALIReconstruction.model.load_state_dict", "termcolor.colored", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.ALI.ALIReconstruction.get_base_config", "home.repos.pwc.inspect_result.caotians1_OD-test-master.models.__init__.get_ref_model_path", "home.repos.pwc.inspect_result.caotians1_OD-test-master.methods.openmax.OTModelWrapper.eval"], ["", "def", "propose_H", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "config", "=", "self", ".", "get_base_config", "(", "dataset", ")", "\n", "\n", "import", "models", "as", "Models", "\n", "\n", "if", "self", ".", "default_model", "==", "0", ":", "\n", "            ", "config", ".", "model", ".", "netid", "=", "\"BCE.\"", "+", "config", ".", "model", ".", "netid", "\n", "", "else", ":", "\n", "            ", "config", ".", "model", ".", "netid", "=", "\"MSE.\"", "+", "config", ".", "model", ".", "netid", "\n", "\n", "\n", "", "home_path", "=", "Models", ".", "get_ref_model_path", "(", "self", ".", "args", ",", "config", ".", "model", ".", "__class__", ".", "__name__", ",", "dataset", ".", "name", ",", "\n", "suffix_str", "=", "config", ".", "model", ".", "netid", ")", "\n", "hbest_path", "=", "path", ".", "join", "(", "home_path", ",", "'model.best.pth'", ")", "\n", "best_h_path", "=", "hbest_path", "\n", "\n", "# trainer = IterativeTrainer(config, self.args)", "\n", "\n", "if", "not", "path", ".", "isfile", "(", "best_h_path", ")", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\n", "\"%s not found!, Please use setup_model to pretrain the networks first!\"", "%", "best_h_path", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "colored", "(", "'Loading H1 model from %s'", "%", "best_h_path", ",", "'red'", ")", ")", "\n", "config", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "best_h_path", ")", ")", "\n", "\n", "# trainer.run_epoch(0, phase='all')", "\n", "# test_loss = config.logger.get_measure('all_loss').mean_epoch(epoch=0)", "\n", "# print(\"All average loss %s\"%colored('%.4f'%(test_loss), 'red'))", "\n", "\n", "", "self", ".", "base_model", "=", "config", ".", "model", "\n", "self", ".", "base_model", ".", "eval", "(", ")", "", "", "", ""]]}