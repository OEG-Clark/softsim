{"home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.VanillaSaliency.__init__": [[127, 133], ["test_functions.VanillaSaliency.model.eval"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "vgg", ",", "device", ",", "config", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "vgg", "=", "vgg", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.VanillaSaliency.generate_saliency": [[134, 170], ["torch.autograd.Variable().to", "test_functions.VanillaSaliency.model.zero_grad", "torch.autograd.Variable().to.requires_grad_", "torch.nn.MSELoss", "torch.nn.CosineSimilarity", "test_functions.VanillaSaliency.model.forward", "test_functions.VanillaSaliency.vgg", "torch.nn.MSELoss.", "torch.mean", "torch.nn.MSELoss.", "torch.mean", "torch.nn.MSELoss.", "torch.mean", "test_functions.VanillaSaliency.model.zero_grad", "total_loss.backward", "torch.autograd.Variable().to.grad.data.detach().cpu", "torch.autograd.Variable().to.grad.data.zero_", "numpy.asarray", "utils.utils.convert_to_grayscale", "numpy.asarray", "torch.autograd.Variable", "torch.nn.CosineSimilarity.", "torch.nn.CosineSimilarity.", "torch.nn.CosineSimilarity.", "torch.autograd.Variable().to.grad.data.detach", "numpy.asarray.detach().cpu().squeeze", "y_pred_1.view", "y_1.view", "y_pred_2.view", "y_2.view", "y_pred_3.view", "y_3.view", "numpy.asarray.detach().cpu", "numpy.asarray.detach"], "methods", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.forward", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.convert_to_grayscale"], ["", "def", "generate_saliency", "(", "self", ",", "data", ",", "make_single_channel", "=", "True", ")", ":", "\n", "        ", "data_var_sal", "=", "Variable", "(", "data", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "model", ".", "zero_grad", "(", ")", "\n", "if", "data_var_sal", ".", "grad", "is", "not", "None", ":", "\n", "            ", "data_var_sal", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "", "data_var_sal", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "lamda", "=", "self", ".", "config", "[", "'lamda'", "]", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "similarity_loss", "=", "torch", ".", "nn", ".", "CosineSimilarity", "(", ")", "\n", "\n", "output_pred", "=", "self", ".", "model", ".", "forward", "(", "data_var_sal", ")", "\n", "output_real", "=", "self", ".", "vgg", "(", "data_var_sal", ")", "\n", "y_pred_1", ",", "y_pred_2", ",", "y_pred_3", "=", "output_pred", "[", "6", "]", ",", "output_pred", "[", "9", "]", ",", "output_pred", "[", "12", "]", "\n", "y_1", ",", "y_2", ",", "y_3", "=", "output_real", "[", "6", "]", ",", "output_real", "[", "9", "]", ",", "output_real", "[", "12", "]", "\n", "\n", "abs_loss_1", "=", "criterion", "(", "y_pred_1", ",", "y_1", ")", "\n", "loss_1", "=", "torch", ".", "mean", "(", "1", "-", "similarity_loss", "(", "y_pred_1", ".", "view", "(", "y_pred_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_1", ".", "view", "(", "y_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "abs_loss_2", "=", "criterion", "(", "y_pred_2", ",", "y_2", ")", "\n", "loss_2", "=", "torch", ".", "mean", "(", "1", "-", "similarity_loss", "(", "y_pred_2", ".", "view", "(", "y_pred_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_2", ".", "view", "(", "y_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "abs_loss_3", "=", "criterion", "(", "y_pred_3", ",", "y_3", ")", "\n", "loss_3", "=", "torch", ".", "mean", "(", "1", "-", "similarity_loss", "(", "y_pred_3", ".", "view", "(", "y_pred_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_3", ".", "view", "(", "y_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "total_loss", "=", "loss_1", "+", "loss_2", "+", "loss_3", "+", "lamda", "*", "(", "abs_loss_1", "+", "abs_loss_2", "+", "abs_loss_3", ")", "\n", "self", ".", "model", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "grad", "=", "data_var_sal", ".", "grad", ".", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "if", "make_single_channel", ":", "\n", "            ", "grad", "=", "np", ".", "asarray", "(", "grad", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "squeeze", "(", "0", ")", ")", "\n", "# grad = max_regarding_to_abs(np.max(grad, axis=0), np.min(grad, axis=0))", "\n", "# grad = np.expand_dims(grad, axis=0)", "\n", "grad", "=", "convert_to_grayscale", "(", "grad", ")", "\n", "# print(grad.shape)", "\n", "", "else", ":", "\n", "            ", "grad", "=", "np", ".", "asarray", "(", "grad", ")", "\n", "", "return", "grad", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.IntegratedGradients.__init__": [[194, 201], ["test_functions.IntegratedGradients.model.eval"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "vgg", ",", "device", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "vgg", "=", "vgg", "\n", "self", ".", "gradients", "=", "None", "\n", "self", ".", "device", "=", "device", "\n", "# Put model in evaluation mode", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.IntegratedGradients.generate_images_on_linear_path": [[202, 206], ["numpy.arange"], "methods", ["None"], ["", "def", "generate_images_on_linear_path", "(", "self", ",", "input_image", ",", "steps", ")", ":", "\n", "        ", "step_list", "=", "np", ".", "arange", "(", "steps", "+", "1", ")", "/", "steps", "\n", "xbar_list", "=", "[", "input_image", "*", "step", "for", "step", "in", "step_list", "]", "\n", "return", "xbar_list", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.IntegratedGradients.generate_gradients": [[207, 213], ["test_functions.VanillaSaliency", "test_functions.VanillaSaliency.generate_saliency", "isinstance", "saliency.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "saliency.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "saliency.detach().cpu().numpy.detach().cpu().numpy.detach"], "methods", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.VanillaSaliency.generate_saliency"], ["", "def", "generate_gradients", "(", "self", ",", "input_image", ",", "make_single_channel", "=", "True", ")", ":", "\n", "        ", "vanillaSaliency", "=", "VanillaSaliency", "(", "self", ".", "model", ",", "self", ".", "vgg", ",", "self", ".", "device", ")", "\n", "saliency", "=", "vanillaSaliency", ".", "generate_saliency", "(", "input_image", ",", "make_single_channel", ")", "\n", "if", "not", "isinstance", "(", "saliency", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "saliency", "=", "saliency", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "return", "saliency", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.IntegratedGradients.generate_integrated_gradients": [[214, 230], ["test_functions.IntegratedGradients.generate_images_on_linear_path", "input_image.detach().cpu().numpy().squeeze", "test_functions.IntegratedGradients.generate_gradients", "numpy.asarray", "utils.utils.max_regarding_to_abs", "copy.deepcopy", "input_image.detach().cpu().numpy", "numpy.max", "numpy.min", "input_image.detach().cpu", "input_image.detach"], "methods", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.IntegratedGradients.generate_images_on_linear_path", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.GuidedBackprop.generate_gradients", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.max_regarding_to_abs"], ["", "def", "generate_integrated_gradients", "(", "self", ",", "input_image", ",", "steps", ",", "make_single_channel", "=", "True", ")", ":", "\n", "        ", "xbar_list", "=", "self", ".", "generate_images_on_linear_path", "(", "input_image", ",", "steps", ")", "\n", "integrated_grads", "=", "None", "\n", "for", "xbar_image", "in", "xbar_list", ":", "\n", "            ", "single_integrated_grad", "=", "self", ".", "generate_gradients", "(", "xbar_image", ",", "False", ")", "\n", "if", "integrated_grads", "is", "None", ":", "\n", "                ", "integrated_grads", "=", "deepcopy", "(", "single_integrated_grad", ")", "\n", "", "else", ":", "\n", "                ", "integrated_grads", "=", "(", "integrated_grads", "+", "single_integrated_grad", ")", "\n", "", "", "integrated_grads", "/=", "steps", "\n", "saliency", "=", "integrated_grads", "[", "0", "]", "\n", "img", "=", "input_image", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", "0", ")", "\n", "saliency", "=", "np", ".", "asarray", "(", "saliency", ")", "*", "img", "\n", "if", "make_single_channel", ":", "\n", "            ", "saliency", "=", "max_regarding_to_abs", "(", "np", ".", "max", "(", "saliency", ",", "axis", "=", "0", ")", ",", "np", ".", "min", "(", "saliency", ",", "axis", "=", "0", ")", ")", "\n", "", "return", "saliency", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.GuidedBackprop.__init__": [[241, 250], ["test_functions.GuidedBackprop.model.eval", "test_functions.GuidedBackprop.update_relus"], "methods", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.GuidedBackprop.update_relus"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "vgg", ",", "device", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "vgg", "=", "vgg", "\n", "self", ".", "gradients", "=", "None", "\n", "self", ".", "forward_relu_outputs", "=", "[", "]", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "hooks", "=", "[", "]", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "self", ".", "update_relus", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.GuidedBackprop.update_relus": [[251, 268], ["test_functions.GuidedBackprop.model.modules", "test_functions.GuidedBackprop.forward_relu_outputs.append", "isinstance", "torch.clamp", "test_functions.GuidedBackprop.hooks.append", "test_functions.GuidedBackprop.hooks.append", "module.register_backward_hook", "module.register_forward_hook"], "methods", ["None"], ["", "def", "update_relus", "(", "self", ")", ":", "\n", "\n", "        ", "def", "relu_backward_hook_function", "(", "module", ",", "grad_in", ",", "grad_out", ")", ":", "\n", "            ", "corresponding_forward_output", "=", "self", ".", "forward_relu_outputs", "[", "-", "1", "]", "\n", "corresponding_forward_output", "[", "corresponding_forward_output", ">", "0", "]", "=", "1", "\n", "modified_grad_out", "=", "corresponding_forward_output", "*", "torch", ".", "clamp", "(", "grad_in", "[", "0", "]", ",", "min", "=", "0.0", ")", "\n", "del", "self", ".", "forward_relu_outputs", "[", "-", "1", "]", "# Remove last forward output", "\n", "return", "(", "modified_grad_out", ",", ")", "\n", "\n", "", "def", "relu_forward_hook_function", "(", "module", ",", "ten_in", ",", "ten_out", ")", ":", "\n", "            ", "self", ".", "forward_relu_outputs", ".", "append", "(", "ten_out", ")", "\n", "\n", "# Loop through layers, hook up ReLUs", "\n", "", "for", "module", "in", "self", ".", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "module", ",", "ReLU", ")", ":", "\n", "                ", "self", ".", "hooks", ".", "append", "(", "module", ".", "register_backward_hook", "(", "relu_backward_hook_function", ")", ")", "\n", "self", ".", "hooks", ".", "append", "(", "module", ".", "register_forward_hook", "(", "relu_forward_hook_function", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.GuidedBackprop.generate_gradients": [[269, 277], ["test_functions.VanillaSaliency", "test_functions.VanillaSaliency.generate_saliency", "isinstance", "sal.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "hook.remove", "sal.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "sal.detach().cpu().numpy.detach().cpu().numpy.detach"], "methods", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.VanillaSaliency.generate_saliency"], ["", "", "", "def", "generate_gradients", "(", "self", ",", "input_image", ",", "config", ",", "make_single_channel", "=", "True", ")", ":", "\n", "        ", "vanillaSaliency", "=", "VanillaSaliency", "(", "self", ".", "model", ",", "self", ".", "vgg", ",", "self", ".", "device", ",", "config", "=", "config", ")", "\n", "sal", "=", "vanillaSaliency", ".", "generate_saliency", "(", "input_image", ",", "make_single_channel", ")", "\n", "if", "not", "isinstance", "(", "sal", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "sal", "=", "sal", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "for", "hook", "in", "self", ".", "hooks", ":", "\n", "            ", "hook", ".", "remove", "(", ")", "\n", "", "return", "sal", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.detection_test": [[12, 68], ["torch.nn.CosineSimilarity", "model.eval", "zip", "numpy.array", "numpy.array", "sklearn.metrics.roc_curve", "sklearn.metrics.auc", "round", "torch.autograd.Variable().cuda", "model.forward", "vgg", "list", "X.repeat.repeat", "torch.mean", "torch.mean", "torch.mean", "zip", "torch.autograd.Variable", "torch.nn.CosineSimilarity.", "torch.nn.CosineSimilarity.", "torch.nn.CosineSimilarity.", "torch.nn.CosineSimilarity.", "torch.nn.CosineSimilarity.", "torch.nn.CosineSimilarity.", "Y.cpu().data.numpy().tolist", "total_loss.cpu().data.numpy().tolist", "y_pred_1.view", "y_1.view", "y_pred_2.view", "y_2.view", "y_pred_3.view", "y_3.view", "y_pred_1.view", "y_1.view", "y_pred_2.view", "y_2.view", "y_pred_3.view", "y_3.view", "Y.cpu().data.numpy", "total_loss.cpu().data.numpy", "Y.cpu", "total_loss.cpu"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.forward"], ["def", "detection_test", "(", "model", ",", "vgg", ",", "test_dataloader", ",", "config", ")", ":", "\n", "    ", "normal_class", "=", "config", "[", "\"normal_class\"", "]", "\n", "lamda", "=", "config", "[", "'lamda'", "]", "\n", "dataset_name", "=", "config", "[", "'dataset_name'", "]", "\n", "direction_only", "=", "config", "[", "'direction_loss_only'", "]", "\n", "\n", "if", "dataset_name", "!=", "\"mvtec\"", ":", "\n", "        ", "target_class", "=", "normal_class", "\n", "", "else", ":", "\n", "        ", "mvtec_good_dict", "=", "{", "'bottle'", ":", "3", ",", "'cable'", ":", "5", ",", "'capsule'", ":", "2", ",", "'carpet'", ":", "2", ",", "\n", "'grid'", ":", "3", ",", "'hazelnut'", ":", "2", ",", "'leather'", ":", "4", ",", "'metal_nut'", ":", "3", ",", "'pill'", ":", "5", ",", "\n", "'screw'", ":", "0", ",", "'tile'", ":", "2", ",", "'toothbrush'", ":", "1", ",", "'transistor'", ":", "3", ",", "'wood'", ":", "2", ",", "\n", "'zipper'", ":", "4", "\n", "}", "\n", "target_class", "=", "mvtec_good_dict", "[", "normal_class", "]", "\n", "\n", "", "similarity_loss", "=", "torch", ".", "nn", ".", "CosineSimilarity", "(", ")", "\n", "label_score", "=", "[", "]", "\n", "model", ".", "eval", "(", ")", "\n", "for", "data", "in", "test_dataloader", ":", "\n", "        ", "X", ",", "Y", "=", "data", "\n", "if", "X", ".", "shape", "[", "1", "]", "==", "1", ":", "\n", "            ", "X", "=", "X", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "", "X", "=", "Variable", "(", "X", ")", ".", "cuda", "(", ")", "\n", "output_pred", "=", "model", ".", "forward", "(", "X", ")", "\n", "output_real", "=", "vgg", "(", "X", ")", "\n", "y_pred_1", ",", "y_pred_2", ",", "y_pred_3", "=", "output_pred", "[", "6", "]", ",", "output_pred", "[", "9", "]", ",", "output_pred", "[", "12", "]", "\n", "y_1", ",", "y_2", ",", "y_3", "=", "output_real", "[", "6", "]", ",", "output_real", "[", "9", "]", ",", "output_real", "[", "12", "]", "\n", "\n", "if", "direction_only", ":", "\n", "            ", "loss_1", "=", "1", "-", "similarity_loss", "(", "y_pred_1", ".", "view", "(", "y_pred_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_1", ".", "view", "(", "y_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "loss_2", "=", "1", "-", "similarity_loss", "(", "y_pred_2", ".", "view", "(", "y_pred_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_2", ".", "view", "(", "y_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "loss_3", "=", "1", "-", "similarity_loss", "(", "y_pred_3", ".", "view", "(", "y_pred_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_3", ".", "view", "(", "y_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "total_loss", "=", "loss_1", "+", "loss_2", "+", "loss_3", "\n", "", "else", ":", "\n", "            ", "abs_loss_1", "=", "torch", ".", "mean", "(", "(", "y_pred_1", "-", "y_1", ")", "**", "2", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "loss_1", "=", "1", "-", "similarity_loss", "(", "y_pred_1", ".", "view", "(", "y_pred_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_1", ".", "view", "(", "y_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "abs_loss_2", "=", "torch", ".", "mean", "(", "(", "y_pred_2", "-", "y_2", ")", "**", "2", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "loss_2", "=", "1", "-", "similarity_loss", "(", "y_pred_2", ".", "view", "(", "y_pred_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_2", ".", "view", "(", "y_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "abs_loss_3", "=", "torch", ".", "mean", "(", "(", "y_pred_3", "-", "y_3", ")", "**", "2", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "loss_3", "=", "1", "-", "similarity_loss", "(", "y_pred_3", ".", "view", "(", "y_pred_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_3", ".", "view", "(", "y_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "total_loss", "=", "loss_1", "+", "loss_2", "+", "loss_3", "+", "lamda", "*", "(", "abs_loss_1", "+", "abs_loss_2", "+", "abs_loss_3", ")", "\n", "\n", "", "label_score", "+=", "list", "(", "zip", "(", "Y", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ",", "total_loss", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", ")", "\n", "\n", "", "labels", ",", "scores", "=", "zip", "(", "*", "label_score", ")", "\n", "labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "indx1", "=", "labels", "==", "target_class", "\n", "indx2", "=", "labels", "!=", "target_class", "\n", "labels", "[", "indx1", "]", "=", "1", "\n", "labels", "[", "indx2", "]", "=", "0", "\n", "scores", "=", "np", ".", "array", "(", "scores", ")", "\n", "fpr", ",", "tpr", ",", "thresholds", "=", "roc_curve", "(", "labels", ",", "scores", ",", "pos_label", "=", "0", ")", "\n", "roc_auc", "=", "auc", "(", "fpr", ",", "tpr", ")", "\n", "roc_auc", "=", "round", "(", "roc_auc", ",", "4", ")", "\n", "return", "roc_auc", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.localization_test": [[70, 80], ["test_functions.compute_localization_auc", "test_functions.gradients_localization", "test_functions.smooth_grad_localization", "test_functions.gbp_localization"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.compute_localization_auc", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.gradients_localization", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.smooth_grad_localization", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.gbp_localization"], ["", "def", "localization_test", "(", "model", ",", "vgg", ",", "test_dataloader", ",", "ground_truth", ",", "config", ")", ":", "\n", "    ", "localization_method", "=", "config", "[", "'localization_method'", "]", "\n", "if", "localization_method", "==", "'gradients'", ":", "\n", "        ", "grad", "=", "gradients_localization", "(", "model", ",", "vgg", ",", "test_dataloader", ",", "config", ")", "\n", "", "if", "localization_method", "==", "'smooth_grad'", ":", "\n", "        ", "grad", "=", "smooth_grad_localization", "(", "model", ",", "vgg", ",", "test_dataloader", ",", "config", ")", "\n", "", "if", "localization_method", "==", "'gbp'", ":", "\n", "        ", "grad", "=", "gbp_localization", "(", "model", ",", "vgg", ",", "test_dataloader", ",", "config", ")", "\n", "\n", "", "return", "compute_localization_auc", "(", "grad", ",", "ground_truth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.grad_calc": [[82, 108], ["inputs.cuda.cuda", "torch.zeros", "torch.nn.MSELoss", "torch.nn.CosineSimilarity", "range", "model.forward", "vgg", "nn.MSELoss.", "torch.mean", "nn.MSELoss.", "torch.mean", "nn.MSELoss.", "torch.mean", "model.zero_grad", "total_loss.backward", "inputs[].unsqueeze", "inputs[].unsqueeze", "torch.nn.CosineSimilarity.", "torch.nn.CosineSimilarity.", "torch.nn.CosineSimilarity.", "y_pred_1.view", "y_1.view", "y_pred_2.view", "y_2.view", "y_pred_3.view", "y_3.view"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.forward"], ["", "def", "grad_calc", "(", "inputs", ",", "model", ",", "vgg", ",", "config", ")", ":", "\n", "    ", "inputs", "=", "inputs", ".", "cuda", "(", ")", "\n", "inputs", ".", "requires_grad", "=", "True", "\n", "temp", "=", "torch", ".", "zeros", "(", "inputs", ".", "shape", ")", "\n", "lamda", "=", "config", "[", "'lamda'", "]", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "similarity_loss", "=", "torch", ".", "nn", ".", "CosineSimilarity", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "inputs", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "output_pred", "=", "model", ".", "forward", "(", "inputs", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "target_layer", "=", "14", ")", "\n", "output_real", "=", "vgg", "(", "inputs", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "y_pred_1", ",", "y_pred_2", ",", "y_pred_3", "=", "output_pred", "[", "6", "]", ",", "output_pred", "[", "9", "]", ",", "output_pred", "[", "12", "]", "\n", "y_1", ",", "y_2", ",", "y_3", "=", "output_real", "[", "6", "]", ",", "output_real", "[", "9", "]", ",", "output_real", "[", "12", "]", "\n", "abs_loss_1", "=", "criterion", "(", "y_pred_1", ",", "y_1", ")", "\n", "loss_1", "=", "torch", ".", "mean", "(", "1", "-", "similarity_loss", "(", "y_pred_1", ".", "view", "(", "y_pred_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_1", ".", "view", "(", "y_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "abs_loss_2", "=", "criterion", "(", "y_pred_2", ",", "y_2", ")", "\n", "loss_2", "=", "torch", ".", "mean", "(", "1", "-", "similarity_loss", "(", "y_pred_2", ".", "view", "(", "y_pred_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_2", ".", "view", "(", "y_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "abs_loss_3", "=", "criterion", "(", "y_pred_3", ",", "y_3", ")", "\n", "loss_3", "=", "torch", ".", "mean", "(", "1", "-", "similarity_loss", "(", "y_pred_3", ".", "view", "(", "y_pred_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_3", ".", "view", "(", "y_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "total_loss", "=", "loss_1", "+", "loss_2", "+", "loss_3", "+", "lamda", "*", "(", "abs_loss_1", "+", "abs_loss_2", "+", "abs_loss_3", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "\n", "temp", "[", "i", "]", "=", "inputs", ".", "grad", "[", "i", "]", "\n", "\n", "", "return", "temp", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.gradients_localization": [[110, 124], ["model.eval", "print", "test_functions.grad_calc", "numpy.zeros", "range", "utils.utils.convert_to_grayscale", "scipy.ndimage.filters.gaussian_filter.squeeze", "scipy.ndimage.filters.gaussian_filter", "grad[].cpu().numpy", "grad[].cpu"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.grad_calc", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.convert_to_grayscale"], ["", "def", "gradients_localization", "(", "model", ",", "vgg", ",", "test_dataloader", ",", "config", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "print", "(", "\"Vanilla Backpropagation:\"", ")", "\n", "temp", "=", "None", "\n", "for", "data", "in", "test_dataloader", ":", "\n", "        ", "X", ",", "Y", "=", "data", "\n", "grad", "=", "grad_calc", "(", "X", ",", "model", ",", "vgg", ",", "config", ")", "\n", "temp", "=", "np", ".", "zeros", "(", "(", "grad", ".", "shape", "[", "0", "]", ",", "grad", ".", "shape", "[", "2", "]", ",", "grad", ".", "shape", "[", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "grad", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "grad_temp", "=", "convert_to_grayscale", "(", "grad", "[", "i", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "grad_temp", "=", "grad_temp", ".", "squeeze", "(", "0", ")", "\n", "grad_temp", "=", "gaussian_filter", "(", "grad_temp", ",", "sigma", "=", "4", ")", "\n", "temp", "[", "i", "]", "=", "grad_temp", "\n", "", "", "return", "temp", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.generate_smooth_grad": [[172, 191], ["range", "torch.autograd.Variable", "VBP.generate_saliency", "data.data.new().normal_", "isinstance", "vanilla_grads.detach().cpu().numpy.detach().cpu().numpy", "torch.max", "torch.min", "data.data.new", "vanilla_grads.detach().cpu().numpy.detach().cpu", "data.size", "vanilla_grads.detach().cpu().numpy.detach"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.VanillaSaliency.generate_saliency"], ["", "", "def", "generate_smooth_grad", "(", "data", ",", "param_n", ",", "param_sigma_multiplier", ",", "vbp", ",", "single_channel", "=", "True", ")", ":", "\n", "    ", "smooth_grad", "=", "None", "\n", "\n", "mean", "=", "0", "\n", "sigma", "=", "param_sigma_multiplier", "/", "(", "torch", ".", "max", "(", "data", ")", "-", "torch", ".", "min", "(", "data", ")", ")", ".", "item", "(", ")", "\n", "VBP", "=", "vbp", "\n", "for", "x", "in", "range", "(", "param_n", ")", ":", "\n", "        ", "noise", "=", "Variable", "(", "data", ".", "data", ".", "new", "(", "data", ".", "size", "(", ")", ")", ".", "normal_", "(", "mean", ",", "sigma", "**", "2", ")", ")", "\n", "noisy_img", "=", "data", "+", "noise", "\n", "vanilla_grads", "=", "VBP", ".", "generate_saliency", "(", "noisy_img", ",", "single_channel", ")", "\n", "if", "not", "isinstance", "(", "vanilla_grads", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "vanilla_grads", "=", "vanilla_grads", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "smooth_grad", "is", "None", ":", "\n", "            ", "smooth_grad", "=", "vanilla_grads", "\n", "", "else", ":", "\n", "            ", "smooth_grad", "=", "smooth_grad", "+", "vanilla_grads", "\n", "\n", "", "", "smooth_grad", "=", "smooth_grad", "/", "param_n", "\n", "return", "smooth_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.generate_integrad_saliency_maps": [[232, 238], ["test_functions.IntegratedGradients", "test_functions.IntegratedGradients.generate_integrated_gradients", "utils.utils.convert_to_grayscale"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.IntegratedGradients.generate_integrated_gradients", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.convert_to_grayscale"], ["", "", "def", "generate_integrad_saliency_maps", "(", "model", ",", "vgg", ",", "preprocessed_image", ",", "device", ",", "steps", "=", "100", ",", "make_single_channel", "=", "True", ")", ":", "\n", "    ", "IG", "=", "IntegratedGradients", "(", "model", ",", "vgg", ",", "device", ")", "\n", "integrated_grads", "=", "IG", ".", "generate_integrated_gradients", "(", "preprocessed_image", ",", "steps", ",", "make_single_channel", ")", "\n", "if", "make_single_channel", ":", "\n", "        ", "integrated_grads", "=", "convert_to_grayscale", "(", "integrated_grads", ")", "\n", "", "return", "integrated_grads", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.gbp_localization": [[279, 304], ["model.eval", "print", "np.zeros.reshape", "numpy.zeros", "x.view", "test_functions.GuidedBackprop", "abs", "scipy.ndimage.filters.gaussian_filter", "test_functions.GuidedBackprop.generate_gradients", "min", "max", "min", "abs.flatten", "abs.flatten", "abs.flatten"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.GuidedBackprop.generate_gradients"], ["", "", "def", "gbp_localization", "(", "model", ",", "vgg", ",", "test_dataloader", ",", "config", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "print", "(", "\"GBP Method:\"", ")", "\n", "\n", "grad1", "=", "None", "\n", "i", "=", "0", "\n", "\n", "for", "data", "in", "test_dataloader", ":", "\n", "        ", "X", ",", "Y", "=", "data", "\n", "grad1", "=", "np", ".", "zeros", "(", "(", "X", ".", "shape", "[", "0", "]", ",", "1", ",", "128", ",", "128", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "x", "in", "X", ":", "\n", "            ", "data", "=", "x", ".", "view", "(", "1", ",", "3", ",", "128", ",", "128", ")", "\n", "\n", "GBP", "=", "GuidedBackprop", "(", "model", ",", "vgg", ",", "'cuda:0'", ")", "\n", "gbp_saliency", "=", "abs", "(", "GBP", ".", "generate_gradients", "(", "data", ",", "config", ")", ")", "\n", "gbp_saliency", "=", "(", "gbp_saliency", "-", "min", "(", "gbp_saliency", ".", "flatten", "(", ")", ")", ")", "/", "(", "\n", "max", "(", "gbp_saliency", ".", "flatten", "(", ")", ")", "-", "min", "(", "gbp_saliency", ".", "flatten", "(", ")", ")", ")", "\n", "saliency", "=", "gbp_saliency", "\n", "\n", "saliency", "=", "gaussian_filter", "(", "saliency", ",", "sigma", "=", "4", ")", "\n", "grad1", "[", "i", "]", "=", "saliency", "\n", "i", "+=", "1", "\n", "\n", "", "", "grad1", "=", "grad1", ".", "reshape", "(", "-", "1", ",", "128", ",", "128", ")", "\n", "return", "grad1", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.smooth_grad_localization": [[306, 332], ["model.eval", "print", "np.zeros.reshape", "numpy.zeros", "x.view", "test_functions.VanillaSaliency", "abs", "scipy.ndimage.filters.gaussian_filter", "test_functions.generate_smooth_grad", "min", "max", "min", "abs.flatten", "abs.flatten", "abs.flatten"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.generate_smooth_grad"], ["", "def", "smooth_grad_localization", "(", "model", ",", "vgg", ",", "test_dataloader", ",", "config", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "print", "(", "\"Smooth Grad Method:\"", ")", "\n", "\n", "grad1", "=", "None", "\n", "i", "=", "0", "\n", "\n", "for", "data", "in", "test_dataloader", ":", "\n", "        ", "X", ",", "Y", "=", "data", "\n", "grad1", "=", "np", ".", "zeros", "(", "(", "X", ".", "shape", "[", "0", "]", ",", "1", ",", "128", ",", "128", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "x", "in", "X", ":", "\n", "            ", "data", "=", "x", ".", "view", "(", "1", ",", "3", ",", "128", ",", "128", ")", "\n", "\n", "vbp", "=", "VanillaSaliency", "(", "model", ",", "vgg", ",", "'cuda:0'", ",", "config", ")", "\n", "\n", "smooth_grad_saliency", "=", "abs", "(", "generate_smooth_grad", "(", "data", ",", "50", ",", "0.05", ",", "vbp", ")", ")", "\n", "smooth_grad_saliency", "=", "(", "smooth_grad_saliency", "-", "min", "(", "smooth_grad_saliency", ".", "flatten", "(", ")", ")", ")", "/", "(", "\n", "max", "(", "smooth_grad_saliency", ".", "flatten", "(", ")", ")", "-", "min", "(", "smooth_grad_saliency", ".", "flatten", "(", ")", ")", ")", "\n", "saliency", "=", "smooth_grad_saliency", "\n", "\n", "saliency", "=", "gaussian_filter", "(", "saliency", ",", "sigma", "=", "4", ")", "\n", "grad1", "[", "i", "]", "=", "saliency", "\n", "i", "+=", "1", "\n", "\n", "", "", "grad1", "=", "grad1", ".", "reshape", "(", "-", "1", ",", "128", ",", "128", ")", "\n", "return", "grad1", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.compute_localization_auc": [[334, 353], ["numpy.mean", "sklearn.metrics.auc", "utils.utils.morphological_process", "numpy.multiply", "tpr.append", "numpy.multiply", "numpy.multiply", "fpr.append", "range", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.morphological_process"], ["", "def", "compute_localization_auc", "(", "grad", ",", "x_ground", ")", ":", "\n", "    ", "tpr", "=", "[", "]", "\n", "fpr", "=", "[", "]", "\n", "x_ground_comp", "=", "np", ".", "mean", "(", "x_ground", ",", "axis", "=", "3", ")", "\n", "\n", "thresholds", "=", "[", "0.001", "*", "i", "for", "i", "in", "range", "(", "1000", ")", "]", "\n", "\n", "for", "threshold", "in", "thresholds", ":", "\n", "        ", "grad_t", "=", "1.0", "*", "(", "grad", ">=", "threshold", ")", "\n", "grad_t", "=", "morphological_process", "(", "grad_t", ")", "\n", "tp_map", "=", "np", ".", "multiply", "(", "grad_t", ",", "x_ground_comp", ")", "\n", "tpr", ".", "append", "(", "np", ".", "sum", "(", "tp_map", ")", "/", "np", ".", "sum", "(", "x_ground_comp", ")", ")", "\n", "\n", "inv_x_ground", "=", "1", "-", "x_ground_comp", "\n", "fp_map", "=", "np", ".", "multiply", "(", "grad_t", ",", "inv_x_ground", ")", "\n", "tn_map", "=", "np", ".", "multiply", "(", "1", "-", "grad_t", ",", "1", "-", "x_ground_comp", ")", "\n", "fpr", ".", "append", "(", "np", ".", "sum", "(", "fp_map", ")", "/", "(", "np", ".", "sum", "(", "fp_map", ")", "+", "np", ".", "sum", "(", "tn_map", ")", ")", ")", "\n", "\n", "", "return", "auc", "(", "fpr", ",", "tpr", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.train.train": [[14, 90], ["float", "pathlib.Path().mkdir", "dataloader.load_data", "torch.optim.Adam", "range", "get_networks", "get_networks", "loss_functions.DirectionOnlyLoss", "loss_functions.MseDirectionLoss", "model.parameters", "torch.optim.Adam.load_state_dict", "model.train", "print", "pathlib.Path", "torch.load", "open", "pickle.load", "torch.autograd.Variable().cuda", "model.forward", "vgg", "loss_functions.MseDirectionLoss.", "criterion.item", "losses.append", "torch.optim.Adam.zero_grad", "criterion.backward", "torch.optim.Adam.step", "test_functions.detection_test", "pickle.load.append", "print", "torch.save", "torch.save", "X.repeat.repeat", "criterion.item", "model.state_dict", "torch.optim.Adam.state_dict", "open", "pickle.dump", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.dataloader.load_data", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.get_networks", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.get_networks", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.train.train", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.forward", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.detection_test"], ["def", "train", "(", "config", ")", ":", "\n", "    ", "direction_loss_only", "=", "config", "[", "\"direction_loss_only\"", "]", "\n", "normal_class", "=", "config", "[", "\"normal_class\"", "]", "\n", "learning_rate", "=", "float", "(", "config", "[", "'learning_rate'", "]", ")", "\n", "num_epochs", "=", "config", "[", "\"num_epochs\"", "]", "\n", "lamda", "=", "config", "[", "'lamda'", "]", "\n", "continue_train", "=", "config", "[", "'continue_train'", "]", "\n", "last_checkpoint", "=", "config", "[", "'last_checkpoint'", "]", "\n", "\n", "checkpoint_path", "=", "\"./outputs/{}/{}/checkpoints/\"", ".", "format", "(", "config", "[", "'experiment_name'", "]", ",", "config", "[", "'dataset_name'", "]", ")", "\n", "\n", "# create directory", "\n", "Path", "(", "checkpoint_path", ")", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "train_dataloader", ",", "test_dataloader", "=", "load_data", "(", "config", ")", "\n", "if", "continue_train", ":", "\n", "        ", "vgg", ",", "model", "=", "get_networks", "(", "config", ",", "load_checkpoint", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "vgg", ",", "model", "=", "get_networks", "(", "config", ")", "\n", "\n", "# Criteria And Optimizers", "\n", "", "if", "direction_loss_only", ":", "\n", "        ", "criterion", "=", "DirectionOnlyLoss", "(", ")", "\n", "", "else", ":", "\n", "        ", "criterion", "=", "MseDirectionLoss", "(", "lamda", ")", "\n", "\n", "", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ")", "\n", "if", "continue_train", ":", "\n", "        ", "optimizer", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "'{}Opt_{}_epoch_{}.pth'", ".", "format", "(", "checkpoint_path", ",", "normal_class", ",", "last_checkpoint", ")", ")", ")", "\n", "\n", "", "losses", "=", "[", "]", "\n", "roc_aucs", "=", "[", "]", "\n", "if", "continue_train", ":", "\n", "        ", "with", "open", "(", "'{}Auc_{}_epoch_{}.pickle'", ".", "format", "(", "checkpoint_path", ",", "normal_class", ",", "last_checkpoint", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "roc_aucs", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "", "for", "epoch", "in", "range", "(", "num_epochs", "+", "1", ")", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "epoch_loss", "=", "0", "\n", "for", "data", "in", "train_dataloader", ":", "\n", "            ", "X", "=", "data", "[", "0", "]", "\n", "if", "X", ".", "shape", "[", "1", "]", "==", "1", ":", "\n", "                ", "X", "=", "X", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "", "X", "=", "Variable", "(", "X", ")", ".", "cuda", "(", ")", "\n", "\n", "output_pred", "=", "model", ".", "forward", "(", "X", ")", "\n", "output_real", "=", "vgg", "(", "X", ")", "\n", "\n", "total_loss", "=", "criterion", "(", "output_pred", ",", "output_real", ")", "\n", "\n", "# Add loss to the list", "\n", "epoch_loss", "+=", "total_loss", ".", "item", "(", ")", "\n", "losses", ".", "append", "(", "total_loss", ".", "item", "(", ")", ")", "\n", "\n", "# Clear the previous gradients", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "# Compute gradients", "\n", "total_loss", ".", "backward", "(", ")", "\n", "# Adjust weights", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "print", "(", "'epoch [{}/{}], loss:{:.4f}'", ".", "format", "(", "epoch", "+", "1", ",", "num_epochs", ",", "epoch_loss", ")", ")", "\n", "if", "epoch", "%", "10", "==", "0", ":", "\n", "            ", "roc_auc", "=", "detection_test", "(", "model", ",", "vgg", ",", "test_dataloader", ",", "config", ")", "\n", "roc_aucs", ".", "append", "(", "roc_auc", ")", "\n", "print", "(", "\"RocAUC at epoch {}:\"", ".", "format", "(", "epoch", ")", ",", "roc_auc", ")", "\n", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "\n", "'{}Cloner_{}_epoch_{}.pth'", ".", "format", "(", "checkpoint_path", ",", "normal_class", ",", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'{}Opt_{}_epoch_{}.pth'", ".", "format", "(", "checkpoint_path", ",", "normal_class", ",", "epoch", ")", ")", "\n", "with", "open", "(", "'{}Auc_{}_epoch_{}.pickle'", ".", "format", "(", "checkpoint_path", ",", "normal_class", ",", "epoch", ")", ",", "\n", "'wb'", ")", "as", "f", ":", "\n", "                ", "pickle", ".", "dump", "(", "roc_aucs", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.train.main": [[92, 96], ["parser.parse_args", "utils.utils.get_config", "train.train"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.get_config", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.train.train"], ["", "", "", "", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "get_config", "(", "args", ".", "config", ")", "\n", "train", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test.main": [[11, 28], ["parser.parse_args", "utils.utils.get_config", "models.network.get_networks", "print", "dataloader.load_localization_data", "test_functions.localization_test", "dataloader.load_data", "test_functions.detection_test"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.get_config", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.get_networks", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.dataloader.load_localization_data", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.localization_test", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.dataloader.load_data", "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.test_functions.detection_test"], ["def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "config", "=", "get_config", "(", "args", ".", "config", ")", "\n", "vgg", ",", "model", "=", "get_networks", "(", "config", ",", "load_checkpoint", "=", "True", ")", "\n", "\n", "# Localization test", "\n", "if", "config", "[", "'localization_test'", "]", ":", "\n", "        ", "test_dataloader", ",", "ground_truth", "=", "load_localization_data", "(", "config", ")", "\n", "roc_auc", "=", "localization_test", "(", "model", "=", "model", ",", "vgg", "=", "vgg", ",", "test_dataloader", "=", "test_dataloader", ",", "ground_truth", "=", "ground_truth", ",", "\n", "config", "=", "config", ")", "\n", "\n", "# Detection test", "\n", "", "else", ":", "\n", "        ", "_", ",", "test_dataloader", "=", "load_data", "(", "config", ")", "\n", "roc_auc", "=", "detection_test", "(", "model", "=", "model", ",", "vgg", "=", "vgg", ",", "test_dataloader", "=", "test_dataloader", ",", "config", "=", "config", ")", "\n", "", "last_checkpoint", "=", "config", "[", "'last_checkpoint'", "]", "\n", "print", "(", "\"RocAUC after {} epoch:\"", ".", "format", "(", "last_checkpoint", ")", ",", "roc_auc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.dataloader.load_data": [[11, 114], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.Compose", "os.makedirs", "torchvision.datasets.CIFAR10", "print", "print", "print", "os.makedirs", "torchvision.datasets.CIFAR10", "print", "torchvision.Compose", "os.makedirs", "torchvision.datasets.MNIST", "print", "print", "print", "os.makedirs", "torchvision.datasets.MNIST", "print", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Compose", "os.makedirs", "torchvision.datasets.FashionMNIST", "print", "print", "print", "os.makedirs", "torchvision.datasets.FashionMNIST", "print", "numpy.array", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Compose", "torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "numpy.array", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Compose", "torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "Exception", "numpy.array", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "function", ["None"], ["def", "load_data", "(", "config", ")", ":", "\n", "    ", "normal_class", "=", "config", "[", "'normal_class'", "]", "\n", "batch_size", "=", "config", "[", "'batch_size'", "]", "\n", "\n", "if", "config", "[", "'dataset_name'", "]", "in", "[", "'cifar10'", "]", ":", "\n", "        ", "img_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "256", ",", "256", ")", ",", "Image", ".", "ANTIALIAS", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", ",", "std", "=", "(", "0.229", ",", "0.224", ",", "0.225", ")", ")", "\n", "]", ")", "\n", "\n", "os", ".", "makedirs", "(", "\"./Dataset/CIFAR10/train\"", ",", "exist_ok", "=", "True", ")", "\n", "dataset", "=", "CIFAR10", "(", "'./Dataset/CIFAR10/train'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "img_transform", ")", "\n", "print", "(", "\"Cifar10 DataLoader Called...\"", ")", "\n", "print", "(", "\"All Train Data: \"", ",", "dataset", ".", "data", ".", "shape", ")", "\n", "dataset", ".", "data", "=", "dataset", ".", "data", "[", "np", ".", "array", "(", "dataset", ".", "targets", ")", "==", "normal_class", "]", "\n", "dataset", ".", "targets", "=", "[", "normal_class", "]", "*", "dataset", ".", "data", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Normal Train Data: \"", ",", "dataset", ".", "data", ".", "shape", ")", "\n", "\n", "os", ".", "makedirs", "(", "\"./Dataset/CIFAR10/test\"", ",", "exist_ok", "=", "True", ")", "\n", "test_set", "=", "CIFAR10", "(", "\"./Dataset/CIFAR10/test\"", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "img_transform", ")", "\n", "print", "(", "\"Test Train Data:\"", ",", "test_set", ".", "data", ".", "shape", ")", "\n", "\n", "", "elif", "config", "[", "'dataset_name'", "]", "in", "[", "'mnist'", "]", ":", "\n", "        ", "img_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "32", ",", "32", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "\n", "os", ".", "makedirs", "(", "\"./Dataset/MNIST/train\"", ",", "exist_ok", "=", "True", ")", "\n", "dataset", "=", "MNIST", "(", "'./Dataset/MNIST/train'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "img_transform", ")", "\n", "print", "(", "\"MNIST DataLoader Called...\"", ")", "\n", "print", "(", "\"All Train Data: \"", ",", "dataset", ".", "data", ".", "shape", ")", "\n", "dataset", ".", "data", "=", "dataset", ".", "data", "[", "np", ".", "array", "(", "dataset", ".", "targets", ")", "==", "normal_class", "]", "\n", "dataset", ".", "targets", "=", "[", "normal_class", "]", "*", "dataset", ".", "data", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Normal Train Data: \"", ",", "dataset", ".", "data", ".", "shape", ")", "\n", "\n", "os", ".", "makedirs", "(", "\"./Dataset/MNIST/test\"", ",", "exist_ok", "=", "True", ")", "\n", "test_set", "=", "MNIST", "(", "\"./Dataset/MNIST/test\"", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "img_transform", ")", "\n", "print", "(", "\"Test Train Data:\"", ",", "test_set", ".", "data", ".", "shape", ")", "\n", "\n", "", "elif", "config", "[", "'dataset_name'", "]", "in", "[", "'fashionmnist'", "]", ":", "\n", "        ", "img_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "32", ",", "32", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "\n", "os", ".", "makedirs", "(", "\"./Dataset/FashionMNIST/train\"", ",", "exist_ok", "=", "True", ")", "\n", "dataset", "=", "FashionMNIST", "(", "'./Dataset/FashionMNIST/train'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "img_transform", ")", "\n", "print", "(", "\"FashionMNIST DataLoader Called...\"", ")", "\n", "print", "(", "\"All Train Data: \"", ",", "dataset", ".", "data", ".", "shape", ")", "\n", "dataset", ".", "data", "=", "dataset", ".", "data", "[", "np", ".", "array", "(", "dataset", ".", "targets", ")", "==", "normal_class", "]", "\n", "dataset", ".", "targets", "=", "[", "normal_class", "]", "*", "dataset", ".", "data", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Normal Train Data: \"", ",", "dataset", ".", "data", ".", "shape", ")", "\n", "\n", "os", ".", "makedirs", "(", "\"./Dataset/FashionMNIST/test\"", ",", "exist_ok", "=", "True", ")", "\n", "test_set", "=", "FashionMNIST", "(", "\"./Dataset/FashionMNIST/test\"", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "img_transform", ")", "\n", "print", "(", "\"Test Train Data:\"", ",", "test_set", ".", "data", ".", "shape", ")", "\n", "\n", "", "elif", "config", "[", "'dataset_name'", "]", "in", "[", "'mvtec'", "]", ":", "\n", "        ", "data_path", "=", "'Dataset/MVTec/'", "+", "normal_class", "+", "'/train'", "\n", "mvtec_img_size", "=", "config", "[", "'mvtec_img_size'", "]", "\n", "\n", "orig_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "[", "mvtec_img_size", ",", "mvtec_img_size", "]", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "\n", "dataset", "=", "ImageFolder", "(", "root", "=", "data_path", ",", "transform", "=", "orig_transform", ")", "\n", "\n", "test_data_path", "=", "'Dataset/MVTec/'", "+", "normal_class", "+", "'/test'", "\n", "test_set", "=", "ImageFolder", "(", "root", "=", "test_data_path", ",", "transform", "=", "orig_transform", ")", "\n", "\n", "", "elif", "config", "[", "'dataset_name'", "]", "in", "[", "'retina'", "]", ":", "\n", "        ", "data_path", "=", "'Dataset/OCT2017/train'", "\n", "\n", "orig_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "[", "128", ",", "128", "]", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "\n", "dataset", "=", "ImageFolder", "(", "root", "=", "data_path", ",", "transform", "=", "orig_transform", ")", "\n", "\n", "test_data_path", "=", "'Dataset/OCT2017/test'", "\n", "test_set", "=", "ImageFolder", "(", "root", "=", "test_data_path", ",", "transform", "=", "orig_transform", ")", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\n", "\"You enter {} as dataset, which is not a valid dataset for this repository!\"", ".", "format", "(", "config", "[", "'dataset_name'", "]", ")", ")", "\n", "\n", "", "train_dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", ")", "\n", "test_dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "test_set", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", ")", "\n", "\n", "return", "train_dataloader", ",", "test_dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.dataloader.load_localization_data": [[116, 149], ["torchvision.Compose", "torchvision.datasets.ImageFolder", "torch.utils.data.DataLoader", "torchvision.datasets.ImageFolder", "torch.utils.data.DataLoader", "[].numpy", "numpy.transpose", "torchvision.Resize", "torchvision.ToTensor", "next", "iter"], "function", ["None"], ["", "def", "load_localization_data", "(", "config", ")", ":", "\n", "    ", "normal_class", "=", "config", "[", "'normal_class'", "]", "\n", "mvtec_img_size", "=", "config", "[", "'mvtec_img_size'", "]", "\n", "\n", "orig_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "[", "mvtec_img_size", ",", "mvtec_img_size", "]", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "\n", "test_data_path", "=", "'Dataset/MVTec/'", "+", "normal_class", "+", "'/test'", "\n", "test_set", "=", "ImageFolder", "(", "root", "=", "test_data_path", ",", "transform", "=", "orig_transform", ")", "\n", "test_dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "test_set", ",", "\n", "batch_size", "=", "512", ",", "\n", "shuffle", "=", "False", ",", "\n", ")", "\n", "\n", "ground_data_path", "=", "'Dataset/MVTec/'", "+", "normal_class", "+", "'/ground_truth'", "\n", "ground_dataset", "=", "ImageFolder", "(", "root", "=", "ground_data_path", ",", "transform", "=", "orig_transform", ")", "\n", "ground_dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "ground_dataset", ",", "\n", "batch_size", "=", "512", ",", "\n", "num_workers", "=", "0", ",", "\n", "shuffle", "=", "False", "\n", ")", "\n", "\n", "x_ground", "=", "next", "(", "iter", "(", "ground_dataloader", ")", ")", "[", "0", "]", ".", "numpy", "(", ")", "\n", "ground_temp", "=", "x_ground", "\n", "\n", "std_groud_temp", "=", "np", ".", "transpose", "(", "ground_temp", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "x_ground", "=", "std_groud_temp", "\n", "\n", "return", "test_dataloader", ",", "x_ground", "\n", "", ""]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.loss_functions.MseDirectionLoss.__init__": [[6, 11], ["torch.nn.Module.__init__", "torch.nn.MSELoss", "torch.nn.CosineSimilarity"], "methods", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.__init__"], ["    ", "def", "__init__", "(", "self", ",", "lamda", ")", ":", "\n", "        ", "super", "(", "MseDirectionLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lamda", "=", "lamda", "\n", "self", ".", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "similarity_loss", "=", "torch", ".", "nn", ".", "CosineSimilarity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.loss_functions.MseDirectionLoss.forward": [[12, 30], ["loss_functions.MseDirectionLoss.criterion", "torch.mean", "loss_functions.MseDirectionLoss.criterion", "torch.mean", "loss_functions.MseDirectionLoss.criterion", "torch.mean", "loss_functions.MseDirectionLoss.criterion", "torch.mean", "loss_functions.MseDirectionLoss.similarity_loss", "loss_functions.MseDirectionLoss.similarity_loss", "loss_functions.MseDirectionLoss.similarity_loss", "loss_functions.MseDirectionLoss.similarity_loss", "y_pred_0.view", "y_0.view", "y_pred_1.view", "y_1.view", "y_pred_2.view", "y_2.view", "y_pred_3.view", "y_3.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output_pred", ",", "output_real", ")", ":", "\n", "        ", "y_pred_0", ",", "y_pred_1", ",", "y_pred_2", ",", "y_pred_3", "=", "output_pred", "[", "3", "]", ",", "output_pred", "[", "6", "]", ",", "output_pred", "[", "9", "]", ",", "output_pred", "[", "12", "]", "\n", "y_0", ",", "y_1", ",", "y_2", ",", "y_3", "=", "output_real", "[", "3", "]", ",", "output_real", "[", "6", "]", ",", "output_real", "[", "9", "]", ",", "output_real", "[", "12", "]", "\n", "\n", "# different terms of loss", "\n", "abs_loss_0", "=", "self", ".", "criterion", "(", "y_pred_0", ",", "y_0", ")", "\n", "loss_0", "=", "torch", ".", "mean", "(", "1", "-", "self", ".", "similarity_loss", "(", "y_pred_0", ".", "view", "(", "y_pred_0", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_0", ".", "view", "(", "y_0", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "abs_loss_1", "=", "self", ".", "criterion", "(", "y_pred_1", ",", "y_1", ")", "\n", "loss_1", "=", "torch", ".", "mean", "(", "1", "-", "self", ".", "similarity_loss", "(", "y_pred_1", ".", "view", "(", "y_pred_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_1", ".", "view", "(", "y_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "abs_loss_2", "=", "self", ".", "criterion", "(", "y_pred_2", ",", "y_2", ")", "\n", "loss_2", "=", "torch", ".", "mean", "(", "1", "-", "self", ".", "similarity_loss", "(", "y_pred_2", ".", "view", "(", "y_pred_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_2", ".", "view", "(", "y_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "abs_loss_3", "=", "self", ".", "criterion", "(", "y_pred_3", ",", "y_3", ")", "\n", "loss_3", "=", "torch", ".", "mean", "(", "1", "-", "self", ".", "similarity_loss", "(", "y_pred_3", ".", "view", "(", "y_pred_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_3", ".", "view", "(", "y_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "\n", "total_loss", "=", "loss_0", "+", "loss_1", "+", "loss_2", "+", "loss_3", "+", "self", ".", "lamda", "*", "(", "\n", "abs_loss_0", "+", "abs_loss_1", "+", "abs_loss_2", "+", "abs_loss_3", ")", "\n", "\n", "return", "total_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.loss_functions.DirectionOnlyLoss.__init__": [[33, 36], ["torch.nn.Module.__init__", "torch.nn.CosineSimilarity"], "methods", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "DirectionOnlyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "similarity_loss", "=", "torch", ".", "nn", ".", "CosineSimilarity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.None.loss_functions.DirectionOnlyLoss.forward": [[37, 49], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "loss_functions.DirectionOnlyLoss.similarity_loss", "loss_functions.DirectionOnlyLoss.similarity_loss", "loss_functions.DirectionOnlyLoss.similarity_loss", "loss_functions.DirectionOnlyLoss.similarity_loss", "y_pred_0.view", "y_0.view", "y_pred_1.view", "y_1.view", "y_pred_2.view", "y_2.view", "y_pred_3.view", "y_3.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "output_pred", ",", "output_real", ")", ":", "\n", "        ", "y_pred_0", ",", "y_pred_1", ",", "y_pred_2", ",", "y_pred_3", "=", "output_pred", "[", "3", "]", ",", "output_pred", "[", "6", "]", ",", "output_pred", "[", "9", "]", ",", "output_pred", "[", "12", "]", "\n", "y_0", ",", "y_1", ",", "y_2", ",", "y_3", "=", "output_real", "[", "3", "]", ",", "output_real", "[", "6", "]", ",", "output_real", "[", "9", "]", ",", "output_real", "[", "12", "]", "\n", "\n", "loss_0", "=", "torch", ".", "mean", "(", "1", "-", "self", ".", "similarity_loss", "(", "y_pred_0", ".", "view", "(", "y_pred_0", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_0", ".", "view", "(", "y_0", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "loss_1", "=", "torch", ".", "mean", "(", "1", "-", "self", ".", "similarity_loss", "(", "y_pred_1", ".", "view", "(", "y_pred_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_1", ".", "view", "(", "y_1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "loss_2", "=", "torch", ".", "mean", "(", "1", "-", "self", ".", "similarity_loss", "(", "y_pred_2", ".", "view", "(", "y_pred_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_2", ".", "view", "(", "y_2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "loss_3", "=", "torch", ".", "mean", "(", "1", "-", "self", ".", "similarity_loss", "(", "y_pred_3", ".", "view", "(", "y_pred_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "y_3", ".", "view", "(", "y_3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ")", "\n", "\n", "total_loss", "=", "loss_0", "+", "loss_1", "+", "loss_2", "+", "loss_3", "\n", "\n", "return", "total_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.get_config": [[6, 9], ["open", "yaml.load"], "function", ["None"], ["def", "get_config", "(", "config", ")", ":", "\n", "    ", "with", "open", "(", "config", ",", "'r'", ")", "as", "stream", ":", "\n", "        ", "return", "yaml", ".", "load", "(", "stream", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.convert_to_grayscale": [[11, 18], ["numpy.sum", "numpy.percentile", "numpy.min", "numpy.clip", "numpy.expand_dims", "numpy.abs"], "function", ["None"], ["", "", "def", "convert_to_grayscale", "(", "im_as_arr", ")", ":", "\n", "    ", "grayscale_im", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "im_as_arr", ")", ",", "axis", "=", "0", ")", "\n", "im_max", "=", "np", ".", "percentile", "(", "grayscale_im", ",", "99", ")", "\n", "im_min", "=", "np", ".", "min", "(", "grayscale_im", ")", "\n", "grayscale_im", "=", "(", "np", ".", "clip", "(", "(", "grayscale_im", "-", "im_min", ")", "/", "(", "im_max", "-", "im_min", ")", ",", "0", ",", "1", ")", ")", "\n", "grayscale_im", "=", "np", ".", "expand_dims", "(", "grayscale_im", ",", "axis", "=", "0", ")", "\n", "return", "grayscale_im", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.morphological_process": [[21, 32], ["cv2.getStructuringElement", "kernel.astype.astype", "x.astype", "cv2.morphologyEx", "np.concatenate.reshape", "range", "cv2.morphologyEx", "temp.reshape.reshape", "numpy.concatenate"], "function", ["None"], ["", "def", "morphological_process", "(", "x", ")", ":", "\n", "    ", "kernel", "=", "cv2", ".", "getStructuringElement", "(", "cv2", ".", "MORPH_ELLIPSE", ",", "(", "3", ",", "3", ")", ")", "\n", "kernel", "=", "kernel", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "binary_map", "=", "x", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "opening", "=", "cv2", ".", "morphologyEx", "(", "binary_map", "[", "0", "]", ",", "cv2", ".", "MORPH_OPEN", ",", "kernel", ")", "\n", "opening", "=", "opening", ".", "reshape", "(", "1", ",", "opening", ".", "shape", "[", "0", "]", ",", "opening", ".", "shape", "[", "1", "]", ")", "\n", "for", "index", "in", "range", "(", "1", ",", "binary_map", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "temp", "=", "cv2", ".", "morphologyEx", "(", "binary_map", "[", "index", "]", ",", "cv2", ".", "MORPH_OPEN", ",", "kernel", ")", "\n", "temp", "=", "temp", ".", "reshape", "(", "1", ",", "temp", ".", "shape", "[", "0", "]", ",", "temp", ".", "shape", "[", "1", "]", ")", "\n", "opening", "=", "np", ".", "concatenate", "(", "(", "opening", ",", "temp", ")", ",", "axis", "=", "0", ")", "\n", "", "return", "opening", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.utils.utils.max_regarding_to_abs": [[34, 43], ["numpy.zeros", "range", "len", "range", "len", "abs", "abs"], "function", ["None"], ["", "def", "max_regarding_to_abs", "(", "a", ",", "b", ")", ":", "\n", "    ", "c", "=", "np", ".", "zeros", "(", "a", ".", "shape", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "a", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "len", "(", "a", "[", "0", "]", ")", ")", ":", "\n", "            ", "if", "abs", "(", "a", "[", "i", "]", "[", "j", "]", ")", ">=", "abs", "(", "b", "[", "i", "]", "[", "j", "]", ")", ":", "\n", "                ", "c", "[", "i", "]", "[", "j", "]", "=", "a", "[", "i", "]", "[", "j", "]", "\n", "", "else", ":", "\n", "                ", "c", "[", "i", "]", "[", "j", "]", "=", "b", "[", "i", "]", "[", "j", "]", "\n", "", "", "", "return", "c", "\n", "", ""]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.VGG.__init__": [[12, 19], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.__init__"], ["def", "__init__", "(", "self", ",", "features", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "features", "\n", "\n", "# placeholder for the gradients", "\n", "self", ".", "gradients", "=", "None", "\n", "self", ".", "activation", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.VGG.activations_hook": [[21, 23], ["None"], "methods", ["None"], ["", "def", "activations_hook", "(", "self", ",", "grad", ")", ":", "\n", "        ", "self", ".", "gradients", "=", "grad", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.VGG.forward": [[24, 35], ["range", "len", "torch.nn.ModuleList", "x.register_hook", "result.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "target_layer", "=", "11", ")", ":", "\n", "        ", "result", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "nn", ".", "ModuleList", "(", "self", ".", "features", ")", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "features", "[", "i", "]", "(", "x", ")", "\n", "if", "i", "==", "target_layer", ":", "\n", "                ", "self", ".", "activation", "=", "x", "\n", "h", "=", "x", ".", "register_hook", "(", "self", ".", "activations_hook", ")", "\n", "", "if", "i", "==", "2", "or", "i", "==", "5", "or", "i", "==", "8", "or", "i", "==", "11", "or", "i", "==", "14", "or", "i", "==", "17", "or", "i", "==", "20", "or", "i", "==", "23", "or", "i", "==", "26", "or", "i", "==", "29", "or", "i", "==", "32", "or", "i", "==", "35", "or", "i", "==", "38", ":", "\n", "                ", "result", ".", "append", "(", "x", ")", "\n", "\n", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.VGG.get_activations_gradient": [[36, 38], ["None"], "methods", ["None"], ["", "def", "get_activations_gradient", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "gradients", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.VGG.get_activations": [[39, 41], ["None"], "methods", ["None"], ["", "def", "get_activations", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.__init__": [[68, 83], ["super().__init__", "list", "torch.nn.ModuleList().eval", "enumerate", "torchvision.models.vgg16", "torch.nn.ModuleList", "type", "torch.nn.init.xavier_uniform", "print", "print"], "methods", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrain", ")", ":", "\n", "        ", "super", "(", "Vgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "features", "=", "list", "(", "vgg16", "(", "'vgg16-397923af.pth'", ")", ".", "features", ")", "\n", "\n", "if", "not", "pretrain", ":", "\n", "            ", "for", "ind", ",", "f", "in", "enumerate", "(", "features", ")", ":", "\n", "# nn.init.xavier_normal_(f)", "\n", "                ", "if", "type", "(", "f", ")", "is", "torch", ".", "nn", ".", "modules", ".", "conv", ".", "Conv2d", ":", "\n", "                    ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform", "(", "f", ".", "weight", ")", "\n", "print", "(", "\"Initialized\"", ",", "ind", ",", "f", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "\"Bypassed\"", ",", "ind", ",", "f", ")", "\n", "# print(\"Pre-trained Network loaded\")", "\n", "", "", "", "self", ".", "features", "=", "nn", ".", "ModuleList", "(", "features", ")", ".", "eval", "(", ")", "\n", "self", ".", "output", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.Vgg16.forward": [[84, 91], ["range", "output.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "31", ")", ":", "\n", "            ", "x", "=", "self", ".", "features", "[", "i", "]", "(", "x", ")", "\n", "if", "i", "==", "1", "or", "i", "==", "4", "or", "i", "==", "6", "or", "i", "==", "9", "or", "i", "==", "11", "or", "i", "==", "13", "or", "i", "==", "16", "or", "i", "==", "18", "or", "i", "==", "20", "or", "i", "==", "23", "or", "i", "==", "25", "or", "i", "==", "27", "or", "i", "==", "30", ":", "\n", "                ", "output", ".", "append", "(", "x", ")", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.make_layers": [[43, 61], ["range", "torch.nn.Sequential", "len", "outputs.append", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.init.xavier_uniform_", "torch.nn.MaxPool2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU"], "function", ["None"], ["", "", "def", "make_layers", "(", "cfg", ",", "use_bias", ",", "batch_norm", "=", "False", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "outputs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "cfg", ")", ")", ":", "\n", "        ", "if", "cfg", "[", "i", "]", "==", "'O'", ":", "\n", "            ", "outputs", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "layers", ")", ")", "\n", "", "elif", "cfg", "[", "i", "]", "==", "'M'", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "cfg", "[", "i", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "use_bias", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "conv2d", ".", "weight", ")", "\n", "if", "batch_norm", "and", "cfg", "[", "i", "+", "1", "]", "!=", "'M'", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "cfg", "[", "i", "]", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "cfg", "[", "i", "]", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.make_arch": [[63, 65], ["network.VGG", "network.make_layers"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.make_layers"], ["", "def", "make_arch", "(", "idx", ",", "cfg", ",", "use_bias", ",", "batch_norm", "=", "False", ")", ":", "\n", "    ", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "idx", "]", ",", "use_bias", ",", "batch_norm", "=", "batch_norm", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.get_networks": [[93, 132], ["Vgg16().cuda", "make_arch().cuda", "enumerate", "torch.nn.ModuleList", "print", "make_arch().cuda.load_state_dict", "network.Vgg16", "network.make_arch", "torch.load", "Vgg16().cuda.load_state_dict", "pathlib.Path().mkdir", "torch.save", "print", "torch.load", "Vgg16().cuda.state_dict", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.Niousha12_Knowledge_Distillation_AD.models.network.make_arch"], ["", "", "def", "get_networks", "(", "config", ",", "load_checkpoint", "=", "False", ")", ":", "\n", "    ", "equal_network_size", "=", "config", "[", "'equal_network_size'", "]", "\n", "pretrain", "=", "config", "[", "'pretrain'", "]", "\n", "experiment_name", "=", "config", "[", "'experiment_name'", "]", "\n", "dataset_name", "=", "config", "[", "'dataset_name'", "]", "\n", "normal_class", "=", "config", "[", "'normal_class'", "]", "\n", "use_bias", "=", "config", "[", "'use_bias'", "]", "\n", "cfg", "=", "{", "\n", "'A'", ":", "[", "64", ",", "64", ",", "'M'", ",", "128", ",", "128", ",", "'M'", ",", "256", ",", "256", ",", "256", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", ",", "512", ",", "512", ",", "512", ",", "'M'", "]", ",", "\n", "'B'", ":", "[", "16", ",", "16", ",", "'M'", ",", "16", ",", "128", ",", "'M'", ",", "16", ",", "16", ",", "256", ",", "'M'", ",", "16", ",", "16", ",", "512", ",", "'M'", ",", "16", ",", "16", ",", "512", ",", "'M'", "]", ",", "\n", "}", "\n", "\n", "if", "equal_network_size", ":", "\n", "        ", "config_type", "=", "'A'", "\n", "", "else", ":", "\n", "        ", "config_type", "=", "'B'", "\n", "\n", "", "vgg", "=", "Vgg16", "(", "pretrain", ")", ".", "cuda", "(", ")", "\n", "model", "=", "make_arch", "(", "config_type", ",", "cfg", ",", "use_bias", ",", "True", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "j", ",", "item", "in", "enumerate", "(", "nn", ".", "ModuleList", "(", "model", ".", "features", ")", ")", ":", "\n", "        ", "print", "(", "'layer : {} {}'", ".", "format", "(", "j", ",", "item", ")", ")", "\n", "\n", "", "if", "load_checkpoint", ":", "\n", "        ", "last_checkpoint", "=", "config", "[", "'last_checkpoint'", "]", "\n", "checkpoint_path", "=", "\"./outputs/{}/{}/checkpoints/\"", ".", "format", "(", "experiment_name", ",", "dataset_name", ")", "\n", "model", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "'{}Cloner_{}_epoch_{}.pth'", ".", "format", "(", "checkpoint_path", ",", "normal_class", ",", "last_checkpoint", ")", ")", ")", "\n", "if", "not", "pretrain", ":", "\n", "            ", "vgg", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "'{}Source_{}_random_vgg.pth'", ".", "format", "(", "checkpoint_path", ",", "normal_class", ")", ")", ")", "\n", "", "", "elif", "not", "pretrain", ":", "\n", "        ", "checkpoint_path", "=", "\"./outputs/{}/{}/checkpoints/\"", ".", "format", "(", "experiment_name", ",", "dataset_name", ")", "\n", "Path", "(", "checkpoint_path", ")", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "torch", ".", "save", "(", "vgg", ".", "state_dict", "(", ")", ",", "'{}Source_{}_random_vgg.pth'", ".", "format", "(", "checkpoint_path", ",", "normal_class", ")", ")", "\n", "print", "(", "\"Source Checkpoint saved!\"", ")", "\n", "\n", "", "return", "vgg", ",", "model", "\n", "", ""]]}