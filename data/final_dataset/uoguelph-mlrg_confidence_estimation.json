{"home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.ood_metrics.tpr95": [[6, 27], ["numpy.min", "numpy.max", "numpy.arange", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.sum", "numpy.float", "numpy.sum", "numpy.float", "numpy.sum", "len", "numpy.sum", "len"], "function", ["None"], ["def", "tpr95", "(", "ind_confidences", ",", "ood_confidences", ")", ":", "\n", "#calculate the falsepositive error when tpr is 95%", "\n", "    ", "Y1", "=", "ood_confidences", "\n", "X1", "=", "ind_confidences", "\n", "\n", "start", "=", "np", ".", "min", "(", "[", "np", ".", "min", "(", "X1", ")", ",", "np", ".", "min", "(", "Y1", ")", "]", ")", "\n", "end", "=", "np", ".", "max", "(", "[", "np", ".", "max", "(", "X1", ")", ",", "np", ".", "max", "(", "Y1", ")", "]", ")", "\n", "gap", "=", "(", "end", "-", "start", ")", "/", "100000", "\n", "\n", "total", "=", "0.0", "\n", "fpr", "=", "0.0", "\n", "for", "delta", "in", "np", ".", "arange", "(", "start", ",", "end", ",", "gap", ")", ":", "\n", "        ", "tpr", "=", "np", ".", "sum", "(", "np", ".", "sum", "(", "X1", ">=", "delta", ")", ")", "/", "np", ".", "float", "(", "len", "(", "X1", ")", ")", "\n", "error2", "=", "np", ".", "sum", "(", "np", ".", "sum", "(", "Y1", ">", "delta", ")", ")", "/", "np", ".", "float", "(", "len", "(", "Y1", ")", ")", "\n", "if", "tpr", "<=", "0.9505", "and", "tpr", ">=", "0.9495", ":", "\n", "            ", "fpr", "+=", "error2", "\n", "total", "+=", "1", "\n", "\n", "", "", "fprBase", "=", "fpr", "/", "total", "\n", "\n", "return", "fprBase", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.ood_metrics.detection": [[29, 59], ["numpy.min", "numpy.max", "numpy.arange", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.sum", "numpy.float", "numpy.sum", "numpy.float", "all_thresholds.append", "all_errors.append", "numpy.minimum", "numpy.sum", "len", "numpy.sum", "len"], "function", ["None"], ["", "def", "detection", "(", "ind_confidences", ",", "ood_confidences", ",", "n_iter", "=", "100000", ",", "return_data", "=", "False", ")", ":", "\n", "# calculate the minimum detection error", "\n", "    ", "Y1", "=", "ood_confidences", "\n", "X1", "=", "ind_confidences", "\n", "\n", "start", "=", "np", ".", "min", "(", "[", "np", ".", "min", "(", "X1", ")", ",", "np", ".", "min", "(", "Y1", ")", "]", ")", "\n", "end", "=", "np", ".", "max", "(", "[", "np", ".", "max", "(", "X1", ")", ",", "np", ".", "max", "(", "Y1", ")", "]", ")", "\n", "gap", "=", "(", "end", "-", "start", ")", "/", "n_iter", "\n", "\n", "best_error", "=", "1.0", "\n", "best_delta", "=", "None", "\n", "all_thresholds", "=", "[", "]", "\n", "all_errors", "=", "[", "]", "\n", "for", "delta", "in", "np", ".", "arange", "(", "start", ",", "end", ",", "gap", ")", ":", "\n", "        ", "tpr", "=", "np", ".", "sum", "(", "np", ".", "sum", "(", "X1", "<", "delta", ")", ")", "/", "np", ".", "float", "(", "len", "(", "X1", ")", ")", "\n", "error2", "=", "np", ".", "sum", "(", "np", ".", "sum", "(", "Y1", ">", "delta", ")", ")", "/", "np", ".", "float", "(", "len", "(", "Y1", ")", ")", "\n", "detection_error", "=", "(", "tpr", "+", "error2", ")", "/", "2.0", "\n", "\n", "if", "return_data", ":", "\n", "            ", "all_thresholds", ".", "append", "(", "delta", ")", "\n", "all_errors", ".", "append", "(", "detection_error", ")", "\n", "\n", "", "if", "detection_error", "<", "best_error", ":", "\n", "            ", "best_error", "=", "np", ".", "minimum", "(", "best_error", ",", "detection_error", ")", "\n", "best_delta", "=", "delta", "\n", "\n", "", "", "if", "return_data", ":", "\n", "        ", "return", "best_error", ",", "best_delta", ",", "all_errors", ",", "all_thresholds", "\n", "", "else", ":", "\n", "        ", "return", "best_error", ",", "best_delta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.CSVLogger.__init__": [[17, 32], ["open", "csv.writer", "vars", "csv.writer.writerow", "csv.DictWriter", "utils.CSVLogger.writer.writeheader", "utils.CSVLogger.csv_file.flush", "csv.writer.writerow", "getattr"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.CSVLogger.writerow", "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.CSVLogger.writerow"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "filename", "=", "'log.csv'", ",", "fieldnames", "=", "[", "'epoch'", "]", ")", ":", "\n", "\n", "        ", "self", ".", "filename", "=", "filename", "\n", "self", ".", "csv_file", "=", "open", "(", "filename", ",", "'w'", ")", "\n", "\n", "# Write model configuration at top of csv", "\n", "writer", "=", "csv", ".", "writer", "(", "self", ".", "csv_file", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "            ", "writer", ".", "writerow", "(", "[", "arg", ",", "getattr", "(", "args", ",", "arg", ")", "]", ")", "\n", "", "writer", ".", "writerow", "(", "[", "''", "]", ")", "\n", "\n", "self", ".", "writer", "=", "csv", ".", "DictWriter", "(", "self", ".", "csv_file", ",", "fieldnames", "=", "fieldnames", ")", "\n", "self", ".", "writer", ".", "writeheader", "(", ")", "\n", "\n", "self", ".", "csv_file", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.CSVLogger.writerow": [[33, 36], ["utils.CSVLogger.writer.writerow", "utils.CSVLogger.csv_file.flush"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.CSVLogger.writerow"], ["", "def", "writerow", "(", "self", ",", "row", ")", ":", "\n", "        ", "self", ".", "writer", ".", "writerow", "(", "row", ")", "\n", "self", ".", "csv_file", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.CSVLogger.close": [[37, 39], ["utils.CSVLogger.csv_file.close"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.CSVLogger.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "csv_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.Cutout.__init__": [[47, 49], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "length", ")", ":", "\n", "        ", "self", ".", "length", "=", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.Cutout.__call__": [[50, 78], ["img.size", "img.size", "numpy.random.choice", "numpy.ones", "numpy.random.randint", "numpy.random.randint", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "torch.from_numpy", "mask.expand_as.expand_as.expand_as"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (Tensor): Tensor image of size (C, H, W).\n        Returns:\n            Tensor: Image with n_holes of dimension length x length cut out of it.\n        \"\"\"", "\n", "h", "=", "img", ".", "size", "(", "1", ")", "\n", "w", "=", "img", ".", "size", "(", "2", ")", "\n", "\n", "if", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", ":", "\n", "            ", "mask", "=", "np", ".", "ones", "(", "(", "h", ",", "w", ")", ",", "np", ".", "float32", ")", "\n", "\n", "y", "=", "np", ".", "random", ".", "randint", "(", "h", ")", "\n", "x", "=", "np", ".", "random", ".", "randint", "(", "w", ")", "\n", "\n", "y1", "=", "np", ".", "clip", "(", "y", "-", "self", ".", "length", "/", "2", ",", "0", ",", "h", ")", "\n", "y2", "=", "np", ".", "clip", "(", "y", "+", "self", ".", "length", "/", "2", ",", "0", ",", "h", ")", "\n", "x1", "=", "np", ".", "clip", "(", "x", "-", "self", ".", "length", "/", "2", ",", "0", ",", "w", ")", "\n", "x2", "=", "np", ".", "clip", "(", "x", "+", "self", ".", "length", "/", "2", ",", "0", ",", "w", ")", "\n", "\n", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "0.", "\n", "\n", "mask", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "mask", "=", "mask", ".", "expand_as", "(", "img", ")", "\n", "img", "=", "img", "*", "mask", "\n", "\n", "", "return", "img", "\n", "", "", ""]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.utils.encode_onehot": [[6, 14], ["torch.FloatTensor", "onehot.cuda.zero_", "onehot.cuda.scatter_", "onehot.cuda.cuda", "labels.view", "labels.size"], "function", ["None"], ["def", "encode_onehot", "(", "labels", ",", "n_classes", ")", ":", "\n", "    ", "onehot", "=", "torch", ".", "FloatTensor", "(", "labels", ".", "size", "(", ")", "[", "0", "]", ",", "n_classes", ")", "\n", "labels", "=", "labels", ".", "data", "\n", "if", "labels", ".", "is_cuda", ":", "\n", "        ", "onehot", "=", "onehot", ".", "cuda", "(", ")", "\n", "", "onehot", ".", "zero_", "(", ")", "\n", "onehot", ".", "scatter_", "(", "1", ",", "labels", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "return", "onehot", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.datasets.GaussianNoise.__init__": [[8, 16], ["numpy.random.normal", "numpy.clip", "datasets.GaussianNoise.data.astype"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", "=", "(", "3", ",", "32", ",", "32", ")", ",", "n_samples", "=", "10000", ",", "mean", "=", "0.5", ",", "variance", "=", "1.0", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "n_samples", "=", "n_samples", "\n", "self", ".", "mean", "=", "mean", "\n", "self", ".", "variance", "=", "variance", "\n", "self", ".", "data", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "self", ".", "mean", ",", "scale", "=", "self", ".", "variance", ",", "size", "=", "(", "self", ".", "n_samples", ",", ")", "+", "self", ".", "size", ")", "\n", "self", ".", "data", "=", "np", ".", "clip", "(", "self", ".", "data", ",", "0", ",", "1", ")", "\n", "self", ".", "data", "=", "self", ".", "data", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.datasets.GaussianNoise.__len__": [[17, 19], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.datasets.GaussianNoise.__getitem__": [[20, 22], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "data", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.datasets.UniformNoise.__init__": [[27, 34], ["numpy.random.uniform", "datasets.UniformNoise.data.astype"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", "=", "(", "3", ",", "32", ",", "32", ")", ",", "n_samples", "=", "10000", ",", "low", "=", "0", ",", "high", "=", "1", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "n_samples", "=", "n_samples", "\n", "self", ".", "low", "=", "low", "\n", "self", ".", "high", "=", "high", "\n", "self", ".", "data", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "self", ".", "low", ",", "high", "=", "self", ".", "high", ",", "size", "=", "(", "self", ".", "n_samples", ",", ")", "+", "self", ".", "size", ")", "\n", "self", ".", "data", "=", "self", ".", "data", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.datasets.UniformNoise.__len__": [[35, 37], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.utils.datasets.UniformNoise.__getitem__": [[38, 40], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "data", "[", "idx", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.vgg.VGG.__init__": [[17, 23], ["torch.Module.__init__", "vgg.VGG._make_layers", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__", "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.vgg.VGG._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "\n", "self", ".", "confidence", "=", "nn", ".", "Linear", "(", "512", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.vgg.VGG.forward": [[24, 32], ["vgg.VGG.features", "out.view.view.view", "vgg.VGG.classifier", "vgg.VGG.confidence", "out.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "pred", "=", "self", ".", "classifier", "(", "out", ")", "\n", "confidence", "=", "self", ".", "confidence", "(", "out", ")", "\n", "\n", "return", "pred", ",", "confidence", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.vgg.VGG._make_layers": [[33, 46], ["torch.Sequential", "torch.AvgPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.wideresnet.BasicBlock.__init__": [[10, 24], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "stride", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "droprate", "=", "dropRate", "\n", "self", ".", "equalInOut", "=", "(", "in_planes", "==", "out_planes", ")", "\n", "self", ".", "convShortcut", "=", "(", "not", "self", ".", "equalInOut", ")", "and", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "0", ",", "bias", "=", "False", ")", "or", "None", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.wideresnet.BasicBlock.forward": [[24, 34], ["wideresnet.BasicBlock.relu2", "wideresnet.BasicBlock.conv2", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "wideresnet.BasicBlock.relu1", "wideresnet.BasicBlock.relu1", "wideresnet.BasicBlock.bn2", "torch.dropout", "torch.dropout", "torch.dropout", "wideresnet.BasicBlock.bn1", "wideresnet.BasicBlock.bn1", "wideresnet.BasicBlock.conv1", "wideresnet.BasicBlock.convShortcut"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "self", ".", "equalInOut", ":", "\n", "            ", "x", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "", "out", "=", "self", ".", "relu2", "(", "self", ".", "bn2", "(", "self", ".", "conv1", "(", "out", "if", "self", ".", "equalInOut", "else", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "return", "torch", ".", "add", "(", "x", "if", "self", ".", "equalInOut", "else", "self", ".", "convShortcut", "(", "x", ")", ",", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.wideresnet.NetworkBlock.__init__": [[36, 39], ["torch.Module.__init__", "wideresnet.NetworkBlock._make_layer"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__", "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseBlock._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "nb_layers", ",", "in_planes", ",", "out_planes", ",", "block", ",", "stride", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "NetworkBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "self", ".", "_make_layer", "(", "block", ",", "in_planes", ",", "out_planes", ",", "nb_layers", ",", "stride", ",", "dropRate", ")", "\n", "", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "out_planes", ",", "nb_layers", ",", "stride", ",", "dropRate", ")", ":", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.wideresnet.NetworkBlock._make_layer": [[39, 44], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "out_planes", ",", "nb_layers", ",", "stride", ",", "dropRate", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nb_layers", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "i", "==", "0", "and", "in_planes", "or", "out_planes", ",", "out_planes", ",", "i", "==", "0", "and", "stride", "or", "1", ",", "dropRate", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.wideresnet.NetworkBlock.forward": [[44, 46], ["wideresnet.NetworkBlock.layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layer", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.wideresnet.WideResNet.__init__": [[48, 80], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "wideresnet.NetworkBlock", "wideresnet.NetworkBlock", "wideresnet.NetworkBlock", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "wideresnet.WideResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "num_classes", ",", "widen_factor", "=", "1", ",", "dropRate", "=", "0.0", ",", "multiclass_confidence", "=", "False", ")", ":", "\n", "        ", "super", "(", "WideResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "nChannels", "=", "[", "16", ",", "16", "*", "widen_factor", ",", "32", "*", "widen_factor", ",", "64", "*", "widen_factor", "]", "\n", "assert", "(", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ")", "\n", "n", "=", "(", "depth", "-", "4", ")", "/", "6", "\n", "block", "=", "BasicBlock", "\n", "# 1st conv before any network block", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "nChannels", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "# 1st block", "\n", "self", ".", "block1", "=", "NetworkBlock", "(", "n", ",", "nChannels", "[", "0", "]", ",", "nChannels", "[", "1", "]", ",", "block", ",", "1", ",", "dropRate", ")", "\n", "# 2nd block", "\n", "self", ".", "block2", "=", "NetworkBlock", "(", "n", ",", "nChannels", "[", "1", "]", ",", "nChannels", "[", "2", "]", ",", "block", ",", "2", ",", "dropRate", ")", "\n", "# 3rd block", "\n", "self", ".", "block3", "=", "NetworkBlock", "(", "n", ",", "nChannels", "[", "2", "]", ",", "nChannels", "[", "3", "]", ",", "block", ",", "2", ",", "dropRate", ")", "\n", "# global average pooling and classifier", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "nChannels", "[", "3", "]", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "nChannels", "[", "3", "]", ",", "num_classes", ")", "\n", "self", ".", "nChannels", "=", "nChannels", "[", "3", "]", "\n", "\n", "self", ".", "confidence", "=", "nn", ".", "Linear", "(", "nChannels", "[", "3", "]", ",", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.wideresnet.WideResNet.forward": [[81, 94], ["wideresnet.WideResNet.conv1", "wideresnet.WideResNet.block1", "wideresnet.WideResNet.block2", "wideresnet.WideResNet.block3", "wideresnet.WideResNet.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "wideresnet.WideResNet.fc", "wideresnet.WideResNet.confidence", "wideresnet.WideResNet.bn1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "block1", "(", "out", ")", "\n", "out", "=", "self", ".", "block2", "(", "out", ")", "\n", "out", "=", "self", ".", "block3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "nChannels", ")", "\n", "\n", "pred", "=", "self", ".", "fc", "(", "out", ")", "\n", "confidence", "=", "self", ".", "confidence", "(", "out", ")", "\n", "\n", "return", "pred", ",", "confidence", "\n", "", "", ""]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.BasicBlock.__init__": [[10, 17], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "droprate", "=", "dropRate", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.BasicBlock.forward": [[17, 22], ["densenet.BasicBlock.conv1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "densenet.BasicBlock.relu", "torch.dropout", "torch.dropout", "torch.dropout", "densenet.BasicBlock.bn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "self", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "torch", ".", "cat", "(", "[", "x", ",", "out", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.BottleneckBlock.__init__": [[24, 35], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "BottleneckBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inter_planes", "=", "out_planes", "*", "4", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "inter_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "inter_planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "inter_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "droprate", "=", "dropRate", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.BottleneckBlock.forward": [[35, 43], ["densenet.BottleneckBlock.conv1", "densenet.BottleneckBlock.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "densenet.BottleneckBlock.relu", "torch.dropout", "torch.dropout", "torch.dropout", "densenet.BottleneckBlock.relu", "torch.dropout", "torch.dropout", "torch.dropout", "densenet.BottleneckBlock.bn1", "densenet.BottleneckBlock.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "self", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "inplace", "=", "False", ",", "training", "=", "self", ".", "training", ")", "\n", "", "out", "=", "self", ".", "conv2", "(", "self", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "inplace", "=", "False", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "torch", ".", "cat", "(", "[", "x", ",", "out", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.TransitionBlock.__init__": [[45, 52], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "TransitionBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "droprate", "=", "dropRate", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.TransitionBlock.forward": [[52, 57], ["densenet.TransitionBlock.conv1", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "densenet.TransitionBlock.relu", "torch.dropout", "torch.dropout", "torch.dropout", "densenet.TransitionBlock.bn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "self", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "inplace", "=", "False", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseBlock.__init__": [[59, 62], ["torch.Module.__init__", "densenet.DenseBlock._make_layer"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__", "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseBlock._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "nb_layers", ",", "in_planes", ",", "growth_rate", ",", "block", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "DenseBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "self", ".", "_make_layer", "(", "block", ",", "in_planes", ",", "growth_rate", ",", "nb_layers", ",", "dropRate", ")", "\n", "", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "growth_rate", ",", "nb_layers", ",", "dropRate", ")", ":", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseBlock._make_layer": [[62, 67], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "growth_rate", ",", "nb_layers", ",", "dropRate", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nb_layers", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "in_planes", "+", "i", "*", "growth_rate", ",", "growth_rate", ",", "dropRate", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseBlock.forward": [[67, 69], ["densenet.DenseBlock.layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layer", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__": [[71, 114], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "densenet.DenseBlock", "int", "densenet.TransitionBlock", "int", "densenet.DenseBlock", "int", "densenet.TransitionBlock", "int", "densenet.DenseBlock", "int", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "densenet.DenseNet3.modules", "int", "math.floor", "int", "math.floor", "isinstance", "math.floor", "math.floor", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.__init__"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "num_classes", ",", "growth_rate", "=", "12", ",", "\n", "reduction", "=", "0.5", ",", "bottleneck", "=", "True", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "DenseNet3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "in_planes", "=", "2", "*", "growth_rate", "\n", "n", "=", "(", "depth", "-", "4", ")", "/", "3", "\n", "if", "bottleneck", "==", "True", ":", "\n", "            ", "n", "=", "n", "/", "2", "\n", "block", "=", "BottleneckBlock", "\n", "", "else", ":", "\n", "            ", "block", "=", "BasicBlock", "\n", "# 1st conv before any dense block", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "in_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "# 1st block", "\n", "self", ".", "block1", "=", "DenseBlock", "(", "n", ",", "in_planes", ",", "growth_rate", ",", "block", ",", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "in_planes", "+", "n", "*", "growth_rate", ")", "\n", "self", ".", "trans1", "=", "TransitionBlock", "(", "in_planes", ",", "int", "(", "math", ".", "floor", "(", "in_planes", "*", "reduction", ")", ")", ",", "dropRate", "=", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "math", ".", "floor", "(", "in_planes", "*", "reduction", ")", ")", "\n", "# 2nd block", "\n", "self", ".", "block2", "=", "DenseBlock", "(", "n", ",", "in_planes", ",", "growth_rate", ",", "block", ",", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "in_planes", "+", "n", "*", "growth_rate", ")", "\n", "self", ".", "trans2", "=", "TransitionBlock", "(", "in_planes", ",", "int", "(", "math", ".", "floor", "(", "in_planes", "*", "reduction", ")", ")", ",", "dropRate", "=", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "math", ".", "floor", "(", "in_planes", "*", "reduction", ")", ")", "\n", "# 3rd block", "\n", "self", ".", "block3", "=", "DenseBlock", "(", "n", ",", "in_planes", ",", "growth_rate", ",", "block", ",", "dropRate", ")", "\n", "in_planes", "=", "int", "(", "in_planes", "+", "n", "*", "growth_rate", ")", "\n", "# global average pooling and classifier", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "in_planes", ",", "num_classes", ")", "\n", "self", ".", "in_planes", "=", "in_planes", "\n", "\n", "self", ".", "confidence", "=", "nn", ".", "Linear", "(", "in_planes", ",", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.uoguelph-mlrg_confidence_estimation.models.densenet.DenseNet3.forward": [[115, 128], ["densenet.DenseNet3.conv1", "densenet.DenseNet3.trans1", "densenet.DenseNet3.trans2", "densenet.DenseNet3.block3", "densenet.DenseNet3.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "densenet.DenseNet3.fc", "densenet.DenseNet3.confidence", "densenet.DenseNet3.block1", "densenet.DenseNet3.block2", "densenet.DenseNet3.bn1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "trans1", "(", "self", ".", "block1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans2", "(", "self", ".", "block2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "block3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "in_planes", ")", "\n", "\n", "pred", "=", "self", ".", "fc", "(", "out", ")", "\n", "confidence", "=", "self", ".", "confidence", "(", "out", ")", "\n", "\n", "return", "pred", ",", "confidence", "\n", "", "", ""]]}