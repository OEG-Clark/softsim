{"home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.moviment_mnist_gen.data_gen": [[8, 42], ["numpy.load", "numpy.rollaxis", "numpy.reshape", "numpy.asarray", "print", "print", "moviment_mnist_gen.visualize_moviment_mnist"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.moviment_mnist_gen.visualize_moviment_mnist"], ["def", "data_gen", "(", "n_samples", "=", "10000", ",", "im_size", "=", "64", ",", "n_frames", "=", "20", ",", "debug", "=", "False", ",", "debug_opencv", "=", "False", ")", ":", "\n", "\n", "\t", "mov_mnist", "=", "np", ".", "load", "(", "\"mnist_test_seq.npy\"", ")", "\n", "\n", "# Change shape (20, 10000, 64, 64) to (10000, 20, 64, 64)", "\n", "mov_mnist", "=", "np", ".", "rollaxis", "(", "np", ".", "asarray", "(", "mov_mnist", ")", ",", "1", ",", "0", ")", "\n", "\n", "## Limit n_samples", "\n", "if", "(", "n_samples", "!=", "10000", ")", ":", "\n", "\t\t", "mov_mnist", "=", "mov_mnist", "[", "0", ":", "n_samples", "]", "\n", "\n", "\n", "## Limit img_size", "\n", "#aux = []", "\n", "#if(im_size != 64):", "\n", "#\tfor i in range(0,len(mov_mnist)):", "\n", "#\t\tfor j in range(0,n_frames):", "\n", "#\t\t\tteste = cv2.resize(mov_mnist[i][j], dsize=(32,32))", "\n", "#\t\t\taux.append(teste)", "\n", "#\t\t\tprint(np.asarray(aux[i]).shape)", "\n", "#\t\t\tcv2.imshow(\"Testando\", np.asarray(aux[i]))", "\n", "#\t\t\tcv2.waitKey(0)", "\n", "", "if", "(", "debug", ")", ":", "\n", "\t\t", "print", "(", "mov_mnist", ".", "shape", ")", "\n", "\n", "# Reshape (10000, 20, 64, 64) to (10000, 1, 20, 64, 64)", "\n", "", "mov_mnist", "=", "np", ".", "reshape", "(", "mov_mnist", ",", "(", "mov_mnist", ".", "shape", "[", "0", "]", ",", "1", ",", "mov_mnist", ".", "shape", "[", "1", "]", ",", "mov_mnist", ".", "shape", "[", "2", "]", ",", "mov_mnist", ".", "shape", "[", "3", "]", ")", ")", "\n", "if", "(", "debug", ")", ":", "\n", "\t\t", "print", "(", "mov_mnist", ".", "shape", ")", "\n", "\n", "", "if", "(", "debug_opencv", ")", ":", "\n", "\t\t", "visualize_moviment_mnist", "(", "mov_mnist", ")", "\n", "\n", "", "return", "mov_mnist", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.moviment_mnist_gen.visualize_moviment_mnist": [[43, 49], ["range", "len", "range", "cv2.imshow", "cv2.waitKey"], "function", ["None"], ["", "def", "visualize_moviment_mnist", "(", "mov_mnist", ")", ":", "\n", "\t", "import", "cv2", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "mov_mnist", ")", ")", ":", "\n", "\t\t", "for", "k", "in", "range", "(", "0", ",", "mov_mnist", ".", "shape", "[", "2", "]", ")", ":", "\n", "\t\t\t", "cv2", ".", "imshow", "(", "\"Teste\"", ",", "mov_mnist", "[", "i", "]", "[", "0", "]", "[", "k", "]", "[", ":", "]", "[", ":", "]", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.models_zoo.Generator_conv.__init__": [[7, 31], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LSTM", "torch.LSTM", "torch.LSTM", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "cuda_mode", ")", ":", "\n", "\t\t", "super", "(", "Generator_conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cuda_mode", "=", "cuda_mode", "\n", "\n", "## Considering (30, 90) inputs", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose1d", "(", "100", ",", "1024", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose1d", "(", "1024", ",", "512", ",", "kernel_size", "=", "8", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose1d", "(", "512", ",", "256", ",", "kernel_size", "=", "12", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose1d", "(", "256", ",", "30", ",", "kernel_size", "=", "16", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "30", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "90", ",", "256", ",", "2", ",", "bidirectional", "=", "True", ",", "batch_first", "=", "False", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "256", "*", "2", ",", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.models_zoo.Generator_conv.forward": [[32, 52], ["models_zoo.Generator_conv.features", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "models_zoo.Generator_conv.lstm", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "h0.cuda.cuda.cuda", "c0.cuda.cuda.cuda", "models_zoo.Generator_conv.fc", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "30", ",", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "batch_size", "=", "x", ".", "size", "(", "1", ")", "\n", "seq_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "h0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "c0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "h0", "=", "h0", ".", "cuda", "(", ")", "\n", "c0", "=", "c0", ".", "cuda", "(", ")", "\n", "\n", "\n", "", "x", ",", "h_c", "=", "self", ".", "lstm", "(", "x", ",", "(", "h0", ",", "c0", ")", ")", "\n", "\n", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc", "(", "x", ".", "view", "(", "batch_size", "*", "seq_size", ",", "-", "1", ")", ")", ")", "\n", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "seq_size", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.models_zoo.Generator_linear.__init__": [[55, 80], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LSTM", "torch.LSTM", "torch.LSTM", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "cuda_mode", ")", ":", "\n", "\t\t", "super", "(", "Generator_linear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cuda_mode", "=", "cuda_mode", "\n", "\n", "## Considering (30, 90) inputs", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "#nn.Linear(100, 512, bias = False),", "\n", "#nn.BatchNorm1d(512),\t", "\n", "#nn.ReLU(),\t", "\n", "#nn.Linear(512, 1024, bias = False),\t", "\n", "#nn.BatchNorm1d(1024),", "\n", "#nn.ReLU(),\t \t\t", "\n", "#nn.Linear(1024, 2048, bias = False),\t", "\n", "#nn.BatchNorm1d(2048),\t", "\n", "#nn.ReLU(),", "\n", "#nn.Linear(2048, 3840, bias = False),", "\n", "nn", ".", "Linear", "(", "100", ",", "1920", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "1920", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "128", ",", "256", ",", "2", ",", "bidirectional", "=", "True", ",", "batch_first", "=", "False", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "256", "*", "2", ",", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.models_zoo.Generator_linear.forward": [[81, 101], ["models_zoo.Generator_linear.features", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "models_zoo.Generator_linear.lstm", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.squeeze", "torch.tanh.squeeze", "torch.tanh.squeeze", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "h0.cuda.cuda.cuda", "c0.cuda.cuda.cuda", "models_zoo.Generator_linear.fc", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "features", "(", "x", ".", "squeeze", "(", "2", ")", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "15", ",", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "batch_size", "=", "x", ".", "size", "(", "1", ")", "\n", "seq_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "h0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "c0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "h0", "=", "h0", ".", "cuda", "(", ")", "\n", "c0", "=", "c0", ".", "cuda", "(", ")", "\n", "\n", "", "x", ",", "h_c", "=", "self", ".", "lstm", "(", "x", ",", "(", "h0", ",", "c0", ")", ")", "\n", "\n", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc", "(", "x", ".", "view", "(", "batch_size", "*", "seq_size", ",", "-", "1", ")", ")", ")", "\n", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "seq_size", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.models_zoo.frames_generator.__init__": [[103, 144], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "models_zoo.frames_generator.output_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.frames_generator.output_layer.add_module", "len", "models_zoo.frames_generator.hidden_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.frames_generator.hidden_layer.add_module", "models_zoo.frames_generator.hidden_layer.add_module", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "str", "str", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "str", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "super", "(", "frames_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_filters", "=", "[", "1024", ",", "512", ",", "256", ",", "128", "]", "\n", "input_dim", "=", "100", "\n", "output_dim", "=", "1", "\n", "\n", "# Hidden layers", "\n", "self", ".", "hidden_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "num_filters", ")", ")", ":", "\n", "# Deconvolutional layer", "\n", "\t\t\t", "if", "i", "==", "0", ":", "\n", "\t\t\t\t", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "input_dim", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "num_filters", "[", "i", "-", "1", "]", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "", "deconv_name", "=", "'deconv'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "deconv_name", ",", "deconv", ")", "\n", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "deconv", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "deconv", ".", "bias", ",", "0.0", ")", "\n", "\n", "# Batch normalization", "\n", "bn_name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "bn_name", ",", "torch", ".", "nn", ".", "BatchNorm2d", "(", "num_filters", "[", "i", "]", ")", ")", "\n", "\n", "# Activation", "\n", "act_name", "=", "'act'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "act_name", ",", "torch", ".", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "# Output layer", "\n", "", "self", ".", "output_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "# Deconvolutional layer", "\n", "out", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "num_filters", "[", "i", "]", ",", "output_dim", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'out'", ",", "out", ")", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "out", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "out", ".", "bias", ",", "0.0", ")", "\n", "# Activation", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'act'", ",", "torch", ".", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.models_zoo.frames_generator.forward": [[145, 150], ["models_zoo.frames_generator.hidden_layer", "models_zoo.frames_generator.output_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "\t\t", "h", "=", "self", ".", "hidden_layer", "(", "x", ")", "\n", "out", "=", "self", ".", "output_layer", "(", "h", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.models_zoo.Discriminator.__init__": [[152, 203], ["super().__init__", "torch.utils.weight_norm", "torch.utils.weight_norm", "torch.utils.weight_norm", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "models_zoo.Discriminator.output_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.Discriminator.output_layer.add_module", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "len", "models_zoo.Discriminator.hidden_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.Discriminator.hidden_layer.add_module", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "optimizer", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "str", "models_zoo.Discriminator.hidden_layer.add_module", "str", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "optimizer", "str", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "list", "list", "optimizer", "models_zoo.Discriminator.hidden_layer.parameters", "models_zoo.Discriminator.output_layer.parameters", "list", "list", "models_zoo.Discriminator.hidden_layer.parameters", "models_zoo.Discriminator.output_layer.parameters", "list", "list", "models_zoo.Discriminator.hidden_layer.parameters", "models_zoo.Discriminator.output_layer.parameters"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "optimizer", ",", "optimizer_name", ",", "lr", ",", "betas", ",", "batch_norm", "=", "False", ")", ":", "\n", "\t\t", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "projection", "=", "nn", ".", "utils", ".", "weight_norm", "(", "nn", ".", "Conv3d", "(", "3", ",", "1", ",", "kernel_size", "=", "(", "8", ",", "8", ",", "8", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "name", "=", "\"weight\"", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "projection", ".", "weight_g", ",", "1", ")", "\n", "\n", "# Hidden layers", "\n", "self", ".", "hidden_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "#num_filters = [256, 512, 1024]", "\n", "#num_filters = [256, 512, 768]", "\n", "num_filters", "=", "[", "128", ",", "256", ",", "512", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "num_filters", ")", ")", ":", "\n", "# Convolutional layer", "\n", "\t\t\t", "if", "i", "==", "0", ":", "\n", "\t\t\t\t", "conv", "=", "nn", ".", "Conv3d", "(", "1", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "conv", "=", "nn", ".", "Conv3d", "(", "num_filters", "[", "i", "-", "1", "]", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "conv_name", "=", "'conv'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "conv_name", ",", "conv", ")", "\n", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "conv", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "conv", ".", "bias", ",", "0.0", ")", "\n", "\n", "# Batch normalization", "\n", "if", "i", "!=", "0", "and", "batch_norm", ":", "\n", "\t\t\t\t", "bn_name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "bn_name", ",", "torch", ".", "nn", ".", "BatchNorm3d", "(", "num_filters", "[", "i", "]", ")", ")", "\n", "\n", "# Activation", "\n", "", "act_name", "=", "'act'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "act_name", ",", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "\n", "# Output layer", "\n", "", "self", ".", "output_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "# Convolutional layer", "\n", "out", "=", "nn", ".", "Conv3d", "(", "num_filters", "[", "i", "]", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'out'", ",", "out", ")", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "out", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "out", ".", "bias", ",", "0.0", ")", "\n", "# Activation", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'act'", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "if", "optimizer_name", "==", "'adam'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ",", "betas", "=", "betas", ")", "\n", "", "elif", "optimizer_name", "==", "'amsgrad'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "amsgrad", "=", "True", ")", "\n", "", "elif", "optimizer_name", "==", "'rmsprop'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.models_zoo.Discriminator.forward": [[204, 209], ["models_zoo.Discriminator.projection", "models_zoo.Discriminator.hidden_layer", "models_zoo.Discriminator.output_layer"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "p_x", "=", "self", ".", "projection", "(", "x", ")", "\n", "h", "=", "self", ".", "hidden_layer", "(", "p_x", ")", "\n", "out", "=", "self", ".", "output_layer", "(", "h", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.data_load.Loader.__init__": [[10, 19], ["torch.utils.data.Dataset.__init__", "h5py.File", "len", "h5py.File.close"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "hdf5_name", ")", ":", "\n", "\t\t", "super", "(", "Loader", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hdf5_name", "=", "hdf5_name", "\n", "\n", "open_file", "=", "h5py", ".", "File", "(", "self", ".", "hdf5_name", ",", "'r'", ")", "\n", "self", ".", "length", "=", "len", "(", "open_file", "[", "'data'", "]", ")", "\n", "open_file", ".", "close", "(", ")", "\n", "\n", "self", ".", "open_file", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.data_load.Loader.__getitem__": [[20, 31], ["torch.from_numpy().float", "h5py.File", "torch.from_numpy"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "\t\t", "if", "not", "self", ".", "open_file", ":", "self", ".", "open_file", "=", "h5py", ".", "File", "(", "self", ".", "hdf5_name", ",", "'r'", ")", "\n", "\n", "scene", "=", "self", ".", "open_file", "[", "'data'", "]", "[", "index", "]", "\n", "scene", "=", "torch", ".", "from_numpy", "(", "scene", ")", ".", "float", "(", ")", "\n", "\n", "img", "=", "scene", "\n", "img", "=", "(", "img", "-", "0.5", ")", "/", "0.5", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.data_load.Loader.__len__": [[32, 34], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "length", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.test.denorm": [[15, 19], ["norm.clamp"], "function", ["None"], ["def", "denorm", "(", "unorm", ")", ":", "\n", "\t", "norm", "=", "(", "unorm", "+", "1", ")", "/", "2", "\n", "\n", "return", "norm", ".", "clamp", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.test.test_model": [[20, 66], ["f_generator.eval", "generator.eval", "torchvision.ToPILImage", "matplotlib.subplots", "range", "matplotlib.savefig", "matplotlib.close", "torch.randn().view", "generator.forward", "range", "torch.cat", "data.detach().cpu.detach().cpu", "test.save_gif", "zip", "matplotlib.subplots_adjust", "z_.cuda.cuda", "generator.forward.size", "f_generator", "frames_list.append", "axes[].flatten", "img.transpose.transpose", "ax.axis", "ax.set_adjustable", "ax.imshow", "torch.randn", "out[].contiguous", "test.denorm", "data.detach().cpu.detach", "str", "f_generator.detach"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.save_gif", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm"], ["", "def", "test_model", "(", "generator", ",", "f_generator", ",", "n_tests", ",", "cuda_mode", ",", "enhancement", ",", "delay", ")", ":", "\n", "\n", "\t", "f_generator", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "\n", "to_pil", "=", "transforms", ".", "ToPILImage", "(", ")", "\n", "\n", "n_cols", ",", "n_rows", "=", "(", "n_tests", ",", "15", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_cols", ",", "n_rows", ",", "figsize", "=", "(", "n_rows", ",", "n_cols", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_tests", ")", ":", "\n", "\n", "\t\t", "z_", "=", "torch", ".", "randn", "(", "1", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "\t\t\t", "z_", "=", "z_", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "generator", ".", "forward", "(", "z_", ")", "\n", "\n", "frames_list", "=", "[", "]", "\n", "\n", "for", "j", "in", "range", "(", "out", ".", "size", "(", "1", ")", ")", ":", "\n", "\t\t\t", "gen_frame", "=", "f_generator", "(", "out", "[", ":", ",", "j", ",", ":", "]", ".", "contiguous", "(", ")", ")", "\n", "frames_list", ".", "append", "(", "denorm", "(", "gen_frame", ".", "detach", "(", ")", ")", ")", "\n", "\n", "", "data", "=", "torch", ".", "cat", "(", "frames_list", ",", "0", ")", "\n", "data", "=", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "save_gif", "(", "data", ",", "str", "(", "i", "+", "1", ")", "+", "'_rec.gif'", ",", "enhance", "=", "enhancement", ",", "delay", "=", "delay", ")", "\n", "\n", "\n", "for", "ax", ",", "img", "in", "zip", "(", "axes", "[", "i", ",", ":", "]", ".", "flatten", "(", ")", ",", "data", ")", ":", "\n", "\n", "\t\t\t", "img", "=", "img", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_adjustable", "(", "'box-forced'", ")", "\n", "\n", "ax", ".", "imshow", "(", "img", ",", "aspect", "=", "'equal'", ")", "\n", "\n", "", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0", ",", "hspace", "=", "0", ")", "\n", "\n", "", "save_fn", "=", "'all.pdf'", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.test.save_gif": [[67, 79], ["torchvision.ToPILImage", "frames[].save", "subprocess.call", "PIL.ImageEnhance.Sharpness().enhance", "transforms.ToPILImage.", "PIL.ImageEnhance.Sharpness", "transforms.ToPILImage.", "str"], "function", ["None"], ["", "def", "save_gif", "(", "data", ",", "file_name", ",", "enhance", ",", "delay", ")", ":", "\n", "\n", "\t", "to_pil", "=", "transforms", ".", "ToPILImage", "(", ")", "\n", "\n", "if", "enhance", ":", "\n", "\t\t", "frames", "=", "[", "ImageEnhance", ".", "Sharpness", "(", "to_pil", "(", "frame", ")", ")", ".", "enhance", "(", "1.0", ")", "for", "frame", "in", "data", "]", "\n", "", "else", ":", "\n", "\t\t", "frames", "=", "[", "to_pil", "(", "frame", ")", "for", "frame", "in", "data", "]", "\n", "\n", "", "frames", "[", "0", "]", ".", "save", "(", "file_name", ",", "save_all", "=", "True", ",", "append_images", "=", "frames", "[", "1", ":", "]", ")", "\n", "\n", "subprocess", ".", "call", "(", "\"gifsicle --delay \"", "+", "str", "(", "delay", ")", "+", "\" \"", "+", "file_name", "+", "\" > \"", "+", "\"s\"", "+", "file_name", ",", "shell", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.test.plot_real": [[80, 109], ["data_load.Loader", "matplotlib.subplots", "range", "matplotlib.savefig", "matplotlib.close", "numpy.random.randint", "real_loader[].squeeze", "real_sample.transpose.transpose", "print", "zip", "matplotlib.subplots_adjust", "len", "real_sample.transpose.size", "axes[].flatten", "test.denorm", "ax.axis", "ax.set_adjustable", "ax.imshow", "denorm.transpose"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm"], ["", "def", "plot_real", "(", "n_tests", ",", "data_path", ")", ":", "\n", "\n", "\t", "real_loader", "=", "Loader", "(", "hdf5_name", "=", "data_path", ")", "\n", "\n", "n_cols", ",", "n_rows", "=", "(", "n_tests", ",", "15", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_cols", ",", "n_rows", ",", "figsize", "=", "(", "n_rows", ",", "n_cols", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_tests", ")", ":", "\n", "\n", "\t\t", "img_idx", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "real_loader", ")", ")", "\n", "real_sample", "=", "real_loader", "[", "img_idx", "]", ".", "squeeze", "(", ")", "\n", "real_sample", "=", "real_sample", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "print", "(", "real_sample", ".", "size", "(", ")", ")", "\n", "\n", "for", "ax", ",", "img", "in", "zip", "(", "axes", "[", "i", ",", ":", "]", ".", "flatten", "(", ")", ",", "real_sample", ")", ":", "\n", "\t\t\t", "img", "=", "denorm", "(", "img", ".", "transpose", "(", "0", ",", "-", "1", ")", ")", "\n", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_adjustable", "(", "'box-forced'", ")", "\n", "\n", "ax", ".", "imshow", "(", "img", ",", "aspect", "=", "'equal'", ")", "\n", "\n", "", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0", ",", "hspace", "=", "0", ")", "\n", "\n", "", "save_fn", "=", "'real.pdf'", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.test.plot_learningcurves": [[110, 118], ["enumerate", "matplotlib.show", "matplotlib.figure", "matplotlib.plot", "matplotlib.title"], "function", ["None"], ["", "def", "plot_learningcurves", "(", "history", ",", "keys", ")", ":", "\n", "\n", "\t", "for", "i", ",", "key", "in", "enumerate", "(", "keys", ")", ":", "\n", "\t\t", "plt", ".", "figure", "(", "i", "+", "1", ")", "\n", "plt", ".", "plot", "(", "history", "[", "key", "]", ")", "\n", "plt", ".", "title", "(", "key", ")", "\n", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.train_loop.TrainLoop.__init__": [[16, 42], ["os.path.join", "os.path.join", "os.getcwd", "train_loop.TrainLoop.load_checkpoint", "os.path.isdir", "os.mkdir", "train_loop.TrainLoop.save_epoch_fmt_generator.format"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.load_checkpoint"], ["\t", "def", "__init__", "(", "self", ",", "gen", ",", "f_gen", ",", "disc_list", ",", "optimizer", ",", "train_loader", ",", "nadir_slack", "=", "1.1", ",", "checkpoint_path", "=", "None", ",", "checkpoint_epoch", "=", "None", ",", "hyper", "=", "True", ",", "cuda", "=", "True", ")", ":", "\n", "\t\t", "if", "checkpoint_path", "is", "None", ":", "\n", "# Save to current directory", "\n", "\t\t\t", "self", ".", "checkpoint_path", "=", "os", ".", "getcwd", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "checkpoint_path", "=", "checkpoint_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "checkpoint_path", ")", ":", "\n", "\t\t\t\t", "os", ".", "mkdir", "(", "self", ".", "checkpoint_path", ")", "\n", "\n", "", "", "self", ".", "save_epoch_fmt_generator", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_path", ",", "'checkpoint_{}ep.pt'", ")", "\n", "self", ".", "save_epoch_fmt_disc", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_path", ",", "'D{}_checkpoint.pt'", ")", "\n", "self", ".", "cuda_mode", "=", "cuda", "\n", "self", ".", "generator", "=", "gen", "\n", "self", ".", "f_generator", "=", "f_gen", "\n", "self", ".", "disc_list", "=", "disc_list", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "train_loader", "=", "train_loader", "\n", "#self.valid_loader = valid_loader", "\n", "self", ".", "history", "=", "{", "'hv'", ":", "[", "]", ",", "'disc'", ":", "[", "]", "}", "\n", "self", ".", "total_iters", "=", "0", "\n", "self", ".", "cur_epoch", "=", "0", "\n", "self", ".", "nadir_slack", "=", "nadir_slack", "\n", "self", ".", "hyper_mode", "=", "hyper", "\n", "\n", "if", "checkpoint_epoch", "is", "not", "None", ":", "\n", "\t\t\t", "self", ".", "load_checkpoint", "(", "self", ".", "save_epoch_fmt_generator", ".", "format", "(", "checkpoint_epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.train_loop.TrainLoop.train": [[43, 74], ["print", "train_loop.TrainLoop.checkpointing", "print", "tqdm.tqdm.tqdm", "train_loop.TrainLoop.history[].append", "train_loop.TrainLoop.history[].append", "print", "enumerate", "train_loop.TrainLoop.train_step", "train_loop.TrainLoop.checkpointing"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.checkpointing", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train_step", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.checkpointing"], ["", "", "def", "train", "(", "self", ",", "n_epochs", "=", "1", ",", "patience", "=", "5", ",", "save_every", "=", "10", ")", ":", "\n", "\n", "\t\t", "while", "self", ".", "cur_epoch", "<", "n_epochs", ":", "\n", "\t\t\t", "print", "(", "'Epoch {}/{}'", ".", "format", "(", "self", ".", "cur_epoch", "+", "1", ",", "n_epochs", ")", ")", "\n", "train_iter", "=", "tqdm", "(", "enumerate", "(", "self", ".", "train_loader", ")", ")", "\n", "\n", "hv_epoch", "=", "0.0", "\n", "disc_epoch", "=", "0.0", "\n", "\n", "# Train step", "\n", "\n", "for", "t", ",", "batch", "in", "train_iter", ":", "\n", "\t\t\t\t", "hv", ",", "disc", "=", "self", ".", "train_step", "(", "batch", ")", "\n", "self", ".", "total_iters", "+=", "1", "\n", "hv_epoch", "+=", "hv", "\n", "disc_epoch", "+=", "disc", "\n", "\n", "", "self", ".", "history", "[", "'hv'", "]", ".", "append", "(", "hv_epoch", "/", "(", "t", "+", "1", ")", ")", "\n", "self", ".", "history", "[", "'disc'", "]", ".", "append", "(", "disc_epoch", "/", "(", "t", "+", "1", ")", ")", "\n", "\n", "print", "(", "'NLH and Discriminators loss : {:0.4f}, {:0.4f}'", ".", "format", "(", "self", ".", "history", "[", "'hv'", "]", "[", "-", "1", "]", ",", "self", ".", "history", "[", "'disc'", "]", "[", "-", "1", "]", ")", ")", "\n", "\n", "self", ".", "cur_epoch", "+=", "1", "\n", "\n", "if", "self", ".", "cur_epoch", "%", "save_every", "==", "0", ":", "\n", "\t\t\t\t", "self", ".", "checkpointing", "(", ")", "\n", "\n", "\n", "# saving final models", "\n", "", "", "print", "(", "'Saving final models...'", ")", "\n", "self", ".", "checkpointing", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.train_loop.TrainLoop.train_step": [[75, 145], ["train_loop.TrainLoop.generator.train", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "train_loop.TrainLoop.generator.forward", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.detach", "torch.cat.detach", "torch.cat.detach", "len", "train_loop.TrainLoop.optimizer.zero_grad", "loss_G.backward", "train_loop.TrainLoop.optimizer.step", "x.cuda.cuda.size", "x.cuda.cuda.size", "x.cuda.cuda.cuda", "z_.cuda.cuda.cuda", "y_real_.cuda.cuda.cuda", "y_fake_.cuda.cuda.cuda", "torch.cat.size", "torch.cat.size", "torch.cat.size", "train_loop.TrainLoop.f_generator", "frames_list.append", "disc.forward().squeeze", "disc.forward().squeeze", "disc.optimizer.zero_grad", "loss_disc.backward", "disc.optimizer.step", "loss_disc.item", "train_loop.TrainLoop.update_nadir_point", "enumerate", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "out[].unsqueeze().unsqueeze().contiguous", "train_loop.TrainLoop.unsqueeze", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "losses_list_var.append", "losses_list_float.append", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "len", "loss_G.item", "len", "x.cuda.cuda.size", "disc.forward", "disc.forward", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "losses_list_var[].item", "disc.forward().squeeze", "numpy.ones", "out[].unsqueeze().unsqueeze", "disc.forward().squeeze", "len", "disc.forward", "out[].unsqueeze", "disc.forward"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.update_nadir_point", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward"], ["", "def", "train_step", "(", "self", ",", "batch", ")", ":", "\n", "\n", "\t\t", "self", ".", "generator", ".", "train", "(", ")", "\n", "\n", "x", "=", "batch", "\n", "z_", "=", "torch", ".", "randn", "(", "x", ".", "size", "(", "0", ")", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ")", "\n", "y_real_", "=", "torch", ".", "ones", "(", "x", ".", "size", "(", "0", ")", ")", "\n", "y_fake_", "=", "torch", ".", "zeros", "(", "x", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "x", "=", "x", ".", "cuda", "(", ")", "\n", "z_", "=", "z_", ".", "cuda", "(", ")", "\n", "y_real_", "=", "y_real_", ".", "cuda", "(", ")", "\n", "y_fake_", "=", "y_fake_", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "self", ".", "generator", ".", "forward", "(", "z_", ")", "\n", "\n", "frames_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "out", ".", "size", "(", "1", ")", ")", ":", "\n", "\t\t\t", "gen_frame", "=", "self", ".", "f_generator", "(", "out", "[", ":", ",", "i", ",", ":", "]", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "frames_list", ".", "append", "(", "gen_frame", ".", "unsqueeze", "(", "2", ")", ")", "\n", "\n", "", "out", "=", "torch", ".", "cat", "(", "frames_list", ",", "2", ")", "\n", "\n", "out_d", "=", "out", ".", "detach", "(", ")", "\n", "\n", "loss_d", "=", "0", "\n", "\n", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t", "d_real", "=", "disc", ".", "forward", "(", "x", ")", ".", "squeeze", "(", ")", "\n", "d_fake", "=", "disc", ".", "forward", "(", "out_d", ")", ".", "squeeze", "(", ")", "\n", "loss_disc", "=", "F", ".", "binary_cross_entropy", "(", "d_real", ",", "y_real_", ")", "+", "F", ".", "binary_cross_entropy", "(", "d_fake", ",", "y_fake_", ")", "\n", "disc", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_disc", ".", "backward", "(", ")", "\n", "disc", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "loss_d", "+=", "loss_disc", ".", "item", "(", ")", "\n", "\n", "", "loss_d", "/=", "len", "(", "self", ".", "disc_list", ")", "\n", "\n", "## Train G", "\n", "\n", "loss_G", "=", "0", "\n", "\n", "if", "self", ".", "hyper_mode", ":", "\n", "\n", "\t\t\t", "losses_list_float", "=", "[", "]", "\n", "losses_list_var", "=", "[", "]", "\n", "\n", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t\t", "losses_list_var", ".", "append", "(", "F", ".", "binary_cross_entropy", "(", "disc", ".", "forward", "(", "out", ")", ".", "squeeze", "(", ")", ",", "y_real_", ")", ")", "\n", "losses_list_float", ".", "append", "(", "losses_list_var", "[", "-", "1", "]", ".", "item", "(", ")", ")", "\n", "\n", "", "self", ".", "update_nadir_point", "(", "losses_list_float", ")", "\n", "\n", "for", "i", ",", "loss", "in", "enumerate", "(", "losses_list_var", ")", ":", "\n", "\t\t\t\t", "loss_G", "-=", "torch", ".", "log", "(", "self", ".", "nadir", "-", "loss", ")", "\n", "\n", "", "", "else", ":", "\n", "\n", "\t\t\t", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t\t", "loss_G", "+=", "F", ".", "binary_cross_entropy", "(", "disc", ".", "forward", "(", "out", ")", ".", "squeeze", "(", ")", ",", "y_real_", ")", "\n", "", "self", ".", "proba", "=", "np", ".", "ones", "(", "len", "(", "self", ".", "disc_list", ")", ")", "*", "1", "/", "len", "(", "self", ".", "disc_list", ")", "\n", "\n", "", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_G", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "return", "loss_G", ".", "item", "(", ")", "/", "len", "(", "self", ".", "disc_list", ")", ",", "loss_d", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.train_loop.TrainLoop.checkpointing": [[146, 161], ["print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "enumerate", "train_loop.TrainLoop.generator.state_dict", "train_loop.TrainLoop.optimizer.state_dict", "train_loop.TrainLoop.save_epoch_fmt_generator.format", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "disc.state_dict", "disc.optimizer.state_dict", "train_loop.TrainLoop.save_epoch_fmt_disc.format"], "methods", ["None"], ["", "def", "checkpointing", "(", "self", ")", ":", "\n", "\n", "# Checkpointing", "\n", "\t\t", "print", "(", "'Checkpointing...'", ")", "\n", "ckpt", "=", "{", "'generator_state'", ":", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'history'", ":", "self", ".", "history", ",", "\n", "'total_iters'", ":", "self", ".", "total_iters", ",", "\n", "'cur_epoch'", ":", "self", ".", "cur_epoch", "}", "\n", "torch", ".", "save", "(", "ckpt", ",", "self", ".", "save_epoch_fmt_generator", ".", "format", "(", "self", ".", "cur_epoch", ")", ")", "\n", "\n", "for", "i", ",", "disc", "in", "enumerate", "(", "self", ".", "disc_list", ")", ":", "\n", "\t\t\t", "ckpt", "=", "{", "'generator_state'", ":", "disc", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state'", ":", "disc", ".", "optimizer", ".", "state_dict", "(", ")", "}", "\n", "torch", ".", "save", "(", "ckpt", ",", "self", ".", "save_epoch_fmt_disc", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.train_loop.TrainLoop.load_checkpoint": [[162, 183], ["os.path.isfile", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "train_loop.TrainLoop.generator.load_state_dict", "train_loop.TrainLoop.optimizer.load_state_dict", "enumerate", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "disc.load_state_dict", "disc.optimizer.load_state_dict", "train_loop.TrainLoop.save_epoch_fmt_disc.format"], "methods", ["None"], ["", "", "def", "load_checkpoint", "(", "self", ",", "ckpt", ")", ":", "\n", "\n", "\t\t", "if", "os", ".", "path", ".", "isfile", "(", "ckpt", ")", ":", "\n", "\n", "\t\t\t", "ckpt", "=", "torch", ".", "load", "(", "ckpt", ")", "\n", "# Load generator state", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "ckpt", "[", "'generator_state'", "]", ")", "\n", "# Load optimizer state", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer_state'", "]", ")", "\n", "# Load history", "\n", "self", ".", "history", "=", "ckpt", "[", "'history'", "]", "\n", "self", ".", "total_iters", "=", "ckpt", "[", "'total_iters'", "]", "\n", "self", ".", "cur_epoch", "=", "ckpt", "[", "'cur_epoch'", "]", "\n", "\n", "for", "i", ",", "disc", "in", "enumerate", "(", "self", ".", "disc_list", ")", ":", "\n", "\t\t\t\t", "ckpt", "=", "torch", ".", "load", "(", "self", ".", "save_epoch_fmt_disc", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "disc", ".", "load_state_dict", "(", "ckpt", "[", "'generator_state'", "]", ")", "\n", "disc", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer_state'", "]", ")", "\n", "\n", "", "", "else", ":", "\n", "\t\t\t", "print", "(", "'No checkpoint found at: {}'", ".", "format", "(", "ckpt", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.train_loop.TrainLoop.update_nadir_point": [[184, 186], ["float", "numpy.max"], "methods", ["None"], ["", "", "def", "update_nadir_point", "(", "self", ",", "losses_list", ")", ":", "\n", "\t\t", "self", ".", "nadir", "=", "float", "(", "np", ".", "max", "(", "losses_list", ")", "*", "self", ".", "nadir_slack", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.train_loop.TrainLoop.print_params_norms": [[187, 192], ["list", "print", "train_loop.TrainLoop.generator.parameters", "params.norm().item", "params.norm"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm"], ["", "def", "print_params_norms", "(", "self", ")", ":", "\n", "\t\t", "norm", "=", "0.0", "\n", "for", "params", "in", "list", "(", "self", ".", "generator", ".", "parameters", "(", ")", ")", ":", "\n", "\t\t\t", "norm", "+=", "params", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "", "print", "(", "'Sum of weights norms: {}'", ".", "format", "(", "norm", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.moviment_mnist.train_loop.TrainLoop.print_grad_norms": [[193, 198], ["list", "print", "train_loop.TrainLoop.generator.parameters", "params.grad.norm().item", "params.grad.norm"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm"], ["", "def", "print_grad_norms", "(", "self", ")", ":", "\n", "\t\t", "norm", "=", "0.0", "\n", "for", "params", "in", "list", "(", "self", ".", "generator", ".", "parameters", "(", ")", ")", ":", "\n", "\t\t\t", "norm", "+=", "params", ".", "grad", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "", "print", "(", "'Sum of grads norms: {}'", ".", "format", "(", "norm", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.data_load.Loader.__init__": [[10, 19], ["torch.utils.data.Dataset.__init__", "h5py.File", "len", "h5py.File.close"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "hdf5_name", ")", ":", "\n", "\t\t", "super", "(", "Loader", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hdf5_name", "=", "hdf5_name", "\n", "\n", "open_file", "=", "h5py", ".", "File", "(", "self", ".", "hdf5_name", ",", "'r'", ")", "\n", "self", ".", "length", "=", "len", "(", "open_file", "[", "'data'", "]", ")", "\n", "open_file", ".", "close", "(", ")", "\n", "\n", "self", ".", "open_file", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.data_load.Loader.__getitem__": [[20, 33], ["numpy.moveaxis", "numpy.moveaxis", "torch.from_numpy().float", "numpy.random.randint", "h5py.File", "torch.from_numpy().float.size", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "\t\t", "if", "not", "self", ".", "open_file", ":", "self", ".", "open_file", "=", "h5py", ".", "File", "(", "self", ".", "hdf5_name", ",", "'r'", ")", "\n", "\n", "scene", "=", "self", ".", "open_file", "[", "'data'", "]", "[", "index", "]", "\n", "scene", "=", "torch", ".", "from_numpy", "(", "scene", ")", ".", "float", "(", ")", "\n", "\n", "img", "=", "scene", "\n", "img", "=", "(", "img", "-", "0.5", ")", "/", "0.5", "\n", "\n", "return", "img", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "length", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.data_load.Loader.__len__": [[34, 36], ["None"], "methods", ["None"], ["", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.test.denorm": [[14, 18], ["norm.clamp"], "function", ["None"], ["\n", "def", "denorm", "(", "unorm", ")", ":", "\n", "\t", "norm", "=", "(", "unorm", "+", "1", ")", "/", "2", "\n", "\n", "return", "norm", ".", "clamp", "(", "0", ",", "1", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.test.plot_learningcurves": [[20, 28], ["enumerate", "matplotlib.show", "matplotlib.figure", "matplotlib.plot", "matplotlib.title"], "function", ["None"], ["", "def", "test_model", "(", "generator", ",", "f_generator", ",", "n_tests", ",", "cuda_mode", ",", "enhancement", ",", "delay", ")", ":", "\n", "\n", "\t", "f_generator", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "\n", "to_pil", "=", "transforms", ".", "ToPILImage", "(", ")", "\n", "\n", "n_cols", ",", "n_rows", "=", "(", "n_tests", ",", "15", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_cols", ",", "n_rows", ",", "figsize", "=", "(", "n_rows", ",", "n_cols", ")", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.test.test_model": [[30, 59], ["model.eval", "torchvision.transforms.transforms.ToPILImage", "torchvision.transforms.transforms.ToTensor", "torch.randn().view", "torch.randn().view", "torch.randn().view", "model.forward", "range", "z_.cuda.cuda", "model.forward.size", "out[].detach", "denorm().cpu", "to_pil.save", "torch.randn", "torch.randn", "torch.randn", "len", "to_pil.view", "PIL.ImageEnhance.Sharpness().enhance", "transforms.ToPILImage.", "to_pil.size", "test.denorm", "PIL.ImageEnhance.Sharpness", "transforms.ToPILImage.", "to_pil.max", "to_pil.min", "to_pil.min"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm"], ["for", "i", "in", "range", "(", "n_tests", ")", ":", "\n", "\n", "\t\t", "z_", "=", "torch", ".", "randn", "(", "1", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "\t\t\t", "z_", "=", "z_", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "generator", ".", "forward", "(", "z_", ")", "\n", "\n", "frames_list", "=", "[", "]", "\n", "\n", "for", "j", "in", "range", "(", "out", ".", "size", "(", "1", ")", ")", ":", "\n", "\t\t\t", "gen_frame", "=", "f_generator", "(", "out", "[", ":", ",", "j", ",", ":", "]", ".", "contiguous", "(", ")", ")", "\n", "frames_list", ".", "append", "(", "denorm", "(", "gen_frame", ".", "detach", "(", ")", ")", ")", "\n", "\n", "", "data", "=", "torch", ".", "cat", "(", "frames_list", ",", "0", ")", "\n", "data", "=", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "save_gif", "(", "data", ",", "str", "(", "i", "+", "1", ")", "+", "'_rec.gif'", ",", "enhance", "=", "enhancement", ",", "delay", "=", "delay", ")", "\n", "\n", "\n", "for", "ax", ",", "img", "in", "zip", "(", "axes", "[", "i", ",", ":", "]", ".", "flatten", "(", ")", ",", "data", ")", ":", "\n", "\n", "\t\t\t", "img", "=", "img", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_adjustable", "(", "'box-forced'", ")", "\n", "\n", "ax", ".", "imshow", "(", "img", ",", "aspect", "=", "'equal'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.test.save_samples": [[60, 112], ["generator.eval", "torchvision.transforms.transforms.ToPILImage", "torchvision.transforms.transforms.ToTensor", "torch.randn().view", "torch.randn().view", "torch.randn().view", "generator().view", "test.denorm", "matplotlib.subplots", "zip", "matplotlib.subplots_adjust", "matplotlib.savefig", "matplotlib.close", "noise.cuda.cuda", "axes.flatten", "ax.axis", "ax.set_adjustable", "to_tensor.cpu().detach", "os.path.exists", "os.mkdir", "torch.randn", "torch.randn", "torch.randn", "generator", "PIL.ImageEnhance.Sharpness().enhance", "transforms.ToTensor.", "ax.imshow", "ax.imshow", "to_tensor.cpu", "PIL.ImageEnhance.Sharpness", "transforms.ToPILImage.", "to_tensor.max", "to_tensor.min", "to_tensor.min"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm"], ["", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0", ",", "hspace", "=", "0", ")", "\n", "\n", "", "save_fn", "=", "'all.pdf'", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "", "def", "save_gif", "(", "data", ",", "file_name", ",", "enhance", ",", "delay", ")", ":", "\n", "\n", "\t", "to_pil", "=", "transforms", ".", "ToPILImage", "(", ")", "\n", "\n", "if", "enhance", ":", "\n", "\t\t", "frames", "=", "[", "ImageEnhance", ".", "Sharpness", "(", "to_pil", "(", "frame", ")", ")", ".", "enhance", "(", "1.0", ")", "for", "frame", "in", "data", "]", "\n", "", "else", ":", "\n", "\t\t", "frames", "=", "[", "to_pil", "(", "frame", ")", "for", "frame", "in", "data", "]", "\n", "\n", "", "frames", "[", "0", "]", ".", "save", "(", "file_name", ",", "save_all", "=", "True", ",", "append_images", "=", "frames", "[", "1", ":", "]", ")", "\n", "\n", "subprocess", ".", "call", "(", "\"gifsicle --delay \"", "+", "str", "(", "delay", ")", "+", "\" \"", "+", "file_name", "+", "\" > \"", "+", "\"s\"", "+", "file_name", ",", "shell", "=", "True", ")", "\n", "\n", "", "def", "plot_real", "(", "n_tests", ",", "data_path", ")", ":", "\n", "\n", "\t", "real_loader", "=", "Loader", "(", "hdf5_name", "=", "data_path", ")", "\n", "\n", "n_cols", ",", "n_rows", "=", "(", "n_tests", ",", "15", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_cols", ",", "n_rows", ",", "figsize", "=", "(", "n_rows", ",", "n_cols", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_tests", ")", ":", "\n", "\n", "\t\t", "img_idx", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "real_loader", ")", ")", "\n", "real_sample", "=", "real_loader", "[", "img_idx", "]", ".", "squeeze", "(", ")", "\n", "real_sample", "=", "real_sample", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "print", "(", "real_sample", ".", "size", "(", ")", ")", "\n", "\n", "for", "ax", ",", "img", "in", "zip", "(", "axes", "[", "i", ",", ":", "]", ".", "flatten", "(", ")", ",", "real_sample", ")", ":", "\n", "\t\t\t", "img", "=", "denorm", "(", "img", ".", "transpose", "(", "0", ",", "-", "1", ")", ")", "\n", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_adjustable", "(", "'box-forced'", ")", "\n", "\n", "ax", ".", "imshow", "(", "img", ",", "aspect", "=", "'equal'", ")", "\n", "\n", "", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0", ",", "hspace", "=", "0", ")", "\n", "\n", "", "save_fn", "=", "'real.pdf'", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "", "def", "plot_learningcurves", "(", "history", ",", "keys", ")", ":", "\n", "\n", "\t", "for", "i", ",", "key", "in", "enumerate", "(", "keys", ")", ":", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.model.Generator.__init__": [[7, 48], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "model.Generator.output_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "model.Generator.output_layer.add_module", "len", "model.Generator.hidden_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "model.Generator.hidden_layer.add_module", "model.Generator.hidden_layer.add_module", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "str", "str", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "str", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_filters", "=", "[", "1024", ",", "512", ",", "256", ",", "128", "]", "\n", "input_dim", "=", "100", "\n", "output_dim", "=", "1", "\n", "\n", "# Hidden layers", "\n", "self", ".", "hidden_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "num_filters", ")", ")", ":", "\n", "# Deconvolutional layer", "\n", "\t\t\t", "if", "i", "==", "0", ":", "\n", "\t\t\t\t", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "input_dim", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "num_filters", "[", "i", "-", "1", "]", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "", "deconv_name", "=", "'deconv'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "deconv_name", ",", "deconv", ")", "\n", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "deconv", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "deconv", ".", "bias", ",", "0.0", ")", "\n", "\n", "# Batch normalization", "\n", "bn_name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "bn_name", ",", "torch", ".", "nn", ".", "BatchNorm2d", "(", "num_filters", "[", "i", "]", ")", ")", "\n", "\n", "# Activation", "\n", "act_name", "=", "'act'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "act_name", ",", "torch", ".", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "# Output layer", "\n", "", "self", ".", "output_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "# Deconvolutional layer", "\n", "out", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "num_filters", "[", "i", "]", ",", "output_dim", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'out'", ",", "out", ")", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "out", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "out", ".", "bias", ",", "0.0", ")", "\n", "# Activation", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'act'", ",", "torch", ".", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.model.Generator.forward": [[49, 54], ["model.Generator.hidden_layer", "model.Generator.output_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "\t\t", "h", "=", "self", ".", "hidden_layer", "(", "x", ")", "\n", "out", "=", "self", ".", "output_layer", "(", "h", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.model.Discriminator.__init__": [[56, 108], ["super().__init__", "torch.utils.weight_norm", "torch.utils.weight_norm", "torch.utils.weight_norm", "model.Discriminator.projection.weight_g.data.fill_", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "model.Discriminator.output_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "model.Discriminator.output_layer.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "len", "model.Discriminator.hidden_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "model.Discriminator.hidden_layer.add_module", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "optimizer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "str", "model.Discriminator.hidden_layer.add_module", "str", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "optimizer", "str", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "list", "list", "optimizer", "model.Discriminator.hidden_layer.parameters", "model.Discriminator.output_layer.parameters", "list", "list", "model.Discriminator.hidden_layer.parameters", "model.Discriminator.output_layer.parameters", "list", "list", "model.Discriminator.hidden_layer.parameters", "model.Discriminator.output_layer.parameters"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "optimizer", ",", "optimizer_name", ",", "lr", ",", "betas", ",", "batch_norm", "=", "False", ")", ":", "\n", "\t\t", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_filters", "=", "[", "128", ",", "256", ",", "512", ",", "1024", "]", "\n", "input_dim", "=", "1", "\n", "output_dim", "=", "1", "\n", "\n", "self", ".", "projection", "=", "nn", ".", "utils", ".", "weight_norm", "(", "nn", ".", "Conv2d", "(", "input_dim", ",", "1", ",", "kernel_size", "=", "8", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ",", "name", "=", "\"weight\"", ")", "\n", "self", ".", "projection", ".", "weight_g", ".", "data", ".", "fill_", "(", "1", ")", "\n", "\n", "# Hidden layers", "\n", "self", ".", "hidden_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "num_filters", ")", ")", ":", "\n", "# Convolutional layer", "\n", "\t\t\t", "if", "i", "==", "0", ":", "\n", "\t\t\t\t", "conv", "=", "nn", ".", "Conv2d", "(", "1", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "conv", "=", "nn", ".", "Conv2d", "(", "num_filters", "[", "i", "-", "1", "]", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "", "conv_name", "=", "'conv'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "conv_name", ",", "conv", ")", "\n", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "conv", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "conv", ".", "bias", ",", "0.0", ")", "\n", "\n", "# Batch normalization", "\n", "if", "i", "!=", "0", "and", "batch_norm", ":", "\n", "\t\t\t\t", "bn_name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "bn_name", ",", "torch", ".", "nn", ".", "BatchNorm2d", "(", "num_filters", "[", "i", "]", ")", ")", "\n", "\n", "# Activation", "\n", "", "act_name", "=", "'act'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "act_name", ",", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "\n", "# Output layer", "\n", "", "self", ".", "output_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "# Convolutional layer", "\n", "out", "=", "nn", ".", "Conv2d", "(", "num_filters", "[", "i", "]", ",", "output_dim", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'out'", ",", "out", ")", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "out", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "out", ".", "bias", ",", "0.0", ")", "\n", "# Activation", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'act'", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "if", "optimizer_name", "==", "'adam'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ",", "betas", "=", "betas", ")", "\n", "", "elif", "optimizer_name", "==", "'amsgrad'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "amsgrad", "=", "True", ")", "\n", "", "elif", "optimizer_name", "==", "'rmsprop'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.model.Discriminator.forward": [[109, 114], ["model.Discriminator.projection", "model.Discriminator.hidden_layer", "model.Discriminator.output_layer"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "p_x", "=", "self", ".", "projection", "(", "x", ")", "\n", "h", "=", "self", ".", "hidden_layer", "(", "p_x", ")", "\n", "out", "=", "self", ".", "output_layer", "(", "h", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.MGD_utils.steep_direct_cost": [[5, 19], ["numpy.sum", "numpy.inner", "numpy.multiply"], "function", ["None"], ["def", "steep_direct_cost", "(", "alpha", ",", "grad_disc_matrix", "=", "[", "]", ")", ":", "\n", "\t", "\"\"\"\n\tCalculates ||sum_i alpha_i grad_disc_i||^2\n\t- alpha: k-dim array with alpha values\n\t- grad_disc_matrix: list with gradients of all discriminators\n\t\t\t\t\t  grad_disc_matrix = NxK, where N = number of params\n\t\"\"\"", "\n", "\n", "n_disc", "=", "grad_disc_matrix", ".", "shape", "[", "1", "]", "\n", "v", "=", "0", "\n", "\n", "v", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "grad_disc_matrix", ",", "alpha", ")", ",", "axis", "=", "1", ")", "\n", "\n", "return", "np", ".", "inner", "(", "v", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.MGD_utils.steep_direc_cost_deriv": [[21, 30], ["numpy.sum", "numpy.ndarray.tolist", "numpy.multiply", "numpy.matmul", "numpy.transpose"], "function", ["None"], ["", "def", "steep_direc_cost_deriv", "(", "alpha", ",", "grad_disc_matrix", "=", "[", "]", ")", ":", "\n", "\t", "n_disc", "=", "grad_disc_matrix", ".", "shape", "[", "1", "]", "\n", "v", "=", "0", "\n", "\n", "v", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "grad_disc_matrix", ",", "alpha", ")", ",", "axis", "=", "1", ")", "\n", "\n", "deriv", "=", "2", "*", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "v", ")", ",", "grad_disc_matrix", ")", "\n", "\n", "return", "np", ".", "ndarray", ".", "tolist", "(", "deriv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.MGD_utils.make_constraints": [[32, 43], ["range", "numpy.zeros", "cons.append", "numpy.array", "numpy.ones", "numpy.array", "numpy.sum"], "function", ["None"], ["", "def", "make_constraints", "(", "n_disc", ")", ":", "\n", "\t", "cons", "=", "[", "{", "'type'", ":", "'eq'", ",", "'fun'", ":", "lambda", "alpha", ":", "np", ".", "array", "(", "[", "np", ".", "sum", "(", "alpha", ")", "-", "1", "]", ")", ",", "'jac'", ":", "lambda", "alpha", ":", "np", ".", "ones", "(", "[", "1", ",", "n_disc", "]", ")", "}", "]", "\n", "\n", "for", "k", "in", "range", "(", "n_disc", ")", ":", "\n", "\t\t", "jacobian", "=", "np", ".", "zeros", "(", "[", "1", ",", "n_disc", "]", ")", "\n", "jacobian", "[", "0", ",", "k", "]", "=", "1.", "\n", "\n", "ineq", "=", "{", "'type'", ":", "'ineq'", ",", "'fun'", ":", "lambda", "alpha", ":", "np", ".", "array", "(", "[", "alpha", "[", "k", "]", "]", ")", ",", "'jac'", ":", "lambda", "alpha", ":", "jacobian", "}", "\n", "cons", ".", "append", "(", "ineq", ")", "\n", "\n", "", "return", "cons", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.__init__": [[17, 53], ["MGD_utils.make_constraints", "numpy.random.rand", "numpy.sum", "numpy.zeros", "os.getcwd", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "len", "len", "len", "train_loop.TrainLoop.load_checkpoint", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "os.path.isdir", "os.mkdir", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "str", "len", "str", "len"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.MGD_utils.make_constraints", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.load_checkpoint"], ["\t\t", "if", "checkpoint_path", "is", "None", ":", "\n", "# Save to current directory", "\n", "\t\t\t", "self", ".", "checkpoint_path", "=", "os", ".", "getcwd", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "checkpoint_path", "=", "checkpoint_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "checkpoint_path", ")", ":", "\n", "\t\t\t\t", "os", ".", "mkdir", "(", "self", ".", "checkpoint_path", ")", "\n", "\n", "", "", "self", ".", "save_epoch_fmt_generator", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_path", ",", "'checkpoint_{}ep.pt'", ")", "\n", "self", ".", "save_epoch_fmt_disc", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_path", ",", "'D{}_checkpoint.pt'", ")", "\n", "self", ".", "cuda_mode", "=", "cuda", "\n", "self", ".", "generator", "=", "gen", "\n", "self", ".", "f_generator", "=", "f_gen", "\n", "self", ".", "disc_list", "=", "disc_list", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "train_loader", "=", "train_loader", "\n", "#self.valid_loader = valid_loader", "\n", "self", ".", "history", "=", "{", "'hv'", ":", "[", "]", ",", "'disc'", ":", "[", "]", "}", "\n", "self", ".", "total_iters", "=", "0", "\n", "self", ".", "cur_epoch", "=", "0", "\n", "self", ".", "nadir_slack", "=", "nadir_slack", "\n", "self", ".", "hyper_mode", "=", "hyper", "\n", "\n", "if", "checkpoint_epoch", "is", "not", "None", ":", "\n", "\t\t\t", "self", ".", "load_checkpoint", "(", "self", ".", "save_epoch_fmt_generator", ".", "format", "(", "checkpoint_epoch", ")", ")", "\n", "\n", "", "", "def", "train", "(", "self", ",", "n_epochs", "=", "1", ",", "patience", "=", "5", ",", "save_every", "=", "10", ")", ":", "\n", "\n", "\t\t", "while", "self", ".", "cur_epoch", "<", "n_epochs", ":", "\n", "\t\t\t", "print", "(", "'Epoch {}/{}'", ".", "format", "(", "self", ".", "cur_epoch", "+", "1", ",", "n_epochs", ")", ")", "\n", "train_iter", "=", "tqdm", "(", "enumerate", "(", "self", ".", "train_loader", ")", ")", "\n", "\n", "hv_epoch", "=", "0.0", "\n", "disc_epoch", "=", "0.0", "\n", "\n", "# Train step", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.train": [[54, 81], ["print", "train_loop.TrainLoop.checkpointing", "print", "tqdm.tqdm.tqdm", "train_loop.TrainLoop.history[].append", "train_loop.TrainLoop.history[].append", "enumerate", "train_loop.TrainLoop.train_step", "train_loop.TrainLoop.history[].append", "train_loop.TrainLoop.history[].append", "train_loop.TrainLoop.checkpointing"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.checkpointing", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train_step", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.checkpointing"], ["for", "t", ",", "batch", "in", "train_iter", ":", "\n", "\t\t\t\t", "hv", ",", "disc", "=", "self", ".", "train_step", "(", "batch", ")", "\n", "self", ".", "total_iters", "+=", "1", "\n", "hv_epoch", "+=", "hv", "\n", "disc_epoch", "+=", "disc", "\n", "\n", "", "self", ".", "history", "[", "'hv'", "]", ".", "append", "(", "hv_epoch", "/", "(", "t", "+", "1", ")", ")", "\n", "self", ".", "history", "[", "'disc'", "]", ".", "append", "(", "disc_epoch", "/", "(", "t", "+", "1", ")", ")", "\n", "\n", "print", "(", "'NLH and Discriminators loss : {:0.4f}, {:0.4f}'", ".", "format", "(", "self", ".", "history", "[", "'hv'", "]", "[", "-", "1", "]", ",", "self", ".", "history", "[", "'disc'", "]", "[", "-", "1", "]", ")", ")", "\n", "\n", "self", ".", "cur_epoch", "+=", "1", "\n", "\n", "if", "self", ".", "cur_epoch", "%", "save_every", "==", "0", ":", "\n", "\t\t\t\t", "self", ".", "checkpointing", "(", ")", "\n", "\n", "\n", "# saving final models", "\n", "", "", "print", "(", "'Saving final models...'", ")", "\n", "self", ".", "checkpointing", "(", ")", "\n", "\n", "", "def", "train_step", "(", "self", ",", "batch", ")", ":", "\n", "\n", "\t\t", "self", ".", "generator", ".", "train", "(", ")", "\n", "\n", "x", "=", "batch", "\n", "z_", "=", "torch", ".", "randn", "(", "x", ".", "size", "(", "0", ")", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ")", "\n", "y_real_", "=", "torch", ".", "ones", "(", "x", ".", "size", "(", "0", ")", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.train_step": [[82, 254], ["torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "train_loop.TrainLoop.model.forward().detach", "len", "train_loop.TrainLoop.model.train", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "train_loop.TrainLoop.model.forward", "train_loop.TrainLoop.optimizer.zero_grad", "loss_G.backward", "train_loop.TrainLoop.optimizer.step", "x.cuda.cuda.size", "x.cuda.cuda.size", "x.cuda.cuda.cuda", "z_.cuda.cuda.cuda", "y_real_.cuda.cuda.cuda", "y_fake_.cuda.cuda.cuda", "disc.forward().squeeze", "disc.forward().squeeze", "disc.optimizer.zero_grad", "loss_disc.backward", "disc.optimizer.step", "loss_disc.item", "z_.cuda.cuda.cuda", "train_loop.TrainLoop.update_nadir_point", "enumerate", "train_loop.TrainLoop.model.forward", "enumerate", "train_loop.TrainLoop.update_prob", "loss_G.item", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "train_loop.TrainLoop.model.forward", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "losses_list_var.append", "losses_list_float.append", "torch.log", "torch.log", "torch.log", "torch.log", "prob_list.append", "numpy.asarray", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.nn.functional.softmax().detach().cpu().numpy", "torch.nn.functional.softmax().detach().cpu().numpy", "torch.nn.functional.softmax().detach().cpu().numpy", "torch.nn.functional.softmax().detach().cpu().numpy", "zip", "disc.forward().squeeze", "outs_after.append", "x.cuda.cuda.size", "disc.forward", "disc.forward", "x.cuda.cuda.size", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "losses_list_var[].item", "losses_list_var.append", "losses_list_float.append", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.nn.functional.softmax().detach().cpu().numpy", "torch.nn.functional.softmax().detach().cpu().numpy", "torch.nn.functional.softmax().detach().cpu().numpy", "torch.nn.functional.softmax().detach().cpu().numpy", "train_loop.TrainLoop.model.zero_grad", "train_loop.TrainLoop.model.forward", "zip", "disc.forward().squeeze.mean", "disc.forward().squeeze", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "losses_list_var[].item", "torch.nn.functional.softmax().detach().cpu", "torch.nn.functional.softmax().detach().cpu", "torch.nn.functional.softmax().detach().cpu", "torch.nn.functional.softmax().detach().cpu", "float", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "grads_list.append", "losses_list.append", "scipy.optimize.minimize", "train_loop.TrainLoop.model.zero_grad", "train_loop.TrainLoop.model.forward", "zip", "disc.forward", "disc.forward().squeeze", "disc.forward().squeeze", "train_loop.TrainLoop.get_gen_grads_norm", "torch.nn.functional.softmax().detach().cpu", "torch.nn.functional.softmax().detach().cpu", "torch.nn.functional.softmax().detach().cpu", "torch.nn.functional.softmax().detach().cpu", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "float", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "grads_list.append", "numpy.asarray", "losses_list.append", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "train_loop.TrainLoop.model.forward", "enumerate", "disc.forward", "torch.nn.functional.softmax().detach", "torch.nn.functional.softmax().detach", "torch.nn.functional.softmax().detach", "torch.nn.functional.softmax().detach", "disc.forward().squeeze", "disc.forward().squeeze", "train_loop.TrainLoop.get_gen_grads().cpu().detach().numpy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "float", "z_probs.cuda.cuda.cuda", "disc.forward().squeeze", "losses_list.append", "outs_before.append", "disc.forward", "disc.forward", "torch.nn.functional.softmax().detach", "torch.nn.functional.softmax().detach", "torch.nn.functional.softmax().detach", "torch.nn.functional.softmax().detach", "disc.forward().squeeze", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "disc.forward().squeeze.detach().mean", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "len", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "train_loop.TrainLoop.model.forward", "disc.forward", "disc.forward", "train_loop.TrainLoop.get_gen_grads().cpu().detach", "x.cuda.cuda.size", "disc.forward", "float", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "disc.forward().squeeze", "numpy.ones", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "train_loop.TrainLoop.model.forward", "disc.forward", "disc.forward().squeeze.detach", "len", "train_loop.TrainLoop.get_gen_grads().cpu", "disc.forward", "train_loop.TrainLoop.get_gen_grads"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.update_nadir_point", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.update_prob", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward"], ["y_fake_", "=", "torch", ".", "zeros", "(", "x", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "x", "=", "x", ".", "cuda", "(", ")", "\n", "z_", "=", "z_", ".", "cuda", "(", ")", "\n", "y_real_", "=", "y_real_", ".", "cuda", "(", ")", "\n", "y_fake_", "=", "y_fake_", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "self", ".", "generator", ".", "forward", "(", "z_", ")", "\n", "\n", "frames_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "out", ".", "size", "(", "1", ")", ")", ":", "\n", "\t\t\t", "gen_frame", "=", "self", ".", "f_generator", "(", "out", "[", ":", ",", "i", ",", ":", "]", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "frames_list", ".", "append", "(", "gen_frame", ".", "unsqueeze", "(", "2", ")", ")", "\n", "\n", "", "out", "=", "torch", ".", "cat", "(", "frames_list", ",", "2", ")", "\n", "\n", "out_d", "=", "out", ".", "detach", "(", ")", "\n", "\n", "loss_d", "=", "0", "\n", "\n", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t", "d_real", "=", "disc", ".", "forward", "(", "x", ")", ".", "squeeze", "(", ")", "\n", "d_fake", "=", "disc", ".", "forward", "(", "out_d", ")", ".", "squeeze", "(", ")", "\n", "loss_disc", "=", "F", ".", "binary_cross_entropy", "(", "d_real", ",", "y_real_", ")", "+", "F", ".", "binary_cross_entropy", "(", "d_fake", ",", "y_fake_", ")", "\n", "disc", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_disc", ".", "backward", "(", ")", "\n", "disc", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "loss_d", "+=", "loss_disc", ".", "item", "(", ")", "\n", "\n", "", "loss_d", "/=", "len", "(", "self", ".", "disc_list", ")", "\n", "\n", "## Train G", "\n", "\n", "loss_G", "=", "0", "\n", "\n", "if", "self", ".", "hyper_mode", ":", "\n", "\n", "\t\t\t", "losses_list_float", "=", "[", "]", "\n", "losses_list_var", "=", "[", "]", "\n", "\n", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t\t", "losses_list_var", ".", "append", "(", "F", ".", "binary_cross_entropy", "(", "disc", ".", "forward", "(", "out", ")", ".", "squeeze", "(", ")", ",", "y_real_", ")", ")", "\n", "losses_list_float", ".", "append", "(", "losses_list_var", "[", "-", "1", "]", ".", "item", "(", ")", ")", "\n", "\n", "", "self", ".", "update_nadir_point", "(", "losses_list_float", ")", "\n", "\n", "for", "i", ",", "loss", "in", "enumerate", "(", "losses_list_var", ")", ":", "\n", "\t\t\t\t", "loss_G", "-=", "torch", ".", "log", "(", "self", ".", "nadir", "-", "loss", ")", "\n", "\n", "", "", "else", ":", "\n", "\n", "\t\t\t", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t\t", "loss_G", "+=", "F", ".", "binary_cross_entropy", "(", "disc", ".", "forward", "(", "out", ")", ".", "squeeze", "(", ")", ",", "y_real_", ")", "\n", "", "self", ".", "proba", "=", "np", ".", "ones", "(", "len", "(", "self", ".", "disc_list", ")", ")", "*", "1", "/", "len", "(", "self", ".", "disc_list", ")", "\n", "\n", "", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_G", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "return", "loss_G", ".", "item", "(", ")", "/", "len", "(", "self", ".", "disc_list", ")", ",", "loss_d", "\n", "\n", "", "def", "checkpointing", "(", "self", ")", ":", "\n", "\n", "# Checkpointing", "\n", "\t\t", "print", "(", "'Checkpointing...'", ")", "\n", "ckpt", "=", "{", "'generator_state'", ":", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'history'", ":", "self", ".", "history", ",", "\n", "'total_iters'", ":", "self", ".", "total_iters", ",", "\n", "'cur_epoch'", ":", "self", ".", "cur_epoch", "}", "\n", "torch", ".", "save", "(", "ckpt", ",", "self", ".", "save_epoch_fmt_generator", ".", "format", "(", "self", ".", "cur_epoch", ")", ")", "\n", "\n", "for", "i", ",", "disc", "in", "enumerate", "(", "self", ".", "disc_list", ")", ":", "\n", "\t\t\t", "ckpt", "=", "{", "'generator_state'", ":", "disc", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state'", ":", "disc", ".", "optimizer", ".", "state_dict", "(", ")", "}", "\n", "torch", ".", "save", "(", "ckpt", ",", "self", ".", "save_epoch_fmt_disc", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "\n", "", "", "def", "load_checkpoint", "(", "self", ",", "ckpt", ")", ":", "\n", "\n", "\t\t", "if", "os", ".", "path", ".", "isfile", "(", "ckpt", ")", ":", "\n", "\n", "\t\t\t", "ckpt", "=", "torch", ".", "load", "(", "ckpt", ")", "\n", "# Load generator state", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "ckpt", "[", "'generator_state'", "]", ")", "\n", "# Load optimizer state", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer_state'", "]", ")", "\n", "# Load history", "\n", "self", ".", "history", "=", "ckpt", "[", "'history'", "]", "\n", "self", ".", "total_iters", "=", "ckpt", "[", "'total_iters'", "]", "\n", "self", ".", "cur_epoch", "=", "ckpt", "[", "'cur_epoch'", "]", "\n", "\n", "for", "i", ",", "disc", "in", "enumerate", "(", "self", ".", "disc_list", ")", ":", "\n", "\t\t\t\t", "ckpt", "=", "torch", ".", "load", "(", "self", ".", "save_epoch_fmt_disc", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "disc", ".", "load_state_dict", "(", "ckpt", "[", "'generator_state'", "]", ")", "\n", "disc", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer_state'", "]", ")", "\n", "\n", "", "", "else", ":", "\n", "\t\t\t", "print", "(", "'No checkpoint found at: {}'", ".", "format", "(", "ckpt", ")", ")", "\n", "\n", "", "", "def", "update_nadir_point", "(", "self", ",", "losses_list", ")", ":", "\n", "\t\t", "self", ".", "nadir", "=", "float", "(", "np", ".", "max", "(", "losses_list", ")", "*", "self", ".", "nadir_slack", "+", "1e-8", ")", "\n", "\n", "", "def", "print_params_norms", "(", "self", ")", ":", "\n", "\t\t", "norm", "=", "0.0", "\n", "for", "params", "in", "list", "(", "self", ".", "generator", ".", "parameters", "(", ")", ")", ":", "\n", "\t\t\t", "norm", "+=", "params", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "", "print", "(", "'Sum of weights norms: {}'", ".", "format", "(", "norm", ")", ")", "\n", "\n", "", "def", "print_grad_norms", "(", "self", ")", ":", "\n", "\t\t", "norm", "=", "0.0", "\n", "for", "params", "in", "list", "(", "self", ".", "generator", ".", "parameters", "(", ")", ")", ":", "\n", "\t\t\t", "norm", "+=", "params", ".", "grad", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "", "print", "(", "'Sum of grads norms: {}'", ".", "format", "(", "norm", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.checkpointing": [[255, 273], ["print", "torch.save", "torch.save", "torch.save", "torch.save", "enumerate", "train_loop.TrainLoop.model.state_dict", "train_loop.TrainLoop.optimizer.state_dict", "train_loop.TrainLoop.save_epoch_fmt_gen.format", "torch.save", "torch.save", "torch.save", "torch.save", "disc.state_dict", "disc.optimizer.state_dict", "train_loop.TrainLoop.save_epoch_fmt_disc.format"], "methods", ["None"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.load_checkpoint": [[274, 300], ["train_loop.TrainLoop.save_epoch_fmt_gen.format", "os.path.isfile", "torch.load", "torch.load", "torch.load", "torch.load", "train_loop.TrainLoop.model.load_state_dict", "train_loop.TrainLoop.optimizer.load_state_dict", "enumerate", "print", "torch.load", "torch.load", "torch.load", "torch.load", "disc.load_state_dict", "disc.optimizer.load_state_dict", "train_loop.TrainLoop.save_epoch_fmt_disc.format"], "methods", ["None"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.print_grad_norms": [[301, 306], ["list", "print", "train_loop.TrainLoop.model.parameters", "params.grad.norm().item", "params.grad.norm"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.check_nans": [[307, 313], ["list", "train_loop.TrainLoop.model.parameters", "numpy.any", "numpy.any", "numpy.isnan", "print", "numpy.isnan", "print", "params.detach().cpu().numpy", "params.grad.detach().cpu().numpy", "params.detach().cpu", "params.grad.detach().cpu", "params.detach", "params.grad.detach"], "methods", ["None"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.define_nadir_point": [[314, 331], ["torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "train_loop.TrainLoop.model.forward", "float", "z_.cuda.cuda.size", "z_.cuda.cuda.cuda", "y_real_.cuda.cuda.cuda", "disc.forward().squeeze", "disc_outs.append", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.binary_cross_entropy().item", "torch.binary_cross_entropy().item", "numpy.max", "disc.forward", "torch.binary_cross_entropy", "torch.binary_cross_entropy"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.update_nadir_point": [[332, 334], ["float", "numpy.max"], "methods", ["None"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.train_loop.TrainLoop.update_prob": [[335, 343], ["range", "torch.nn.functional.softmax().data.cpu().numpy", "torch.nn.functional.softmax().data.cpu().numpy", "torch.nn.functional.softmax().data.cpu().numpy", "torch.nn.functional.softmax().data.cpu().numpy", "len", "zip", "torch.nn.functional.softmax().data.cpu", "torch.nn.functional.softmax().data.cpu", "torch.nn.functional.softmax().data.cpu", "torch.nn.functional.softmax().data.cpu", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["None"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.interp_z.denorm": [[14, 18], ["norm.clamp"], "function", ["None"], ["def", "denorm", "(", "unorm", ")", ":", "\n", "\t", "norm", "=", "(", "unorm", "+", "1", ")", "/", "2", "\n", "\n", "return", "norm", ".", "clamp", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.frames_generator.interp_z.interpolate": [[20, 65], ["matplotlib.subplots", "torch.randn().view", "torch.randn().view", "torch.randn().view", "model.forward", "list", "torch.stack", "torch.stack", "torch.stack", "print", "model.forward", "zip", "matplotlib.subplots_adjust", "matplotlib.savefig", "matplotlib.close", "z12.cuda.cuda", "z.cuda.append", "z.cuda.size", "z.cuda.cuda", "interp_z.denorm", "axes.flatten", "ax.axis", "ax.set_adjustable", "ax.imshow", "torch.randn", "torch.randn", "torch.randn", "numpy.arange", "x.detach().cpu", "interp_z.denorm", "interp_z.denorm", "out12[].detach().cpu", "x.detach", "out12[].detach().cpu", "out12[].detach", "out12[].detach", "img.max", "img.min", "img.min"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm"], ["", "def", "interpolate", "(", "model", ",", "n_between", ",", "cuda_mode", ")", ":", "\n", "\n", "\t", "n_cols", ",", "n_rows", "=", "(", "1", ",", "n_between", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_cols", ",", "n_rows", ",", "figsize", "=", "(", "n_rows", ",", "n_cols", ")", ")", "\n", "\n", "z12", "=", "torch", ".", "randn", "(", "2", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ",", "1", ")", "\n", "\n", "if", "cuda_mode", ":", "\n", "\t\t", "z12", "=", "z12", ".", "cuda", "(", ")", "\n", "\n", "", "out12", "=", "model", ".", "forward", "(", "z12", ")", "\n", "\n", "alpha_list", "=", "list", "(", "np", ".", "arange", "(", "1", ",", "n_between", ")", "/", "n_between", ")", "\n", "\n", "z", "=", "[", "]", "\n", "for", "alpha", "in", "alpha_list", ":", "\n", "\t\t", "z", ".", "append", "(", "(", "1", "-", "alpha", ")", "*", "z12", "[", "0", "]", "+", "alpha", "*", "z12", "[", "-", "1", "]", ")", "\n", "\n", "", "z", "=", "torch", ".", "stack", "(", "z", ")", "\n", "print", "(", "z", ".", "size", "(", ")", ")", "\n", "\n", "if", "cuda_mode", ":", "\n", "\t\t", "z", "=", "z", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "model", ".", "forward", "(", "z", ")", "\n", "\n", "out_interp", "=", "[", "x", ".", "detach", "(", ")", ".", "cpu", "(", ")", "for", "x", "in", "out", "]", "\n", "\n", "out_list", "=", "[", "out12", "[", "0", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "]", "+", "out_interp", "+", "[", "out12", "[", "-", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "]", "\n", "\n", "\n", "for", "ax", ",", "img", "in", "zip", "(", "axes", ".", "flatten", "(", ")", ",", "out_list", ")", ":", "\n", "\t\t", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_adjustable", "(", "'box-forced'", ")", "\n", "\n", "ax", ".", "imshow", "(", "img", ".", "squeeze", "(", ")", ",", "cmap", "=", "\"gray\"", ",", "aspect", "=", "'equal'", ")", "\n", "\n", "", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0", ",", "hspace", "=", "0", ")", "\n", "\n", "save_fn", "=", "'all.pdf'", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.models_zoo.Generator_conv.__init__": [[7, 31], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LSTM", "torch.LSTM", "torch.LSTM", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "cuda_mode", ")", ":", "\n", "\t\t", "super", "(", "Generator_conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cuda_mode", "=", "cuda_mode", "\n", "\n", "## Considering (30, 90) inputs", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose1d", "(", "100", ",", "1024", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose1d", "(", "1024", ",", "512", ",", "kernel_size", "=", "8", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose1d", "(", "512", ",", "256", ",", "kernel_size", "=", "12", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose1d", "(", "256", ",", "30", ",", "kernel_size", "=", "16", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "30", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "90", ",", "256", ",", "2", ",", "bidirectional", "=", "True", ",", "batch_first", "=", "False", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "256", "*", "2", ",", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.models_zoo.Generator_conv.forward": [[32, 52], ["models_zoo.Generator_conv.features", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "models_zoo.Generator_conv.lstm", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "h0.cuda.cuda.cuda", "c0.cuda.cuda.cuda", "models_zoo.Generator_conv.fc", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "30", ",", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "batch_size", "=", "x", ".", "size", "(", "1", ")", "\n", "seq_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "h0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "c0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "h0", "=", "h0", ".", "cuda", "(", ")", "\n", "c0", "=", "c0", ".", "cuda", "(", ")", "\n", "\n", "\n", "", "x", ",", "h_c", "=", "self", ".", "lstm", "(", "x", ",", "(", "h0", ",", "c0", ")", ")", "\n", "\n", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc", "(", "x", ".", "view", "(", "batch_size", "*", "seq_size", ",", "-", "1", ")", ")", ")", "\n", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "seq_size", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.models_zoo.Generator_linear.__init__": [[55, 79], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LSTM", "torch.LSTM", "torch.LSTM", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "cuda_mode", ")", ":", "\n", "\t\t", "super", "(", "Generator_linear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cuda_mode", "=", "cuda_mode", "\n", "\n", "## Considering (30, 90) inputs", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "#nn.Linear(100, 512, bias = False),", "\n", "#nn.BatchNorm1d(512),\t", "\n", "#nn.ReLU(),\t", "\n", "#nn.Linear(512, 1024, bias = False),\t", "\n", "#nn.BatchNorm1d(1024),", "\n", "#nn.ReLU(),\t \t\t", "\n", "#nn.Linear(1024, 2048, bias = False),\t", "\n", "#nn.BatchNorm1d(2048),\t", "\n", "#nn.ReLU(),", "\n", "#nn.Linear(2048, 3840, bias = False),", "\n", "nn", ".", "Linear", "(", "100", ",", "1920", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "1920", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "128", ",", "256", ",", "2", ",", "bidirectional", "=", "True", ",", "batch_first", "=", "False", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "256", "*", "2", ",", "100", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.models_zoo.Generator_linear.forward": [[80, 102], ["models_zoo.Generator_linear.features", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "models_zoo.Generator_linear.lstm", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.squeeze", "torch.tanh.squeeze", "torch.tanh.squeeze", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "h0.cuda.cuda.cuda", "c0.cuda.cuda.cuda", "models_zoo.Generator_linear.fc", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "features", "(", "x", ".", "squeeze", "(", "2", ")", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "15", ",", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "batch_size", "=", "x", ".", "size", "(", "1", ")", "\n", "seq_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "h0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "c0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "h0", "=", "h0", ".", "cuda", "(", ")", "\n", "c0", "=", "c0", ".", "cuda", "(", ")", "\n", "\n", "", "x", ",", "h_c", "=", "self", ".", "lstm", "(", "x", ",", "(", "h0", ",", "c0", ")", ")", "\n", "\n", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc", "(", "x", ".", "view", "(", "batch_size", "*", "seq_size", ",", "-", "1", ")", ")", ")", "\n", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "seq_size", ",", "-", "1", ")", "\n", "\n", "", "", "class", "frames_generator", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.models_zoo.frames_generator.__init__": [[104, 161], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "models_zoo.frames_generator.linear.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.frames_generator.linear.add_module", "models_zoo.frames_generator.linear.add_module", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "models_zoo.frames_generator.output_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.frames_generator.output_layer.add_module", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "models_zoo.frames_generator.hidden_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.frames_generator.hidden_layer.add_module", "models_zoo.frames_generator.hidden_layer.add_module", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "str", "str", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "str", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t\t", "super", "(", "frames_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_filters", "=", "[", "1024", ",", "512", ",", "256", ",", "128", "]", "\n", "input_dim", "=", "100", "\n", "output_dim", "=", "1", "\n", "\n", "# Hidden layers", "\n", "self", ".", "hidden_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "num_filters", ")", ")", ":", "\n", "# Deconvolutional layer", "\n", "\t\t\t", "if", "i", "==", "0", ":", "\n", "\t\t\t\t", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "input_dim", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "num_filters", "[", "i", "-", "1", "]", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "", "deconv_name", "=", "'deconv'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "deconv_name", ",", "deconv", ")", "\n", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "deconv", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "deconv", ".", "bias", ",", "0.0", ")", "\n", "\n", "# Batch normalization", "\n", "bn_name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "bn_name", ",", "torch", ".", "nn", ".", "BatchNorm2d", "(", "num_filters", "[", "i", "]", ")", ")", "\n", "\n", "# Activation", "\n", "act_name", "=", "'act'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "act_name", ",", "torch", ".", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "# Output layer", "\n", "", "self", ".", "output_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "# Deconvolutional layer", "\n", "out", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "num_filters", "[", "i", "]", ",", "output_dim", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'out'", ",", "out", ")", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "out", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "out", ".", "bias", ",", "0.0", ")", "\n", "# Activation", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'act'", ",", "torch", ".", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "\t\t", "h", "=", "self", ".", "hidden_layer", "(", "x", ")", "\n", "out", "=", "self", ".", "output_layer", "(", "h", ")", "\n", "return", "out", "\n", "\n", "", "", "class", "Discriminator", "(", "torch", ".", "nn", ".", "Module", ")", ":", "\n", "\t", "def", "__init__", "(", "self", ",", "optimizer", ",", "optimizer_name", ",", "lr", ",", "betas", ",", "batch_norm", "=", "False", ")", ":", "\n", "\t\t", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "projection", "=", "nn", ".", "utils", ".", "weight_norm", "(", "nn", ".", "Conv3d", "(", "3", ",", "1", ",", "kernel_size", "=", "(", "8", ",", "8", ",", "8", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "name", "=", "\"weight\"", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "projection", ".", "weight_g", ",", "1", ")", "\n", "\n", "# Hidden layers", "\n", "self", ".", "hidden_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "#num_filters = [256, 512, 1024]", "\n", "#num_filters = [256, 512, 768]", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.models_zoo.frames_generator.forward": [[162, 170], ["models_zoo.frames_generator.view", "models_zoo.frames_generator.linear", "models_zoo.frames_generator.hidden_layer", "models_zoo.frames_generator.output_layer", "models_zoo.frames_generator.size", "models_zoo.frames_generator.view", "models_zoo.frames_generator.size"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["num_filters", "=", "[", "128", ",", "256", ",", "512", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "num_filters", ")", ")", ":", "\n", "# Convolutional layer", "\n", "\t\t\t", "if", "i", "==", "0", ":", "\n", "\t\t\t\t", "conv", "=", "nn", ".", "Conv3d", "(", "1", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "conv", "=", "nn", ".", "Conv3d", "(", "num_filters", "[", "i", "-", "1", "]", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "conv_name", "=", "'conv'", "+", "str", "(", "i", "+", "1", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.models_zoo.Discriminator.__init__": [[172, 224], ["super().__init__", "torch.utils.weight_norm", "torch.utils.weight_norm", "torch.utils.weight_norm", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "models_zoo.Discriminator.output_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.Discriminator.output_layer.add_module", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "len", "models_zoo.Discriminator.hidden_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.Discriminator.hidden_layer.add_module", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "optimizer", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "str", "models_zoo.Discriminator.hidden_layer.add_module", "str", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "optimizer", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "str", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "list", "list", "optimizer", "models_zoo.Discriminator.hidden_layer.parameters", "models_zoo.Discriminator.output_layer.parameters", "list", "list", "models_zoo.Discriminator.hidden_layer.parameters", "models_zoo.Discriminator.output_layer.parameters", "list", "list", "models_zoo.Discriminator.hidden_layer.parameters", "models_zoo.Discriminator.output_layer.parameters"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "conv", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "conv", ".", "bias", ",", "0.0", ")", "\n", "\n", "# Batch normalization", "\n", "if", "i", "!=", "0", "and", "batch_norm", ":", "\n", "\t\t\t\t", "bn_name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "bn_name", ",", "torch", ".", "nn", ".", "BatchNorm3d", "(", "num_filters", "[", "i", "]", ")", ")", "\n", "\n", "# Activation", "\n", "", "act_name", "=", "'act'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "act_name", ",", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "\n", "# Output layer", "\n", "", "self", ".", "output_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "# Convolutional layer", "\n", "out", "=", "nn", ".", "Conv3d", "(", "num_filters", "[", "i", "]", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'out'", ",", "out", ")", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "out", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "out", ".", "bias", ",", "0.0", ")", "\n", "# Activation", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'act'", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "if", "optimizer_name", "==", "'adam'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ",", "betas", "=", "betas", ")", "\n", "", "elif", "optimizer_name", "==", "'amsgrad'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "amsgrad", "=", "True", ")", "\n", "", "elif", "optimizer_name", "==", "'rmsprop'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "p_x", "=", "self", ".", "projection", "(", "x", ")", "\n", "h", "=", "self", ".", "hidden_layer", "(", "p_x", ")", "\n", "out", "=", "self", ".", "output_layer", "(", "h", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.models_zoo.Discriminator.forward": [[225, 230], ["models_zoo.Discriminator.projection", "models_zoo.Discriminator.hidden_layer", "models_zoo.Discriminator.output_layer"], "methods", ["None"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.tsne.tsne_model": [[17, 125], ["generator.eval", "torch.randn().view", "generator.forward().squeeze", "out.detach().cpu().numpy.detach().cpu().numpy", "numpy.zeros", "range", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "list", "numpy.asarray", "numpy.asarray", "numpy.concatenate", "matplotlib.cla", "sklearn.decomposition.PCA", "decomposition.PCA.fit", "decomposition.PCA.transform", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.savefig", "matplotlib.show", "matplotlib.close", "sklearn.manifold.TSNE", "manifold.TSNE.fit_transform", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.savefig", "matplotlib.show", "matplotlib.close", "sklearn.manifold.Isomap", "manifold.Isomap.fit", "manifold.Isomap.transform", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.savefig", "matplotlib.show", "matplotlib.close", "z_.cuda.cuda", "np.asarray.append", "np.asarray.append", "torch.randn", "generator.forward", "out.detach().cpu().numpy.detach().cpu", "numpy.arange", "out.detach().cpu().numpy.detach"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward"], ["def", "tsne_model", "(", "generator", ",", "n_z", ",", "cuda_mode", ")", ":", "\n", "\t", "generator", ".", "eval", "(", ")", "\n", "\n", "\n", "colors", "=", "[", "'lightblue'", ",", "'lavender'", ",", "'lightgreen'", ",", "'pink'", ",", "'coral'", "]", "\n", "\n", "z_", "=", "torch", ".", "randn", "(", "n_z", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "\t\t", "z_", "=", "z_", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "generator", ".", "forward", "(", "z_", ")", ".", "squeeze", "(", ")", "\n", "out", "=", "out", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "out_reshape", "=", "np", ".", "zeros", "(", "(", "out", ".", "shape", "[", "0", "]", "*", "out", ".", "shape", "[", "1", "]", ",", "out", ".", "shape", "[", "2", "]", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "out", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t", "out_reshape", "[", "i", "*", "30", ":", "(", "i", "+", "1", ")", "*", "30", ",", ":", "]", "=", "out", "[", "i", ",", ":", ",", ":", "]", "\n", "\n", "", "many_z", "=", "np", ".", "random", ".", "randn", "(", "10000", ",", "100", ")", "\n", "\n", "z12", "=", "np", ".", "random", ".", "randn", "(", "2", ",", "100", ")", "\n", "\n", "z12_", "=", "np", ".", "random", ".", "randn", "(", "2", ",", "100", ")", "\n", "\n", "alpha_list", "=", "list", "(", "np", ".", "arange", "(", "1", ",", "29", ")", "/", "30", ")", "\n", "\n", "z_interp1", "=", "[", "]", "\n", "for", "alpha", "in", "alpha_list", ":", "\n", "\t\t", "z_interp1", ".", "append", "(", "(", "1", "-", "alpha", ")", "*", "z12", "[", "0", "]", "+", "alpha", "*", "z12", "[", "-", "1", "]", ")", "\n", "\n", "", "z_interp1", "=", "np", ".", "asarray", "(", "z_interp1", ")", "\n", "\n", "z_interp2", "=", "[", "]", "\n", "for", "alpha", "in", "alpha_list", ":", "\n", "\t\t", "z_interp2", ".", "append", "(", "(", "1", "-", "alpha", ")", "*", "z12_", "[", "0", "]", "+", "alpha", "*", "z12_", "[", "-", "1", "]", ")", "\n", "\n", "", "z_interp2", "=", "np", ".", "asarray", "(", "z_interp2", ")", "\n", "\n", "X", "=", "np", ".", "concatenate", "(", "(", "out_reshape", ",", "many_z", ",", "z12", ",", "z_interp1", ",", "z12_", ",", "z_interp2", ")", ")", "\n", "\n", "plt", ".", "cla", "(", ")", "\n", "pca", "=", "decomposition", ".", "PCA", "(", "n_components", "=", "2", ")", "\n", "pca", ".", "fit", "(", "many_z", ")", "\n", "X_pca", "=", "pca", ".", "transform", "(", "X", ")", "\n", "\n", "p1", "=", "plt", ".", "plot", "(", "X_pca", "[", "10211", ":", ",", "0", "]", ",", "X_pca", "[", "10211", ":", ",", "1", "]", ",", "'^'", ",", "c", "=", "'black'", ",", "label", "=", "'Linear interpolation'", ")", "\n", "p2", "=", "plt", ".", "plot", "(", "X_pca", "[", "210", ":", "10210", ",", "0", "]", ",", "X_pca", "[", "210", ":", "10210", ",", "1", "]", ",", "'x'", ",", "c", "=", "'lightgreen'", ",", "alpha", "=", "0.5", ",", "label", "=", "'$\\mathbf{z}\\sim \\mathcal{N}(0,I_{100})$'", ")", "\n", "p3", "=", "plt", ".", "plot", "(", "X_pca", "[", "0", ":", "30", ",", "0", "]", ",", "X_pca", "[", "0", ":", "30", ",", "1", "]", ",", "'o'", ",", "c", "=", "'blue'", ",", "label", "=", "'$\\mathbf{z}_{F}$'", ")", "\n", "p4", "=", "plt", ".", "plot", "(", "X_pca", "[", "30", ":", "60", ",", "0", "]", ",", "X_pca", "[", "30", ":", "60", ",", "1", "]", ",", "'o'", ",", "c", "=", "'pink'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p5", "=", "plt", ".", "plot", "(", "X_pca", "[", "60", ":", "90", ",", "0", "]", ",", "X_pca", "[", "60", ":", "90", ",", "1", "]", ",", "'o'", ",", "c", "=", "'green'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p6", "=", "plt", ".", "plot", "(", "X_pca", "[", "90", ":", "120", ",", "0", "]", ",", "X_pca", "[", "90", ":", "120", ",", "1", "]", ",", "'o'", ",", "c", "=", "'magenta'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p7", "=", "plt", ".", "plot", "(", "X_pca", "[", "120", ":", "150", ",", "0", "]", ",", "X_pca", "[", "120", ":", "150", ",", "1", "]", ",", "'o'", ",", "c", "=", "'purple'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p8", "=", "plt", ".", "plot", "(", "X_pca", "[", "150", ":", "180", ",", "0", "]", ",", "X_pca", "[", "150", ":", "180", ",", "1", "]", ",", "'o'", ",", "c", "=", "'orange'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p9", "=", "plt", ".", "plot", "(", "X_pca", "[", "180", ":", "210", ",", "0", "]", ",", "X_pca", "[", "180", ":", "210", ",", "1", "]", ",", "'o'", ",", "c", "=", "'red'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "\n", "#plt.legend([(p3, p4, p5, p6, p7, p8, p9), p1, p2], ['$\\mathbf{z}_{F}$', 'Linear interpolation', '$\\mathbf{z}\\sim \\mathcal{N}(0,I_{100})$'])", "\n", "\n", "#plt.legend([(p3, p4, p5, p6, p7, p8, p9)], ['$\\mathbf{z}_{F}$'], numpoints=1, handler_map={tuple: HandlerTuple(ndivide=None)})#, 'Linear interpolation', '$\\mathbf{z}\\sim \\mathcal{N}(0,I_{100})$'])", "\n", "save_fn", "=", "'pca.png'", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "plt", ".", "show", "(", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "\n", "tsne", "=", "manifold", ".", "TSNE", "(", "n_components", "=", "2", ",", "init", "=", "'pca'", ")", "\n", "X_tsne", "=", "tsne", ".", "fit_transform", "(", "X", ")", "\n", "\n", "p1", "=", "plt", ".", "plot", "(", "X_tsne", "[", "10211", ":", ",", "0", "]", ",", "X_tsne", "[", "10211", ":", ",", "1", "]", ",", "'^'", ",", "c", "=", "'black'", ",", "label", "=", "'Linear interpolation'", ")", "\n", "p2", "=", "plt", ".", "plot", "(", "X_tsne", "[", "210", ":", "10210", ",", "0", "]", ",", "X_tsne", "[", "210", ":", "10210", ",", "1", "]", ",", "'x'", ",", "c", "=", "'lightgreen'", ",", "alpha", "=", "0.5", ",", "label", "=", "'$\\mathbf{z}\\sim \\mathcal{N}(0,I_{100})$'", ")", "\n", "p3", "=", "plt", ".", "plot", "(", "X_tsne", "[", "0", ":", "30", ",", "0", "]", ",", "X_tsne", "[", "0", ":", "30", ",", "1", "]", ",", "'o'", ",", "c", "=", "'blue'", ",", "label", "=", "'$\\mathbf{z}_{F}$'", ")", "\n", "p4", "=", "plt", ".", "plot", "(", "X_tsne", "[", "30", ":", "60", ",", "0", "]", ",", "X_tsne", "[", "30", ":", "60", ",", "1", "]", ",", "'o'", ",", "c", "=", "'pink'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p5", "=", "plt", ".", "plot", "(", "X_tsne", "[", "60", ":", "90", ",", "0", "]", ",", "X_tsne", "[", "60", ":", "90", ",", "1", "]", ",", "'o'", ",", "c", "=", "'green'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p6", "=", "plt", ".", "plot", "(", "X_tsne", "[", "90", ":", "120", ",", "0", "]", ",", "X_tsne", "[", "90", ":", "120", ",", "1", "]", ",", "'o'", ",", "c", "=", "'magenta'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p7", "=", "plt", ".", "plot", "(", "X_tsne", "[", "120", ":", "150", ",", "0", "]", ",", "X_tsne", "[", "120", ":", "150", ",", "1", "]", ",", "'o'", ",", "c", "=", "'purple'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p8", "=", "plt", ".", "plot", "(", "X_tsne", "[", "150", ":", "180", ",", "0", "]", ",", "X_tsne", "[", "150", ":", "180", ",", "1", "]", ",", "'o'", ",", "c", "=", "'orange'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p9", "=", "plt", ".", "plot", "(", "X_tsne", "[", "180", ":", "210", ",", "0", "]", ",", "X_tsne", "[", "180", ":", "210", ",", "1", "]", ",", "'o'", ",", "c", "=", "'red'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "\n", "save_fn", "=", "'tsne.png'", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "plt", ".", "show", "(", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "\n", "iso", "=", "manifold", ".", "Isomap", "(", "n_neighbors", "=", "6", ",", "n_components", "=", "2", ")", "\n", "iso", ".", "fit", "(", "X", ")", "\n", "X_isomap", "=", "iso", ".", "transform", "(", "X", ")", "\n", "\n", "p1", "=", "plt", ".", "plot", "(", "X_isomap", "[", "10211", ":", ",", "0", "]", ",", "X_isomap", "[", "10211", ":", ",", "1", "]", ",", "'^'", ",", "c", "=", "'black'", ",", "label", "=", "'Linear interpolation'", ")", "\n", "p2", "=", "plt", ".", "plot", "(", "X_isomap", "[", "210", ":", "10210", ",", "0", "]", ",", "X_isomap", "[", "210", ":", "10210", ",", "1", "]", ",", "'x'", ",", "c", "=", "'lightgreen'", ",", "alpha", "=", "0.5", ",", "label", "=", "'$\\mathbf{z}\\sim \\mathcal{N}(0,I_{100})$'", ")", "\n", "p3", "=", "plt", ".", "plot", "(", "X_isomap", "[", "0", ":", "30", ",", "0", "]", ",", "X_isomap", "[", "0", ":", "30", ",", "1", "]", ",", "'o'", ",", "c", "=", "'blue'", ",", "label", "=", "'$\\mathbf{z}_{F}$'", ")", "\n", "p4", "=", "plt", ".", "plot", "(", "X_isomap", "[", "30", ":", "60", ",", "0", "]", ",", "X_isomap", "[", "30", ":", "60", ",", "1", "]", ",", "'o'", ",", "c", "=", "'pink'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p5", "=", "plt", ".", "plot", "(", "X_isomap", "[", "60", ":", "90", ",", "0", "]", ",", "X_isomap", "[", "60", ":", "90", ",", "1", "]", ",", "'o'", ",", "c", "=", "'green'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p6", "=", "plt", ".", "plot", "(", "X_isomap", "[", "90", ":", "120", ",", "0", "]", ",", "X_isomap", "[", "90", ":", "120", ",", "1", "]", ",", "'o'", ",", "c", "=", "'magenta'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p7", "=", "plt", ".", "plot", "(", "X_isomap", "[", "120", ":", "150", ",", "0", "]", ",", "X_isomap", "[", "120", ":", "150", ",", "1", "]", ",", "'o'", ",", "c", "=", "'purple'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p8", "=", "plt", ".", "plot", "(", "X_isomap", "[", "150", ":", "180", ",", "0", "]", ",", "X_isomap", "[", "150", ":", "180", ",", "1", "]", ",", "'o'", ",", "c", "=", "'orange'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "p9", "=", "plt", ".", "plot", "(", "X_isomap", "[", "180", ":", "210", ",", "0", "]", ",", "X_isomap", "[", "180", ":", "210", ",", "1", "]", ",", "'o'", ",", "c", "=", "'red'", ")", "#, label = '$\\mathbf{z}_{F}$')", "\n", "\n", "#plt.legend([(p3, p4, p5, p6, p7, p8, p9), p1, p2], ['$\\mathbf{z}_{F}$', 'Linear interpolation', '$\\mathbf{z}\\sim \\mathcal{N}(0,I_{100})$'])", "\n", "\n", "#plt.legend([(p3, p4, p5, p6, p7, p8, p9)], ['$\\mathbf{z}_{F}$'], numpoints=1, handler_map={tuple: HandlerTuple(ndivide=None)})#, 'Linear interpolation', '$\\mathbf{z}\\sim \\mathcal{N}(0,I_{100})$'])", "\n", "save_fn", "=", "'isomap.png'", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "plt", ".", "show", "(", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.shape": [[19, 24], ["isinstance", "shape_std", "A.shape"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.shape"], ["def", "shape", "(", "A", ")", ":", "\n", "\t", "if", "isinstance", "(", "A", ",", "ndarray", ")", ":", "\n", "\t\t", "return", "shape_std", "(", "A", ")", "\n", "", "else", ":", "\n", "\t\t", "return", "A", ".", "shape", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size": [[26, 31], ["isinstance", "size_std", "A.size"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["def", "size", "(", "A", ")", ":", "\n", "\t", "if", "isinstance", "(", "A", ",", "ndarray", ")", ":", "\n", "\t\t", "return", "size_std", "(", "A", ")", "\n", "", "else", ":", "\n", "\t\t", "return", "A", ".", "size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.new_speeds": [[32, 36], ["None"], "function", ["None"], ["", "", "def", "new_speeds", "(", "m1", ",", "m2", ",", "v1", ",", "v2", ")", ":", "\n", "\t", "new_v2", "=", "(", "2", "*", "m1", "*", "v1", "+", "v2", "*", "(", "m2", "-", "m1", ")", ")", "/", "(", "m1", "+", "m2", ")", "\n", "new_v1", "=", "new_v2", "+", "(", "v2", "-", "v1", ")", "\n", "return", "new_v1", ",", "new_v2", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm": [[37, 39], ["sqrt"], "function", ["None"], ["", "def", "norm", "(", "x", ")", ":", "\n", "\t", "return", "sqrt", "(", "(", "x", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.sigmoid": [[40, 42], ["exp"], "function", ["None"], ["", "def", "sigmoid", "(", "x", ")", ":", "\n", "\t", "return", "1.", "/", "(", "1.", "+", "exp", "(", "-", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.bounce_n": [[46, 104], ["zeros", "randn", "range", "array", "array", "range", "range", "range", "range", "bb_gen.norm", "range", "range", "int", "range", "range", "range", "rand", "range", "range", "bb_gen.norm", "abs", "bb_gen.norm", "dot", "dot", "bb_gen.new_speeds", "abs", "bb_gen.norm", "w.transpose", "w.transpose"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.new_speeds", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm"], ["def", "bounce_n", "(", "T", "=", "128", ",", "n", "=", "2", ",", "r", "=", "None", ",", "m", "=", "None", ")", ":", "\n", "\n", "\t", "if", "r", "is", "None", ":", "r", "=", "array", "(", "[", "1.2", "]", "*", "n", ")", "\n", "if", "m", "is", "None", ":", "m", "=", "array", "(", "[", "1", "]", "*", "n", ")", "\n", "# r is to be rather small.", "\n", "X", "=", "zeros", "(", "(", "T", ",", "n", ",", "2", ")", ",", "dtype", "=", "'float'", ")", "\n", "v", "=", "randn", "(", "n", ",", "2", ")", "\n", "v", "=", "v", "/", "norm", "(", "v", ")", "*", ".5", "\n", "good_config", "=", "False", "\n", "while", "not", "good_config", ":", "\n", "\t\t", "x", "=", "2", "+", "rand", "(", "n", ",", "2", ")", "*", "8", "\n", "good_config", "=", "True", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t\t", "for", "z", "in", "range", "(", "2", ")", ":", "\n", "\t\t\t\t", "if", "x", "[", "i", "]", "[", "z", "]", "-", "r", "[", "i", "]", "<", "0", ":", "good_config", "=", "False", "\n", "if", "x", "[", "i", "]", "[", "z", "]", "+", "r", "[", "i", "]", ">", "SIZE", ":", "good_config", "=", "False", "\n", "\n", "# that's the main part.", "\n", "", "", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "\t\t\t\t", "if", "norm", "(", "x", "[", "i", "]", "-", "x", "[", "j", "]", ")", "<", "r", "[", "i", "]", "+", "r", "[", "j", "]", ":", "\n", "\t\t\t\t\t", "good_config", "=", "False", "\n", "\n", "\n", "", "", "", "", "eps", "=", ".5", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "# for how long do we show small simulation", "\n", "\n", "\t\t", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t\t", "X", "[", "t", ",", "i", "]", "=", "x", "[", "i", "]", "\n", "\n", "", "for", "mu", "in", "range", "(", "int", "(", "1", "/", "eps", ")", ")", ":", "\n", "\n", "\t\t\t", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t\t\t", "x", "[", "i", "]", "+=", "eps", "*", "v", "[", "i", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t\t\t", "for", "z", "in", "range", "(", "2", ")", ":", "\n", "\t\t\t\t\t", "if", "x", "[", "i", "]", "[", "z", "]", "-", "r", "[", "i", "]", "<", "0", ":", "v", "[", "i", "]", "[", "z", "]", "=", "abs", "(", "v", "[", "i", "]", "[", "z", "]", ")", "# want positive", "\n", "if", "x", "[", "i", "]", "[", "z", "]", "+", "r", "[", "i", "]", ">", "SIZE", ":", "v", "[", "i", "]", "[", "z", "]", "=", "-", "abs", "(", "v", "[", "i", "]", "[", "z", "]", ")", "# want negative", "\n", "\n", "\n", "", "", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t\t\t", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "\t\t\t\t\t", "if", "norm", "(", "x", "[", "i", "]", "-", "x", "[", "j", "]", ")", "<", "r", "[", "i", "]", "+", "r", "[", "j", "]", ":", "\n", "# the bouncing off part:", "\n", "\t\t\t\t\t\t", "w", "=", "x", "[", "i", "]", "-", "x", "[", "j", "]", "\n", "w", "=", "w", "/", "norm", "(", "w", ")", "\n", "\n", "v_i", "=", "dot", "(", "w", ".", "transpose", "(", ")", ",", "v", "[", "i", "]", ")", "\n", "v_j", "=", "dot", "(", "w", ".", "transpose", "(", ")", ",", "v", "[", "j", "]", ")", "\n", "\n", "new_v_i", ",", "new_v_j", "=", "new_speeds", "(", "m", "[", "i", "]", ",", "m", "[", "j", "]", ",", "v_i", ",", "v_j", ")", "\n", "\n", "v", "[", "i", "]", "+=", "w", "*", "(", "new_v_i", "-", "v_i", ")", "\n", "v", "[", "j", "]", "+=", "w", "*", "(", "new_v_j", "-", "v_j", ")", "\n", "\n", "", "", "", "", "", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.matricize": [[105, 120], ["zeros", "meshgrid", "range", "bb_gen.shape", "array", "range", "bb_gen.ar", "bb_gen.ar", "exp"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.shape", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.ar", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.ar"], ["", "def", "matricize", "(", "X", ",", "res", ",", "r", "=", "None", ")", ":", "\n", "\n", "\t", "T", ",", "n", "=", "shape", "(", "X", ")", "[", "0", ":", "2", "]", "\n", "if", "r", "is", "None", ":", "r", "=", "array", "(", "[", "1.2", "]", "*", "n", ")", "\n", "\n", "A", "=", "zeros", "(", "(", "T", ",", "res", ",", "res", ")", ",", "dtype", "=", "'float'", ")", "\n", "\n", "[", "I", ",", "J", "]", "=", "meshgrid", "(", "ar", "(", "0", ",", "1", ",", "1.", "/", "res", ")", "*", "SIZE", ",", "ar", "(", "0", ",", "1", ",", "1.", "/", "res", ")", "*", "SIZE", ")", "\n", "\n", "for", "t", "in", "range", "(", "T", ")", ":", "\n", "\t\t", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t\t", "A", "[", "t", "]", "+=", "exp", "(", "-", "(", "(", "(", "I", "-", "X", "[", "t", ",", "i", ",", "0", "]", ")", "**", "2", "+", "(", "J", "-", "X", "[", "t", ",", "i", ",", "1", "]", ")", "**", "2", ")", "/", "(", "r", "[", "i", "]", "**", "2", ")", ")", "**", "4", ")", "\n", "\n", "", "A", "[", "t", "]", "[", "A", "[", "t", "]", ">", "1", "]", "=", "1", "\n", "", "return", "A", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.bounce_mat": [[121, 126], ["bb_gen.bounce_n", "bb_gen.matricize", "array"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.bounce_n", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.matricize"], ["", "def", "bounce_mat", "(", "res", ",", "n", "=", "2", ",", "T", "=", "128", ",", "r", "=", "None", ")", ":", "\n", "\t", "if", "r", "==", "None", ":", "r", "=", "array", "(", "[", "1.2", "]", "*", "n", ")", "\n", "x", "=", "bounce_n", "(", "T", ",", "n", ",", "r", ")", ";", "\n", "A", "=", "matricize", "(", "x", ",", "res", ",", "r", ")", "\n", "return", "A", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.ar": [[127, 129], ["arange"], "function", ["None"], ["", "def", "ar", "(", "x", ",", "y", ",", "z", ")", ":", "\n", "\t", "return", "z", "/", "2", "+", "arange", "(", "x", ",", "y", ",", "z", ",", "dtype", "=", "'float'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.data_load.Loader.__init__": [[10, 19], ["torch.utils.data.Dataset.__init__", "h5py.File", "len", "h5py.File.close"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "hdf5_name", ")", ":", "\n", "\t\t", "super", "(", "Loader", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hdf5_name", "=", "hdf5_name", "\n", "\n", "open_file", "=", "h5py", ".", "File", "(", "self", ".", "hdf5_name", ",", "'r'", ")", "\n", "self", ".", "length", "=", "len", "(", "open_file", "[", "'data'", "]", ")", "\n", "open_file", ".", "close", "(", ")", "\n", "\n", "self", ".", "open_file", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.data_load.Loader.__getitem__": [[20, 31], ["torch.from_numpy().float", "numpy.random.randint", "img.unsqueeze", "h5py.File", "torch.from_numpy", "torch.from_numpy().float.size", "numpy.moveaxis"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "\t\t", "if", "not", "self", ".", "open_file", ":", "self", ".", "open_file", "=", "h5py", ".", "File", "(", "self", ".", "hdf5_name", ",", "'r'", ")", "\n", "\n", "scene", "=", "self", ".", "open_file", "[", "'data'", "]", "[", "index", "]", "\n", "scene", "=", "torch", ".", "from_numpy", "(", "scene", ")", ".", "float", "(", ")", "\n", "\n", "img", "=", "scene", "\n", "img", "=", "(", "img", "-", "0.5", ")", "/", "0.5", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.data_load.Loader.__len__": [[32, 34], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "length", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.test.test_lin_interp": [[19, 70], ["range", "numpy.random.randn", "torch.Tensor", "f_generator.eval", "generator.eval", "torchvision.ToPILImage", "range", "range", "intra_mse.append", "numpy.asarray", "z_interp.cuda.cuda", "z_interp.cuda.size", "f_generator", "frames_list.append", "z_interp.cuda.size", "numpy.asarray", "z_interp[].unsqueeze().contiguous", "f_generator.squeeze().unsqueeze", "frames_list[].detach().cpu().numpy().squeeze", "frames_list[].detach().cpu().numpy().squeeze", "sklearn.metrics.mean_squared_error", "z_interp[].unsqueeze", "f_generator.squeeze", "frames_list[].detach().cpu().numpy", "frames_list[].detach().cpu().numpy", "frames_list[].detach().cpu", "frames_list[].detach().cpu", "frames_list[].detach", "frames_list[].detach"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["\n", "", "def", "test_model", "(", "generator", ",", "f_generator", ",", "n_tests", ",", "cuda_mode", ",", "enhancement", ",", "delay", ")", ":", "\n", "\n", "\t", "f_generator", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "\n", "to_pil", "=", "transforms", ".", "ToPILImage", "(", ")", "\n", "\n", "n_cols", ",", "n_rows", "=", "(", "n_tests", ",", "15", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_cols", ",", "n_rows", ",", "figsize", "=", "(", "n_rows", ",", "n_cols", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_tests", ")", ":", "\n", "\n", "\t\t", "z_", "=", "torch", ".", "randn", "(", "1", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "\t\t\t", "z_", "=", "z_", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "generator", ".", "forward", "(", "z_", ")", "\n", "\n", "frames_list", "=", "[", "]", "\n", "\n", "for", "j", "in", "range", "(", "out", ".", "size", "(", "1", ")", ")", ":", "\n", "\t\t\t", "gen_frame", "=", "f_generator", "(", "out", "[", ":", ",", "j", ",", ":", "]", ".", "contiguous", "(", ")", ")", "\n", "frames_list", ".", "append", "(", "denorm", "(", "gen_frame", ".", "detach", "(", ")", ")", ")", "\n", "\n", "", "data", "=", "torch", ".", "cat", "(", "frames_list", ",", "0", ")", "\n", "data", "=", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "save_gif", "(", "data", ",", "str", "(", "i", "+", "1", ")", "+", "'_rec.gif'", ",", "enhance", "=", "enhancement", ",", "delay", "=", "delay", ")", "\n", "\n", "\n", "for", "ax", ",", "img", "in", "zip", "(", "axes", "[", "i", ",", ":", "]", ".", "flatten", "(", ")", ",", "data", ")", ":", "\n", "\n", "\t\t\t", "img", "=", "img", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_adjustable", "(", "'box-forced'", ")", "\n", "\n", "ax", ".", "imshow", "(", "img", ",", "aspect", "=", "'equal'", ")", "\n", "\n", "", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0", ",", "hspace", "=", "0", ")", "\n", "\n", "", "save_fn", "=", "'all.pdf'", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "", "def", "save_gif", "(", "data", ",", "file_name", ",", "enhance", ",", "delay", ")", ":", "\n", "\n", "\t", "to_pil", "=", "transforms", ".", "ToPILImage", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.test.test_model": [[72, 114], ["f_generator.eval", "generator.eval", "torchvision.ToPILImage", "matplotlib.subplots", "range", "matplotlib.savefig", "matplotlib.close", "torch.randn().view", "generator.forward", "range", "torch.cat", "test.save_gif", "torch.cat.view().cpu().detach", "zip", "matplotlib.subplots_adjust", "z_.cuda.cuda", "generator.forward.size", "f_generator", "frames_list.append", "axes[].flatten", "ax.axis", "ax.set_adjustable", "ax.imshow", "torch.randn", "out[].squeeze().contiguous", "f_generator.squeeze().unsqueeze", "str", "torch.cat.view().cpu", "out[].squeeze", "f_generator.squeeze", "torch.cat.view"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.save_gif", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["\t\t", "frames", "=", "[", "ImageEnhance", ".", "Sharpness", "(", "to_pil", "(", "frame", ")", ")", ".", "enhance", "(", "1.0", ")", "for", "frame", "in", "data", "]", "\n", "", "else", ":", "\n", "\t\t", "frames", "=", "[", "to_pil", "(", "frame", ")", "for", "frame", "in", "data", "]", "\n", "\n", "", "frames", "[", "0", "]", ".", "save", "(", "file_name", ",", "save_all", "=", "True", ",", "append_images", "=", "frames", "[", "1", ":", "]", ")", "\n", "\n", "subprocess", ".", "call", "(", "\"gifsicle --delay \"", "+", "str", "(", "delay", ")", "+", "\" \"", "+", "file_name", "+", "\" > \"", "+", "\"s\"", "+", "file_name", ",", "shell", "=", "True", ")", "\n", "\n", "", "def", "plot_real", "(", "n_tests", ",", "data_path", ")", ":", "\n", "\n", "\t", "real_loader", "=", "Loader", "(", "hdf5_name", "=", "data_path", ")", "\n", "\n", "n_cols", ",", "n_rows", "=", "(", "n_tests", ",", "15", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_cols", ",", "n_rows", ",", "figsize", "=", "(", "n_rows", ",", "n_cols", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_tests", ")", ":", "\n", "\n", "\t\t", "img_idx", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "real_loader", ")", ")", "\n", "real_sample", "=", "real_loader", "[", "img_idx", "]", ".", "squeeze", "(", ")", "\n", "real_sample", "=", "real_sample", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "print", "(", "real_sample", ".", "size", "(", ")", ")", "\n", "\n", "for", "ax", ",", "img", "in", "zip", "(", "axes", "[", "i", ",", ":", "]", ".", "flatten", "(", ")", ",", "real_sample", ")", ":", "\n", "\t\t\t", "img", "=", "denorm", "(", "img", ".", "transpose", "(", "0", ",", "-", "1", ")", ")", "\n", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_adjustable", "(", "'box-forced'", ")", "\n", "\n", "ax", ".", "imshow", "(", "img", ",", "aspect", "=", "'equal'", ")", "\n", "\n", "", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0", ",", "hspace", "=", "0", ")", "\n", "\n", "", "save_fn", "=", "'real.pdf'", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "", "def", "plot_learningcurves", "(", "history", ",", "keys", ")", ":", "\n", "\n", "\t", "for", "i", ",", "key", "in", "enumerate", "(", "keys", ")", ":", "\n", "\t\t", "plt", ".", "figure", "(", "i", "+", "1", ")", "\n", "plt", ".", "plot", "(", "history", "[", "key", "]", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.test.save_separate": [[115, 181], ["f_generator.eval", "generator.eval", "torchvision.ToPILImage", "range", "torch.randn().view", "generator.forward", "range", "range", "intra_mse.append", "torch.cat", "torch.cat.view().cpu().detach", "matplotlib.subplots", "zip", "matplotlib.subplots_adjust", "matplotlib.savefig", "matplotlib.close", "z_.cuda.cuda", "generator.forward.size", "f_generator", "frames_list.append", "generator.forward.size", "numpy.asarray", "axes.flatten", "ax.axis", "ax.set_adjustable", "ax.imshow", "torch.randn", "out[].squeeze().contiguous", "f_generator.squeeze().unsqueeze", "frames_list[].detach().cpu().numpy().squeeze", "frames_list[].detach().cpu().numpy().squeeze", "sklearn.metrics.mean_squared_error", "torch.cat.view().cpu", "str", "out[].squeeze", "f_generator.squeeze", "frames_list[].detach().cpu().numpy", "frames_list[].detach().cpu().numpy", "torch.cat.view", "frames_list[].detach().cpu", "frames_list[].detach().cpu", "frames_list[].detach", "frames_list[].detach"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["plt", ".", "title", "(", "key", ")", "\n", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\n", "# Testing settings", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Testing online transfer learning for emotion recognition tasks'", ")", "\n", "parser", ".", "add_argument", "(", "'--cp-path'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "metavar", "=", "'Path'", ",", "help", "=", "'Checkpoint/model path'", ")", "\n", "parser", ".", "add_argument", "(", "'--gen-arch'", ",", "choices", "=", "[", "'linear'", ",", "'conv'", "]", ",", "default", "=", "'linear'", ",", "help", "=", "'Linear or convolutional generator'", ")", "\n", "parser", ".", "add_argument", "(", "'--generator-path'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "metavar", "=", "'Path'", ",", "help", "=", "'Path for generator params'", ")", "\n", "parser", ".", "add_argument", "(", "'--n-tests'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "metavar", "=", "'N'", ",", "help", "=", "'number of tests  (default: 4)'", ")", "\n", "parser", ".", "add_argument", "(", "'--delay'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "metavar", "=", "'N'", ",", "help", "=", "'Delay between frames  (default: 20)'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-cuda'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'Disables GPU use'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-plots'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'Disables plot of train/test losses'", ")", "\n", "parser", ".", "add_argument", "(", "'--plot-real'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'Disables plot of real data'", ")", "\n", "parser", ".", "add_argument", "(", "'--realdata-path'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "metavar", "=", "'Path'", ",", "help", "=", "'Dataset path'", ")", "\n", "parser", ".", "add_argument", "(", "'--enhance'", ",", "action", "=", "'store_true'", ",", "default", "=", "True", ",", "help", "=", "'Enables enhancement'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "metavar", "=", "'S'", ",", "help", "=", "'random seed (default: 1)'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "args", ".", "cuda", "=", "True", "if", "not", "args", ".", "no_cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "False", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "args", ".", "cuda", ":", "\n", "\t\t", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "", "if", "args", ".", "gen_arch", "==", "'conv'", ":", "\n", "\t\t", "generator", "=", "models_zoo", ".", "Generator_conv", "(", "args", ".", "cuda", ")", "\n", "", "elif", "args", ".", "gen_arch", "==", "'linear'", ":", "\n", "\t\t", "generator", "=", "models_zoo", ".", "Generator_linear", "(", "args", ".", "cuda", ")", "\n", "\n", "", "frames_generator", "=", "models_zoo", ".", "frames_generator", "(", ")", ".", "eval", "(", ")", "\n", "\n", "ckpt", "=", "torch", ".", "load", "(", "args", ".", "cp_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "\n", "history", "=", "ckpt", "[", "'history'", "]", "\n", "\n", "generator", ".", "load_state_dict", "(", "ckpt", "[", "'generator_state'", "]", ")", "\n", "\n", "f_gen_state", "=", "torch", ".", "load", "(", "args", ".", "generator_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "frames_generator", ".", "load_state_dict", "(", "f_gen_state", "[", "'model_state'", "]", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "\t\t", "generator", "=", "generator", ".", "cuda", "(", ")", "\n", "frames_generator", "=", "frames_generator", ".", "cuda", "(", ")", "\n", "\n", "", "if", "args", ".", "plot_real", ":", "\n", "\t\t", "plot_real", "(", "args", ".", "n_tests", ",", "args", ".", "realdata_path", ")", "\n", "\n", "", "test_model", "(", "generator", "=", "generator", ",", "f_generator", "=", "frames_generator", ",", "n_tests", "=", "args", ".", "n_tests", ",", "cuda_mode", "=", "args", ".", "cuda", ",", "enhancement", "=", "args", ".", "enhance", ",", "delay", "=", "args", ".", "delay", ")", "\n", "\n", "if", "not", "args", ".", "no_plots", ":", "\n", "\t\t", "plot_learningcurves", "(", "history", ",", "list", "(", "history", ".", "keys", "(", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.test.save_gif": [[182, 196], ["data.view().detach().cpu.view().detach().cpu", "torchvision.ToPILImage", "frames[].save", "subprocess.call", "data.view().detach().cpu.view().detach", "PIL.ImageEnhance.Sharpness().enhance", "transforms.ToPILImage.", "frame.unsqueeze", "data.view().detach().cpu.view", "PIL.ImageEnhance.Sharpness", "transforms.ToPILImage.", "frame.unsqueeze", "str"], "function", ["None"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.test.plot_real": [[197, 244], ["data_load.Loader", "matplotlib.subplots", "range", "matplotlib.savefig", "matplotlib.close", "numpy.random.randint", "real_loader[].squeeze", "zip", "matplotlib.subplots_adjust", "range", "intra_mse.append", "len", "axes[].flatten", "ax.axis", "ax.set_adjustable", "ax.imshow", "real_loader[].squeeze.size", "numpy.asarray", "real_sample[].numpy().squeeze", "real_sample[].numpy().squeeze", "sklearn.metrics.mean_squared_error", "real_sample[].numpy", "real_sample[].numpy"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.test.plot_learningcurves": [[245, 253], ["enumerate", "matplotlib.show", "matplotlib.figure", "matplotlib.plot", "matplotlib.title"], "function", ["None"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.train_loop.TrainLoop.__init__": [[14, 39], ["os.path.join", "os.path.join", "os.getcwd", "train_loop.TrainLoop.load_checkpoint", "os.path.isdir", "os.mkdir", "train_loop.TrainLoop.save_epoch_fmt_generator.format"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.load_checkpoint"], ["class", "TrainLoop", "(", "object", ")", ":", "\n", "\n", "\t", "def", "__init__", "(", "self", ",", "gen", ",", "f_gen", ",", "disc_list", ",", "optimizer", ",", "train_loader", ",", "nadir_slack", "=", "1.1", ",", "checkpoint_path", "=", "None", ",", "checkpoint_epoch", "=", "None", ",", "hyper", "=", "True", ",", "cuda", "=", "True", ")", ":", "\n", "\t\t", "if", "checkpoint_path", "is", "None", ":", "\n", "# Save to current directory", "\n", "\t\t\t", "self", ".", "checkpoint_path", "=", "os", ".", "getcwd", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "checkpoint_path", "=", "checkpoint_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "checkpoint_path", ")", ":", "\n", "\t\t\t\t", "os", ".", "mkdir", "(", "self", ".", "checkpoint_path", ")", "\n", "\n", "", "", "self", ".", "save_epoch_fmt_generator", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_path", ",", "'checkpoint_{}ep.pt'", ")", "\n", "self", ".", "save_epoch_fmt_disc", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_path", ",", "'D{}_checkpoint.pt'", ")", "\n", "self", ".", "cuda_mode", "=", "cuda", "\n", "self", ".", "generator", "=", "gen", "\n", "self", ".", "f_generator", "=", "f_gen", "\n", "self", ".", "disc_list", "=", "disc_list", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "train_loader", "=", "train_loader", "\n", "#self.valid_loader = valid_loader", "\n", "self", ".", "history", "=", "{", "'hv'", ":", "[", "]", ",", "'disc'", ":", "[", "]", "}", "\n", "self", ".", "total_iters", "=", "0", "\n", "self", ".", "cur_epoch", "=", "0", "\n", "self", ".", "nadir_slack", "=", "nadir_slack", "\n", "self", ".", "hyper_mode", "=", "hyper", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.train_loop.TrainLoop.train": [[40, 71], ["print", "train_loop.TrainLoop.checkpointing", "print", "tqdm.tqdm.tqdm", "train_loop.TrainLoop.history[].append", "train_loop.TrainLoop.history[].append", "print", "enumerate", "train_loop.TrainLoop.train_step", "train_loop.TrainLoop.checkpointing"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.checkpointing", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train_step", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.checkpointing"], ["if", "checkpoint_epoch", "is", "not", "None", ":", "\n", "\t\t\t", "self", ".", "load_checkpoint", "(", "self", ".", "save_epoch_fmt_generator", ".", "format", "(", "checkpoint_epoch", ")", ")", "\n", "\n", "", "", "def", "train", "(", "self", ",", "n_epochs", "=", "1", ",", "patience", "=", "5", ",", "save_every", "=", "10", ")", ":", "\n", "\n", "\t\t", "while", "self", ".", "cur_epoch", "<", "n_epochs", ":", "\n", "\t\t\t", "print", "(", "'Epoch {}/{}'", ".", "format", "(", "self", ".", "cur_epoch", "+", "1", ",", "n_epochs", ")", ")", "\n", "train_iter", "=", "tqdm", "(", "enumerate", "(", "self", ".", "train_loader", ")", ")", "\n", "\n", "hv_epoch", "=", "0.0", "\n", "disc_epoch", "=", "0.0", "\n", "\n", "# Train step", "\n", "\n", "for", "t", ",", "batch", "in", "train_iter", ":", "\n", "\t\t\t\t", "hv", ",", "disc", "=", "self", ".", "train_step", "(", "batch", ")", "\n", "self", ".", "total_iters", "+=", "1", "\n", "hv_epoch", "+=", "hv", "\n", "disc_epoch", "+=", "disc", "\n", "\n", "", "self", ".", "history", "[", "'hv'", "]", ".", "append", "(", "hv_epoch", "/", "(", "t", "+", "1", ")", ")", "\n", "self", ".", "history", "[", "'disc'", "]", ".", "append", "(", "disc_epoch", "/", "(", "t", "+", "1", ")", ")", "\n", "\n", "print", "(", "'NLH and Discriminators loss : {:0.4f}, {:0.4f}'", ".", "format", "(", "self", ".", "history", "[", "'hv'", "]", "[", "-", "1", "]", ",", "self", ".", "history", "[", "'disc'", "]", "[", "-", "1", "]", ")", ")", "\n", "\n", "self", ".", "cur_epoch", "+=", "1", "\n", "\n", "if", "self", ".", "cur_epoch", "%", "save_every", "==", "0", ":", "\n", "\t\t\t\t", "self", ".", "checkpointing", "(", ")", "\n", "\n", "\n", "# saving final models", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.train_loop.TrainLoop.train_step": [[72, 142], ["train_loop.TrainLoop.generator.train", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "train_loop.TrainLoop.generator.forward", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.detach", "torch.cat.detach", "torch.cat.detach", "len", "train_loop.TrainLoop.optimizer.zero_grad", "loss_G.backward", "train_loop.TrainLoop.optimizer.step", "x.cuda.cuda.size", "x.cuda.cuda.size", "x.cuda.cuda.cuda", "z_.cuda.cuda.cuda", "y_real_.cuda.cuda.cuda", "y_fake_.cuda.cuda.cuda", "torch.cat.size", "torch.cat.size", "torch.cat.size", "train_loop.TrainLoop.f_generator", "frames_list.append", "disc.forward().squeeze", "disc.forward().squeeze", "disc.optimizer.zero_grad", "loss_disc.backward", "disc.optimizer.step", "loss_disc.item", "train_loop.TrainLoop.update_nadir_point", "enumerate", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "out[].squeeze().contiguous", "train_loop.TrainLoop.unsqueeze", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "losses_list_var.append", "losses_list_float.append", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "loss_G.item", "len", "x.cuda.cuda.size", "disc.forward", "disc.forward", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "losses_list_var[].item", "disc.forward().squeeze", "out[].squeeze", "disc.forward().squeeze", "disc.forward", "disc.forward"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.update_nadir_point", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward"], ["", "", "print", "(", "'Saving final models...'", ")", "\n", "self", ".", "checkpointing", "(", ")", "\n", "\n", "", "def", "train_step", "(", "self", ",", "batch", ")", ":", "\n", "\n", "\t\t", "self", ".", "generator", ".", "train", "(", ")", "\n", "\n", "x", "=", "batch", "\n", "z_", "=", "torch", ".", "randn", "(", "x", ".", "size", "(", "0", ")", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ")", "\n", "y_real_", "=", "torch", ".", "ones", "(", "x", ".", "size", "(", "0", ")", ")", "\n", "y_fake_", "=", "torch", ".", "zeros", "(", "x", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "x", "=", "x", ".", "cuda", "(", ")", "\n", "z_", "=", "z_", ".", "cuda", "(", ")", "\n", "y_real_", "=", "y_real_", ".", "cuda", "(", ")", "\n", "y_fake_", "=", "y_fake_", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "self", ".", "generator", ".", "forward", "(", "z_", ")", "\n", "\n", "frames_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "out", ".", "size", "(", "1", ")", ")", ":", "\n", "\t\t\t", "gen_frame", "=", "self", ".", "f_generator", "(", "out", "[", ":", ",", "i", ",", ":", "]", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "frames_list", ".", "append", "(", "gen_frame", ".", "unsqueeze", "(", "2", ")", ")", "\n", "\n", "", "out", "=", "torch", ".", "cat", "(", "frames_list", ",", "2", ")", "\n", "\n", "out_d", "=", "out", ".", "detach", "(", ")", "\n", "\n", "loss_d", "=", "0", "\n", "\n", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t", "d_real", "=", "disc", ".", "forward", "(", "x", ")", ".", "squeeze", "(", ")", "\n", "d_fake", "=", "disc", ".", "forward", "(", "out_d", ")", ".", "squeeze", "(", ")", "\n", "loss_disc", "=", "F", ".", "binary_cross_entropy", "(", "d_real", ",", "y_real_", ")", "+", "F", ".", "binary_cross_entropy", "(", "d_fake", ",", "y_fake_", ")", "\n", "disc", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_disc", ".", "backward", "(", ")", "\n", "disc", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "loss_d", "+=", "loss_disc", ".", "item", "(", ")", "\n", "\n", "", "loss_d", "/=", "len", "(", "self", ".", "disc_list", ")", "\n", "\n", "## Train G", "\n", "\n", "loss_G", "=", "0", "\n", "\n", "if", "self", ".", "hyper_mode", ":", "\n", "\n", "\t\t\t", "losses_list_float", "=", "[", "]", "\n", "losses_list_var", "=", "[", "]", "\n", "\n", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t\t", "losses_list_var", ".", "append", "(", "F", ".", "binary_cross_entropy", "(", "disc", ".", "forward", "(", "out", ")", ".", "squeeze", "(", ")", ",", "y_real_", ")", ")", "\n", "losses_list_float", ".", "append", "(", "losses_list_var", "[", "-", "1", "]", ".", "item", "(", ")", ")", "\n", "\n", "", "self", ".", "update_nadir_point", "(", "losses_list_float", ")", "\n", "\n", "for", "i", ",", "loss", "in", "enumerate", "(", "losses_list_var", ")", ":", "\n", "\t\t\t\t", "loss_G", "-=", "torch", ".", "log", "(", "self", ".", "nadir", "-", "loss", ")", "\n", "\n", "", "", "else", ":", "\n", "\n", "\t\t\t", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t\t", "loss_G", "+=", "F", ".", "binary_cross_entropy", "(", "disc", ".", "forward", "(", "out", ")", ".", "squeeze", "(", ")", ",", "y_real_", ")", "\n", "", "self", ".", "proba", "=", "np", ".", "ones", "(", "len", "(", "self", ".", "disc_list", ")", ")", "*", "1", "/", "len", "(", "self", ".", "disc_list", ")", "\n", "\n", "", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_G", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.train_loop.TrainLoop.checkpointing": [[143, 158], ["print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "enumerate", "train_loop.TrainLoop.generator.state_dict", "train_loop.TrainLoop.optimizer.state_dict", "train_loop.TrainLoop.save_epoch_fmt_generator.format", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "disc.state_dict", "disc.optimizer.state_dict", "train_loop.TrainLoop.save_epoch_fmt_disc.format"], "methods", ["None"], ["\n", "return", "loss_G", ".", "item", "(", ")", "/", "len", "(", "self", ".", "disc_list", ")", ",", "loss_d", "\n", "\n", "", "def", "checkpointing", "(", "self", ")", ":", "\n", "\n", "# Checkpointing", "\n", "\t\t", "print", "(", "'Checkpointing...'", ")", "\n", "ckpt", "=", "{", "'generator_state'", ":", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'history'", ":", "self", ".", "history", ",", "\n", "'total_iters'", ":", "self", ".", "total_iters", ",", "\n", "'cur_epoch'", ":", "self", ".", "cur_epoch", "}", "\n", "torch", ".", "save", "(", "ckpt", ",", "self", ".", "save_epoch_fmt_generator", ".", "format", "(", "self", ".", "cur_epoch", ")", ")", "\n", "\n", "for", "i", ",", "disc", "in", "enumerate", "(", "self", ".", "disc_list", ")", ":", "\n", "\t\t\t", "ckpt", "=", "{", "'generator_state'", ":", "disc", ".", "state_dict", "(", ")", ",", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.train_loop.TrainLoop.load_checkpoint": [[159, 180], ["os.path.isfile", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "train_loop.TrainLoop.generator.load_state_dict", "train_loop.TrainLoop.optimizer.load_state_dict", "enumerate", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "disc.load_state_dict", "disc.optimizer.load_state_dict", "train_loop.TrainLoop.save_epoch_fmt_disc.format"], "methods", ["None"], ["'optimizer_state'", ":", "disc", ".", "optimizer", ".", "state_dict", "(", ")", "}", "\n", "torch", ".", "save", "(", "ckpt", ",", "self", ".", "save_epoch_fmt_disc", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "\n", "", "", "def", "load_checkpoint", "(", "self", ",", "ckpt", ")", ":", "\n", "\n", "\t\t", "if", "os", ".", "path", ".", "isfile", "(", "ckpt", ")", ":", "\n", "\n", "\t\t\t", "ckpt", "=", "torch", ".", "load", "(", "ckpt", ")", "\n", "# Load generator state", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "ckpt", "[", "'generator_state'", "]", ")", "\n", "# Load optimizer state", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer_state'", "]", ")", "\n", "# Load history", "\n", "self", ".", "history", "=", "ckpt", "[", "'history'", "]", "\n", "self", ".", "total_iters", "=", "ckpt", "[", "'total_iters'", "]", "\n", "self", ".", "cur_epoch", "=", "ckpt", "[", "'cur_epoch'", "]", "\n", "\n", "for", "i", ",", "disc", "in", "enumerate", "(", "self", ".", "disc_list", ")", ":", "\n", "\t\t\t\t", "ckpt", "=", "torch", ".", "load", "(", "self", ".", "save_epoch_fmt_disc", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "disc", ".", "load_state_dict", "(", "ckpt", "[", "'generator_state'", "]", ")", "\n", "disc", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer_state'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.train_loop.TrainLoop.update_nadir_point": [[181, 183], ["float", "numpy.max"], "methods", ["None"], ["", "", "else", ":", "\n", "\t\t\t", "print", "(", "'No checkpoint found at: {}'", ".", "format", "(", "ckpt", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.train_loop.TrainLoop.print_params_norms": [[184, 189], ["list", "print", "train_loop.TrainLoop.generator.parameters", "params.norm().item", "params.norm"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm"], ["", "", "def", "update_nadir_point", "(", "self", ",", "losses_list", ")", ":", "\n", "\t\t", "self", ".", "nadir", "=", "float", "(", "np", ".", "max", "(", "losses_list", ")", "*", "self", ".", "nadir_slack", "+", "1e-8", ")", "\n", "\n", "", "def", "print_params_norms", "(", "self", ")", ":", "\n", "\t\t", "norm", "=", "0.0", "\n", "for", "params", "in", "list", "(", "self", ".", "generator", ".", "parameters", "(", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.train_loop.TrainLoop.print_grad_norms": [[190, 195], ["list", "print", "train_loop.TrainLoop.generator.parameters", "params.grad.norm().item", "params.grad.norm"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm"], ["\t\t\t", "norm", "+=", "params", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "", "print", "(", "'Sum of weights norms: {}'", ".", "format", "(", "norm", ")", ")", "\n", "\n", "", "def", "print_grad_norms", "(", "self", ")", ":", "\n", "\t\t", "norm", "=", "0.0", "\n", "for", "params", "in", "list", "(", "self", ".", "generator", ".", "parameters", "(", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.Noise.__init__": [[21, 25], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_noise", ",", "sigma", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "Noise", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_noise", "=", "use_noise", "\n", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.Noise.forward": [[26, 30], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "T.FloatTensor().normal_", "T.FloatTensor", "x.size"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "use_noise", ":", "\n", "            ", "return", "x", "+", "self", ".", "sigma", "*", "Variable", "(", "T", ".", "FloatTensor", "(", "x", ".", "size", "(", ")", ")", ".", "normal_", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.ImageDiscriminator.__init__": [[33, 59], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.Noise", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "ndf", "=", "64", ",", "use_noise", "=", "False", ",", "noise_sigma", "=", "None", ")", ":", "\n", "        ", "super", "(", "ImageDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "use_noise", "=", "use_noise", "\n", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_channels", ",", "ndf", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", ",", "ndf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "8", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "8", ",", "1", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.ImageDiscriminator.forward": [[61, 64], ["models.ImageDiscriminator.main().squeeze", "models.ImageDiscriminator.main"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "h", "=", "self", ".", "main", "(", "input", ")", ".", "squeeze", "(", ")", "\n", "return", "h", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.PatchImageDiscriminator.__init__": [[67, 89], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.Noise", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "ndf", "=", "64", ",", "use_noise", "=", "False", ",", "noise_sigma", "=", "None", ")", ":", "\n", "        ", "super", "(", "PatchImageDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "use_noise", "=", "use_noise", "\n", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_channels", ",", "ndf", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", ",", "ndf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ndf", "*", "4", ",", "1", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.PatchImageDiscriminator.forward": [[91, 94], ["models.PatchImageDiscriminator.main().squeeze", "models.PatchImageDiscriminator.main"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "h", "=", "self", ".", "main", "(", "input", ")", ".", "squeeze", "(", ")", "\n", "return", "h", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.PatchVideoDiscriminator.__init__": [[97, 121], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.Noise", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_output_neurons", "=", "1", ",", "bn_use_gamma", "=", "True", ",", "use_noise", "=", "False", ",", "noise_sigma", "=", "None", ",", "ndf", "=", "64", ")", ":", "\n", "        ", "super", "(", "PatchVideoDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "n_output_neurons", "=", "n_output_neurons", "\n", "self", ".", "use_noise", "=", "use_noise", "\n", "self", ".", "bn_use_gamma", "=", "bn_use_gamma", "\n", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv3d", "(", "n_channels", ",", "ndf", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv3d", "(", "ndf", ",", "ndf", "*", "2", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "ndf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv3d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "ndf", "*", "4", ",", "1", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.PatchVideoDiscriminator.forward": [[123, 127], ["models.PatchVideoDiscriminator.main().squeeze", "models.PatchVideoDiscriminator.main"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "h", "=", "self", ".", "main", "(", "input", ")", ".", "squeeze", "(", ")", "\n", "\n", "return", "h", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoDiscriminator.__init__": [[130, 159], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.Noise", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.Noise", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "n_output_neurons", "=", "1", ",", "bn_use_gamma", "=", "True", ",", "use_noise", "=", "False", ",", "noise_sigma", "=", "None", ",", "ndf", "=", "64", ")", ":", "\n", "        ", "super", "(", "VideoDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "n_output_neurons", "=", "n_output_neurons", "\n", "self", ".", "use_noise", "=", "use_noise", "\n", "self", ".", "bn_use_gamma", "=", "bn_use_gamma", "\n", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv3d", "(", "n_channels", ",", "ndf", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv3d", "(", "ndf", ",", "ndf", "*", "2", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "ndf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv3d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "ndf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "Noise", "(", "use_noise", ",", "sigma", "=", "noise_sigma", ")", ",", "\n", "nn", ".", "Conv3d", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "ndf", "*", "8", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "ndf", "*", "8", ",", "n_output_neurons", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoDiscriminator.forward": [[161, 165], ["models.VideoDiscriminator.main().squeeze", "models.VideoDiscriminator.main"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "h", "=", "self", ".", "main", "(", "input", ")", ".", "squeeze", "(", ")", "\n", "\n", "return", "h", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.CategoricalVideoDiscriminator.__init__": [[168, 175], ["models.VideoDiscriminator.__init__"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "dim_categorical", ",", "n_output_neurons", "=", "1", ",", "use_noise", "=", "False", ",", "noise_sigma", "=", "None", ")", ":", "\n", "        ", "super", "(", "CategoricalVideoDiscriminator", ",", "self", ")", ".", "__init__", "(", "n_channels", "=", "n_channels", ",", "\n", "n_output_neurons", "=", "n_output_neurons", "+", "dim_categorical", ",", "\n", "use_noise", "=", "use_noise", ",", "\n", "noise_sigma", "=", "noise_sigma", ")", "\n", "\n", "self", ".", "dim_categorical", "=", "dim_categorical", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.CategoricalVideoDiscriminator.split": [[176, 178], ["input.size", "input.size"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "split", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "[", ":", ",", ":", "input", ".", "size", "(", "1", ")", "-", "self", ".", "dim_categorical", "]", ",", "input", "[", ":", ",", "input", ".", "size", "(", "1", ")", "-", "self", ".", "dim_categorical", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.CategoricalVideoDiscriminator.forward": [[179, 183], ["models.VideoDiscriminator.forward", "models.CategoricalVideoDiscriminator.split"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.CategoricalVideoDiscriminator.split"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "h", ",", "_", "=", "super", "(", "CategoricalVideoDiscriminator", ",", "self", ")", ".", "forward", "(", "input", ")", "\n", "labels", ",", "categ", "=", "self", ".", "split", "(", "h", ")", "\n", "return", "labels", ",", "categ", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.__init__": [[186, 215], ["torch.Module.__init__", "torch.GRUCell", "torch.GRUCell", "torch.GRUCell", "torch.GRUCell", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_channels", ",", "dim_z_content", ",", "dim_z_category", ",", "dim_z_motion", ",", "\n", "video_length", ",", "ngf", "=", "64", ")", ":", "\n", "        ", "super", "(", "VideoGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_channels", "=", "n_channels", "\n", "self", ".", "dim_z_content", "=", "dim_z_content", "\n", "self", ".", "dim_z_category", "=", "dim_z_category", "\n", "self", ".", "dim_z_motion", "=", "dim_z_motion", "\n", "self", ".", "video_length", "=", "video_length", "\n", "\n", "dim_z", "=", "dim_z_motion", "+", "dim_z_category", "+", "dim_z_content", "\n", "\n", "self", ".", "recurrent", "=", "nn", ".", "GRUCell", "(", "dim_z_motion", ",", "dim_z_motion", ")", "\n", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "dim_z", ",", "ngf", "*", "8", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "8", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "8", ",", "ngf", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "4", ",", "ngf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "2", ",", "ngf", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", ",", "self", ".", "n_channels", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_z_m": [[217, 230], ["range", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "models.VideoGenerator.get_gru_initial_state", "models.VideoGenerator.get_iteration_noise", "h_t.append", "h_k.view", "models.VideoGenerator.recurrent", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.get_gru_initial_state", "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.get_iteration_noise"], ["", "def", "sample_z_m", "(", "self", ",", "num_samples", ",", "video_len", "=", "None", ")", ":", "\n", "        ", "video_len", "=", "video_len", "if", "video_len", "is", "not", "None", "else", "self", ".", "video_length", "\n", "\n", "h_t", "=", "[", "self", ".", "get_gru_initial_state", "(", "num_samples", ")", "]", "\n", "\n", "for", "frame_num", "in", "range", "(", "video_len", ")", ":", "\n", "            ", "e_t", "=", "self", ".", "get_iteration_noise", "(", "num_samples", ")", "\n", "h_t", ".", "append", "(", "self", ".", "recurrent", "(", "e_t", ",", "h_t", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "z_m_t", "=", "[", "h_k", ".", "view", "(", "-", "1", ",", "1", ",", "self", ".", "dim_z_motion", ")", "for", "h_k", "in", "h_t", "]", "\n", "z_m", "=", "torch", ".", "cat", "(", "z_m_t", "[", "1", ":", "]", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "self", ".", "dim_z_motion", ")", "\n", "\n", "return", "z_m", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_z_categ": [[231, 245], ["numpy.random.randint", "numpy.zeros", "numpy.repeat", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "one_hot_video.cuda.cuda.cuda", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.arange"], "methods", ["None"], ["", "def", "sample_z_categ", "(", "self", ",", "num_samples", ",", "video_len", ")", ":", "\n", "        ", "video_len", "=", "video_len", "if", "video_len", "is", "not", "None", "else", "self", ".", "video_length", "\n", "\n", "classes_to_generate", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "dim_z_category", ",", "size", "=", "num_samples", ")", "\n", "one_hot", "=", "np", ".", "zeros", "(", "(", "num_samples", ",", "self", ".", "dim_z_category", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "one_hot", "[", "np", ".", "arange", "(", "num_samples", ")", ",", "classes_to_generate", "]", "=", "1", "\n", "one_hot_video", "=", "np", ".", "repeat", "(", "one_hot", ",", "video_len", ",", "axis", "=", "0", ")", "\n", "\n", "one_hot_video", "=", "torch", ".", "from_numpy", "(", "one_hot_video", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "one_hot_video", "=", "one_hot_video", ".", "cuda", "(", ")", "\n", "\n", "", "return", "Variable", "(", "one_hot_video", ")", ",", "classes_to_generate", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_z_content": [[246, 255], ["numpy.random.normal().astype", "numpy.repeat", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "content.cuda.cuda.cuda", "numpy.random.normal"], "methods", ["None"], ["", "def", "sample_z_content", "(", "self", ",", "num_samples", ",", "video_len", "=", "None", ")", ":", "\n", "        ", "video_len", "=", "video_len", "if", "video_len", "is", "not", "None", "else", "self", ".", "video_length", "\n", "\n", "content", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "num_samples", ",", "self", ".", "dim_z_content", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "content", "=", "np", ".", "repeat", "(", "content", ",", "video_len", ",", "axis", "=", "0", ")", "\n", "content", "=", "torch", ".", "from_numpy", "(", "content", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "content", "=", "content", ".", "cuda", "(", ")", "\n", "", "return", "Variable", "(", "content", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_z_video": [[256, 264], ["models.VideoGenerator.sample_z_content", "models.VideoGenerator.sample_z_categ", "models.VideoGenerator.sample_z_m", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_z_content", "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_z_categ", "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_z_m"], ["", "def", "sample_z_video", "(", "self", ",", "num_samples", ",", "video_len", "=", "None", ")", ":", "\n", "        ", "z_content", "=", "self", ".", "sample_z_content", "(", "num_samples", ",", "video_len", ")", "\n", "z_category", ",", "z_category_labels", "=", "self", ".", "sample_z_categ", "(", "num_samples", ",", "video_len", ")", "\n", "z_motion", "=", "self", ".", "sample_z_m", "(", "num_samples", ",", "video_len", ")", "\n", "\n", "z", "=", "torch", ".", "cat", "(", "[", "z_content", ",", "z_category", ",", "z_motion", "]", ",", "dim", "=", "1", ")", "\n", "\n", "return", "z", ",", "z_category_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_videos": [[265, 280], ["models.VideoGenerator.sample_z_video", "models.VideoGenerator.main", "h.permute.permute.view", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "h.permute.permute.permute", "z.view", "h.permute.permute.size", "h.permute.permute.size", "z_category_labels.cuda.cuda.cuda", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "z.size", "z.size", "h.permute.permute.size"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_z_video", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "sample_videos", "(", "self", ",", "num_samples", ",", "video_len", "=", "None", ")", ":", "\n", "        ", "video_len", "=", "video_len", "if", "video_len", "is", "not", "None", "else", "self", ".", "video_length", "\n", "\n", "z", ",", "z_category_labels", "=", "self", ".", "sample_z_video", "(", "num_samples", ",", "video_len", ")", "\n", "\n", "h", "=", "self", ".", "main", "(", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", ")", "\n", "h", "=", "h", ".", "view", "(", "h", ".", "size", "(", "0", ")", "/", "video_len", ",", "video_len", ",", "self", ".", "n_channels", ",", "h", ".", "size", "(", "3", ")", ",", "h", ".", "size", "(", "3", ")", ")", "\n", "\n", "z_category_labels", "=", "torch", ".", "from_numpy", "(", "z_category_labels", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "z_category_labels", "=", "z_category_labels", ".", "cuda", "(", ")", "\n", "\n", "", "h", "=", "h", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", "\n", "return", "h", ",", "Variable", "(", "z_category_labels", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_images": [[281, 290], ["models.VideoGenerator.sample_z_video", "numpy.sort().astype", "z.view.view.view", "models.VideoGenerator.main", "z.view.view.size", "z.view.view.size", "numpy.sort", "numpy.random.choice", "z.view.view.size"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.sample_z_video", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "sample_images", "(", "self", ",", "num_samples", ")", ":", "\n", "        ", "z", ",", "z_category_labels", "=", "self", ".", "sample_z_video", "(", "num_samples", "*", "self", ".", "video_length", "*", "2", ")", "\n", "\n", "j", "=", "np", ".", "sort", "(", "np", ".", "random", ".", "choice", "(", "z", ".", "size", "(", "0", ")", ",", "num_samples", ",", "replace", "=", "False", ")", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "z", "=", "z", "[", "j", ",", ":", ":", "]", "\n", "z", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", "\n", "h", "=", "self", ".", "main", "(", "z", ")", "\n", "\n", "return", "h", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.get_gru_initial_state": [[291, 293], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "T.FloatTensor().normal_", "T.FloatTensor"], "methods", ["None"], ["", "def", "get_gru_initial_state", "(", "self", ",", "num_samples", ")", ":", "\n", "        ", "return", "Variable", "(", "T", ".", "FloatTensor", "(", "num_samples", ",", "self", ".", "dim_z_motion", ")", ".", "normal_", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.VideoGenerator.get_iteration_noise": [[294, 296], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "T.FloatTensor().normal_", "T.FloatTensor"], "methods", ["None"], ["", "def", "get_iteration_noise", "(", "self", ",", "num_samples", ")", ":", "\n", "        ", "return", "Variable", "(", "T", ".", "FloatTensor", "(", "num_samples", ",", "self", ".", "dim_z_motion", ")", ".", "normal_", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.logger.Logger.__init__": [[17, 19], ["tensorflow.summary.FileWriter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "log_dir", ",", "suffix", "=", "None", ")", ":", "\n", "        ", "self", ".", "writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "log_dir", ",", "filename_suffix", "=", "suffix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.logger.Logger.scalar_summary": [[20, 23], ["tensorflow.Summary", "logger.Logger.writer.add_summary", "tensorflow.Summary.Value"], "methods", ["None"], ["", "def", "scalar_summary", "(", "self", ",", "tag", ",", "value", ",", "step", ")", ":", "\n", "        ", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "tag", ",", "simple_value", "=", "value", ")", "]", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.logger.Logger.image_summary": [[24, 46], ["enumerate", "tensorflow.Summary", "logger.Logger.writer.add_summary", "logger.Logger.writer.flush", "scipy.misc.toimage().save", "tensorflow.Summary.Image", "img_summaries.append", "StringIO", "tensorflow.Summary.Value", "BytesIO", "scipy.misc.toimage", "BytesIO.getvalue"], "methods", ["None"], ["", "def", "image_summary", "(", "self", ",", "tag", ",", "images", ",", "step", ")", ":", "\n", "\n", "        ", "img_summaries", "=", "[", "]", "\n", "for", "i", ",", "img", "in", "enumerate", "(", "images", ")", ":", "\n", "# Write the image to a string", "\n", "            ", "try", ":", "\n", "                ", "s", "=", "StringIO", "(", ")", "\n", "", "except", ":", "\n", "                ", "s", "=", "BytesIO", "(", ")", "\n", "", "scipy", ".", "misc", ".", "toimage", "(", "img", ")", ".", "save", "(", "s", ",", "format", "=", "\"png\"", ")", "\n", "\n", "# Create an Image object", "\n", "img_sum", "=", "tf", ".", "Summary", ".", "Image", "(", "encoded_image_string", "=", "s", ".", "getvalue", "(", ")", ",", "\n", "height", "=", "img", ".", "shape", "[", "0", "]", ",", "\n", "width", "=", "img", ".", "shape", "[", "1", "]", ")", "\n", "# Create a Summary value", "\n", "img_summaries", ".", "append", "(", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'%s/%d'", "%", "(", "tag", ",", "i", ")", ",", "image", "=", "img_sum", ")", ")", "\n", "\n", "# Create and write Summary", "\n", "", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "img_summaries", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "self", ".", "writer", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.logger.Logger.video_summary": [[47, 80], ["list", "numpy.zeros", "numpy.concatenate", "enumerate", "tensorflow.Summary", "logger.Logger.writer.add_summary", "logger.Logger.writer.flush", "vid.transpose", "scipy.misc.toimage().save", "tensorflow.Summary.Image", "img_summaries.append", "StringIO", "numpy.squeeze", "numpy.concatenate", "tensorflow.Summary.Value", "BytesIO", "numpy.split", "scipy.misc.toimage", "BytesIO.getvalue"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.CategoricalVideoDiscriminator.split"], ["", "def", "video_summary", "(", "self", ",", "tag", ",", "videos", ",", "step", ")", ":", "\n", "\n", "        ", "sh", "=", "list", "(", "videos", ".", "shape", ")", "\n", "sh", "[", "-", "1", "]", "=", "1", "\n", "\n", "separator", "=", "np", ".", "zeros", "(", "sh", ",", "dtype", "=", "videos", ".", "dtype", ")", "\n", "videos", "=", "np", ".", "concatenate", "(", "[", "videos", ",", "separator", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "img_summaries", "=", "[", "]", "\n", "for", "i", ",", "vid", "in", "enumerate", "(", "videos", ")", ":", "\n", "# Concat a video", "\n", "            ", "try", ":", "\n", "                ", "s", "=", "StringIO", "(", ")", "\n", "", "except", ":", "\n", "                ", "s", "=", "BytesIO", "(", ")", "\n", "\n", "", "v", "=", "vid", ".", "transpose", "(", "1", ",", "2", ",", "3", ",", "0", ")", "\n", "v", "=", "[", "np", ".", "squeeze", "(", "f", ")", "for", "f", "in", "np", ".", "split", "(", "v", ",", "v", ".", "shape", "[", "0", "]", ",", "axis", "=", "0", ")", "]", "\n", "img", "=", "np", ".", "concatenate", "(", "v", ",", "axis", "=", "1", ")", "[", ":", ",", ":", "-", "1", ",", ":", "]", "\n", "\n", "scipy", ".", "misc", ".", "toimage", "(", "img", ")", ".", "save", "(", "s", ",", "format", "=", "\"png\"", ")", "\n", "\n", "# Create an Image object", "\n", "img_sum", "=", "tf", ".", "Summary", ".", "Image", "(", "encoded_image_string", "=", "s", ".", "getvalue", "(", ")", ",", "\n", "height", "=", "img", ".", "shape", "[", "0", "]", ",", "\n", "width", "=", "img", ".", "shape", "[", "1", "]", ")", "\n", "# Create a Summary value", "\n", "img_summaries", ".", "append", "(", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'%s/%d'", "%", "(", "tag", ",", "i", ")", ",", "image", "=", "img_sum", ")", ")", "\n", "\n", "# Create and write Summary", "\n", "", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "img_summaries", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "self", ".", "writer", ".", "flush", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.util.show_batch": [[12, 26], ["vu.make_grid().numpy.transpose", "matplotlib.imshow", "matplotlib.show", "len", "numpy.concatenate", "torchvision.utils.make_grid().numpy", "normed.size", "torchvision.utils.make_grid().numpy", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "b.permute", "b.size"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["def", "show_batch", "(", "batch", ")", ":", "\n", "    ", "normed", "=", "batch", "*", "0.5", "+", "0.5", "\n", "is_video_batch", "=", "len", "(", "normed", ".", "size", "(", ")", ")", ">", "4", "\n", "\n", "if", "is_video_batch", ":", "\n", "        ", "rows", "=", "[", "vu", ".", "make_grid", "(", "b", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", ",", "nrow", "=", "b", ".", "size", "(", "1", ")", ")", ".", "numpy", "(", ")", "for", "b", "in", "normed", "]", "\n", "im", "=", "np", ".", "concatenate", "(", "rows", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "im", "=", "vu", ".", "make_grid", "(", "normed", ")", ".", "numpy", "(", ")", "\n", "\n", "", "im", "=", "im", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "\n", "plt", ".", "imshow", "(", "im", ")", "\n", "plt", ".", "show", "(", "block", "=", "True", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.generate_videos.save_video": [[32, 49], ["subprocess.Popen", "sp.Popen.stdin.write", "video.tostring"], "function", ["None"], ["def", "save_video", "(", "ffmpeg", ",", "video", ",", "filename", ")", ":", "\n", "\t\t", "command", "=", "[", "ffmpeg", ",", "\n", "'-y'", ",", "\n", "'-f'", ",", "'rawvideo'", ",", "\n", "'-vcodec'", ",", "'rawvideo'", ",", "\n", "'-s'", ",", "'64x64'", ",", "\n", "'-pix_fmt'", ",", "'rgb24'", ",", "\n", "'-r'", ",", "'8'", ",", "\n", "'-i'", ",", "'-'", ",", "\n", "'-c:v'", ",", "'mjpeg'", ",", "\n", "'-q:v'", ",", "'3'", ",", "\n", "'-an'", ",", "\n", "filename", "]", "\n", "\n", "pipe", "=", "sp", ".", "Popen", "(", "command", ",", "stdin", "=", "sp", ".", "PIPE", ")", "\n", "#pipe = sp.Popen(command, stdin=sp.PIPE, stderr=sp.PIPE)", "\n", "pipe", ".", "stdin", ".", "write", "(", "video", ".", "tostring", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.davis.gif_gen.gif_gen": [[9, 54], ["os.listdir", "tqdm.trange", "numpy.asarray", "range", "cv2.destroyAllWindows", "os.path.exists", "os.makedirs", "glob.glob", "glob.glob.sort", "numpy.asarray", "np.asarray.append", "range", "cv2.imwrite", "cv2.imread", "cv2.copyMakeBorder", "cv2.imshow", "range", "cv2.hconcat", "str"], "function", ["None"], ["def", "gif_gen", "(", "im_size", "=", "64", ",", "input_path", "=", "\"./results/\"", ",", "output_path", "=", "'./davis_gif/'", ")", ":", "\n", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "\n", "", "classesDir", "=", "os", ".", "listdir", "(", "input_path", ")", "\n", "vcat", "=", "[", "]", "\n", "\n", "total", "=", "[", "]", "\n", "aux_index", "=", "0", "\n", "INPUT_SIZE", "=", "20", "\n", "FRAMES", "=", "40", "\n", "for", "v", "in", "trange", "(", "0", ",", "INPUT_SIZE", ",", "desc", "=", "'Progress in DAVIS Dataset'", ")", ":", "\n", "\n", "        ", "filenames", "=", "glob", ".", "glob", "(", "input_path", "+", "classesDir", "[", "v", "]", "+", "\"/*.png\"", ")", "\n", "filenames", ".", "sort", "(", ")", "\n", "#print(filenames)", "\n", "images", "=", "[", "cv2", ".", "imread", "(", "filenames", "[", "i", "]", ",", "cv2", ".", "IMREAD_COLOR", ")", "for", "i", "in", "range", "(", "0", ",", "FRAMES", ")", "]", "\n", "\n", "images", "=", "np", ".", "asarray", "(", "images", ")", "\n", "\n", "imgSize", "=", "images", "[", "0", "]", ".", "shape", "\n", "\n", "total", ".", "append", "(", "images", ")", "\n", "", "total", "=", "np", ".", "asarray", "(", "total", ")", "\n", "\n", "for", "j", "in", "range", "(", "0", ",", "FRAMES", ")", ":", "\n", "        ", "hcat", "=", "[", "]", "\n", "for", "inputNumber", "in", "range", "(", "0", ",", "INPUT_SIZE", ")", ":", "\n", "            ", "black", "=", "[", "255", ",", "255", ",", "255", "]", "#---Color of the border---       ", "\n", "#print(images.shape)", "\n", "\n", "constant", "=", "cv2", ".", "copyMakeBorder", "(", "total", "[", "inputNumber", ",", "j", ",", ":", ",", ":", ",", ":", "]", ",", "2", ",", "1", ",", "1", ",", "2", ",", "cv2", ".", "BORDER_CONSTANT", ",", "value", "=", "black", ")", "\n", "\n", "cv2", ".", "imshow", "(", "'constant'", ",", "constant", ")", "\n", "#cv2.waitKey(0)", "\n", "if", "(", "hcat", "==", "[", "]", ")", ":", "\n", "                ", "hcat", "=", "constant", "\n", "", "else", ":", "\n", "                ", "hcat", "=", "cv2", ".", "hconcat", "(", "(", "hcat", ",", "constant", ")", ")", "\n", "", "", "cv2", ".", "imwrite", "(", "output_path", "+", "str", "(", "j", ")", "+", "\".png\"", ",", "hcat", ")", "\n", "#cv2.imshow('Final', hcat)", "\n", "#cv2.waitKey(0)", "\n", "\n", "", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.davis.davis_gen.davis_gen": [[8, 84], ["os.listdir", "open", "tqdm.trange", "open.close", "os.path.exists", "os.makedirs", "len", "glob.glob", "glob.glob.sort", "glob.glob", "glob.glob.sort", "numpy.asarray", "numpy.asarray", "tqdm.trange", "os.path.exists", "os.makedirs", "cv2.imread", "cv2.imread", "len", "numpy.zeros", "range", "int", "int", "cv2.bitwise_or", "str().split", "cv2.imwrite", "open.write", "range", "cv2.resize", "numpy.zeros", "str", "str", "min", "max", "min", "max"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.mocogan.models.CategoricalVideoDiscriminator.split"], ["def", "davis_gen", "(", "im_size", "=", "64", ",", "output_path", "=", "\"./results/\"", ")", ":", "\n", "\n", "\t", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "\t    ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "\n", "", "classesDir", "=", "os", ".", "listdir", "(", "'./JPEGImages/480p'", ")", "\n", "f", "=", "open", "(", "output_path", "+", "'log_file.txt'", ",", "'w'", ")", "\n", "\n", "for", "v", "in", "trange", "(", "0", ",", "len", "(", "classesDir", ")", ",", "desc", "=", "'Progress in DAVIS Dataset'", ")", ":", "\n", "\n", "\t\t", "emptyFlag", "=", "0", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", "+", "classesDir", "[", "v", "]", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "output_path", "+", "classesDir", "[", "v", "]", ")", "\n", "#classesDir[v]", "\n", "", "filenames", "=", "glob", ".", "glob", "(", "\"./Annotations/480p/\"", "+", "classesDir", "[", "v", "]", "+", "\"/*.png\"", ")", "\n", "filenames", ".", "sort", "(", ")", "\n", "images", "=", "[", "cv2", ".", "imread", "(", "file", ",", "0", ")", "for", "file", "in", "filenames", "]", "\n", "\n", "filenamesFull", "=", "glob", ".", "glob", "(", "\"./JPEGImages/480p/\"", "+", "classesDir", "[", "v", "]", "+", "\"/*.jpg\"", ")", "\n", "filenamesFull", ".", "sort", "(", ")", "\n", "imagesFull", "=", "[", "cv2", ".", "imread", "(", "file", ",", "cv2", ".", "IMREAD_COLOR", ")", "for", "file", "in", "filenamesFull", "]", "\n", "\n", "images", "=", "np", ".", "asarray", "(", "images", ")", "\n", "imagesFull", "=", "np", ".", "asarray", "(", "imagesFull", ")", "\n", "\n", "imgSize", "=", "images", "[", "0", "]", ".", "shape", "\n", "#print(imgSize)", "\n", "\n", "k", "=", "0", "\n", "for", "p", "in", "trange", "(", "0", ",", "len", "(", "images", ")", ",", "desc", "=", "'Progress in '", "+", "str", "(", "classesDir", "[", "v", "]", ")", ")", ":", "\n", "#print(img.shape)", "\n", "\t\t\t", "x", "=", "0.0", "\n", "y", "=", "0.0", "\n", "imgFinal", "=", "np", ".", "zeros", "(", "(", "imgSize", "[", "0", "]", ",", "imgSize", "[", "1", "]", ",", "3", ")", ")", "\n", "\n", "xLeft", "=", "999999", "\n", "xRight", "=", "-", "1", "\n", "yDown", "=", "-", "1", "\n", "yUp", "=", "999999", "\n", "#print(imagesFull.shape)", "\n", "for", "i", "in", "range", "(", "0", ",", "imgSize", "[", "0", "]", ")", ":", "\n", "\t\t\t\t", "for", "j", "in", "range", "(", "0", ",", "imgSize", "[", "1", "]", ")", ":", "\n", "\t\t\t\t\t", "if", "(", "images", "[", "p", ",", "i", ",", "j", "]", "==", "255", ")", ":", "\n", "\t\t\t\t\t\t", "xLeft", "=", "min", "(", "i", ",", "xLeft", ")", "\n", "xRight", "=", "max", "(", "i", ",", "xRight", ")", "\n", "yUp", "=", "min", "(", "j", ",", "yUp", ")", "\n", "yDown", "=", "max", "(", "j", ",", "yDown", ")", "\n", "\n", "", "", "", "x", "=", "int", "(", "(", "xLeft", "+", "xRight", ")", "/", "2", ")", "\n", "y", "=", "int", "(", "(", "yUp", "+", "yDown", ")", "/", "2", ")", "\n", "\n", "\n", "# get first masked value (foreground)", "\n", "imgFinal", "=", "cv2", ".", "bitwise_or", "(", "imagesFull", "[", "k", "]", ",", "imagesFull", "[", "k", "]", ",", "mask", "=", "images", "[", "p", "]", ")", "\n", "\n", "crop_img", "=", "imgFinal", "[", "xLeft", ":", "xRight", ",", "yUp", ":", "yDown", "]", "\n", "\n", "outputName", "=", "str", "(", "filenames", "[", "k", "]", ")", ".", "split", "(", "'/'", ")", "\n", "if", "(", "crop_img", ".", "shape", "[", "0", "]", "!=", "0", ")", ":", "\n", "#print(crop_img.shape)", "\n", "\t\t\t\t", "crop_img", "=", "cv2", ".", "resize", "(", "crop_img", ",", "(", "im_size", ",", "im_size", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "crop_img", "=", "np", ".", "zeros", "(", "(", "im_size", ",", "im_size", ",", "3", ")", ")", "\n", "emptyFlag", "=", "1", "\n", "\n", "", "cv2", ".", "imwrite", "(", "output_path", "+", "classesDir", "[", "v", "]", "+", "'/'", "+", "outputName", "[", "-", "1", "]", ",", "crop_img", ")", "\n", "\n", "## DEBUG IMAGES GENERATED", "\n", "#print(output_path + classesDir[v] + '/'+ outputName[-1])", "\n", "#cv2.imshow(\"teste\", crop_img)", "\n", "#cv2.waitKey(10)", "\n", "\n", "k", "=", "k", "+", "1", "\n", "", "if", "(", "emptyFlag", "==", "1", ")", ":", "\n", "\t\t\t", "f", ".", "write", "(", "'Class ('", "+", "classesDir", "[", "v", "]", "+", "') There are empty frames\\n'", ")", "\n", "", "", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.davis.davis_gen.davis_count_frames_per_class": [[85, 100], ["os.listdir", "range", "os.path.exists", "os.makedirs", "len", "glob.glob", "print", "os.path.exists", "os.makedirs", "str", "len"], "function", ["None"], ["", "def", "davis_count_frames_per_class", "(", "output_path", "=", "\"./results/\"", ")", ":", "\n", "\n", "\t", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "\t    ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "\n", "", "classesDir", "=", "os", ".", "listdir", "(", "'./JPEGImages/480p'", ")", "\n", "\n", "for", "v", "in", "range", "(", "0", ",", "len", "(", "classesDir", ")", ")", ":", "\n", "\n", "\t\t", "emptyFlag", "=", "0", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", "+", "classesDir", "[", "v", "]", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "output_path", "+", "classesDir", "[", "v", "]", ")", "\n", "#classesDir[v]", "\n", "", "filenames", "=", "glob", ".", "glob", "(", "\"./Annotations/480p/\"", "+", "classesDir", "[", "v", "]", "+", "\"/*.png\"", ")", "\n", "print", "(", "classesDir", "[", "v", "]", "+", "': '", "+", "str", "(", "len", "(", "filenames", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Generator_conv.__init__": [[7, 31], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LSTM", "torch.LSTM", "torch.LSTM", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.ConvTranspose1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "cuda_mode", ")", ":", "\n", "\t\t", "super", "(", "Generator_conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cuda_mode", "=", "cuda_mode", "\n", "\n", "## Considering (30, 90) inputs", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose1d", "(", "100", ",", "1024", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose1d", "(", "1024", ",", "512", ",", "kernel_size", "=", "8", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose1d", "(", "512", ",", "256", ",", "kernel_size", "=", "12", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose1d", "(", "256", ",", "30", ",", "kernel_size", "=", "16", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "30", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "90", ",", "256", ",", "2", ",", "bidirectional", "=", "True", ",", "batch_first", "=", "False", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "256", "*", "2", ",", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Generator_conv.forward": [[32, 52], ["models_zoo.Generator_conv.features", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "models_zoo.Generator_conv.lstm", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "h0.cuda.cuda.cuda", "c0.cuda.cuda.cuda", "models_zoo.Generator_conv.fc", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "30", ",", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "batch_size", "=", "x", ".", "size", "(", "1", ")", "\n", "seq_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "h0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "c0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "h0", "=", "h0", ".", "cuda", "(", ")", "\n", "c0", "=", "c0", ".", "cuda", "(", ")", "\n", "\n", "\n", "", "x", ",", "h_c", "=", "self", ".", "lstm", "(", "x", ",", "(", "h0", ",", "c0", ")", ")", "\n", "\n", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc", "(", "x", ".", "view", "(", "batch_size", "*", "seq_size", ",", "-", "1", ")", ")", ")", "\n", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "seq_size", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Generator_linear.__init__": [[55, 80], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.LSTM", "torch.LSTM", "torch.LSTM", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "cuda_mode", ")", ":", "\n", "\t\t", "super", "(", "Generator_linear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cuda_mode", "=", "cuda_mode", "\n", "\n", "## Considering (30, 90) inputs", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "#nn.Linear(100, 512, bias = False),", "\n", "#nn.BatchNorm1d(512),\t", "\n", "#nn.ReLU(),\t", "\n", "#nn.Linear(512, 1024, bias = False),\t", "\n", "#nn.BatchNorm1d(1024),", "\n", "#nn.ReLU(),\t \t\t", "\n", "#nn.Linear(1024, 2048, bias = False),\t", "\n", "#nn.BatchNorm1d(2048),\t", "\n", "#nn.ReLU(),", "\n", "#nn.Linear(2048, 3840, bias = False),", "\n", "nn", ".", "Linear", "(", "100", ",", "1920", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "1920", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "128", ",", "256", ",", "2", ",", "bidirectional", "=", "True", ",", "batch_first", "=", "False", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "256", "*", "2", ",", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Generator_linear.forward": [[81, 101], ["models_zoo.Generator_linear.features", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "models_zoo.Generator_linear.lstm", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view", "torch.tanh.squeeze", "torch.tanh.squeeze", "torch.tanh.squeeze", "torch.tanh.size", "torch.tanh.size", "torch.tanh.size", "h0.cuda.cuda.cuda", "c0.cuda.cuda.cuda", "models_zoo.Generator_linear.fc", "torch.tanh.view", "torch.tanh.view", "torch.tanh.view"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "features", "(", "x", ".", "squeeze", "(", "2", ")", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "15", ",", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "batch_size", "=", "x", ".", "size", "(", "1", ")", "\n", "seq_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "h0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "c0", "=", "torch", ".", "zeros", "(", "4", ",", "batch_size", ",", "256", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "h0", "=", "h0", ".", "cuda", "(", ")", "\n", "c0", "=", "c0", ".", "cuda", "(", ")", "\n", "\n", "", "x", ",", "h_c", "=", "self", ".", "lstm", "(", "x", ",", "(", "h0", ",", "c0", ")", ")", "\n", "\n", "x", "=", "torch", ".", "tanh", "(", "self", ".", "fc", "(", "x", ".", "view", "(", "batch_size", "*", "seq_size", ",", "-", "1", ")", ")", ")", "\n", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "seq_size", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.frames_generator.__init__": [[103, 144], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "models_zoo.frames_generator.output_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.frames_generator.output_layer.add_module", "len", "models_zoo.frames_generator.hidden_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.frames_generator.hidden_layer.add_module", "models_zoo.frames_generator.hidden_layer.add_module", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Tanh", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "str", "str", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "str", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "super", "(", "frames_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "num_filters", "=", "[", "1024", ",", "512", ",", "256", ",", "128", "]", "\n", "input_dim", "=", "100", "\n", "output_dim", "=", "1", "\n", "\n", "# Hidden layers", "\n", "self", ".", "hidden_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "num_filters", ")", ")", ":", "\n", "# Deconvolutional layer", "\n", "\t\t\t", "if", "i", "==", "0", ":", "\n", "\t\t\t\t", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "input_dim", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "num_filters", "[", "i", "-", "1", "]", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "", "deconv_name", "=", "'deconv'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "deconv_name", ",", "deconv", ")", "\n", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "deconv", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "deconv", ".", "bias", ",", "0.0", ")", "\n", "\n", "# Batch normalization", "\n", "bn_name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "bn_name", ",", "torch", ".", "nn", ".", "BatchNorm2d", "(", "num_filters", "[", "i", "]", ")", ")", "\n", "\n", "# Activation", "\n", "act_name", "=", "'act'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "act_name", ",", "torch", ".", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "# Output layer", "\n", "", "self", ".", "output_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "# Deconvolutional layer", "\n", "out", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "num_filters", "[", "i", "]", ",", "output_dim", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'out'", ",", "out", ")", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "out", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "out", ".", "bias", ",", "0.0", ")", "\n", "# Activation", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'act'", ",", "torch", ".", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.frames_generator.forward": [[145, 150], ["models_zoo.frames_generator.hidden_layer", "models_zoo.frames_generator.output_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "\t\t", "h", "=", "self", ".", "hidden_layer", "(", "x", ")", "\n", "out", "=", "self", ".", "output_layer", "(", "h", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.__init__": [[152, 203], ["super().__init__", "torch.utils.weight_norm", "torch.utils.weight_norm", "torch.utils.weight_norm", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "models_zoo.Discriminator.output_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.Discriminator.output_layer.add_module", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "len", "models_zoo.Discriminator.hidden_layer.add_module", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "models_zoo.Discriminator.hidden_layer.add_module", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "optimizer", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "str", "models_zoo.Discriminator.hidden_layer.add_module", "str", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "optimizer", "str", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "list", "list", "optimizer", "models_zoo.Discriminator.hidden_layer.parameters", "models_zoo.Discriminator.output_layer.parameters", "list", "list", "models_zoo.Discriminator.hidden_layer.parameters", "models_zoo.Discriminator.output_layer.parameters", "list", "list", "models_zoo.Discriminator.hidden_layer.parameters", "models_zoo.Discriminator.output_layer.parameters"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "optimizer", ",", "optimizer_name", ",", "lr", ",", "betas", ",", "batch_norm", "=", "False", ")", ":", "\n", "\t\t", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "projection", "=", "nn", ".", "utils", ".", "weight_norm", "(", "nn", ".", "Conv3d", "(", "3", ",", "1", ",", "kernel_size", "=", "(", "8", ",", "8", ",", "8", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ",", "name", "=", "\"weight\"", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "projection", ".", "weight_g", ",", "1", ")", "\n", "\n", "# Hidden layers", "\n", "self", ".", "hidden_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "#num_filters = [256, 512, 1024]", "\n", "#num_filters = [256, 512, 768]", "\n", "num_filters", "=", "[", "128", ",", "256", ",", "512", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "num_filters", ")", ")", ":", "\n", "# Convolutional layer", "\n", "\t\t\t", "if", "i", "==", "0", ":", "\n", "\t\t\t\t", "conv", "=", "nn", ".", "Conv3d", "(", "1", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "conv", "=", "nn", ".", "Conv3d", "(", "num_filters", "[", "i", "-", "1", "]", ",", "num_filters", "[", "i", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "conv_name", "=", "'conv'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "conv_name", ",", "conv", ")", "\n", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "conv", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "conv", ".", "bias", ",", "0.0", ")", "\n", "\n", "# Batch normalization", "\n", "if", "i", "!=", "0", "and", "batch_norm", ":", "\n", "\t\t\t\t", "bn_name", "=", "'bn'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "bn_name", ",", "torch", ".", "nn", ".", "BatchNorm3d", "(", "num_filters", "[", "i", "]", ")", ")", "\n", "\n", "# Activation", "\n", "", "act_name", "=", "'act'", "+", "str", "(", "i", "+", "1", ")", "\n", "self", ".", "hidden_layer", ".", "add_module", "(", "act_name", ",", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "\n", "# Output layer", "\n", "", "self", ".", "output_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "# Convolutional layer", "\n", "out", "=", "nn", ".", "Conv3d", "(", "num_filters", "[", "i", "]", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'out'", ",", "out", ")", "\n", "# Initializer", "\n", "nn", ".", "init", ".", "normal_", "(", "out", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "out", ".", "bias", ",", "0.0", ")", "\n", "# Activation", "\n", "self", ".", "output_layer", ".", "add_module", "(", "'act'", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "if", "optimizer_name", "==", "'adam'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ",", "betas", "=", "betas", ")", "\n", "", "elif", "optimizer_name", "==", "'amsgrad'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "amsgrad", "=", "True", ")", "\n", "", "elif", "optimizer_name", "==", "'rmsprop'", ":", "\n", "\t\t\t", "self", ".", "optimizer", "=", "optimizer", "(", "list", "(", "self", ".", "hidden_layer", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "output_layer", ".", "parameters", "(", ")", ")", ",", "lr", "=", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward": [[204, 209], ["models_zoo.Discriminator.projection", "models_zoo.Discriminator.hidden_layer", "models_zoo.Discriminator.output_layer"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "p_x", "=", "self", ".", "projection", "(", "x", ")", "\n", "h", "=", "self", ".", "hidden_layer", "(", "p_x", ")", "\n", "out", "=", "self", ".", "output_layer", "(", "h", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.data_load.Loader.__init__": [[10, 19], ["torch.utils.data.Dataset.__init__", "h5py.File", "len", "h5py.File.close"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__"], ["\t", "def", "__init__", "(", "self", ",", "hdf5_name", ")", ":", "\n", "\t\t", "super", "(", "Loader", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hdf5_name", "=", "hdf5_name", "\n", "\n", "open_file", "=", "h5py", ".", "File", "(", "self", ".", "hdf5_name", ",", "'r'", ")", "\n", "self", ".", "length", "=", "len", "(", "open_file", "[", "'data'", "]", ")", "\n", "open_file", ".", "close", "(", ")", "\n", "\n", "self", ".", "open_file", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.data_load.Loader.__getitem__": [[20, 36], ["numpy.moveaxis", "numpy.moveaxis", "torch.from_numpy().float", "h5py.File", "torch.from_numpy"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "\t\t", "if", "not", "self", ".", "open_file", ":", "self", ".", "open_file", "=", "h5py", ".", "File", "(", "self", ".", "hdf5_name", ",", "'r'", ")", "\n", "\n", "scene", "=", "self", ".", "open_file", "[", "'data'", "]", "[", "index", "]", "\n", "scene", "=", "torch", ".", "from_numpy", "(", "scene", ")", ".", "float", "(", ")", "\n", "\n", "img", "=", "scene", "\n", "img", "=", "(", "img", "-", "0.5", ")", "/", "0.5", "\n", "\n", "return", "img", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "length", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.data_load.Loader.__len__": [[37, 39], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm": [[15, 19], ["norm.clamp"], "function", ["None"], ["def", "denorm", "(", "unorm", ")", ":", "\n", "\t", "norm", "=", "(", "unorm", "+", "1", ")", "/", "2", "\n", "\n", "return", "norm", ".", "clamp", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.test_model": [[20, 66], ["f_generator.eval", "generator.eval", "torchvision.ToPILImage", "matplotlib.subplots", "range", "matplotlib.savefig", "matplotlib.close", "torch.randn().view", "generator.forward", "range", "torch.cat", "data.detach().cpu.detach().cpu", "test.save_gif", "zip", "matplotlib.subplots_adjust", "z_.cuda.cuda", "generator.forward.size", "f_generator", "frames_list.append", "axes[].flatten", "img.transpose.transpose", "ax.axis", "ax.set_adjustable", "ax.imshow", "torch.randn", "out[].unsqueeze().unsqueeze().contiguous", "test.denorm", "data.detach().cpu.detach", "str", "f_generator.detach", "out[].unsqueeze().unsqueeze", "out[].unsqueeze"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.save_gif", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm"], ["", "def", "test_model", "(", "generator", ",", "f_generator", ",", "n_tests", ",", "cuda_mode", ",", "enhancement", ",", "delay", ")", ":", "\n", "\n", "\t", "f_generator", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "\n", "to_pil", "=", "transforms", ".", "ToPILImage", "(", ")", "\n", "\n", "n_cols", ",", "n_rows", "=", "(", "n_tests", ",", "15", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_cols", ",", "n_rows", ",", "figsize", "=", "(", "n_rows", ",", "n_cols", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_tests", ")", ":", "\n", "\n", "\t\t", "z_", "=", "torch", ".", "randn", "(", "1", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "\t\t\t", "z_", "=", "z_", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "generator", ".", "forward", "(", "z_", ")", "\n", "\n", "frames_list", "=", "[", "]", "\n", "\n", "for", "j", "in", "range", "(", "out", ".", "size", "(", "1", ")", ")", ":", "\n", "\t\t\t", "gen_frame", "=", "f_generator", "(", "out", "[", ":", ",", "j", ",", ":", "]", ".", "contiguous", "(", ")", ")", "\n", "frames_list", ".", "append", "(", "denorm", "(", "gen_frame", ".", "detach", "(", ")", ")", ")", "\n", "\n", "", "data", "=", "torch", ".", "cat", "(", "frames_list", ",", "0", ")", "\n", "data", "=", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "save_gif", "(", "data", ",", "str", "(", "i", "+", "1", ")", "+", "'_rec.gif'", ",", "enhance", "=", "enhancement", ",", "delay", "=", "delay", ")", "\n", "\n", "\n", "for", "ax", ",", "img", "in", "zip", "(", "axes", "[", "i", ",", ":", "]", ".", "flatten", "(", ")", ",", "data", ")", ":", "\n", "\n", "\t\t\t", "img", "=", "img", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_adjustable", "(", "'box-forced'", ")", "\n", "\n", "ax", ".", "imshow", "(", "img", ",", "aspect", "=", "'equal'", ")", "\n", "\n", "", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0", ",", "hspace", "=", "0", ")", "\n", "\n", "", "save_fn", "=", "'all.pdf'", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.save_gif": [[67, 79], ["torchvision.ToPILImage", "frames[].save", "subprocess.call", "PIL.ImageEnhance.Sharpness().enhance", "transforms.ToPILImage.", "PIL.ImageEnhance.Sharpness", "transforms.ToPILImage.", "str"], "function", ["None"], ["", "def", "save_gif", "(", "data", ",", "file_name", ",", "enhance", ",", "delay", ")", ":", "\n", "\n", "\t", "to_pil", "=", "transforms", ".", "ToPILImage", "(", ")", "\n", "\n", "if", "enhance", ":", "\n", "\t\t", "frames", "=", "[", "ImageEnhance", ".", "Sharpness", "(", "to_pil", "(", "frame", ")", ")", ".", "enhance", "(", "1.0", ")", "for", "frame", "in", "data", "]", "\n", "", "else", ":", "\n", "\t\t", "frames", "=", "[", "to_pil", "(", "frame", ")", "for", "frame", "in", "data", "]", "\n", "\n", "", "frames", "[", "0", "]", ".", "save", "(", "file_name", ",", "save_all", "=", "True", ",", "append_images", "=", "frames", "[", "1", ":", "]", ")", "\n", "\n", "subprocess", ".", "call", "(", "\"gifsicle --delay \"", "+", "str", "(", "delay", ")", "+", "\" \"", "+", "file_name", "+", "\" > \"", "+", "\"s\"", "+", "file_name", ",", "shell", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.plot_real": [[80, 109], ["data_load.Loader", "matplotlib.subplots", "range", "matplotlib.savefig", "matplotlib.close", "numpy.random.randint", "real_loader[].squeeze", "real_sample.transpose.transpose", "print", "zip", "matplotlib.subplots_adjust", "len", "real_sample.transpose.size", "axes[].flatten", "test.denorm", "ax.axis", "ax.set_adjustable", "ax.imshow", "denorm.transpose"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.denorm"], ["", "def", "plot_real", "(", "n_tests", ",", "data_path", ")", ":", "\n", "\n", "\t", "real_loader", "=", "Loader", "(", "hdf5_name", "=", "data_path", ")", "\n", "\n", "n_cols", ",", "n_rows", "=", "(", "n_tests", ",", "15", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_cols", ",", "n_rows", ",", "figsize", "=", "(", "n_rows", ",", "n_cols", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_tests", ")", ":", "\n", "\n", "\t\t", "img_idx", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "real_loader", ")", ")", "\n", "real_sample", "=", "real_loader", "[", "img_idx", "]", ".", "squeeze", "(", ")", "\n", "real_sample", "=", "real_sample", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "print", "(", "real_sample", ".", "size", "(", ")", ")", "\n", "\n", "for", "ax", ",", "img", "in", "zip", "(", "axes", "[", "i", ",", ":", "]", ".", "flatten", "(", ")", ",", "real_sample", ")", ":", "\n", "\t\t\t", "img", "=", "denorm", "(", "img", ".", "transpose", "(", "0", ",", "-", "1", ")", ")", "\n", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "ax", ".", "set_adjustable", "(", "'box-forced'", ")", "\n", "\n", "ax", ".", "imshow", "(", "img", ",", "aspect", "=", "'equal'", ")", "\n", "\n", "", "plt", ".", "subplots_adjust", "(", "wspace", "=", "0", ",", "hspace", "=", "0", ")", "\n", "\n", "", "save_fn", "=", "'real.pdf'", "\n", "plt", ".", "savefig", "(", "save_fn", ")", "\n", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.test.plot_learningcurves": [[110, 118], ["enumerate", "matplotlib.show", "matplotlib.figure", "matplotlib.plot", "matplotlib.title"], "function", ["None"], ["", "def", "plot_learningcurves", "(", "history", ",", "keys", ")", ":", "\n", "\n", "\t", "for", "i", ",", "key", "in", "enumerate", "(", "keys", ")", ":", "\n", "\t\t", "plt", ".", "figure", "(", "i", "+", "1", ")", "\n", "plt", ".", "plot", "(", "history", "[", "key", "]", ")", "\n", "plt", ".", "title", "(", "key", ")", "\n", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.flying_shapes_gen.data_gen": [[24, 53], ["third_party.dataset.FlyingShapesDataHandler", "tqdm.trange", "numpy.rollaxis", "dataset.FlyingShapesDataHandler.GetUnlabelledBatch", "range", "np.rollaxis.append", "numpy.asarray", "sample.append", "numpy.moveaxis", "print", "print", "print", "print", "cv2.imshow", "cv2.waitKey", "len", "numpy.asarray", "numpy.asarray"], "function", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.GetUnlabelledBatch"], ["def", "data_gen", "(", "n_samples", "=", "500", ",", "im_size", "=", "30", ",", "n_frames", "=", "128", ",", "batch_size", "=", "5", ",", "debug", "=", "False", ",", "debug_opencv", "=", "False", ")", ":", "\n", "\n", "\t", "data_source", "=", "dataset", ".", "FlyingShapesDataHandler", "(", "batch_size", "=", "batch_size", ",", "seq_len", "=", "n_frames", ",", "im_size", "=", "im_size", ")", "\n", "dat", "=", "[", "]", "\n", "for", "n", "in", "trange", "(", "0", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "np_batch", "=", "data_source", ".", "GetUnlabelledBatch", "(", ")", "\n", "batch", "=", "{", "\n", "'image'", ":", "np_batch", "[", "'image'", "]", ",", "\n", "'bbox'", ":", "np_batch", "[", "'bbox'", "]", "\n", "}", "\n", "\n", "sample", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_frames", ")", ":", "\n", "\t\t\t", "sample", ".", "append", "(", "batch", "[", "'image'", "]", "[", "0", "]", "[", "i", "]", ")", "\n", "\n", "if", "(", "debug", ")", ":", "\n", "\t\t\t\t", "print", "(", "batch", "[", "'image'", "]", "[", "0", "]", "[", "i", "]", ".", "shape", ")", "\n", "print", "(", "\"sample: \"", ",", "len", "(", "sample", ")", ")", "\n", "print", "(", "np", ".", "asarray", "(", "sample", ")", ".", "shape", ")", "\n", "", "if", "(", "debug_opencv", ")", ":", "\n", "\t\t\t\t", "print", "(", "debug_opencv", ")", "\n", "import", "cv2", "\n", "cv2", ".", "imshow", "(", "\"debug\"", ",", "np", ".", "asarray", "(", "batch", "[", "'image'", "]", "[", "0", "]", "[", "i", "]", ")", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "\n", "", "", "dat", ".", "append", "(", "np", ".", "moveaxis", "(", "sample", ",", "0", ",", "-", "1", ")", ")", "\n", "", "dat", "=", "np", ".", "rollaxis", "(", "np", ".", "asarray", "(", "dat", ")", ",", "4", ",", "3", ")", "\n", "return", "dat", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.__init__": [[16, 42], ["os.path.join", "os.path.join", "os.getcwd", "train_loop.TrainLoop.load_checkpoint", "os.path.isdir", "os.mkdir", "train_loop.TrainLoop.save_epoch_fmt_generator.format"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.load_checkpoint"], ["\t", "def", "__init__", "(", "self", ",", "gen", ",", "f_gen", ",", "disc_list", ",", "optimizer", ",", "train_loader", ",", "nadir_slack", "=", "1.1", ",", "checkpoint_path", "=", "None", ",", "checkpoint_epoch", "=", "None", ",", "hyper", "=", "True", ",", "cuda", "=", "True", ")", ":", "\n", "\t\t", "if", "checkpoint_path", "is", "None", ":", "\n", "# Save to current directory", "\n", "\t\t\t", "self", ".", "checkpoint_path", "=", "os", ".", "getcwd", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "checkpoint_path", "=", "checkpoint_path", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "checkpoint_path", ")", ":", "\n", "\t\t\t\t", "os", ".", "mkdir", "(", "self", ".", "checkpoint_path", ")", "\n", "\n", "", "", "self", ".", "save_epoch_fmt_generator", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_path", ",", "'checkpoint_{}ep.pt'", ")", "\n", "self", ".", "save_epoch_fmt_disc", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_path", ",", "'D{}_checkpoint.pt'", ")", "\n", "self", ".", "cuda_mode", "=", "cuda", "\n", "self", ".", "generator", "=", "gen", "\n", "self", ".", "f_generator", "=", "f_gen", "\n", "self", ".", "disc_list", "=", "disc_list", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "train_loader", "=", "train_loader", "\n", "#self.valid_loader = valid_loader", "\n", "self", ".", "history", "=", "{", "'hv'", ":", "[", "]", ",", "'disc'", ":", "[", "]", "}", "\n", "self", ".", "total_iters", "=", "0", "\n", "self", ".", "cur_epoch", "=", "0", "\n", "self", ".", "nadir_slack", "=", "nadir_slack", "\n", "self", ".", "hyper_mode", "=", "hyper", "\n", "\n", "if", "checkpoint_epoch", "is", "not", "None", ":", "\n", "\t\t\t", "self", ".", "load_checkpoint", "(", "self", ".", "save_epoch_fmt_generator", ".", "format", "(", "checkpoint_epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train": [[43, 74], ["print", "train_loop.TrainLoop.checkpointing", "print", "tqdm.tqdm.tqdm", "train_loop.TrainLoop.history[].append", "train_loop.TrainLoop.history[].append", "print", "enumerate", "train_loop.TrainLoop.train_step", "train_loop.TrainLoop.checkpointing"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.checkpointing", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train_step", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.checkpointing"], ["", "", "def", "train", "(", "self", ",", "n_epochs", "=", "1", ",", "patience", "=", "5", ",", "save_every", "=", "10", ")", ":", "\n", "\n", "\t\t", "while", "self", ".", "cur_epoch", "<", "n_epochs", ":", "\n", "\t\t\t", "print", "(", "'Epoch {}/{}'", ".", "format", "(", "self", ".", "cur_epoch", "+", "1", ",", "n_epochs", ")", ")", "\n", "train_iter", "=", "tqdm", "(", "enumerate", "(", "self", ".", "train_loader", ")", ")", "\n", "\n", "hv_epoch", "=", "0.0", "\n", "disc_epoch", "=", "0.0", "\n", "\n", "# Train step", "\n", "\n", "for", "t", ",", "batch", "in", "train_iter", ":", "\n", "\t\t\t\t", "hv", ",", "disc", "=", "self", ".", "train_step", "(", "batch", ")", "\n", "self", ".", "total_iters", "+=", "1", "\n", "hv_epoch", "+=", "hv", "\n", "disc_epoch", "+=", "disc", "\n", "\n", "", "self", ".", "history", "[", "'hv'", "]", ".", "append", "(", "hv_epoch", "/", "(", "t", "+", "1", ")", ")", "\n", "self", ".", "history", "[", "'disc'", "]", ".", "append", "(", "disc_epoch", "/", "(", "t", "+", "1", ")", ")", "\n", "\n", "print", "(", "'NLH and Discriminators loss : {:0.4f}, {:0.4f}'", ".", "format", "(", "self", ".", "history", "[", "'hv'", "]", "[", "-", "1", "]", ",", "self", ".", "history", "[", "'disc'", "]", "[", "-", "1", "]", ")", ")", "\n", "\n", "self", ".", "cur_epoch", "+=", "1", "\n", "\n", "if", "self", ".", "cur_epoch", "%", "save_every", "==", "0", ":", "\n", "\t\t\t\t", "self", ".", "checkpointing", "(", ")", "\n", "\n", "\n", "# saving final models", "\n", "", "", "print", "(", "'Saving final models...'", ")", "\n", "self", ".", "checkpointing", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train_step": [[75, 145], ["train_loop.TrainLoop.generator.train", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.randn().view", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "train_loop.TrainLoop.generator.forward", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.detach", "torch.cat.detach", "torch.cat.detach", "len", "train_loop.TrainLoop.optimizer.zero_grad", "loss_G.backward", "train_loop.TrainLoop.optimizer.step", "x.cuda.cuda.size", "x.cuda.cuda.size", "x.cuda.cuda.cuda", "z_.cuda.cuda.cuda", "y_real_.cuda.cuda.cuda", "y_fake_.cuda.cuda.cuda", "torch.cat.size", "torch.cat.size", "torch.cat.size", "train_loop.TrainLoop.f_generator", "frames_list.append", "disc.forward().squeeze", "disc.forward().squeeze", "disc.optimizer.zero_grad", "loss_disc.backward", "disc.optimizer.step", "loss_disc.item", "train_loop.TrainLoop.update_nadir_point", "enumerate", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "out[].unsqueeze().unsqueeze().contiguous", "train_loop.TrainLoop.unsqueeze", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "losses_list_var.append", "losses_list_float.append", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "len", "loss_G.item", "len", "x.cuda.cuda.size", "disc.forward", "disc.forward", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "losses_list_var[].item", "disc.forward().squeeze", "numpy.ones", "out[].unsqueeze().unsqueeze", "disc.forward().squeeze", "len", "disc.forward", "out[].unsqueeze", "disc.forward"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.train", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.update_nadir_point", "home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.size", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward", "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.models_zoo.Discriminator.forward"], ["", "def", "train_step", "(", "self", ",", "batch", ")", ":", "\n", "\n", "\t\t", "self", ".", "generator", ".", "train", "(", ")", "\n", "\n", "x", "=", "batch", "\n", "z_", "=", "torch", ".", "randn", "(", "x", ".", "size", "(", "0", ")", ",", "100", ")", ".", "view", "(", "-", "1", ",", "100", ",", "1", ")", "\n", "y_real_", "=", "torch", ".", "ones", "(", "x", ".", "size", "(", "0", ")", ")", "\n", "y_fake_", "=", "torch", ".", "zeros", "(", "x", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "self", ".", "cuda_mode", ":", "\n", "\t\t\t", "x", "=", "x", ".", "cuda", "(", ")", "\n", "z_", "=", "z_", ".", "cuda", "(", ")", "\n", "y_real_", "=", "y_real_", ".", "cuda", "(", ")", "\n", "y_fake_", "=", "y_fake_", ".", "cuda", "(", ")", "\n", "\n", "", "out", "=", "self", ".", "generator", ".", "forward", "(", "z_", ")", "\n", "\n", "frames_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "out", ".", "size", "(", "1", ")", ")", ":", "\n", "\t\t\t", "gen_frame", "=", "self", ".", "f_generator", "(", "out", "[", ":", ",", "i", ",", ":", "]", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "contiguous", "(", ")", ")", "\n", "frames_list", ".", "append", "(", "gen_frame", ".", "unsqueeze", "(", "2", ")", ")", "\n", "\n", "", "out", "=", "torch", ".", "cat", "(", "frames_list", ",", "2", ")", "\n", "\n", "out_d", "=", "out", ".", "detach", "(", ")", "\n", "\n", "loss_d", "=", "0", "\n", "\n", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t", "d_real", "=", "disc", ".", "forward", "(", "x", ")", ".", "squeeze", "(", ")", "\n", "d_fake", "=", "disc", ".", "forward", "(", "out_d", ")", ".", "squeeze", "(", ")", "\n", "loss_disc", "=", "F", ".", "binary_cross_entropy", "(", "d_real", ",", "y_real_", ")", "+", "F", ".", "binary_cross_entropy", "(", "d_fake", ",", "y_fake_", ")", "\n", "disc", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_disc", ".", "backward", "(", ")", "\n", "disc", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "loss_d", "+=", "loss_disc", ".", "item", "(", ")", "\n", "\n", "", "loss_d", "/=", "len", "(", "self", ".", "disc_list", ")", "\n", "\n", "## Train G", "\n", "\n", "loss_G", "=", "0", "\n", "\n", "if", "self", ".", "hyper_mode", ":", "\n", "\n", "\t\t\t", "losses_list_float", "=", "[", "]", "\n", "losses_list_var", "=", "[", "]", "\n", "\n", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t\t", "losses_list_var", ".", "append", "(", "F", ".", "binary_cross_entropy", "(", "disc", ".", "forward", "(", "out", ")", ".", "squeeze", "(", ")", ",", "y_real_", ")", ")", "\n", "losses_list_float", ".", "append", "(", "losses_list_var", "[", "-", "1", "]", ".", "item", "(", ")", ")", "\n", "\n", "", "self", ".", "update_nadir_point", "(", "losses_list_float", ")", "\n", "\n", "for", "i", ",", "loss", "in", "enumerate", "(", "losses_list_var", ")", ":", "\n", "\t\t\t\t", "loss_G", "-=", "torch", ".", "log", "(", "self", ".", "nadir", "-", "loss", ")", "\n", "\n", "", "", "else", ":", "\n", "\n", "\t\t\t", "for", "disc", "in", "self", ".", "disc_list", ":", "\n", "\t\t\t\t", "loss_G", "+=", "F", ".", "binary_cross_entropy", "(", "disc", ".", "forward", "(", "out", ")", ".", "squeeze", "(", ")", ",", "y_real_", ")", "\n", "", "self", ".", "proba", "=", "np", ".", "ones", "(", "len", "(", "self", ".", "disc_list", ")", ")", "*", "1", "/", "len", "(", "self", ".", "disc_list", ")", "\n", "\n", "", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_G", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "return", "loss_G", ".", "item", "(", ")", "/", "len", "(", "self", ".", "disc_list", ")", ",", "loss_d", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.checkpointing": [[146, 161], ["print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "enumerate", "train_loop.TrainLoop.generator.state_dict", "train_loop.TrainLoop.optimizer.state_dict", "train_loop.TrainLoop.save_epoch_fmt_generator.format", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "disc.state_dict", "disc.optimizer.state_dict", "train_loop.TrainLoop.save_epoch_fmt_disc.format"], "methods", ["None"], ["", "def", "checkpointing", "(", "self", ")", ":", "\n", "\n", "# Checkpointing", "\n", "\t\t", "print", "(", "'Checkpointing...'", ")", "\n", "ckpt", "=", "{", "'generator_state'", ":", "self", ".", "generator", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'history'", ":", "self", ".", "history", ",", "\n", "'total_iters'", ":", "self", ".", "total_iters", ",", "\n", "'cur_epoch'", ":", "self", ".", "cur_epoch", "}", "\n", "torch", ".", "save", "(", "ckpt", ",", "self", ".", "save_epoch_fmt_generator", ".", "format", "(", "self", ".", "cur_epoch", ")", ")", "\n", "\n", "for", "i", ",", "disc", "in", "enumerate", "(", "self", ".", "disc_list", ")", ":", "\n", "\t\t\t", "ckpt", "=", "{", "'generator_state'", ":", "disc", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state'", ":", "disc", ".", "optimizer", ".", "state_dict", "(", ")", "}", "\n", "torch", ".", "save", "(", "ckpt", ",", "self", ".", "save_epoch_fmt_disc", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.load_checkpoint": [[162, 183], ["os.path.isfile", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "train_loop.TrainLoop.generator.load_state_dict", "train_loop.TrainLoop.optimizer.load_state_dict", "enumerate", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "disc.load_state_dict", "disc.optimizer.load_state_dict", "train_loop.TrainLoop.save_epoch_fmt_disc.format"], "methods", ["None"], ["", "", "def", "load_checkpoint", "(", "self", ",", "ckpt", ")", ":", "\n", "\n", "\t\t", "if", "os", ".", "path", ".", "isfile", "(", "ckpt", ")", ":", "\n", "\n", "\t\t\t", "ckpt", "=", "torch", ".", "load", "(", "ckpt", ")", "\n", "# Load generator state", "\n", "self", ".", "generator", ".", "load_state_dict", "(", "ckpt", "[", "'generator_state'", "]", ")", "\n", "# Load optimizer state", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer_state'", "]", ")", "\n", "# Load history", "\n", "self", ".", "history", "=", "ckpt", "[", "'history'", "]", "\n", "self", ".", "total_iters", "=", "ckpt", "[", "'total_iters'", "]", "\n", "self", ".", "cur_epoch", "=", "ckpt", "[", "'cur_epoch'", "]", "\n", "\n", "for", "i", ",", "disc", "in", "enumerate", "(", "self", ".", "disc_list", ")", ":", "\n", "\t\t\t\t", "ckpt", "=", "torch", ".", "load", "(", "self", ".", "save_epoch_fmt_disc", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "disc", ".", "load_state_dict", "(", "ckpt", "[", "'generator_state'", "]", ")", "\n", "disc", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer_state'", "]", ")", "\n", "\n", "", "", "else", ":", "\n", "\t\t\t", "print", "(", "'No checkpoint found at: {}'", ".", "format", "(", "ckpt", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.update_nadir_point": [[184, 186], ["float", "numpy.max"], "methods", ["None"], ["", "", "def", "update_nadir_point", "(", "self", ",", "losses_list", ")", ":", "\n", "\t\t", "self", ".", "nadir", "=", "float", "(", "np", ".", "max", "(", "losses_list", ")", "*", "self", ".", "nadir_slack", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.print_params_norms": [[187, 192], ["list", "print", "train_loop.TrainLoop.generator.parameters", "params.norm().item", "params.norm"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm"], ["", "def", "print_params_norms", "(", "self", ")", ":", "\n", "\t\t", "norm", "=", "0.0", "\n", "for", "params", "in", "list", "(", "self", ".", "generator", ".", "parameters", "(", ")", ")", ":", "\n", "\t\t\t", "norm", "+=", "params", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "", "print", "(", "'Sum of weights norms: {}'", ".", "format", "(", "norm", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.flying_shapes.train_loop.TrainLoop.print_grad_norms": [[193, 198], ["list", "print", "train_loop.TrainLoop.generator.parameters", "params.grad.norm().item", "params.grad.norm"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.bouncing_balls.bb_gen.norm"], ["", "def", "print_grad_norms", "(", "self", ")", ":", "\n", "\t\t", "norm", "=", "0.0", "\n", "for", "params", "in", "list", "(", "self", ".", "generator", ".", "parameters", "(", ")", ")", ":", "\n", "\t\t\t", "norm", "+=", "params", ".", "grad", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "", "print", "(", "'Sum of grads norms: {}'", ".", "format", "(", "norm", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.__init__": [[33, 71], ["print", "numpy.arange", "numpy.random.shuffle", "_pickle.load", "numpy.float32().transpose", "open", "numpy.float32"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "config", "=", "None", ",", "file_path", "=", "None", ",", "batch_size", "=", "None", ",", "\n", "seq_len", "=", "None", ",", "im_size", "=", "30", ")", ":", "\n", "    ", "if", "config", "is", "None", ":", "\n", "      ", "self", ".", "seq_length_", "=", "10", "\n", "self", ".", "batch_size_", "=", "7", "\n", "self", ".", "image_size_", "=", "im_size", "\n", "self", ".", "num_digits_", "=", "3", "\n", "self", ".", "step_length_", "=", "0.5", "# 1/initial_speed (i_s*cos(angle) = velocity)", "\n", "self", ".", "digit_size_", "=", "16", "\n", "self", ".", "frame_size_", "=", "(", "self", ".", "image_size_", "**", "2", ")", "*", "3", "\n", "self", ".", "file_path_", "=", "'flying_shapes2.pkl'", "\n", "", "else", ":", "\n", "      ", "self", ".", "seq_length_", "=", "config", "[", "'num_frames'", "]", "\n", "self", ".", "batch_size_", "=", "config", "[", "'batch_size'", "]", "\n", "self", ".", "image_size_", "=", "config", "[", "'image_size'", "]", "\n", "self", ".", "num_digits_", "=", "config", "[", "'num_digits'", "]", "\n", "self", ".", "step_length_", "=", "config", "[", "'step_length'", "]", "\n", "self", ".", "digit_size_", "=", "config", "[", "'digit_size'", "]", "\n", "self", ".", "frame_size_", "=", "(", "config", "[", "'image_size'", "]", "**", "2", ")", "*", "3", "\n", "self", ".", "file_path_", "=", "config", "[", "'file_path'", "]", "\n", "", "if", "file_path", "is", "not", "None", ":", "\n", "      ", "self", ".", "file_path_", "=", "file_path", "\n", "", "if", "batch_size", "is", "not", "None", ":", "\n", "      ", "self", ".", "batch_size_", "=", "batch_size", "\n", "", "if", "seq_len", "is", "not", "None", ":", "\n", "      ", "self", ".", "seq_length_", "=", "seq_len", "\n", "\n", "", "try", ":", "\n", "      ", "dataset", "=", "pickle", ".", "load", "(", "open", "(", "self", ".", "file_path_", ",", "\"rb\"", ")", ",", "encoding", "=", "'bytes'", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "      ", "raise", "e", "\n", "\n", "", "print", "(", "dataset", ")", "\n", "self", ".", "data_", "=", "np", ".", "float32", "(", "dataset", "[", "b'images'", "]", ")", ".", "transpose", "(", "0", ",", "3", ",", "1", ",", "2", ")", "/", "255.", "\n", "self", ".", "labels_", "=", "dataset", "[", "b'labels'", "]", "\n", "self", ".", "indices_", "=", "np", ".", "arange", "(", "self", ".", "data_", ".", "shape", "[", "0", "]", ")", "\n", "self", ".", "row_", "=", "0", "\n", "np", ".", "random", ".", "shuffle", "(", "self", ".", "indices_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.GetBatchSize": [[72, 74], ["None"], "methods", ["None"], ["", "def", "GetBatchSize", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "batch_size_", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.GetDims": [[75, 77], ["None"], "methods", ["None"], ["", "def", "GetDims", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "frame_size_", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.GetSeqLength": [[78, 80], ["None"], "methods", ["None"], ["", "def", "GetSeqLength", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "seq_length_", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.GetRandomTrajectory": [[81, 124], ["numpy.random.rand", "numpy.random.rand", "numpy.sin", "numpy.cos", "numpy.zeros", "numpy.zeros", "range", "range", "numpy.random.rand"], "methods", ["None"], ["", "def", "GetRandomTrajectory", "(", "self", ",", "batch_size", ")", ":", "\n", "    ", "\"\"\"Generates a random trajectory, dealing with bounces off the 'walls'.\"\"\"", "\n", "length", "=", "self", ".", "seq_length_", "\n", "canvas_size", "=", "self", ".", "image_size_", "-", "self", ".", "digit_size_", "\n", "\n", "# Initial position uniform random inside the box.", "\n", "y", "=", "np", ".", "random", ".", "rand", "(", "batch_size", ")", "\n", "x", "=", "np", ".", "random", ".", "rand", "(", "batch_size", ")", "\n", "\n", "# Choose a random velocity.", "\n", "theta", "=", "np", ".", "random", ".", "rand", "(", "batch_size", ")", "*", "2", "*", "np", ".", "pi", "\n", "v_y", "=", "np", ".", "sin", "(", "theta", ")", "\n", "v_x", "=", "np", ".", "cos", "(", "theta", ")", "\n", "\n", "start_y", "=", "np", ".", "zeros", "(", "(", "length", ",", "batch_size", ")", ")", "\n", "start_x", "=", "np", ".", "zeros", "(", "(", "length", ",", "batch_size", ")", ")", "\n", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "# Take a step along velocity.", "\n", "      ", "y", "+=", "v_y", "*", "self", ".", "step_length_", "\n", "x", "+=", "v_x", "*", "self", ".", "step_length_", "\n", "\n", "# Bounce off edges.", "\n", "for", "j", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "if", "x", "[", "j", "]", "<=", "0", ":", "\n", "          ", "x", "[", "j", "]", "=", "0", "\n", "v_x", "[", "j", "]", "=", "-", "v_x", "[", "j", "]", "\n", "", "if", "x", "[", "j", "]", ">=", "1.0", ":", "\n", "          ", "x", "[", "j", "]", "=", "1.0", "\n", "v_x", "[", "j", "]", "=", "-", "v_x", "[", "j", "]", "\n", "", "if", "y", "[", "j", "]", "<=", "0", ":", "\n", "          ", "y", "[", "j", "]", "=", "0", "\n", "v_y", "[", "j", "]", "=", "-", "v_y", "[", "j", "]", "\n", "", "if", "y", "[", "j", "]", ">=", "1.0", ":", "\n", "          ", "y", "[", "j", "]", "=", "1.0", "\n", "v_y", "[", "j", "]", "=", "-", "v_y", "[", "j", "]", "\n", "", "", "start_y", "[", "i", ",", ":", "]", "=", "y", "\n", "start_x", "[", "i", ",", ":", "]", "=", "x", "\n", "\n", "# Scale to the size of the canvas.", "\n", "", "start_y", "=", "(", "canvas_size", "*", "start_y", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "start_x", "=", "(", "canvas_size", "*", "start_x", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "return", "start_y", ",", "start_x", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.Overlap": [[125, 127], ["numpy.maximum"], "methods", ["None"], ["", "def", "Overlap", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "    ", "return", "np", ".", "maximum", "(", "a", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.GetLabelledBatch": [[128, 189], ["dataset.FlyingShapesDataHandler.GetRandomTrajectory", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "len", "range", "numpy.zeros.transpose", "numpy.zeros.transpose", "set", "len", "len", "range", "set", "numpy.random.shuffle", "numpy.asarray", "dataset.FlyingShapesDataHandler.Overlap", "numpy.eye"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.GetRandomTrajectory", "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.Overlap"], ["", "def", "GetLabelledBatch", "(", "self", ",", "label_key", "=", "None", ")", ":", "\n", "    ", "\"\"\"Return a labelled minibatch of data; a dict of image, bbox, label.\"\"\"", "\n", "start_y", ",", "start_x", "=", "self", ".", "GetRandomTrajectory", "(", "\n", "self", ".", "batch_size_", "*", "self", ".", "num_digits_", ")", "\n", "\n", "labels_by_index", "=", "[", "[", "]", "for", "label", "in", "self", ".", "labels_", "]", "\n", "for", "elem", "in", "self", ".", "labels_", ":", "\n", "      ", "labels_by_index", "[", "self", ".", "labels_", "[", "elem", "]", "[", "0", "]", "]", "=", "[", "self", ".", "labels_", "[", "elem", "]", "[", "1", "]", ",", "\n", "self", ".", "labels_", "[", "elem", "]", "[", "2", "]", ",", "elem", "]", "\n", "\n", "", "if", "label_key", "==", "'colour'", "or", "label_key", "==", "'color'", ":", "\n", "      ", "labels_size", "=", "len", "(", "set", "(", "[", "l", "[", "0", "]", "for", "l", "in", "labels_by_index", "]", ")", ")", "\n", "", "elif", "label_key", "==", "'shape'", ":", "\n", "      ", "labels_size", "=", "len", "(", "set", "(", "[", "l", "[", "1", "]", "for", "l", "in", "labels_by_index", "]", ")", ")", "\n", "", "else", ":", "# unique classes for each colour+shape combination", "\n", "      ", "labels_size", "=", "len", "(", "labels_by_index", ")", "\n", "\n", "# minibatch data", "\n", "", "data", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size_", ",", "self", ".", "seq_length_", ",", "\n", "3", ",", "self", ".", "image_size_", ",", "self", ".", "image_size_", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "bboxes", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size_", ",", "self", ".", "seq_length_", ",", "4", ")", ")", "\n", "labels", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size_", ",", "self", ".", "seq_length_", ",", "labels_size", ")", ")", "\n", "\n", "for", "j", "in", "range", "(", "self", ".", "batch_size_", ")", ":", "\n", "      ", "for", "n", "in", "range", "(", "self", ".", "num_digits_", ")", ":", "\n", "\n", "# get random digit from dataset", "\n", "        ", "ind", "=", "self", ".", "indices_", "[", "self", ".", "row_", "]", "\n", "self", ".", "row_", "+=", "1", "\n", "if", "self", ".", "row_", "==", "self", ".", "data_", ".", "shape", "[", "0", "]", ":", "\n", "          ", "self", ".", "row_", "=", "0", "\n", "np", ".", "random", ".", "shuffle", "(", "self", ".", "indices_", ")", "\n", "", "digit_image", "=", "self", ".", "data_", "[", "ind", ",", ":", ",", ":", ",", ":", "]", "\n", "labels_by_index", "=", "[", "[", "]", "for", "label", "in", "self", ".", "labels_", "]", "\n", "for", "elem", "in", "self", ".", "labels_", ":", "\n", "          ", "labels_by_index", "[", "self", ".", "labels_", "[", "elem", "]", "[", "0", "]", "]", "=", "[", "self", ".", "labels_", "[", "elem", "]", "[", "1", "]", ",", "\n", "self", ".", "labels_", "[", "elem", "]", "[", "2", "]", ",", "elem", "]", "\n", "\n", "", "if", "label_key", "==", "'colour'", "or", "label_key", "==", "'color'", ":", "\n", "          ", "label", "=", "labels_by_index", "[", "ind", "]", "[", "0", "]", "\n", "", "elif", "label_key", "==", "'shape'", ":", "\n", "          ", "label", "=", "labels_by_index", "[", "ind", "]", "[", "1", "]", "\n", "", "else", ":", "# unique classes for each colour+shape combination", "\n", "          ", "label", "=", "ind", "\n", "\n", "# generate video", "\n", "", "for", "i", "in", "range", "(", "self", ".", "seq_length_", ")", ":", "\n", "          ", "top", "=", "start_y", "[", "i", ",", "j", "*", "self", ".", "num_digits_", "+", "n", "]", "\n", "left", "=", "start_x", "[", "i", ",", "j", "*", "self", ".", "num_digits_", "+", "n", "]", "\n", "bottom", "=", "top", "+", "self", ".", "digit_size_", "\n", "right", "=", "left", "+", "self", ".", "digit_size_", "\n", "for", "c", "in", "[", "0", ",", "1", ",", "2", "]", ":", "\n", "            ", "data", "[", "j", ",", "i", ",", "c", ",", "top", ":", "bottom", ",", "left", ":", "right", "]", "=", "self", ".", "Overlap", "(", "\n", "data", "[", "j", ",", "i", ",", "c", ",", "top", ":", "bottom", ",", "left", ":", "right", "]", ",", "digit_image", "[", "c", "]", ")", "\n", "", "bboxes", "[", "j", ",", "i", "]", "=", "np", ".", "asarray", "(", "[", "top", ",", "left", ",", "bottom", ",", "right", "]", ")", "\n", "labels", "[", "j", ",", "i", "]", "=", "np", ".", "eye", "(", "labels_size", ")", "[", "label", "]", "\n", "\n", "# imagenet-style format", "\n", "", "", "", "return", "{", "'image'", ":", "data", ".", "transpose", "(", "(", "0", ",", "1", ",", "3", ",", "4", ",", "2", ")", ")", ",", "\n", "'bbox'", ":", "bboxes", ",", "\n", "'label'", ":", "labels", ".", "transpose", "(", "(", "1", ",", "0", ",", "2", ")", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.GetUnlabelledBatch": [[190, 225], ["dataset.FlyingShapesDataHandler.GetRandomTrajectory", "numpy.zeros", "numpy.zeros", "range", "range", "numpy.zeros.transpose", "range", "numpy.random.shuffle", "numpy.asarray", "dataset.FlyingShapesDataHandler.Overlap"], "methods", ["home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.GetRandomTrajectory", "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.Overlap"], ["", "def", "GetUnlabelledBatch", "(", "self", ")", ":", "\n", "    ", "\"\"\"Return a minibatch of data as a dictionary in the style of imagenet.\"\"\"", "\n", "start_y", ",", "start_x", "=", "self", ".", "GetRandomTrajectory", "(", "\n", "self", ".", "batch_size_", "*", "self", ".", "num_digits_", ")", "\n", "\n", "# minibatch data", "\n", "data", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size_", ",", "self", ".", "seq_length_", ",", "\n", "3", ",", "self", ".", "image_size_", ",", "self", ".", "image_size_", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "bboxes", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size_", ",", "self", ".", "seq_length_", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "j", "in", "range", "(", "self", ".", "batch_size_", ")", ":", "\n", "      ", "for", "n", "in", "range", "(", "self", ".", "num_digits_", ")", ":", "\n", "\n", "# get random digit from dataset", "\n", "        ", "ind", "=", "self", ".", "indices_", "[", "self", ".", "row_", "]", "\n", "self", ".", "row_", "+=", "1", "\n", "if", "self", ".", "row_", "==", "self", ".", "data_", ".", "shape", "[", "0", "]", ":", "\n", "          ", "self", ".", "row_", "=", "0", "\n", "np", ".", "random", ".", "shuffle", "(", "self", ".", "indices_", ")", "\n", "", "digit_image", "=", "self", ".", "data_", "[", "ind", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "# generate video", "\n", "for", "i", "in", "range", "(", "self", ".", "seq_length_", ")", ":", "\n", "          ", "top", "=", "start_y", "[", "i", ",", "j", "*", "self", ".", "num_digits_", "+", "n", "]", "\n", "left", "=", "start_x", "[", "i", ",", "j", "*", "self", ".", "num_digits_", "+", "n", "]", "\n", "bottom", "=", "top", "+", "self", ".", "digit_size_", "\n", "right", "=", "left", "+", "self", ".", "digit_size_", "\n", "for", "c", "in", "[", "0", ",", "1", ",", "2", "]", ":", "\n", "            ", "data", "[", "j", ",", "i", ",", "c", ",", "top", ":", "bottom", ",", "left", ":", "right", "]", "=", "self", ".", "Overlap", "(", "\n", "data", "[", "j", ",", "i", ",", "c", ",", "top", ":", "bottom", ",", "left", ":", "right", "]", ",", "digit_image", "[", "c", "]", ")", "\n", "", "bboxes", "[", "j", ",", "i", "]", "=", "np", ".", "asarray", "(", "[", "top", ",", "left", ",", "bottom", ",", "right", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "# imagenet-style format", "\n", "", "", "", "return", "{", "'image'", ":", "data", ".", "transpose", "(", "(", "0", ",", "1", ",", "3", ",", "4", ",", "2", ")", ")", ",", "'bbox'", ":", "bboxes", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.belaalb_frameGAN.third_party.dataset.FlyingShapesDataHandler.DisplayData": [[226, 261], ["data.transpose.transpose.reshape", "data.transpose.transpose.transpose", "matplotlib.figure", "matplotlib.figure", "matplotlib.clf", "matplotlib.clf", "range", "matplotlib.draw", "matplotlib.draw", "os.path.splitext", "matplotlib.subplot", "matplotlib.subplot", "matplotlib.subplot.add_patch", "matplotlib.imshow", "matplotlib.imshow", "matplotlib.axis", "matplotlib.axis", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.Rectangle", "matplotlib.Rectangle"], "methods", ["None"], ["", "def", "DisplayData", "(", "self", ",", "data", ",", "fig", "=", "1", ",", "case_id", "=", "0", ",", "output_file", "=", "None", ")", ":", "\n", "    ", "\"\"\"Display a sequence of frames with bboxes using matplotlib.\"\"\"", "\n", "\n", "data", "=", "data", "[", "0", "]", "\n", "bboxes", "=", "data", "[", "1", "]", "\n", "\n", "if", "output_file", "is", "not", "None", ":", "\n", "      ", "name", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "output_file", ")", "\n", "output_file", "=", "'%s_frames%s'", "%", "(", "name", ",", "ext", ")", "\n", "\n", "# get data", "\n", "", "data", "=", "data", "[", "case_id", ",", ":", "]", "\n", "bboxes", "=", "bboxes", "[", "case_id", ",", ":", "]", "\n", "data", "[", "data", ">", "1.", "]", "=", "1.", "\n", "data", "[", "data", "<", "0.", "]", "=", "0.", "\n", "data", "=", "data", ".", "reshape", "(", "-", "1", ",", "3", ",", "self", ".", "image_size_", ",", "self", ".", "image_size_", ")", "\n", "data", "=", "data", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "\n", "# create figure", "\n", "num_rows", "=", "1", "\n", "plt", ".", "figure", "(", "2", "*", "fig", ",", "figsize", "=", "(", "20", ",", "1", ")", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "seq_length_", ")", ":", "\n", "      ", "figgy", "=", "plt", ".", "subplot", "(", "num_rows", ",", "self", ".", "seq_length_", ",", "i", "+", "1", ")", "\n", "figgy", ".", "add_patch", "(", "patches", ".", "Rectangle", "(", "(", "bboxes", "[", "i", "]", "[", "1", "]", ",", "bboxes", "[", "i", "]", "[", "0", "]", ")", ",", "\n", "(", "bboxes", "[", "i", "]", "[", "3", "]", "-", "bboxes", "[", "i", "]", "[", "1", "]", ")", ",", "\n", "(", "bboxes", "[", "i", "]", "[", "2", "]", "-", "bboxes", "[", "i", "]", "[", "0", "]", ")", ",", "\n", "linewidth", "=", "2", ",", "edgecolor", "=", "'b'", ",", "\n", "facecolor", "=", "'none'", ")", ")", "\n", "plt", ".", "imshow", "(", "data", "[", "i", "]", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "", "plt", ".", "draw", "(", ")", "\n", "\n", "if", "output_file", "is", "not", "None", ":", "\n", "      ", "plt", ".", "savefig", "(", "output_file", ",", "bbox_inches", "=", "'tight'", ")", "\n", "", "", "", ""]]}