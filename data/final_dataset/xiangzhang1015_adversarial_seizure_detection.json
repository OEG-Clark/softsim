{"home.repos.pwc.inspect_result.xiangzhang1015_adversarial_seizure_detection.None.main.one_hot": [[9, 16], ["y_.reshape.reshape", "len", "int", "numpy.max", "numpy.eye", "numpy.array"], "function", ["None"], ["def", "one_hot", "(", "y_", ")", ":", "\n", "# Function to encode output labels from number indexes", "\n", "# e.g.: [[5], [0], [3]] --> [[0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0]]", "\n", "    ", "y_", "=", "y_", ".", "reshape", "(", "len", "(", "y_", ")", ")", "\n", "y_", "=", "[", "int", "(", "x", ")", "for", "x", "in", "y_", "]", "\n", "n_values", "=", "np", ".", "max", "(", "y_", ")", "+", "1", "\n", "return", "np", ".", "eye", "(", "n_values", ")", "[", "np", ".", "array", "(", "y_", ",", "dtype", "=", "np", ".", "int32", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangzhang1015_adversarial_seizure_detection.None.main.extract": [[18, 41], ["int", "range", "numpy.array", "new_x.reshape.reshape", "numpy.array", "numpy.hstack", "numpy.vstack", "numpy.average", "range", "new_x.reshape.append", "np.array.append", "new_x.reshape.append", "np.array.append", "int", "int", "int", "int", "int", "int"], "function", ["None"], ["", "def", "extract", "(", "input", ",", "n_fea", ",", "time_window", ",", "moving", ")", ":", "\n", "    ", "global", "n_classes", "\n", "xx", "=", "input", "[", ":", ",", ":", "n_fea", "]", "\n", "yy", "=", "input", "[", ":", ",", "n_fea", ":", "n_fea", "+", "1", "]", "\n", "new_x", "=", "[", "]", "\n", "new_y", "=", "[", "]", "\n", "number", "=", "int", "(", "(", "xx", ".", "shape", "[", "0", "]", "/", "moving", ")", "-", "1", ")", "\n", "for", "i", "in", "range", "(", "number", ")", ":", "\n", "        ", "ave_y", "=", "np", ".", "average", "(", "yy", "[", "int", "(", "i", "*", "moving", ")", ":", "int", "(", "i", "*", "moving", "+", "time_window", ")", "]", ")", "\n", "if", "ave_y", "in", "range", "(", "n_classes", "+", "1", ")", ":", "\n", "            ", "new_x", ".", "append", "(", "xx", "[", "int", "(", "i", "*", "moving", ")", ":", "int", "(", "i", "*", "moving", "+", "time_window", ")", ",", ":", "]", ")", "\n", "new_y", ".", "append", "(", "ave_y", ")", "\n", "", "else", ":", "\n", "            ", "new_x", ".", "append", "(", "xx", "[", "int", "(", "i", "*", "moving", ")", ":", "int", "(", "i", "*", "moving", "+", "time_window", ")", ",", ":", "]", ")", "\n", "new_y", ".", "append", "(", "0", ")", "\n", "\n", "", "", "new_x", "=", "np", ".", "array", "(", "new_x", ")", "\n", "new_x", "=", "new_x", ".", "reshape", "(", "[", "-", "1", ",", "n_fea", "*", "time_window", "]", ")", "\n", "new_y", "=", "np", ".", "array", "(", "new_y", ")", "\n", "new_y", ".", "shape", "=", "[", "new_y", ".", "shape", "[", "0", "]", ",", "1", "]", "\n", "data", "=", "np", ".", "hstack", "(", "(", "new_x", ",", "new_y", ")", ")", "\n", "data", "=", "np", ".", "vstack", "(", "(", "data", ",", "data", "[", "-", "1", "]", ")", ")", "# add the last sample again, to make the sample number round", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangzhang1015_adversarial_seizure_detection.None.main.compute_accuracy_t": [[42, 49], ["sess.run", "tensorflow.equal", "tensorflow.reduce_mean", "sess.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], "function", ["None"], ["", "def", "compute_accuracy_t", "(", "v_xs", ",", "v_ys", ")", ":", "# this function only calculate the acc of CNN_task", "\n", "    ", "global", "prediction_t", "\n", "y_pre", "=", "sess", ".", "run", "(", "prediction_t", ",", "feed_dict", "=", "{", "xs", ":", "v_xs", ",", "keep_prob", ":", "keep", "}", ")", "\n", "correct_prediction", "=", "tf", ".", "equal", "(", "tf", ".", "argmax", "(", "y_pre", ",", "1", ")", ",", "tf", ".", "argmax", "(", "v_ys", ",", "1", ")", ")", "\n", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "result", "=", "sess", ".", "run", "(", "accuracy", ",", "feed_dict", "=", "{", "xs", ":", "v_xs", ",", "ys_t", ":", "v_ys", ",", "keep_prob", ":", "keep", "}", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.xiangzhang1015_adversarial_seizure_detection.None.main.compute_accuracy_p": [[51, 58], ["sess.run", "tensorflow.equal", "tensorflow.reduce_mean", "sess.run", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], "function", ["None"], ["", "def", "compute_accuracy_p", "(", "v_xs", ",", "v_ys", ")", ":", "# this function only calculate the acc of CNN_task", "\n", "    ", "global", "prediction_p", "\n", "y_pre", "=", "sess", ".", "run", "(", "prediction_p", ",", "feed_dict", "=", "{", "xs", ":", "v_xs", ",", "keep_prob", ":", "keep", "}", ")", "\n", "correct_prediction", "=", "tf", ".", "equal", "(", "tf", ".", "argmax", "(", "y_pre", ",", "1", ")", ",", "tf", ".", "argmax", "(", "v_ys", ",", "1", ")", ")", "\n", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "result", "=", "sess", ".", "run", "(", "accuracy", ",", "feed_dict", "=", "{", "xs", ":", "v_xs", ",", "ys_p", ":", "v_ys", ",", "keep_prob", ":", "keep", "}", ")", "\n", "return", "result", "\n", "\n"]]}