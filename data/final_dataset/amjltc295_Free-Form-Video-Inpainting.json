{"home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.init_warping_model": [[28, 33], ["utils.logging_config.logger.info", "model.loss.TemporalWarpingError"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["def", "init_warping_model", "(", "checkpoint_path", ")", ":", "\n", "    ", "global", "temporal_warping_error", "\n", "if", "temporal_warping_error", "is", "None", ":", "\n", "        ", "logger", ".", "info", "(", "f\"Constructing warp error module using flownet path: {checkpoint_path}..\"", ")", "\n", "temporal_warping_error", "=", "TemporalWarpingError", "(", "checkpoint_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.init_i3d_model": [[35, 49], ["utils.logging_config.logger.info", "model.i3d.InceptionI3d", "model.i3d.InceptionI3d.load_state_dict", "model.i3d.InceptionI3d.to", "os.path.exists", "utils.util.make_dirs", "urllib.request.urlretrieve", "torch.load", "torch.device", "os.path.dirname"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs"], ["", "", "def", "init_i3d_model", "(", ")", ":", "\n", "    ", "global", "i3d_model", "\n", "if", "i3d_model", "is", "not", "None", ":", "\n", "        ", "return", "\n", "\n", "", "logger", ".", "info", "(", "\"Loading I3D model for FID score ..\"", ")", "\n", "i3d_model_weight", "=", "'../libs/model_weights/i3d_rgb_imagenet.pt'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "i3d_model_weight", ")", ":", "\n", "        ", "make_dirs", "(", "os", ".", "path", ".", "dirname", "(", "i3d_model_weight", ")", ")", "\n", "urllib", ".", "request", ".", "urlretrieve", "(", "'https://github.com/piergiaj/pytorch-i3d/'", "\n", "'raw/master/models/rgb_imagenet.pt'", ",", "i3d_model_weight", ")", "\n", "", "i3d_model", "=", "InceptionI3d", "(", "400", ",", "in_channels", "=", "3", ",", "final_endpoint", "=", "'Logits'", ")", "\n", "i3d_model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "i3d_model_weight", ")", ")", "\n", "i3d_model", ".", "to", "(", "torch", ".", "device", "(", "'cuda:0'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.init_dm_model": [[51, 59], ["utils.logging_config.logger.info", "libs.PerceptualSimilarity.dist_model.DistModel", "PerceptualSimilarity.dist_model.DistModel.initialize"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.initialize"], ["", "def", "init_dm_model", "(", ")", ":", "\n", "    ", "global", "dm_model", "\n", "if", "dm_model", "is", "not", "None", ":", "\n", "        ", "return", "\n", "\n", "", "logger", ".", "info", "(", "\"Loading PerceptualSimilarity model ..\"", ")", "\n", "dm_model", "=", "PerceptualSimilarity", ".", "dist_model", ".", "DistModel", "(", ")", "\n", "dm_model", ".", "initialize", "(", "model", "=", "'net-lin'", ",", "net", "=", "'alex'", ",", "use_gpu", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.parse_args": [[61, 106], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-rmd'", ",", "'--root_mask_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Root directory for mask_dirs\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-rgd'", ",", "'--root_gt_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Root directory for ground truth_dirs\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-rrd'", ",", "'--root_result_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Root directory for result_dirs\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-o'", ",", "'--output_filename'", ",", "\n", "type", "=", "str", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-rp'", ",", "'--result_postfix'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "''", ",", "\n", "help", "=", "\"Result dir post dirname\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-fc'", ",", "'--flownet_checkpoint'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"/project/project-mira3/yaliangchang/FlowNet2_checkpoint.pth.tar\"", ",", "\n", "help", "=", "\"Path to flownet2 checkpoint\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-tn'", ",", "'--test_num'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "100", ",", "\n", "help", "=", "\"Number of videos to infer\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--only_eval_fid'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Set this to evaluate only fid score\"", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_image": [[109, 122], ["numpy.array", "numpy.array", "utils.util.mean_squared_error", "libs.video_quality.psnr.psnr", "libs.video_quality.ssim.ssim_exact", "libs.PerceptualSimilarity.util.util.im2tensor", "libs.PerceptualSimilarity.util.util.im2tensor", "evaluate.init_dm_model", "dm_model.forward"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.mean_squared_error", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.psnr.psnr", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.ssim.ssim_exact", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.im2tensor", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.im2tensor", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.init_dm_model", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward"], ["", "def", "evaluate_image", "(", "gt", ",", "result", ")", ":", "\n", "    ", "gt", "=", "np", ".", "array", "(", "gt", ")", "\n", "result", "=", "np", ".", "array", "(", "result", ")", "\n", "mse", "=", "mean_squared_error", "(", "gt", "/", "255", ",", "result", "/", "255", ")", "\n", "psnr_value", "=", "psnr", ".", "psnr", "(", "gt", ",", "result", ")", "\n", "ssim_value", "=", "ssim", ".", "ssim_exact", "(", "gt", "/", "255", ",", "result", "/", "255", ")", "\n", "\n", "gt_tensor", "=", "PerceptualSimilarity", ".", "util", ".", "util", ".", "im2tensor", "(", "gt", "[", "...", ",", ":", "3", "]", ")", "\n", "result_tensor", "=", "PerceptualSimilarity", ".", "util", ".", "util", ".", "im2tensor", "(", "result", "[", "...", ",", ":", "3", "]", ")", "\n", "\n", "init_dm_model", "(", ")", "\n", "p_dist", "=", "dm_model", ".", "forward", "(", "gt_tensor", ",", "result_tensor", ")", "\n", "return", "mse", ",", "ssim_value", ",", "psnr_value", ",", "p_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_video": [[124, 141], ["os.path.exists", "evaluate.evaluate_video_error", "utils.readers.FrameReader", "utils.readers.FrameReader", "IOError", "len", "len", "utils.logging_config.logger.error", "utils.readers.MaskReader", "len"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_video_error"], ["", "def", "evaluate_video", "(", "\n", "result_video_dir", ":", "str", ",", "\n", "gt_video_dir", ":", "str", ",", "\n", "video_mask_dir", ":", "str", ",", "\n", "flownet_checkpoint_path", ":", "str", "\n", ")", ":", "\n", "    ", "result_frame_reader", "=", "FrameReader", "(", "result_video_dir", ")", ".", "files", "\n", "gt_frame_reader", "=", "FrameReader", "(", "gt_video_dir", ")", ".", "files", "\n", "if", "os", ".", "path", ".", "exists", "(", "video_mask_dir", ")", ":", "\n", "        ", "masks", "=", "MaskReader", "(", "video_mask_dir", ")", "[", ":", "len", "(", "gt_frame_reader", ")", "]", "\n", "", "else", ":", "\n", "        ", "raise", "IOError", "(", "f\"{video_mask_dir} not exists\"", ")", "\n", "\n", "", "if", "len", "(", "masks", ")", "!=", "len", "(", "result_frame_reader", ")", ":", "\n", "        ", "logger", ".", "error", "(", "\"Size mismatch\"", ")", "\n", "", "return", "evaluate_video_error", "(", "result_frame_reader", ",", "gt_frame_reader", ",", "masks", ",", "\n", "flownet_checkpoint_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_video_error": [[143, 202], ["enumerate", "zip", "evaluate.evaluate_image", "utils.logging_config.logger.debug", "evaluate.init_warping_model", "torch.Tensor().unsqueeze().permute", "torch.Tensor().unsqueeze().unsqueeze().permute", "torch.Tensor().unsqueeze().permute", "temporal_warping_error().cpu().item", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "IOError", "len", "utils.logging_config.logger.info", "torch.Tensor().unsqueeze", "torch.Tensor().unsqueeze().unsqueeze", "torch.Tensor().unsqueeze", "temporal_warping_error().cpu", "torch.Tensor", "torch.Tensor().unsqueeze", "torch.Tensor", "temporal_warping_error", "len", "len", "len", "len", "numpy.array", "torch.Tensor", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_image", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.init_warping_model", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "evaluate_video_error", "(", "\n", "result_images", ",", "gt_images", ",", "masks", ",", "\n", "flownet_checkpoint_path", ":", "str", ",", "evaluate_warping_error", "=", "True", ",", "\n", "printlog", "=", "True", "\n", ")", ":", "\n", "    ", "total_error", "=", "0", "\n", "total_psnr", "=", "0", "\n", "total_ssim", "=", "0", "\n", "total_p_dist", "=", "0", "\n", "for", "i", ",", "(", "result", ",", "gt", ",", "mask", ")", "in", "enumerate", "(", "\n", "zip", "(", "result_images", ",", "gt_images", ",", "masks", ")", "\n", ")", ":", "\n", "# mask = np.expand_dims(mask, 2)", "\n", "        ", "mse", ",", "ssim_value", ",", "psnr_value", ",", "p_dist", "=", "evaluate_image", "(", "gt", ",", "result", ")", "\n", "\n", "total_error", "+=", "mse", "\n", "total_ssim", "+=", "ssim_value", "\n", "total_psnr", "+=", "psnr_value", "\n", "total_p_dist", "+=", "p_dist", "\n", "logger", ".", "debug", "(", "\n", "f\"Frame {i}: MSE {mse} PSNR {psnr_value} SSIM {ssim_value} \"", "\n", "f\"Percep. Dist. {p_dist}\"", "\n", ")", "\n", "\n", "", "if", "evaluate_warping_error", ":", "\n", "        ", "init_warping_model", "(", "flownet_checkpoint_path", ")", "\n", "# These readers are lists of images", "\n", "# After np.array, they are in shape (H, W, C)", "\n", "# While the required input of the temporal_warping_error is (B, L, C, H, W)", "\n", "# So the tensors are unsqueezed and permuted into such shape", "\n", "targets", "=", "torch", ".", "Tensor", "(", "\n", "[", "np", ".", "array", "(", "x", ")", "for", "x", "in", "gt_images", "]", "\n", ")", ".", "unsqueeze", "(", "0", ")", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "3", ")", "\n", "masks", "=", "torch", ".", "Tensor", "(", "\n", "[", "np", ".", "array", "(", "x", ")", "for", "x", "in", "masks", "]", "\n", ")", ".", "unsqueeze", "(", "3", ")", ".", "unsqueeze", "(", "0", ")", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "3", ")", "\n", "outputs", "=", "torch", ".", "Tensor", "(", "[", "np", ".", "array", "(", "x", ")", "for", "x", "in", "result_images", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "3", ")", "\n", "data_input", "=", "{", "\n", "\"targets\"", ":", "targets", ",", "\n", "\"masks\"", ":", "masks", "\n", "}", "\n", "model_output", "=", "{", "\"outputs\"", ":", "outputs", "}", "\n", "warping_error", "=", "temporal_warping_error", "(", "data_input", ",", "model_output", ")", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "if", "printlog", ":", "\n", "            ", "logger", ".", "info", "(", "f\"Warping error: {warping_error}\"", ")", "\n", "", "", "else", ":", "\n", "        ", "warping_error", "=", "None", "\n", "\n", "", "if", "printlog", ":", "\n", "        ", "logger", ".", "info", "(", "f\"Avg MSE: {total_error / len(result_images)}\"", ")", "\n", "logger", ".", "info", "(", "f\"Avg PSNR: {total_psnr / len(result_images)}\"", ")", "\n", "logger", ".", "info", "(", "f\"Avg SSIM: {total_ssim / len(result_images)}\"", ")", "\n", "logger", ".", "info", "(", "\n", "f\"Avg Perce. Dist.: {total_p_dist / len(result_images)}\"", ")", "\n", "", "if", "total_error", "==", "0", ":", "\n", "        ", "raise", "IOError", "(", "\"Error = 0\"", ")", "\n", "", "return", "(", "\n", "warping_error", ",", "total_error", ",", "total_psnr", ",", "total_ssim", ",", "total_p_dist", ",", "\n", "len", "(", "result_images", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_all_videos": [[205, 247], ["enumerate", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "utils.util.get_everything_under", "utils.util.get_everything_under", "utils.util.get_everything_under", "zip", "os.path.join", "utils.logging_config.logger.info", "evaluate.evaluate_video", "len", "len"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_video"], ["", "def", "evaluate_all_videos", "(", "\n", "root_gt_dir", ",", "root_result_dir", ",", "\n", "flownet_checkpoint_path", ",", "\n", "root_mask_dir", ",", "test_num", ",", "result_postfix", "=", "\"\"", ",", "\n", ")", ":", "\n", "    ", "total_warping_error", "=", "0", "\n", "total_error", "=", "0", "\n", "total_psnr", "=", "0", "\n", "total_ssim", "=", "0", "\n", "total_p_dist", "=", "0", "\n", "total_length", "=", "0", "\n", "\n", "result_dirs", "=", "get_everything_under", "(", "root_result_dir", ",", "only_dirs", "=", "True", ")", "[", ":", "test_num", "]", "\n", "gt_dirs", "=", "get_everything_under", "(", "root_gt_dir", ",", "only_dirs", "=", "True", ")", "[", ":", "test_num", "]", "\n", "mask_dirs", "=", "get_everything_under", "(", "root_mask_dir", ",", "only_dirs", "=", "True", ")", "[", ":", "test_num", "]", "\n", "\n", "for", "i", ",", "(", "result_dir", ",", "gt_dir", ")", "in", "enumerate", "(", "zip", "(", "result_dirs", ",", "gt_dirs", ")", ")", ":", "\n", "        ", "result_dir", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "result_postfix", ")", "\n", "mask_dir", "=", "mask_dirs", "[", "i", "]", "\n", "logger", ".", "info", "(", "f\"Processing {result_dir}, mask {mask_dir}\"", ")", "\n", "warping_error", ",", "error", ",", "psnr_value", ",", "ssim_value", ",", "p_dist", ",", "length", "=", "evaluate_video", "(", "result_dir", ",", "gt_dir", ",", "mask_dir", ",", "flownet_checkpoint_path", ")", "\n", "total_warping_error", "+=", "warping_error", "\n", "total_error", "+=", "error", "\n", "total_ssim", "+=", "ssim_value", "\n", "total_psnr", "+=", "psnr_value", "\n", "total_p_dist", "+=", "p_dist", "\n", "total_length", "+=", "length", "\n", "\n", "", "avg_warping_error", "=", "total_warping_error", "/", "len", "(", "gt_dirs", ")", "\n", "avg_mse_error", "=", "total_error", "/", "total_length", "\n", "avg_ssim", "=", "total_ssim", "/", "total_length", "\n", "avg_psnr", "=", "total_psnr", "/", "total_length", "\n", "avg_p_dist", "=", "(", "total_p_dist", "/", "total_length", ")", "[", "0", "]", "\n", "logger", ".", "info", "(", "f\"Total avg warping error {avg_warping_error:.8f}\"", ")", "\n", "logger", ".", "info", "(", "f\"Total avg error {avg_mse_error:.5f}\"", ")", "\n", "logger", ".", "info", "(", "f\"Total avg ssim {avg_ssim:.4f}\"", ")", "\n", "logger", ".", "info", "(", "f\"Total avg pSNR {avg_psnr:.2f}\"", ")", "\n", "logger", ".", "info", "(", "f\"Total avg Perceptual distance {avg_p_dist:.4f}\"", ")", "\n", "logger", ".", "info", "(", "f\"Total length {total_length}\"", ")", "\n", "logger", ".", "info", "(", "f\"Video num: {len(result_dirs)}\"", ")", "\n", "return", "(", "avg_warping_error", ",", "avg_mse_error", ",", "avg_ssim", ",", "avg_psnr", ",", "avg_p_dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_fid_score": [[249, 281], ["torchvision.transforms.Compose", "utils.util.get_everything_under", "utils.util.get_everything_under", "utils.logging_config.logger.info", "utils.logging_config.logger.info", "torch.no_grad", "enumerate", "numpy.concatenate", "numpy.concatenate", "evaluate.get_fid_score", "data_loader.transform.Stack", "data_loader.transform.ToTorchFormatTensor", "zip", "os.path.join", "transforms.Compose.unsqueeze().to", "transforms.Compose.unsqueeze().to", "np.concatenate.append", "np.concatenate.append", "utils.logging_config.logger.info", "utils.readers.FrameReader", "utils.readers.FrameReader", "torch.device", "torch.device", "get_i3d_activations().cpu().numpy", "get_i3d_activations().cpu().numpy", "len", "transforms.Compose.unsqueeze", "transforms.Compose.unsqueeze", "get_i3d_activations().cpu", "get_i3d_activations().cpu", "transforms.Compose.", "transforms.Compose.", "evaluate.get_i3d_activations", "evaluate.get_i3d_activations"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.get_fid_score", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.get_i3d_activations", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.get_i3d_activations"], ["", "def", "evaluate_fid_score", "(", "root_gt_dir", ",", "root_result_dir", ",", "result_postfix", ")", ":", "\n", "    ", "to_tensors", "=", "transforms", ".", "Compose", "(", "[", "\n", "Stack", "(", ")", ",", "\n", "ToTorchFormatTensor", "(", ")", ",", "\n", "]", ")", "\n", "result_dirs", "=", "get_everything_under", "(", "root_result_dir", ",", "only_dirs", "=", "True", ")", "\n", "gt_dirs", "=", "get_everything_under", "(", "root_gt_dir", ",", "only_dirs", "=", "True", ")", "\n", "\n", "output_i3d_activations", "=", "[", "]", "\n", "real_i3d_activations", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "result_dir", ",", "gt_dir", ")", "in", "enumerate", "(", "zip", "(", "result_dirs", ",", "gt_dirs", ")", ")", ":", "\n", "            ", "if", "i", "%", "20", "==", "0", ":", "\n", "                ", "logger", ".", "info", "(", "f\"Getting {i}th i3d activations\"", ")", "\n", "", "result_dir", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "result_postfix", ")", "\n", "result_frame_reader", "=", "FrameReader", "(", "result_dir", ")", ".", "files", "\n", "gt_frame_reader", "=", "FrameReader", "(", "gt_dir", ")", ".", "files", "\n", "\n", "# Unsqueeze batch dimension", "\n", "outputs", "=", "to_tensors", "(", "result_frame_reader", ")", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "torch", ".", "device", "(", "'cuda:0'", ")", ")", "\n", "targets", "=", "to_tensors", "(", "gt_frame_reader", ")", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "torch", ".", "device", "(", "'cuda:0'", ")", ")", "\n", "# get i3d activation", "\n", "output_i3d_activations", ".", "append", "(", "get_i3d_activations", "(", "outputs", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "real_i3d_activations", ".", "append", "(", "get_i3d_activations", "(", "targets", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "# concat and evaluate fid score", "\n", "", "output_i3d_activations", "=", "np", ".", "concatenate", "(", "output_i3d_activations", ",", "axis", "=", "0", ")", "\n", "real_i3d_activations", "=", "np", ".", "concatenate", "(", "real_i3d_activations", ",", "axis", "=", "0", ")", "\n", "fid_score", "=", "get_fid_score", "(", "real_i3d_activations", ",", "output_i3d_activations", ")", "\n", "", "logger", ".", "info", "(", "f\"Video num: {len(result_dirs)}\"", ")", "\n", "logger", ".", "info", "(", "f\"FID score: {fid_score}\"", ")", "\n", "return", "fid_score", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.main": [[283, 302], ["evaluate.evaluate_fid_score", "evaluate.evaluate_all_videos", "evaluate.evaluate_fid_score", "open", "fout.write"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_fid_score", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_all_videos", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_fid_score"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "root_gt_dir", "=", "args", ".", "root_gt_dir", "\n", "root_mask_dir", "=", "args", ".", "root_mask_dir", "\n", "root_result_dir", "=", "args", ".", "root_result_dir", "\n", "if", "args", ".", "only_eval_fid", ":", "\n", "        ", "evaluate_fid_score", "(", "root_gt_dir", ",", "root_result_dir", ",", "args", ".", "result_postfix", ")", "\n", "", "else", ":", "\n", "        ", "(", "avg_warping_error", ",", "avg_mse_error", ",", "avg_ssim", ",", "avg_psnr", ",", "avg_p_dist", ")", "=", "evaluate_all_videos", "(", "\n", "root_gt_dir", ",", "root_result_dir", ",", "\n", "args", ".", "flownet_checkpoint", ",", "\n", "root_mask_dir", ",", "args", ".", "test_num", ",", "args", ".", "result_postfix", "\n", ")", "\n", "fid_score", "=", "evaluate_fid_score", "(", "\n", "root_gt_dir", ",", "root_result_dir", ",", "args", ".", "result_postfix", "\n", ")", "\n", "if", "args", ".", "output_filename", "is", "not", "None", ":", "\n", "            ", "with", "open", "(", "args", ".", "output_filename", ",", "'a'", ")", "as", "fout", ":", "\n", "                ", "fout", ".", "write", "(", "\n", "f\"{args.root_result_dir}, {avg_mse_error:.5f}, {avg_ssim:.4f}, \"", "\n", "f\"{avg_p_dist:.4f}, {fid_score:.3f}, {avg_warping_error:.7f}\\n\"", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.get_i3d_activations": [[306, 339], ["evaluate.init_i3d_model", "torch.set_grad_enabled", "i3d_model.extract_features", "feat.view.view", "batched_video.transpose", "feat.view.size"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.init_i3d_model", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.InceptionI3d.extract_features"], ["", "", "", "", "def", "get_i3d_activations", "(", "batched_video", ",", "target_endpoint", "=", "'Logits'", ",", "flatten", "=", "True", ",", "grad_enabled", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Get features from i3d model and flatten them to 1d feature,\n    valid target endpoints are defined in InceptionI3d.VALID_ENDPOINTS\n\n    VALID_ENDPOINTS = (\n        'Conv3d_1a_7x7',\n        'MaxPool3d_2a_3x3',\n        'Conv3d_2b_1x1',\n        'Conv3d_2c_3x3',\n        'MaxPool3d_3a_3x3',\n        'Mixed_3b',\n        'Mixed_3c',\n        'MaxPool3d_4a_3x3',\n        'Mixed_4b',\n        'Mixed_4c',\n        'Mixed_4d',\n        'Mixed_4e',\n        'Mixed_4f',\n        'MaxPool3d_5a_2x2',\n        'Mixed_5b',\n        'Mixed_5c',\n        'Logits',\n        'Predictions',\n    )\n    \"\"\"", "\n", "init_i3d_model", "(", ")", "\n", "with", "torch", ".", "set_grad_enabled", "(", "grad_enabled", ")", ":", "\n", "        ", "feat", "=", "i3d_model", ".", "extract_features", "(", "batched_video", ".", "transpose", "(", "1", ",", "2", ")", ",", "target_endpoint", ")", "\n", "", "if", "flatten", ":", "\n", "        ", "feat", "=", "feat", ".", "view", "(", "feat", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "", "return", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.get_fid_score": [[341, 350], ["numpy.mean", "numpy.mean", "numpy.cov", "numpy.cov", "evaluate.calculate_frechet_distance"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.calculate_frechet_distance"], ["", "def", "get_fid_score", "(", "real_activations", ",", "fake_activations", ")", ":", "\n", "    ", "\"\"\"\n    Given two distribution of features, compute the FID score between them\n    \"\"\"", "\n", "m1", "=", "np", ".", "mean", "(", "real_activations", ",", "axis", "=", "0", ")", "\n", "m2", "=", "np", ".", "mean", "(", "fake_activations", ",", "axis", "=", "0", ")", "\n", "s1", "=", "np", ".", "cov", "(", "real_activations", ",", "rowvar", "=", "False", ")", "\n", "s2", "=", "np", ".", "cov", "(", "fake_activations", ",", "rowvar", "=", "False", ")", "\n", "return", "calculate_frechet_distance", "(", "m1", ",", "s1", ",", "m2", ",", "s2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.calculate_frechet_distance": [[353, 405], ["numpy.atleast_1d", "numpy.atleast_1d", "numpy.atleast_2d", "numpy.atleast_2d", "scipy.linalg.sqrtm", "numpy.iscomplexobj", "numpy.trace", "np.atleast_2d.dot", "numpy.isfinite().all", "utils.logging_config.logger.warning", "scipy.linalg.sqrtm", "numpy.eye", "numpy.allclose", "numpy.max", "ValueError", "numpy.trace", "numpy.isfinite", "numpy.abs", "diff.dot", "numpy.trace", "numpy.diagonal"], "function", ["None"], ["", "def", "calculate_frechet_distance", "(", "mu1", ",", "sigma1", ",", "mu2", ",", "sigma2", ",", "eps", "=", "1e-6", ")", ":", "\n", "    ", "\"\"\"Numpy implementation of the Frechet Distance.\n    The Frechet distance between two multivariate Gaussians X_1 ~ N(mu_1, C_1)\n    and X_2 ~ N(mu_2, C_2) is\n            d^2 = ||mu_1 - mu_2||^2 + Tr(C_1 + C_2 - 2*sqrt(C_1*C_2)).\n    Stable version by Dougal J. Sutherland.\n    Params:\n    -- mu1   : Numpy array containing the activations of a layer of the\n               inception net (like returned by the function 'get_predictions')\n               for generated samples.\n    -- mu2   : The sample mean over activations, precalculated on an\n               representive data set.\n    -- sigma1: The covariance matrix over activations for generated samples.\n    -- sigma2: The covariance matrix over activations, precalculated on an\n               representive data set.\n    Returns:\n    --   : The Frechet Distance.\n    \"\"\"", "\n", "\n", "mu1", "=", "np", ".", "atleast_1d", "(", "mu1", ")", "\n", "mu2", "=", "np", ".", "atleast_1d", "(", "mu2", ")", "\n", "\n", "sigma1", "=", "np", ".", "atleast_2d", "(", "sigma1", ")", "\n", "sigma2", "=", "np", ".", "atleast_2d", "(", "sigma2", ")", "\n", "\n", "assert", "mu1", ".", "shape", "==", "mu2", ".", "shape", ",", "'Training and test mean vectors have different lengths'", "\n", "assert", "sigma1", ".", "shape", "==", "sigma2", ".", "shape", ",", "'Training and test covariances have different dimensions'", "\n", "\n", "diff", "=", "mu1", "-", "mu2", "\n", "\n", "# Product might be almost singular", "\n", "covmean", ",", "_", "=", "linalg", ".", "sqrtm", "(", "sigma1", ".", "dot", "(", "sigma2", ")", ",", "disp", "=", "False", ")", "\n", "if", "not", "np", ".", "isfinite", "(", "covmean", ")", ".", "all", "(", ")", ":", "\n", "        ", "msg", "=", "(", "'fid calculation produces singular product; '", "\n", "'adding %s to diagonal of cov estimates'", ")", "%", "eps", "\n", "logger", ".", "warning", "(", "msg", ")", "\n", "offset", "=", "np", ".", "eye", "(", "sigma1", ".", "shape", "[", "0", "]", ")", "*", "eps", "\n", "covmean", "=", "linalg", ".", "sqrtm", "(", "(", "sigma1", "+", "offset", ")", ".", "dot", "(", "sigma2", "+", "offset", ")", ")", "\n", "\n", "# Numerical error might give slight imaginary component", "\n", "", "if", "np", ".", "iscomplexobj", "(", "covmean", ")", ":", "\n", "        ", "if", "not", "np", ".", "allclose", "(", "np", ".", "diagonal", "(", "covmean", ")", ".", "imag", ",", "0", ",", "atol", "=", "1e-3", ")", ":", "\n", "            ", "m", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "covmean", ".", "imag", ")", ")", "\n", "raise", "ValueError", "(", "'Imaginary component {}'", ".", "format", "(", "m", ")", ")", "\n", "", "covmean", "=", "covmean", ".", "real", "\n", "\n", "", "tr_covmean", "=", "np", ".", "trace", "(", "covmean", ")", "\n", "\n", "return", "(", "diff", ".", "dot", "(", "diff", ")", "+", "np", ".", "trace", "(", "sigma1", ")", "+", "# NOQA", "\n", "np", ".", "trace", "(", "sigma2", ")", "-", "2", "*", "tr_covmean", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.get_instance": [[19, 21], ["getattr", "model.module_arch", "torch.optim", "torch.optim.lr_scheduler", "data_loader.module_data", "torch.optim", "torch.optim", "data_loader.module_data", "data_loader.module_data"], "function", ["None"], ["def", "get_instance", "(", "module", ",", "name", ",", "config", ",", "*", "args", ")", ":", "\n", "    ", "return", "getattr", "(", "module", ",", "config", "[", "name", "]", "[", "'type'", "]", ")", "(", "*", "args", ",", "**", "config", "[", "name", "]", "[", "'args'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.main": [[23, 113], ["utils.logger.Logger", "config.get", "train.get_instance", "get_instance.summary", "get_instance.named_parameters", "train.get_instance", "hasattr", "hasattr", "train.get_instance", "trainer.Trainer", "train.get_instance", "get_instance.split_validation", "config.keys", "isinstance", "getattr", "train.get_instance", "train.get_instance", "utils.util.make_dirs", "trainer.Trainer.evaluate_test_set", "trainer.Trainer.train", "config.keys", "config.keys", "train.get_instance", "train.get_instance", "d_t_params.append", "getattr", "d_s_params.append", "g_params.append", "getattr"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.get_instance", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_model.BaseModel.summary", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.get_instance", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.get_instance", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.get_instance", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_data_loader.BaseDataLoader.split_validation", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.get_instance", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.get_instance", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer.evaluate_test_set", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer.train", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.get_instance", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.get_instance", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "main", "(", "config", ",", "resume", ",", "output_root_dir", "=", "None", ",", "pretrained_path", "=", "None", ")", ":", "\n", "    ", "train_logger", "=", "Logger", "(", ")", "\n", "\n", "# setup data_loader instances", "\n", "inference_only", "=", "config", ".", "get", "(", "'inference_only'", ",", "False", ")", "\n", "if", "inference_only", ":", "\n", "        ", "data_loader", "=", "None", "\n", "", "else", ":", "\n", "        ", "data_loader", "=", "get_instance", "(", "module_data", ",", "'data_loader'", ",", "config", ")", "\n", "\n", "", "if", "data_loader", "is", "not", "None", "and", "data_loader", ".", "valid_sampler", ":", "\n", "        ", "assert", "'valid_data_loader'", "not", "in", "config", ".", "keys", "(", ")", ",", "(", "'valid set can only be eigther split '", "\n", "'from train set or specified in config.'", ")", "\n", "valid_data_loader", "=", "data_loader", ".", "split_validation", "(", ")", "\n", "", "elif", "'valid_data_loader'", "in", "config", ".", "keys", "(", ")", ":", "\n", "        ", "valid_data_loader", "=", "get_instance", "(", "module_data", ",", "'valid_data_loader'", ",", "config", ")", "\n", "", "else", ":", "\n", "        ", "valid_data_loader", "=", "None", "\n", "\n", "", "if", "'test_data_loader'", "in", "config", ".", "keys", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "config", "[", "'test_data_loader'", "]", ",", "list", ")", ":", "\n", "            ", "test_data_loader", "=", "[", "\n", "getattr", "(", "module_data", ",", "entry", "[", "'type'", "]", ")", "(", "**", "entry", "[", "'args'", "]", ")", "\n", "for", "entry", "in", "config", "[", "'test_data_loader'", "]", "\n", "]", "\n", "", "else", ":", "\n", "            ", "test_data_loader", "=", "get_instance", "(", "module_data", ",", "'test_data_loader'", ",", "config", ")", "\n", "", "", "else", ":", "\n", "        ", "test_data_loader", "=", "None", "\n", "\n", "# build model architecture", "\n", "", "model", "=", "get_instance", "(", "module_arch", ",", "'arch'", ",", "config", ")", "\n", "model", ".", "summary", "(", ")", "\n", "\n", "# setup instances of losses", "\n", "losses", "=", "{", "\n", "entry", "[", "'nickname'", "]", ":", "(", "\n", "getattr", "(", "module_loss", ",", "entry", "[", "'type'", "]", ")", "(", "**", "entry", "[", "'args'", "]", ")", ",", "\n", "entry", "[", "'weight'", "]", "\n", ")", "\n", "for", "entry", "in", "config", "[", "'losses'", "]", "\n", "}", "\n", "\n", "metrics", "=", "[", "getattr", "(", "module_metric", ",", "met", ")", "for", "met", "in", "config", "[", "'metrics'", "]", "]", "\n", "\n", "# build optimizer, learning rate scheduler. delete every lines containing lr_scheduler for disabling scheduler", "\n", "# trainable_params = filter(lambda p: p.requires_grad, model.parameters())", "\n", "g_params", "=", "[", "]", "\n", "d_s_params", "=", "[", "]", "\n", "d_t_params", "=", "[", "]", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "not", "param", ".", "requires_grad", ":", "\n", "            ", "continue", "\n", "", "if", "'temporal_discriminator'", "in", "name", ":", "\n", "            ", "d_t_params", ".", "append", "(", "param", ")", "\n", "", "elif", "'spatial_discriminator'", "in", "name", ":", "\n", "            ", "d_s_params", ".", "append", "(", "param", ")", "\n", "", "else", ":", "\n", "            ", "g_params", ".", "append", "(", "param", ")", "\n", "\n", "", "", "optimizer_g", "=", "get_instance", "(", "torch", ".", "optim", ",", "'optimizer'", ",", "config", ",", "g_params", ")", "\n", "if", "hasattr", "(", "model", ",", "'spatial_discriminator'", ")", ":", "\n", "        ", "optimizer_d_s", "=", "get_instance", "(", "torch", ".", "optim", ",", "'optimizer'", ",", "config", ",", "d_s_params", ")", "\n", "", "else", ":", "\n", "        ", "optimizer_d_s", "=", "None", "\n", "", "if", "hasattr", "(", "model", ",", "'temporal_discriminator'", ")", ":", "\n", "        ", "optimizer_d_t", "=", "get_instance", "(", "torch", ".", "optim", ",", "'optimizer'", ",", "config", ",", "d_t_params", ")", "\n", "", "else", ":", "\n", "        ", "optimizer_d_t", "=", "None", "\n", "", "lr_scheduler", "=", "get_instance", "(", "torch", ".", "optim", ".", "lr_scheduler", ",", "'lr_scheduler'", ",", "config", ",", "optimizer_g", ")", "\n", "\n", "trainer", "=", "Trainer", "(", "\n", "model", ",", "losses", ",", "metrics", ",", "optimizer_g", ",", "optimizer_d_s", ",", "optimizer_d_t", ",", "\n", "resume", "=", "resume", ",", "\n", "config", "=", "config", ",", "\n", "data_loader", "=", "data_loader", ",", "\n", "valid_data_loader", "=", "valid_data_loader", ",", "\n", "lr_scheduler", "=", "lr_scheduler", ",", "\n", "train_logger", "=", "train_logger", ",", "\n", "test_data_loader", "=", "test_data_loader", ",", "\n", "pretrained_path", "=", "pretrained_path", "\n", ")", "\n", "\n", "if", "output_root_dir", "is", "not", "None", ":", "\n", "        ", "make_dirs", "(", "output_root_dir", ")", "\n", "trainer", ".", "printlog", "=", "True", "\n", "trainer", ".", "evaluate_test_set", "(", "\n", "output_root_dir", "=", "output_root_dir", ",", "epoch", "=", "0", ")", "\n", "", "else", ":", "\n", "        ", "trainer", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.train.override_data_setting": [[115, 129], ["copy.copy", "dataset_config.keys", "copy.copy.keys", "utils.logging_config.logger.info"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "", "def", "override_data_setting", "(", "config", ",", "dataset_config", ")", ":", "\n", "    ", "new_config", "=", "copy", "(", "config", ")", "\n", "# override all data_loader settings with dataset_config", "\n", "for", "key", "in", "dataset_config", ".", "keys", "(", ")", ":", "\n", "        ", "if", "key", "==", "'name'", ":", "\n", "            ", "continue", "\n", "", "if", "key", "in", "new_config", ".", "keys", "(", ")", ":", "\n", "            ", "logger", ".", "info", "(", "f'Overriding \"{key}\" of config by given dataset_config'", ")", "\n", "del", "new_config", "[", "key", "]", "\n", "", "new_config", "[", "key", "]", "=", "dataset_config", "[", "key", "]", "\n", "\n", "# add dataset name on experiment name", "\n", "", "new_config", "[", "'name'", "]", "=", "new_config", "[", "'name'", "]", "+", "'_'", "+", "dataset_config", "[", "'name'", "]", "\n", "return", "new_config", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.__init__": [[93, 115], ["os.path.exists", "sorted", "readers.Reader.read_files", "utils.logging_config.logger.warning", "glob.glob.glob", "os.path.join", "os.path.isfile"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.read_files"], ["    ", "def", "__init__", "(", "self", ",", "dir_name", ",", "read", "=", "True", ",", "max_length", "=", "None", ",", "sample_period", "=", "1", ")", ":", "\n", "        ", "self", ".", "dir_name", "=", "dir_name", "\n", "self", ".", "count", "=", "0", "\n", "self", ".", "max_length", "=", "max_length", "\n", "self", ".", "filenames", "=", "[", "]", "\n", "self", ".", "sample_period", "=", "sample_period", "\n", "if", "read", ":", "\n", "            ", "if", "os", ".", "path", ".", "exists", "(", "dir_name", ")", ":", "\n", "# self.filenames = read_filenames_from_dir(dir_name, self.__class__.__name__)", "\n", "# ^^^^^ yield None when reading some videos of face forensics data", "\n", "# (related to 'Too many levels of symbolic links'?)", "\n", "\n", "                ", "self", ".", "filenames", "=", "sorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "dir_name", ",", "'*'", ")", ")", ")", "\n", "self", ".", "filenames", "=", "[", "f", "for", "f", "in", "self", ".", "filenames", "if", "os", ".", "path", ".", "isfile", "(", "f", ")", "]", "\n", "self", ".", "filenames", "=", "self", ".", "filenames", "[", ":", ":", "sample_period", "]", "[", ":", "max_length", "]", "\n", "self", ".", "files", "=", "self", ".", "read_files", "(", "self", ".", "filenames", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "files", "=", "[", "]", "\n", "logger", ".", "warning", "(", "f\"Directory {dir_name} not exists!\"", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "files", "=", "[", "]", "\n", "", "self", ".", "current_index", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append": [[116, 118], ["readers.Reader.files.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "append", "(", "self", ",", "file_", ")", ":", "\n", "        ", "self", ".", "files", ".", "append", "(", "file_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.set_files": [[119, 121], ["None"], "methods", ["None"], ["", "def", "set_files", "(", "self", ",", "files", ")", ":", "\n", "        ", "self", ".", "files", "=", "files", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.read_files": [[122, 130], ["filenames.sort", "type", "readers.Reader.read_file", "frames.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.read_file", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "read_files", "(", "self", ",", "filenames", ")", ":", "\n", "        ", "assert", "type", "(", "filenames", ")", "==", "list", ",", "f'filenames is not a list; dirname: {self.dir_name}'", "\n", "filenames", ".", "sort", "(", ")", "\n", "frames", "=", "[", "]", "\n", "for", "filename", "in", "filenames", ":", "\n", "            ", "file_", "=", "self", ".", "read_file", "(", "filename", ")", "\n", "frames", ".", "append", "(", "file_", ")", "\n", "", "return", "frames", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.save_files": [[131, 136], ["utils.util.make_dirs", "utils.logging_config.logger.info", "enumerate", "readers.Reader._save_file"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskGenerator._save_file"], ["", "def", "save_files", "(", "self", ",", "output_dir", "=", "None", ")", ":", "\n", "        ", "make_dirs", "(", "output_dir", ")", "\n", "logger", ".", "info", "(", "f\"Saving {self.__class__.__name__} files to {output_dir}\"", ")", "\n", "for", "i", ",", "file_", "in", "enumerate", "(", "self", ".", "files", ")", ":", "\n", "            ", "self", ".", "_save_file", "(", "output_dir", ",", "i", ",", "file_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader._save_file": [[137, 139], ["NotImplementedError"], "methods", ["None"], ["", "", "def", "_save_file", "(", "self", ",", "output_dir", ",", "i", ",", "file_", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"This is an abstract function\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.read_file": [[140, 142], ["NotImplementedError"], "methods", ["None"], ["", "def", "read_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"This is an abstract function\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.__iter__": [[143, 145], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.__next__": [[146, 154], ["len"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "current_index", "<", "len", "(", "self", ".", "files", ")", ":", "\n", "            ", "file_", "=", "self", ".", "files", "[", "self", ".", "current_index", "]", "\n", "self", ".", "current_index", "+=", "1", "\n", "return", "file_", "\n", "", "else", ":", "\n", "            ", "self", ".", "current_index", "=", "0", "\n", "raise", "StopIteration", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.__getitem__": [[155, 157], ["None"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "        ", "return", "self", ".", "files", "[", "key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.__len__": [[158, 160], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.FrameReader.__init__": [[163, 171], ["readers.Reader.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "dir_name", ",", "resize", "=", "None", ",", "read", "=", "True", ",", "max_length", "=", "MAX_LENGTH", ",", "\n", "scale", "=", "1", ",", "sample_period", "=", "1", "\n", ")", ":", "\n", "        ", "self", ".", "resize", "=", "resize", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "sample_period", "=", "sample_period", "\n", "super", "(", ")", ".", "__init__", "(", "dir_name", ",", "read", ",", "max_length", ",", "sample_period", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.FrameReader.read_file": [[172, 179], ["PIL.Image.open", "PIL.Image.open.resize", "int", "int"], "methods", ["None"], ["", "def", "read_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "origin_frame", "=", "Image", ".", "open", "(", "filename", ")", "\n", "size", "=", "self", ".", "resize", "if", "self", ".", "resize", "is", "not", "None", "else", "origin_frame", ".", "size", "\n", "origin_frame_resized", "=", "origin_frame", ".", "resize", "(", "\n", "(", "int", "(", "size", "[", "0", "]", "*", "self", ".", "scale", ")", ",", "int", "(", "size", "[", "1", "]", "*", "self", ".", "scale", ")", ")", "\n", ")", "\n", "return", "origin_frame_resized", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.FrameReader._save_file": [[180, 189], ["os.path.join", "file_.save", "len", "len", "[].split", "sorted"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], ["", "def", "_save_file", "(", "self", ",", "output_dir", ",", "i", ",", "file_", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "filenames", ")", "==", "len", "(", "self", ".", "files", ")", ":", "\n", "            ", "name", "=", "sorted", "(", "self", ".", "filenames", ")", "[", "i", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "name", "=", "f\"frame_{i:04}.png\"", "\n", "", "filename", "=", "os", ".", "path", ".", "join", "(", "\n", "output_dir", ",", "name", "\n", ")", "\n", "file_", ".", "save", "(", "filename", ",", "\"PNG\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.FrameReader.write_files_to_video": [[190, 207], ["utils.logging_config.logger.info", "cv2.VideoWriter", "cv2.VideoWriter.release", "cv2.VideoWriter_fourcc", "frame.convert.convert.convert", "numpy.array", "cv2.cvtColor", "range", "cv2.VideoWriter.write"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "write_files_to_video", "(", "self", ",", "output_filename", ",", "fps", "=", "DEFAULT_FPS", ",", "frame_num_when_repeat_list", "=", "[", "1", "]", ")", ":", "\n", "        ", "logger", ".", "info", "(", "\n", "f\"Writeing frames to video {output_filename} with FPS={fps}\"", ")", "\n", "video_writer", "=", "cv2", ".", "VideoWriter", "(", "\n", "output_filename", ",", "\n", "cv2", ".", "VideoWriter_fourcc", "(", "*", "\"MJPG\"", ")", ",", "\n", "fps", ",", "\n", "self", ".", "files", "[", "0", "]", ".", "size", "\n", ")", "\n", "for", "frame_num_when_repeat", "in", "frame_num_when_repeat_list", ":", "\n", "            ", "for", "frame", "in", "self", ".", "files", ":", "\n", "                ", "frame", "=", "frame", ".", "convert", "(", "\"RGB\"", ")", "\n", "frame_cv", "=", "np", ".", "array", "(", "frame", ")", "\n", "frame_cv", "=", "cv2", ".", "cvtColor", "(", "frame_cv", ",", "cv2", ".", "COLOR_RGB2BGR", ")", "\n", "for", "i", "in", "range", "(", "frame_num_when_repeat", ")", ":", "\n", "                    ", "video_writer", ".", "write", "(", "frame_cv", ")", "\n", "", "", "", "video_writer", ".", "release", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SynthesizedFrameReader.__init__": [[210, 236], ["readers.FrameReader", "readers.ForegroundReader", "readers.FrameReader.__init__", "readers.SynthesizedFrameReader.synthesize_frames", "readers.MaskGenerator", "readers.SynthesizedFrameReader.get_bboxeses", "readers.SynthesizedFrameReader.save_bboxes", "readers.SynthesizedFrameReader.get_bboxeses"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SynthesizedFrameReader.synthesize_frames", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SynthesizedFrameReader.get_bboxeses", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SynthesizedFrameReader.save_bboxes", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SynthesizedFrameReader.get_bboxeses"], ["    ", "def", "__init__", "(", "\n", "self", ",", "bg_frames_dir", ",", "fg_frames_dir", ",", "\n", "fg_segms_dir", ",", "segm_bbox_mask_dir", ",", "fg_dir", ",", "dir_name", ",", "\n", "bboxes_list_dir", ",", "\n", "fg_scale", "=", "0.7", ",", "fg_location", "=", "(", "48", ",", "27", ")", ",", "mask_only", "=", "False", "\n", ")", ":", "\n", "        ", "self", ".", "bg_reader", "=", "FrameReader", "(", "bg_frames_dir", ")", "\n", "self", ".", "size", "=", "self", ".", "bg_reader", "[", "0", "]", ".", "size", "\n", "# TODO: add different location and change scale to var", "\n", "self", ".", "fg_reader", "=", "ForegroundReader", "(", "\n", "fg_frames_dir", ",", "fg_segms_dir", ",", "fg_dir", ",", "\n", "resize", "=", "self", ".", "size", ",", "\n", "scale", "=", "fg_scale", "\n", ")", "\n", "self", ".", "fg_location", "=", "fg_location", "\n", "# self.masks = self.fg_reader.masks", "\n", "# self.bbox_masks = self.fg_reader.bbox_masks", "\n", "super", "(", ")", ".", "__init__", "(", "dir_name", ",", "read", "=", "False", ")", "\n", "self", ".", "files", "=", "self", ".", "synthesize_frames", "(", "\n", "self", ".", "bg_reader", ",", "self", ".", "fg_reader", ",", "mask_only", ")", "\n", "self", ".", "bbox_masks", "=", "MaskGenerator", "(", "\n", "segm_bbox_mask_dir", ",", "self", ".", "size", ",", "self", ".", "get_bboxeses", "(", ")", "\n", ")", "\n", "self", ".", "bboxes_list_dir", "=", "bboxes_list_dir", "\n", "self", ".", "bboxes_list", "=", "self", ".", "get_bboxeses", "(", ")", "\n", "self", ".", "save_bboxes", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SynthesizedFrameReader.save_bboxes": [[237, 244], ["utils.util.make_dirs", "utils.logging_config.logger.info", "enumerate", "os.path.join", "len", "numpy.savetxt"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "save_bboxes", "(", "self", ")", ":", "\n", "        ", "make_dirs", "(", "self", ".", "bboxes_list_dir", ")", "\n", "logger", ".", "info", "(", "f\"Saving bboxes to {self.bboxes_list_dir}\"", ")", "\n", "for", "i", ",", "bboxes", "in", "enumerate", "(", "self", ".", "bboxes_list", ")", ":", "\n", "            ", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "bboxes_list_dir", ",", "f\"bboxes_{i:04}.txt\"", ")", "\n", "if", "len", "(", "bboxes", ")", ">", "0", ":", "\n", "                ", "np", ".", "savetxt", "(", "save_path", ",", "bboxes", "[", "0", "]", ",", "fmt", "=", "'%4u'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SynthesizedFrameReader.get_bboxeses": [[245, 255], ["new_bboxeses.append", "utils.util.bbox_offset", "new_bboxes.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.bbox_offset", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "", "", "def", "get_bboxeses", "(", "self", ")", ":", "\n", "        ", "bboxeses", "=", "self", ".", "fg_reader", ".", "segms", ".", "bboxeses", "\n", "new_bboxeses", "=", "[", "]", "\n", "for", "bboxes", "in", "bboxeses", ":", "\n", "            ", "new_bboxes", "=", "[", "]", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "                ", "offset_bbox", "=", "bbox_offset", "(", "bbox", ",", "self", ".", "fg_location", ")", "\n", "new_bboxes", ".", "append", "(", "offset_bbox", ")", "\n", "", "new_bboxeses", ".", "append", "(", "new_bboxes", ")", "\n", "", "return", "new_bboxeses", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SynthesizedFrameReader.synthesize_frames": [[256, 273], ["utils.logging_config.logger.info", "enumerate", "fg_reader.get_mask", "bg.copy", "synthesized_frames.append", "len", "bg.copy.paste", "bg.copy.paste"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.ForegroundReader.get_mask", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "synthesize_frames", "(", "self", ",", "bg_reader", ",", "fg_reader", ",", "mask_only", "=", "False", ")", ":", "\n", "        ", "logger", ".", "info", "(", "\n", "f\"Synthesizing {bg_reader.dir_name} and {fg_reader.dir_name}\"", "\n", ")", "\n", "synthesized_frames", "=", "[", "]", "\n", "for", "i", ",", "bg", "in", "enumerate", "(", "bg_reader", ")", ":", "\n", "            ", "if", "i", "==", "len", "(", "fg_reader", ")", ":", "\n", "                ", "break", "\n", "", "fg", "=", "fg_reader", "[", "i", "]", "\n", "mask", "=", "fg_reader", ".", "get_mask", "(", "i", ")", "\n", "synthesized_frame", "=", "bg", ".", "copy", "(", ")", "\n", "if", "mask_only", ":", "\n", "                ", "synthesized_frame", ".", "paste", "(", "mask", ",", "self", ".", "fg_location", ",", "mask", ")", "\n", "", "else", ":", "\n", "                ", "synthesized_frame", ".", "paste", "(", "fg", ",", "self", ".", "fg_location", ",", "mask", ")", "\n", "", "synthesized_frames", ".", "append", "(", "synthesized_frame", ")", "\n", "", "return", "synthesized_frames", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.WarpedFrameReader.__init__": [[276, 280], ["readers.FrameReader.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dir_name", ",", "i", ",", "ks", ")", ":", "\n", "        ", "self", ".", "i", "=", "i", "\n", "self", ".", "ks", "=", "ks", "\n", "super", "(", ")", ".", "__init__", "(", "dir_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.WarpedFrameReader._save_file": [[281, 287], ["os.path.join", "file_.save"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], ["", "def", "_save_file", "(", "self", ",", "output_dir", ",", "i", ",", "file_", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "join", "(", "\n", "output_dir", ",", "\n", "f\"warped_frame_{self.i:04}_k{self.ks[i]:02}.png\"", "\n", ")", "\n", "file_", ".", "save", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SegmentationReader.__init__": [[290, 296], ["readers.FrameReader.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "dir_name", ",", "\n", "resize", "=", "None", ",", "scale", "=", "1", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "dir_name", ",", "resize", "=", "resize", ",", "scale", "=", "scale", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.SegmentationReader.read_file": [[298, 307], ["PIL.Image.open", "PIL.ImageOps.invert", "mask.point.point.point", "mask.point.point.resize", "PIL.Image.open.convert", "int", "int"], "methods", ["None"], ["", "def", "read_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "origin_frame", "=", "Image", ".", "open", "(", "filename", ")", "\n", "mask", "=", "ImageOps", ".", "invert", "(", "origin_frame", ".", "convert", "(", "\"L\"", ")", ")", "\n", "mask", "=", "mask", ".", "point", "(", "lambda", "x", ":", "0", "if", "x", "<", "255", "else", "255", ",", "'1'", ")", "\n", "size", "=", "self", ".", "resize", "if", "self", ".", "resize", "is", "not", "None", "else", "origin_frame", ".", "size", "\n", "mask_resized", "=", "mask", ".", "resize", "(", "\n", "(", "int", "(", "size", "[", "0", "]", "*", "self", ".", "scale", ")", ",", "int", "(", "size", "[", "1", "]", "*", "self", ".", "scale", ")", ")", "\n", ")", "\n", "return", "mask_resized", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskReader.__init__": [[310, 312], ["readers.Reader.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dir_name", ",", "read", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dir_name", ",", "read", "=", "read", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskReader.read_file": [[313, 316], ["PIL.Image.open"], "methods", ["None"], ["", "def", "read_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "mask", "=", "Image", ".", "open", "(", "filename", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskReader._save_file": [[317, 323], ["os.path.join", "file_.save"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], ["", "def", "_save_file", "(", "self", ",", "output_dir", ",", "i", ",", "file_", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "join", "(", "\n", "output_dir", ",", "\n", "f\"mask_{i:04}.png\"", "\n", ")", "\n", "file_", ".", "save", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskReader.get_bboxes": [[324, 338], ["PIL.ImageOps.invert().convert", "numpy.array", "cv2.findContours", "cv2.boundingRect", "bboxes.append", "PIL.ImageOps.invert", "numpy.array.convert"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "get_bboxes", "(", "self", ",", "i", ")", ":", "\n", "# TODO: save bbox instead of looking for one", "\n", "        ", "mask", "=", "self", ".", "files", "[", "i", "]", "\n", "mask", "=", "ImageOps", ".", "invert", "(", "mask", ".", "convert", "(", "\"L\"", ")", ")", ".", "convert", "(", "\"1\"", ")", "\n", "mask", "=", "np", ".", "array", "(", "mask", ")", "\n", "image", ",", "contours", ",", "hier", "=", "cv2", ".", "findContours", "(", "\n", "mask", ",", "cv2", ".", "RETR_EXTERNAL", ",", "cv2", ".", "CHAIN_APPROX_NONE", ")", "\n", "bboxes", "=", "[", "]", "\n", "for", "c", "in", "contours", ":", "\n", "# get the bounding rect", "\n", "            ", "x", ",", "y", ",", "w", ",", "h", "=", "cv2", ".", "boundingRect", "(", "c", ")", "\n", "bbox", "=", "(", "(", "x", ",", "y", ")", ",", "(", "x", "+", "w", "-", "1", ",", "y", "+", "h", "-", "1", ")", ")", "\n", "bboxes", ".", "append", "(", "bbox", ")", "\n", "", "return", "bboxes", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskReader.get_bbox": [[339, 351], ["PIL.ImageOps.invert", "numpy.array", "cv2.findContours", "numpy.array.convert", "cv2.boundingRect"], "methods", ["None"], ["", "def", "get_bbox", "(", "self", ",", "i", ")", ":", "\n", "# TODO: save bbox instead of looking for one", "\n", "        ", "mask", "=", "self", ".", "files", "[", "i", "]", "\n", "mask", "=", "ImageOps", ".", "invert", "(", "mask", ".", "convert", "(", "\"L\"", ")", ")", "\n", "mask", "=", "np", ".", "array", "(", "mask", ")", "\n", "image", ",", "contours", ",", "hier", "=", "cv2", ".", "findContours", "(", "\n", "mask", ",", "cv2", ".", "RETR_EXTERNAL", ",", "cv2", ".", "CHAIN_APPROX_NONE", ")", "\n", "for", "c", "in", "contours", ":", "\n", "# get the bounding rect", "\n", "            ", "x", ",", "y", ",", "w", ",", "h", "=", "cv2", ".", "boundingRect", "(", "c", ")", "\n", "bbox", "=", "(", "(", "x", ",", "y", ")", ",", "(", "x", "+", "w", "-", "1", ",", "y", "+", "h", "-", "1", ")", ")", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskGenerator.__init__": [[354, 364], ["readers.Reader.__init__", "readers.MaskGenerator.generate_masks", "utils.util.make_dirs", "readers.MaskGenerator.save_files"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskGenerator.generate_masks", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.save_files"], ["    ", "def", "__init__", "(", "\n", "self", ",", "mask_output_dir", ",", "size", ",", "bboxeses", ",", "save_masks", "=", "True", "\n", ")", ":", "\n", "        ", "self", ".", "bboxeses", "=", "bboxeses", "\n", "self", ".", "size", "=", "size", "\n", "super", "(", ")", ".", "__init__", "(", "mask_output_dir", ",", "read", "=", "False", ")", "\n", "self", ".", "files", "=", "self", ".", "generate_masks", "(", ")", "\n", "if", "save_masks", ":", "\n", "            ", "make_dirs", "(", "mask_output_dir", ")", "\n", "self", ".", "save_files", "(", "mask_output_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskGenerator._save_file": [[365, 371], ["os.path.join", "file_.save"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], ["", "", "def", "_save_file", "(", "self", ",", "output_dir", ",", "i", ",", "file_", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "join", "(", "\n", "output_dir", ",", "\n", "f\"mask_{i:04}.png\"", "\n", ")", "\n", "file_", ".", "save", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskGenerator.get_bboxes": [[372, 374], ["None"], "methods", ["None"], ["", "def", "get_bboxes", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "self", ".", "bboxeses", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskGenerator.generate_masks": [[375, 381], ["range", "len", "readers.MaskGenerator.generate_mask", "masks.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskGenerator.generate_mask", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "generate_masks", "(", "self", ")", ":", "\n", "        ", "masks", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "bboxeses", ")", ")", ":", "\n", "            ", "mask", "=", "self", ".", "generate_mask", "(", "i", ")", "\n", "masks", ".", "append", "(", "mask", ")", "\n", "", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.MaskGenerator.generate_mask": [[382, 391], ["PIL.Image.new", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw.rectangle"], "methods", ["None"], ["", "def", "generate_mask", "(", "self", ",", "i", ")", ":", "\n", "        ", "bboxes", "=", "self", ".", "bboxeses", "[", "i", "]", "\n", "mask", "=", "Image", ".", "new", "(", "\"1\"", ",", "self", ".", "size", ",", "1", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "mask", ")", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "            ", "draw", ".", "rectangle", "(", "\n", "bbox", ",", "fill", "=", "0", "\n", ")", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.ForegroundReader.__init__": [[394, 411], ["readers.FrameReader", "readers.SegmentationReader", "readers.FrameReader.__init__", "readers.ForegroundReader.generate_fg_frames"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.ForegroundReader.generate_fg_frames"], ["    ", "def", "__init__", "(", "\n", "self", ",", "frames_dir", ",", "segms_dir", ",", "dir_name", ",", "\n", "resize", "=", "None", ",", "scale", "=", "1", "\n", ")", ":", "\n", "        ", "self", ".", "frames_dir", "=", "frames_dir", "\n", "self", ".", "segms_dir", "=", "segms_dir", "\n", "self", ".", "frames", "=", "FrameReader", "(", "\n", "frames_dir", ",", "\n", "resize", "=", "resize", ",", "scale", "=", "scale", "\n", ")", "\n", "self", ".", "segms", "=", "SegmentationReader", "(", "\n", "segms_dir", ",", "resize", "=", "resize", ",", "scale", "=", "scale", "\n", ")", "\n", "super", "(", ")", ".", "__init__", "(", "dir_name", ",", "read", "=", "False", ")", "\n", "self", ".", "masks", "=", "self", ".", "segms", ".", "masks", "\n", "# self.bbox_masks = self.segms.bbox_masks", "\n", "self", ".", "files", "=", "self", ".", "generate_fg_frames", "(", "self", ".", "frames", ",", "self", ".", "segms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.ForegroundReader.get_mask": [[412, 414], ["None"], "methods", ["None"], ["", "def", "get_mask", "(", "self", ",", "i", ")", ":", "\n", "        ", "return", "self", ".", "masks", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.ForegroundReader.generate_fg_frames": [[415, 429], ["utils.logging_config.logger.info", "enumerate", "PIL.Image.new", "PIL.Image.new.paste", "fg_frames.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "generate_fg_frames", "(", "self", ",", "frames", ",", "segms", ")", ":", "\n", "        ", "logger", ".", "info", "(", "\n", "f\"Generating fg frames from {self.frames_dir} and {self.segms_dir}\"", "\n", ")", "\n", "fg_frames", "=", "[", "]", "\n", "for", "i", ",", "frame", "in", "enumerate", "(", "frames", ")", ":", "\n", "            ", "mask", "=", "self", ".", "masks", "[", "i", "]", "\n", "fg_frame", "=", "Image", ".", "new", "(", "\"RGB\"", ",", "frame", ".", "size", ",", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "fg_frame", ".", "paste", "(", "\n", "frame", ",", "(", "0", ",", "0", ")", ",", "\n", "mask", "\n", ")", "\n", "fg_frames", ".", "append", "(", "fg_frame", ")", "\n", "", "return", "fg_frames", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.CompareFramesReader.__init__": [[432, 444], ["readers.CompareFramesReader.combine_videos", "readers.MaskReader", "readers.CompareFramesReader.videos.append", "readers.FrameReader", "readers.CompareFramesReader.videos.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.CompareFramesReader.combine_videos", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["    ", "def", "__init__", "(", "self", ",", "dir_names", ",", "col", "=", "2", ",", "names", "=", "[", "]", ",", "mask_dir", "=", "None", ")", ":", "\n", "        ", "self", ".", "videos", "=", "[", "]", "\n", "for", "dir_name", "in", "dir_names", ":", "\n", "# If a method fails on this video, use None to indicate the situation", "\n", "            ", "try", ":", "\n", "                ", "self", ".", "videos", ".", "append", "(", "FrameReader", "(", "dir_name", ")", ")", "\n", "", "except", "AssertionError", ":", "\n", "                ", "self", ".", "videos", ".", "append", "(", "None", ")", "\n", "", "", "if", "mask_dir", "is", "not", "None", ":", "\n", "            ", "self", ".", "masks", "=", "MaskReader", "(", "mask_dir", ")", "\n", "", "self", ".", "names", "=", "names", "\n", "self", ".", "files", "=", "self", ".", "combine_videos", "(", "self", ".", "videos", ",", "col", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.CompareFramesReader.combine_videos": [[445, 485], ["len", "len", "math.ceil", "range", "PIL.Image.new", "PIL.ImageDraw.Draw", "enumerate", "combined_frames.append", "PIL.Image.new.paste", "PIL.ImageFont.truetype", "PIL.ImageDraw.Draw.text", "PIL.Image.new", "video[].convert", "len"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "combine_videos", "(", "self", ",", "videos", ",", "col", "=", "2", ",", "edge_offset", "=", "35", ",", "h_start_offset", "=", "35", ")", ":", "\n", "        ", "combined_frames", "=", "[", "]", "\n", "w", ",", "h", "=", "videos", "[", "0", "]", "[", "0", "]", ".", "size", "\n", "# Prevent the first method fails and have a \"None\" as its video", "\n", "i", "=", "0", "\n", "while", "videos", "[", "i", "]", "is", "None", ":", "\n", "            ", "i", "+=", "1", "\n", "", "length", "=", "len", "(", "videos", "[", "i", "]", ")", "\n", "video_num", "=", "len", "(", "videos", ")", "\n", "row", "=", "ceil", "(", "video_num", "/", "col", ")", "\n", "for", "frame_idx", "in", "range", "(", "length", ")", ":", "\n", "            ", "width", "=", "col", "*", "w", "+", "(", "col", "-", "1", ")", "*", "edge_offset", "\n", "height", "=", "row", "*", "h", "+", "(", "row", "-", "1", ")", "*", "edge_offset", "+", "h_start_offset", "\n", "combined_frame", "=", "Image", ".", "new", "(", "\"RGBA\"", ",", "(", "width", ",", "height", ")", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "combined_frame", ")", "\n", "for", "i", ",", "video", "in", "enumerate", "(", "videos", ")", ":", "\n", "# Give the failed method a black output", "\n", "                ", "if", "video", "is", "None", "or", "frame_idx", ">=", "len", "(", "video", ")", ":", "\n", "                    ", "failed", "=", "True", "\n", "frame", "=", "Image", ".", "new", "(", "\"RGBA\"", ",", "(", "w", ",", "h", ")", ")", "\n", "", "else", ":", "\n", "                    ", "frame", "=", "video", "[", "frame_idx", "]", ".", "convert", "(", "\"RGBA\"", ")", "\n", "failed", "=", "False", "\n", "\n", "", "f_x", "=", "(", "i", "%", "col", ")", "*", "(", "w", "+", "edge_offset", ")", "\n", "f_y", "=", "(", "i", "//", "col", ")", "*", "(", "h", "+", "edge_offset", ")", "+", "h_start_offset", "\n", "combined_frame", ".", "paste", "(", "frame", ",", "(", "f_x", ",", "f_y", ")", ")", "\n", "\n", "# Draw name", "\n", "font", "=", "ImageFont", ".", "truetype", "(", "\"DejaVuSans.ttf\"", ",", "12", ")", "\n", "# font = ImageFont.truetype(\"DejaVuSans-Bold.ttf\", 13)", "\n", "# font = ImageFont.truetype(\"timesbd.ttf\", 14)", "\n", "name", "=", "self", ".", "names", "[", "i", "]", "if", "not", "failed", "else", "f'{self.names[i]} (failed)'", "\n", "draw", ".", "text", "(", "\n", "(", "f_x", "+", "10", ",", "f_y", "-", "20", ")", ",", "\n", "name", ",", "(", "255", ",", "255", ",", "255", ")", ",", "font", "=", "font", "\n", ")", "\n", "\n", "", "combined_frames", ".", "append", "(", "combined_frame", ")", "\n", "", "return", "combined_frames", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.BoundingBoxesListReader.__init__": [[488, 495], ["readers.Reader.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "dir_name", ",", "resize", "=", "None", ",", "read", "=", "True", ",", "max_length", "=", "MAX_LENGTH", ",", "\n", "scale", "=", "1", "\n", ")", ":", "\n", "        ", "self", ".", "resize", "=", "resize", "\n", "self", ".", "scale", "=", "scale", "\n", "super", "(", ")", ".", "__init__", "(", "dir_name", ",", "read", ",", "max_length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.BoundingBoxesListReader.read_file": [[496, 500], ["numpy.loadtxt", "numpy.loadtxt.tolist"], "methods", ["None"], ["", "def", "read_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "bboxes", "=", "np", ".", "loadtxt", "(", "filename", ",", "dtype", "=", "int", ")", "\n", "bboxes", "=", "[", "bboxes", ".", "tolist", "(", ")", "]", "\n", "return", "bboxes", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.parse_args": [[20, 90], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-fps'", ",", "'--fps'", ",", "\n", "type", "=", "int", ",", "default", "=", "DEFAULT_FPS", ",", "\n", "help", "=", "\"Output video FPS\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-v'", ",", "'--video_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Video directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-vs'", ",", "'--video_dirs'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Video directory names\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-v2'", ",", "'--video_dir2'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Video directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-sd'", ",", "'--segms_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Segmentation directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-fgd'", ",", "'--fg_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Foreground directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-fgfd'", ",", "'--fg_frames_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Foreground frames directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-fgsd'", ",", "'--fg_segms_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Foreground segmentations directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-syfd'", ",", "'--syn_frames_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Synthesized frames directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-bgfd'", ",", "'--bg_frames_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Background frames directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-rt'", ",", "'--reader_type'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Type of reader\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-od'", ",", "'--output_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Output directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-o'", ",", "'--output_filename'", ",", "\n", "type", "=", "str", ",", "required", "=", "True", ",", "\n", "help", "=", "\"Output output filename\"", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.save_frames_to_dir": [[502, 506], ["readers.FrameReader", "readers.Reader.set_files", "readers.Reader.save_files"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.set_files", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.save_files"], ["", "", "def", "save_frames_to_dir", "(", "frames", ",", "dirname", ")", ":", "\n", "    ", "reader", "=", "FrameReader", "(", "dirname", ",", "read", "=", "False", ")", "\n", "reader", ".", "set_files", "(", "frames", ")", "\n", "reader", ".", "save_files", "(", "dirname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.directory_IO.RootInputDirectories.__init__": [[15, 33], ["utils.util.read_dirnames_under_root", "utils.util.read_dirnames_under_root", "open", "os.path.join", "fin.readlines", "line.split"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_dirnames_under_root", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_dirnames_under_root"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "root_videos_dir", ",", "\n", "root_masks_dir", ",", "\n", "video_names_filename", "=", "None", "\n", ")", ":", "\n", "        ", "self", ".", "root_videos_dir", "=", "root_videos_dir", "\n", "self", ".", "root_masks_dir", "=", "root_masks_dir", "\n", "if", "video_names_filename", "is", "not", "None", ":", "\n", "            ", "with", "open", "(", "video_names_filename", ",", "'r'", ")", "as", "fin", ":", "\n", "                ", "self", ".", "video_dirnames", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "root_videos_dir", ",", "line", ".", "split", "(", ")", "[", "0", "]", ")", "\n", "for", "line", "in", "fin", ".", "readlines", "(", ")", "\n", "]", "\n", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "video_dirnames", "=", "read_dirnames_under_root", "(", "root_videos_dir", ")", "\n", "", "self", ".", "mask_dirnames", "=", "read_dirnames_under_root", "(", "root_masks_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.directory_IO.RootInputDirectories.__len__": [[34, 36], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "video_dirnames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.directory_IO.RootOutputDirectories.__init__": [[40, 47], ["utils.util.make_dir_under_root"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dir_under_root"], ["    ", "def", "__init__", "(", "\n", "self", ",", "root_outputs_dir", ",", "\n", ")", ":", "\n", "        ", "self", ".", "output_root_dirs", "=", "{", "}", "\n", "for", "name", "in", "OUTPUT_ROOT_DIR_NAMES", ":", "\n", "            ", "self", ".", "output_root_dirs", "[", "name", "]", "=", "make_dir_under_root", "(", "root_outputs_dir", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.directory_IO.RootOutputDirectories.__getattr__": [[48, 54], ["KeyError"], "methods", ["None"], ["", "", "def", "__getattr__", "(", "self", ",", "attr", ")", ":", "\n", "        ", "if", "attr", "in", "self", ".", "output_root_dirs", ":", "\n", "            ", "return", "self", ".", "output_root_dirs", "[", "attr", "]", "\n", "", "else", ":", "\n", "            ", "raise", "KeyError", "(", "\n", "f\"{attr} not in root_dir_names {self.output_root_dirs}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.directory_IO.VideoDirectories.__init__": [[58, 70], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "root_inputs_dirs", ",", "root_outputs_dirs", ",", "video_name", ",", "mask_name", "\n", ")", ":", "\n", "        ", "self", ".", "name", "=", "f\"video_{video_name}_mask_{mask_name}\"", "\n", "rid", "=", "root_inputs_dirs", "\n", "rod", "=", "root_outputs_dirs", "\n", "\n", "self", ".", "frames_dir", "=", "os", ".", "path", ".", "join", "(", "rid", ".", "root_videos_dir", ",", "video_name", ")", "\n", "self", ".", "mask_dir", "=", "os", ".", "path", ".", "join", "(", "rid", ".", "root_masks_dir", ",", "mask_name", ")", "\n", "self", ".", "masked_frames_dir", "=", "os", ".", "path", ".", "join", "(", "rod", ".", "masked_frames", ",", "self", ".", "name", ")", "\n", "self", ".", "results_dir", "=", "os", ".", "path", ".", "join", "(", "rod", ".", "result_frames", ",", "self", ".", "name", ")", "\n", "self", ".", "flows_dir", "=", "os", ".", "path", ".", "join", "(", "rod", ".", "optical_flows", ",", "video_name", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.face.landmarks_to_np": [[47, 58], ["numpy.zeros", "range", "landmarks.part", "landmarks.part"], "function", ["None"], ["def", "landmarks_to_np", "(", "landmarks", ",", "dtype", "=", "\"int\"", ")", ":", "\n", "# initialize the list of (x, y)-coordinates", "\n", "    ", "coords", "=", "np", ".", "zeros", "(", "(", "landmarks", ".", "num_parts", ",", "2", ")", ",", "dtype", "=", "dtype", ")", "\n", "\n", "# loop over all facial landmarks and convert them", "\n", "# to a 2-tuple of (x, y)-coordinates", "\n", "for", "i", "in", "range", "(", "0", ",", "landmarks", ".", "num_parts", ")", ":", "\n", "        ", "coords", "[", "i", "]", "=", "(", "landmarks", ".", "part", "(", "i", ")", ".", "x", ",", "landmarks", ".", "part", "(", "i", ")", ".", "y", ")", "\n", "\n", "# return the list of (x, y)-coordinates", "\n", "", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.face.connect_landmarks": [[60, 85], ["numpy.zeros", "enumerate", "FACIAL_LANDMARKS_IDXS.keys", "range", "len", "tuple", "tuple", "cv2.line"], "function", ["None"], ["", "def", "connect_landmarks", "(", "image_shape", ",", "landmarks", ",", "color", "=", "None", ",", "alpha", "=", "0.75", ")", ":", "\n", "    ", "landmarks_contour", "=", "np", ".", "zeros", "(", "image_shape", ")", "\n", "\n", "# if the colors list is None, initialize it with a unique", "\n", "# color for each facial landmark region", "\n", "if", "color", "is", "None", ":", "\n", "        ", "color", "=", "1", "\n", "\n", "# loop over the facial landmark regions individually", "\n", "", "for", "(", "i", ",", "name", ")", "in", "enumerate", "(", "FACIAL_LANDMARKS_IDXS", ".", "keys", "(", ")", ")", ":", "\n", "# grab the (x, y)-coordinates associated with the", "\n", "# face landmark", "\n", "        ", "(", "j", ",", "k", ")", "=", "FACIAL_LANDMARKS_IDXS", "[", "name", "]", "\n", "pts", "=", "landmarks", "[", "j", ":", "k", "]", "\n", "\n", "for", "x", "in", "range", "(", "1", ",", "len", "(", "pts", ")", ")", ":", "\n", "            ", "ptA", "=", "tuple", "(", "pts", "[", "x", "-", "1", "]", ")", "\n", "ptB", "=", "tuple", "(", "pts", "[", "x", "]", ")", "\n", "cv2", ".", "line", "(", "landmarks_contour", ",", "ptA", ",", "ptB", ",", "color", ",", "2", ")", "\n", "\n", "# apply the transparent landmarks_contour", "\n", "# cv2.addWeighted(landmarks_contour, alpha, output, 1 - alpha, 0, output)", "\n", "\n", "# return the output image", "\n", "", "", "return", "landmarks_contour", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.face.get_landmarks_contour": [[87, 106], ["cv2.cvtColor", "os.path.exists", "dlib.shape_predictor", "detector", "dlib.shape_predictor.", "face.landmarks_to_np", "face.connect_landmarks", "len", "utils.logging_config.logger.error", "utils.logging_config.logger.error", "numpy.zeros_like"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.face.landmarks_to_np", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.face.connect_landmarks"], ["", "def", "get_landmarks_contour", "(", "image", ",", "landmarks_predictor_path", "=", "DEFAULT_PATH", ")", ":", "\n", "    ", "global", "predictor", "\n", "if", "predictor", "is", "None", ":", "\n", "        ", "assert", "os", ".", "path", ".", "exists", "(", "landmarks_predictor_path", ")", "\n", "predictor", "=", "dlib", ".", "shape_predictor", "(", "landmarks_predictor_path", ")", "\n", "\n", "", "gray", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "try", ":", "\n", "        ", "rects", "=", "detector", "(", "gray", ",", "1", ")", "\n", "assert", "len", "(", "rects", ")", "==", "1", "\n", "\n", "landmarks", "=", "predictor", "(", "gray", ",", "rects", "[", "0", "]", ")", "\n", "landmarks", "=", "landmarks_to_np", "(", "landmarks", ")", "\n", "img", "=", "connect_landmarks", "(", "gray", ".", "shape", ",", "landmarks", ")", "\n", "", "except", "Exception", "as", "err", ":", "\n", "        ", "logger", ".", "error", "(", "err", ",", "exc_info", "=", "True", ")", "\n", "logger", ".", "error", "(", "\"Set countour to black\"", ")", "\n", "img", "=", "np", ".", "zeros_like", "(", "gray", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_video_masks_by_moving_random_stroke": [[6, 89], ["PIL.Image.new", "range", "range", "numpy.random.randint", "mask_generators.get_random_stroke_control_points", "control_points_set.append", "mask_generators.draw_mask_by_control_points", "PIL.Image.new", "range", "masks.append", "len", "mask_generators.random_move_control_points", "mask_generators.draw_mask_by_control_points"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_random_stroke_control_points", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.draw_mask_by_control_points", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.random_move_control_points", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.draw_mask_by_control_points"], ["def", "get_video_masks_by_moving_random_stroke", "(", "\n", "video_len", ",", "imageWidth", "=", "320", ",", "imageHeight", "=", "180", ",", "nStroke", "=", "5", ",", "\n", "nVertexBound", "=", "[", "10", ",", "30", "]", ",", "maxHeadSpeed", "=", "15", ",", "maxHeadAcceleration", "=", "(", "15", ",", "0.5", ")", ",", "\n", "brushWidthBound", "=", "(", "5", ",", "20", ")", ",", "boarderGap", "=", "None", ",", "nMovePointRatio", "=", "0.5", ",", "maxPiontMove", "=", "10", ",", "\n", "maxLineAcceleration", "=", "5", ",", "maxInitSpeed", "=", "5", "\n", ")", ":", "\n", "    ", "'''\n    Get video masks by random strokes which move randomly between each\n    frame, including the whole stroke and its control points\n\n    Parameters\n    ----------\n        imageWidth: Image width\n        imageHeight: Image height\n        nStroke: Number of drawed lines\n        nVertexBound: Lower/upper bound of number of control points for each line\n        maxHeadSpeed: Max head speed when creating control points\n        maxHeadAcceleration: Max acceleration applying on the current head point (\n            a head point and its velosity decides the next point)\n        brushWidthBound (min, max): Bound of width for each stroke\n        boarderGap: The minimum gap between image boarder and drawed lines\n        nMovePointRatio: The ratio of control points to move for next frames\n        maxPiontMove: The magnitude of movement for control points for next frames\n        maxLineAcceleration: The magnitude of acceleration for the whole line\n\n    Examples\n    ----------\n        object_like_setting = {\n            \"nVertexBound\": [5, 20],\n            \"maxHeadSpeed\": 15,\n            \"maxHeadAcceleration\": (15, 3.14),\n            \"brushWidthBound\": (30, 50),\n            \"nMovePointRatio\": 0.5,\n            \"maxPiontMove\": 10,\n            \"maxLineAcceleration\": (5, 0.5),\n            \"boarderGap\": 20,\n            \"maxInitSpeed\": 10,\n        }\n        rand_curve_setting = {\n            \"nVertexBound\": [10, 30],\n            \"maxHeadSpeed\": 20,\n            \"maxHeadAcceleration\": (15, 0.5),\n            \"brushWidthBound\": (3, 10),\n            \"nMovePointRatio\": 0.5,\n            \"maxPiontMove\": 3,\n            \"maxLineAcceleration\": (5, 0.5),\n            \"boarderGap\": 20,\n            \"maxInitSpeed\": 6\n        }\n        get_video_masks_by_moving_random_stroke(video_len=5, nStroke=3, **object_like_setting)\n    '''", "\n", "assert", "(", "video_len", ">=", "1", ")", "\n", "\n", "# Initilize a set of control points to draw the first mask", "\n", "mask", "=", "Image", ".", "new", "(", "mode", "=", "'1'", ",", "size", "=", "(", "imageWidth", ",", "imageHeight", ")", ",", "color", "=", "1", ")", "\n", "control_points_set", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nStroke", ")", ":", "\n", "        ", "brushWidth", "=", "np", ".", "random", ".", "randint", "(", "brushWidthBound", "[", "0", "]", ",", "brushWidthBound", "[", "1", "]", ")", "\n", "Xs", ",", "Ys", ",", "velocity", "=", "get_random_stroke_control_points", "(", "\n", "imageWidth", "=", "imageWidth", ",", "imageHeight", "=", "imageHeight", ",", "\n", "nVertexBound", "=", "nVertexBound", ",", "maxHeadSpeed", "=", "maxHeadSpeed", ",", "\n", "maxHeadAcceleration", "=", "maxHeadAcceleration", ",", "boarderGap", "=", "boarderGap", ",", "\n", "maxInitSpeed", "=", "maxInitSpeed", "\n", ")", "\n", "control_points_set", ".", "append", "(", "(", "Xs", ",", "Ys", ",", "velocity", ",", "brushWidth", ")", ")", "\n", "draw_mask_by_control_points", "(", "mask", ",", "Xs", ",", "Ys", ",", "brushWidth", ",", "fill", "=", "0", ")", "\n", "\n", "# Generate the following masks by randomly move strokes and their control points", "\n", "", "masks", "=", "[", "mask", "]", "\n", "for", "i", "in", "range", "(", "video_len", "-", "1", ")", ":", "\n", "        ", "mask", "=", "Image", ".", "new", "(", "mode", "=", "'1'", ",", "size", "=", "(", "imageWidth", ",", "imageHeight", ")", ",", "color", "=", "1", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "control_points_set", ")", ")", ":", "\n", "            ", "Xs", ",", "Ys", ",", "velocity", ",", "brushWidth", "=", "control_points_set", "[", "j", "]", "\n", "new_Xs", ",", "new_Ys", "=", "random_move_control_points", "(", "\n", "Xs", ",", "Ys", ",", "velocity", ",", "nMovePointRatio", ",", "maxPiontMove", ",", "\n", "maxLineAcceleration", ",", "boarderGap", "\n", ")", "\n", "control_points_set", "[", "j", "]", "=", "(", "new_Xs", ",", "new_Ys", ",", "velocity", ",", "brushWidth", ")", "\n", "", "for", "Xs", ",", "Ys", ",", "velocity", ",", "brushWidth", "in", "control_points_set", ":", "\n", "            ", "draw_mask_by_control_points", "(", "mask", ",", "Xs", ",", "Ys", ",", "brushWidth", ",", "fill", "=", "0", ")", "\n", "", "masks", ".", "append", "(", "mask", ")", "\n", "\n", "", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.random_accelerate": [[91, 105], ["numpy.random.uniform", "numpy.random.uniform", "numpy.random.normal", "numpy.random.normal", "NotImplementedError"], "function", ["None"], ["", "def", "random_accelerate", "(", "velocity", ",", "maxAcceleration", ",", "dist", "=", "'uniform'", ")", ":", "\n", "    ", "speed", ",", "angle", "=", "velocity", "\n", "d_speed", ",", "d_angle", "=", "maxAcceleration", "\n", "\n", "if", "dist", "==", "'uniform'", ":", "\n", "        ", "speed", "+=", "np", ".", "random", ".", "uniform", "(", "-", "d_speed", ",", "d_speed", ")", "\n", "angle", "+=", "np", ".", "random", ".", "uniform", "(", "-", "d_angle", ",", "d_angle", ")", "\n", "", "elif", "dist", "==", "'guassian'", ":", "\n", "        ", "speed", "+=", "np", ".", "random", ".", "normal", "(", "0", ",", "d_speed", "/", "2", ")", "\n", "angle", "+=", "np", ".", "random", ".", "normal", "(", "0", ",", "d_angle", "/", "2", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "f'Distribution type {dist} is not supported.'", ")", "\n", "\n", "", "return", "(", "speed", ",", "angle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.random_move_control_points": [[107, 125], ["Xs.copy", "Ys.copy", "int", "int", "mask_generators.random_accelerate", "numpy.arange", "numpy.random.shuffle", "len", "numpy.random.randint", "numpy.random.randint", "numpy.cos", "numpy.sin", "int", "len"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.random_accelerate"], ["", "def", "random_move_control_points", "(", "Xs", ",", "Ys", ",", "lineVelocity", ",", "nMovePointRatio", ",", "maxPiontMove", ",", "maxLineAcceleration", ",", "boarderGap", "=", "15", ")", ":", "\n", "    ", "new_Xs", "=", "Xs", ".", "copy", "(", ")", "\n", "new_Ys", "=", "Ys", ".", "copy", "(", ")", "\n", "\n", "# move the whole line and accelerate", "\n", "speed", ",", "angle", "=", "lineVelocity", "\n", "new_Xs", "+=", "int", "(", "speed", "*", "np", ".", "cos", "(", "angle", ")", ")", "\n", "new_Ys", "+=", "int", "(", "speed", "*", "np", ".", "sin", "(", "angle", ")", ")", "\n", "lineVelocity", "=", "random_accelerate", "(", "lineVelocity", ",", "maxLineAcceleration", ",", "dist", "=", "'guassian'", ")", "\n", "\n", "# choose points to move", "\n", "chosen", "=", "np", ".", "arange", "(", "len", "(", "Xs", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "chosen", ")", "\n", "chosen", "=", "chosen", "[", ":", "int", "(", "len", "(", "Xs", ")", "*", "nMovePointRatio", ")", "]", "\n", "for", "i", "in", "chosen", ":", "\n", "        ", "new_Xs", "[", "i", "]", "+=", "np", ".", "random", ".", "randint", "(", "-", "maxPiontMove", ",", "maxPiontMove", ")", "\n", "new_Ys", "[", "i", "]", "+=", "np", ".", "random", ".", "randint", "(", "-", "maxPiontMove", ",", "maxPiontMove", ")", "\n", "", "return", "new_Xs", ",", "new_Ys", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_random_stroke_control_points": [[127, 164], ["numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.uniform", "numpy.random.uniform", "range", "mask_generators.get_random_velocity", "mask_generators.random_accelerate", "numpy.clip", "Xs.append", "Ys.append", "numpy.array", "numpy.array", "numpy.clip", "numpy.clip", "numpy.sin", "numpy.cos"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_random_velocity", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.random_accelerate", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "get_random_stroke_control_points", "(", "\n", "imageWidth", ",", "imageHeight", ",", "\n", "nVertexBound", "=", "(", "10", ",", "30", ")", ",", "maxHeadSpeed", "=", "10", ",", "maxHeadAcceleration", "=", "(", "5", ",", "0.5", ")", ",", "boarderGap", "=", "20", ",", "\n", "maxInitSpeed", "=", "10", "\n", ")", ":", "\n", "    ", "'''\n    Implementation the free-form training masks generating algorithm\n    proposed by JIAHUI YU et al. in \"Free-Form Image Inpainting with Gated Convolution\"\n    '''", "\n", "startX", "=", "np", ".", "random", ".", "randint", "(", "imageWidth", ")", "\n", "startY", "=", "np", ".", "random", ".", "randint", "(", "imageHeight", ")", "\n", "Xs", "=", "[", "startX", "]", "\n", "Ys", "=", "[", "startY", "]", "\n", "\n", "numVertex", "=", "np", ".", "random", ".", "randint", "(", "nVertexBound", "[", "0", "]", ",", "nVertexBound", "[", "1", "]", ")", "\n", "\n", "angle", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "2", "*", "np", ".", "pi", ")", "\n", "speed", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "maxHeadSpeed", ")", "\n", "\n", "for", "i", "in", "range", "(", "numVertex", ")", ":", "\n", "        ", "speed", ",", "angle", "=", "random_accelerate", "(", "(", "speed", ",", "angle", ")", ",", "maxHeadAcceleration", ")", "\n", "speed", "=", "np", ".", "clip", "(", "speed", ",", "0", ",", "maxHeadSpeed", ")", "\n", "\n", "nextX", "=", "startX", "+", "speed", "*", "np", ".", "sin", "(", "angle", ")", "\n", "nextY", "=", "startY", "+", "speed", "*", "np", ".", "cos", "(", "angle", ")", "\n", "\n", "if", "boarderGap", "is", "not", "None", ":", "\n", "            ", "nextX", "=", "np", ".", "clip", "(", "nextX", ",", "boarderGap", ",", "imageWidth", "-", "boarderGap", ")", "\n", "nextY", "=", "np", ".", "clip", "(", "nextY", ",", "boarderGap", ",", "imageHeight", "-", "boarderGap", ")", "\n", "\n", "", "startX", ",", "startY", "=", "nextX", ",", "nextY", "\n", "Xs", ".", "append", "(", "nextX", ")", "\n", "Ys", ".", "append", "(", "nextY", ")", "\n", "\n", "", "velocity", "=", "get_random_velocity", "(", "maxInitSpeed", ",", "dist", "=", "'guassian'", ")", "\n", "\n", "return", "np", ".", "array", "(", "Xs", ")", ",", "np", ".", "array", "(", "Ys", ")", ",", "velocity", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_random_velocity": [[166, 176], ["numpy.random.uniform", "numpy.random.uniform", "numpy.abs", "NotImplementedError", "numpy.random.normal"], "function", ["None"], ["", "def", "get_random_velocity", "(", "max_speed", ",", "dist", "=", "'uniform'", ")", ":", "\n", "    ", "if", "dist", "==", "'uniform'", ":", "\n", "        ", "speed", "=", "np", ".", "random", ".", "uniform", "(", "max_speed", ")", "\n", "", "elif", "dist", "==", "'guassian'", ":", "\n", "        ", "speed", "=", "np", ".", "abs", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "max_speed", "/", "2", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "f'Distribution type {dist} is not supported.'", ")", "\n", "\n", "", "angle", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "2", "*", "np", ".", "pi", ")", "\n", "return", "(", "speed", ",", "angle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.draw_mask_by_control_points": [[178, 188], ["range", "zip", "len", "PIL.ImageDraw.Draw", "ImageDraw.Draw.line", "ImageDraw.Draw.ellipse"], "function", ["None"], ["", "def", "draw_mask_by_control_points", "(", "mask", ",", "Xs", ",", "Ys", ",", "brushWidth", ",", "fill", "=", "255", ")", ":", "\n", "    ", "radius", "=", "brushWidth", "//", "2", "-", "1", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "Xs", ")", ")", ":", "\n", "        ", "draw", "=", "ImageDraw", ".", "Draw", "(", "mask", ")", "\n", "startX", ",", "startY", "=", "Xs", "[", "i", "-", "1", "]", ",", "Ys", "[", "i", "-", "1", "]", "\n", "nextX", ",", "nextY", "=", "Xs", "[", "i", "]", ",", "Ys", "[", "i", "]", "\n", "draw", ".", "line", "(", "(", "startX", ",", "startY", ")", "+", "(", "nextX", ",", "nextY", ")", ",", "fill", "=", "fill", ",", "width", "=", "brushWidth", ")", "\n", "", "for", "x", ",", "y", "in", "zip", "(", "Xs", ",", "Ys", ")", ":", "\n", "        ", "draw", ".", "ellipse", "(", "(", "x", "-", "radius", ",", "y", "-", "radius", ",", "x", "+", "radius", ",", "y", "+", "radius", ")", ",", "fill", "=", "fill", ")", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_random_walk_mask": [[191, 208], ["numpy.zeros().astype", "random.randint", "random.randint", "range", "PIL.Image.fromarray().convert", "random.randint", "numpy.clip", "numpy.clip", "x_list.append", "y_list.append", "numpy.zeros", "PIL.Image.fromarray", "len", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "get_random_walk_mask", "(", "imageWidth", "=", "320", ",", "imageHeight", "=", "180", ",", "length", "=", "None", ")", ":", "\n", "    ", "action_list", "=", "[", "[", "0", ",", "1", "]", ",", "[", "0", ",", "-", "1", "]", ",", "[", "1", ",", "0", "]", ",", "[", "-", "1", ",", "0", "]", "]", "\n", "canvas", "=", "np", ".", "zeros", "(", "(", "imageHeight", ",", "imageWidth", ")", ")", ".", "astype", "(", "\"i\"", ")", "\n", "if", "length", "is", "None", ":", "\n", "        ", "length", "=", "imageWidth", "*", "imageHeight", "\n", "", "x", "=", "random", ".", "randint", "(", "0", ",", "imageHeight", "-", "1", ")", "\n", "y", "=", "random", ".", "randint", "(", "0", ",", "imageWidth", "-", "1", ")", "\n", "x_list", "=", "[", "]", "\n", "y_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "        ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "action_list", ")", "-", "1", ")", "\n", "x", "=", "np", ".", "clip", "(", "x", "+", "action_list", "[", "r", "]", "[", "0", "]", ",", "a_min", "=", "0", ",", "a_max", "=", "imageHeight", "-", "1", ")", "\n", "y", "=", "np", ".", "clip", "(", "y", "+", "action_list", "[", "r", "]", "[", "1", "]", ",", "a_min", "=", "0", ",", "a_max", "=", "imageWidth", "-", "1", ")", "\n", "x_list", ".", "append", "(", "x", ")", "\n", "y_list", ".", "append", "(", "y", ")", "\n", "", "canvas", "[", "np", ".", "array", "(", "x_list", ")", ",", "np", ".", "array", "(", "y_list", ")", "]", "=", "1", "\n", "return", "Image", ".", "fromarray", "(", "canvas", "*", "255", ")", ".", "convert", "(", "'1'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_masked_ratio": [[210, 218], ["mask.histogram", "numpy.prod"], "function", ["None"], ["", "def", "get_masked_ratio", "(", "mask", ")", ":", "\n", "    ", "\"\"\"\n    Calculate the masked ratio.\n    mask: Expected a binary PIL image, where 0 and 1 represent\n          masked(invalid) and valid pixel values.\n    \"\"\"", "\n", "hist", "=", "mask", ".", "histogram", "(", ")", "\n", "return", "hist", "[", "0", "]", "/", "np", ".", "prod", "(", "mask", ".", "size", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.visualization.WriterTensorboardX.__init__": [[6, 26], ["importlib.import_module().SummaryWriter", "warnings.warn", "importlib.import_module"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "writer_dir", ",", "logger", ",", "enable", ")", ":", "\n", "        ", "self", ".", "writer", "=", "None", "\n", "if", "enable", ":", "\n", "            ", "log_path", "=", "writer_dir", "\n", "try", ":", "\n", "                ", "self", ".", "writer", "=", "importlib", ".", "import_module", "(", "'tensorboardX'", ")", ".", "SummaryWriter", "(", "log_path", ")", "\n", "", "except", "ModuleNotFoundError", ":", "\n", "                ", "message", "=", "\"\"\"\n                    TensorboardX visualization is configured to use, but currently not installed on this machine.\n                    Please install the package by 'pip install tensorboardx' command or turn off the option\n                    in the 'config.json' file.\n                \"\"\"", "\n", "warnings", ".", "warn", "(", "message", ",", "UserWarning", ")", "\n", "# logger.warn()", "\n", "", "", "self", ".", "step", "=", "0", "\n", "self", ".", "mode", "=", "''", "\n", "\n", "self", ".", "tensorboard_writer_ftns", "=", "[", "\n", "'add_scalar'", ",", "'add_scalars'", ",", "'add_image'", ",", "'add_audio'", ",", "'add_text'", ",", "'add_histogram'", ",", "\n", "'add_pr_curve'", ",", "'add_embedding'", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.visualization.WriterTensorboardX.set_step": [[28, 31], ["None"], "methods", ["None"], ["", "def", "set_step", "(", "self", ",", "step", ",", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "self", ".", "step", "=", "step", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.visualization.WriterTensorboardX.__getattr__": [[32, 53], ["getattr", "object.__getattr__", "getattr.", "AttributeError"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.visualization.WriterTensorboardX.__getattr__"], ["", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "\"\"\"\n        If visualization is configured to use:\n            return add_data() methods of tensorboard with additional information (step, tag) added.\n        Otherwise:\n            return blank function handle that does nothing\n        \"\"\"", "\n", "if", "name", "in", "self", ".", "tensorboard_writer_ftns", ":", "\n", "            ", "add_data", "=", "getattr", "(", "self", ".", "writer", ",", "name", ",", "None", ")", "\n", "\n", "def", "wrapper", "(", "tag", ",", "data", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "                ", "if", "add_data", "is", "not", "None", ":", "\n", "                    ", "add_data", "(", "'{}/{}'", ".", "format", "(", "self", ".", "mode", ",", "tag", ")", ",", "data", ",", "self", ".", "step", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "", "return", "wrapper", "\n", "", "else", ":", "\n", "# default action for returning methods defined in this class, set_step() for instance.", "\n", "            ", "try", ":", "\n", "                ", "attr", "=", "object", ".", "__getattr__", "(", "name", ")", "\n", "", "except", "AttributeError", ":", "\n", "                ", "raise", "AttributeError", "(", "\"type object 'WriterTensorboardX' has no attribute '{}'\"", ".", "format", "(", "name", ")", ")", "\n", "", "return", "attr", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.logger.Logger.__init__": [[10, 12], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "entries", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.logger.Logger.add_entry": [[13, 15], ["len"], "methods", ["None"], ["", "def", "add_entry", "(", "self", ",", "entry", ")", ":", "\n", "        ", "self", ".", "entries", "[", "len", "(", "self", ".", "entries", ")", "+", "1", "]", "=", "entry", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.logger.Logger.__str__": [[16, 18], ["json.dumps"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "json", ".", "dumps", "(", "self", ".", "entries", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.flow_utils.warp_optical_flow": [[6, 42], ["batch_x.contiguous().view", "batch_flow.view", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "xx.view().repeat.view().repeat", "yy.view().repeat.view().repeat", "torch.cat().float", "torch.cat().float", "vgrid.permute.permute", "torch.functional.grid_sample", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.functional.grid_sample", "result.view", "grid.cuda.cuda", "batch_x.contiguous", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "xx.view().repeat.view", "yy.view().repeat.view", "torch.cat", "torch.cat", "max", "max", "torch.autograd.Variable", "torch.autograd.Variable", "torch.ones", "torch.ones", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "batch_x.contiguous().view.size"], "function", ["None"], ["def", "warp_optical_flow", "(", "batch_x", ",", "batch_flow", ")", ":", "\n", "    ", "\"\"\"\n    Modified from https://github.com/NVlabs/PWC-Net/blob/fc6ebf9a70a7387164df09a3a2070ba16f9c1ede/PyTorch/models/PWCNet.py  # NOQA\n    warp an im2 back to im1, according to the optical flow\n    x: [B, L, C, H, W] (im2)\n    flo: [B, L, 2, H, W] flow\n    \"\"\"", "\n", "B", ",", "L", ",", "C", ",", "H", ",", "W", "=", "batch_x", ".", "shape", "\n", "B", "=", "B", "*", "L", "\n", "x", "=", "batch_x", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "C", ",", "H", ",", "W", ")", "\n", "flo", "=", "batch_flow", ".", "view", "(", "-", "1", ",", "2", ",", "H", ",", "W", ")", "\n", "# mesh grid", "\n", "xx", "=", "torch", ".", "arange", "(", "0", ",", "W", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "repeat", "(", "H", ",", "1", ")", "\n", "yy", "=", "torch", ".", "arange", "(", "0", ",", "H", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "W", ")", "\n", "xx", "=", "xx", ".", "view", "(", "1", ",", "1", ",", "H", ",", "W", ")", ".", "repeat", "(", "B", ",", "1", ",", "1", ",", "1", ")", "\n", "yy", "=", "yy", ".", "view", "(", "1", ",", "1", ",", "H", ",", "W", ")", ".", "repeat", "(", "B", ",", "1", ",", "1", ",", "1", ")", "\n", "grid", "=", "torch", ".", "cat", "(", "(", "xx", ",", "yy", ")", ",", "1", ")", ".", "float", "(", ")", "\n", "\n", "if", "x", ".", "is_cuda", ":", "\n", "        ", "grid", "=", "grid", ".", "cuda", "(", ")", "\n", "", "vgrid", "=", "grid", "+", "flo", "\n", "\n", "# scale grid to [-1, 1]", "\n", "vgrid", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "2.0", "*", "vgrid", "[", ":", ",", "0", ",", ":", ",", ":", "]", "/", "max", "(", "W", "-", "1", ",", "1", ")", "-", "1.0", "\n", "vgrid", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "2.0", "*", "vgrid", "[", ":", ",", "1", ",", ":", ",", ":", "]", "/", "max", "(", "H", "-", "1", ",", "1", ")", "-", "1.0", "\n", "\n", "vgrid", "=", "vgrid", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "output", "=", "nn", ".", "functional", ".", "grid_sample", "(", "x", ",", "vgrid", ")", "\n", "mask", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "ones", "(", "x", ".", "size", "(", ")", ")", ")", ".", "cuda", "(", ")", "\n", "mask", "=", "nn", ".", "functional", ".", "grid_sample", "(", "mask", ",", "vgrid", ")", "\n", "\n", "mask", "[", "mask", "<", "0.9999", "]", "=", "0", "\n", "mask", "[", "mask", ">", "0", "]", "=", "1", "\n", "\n", "result", "=", "output", "*", "mask", "\n", "return", "result", ".", "view", "(", "-", "1", ",", "L", ",", "C", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.flow_utils.flow_to_image": [[47, 83], ["max", "min", "max", "min", "numpy.sqrt", "max", "flow_utils.compute_color", "numpy.repeat", "numpy.uint8", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "abs", "abs", "numpy.finfo", "numpy.finfo"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.flow_utils.compute_color"], ["def", "flow_to_image", "(", "flow", ")", ":", "\n", "    ", "\"\"\"\n    Convert flow into middlebury color code image\n    :param flow: optical flow map\n    :return: optical flow image in middlebury color\n    \"\"\"", "\n", "u", "=", "flow", "[", ":", ",", ":", ",", "0", "]", "\n", "v", "=", "flow", "[", ":", ",", ":", ",", "1", "]", "\n", "\n", "maxu", "=", "-", "999.", "\n", "maxv", "=", "-", "999.", "\n", "minu", "=", "999.", "\n", "minv", "=", "999.", "\n", "\n", "idxUnknow", "=", "(", "abs", "(", "u", ")", ">", "UNKNOWN_FLOW_THRESH", ")", "|", "(", "abs", "(", "v", ")", ">", "UNKNOWN_FLOW_THRESH", ")", "\n", "u", "[", "idxUnknow", "]", "=", "0", "\n", "v", "[", "idxUnknow", "]", "=", "0", "\n", "\n", "maxu", "=", "max", "(", "maxu", ",", "np", ".", "max", "(", "u", ")", ")", "\n", "minu", "=", "min", "(", "minu", ",", "np", ".", "min", "(", "u", ")", ")", "\n", "\n", "maxv", "=", "max", "(", "maxv", ",", "np", ".", "max", "(", "v", ")", ")", "\n", "minv", "=", "min", "(", "minv", ",", "np", ".", "min", "(", "v", ")", ")", "\n", "\n", "rad", "=", "np", ".", "sqrt", "(", "u", "**", "2", "+", "v", "**", "2", ")", "\n", "maxrad", "=", "max", "(", "-", "1", ",", "np", ".", "max", "(", "rad", ")", ")", "\n", "\n", "u", "=", "u", "/", "(", "maxrad", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", "\n", "v", "=", "v", "/", "(", "maxrad", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", "\n", "\n", "img", "=", "compute_color", "(", "u", ",", "v", ")", "\n", "\n", "idx", "=", "np", ".", "repeat", "(", "idxUnknow", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ",", "3", ",", "axis", "=", "2", ")", "\n", "img", "[", "idx", "]", "=", "0", "\n", "\n", "return", "np", ".", "uint8", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.flow_utils.compute_color": [[85, 127], ["numpy.zeros", "flow_utils.make_color_wheel", "numpy.size", "numpy.sqrt", "numpy.floor().astype", "range", "numpy.isnan", "numpy.isnan", "numpy.arctan2", "numpy.size", "numpy.logical_not", "numpy.uint8", "numpy.floor", "numpy.floor"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.flow_utils.make_color_wheel"], ["", "def", "compute_color", "(", "u", ",", "v", ")", ":", "\n", "    ", "\"\"\"\n    compute optical flow color map\n    :param u: optical flow horizontal map\n    :param v: optical flow vertical map\n    :return: optical flow in color code\n    \"\"\"", "\n", "[", "h", ",", "w", "]", "=", "u", ".", "shape", "\n", "img", "=", "np", ".", "zeros", "(", "[", "h", ",", "w", ",", "3", "]", ")", "\n", "nanIdx", "=", "np", ".", "isnan", "(", "u", ")", "|", "np", ".", "isnan", "(", "v", ")", "\n", "u", "[", "nanIdx", "]", "=", "0", "\n", "v", "[", "nanIdx", "]", "=", "0", "\n", "\n", "colorwheel", "=", "make_color_wheel", "(", ")", "\n", "ncols", "=", "np", ".", "size", "(", "colorwheel", ",", "0", ")", "\n", "\n", "rad", "=", "np", ".", "sqrt", "(", "u", "**", "2", "+", "v", "**", "2", ")", "\n", "\n", "a", "=", "np", ".", "arctan2", "(", "-", "v", ",", "-", "u", ")", "/", "np", ".", "pi", "\n", "\n", "fk", "=", "(", "a", "+", "1", ")", "/", "2", "*", "(", "ncols", "-", "1", ")", "+", "1", "\n", "\n", "k0", "=", "np", ".", "floor", "(", "fk", ")", ".", "astype", "(", "int", ")", "\n", "\n", "k1", "=", "k0", "+", "1", "\n", "k1", "[", "k1", "==", "ncols", "+", "1", "]", "=", "1", "\n", "f", "=", "fk", "-", "k0", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "np", ".", "size", "(", "colorwheel", ",", "1", ")", ")", ":", "\n", "        ", "tmp", "=", "colorwheel", "[", ":", ",", "i", "]", "\n", "col0", "=", "tmp", "[", "k0", "-", "1", "]", "/", "255", "\n", "col1", "=", "tmp", "[", "k1", "-", "1", "]", "/", "255", "\n", "col", "=", "(", "1", "-", "f", ")", "*", "col0", "+", "f", "*", "col1", "\n", "\n", "idx", "=", "rad", "<=", "1", "\n", "col", "[", "idx", "]", "=", "1", "-", "rad", "[", "idx", "]", "*", "(", "1", "-", "col", "[", "idx", "]", ")", "\n", "notidx", "=", "np", ".", "logical_not", "(", "idx", ")", "\n", "\n", "col", "[", "notidx", "]", "*=", "0.75", "\n", "img", "[", ":", ",", ":", ",", "i", "]", "=", "np", ".", "uint8", "(", "np", ".", "floor", "(", "255", "*", "col", "*", "(", "1", "-", "nanIdx", ")", ")", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.flow_utils.make_color_wheel": [[129, 177], ["numpy.zeros", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.floor", "numpy.transpose", "numpy.floor", "numpy.transpose", "numpy.floor", "numpy.transpose", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "def", "make_color_wheel", "(", ")", ":", "\n", "    ", "\"\"\"\n    Generate color wheel according Middlebury color code\n    :return: Color wheel\n    \"\"\"", "\n", "RY", "=", "15", "\n", "YG", "=", "6", "\n", "GC", "=", "4", "\n", "CB", "=", "11", "\n", "BM", "=", "13", "\n", "MR", "=", "6", "\n", "\n", "ncols", "=", "RY", "+", "YG", "+", "GC", "+", "CB", "+", "BM", "+", "MR", "\n", "\n", "colorwheel", "=", "np", ".", "zeros", "(", "[", "ncols", ",", "3", "]", ")", "\n", "\n", "col", "=", "0", "\n", "\n", "# RY", "\n", "colorwheel", "[", "0", ":", "RY", ",", "0", "]", "=", "255", "\n", "colorwheel", "[", "0", ":", "RY", ",", "1", "]", "=", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "RY", ")", "/", "RY", ")", ")", "\n", "col", "+=", "RY", "\n", "\n", "# YG", "\n", "colorwheel", "[", "col", ":", "col", "+", "YG", ",", "0", "]", "=", "255", "-", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "YG", ")", "/", "YG", ")", ")", "\n", "colorwheel", "[", "col", ":", "col", "+", "YG", ",", "1", "]", "=", "255", "\n", "col", "+=", "YG", "\n", "\n", "# GC", "\n", "colorwheel", "[", "col", ":", "col", "+", "GC", ",", "1", "]", "=", "255", "\n", "colorwheel", "[", "col", ":", "col", "+", "GC", ",", "2", "]", "=", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "GC", ")", "/", "GC", ")", ")", "\n", "col", "+=", "GC", "\n", "\n", "# CB", "\n", "colorwheel", "[", "col", ":", "col", "+", "CB", ",", "1", "]", "=", "255", "-", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "CB", ")", "/", "CB", ")", ")", "\n", "colorwheel", "[", "col", ":", "col", "+", "CB", ",", "2", "]", "=", "255", "\n", "col", "+=", "CB", "\n", "\n", "# BM", "\n", "colorwheel", "[", "col", ":", "col", "+", "BM", ",", "2", "]", "=", "255", "\n", "colorwheel", "[", "col", ":", "col", "+", "BM", ",", "0", "]", "=", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "BM", ")", "/", "BM", ")", ")", "\n", "col", "+=", "+", "BM", "\n", "\n", "# MR", "\n", "colorwheel", "[", "col", ":", "col", "+", "MR", ",", "2", "]", "=", "255", "-", "np", ".", "transpose", "(", "np", ".", "floor", "(", "255", "*", "np", ".", "arange", "(", "0", ",", "MR", ")", "/", "MR", ")", ")", "\n", "colorwheel", "[", "col", ":", "col", "+", "MR", ",", "0", "]", "=", "255", "\n", "\n", "return", "colorwheel", "\n", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.screen.Sketcher.__init__": [[6, 15], ["screen.Sketcher.show", "cv2.setMouseCallback"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.screen.Sketcher.show"], ["    ", "def", "__init__", "(", "self", ",", "windowname", ",", "dests", ",", "colors", ",", "brush", ")", ":", "\n", "        ", "self", ".", "prev_pt", "=", "None", "\n", "self", ".", "windowname", "=", "windowname", "\n", "self", ".", "dests", "=", "dests", "\n", "self", ".", "colors", "=", "colors", "\n", "self", ".", "brush", "=", "brush", "\n", "self", ".", "dirty", "=", "False", "\n", "self", ".", "show", "(", ")", "\n", "cv", ".", "setMouseCallback", "(", "self", ".", "windowname", ",", "self", ".", "on_mouse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.screen.Sketcher.show": [[16, 18], ["cv2.imshow"], "methods", ["None"], ["", "def", "show", "(", "self", ")", ":", "\n", "        ", "cv", ".", "imshow", "(", "self", ".", "windowname", ",", "self", ".", "dests", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.screen.Sketcher.on_mouse": [[19, 32], ["zip", "screen.Sketcher.show", "cv2.line"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.screen.Sketcher.show"], ["", "def", "on_mouse", "(", "self", ",", "event", ",", "x", ",", "y", ",", "flags", ",", "param", ")", ":", "\n", "        ", "pt", "=", "(", "x", ",", "y", ")", "\n", "if", "event", "==", "cv", ".", "EVENT_LBUTTONDOWN", ":", "\n", "            ", "self", ".", "prev_pt", "=", "pt", "\n", "", "elif", "event", "==", "cv", ".", "EVENT_LBUTTONUP", ":", "\n", "            ", "self", ".", "prev_pt", "=", "None", "\n", "\n", "", "if", "self", ".", "prev_pt", "and", "flags", "&", "cv", ".", "EVENT_FLAG_LBUTTON", ":", "\n", "            ", "for", "(", "dst", ",", "color", ")", "in", "zip", "(", "self", ".", "dests", ",", "self", ".", "colors", ")", ":", "\n", "                ", "cv", ".", "line", "(", "dst", ",", "self", ".", "prev_pt", ",", "pt", ",", "color", ",", "thickness", "=", "self", ".", "brush", ")", "\n", "", "self", ".", "dirty", "=", "True", "\n", "self", ".", "prev_pt", "=", "pt", "\n", "self", ".", "show", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.parse_args": [[12, 36], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-v'", ",", "'--video_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Video directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-fl'", ",", "'--flow_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Optical flow ground truth directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-od'", ",", "'--output_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Output directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-o'", ",", "'--output_filename'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Output output filename\"", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs": [[38, 42], ["os.path.exists", "os.makedirs", "utils.logging_config.logger.info"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "make_dirs", "(", "dir_name", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dir_name", ")", "\n", "logger", ".", "info", "(", "f\"Directory {dir_name} made\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dir_under_root": [[47, 51], ["os.path.join", "util.make_dirs"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs"], ["def", "make_dir_under_root", "(", "root_dir", ",", "name", ")", ":", "\n", "    ", "full_dir_name", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "name", ")", "\n", "make_dirs", "(", "full_dir_name", ")", "\n", "return", "full_dir_name", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.rm_dirs": [[53, 57], ["os.path.exists", "shutil.rmtree", "utils.logging_config.logger.info"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "rm_dirs", "(", "dir_name", ",", "ignore_errors", "=", "False", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "dir_name", ")", ":", "\n", "        ", "shutil", ".", "rmtree", "(", "dir_name", ",", "ignore_errors", ")", "\n", "logger", ".", "info", "(", "f\"Directory {dir_name} removed\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_dirnames_under_root": [[59, 68], ["utils.logging_config.logger.info", "enumerate", "sorted", "os.path.isdir", "len", "os.listdir", "os.path.join"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "", "def", "read_dirnames_under_root", "(", "root_dir", ",", "skip_list", "=", "[", "]", ")", ":", "\n", "    ", "dirnames", "=", "[", "\n", "name", "for", "i", ",", "name", "in", "enumerate", "(", "sorted", "(", "os", ".", "listdir", "(", "root_dir", ")", ")", ")", "\n", "if", "(", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "root_dir", ",", "name", ")", ")", "\n", "and", "name", "not", "in", "skip_list", "\n", "and", "i", "not", "in", "skip_list", ")", "\n", "]", "\n", "logger", ".", "info", "(", "f\"Reading directories under {root_dir}, exclude {skip_list}, num: {len(dirnames)}\"", ")", "\n", "return", "dirnames", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.bbox_offset": [[70, 74], ["None"], "function", ["None"], ["", "def", "bbox_offset", "(", "bbox", ",", "location", ")", ":", "\n", "    ", "x0", ",", "y0", "=", "location", "\n", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "bbox", "\n", "return", "(", "(", "x1", "+", "x0", ",", "y1", "+", "y0", ")", ",", "(", "x2", "+", "x0", ",", "y2", "+", "y0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.cover2_bbox": [[76, 82], ["min", "min", "max", "max"], "function", ["None"], ["", "def", "cover2_bbox", "(", "bbox1", ",", "bbox2", ")", ":", "\n", "    ", "x1", "=", "min", "(", "bbox1", "[", "0", "]", "[", "0", "]", ",", "bbox2", "[", "0", "]", "[", "0", "]", ")", "\n", "y1", "=", "min", "(", "bbox1", "[", "0", "]", "[", "1", "]", ",", "bbox2", "[", "0", "]", "[", "1", "]", ")", "\n", "x2", "=", "max", "(", "bbox1", "[", "1", "]", "[", "0", "]", ",", "bbox2", "[", "1", "]", "[", "0", "]", ")", "\n", "y2", "=", "max", "(", "bbox1", "[", "1", "]", "[", "1", "]", ",", "bbox2", "[", "1", "]", "[", "1", "]", ")", "\n", "return", "(", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.extend_r_bbox": [[84, 91], ["max", "min", "max", "min"], "function", ["None"], ["", "def", "extend_r_bbox", "(", "bbox", ",", "w", ",", "h", ",", "r", ")", ":", "\n", "    ", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "bbox", "\n", "x1", "=", "max", "(", "x1", "-", "r", ",", "0", ")", "\n", "x2", "=", "min", "(", "x2", "+", "r", ",", "w", ")", "\n", "y1", "=", "max", "(", "y1", "-", "r", ",", "0", ")", "\n", "y2", "=", "min", "(", "y2", "+", "r", ",", "h", ")", "\n", "return", "(", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.mean_squared_error": [[93, 95], ["numpy.square().mean", "numpy.square", "numpy.subtract"], "function", ["None"], ["", "def", "mean_squared_error", "(", "A", ",", "B", ")", ":", "\n", "    ", "return", "np", ".", "square", "(", "np", ".", "subtract", "(", "A", ",", "B", ")", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.bboxes_to_mask": [[97, 109], ["PIL.Image.new", "numpy.array", "PIL.Image.fromarray", "Image.fromarray.astype"], "function", ["None"], ["", "def", "bboxes_to_mask", "(", "size", ",", "bboxes", ")", ":", "\n", "    ", "mask", "=", "Image", ".", "new", "(", "\"L\"", ",", "size", ",", "255", ")", "\n", "mask", "=", "np", ".", "array", "(", "mask", ")", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "        ", "try", ":", "\n", "            ", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "bbox", "\n", "", "except", "Exception", ":", "\n", "            ", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", "=", "bbox", "\n", "\n", "", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "0", "\n", "", "mask", "=", "Image", ".", "fromarray", "(", "mask", ".", "astype", "(", "\"uint8\"", ")", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_extended_from_box": [[111, 139], ["util.get_extended_from_box._decide_patch_num"], "function", ["None"], ["", "def", "get_extended_from_box", "(", "img_size", ",", "box", ",", "patch_size", ")", ":", "\n", "    ", "def", "_decide_patch_num", "(", "box_width", ",", "patch_size", ")", ":", "\n", "        ", "num", "=", "np", ".", "ceil", "(", "box_width", "/", "patch_size", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "if", "(", "num", "*", "patch_size", "-", "box_width", ")", "<", "(", "patch_size", "//", "2", ")", ":", "\n", "            ", "num", "+=", "1", "\n", "", "return", "num", "\n", "\n", "", "x1", ",", "y1", "=", "box", "[", "0", "]", "\n", "x2", ",", "y2", "=", "box", "[", "1", "]", "\n", "new_box", "=", "(", "x1", ",", "y1", ",", "x2", "-", "x1", ",", "y2", "-", "y1", ")", "\n", "box_x_start", ",", "box_y_start", ",", "box_x_size", ",", "box_y_size", "=", "new_box", "\n", "\n", "patchN_x", "=", "_decide_patch_num", "(", "box_x_size", ",", "patch_size", ")", "\n", "patchN_y", "=", "_decide_patch_num", "(", "box_y_size", ",", "patch_size", ")", "\n", "\n", "extend_x", "=", "(", "patch_size", "*", "patchN_x", "-", "box_x_size", ")", "//", "2", "\n", "extend_y", "=", "(", "patch_size", "*", "patchN_y", "-", "box_y_size", ")", "//", "2", "\n", "img_x_size", "=", "img_size", "[", "0", "]", "\n", "img_y_size", "=", "img_size", "[", "1", "]", "\n", "\n", "x_start", "=", "max", "(", "0", ",", "box_x_start", "-", "extend_x", ")", "\n", "x_end", "=", "min", "(", "box_x_start", "-", "extend_x", "+", "patchN_x", "*", "patch_size", ",", "img_x_size", ")", "\n", "\n", "y_start", "=", "max", "(", "0", ",", "box_y_start", "-", "extend_y", ")", "\n", "y_end", "=", "min", "(", "box_y_start", "-", "extend_y", "+", "patchN_y", "*", "patch_size", ",", "img_y_size", ")", "\n", "x_start", ",", "y_start", ",", "x_end", ",", "y_end", "=", "int", "(", "x_start", ")", ",", "int", "(", "y_start", ")", ",", "int", "(", "x_end", ")", ",", "int", "(", "y_end", ")", "\n", "extented_box", "=", "(", "(", "x_start", ",", "y_start", ")", ",", "(", "x_end", ",", "y_end", ")", ")", "\n", "return", "extented_box", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.spatial_discounting_mask": [[142, 158], ["numpy.ones", "range", "range", "max", "min", "min"], "function", ["None"], ["", "def", "spatial_discounting_mask", "(", "mask_width", ",", "mask_height", ",", "discounting_gamma", ")", ":", "\n", "    ", "\"\"\"Generate spatial discounting mask constant.\n    Spatial discounting mask is first introduced in publication:\n        Generative Image Inpainting with Contextual Attention, Yu et al.\n    Returns:\n        np.array: spatial discounting mask\n    \"\"\"", "\n", "gamma", "=", "discounting_gamma", "\n", "mask_values", "=", "np", ".", "ones", "(", "(", "mask_width", ",", "mask_height", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "mask_width", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "mask_height", ")", ":", "\n", "            ", "mask_values", "[", "i", ",", "j", "]", "=", "max", "(", "\n", "gamma", "**", "min", "(", "i", ",", "mask_width", "-", "i", ")", ",", "\n", "gamma", "**", "min", "(", "j", ",", "mask_height", "-", "j", ")", ")", "\n", "\n", "", "", "return", "mask_values", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.bboxes_to_discounting_loss_mask": [[160, 170], ["numpy.zeros", "util.spatial_discounting_mask"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.spatial_discounting_mask"], ["", "def", "bboxes_to_discounting_loss_mask", "(", "img_size", ",", "bboxes", ",", "discounting_gamma", "=", "0.99", ")", ":", "\n", "    ", "mask", "=", "np", ".", "zeros", "(", "img_size", ",", "dtype", "=", "np", ".", "float32", ")", "+", "0.5", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "        ", "try", ":", "\n", "            ", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "bbox", "\n", "", "except", "Exception", ":", "\n", "            ", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", "=", "bbox", "\n", "", "mask_width", ",", "mask_height", "=", "y2", "-", "y1", ",", "x2", "-", "x1", "\n", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "spatial_discounting_mask", "(", "mask_width", ",", "mask_height", ",", "discounting_gamma", ")", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.find_proper_window": [[172, 214], ["min", "max", "max"], "function", ["None"], ["", "def", "find_proper_window", "(", "image_size", ",", "bbox_point", ")", ":", "\n", "    ", "'''\n        parameters:\n            image_size(2-tuple): (height, width)\n            bbox_point(2-2-tuple): (first_point, last_point)\n        return values:\n            window left-up point, (2-tuple)\n            window right-bottom point, (2-tuple)\n    '''", "\n", "bbox_height", "=", "bbox_point", "[", "1", "]", "[", "0", "]", "-", "bbox_point", "[", "0", "]", "[", "0", "]", "\n", "bbox_width", "=", "bbox_point", "[", "1", "]", "[", "1", "]", "-", "bbox_point", "[", "0", "]", "[", "1", "]", "\n", "\n", "window_size", "=", "min", "(", "\n", "max", "(", "bbox_height", ",", "bbox_width", ")", "*", "2", ",", "\n", "image_size", "[", "0", "]", ",", "image_size", "[", "1", "]", "\n", ")", "\n", "# Limit min window size due to the requirement of VGG16", "\n", "window_size", "=", "max", "(", "window_size", ",", "32", ")", "\n", "\n", "horizontal_span", "=", "window_size", "-", "(", "bbox_point", "[", "1", "]", "[", "1", "]", "-", "bbox_point", "[", "0", "]", "[", "1", "]", ")", "\n", "vertical_span", "=", "window_size", "-", "(", "bbox_point", "[", "1", "]", "[", "0", "]", "-", "bbox_point", "[", "0", "]", "[", "0", "]", ")", "\n", "\n", "top_bound", ",", "bottom_bound", "=", "bbox_point", "[", "0", "]", "[", "0", "]", "-", "vertical_span", "//", "2", ",", "bbox_point", "[", "1", "]", "[", "0", "]", "+", "vertical_span", "//", "2", "\n", "left_bound", ",", "right_bound", "=", "bbox_point", "[", "0", "]", "[", "1", "]", "-", "horizontal_span", "//", "2", ",", "bbox_point", "[", "1", "]", "[", "1", "]", "+", "horizontal_span", "//", "2", "\n", "\n", "if", "left_bound", "<", "0", ":", "\n", "        ", "right_bound", "+=", "0", "-", "left_bound", "\n", "left_bound", "+=", "0", "-", "left_bound", "\n", "", "elif", "right_bound", ">", "image_size", "[", "1", "]", ":", "\n", "        ", "left_bound", "-=", "right_bound", "-", "image_size", "[", "1", "]", "\n", "right_bound", "-=", "right_bound", "-", "image_size", "[", "1", "]", "\n", "\n", "", "if", "top_bound", "<", "0", ":", "\n", "        ", "bottom_bound", "+=", "0", "-", "top_bound", "\n", "top_bound", "+=", "0", "-", "top_bound", "\n", "", "elif", "bottom_bound", ">", "image_size", "[", "0", "]", ":", "\n", "        ", "top_bound", "-=", "bottom_bound", "-", "image_size", "[", "0", "]", "\n", "bottom_bound", "-=", "bottom_bound", "-", "image_size", "[", "0", "]", "\n", "\n", "", "return", "(", "top_bound", ",", "left_bound", ")", ",", "(", "bottom_bound", ",", "right_bound", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.drawrect": [[216, 233], ["drawcontext.line", "drawcontext.line", "drawcontext.line", "drawcontext.line", "drawcontext.line", "drawcontext.line", "drawcontext.line", "drawcontext.line", "drawcontext.line"], "function", ["None"], ["", "def", "drawrect", "(", "drawcontext", ",", "xy", ",", "outline", "=", "None", ",", "width", "=", "0", ",", "partial", "=", "None", ")", ":", "\n", "    ", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "xy", "\n", "if", "partial", "is", "None", ":", "\n", "        ", "points", "=", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "x1", ",", "y2", ")", ",", "(", "x1", ",", "y1", ")", "\n", "drawcontext", ".", "line", "(", "points", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "", "else", ":", "\n", "        ", "drawcontext", ".", "line", "(", "[", "(", "x1", ",", "y1", ")", ",", "(", "x1", ",", "y1", "+", "partial", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "drawcontext", ".", "line", "(", "[", "(", "x1", "+", "partial", ",", "y1", ")", ",", "(", "x1", ",", "y1", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "\n", "drawcontext", ".", "line", "(", "[", "(", "x2", ",", "y1", ")", ",", "(", "x2", ",", "y1", "+", "partial", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "drawcontext", ".", "line", "(", "[", "(", "x2", ",", "y1", ")", ",", "(", "x2", "-", "partial", ",", "y1", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "\n", "drawcontext", ".", "line", "(", "[", "(", "x1", ",", "y2", ")", ",", "(", "x1", "+", "partial", ",", "y2", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "drawcontext", ".", "line", "(", "[", "(", "x1", ",", "y2", ")", ",", "(", "x1", ",", "y2", "-", "partial", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "\n", "drawcontext", ".", "line", "(", "[", "(", "x2", "-", "partial", ",", "y2", ")", ",", "(", "x2", ",", "y2", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "drawcontext", ".", "line", "(", "[", "(", "x2", ",", "y2", ")", ",", "(", "x2", ",", "y2", "-", "partial", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under": [[235, 245], ["sorted", "glob.glob", "os.path.join", "os.path.isdir", "os.path.isfile"], "function", ["None"], ["", "", "def", "get_everything_under", "(", "root_dir", ",", "pattern", "=", "'*'", ",", "only_dirs", "=", "False", ",", "only_files", "=", "False", ")", ":", "\n", "    ", "assert", "not", "(", "only_dirs", "and", "only_files", ")", ",", "'You will get nothnig '", "'when \"only_dirs\" and \"only_files\" are both set to True'", "\n", "everything", "=", "sorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "root_dir", ",", "pattern", ")", ")", ")", "\n", "if", "only_dirs", ":", "\n", "        ", "everything", "=", "[", "f", "for", "f", "in", "everything", "if", "os", ".", "path", ".", "isdir", "(", "f", ")", "]", "\n", "", "if", "only_files", ":", "\n", "        ", "everything", "=", "[", "f", "for", "f", "in", "everything", "if", "os", ".", "path", ".", "isfile", "(", "f", ")", "]", "\n", "\n", "", "return", "everything", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_filenames_from_dir": [[247, 260], ["utils.logging_config.logger.debug", "os.walk", "len", "len", "os.path.join", "utils.logging_config.logger.debug", "sorted"], "function", ["None"], ["", "def", "read_filenames_from_dir", "(", "dir_name", ",", "reader", ",", "max_length", "=", "None", ")", ":", "\n", "    ", "logger", ".", "debug", "(", "\n", "f\"{reader} reading files from {dir_name}\"", ")", "\n", "filenames", "=", "[", "]", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "dir_name", ")", ":", "\n", "        ", "assert", "len", "(", "dirs", ")", "==", "0", ",", "f\"There are direcories: {dirs} in {root}\"", "\n", "assert", "len", "(", "files", ")", "!=", "0", ",", "f\"There are no files in {root}\"", "\n", "filenames", "=", "[", "os", ".", "path", ".", "join", "(", "root", ",", "name", ")", "for", "name", "in", "sorted", "(", "files", ")", "]", "\n", "for", "name", "in", "filenames", ":", "\n", "            ", "logger", ".", "debug", "(", "name", ")", "\n", "", "if", "max_length", "is", "not", "None", ":", "\n", "            ", "return", "filenames", "[", ":", "max_length", "]", "\n", "", "return", "filenames", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.edge.get_edge": [[15, 20], ["torch.no_grad", "canny_edge_net"], "function", ["None"], ["def", "get_edge", "(", "tensor", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "blurred_img", ",", "grad_mag", ",", "grad_orientation", ",", "thin_edges", ",", "thresholded", ",", "early_threshold", "=", "canny_edge_net", "(", "tensor", ")", "\n", "", "return", "thresholded", "\n", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.CoarseNet.__init__": [[14, 21], ["torch.Module.__init__", "model.modules.DownSampleModule", "model.modules.UpSampleModule"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nc_in", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ",", "use_skip_connection", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_type", "=", "conv_type", "\n", "self", ".", "downsample_module", "=", "DownSampleModule", "(", "\n", "nc_in", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ")", "\n", "self", ".", "upsample_module", "=", "UpSampleModule", "(", "\n", "nf", "*", "4", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ",", "use_skip_connection", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.CoarseNet.preprocess": [[22, 38], ["masked_imgs.transpose.transpose.transpose", "masks.transpose.transpose.transpose", "NotImplementedError", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "NotImplementedError", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "guidances.transpose"], "methods", ["None"], ["", "def", "preprocess", "(", "self", ",", "masked_imgs", ",", "masks", ",", "guidances", ")", ":", "\n", "# B, L, C, H, W = masked.shape", "\n", "        ", "masked_imgs", "=", "masked_imgs", ".", "transpose", "(", "1", ",", "2", ")", "\n", "masks", "=", "masks", ".", "transpose", "(", "1", ",", "2", ")", "\n", "if", "self", ".", "conv_type", "==", "'partial'", ":", "\n", "            ", "if", "guidances", "is", "not", "None", ":", "\n", "                ", "raise", "NotImplementedError", "(", "'Partial convolution does not support guidance'", ")", "\n", "# the input and output of partial convolution are both tuple (imgs, mask)", "\n", "", "inp", "=", "(", "masked_imgs", ",", "masks", ")", "\n", "", "elif", "self", ".", "conv_type", "==", "'gated'", "or", "self", ".", "conv_type", "==", "'vanilla'", ":", "\n", "            ", "guidances", "=", "torch", ".", "full_like", "(", "masks", ",", "0.", ")", "if", "guidances", "is", "None", "else", "guidances", ".", "transpose", "(", "1", ",", "2", ")", "\n", "inp", "=", "torch", ".", "cat", "(", "[", "masked_imgs", ",", "masks", ",", "guidances", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"{self.conv_type} not implemented\"", ")", "\n", "\n", "", "return", "inp", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.CoarseNet.postprocess": [[39, 47], ["c11[].transpose", "c11.transpose"], "methods", ["None"], ["", "def", "postprocess", "(", "self", ",", "masked_imgs", ",", "masks", ",", "c11", ")", ":", "\n", "        ", "if", "self", ".", "conv_type", "==", "'partial'", ":", "\n", "            ", "inpainted", "=", "c11", "[", "0", "]", ".", "transpose", "(", "1", ",", "2", ")", "*", "(", "1", "-", "masks", ")", "\n", "", "else", ":", "\n", "            ", "inpainted", "=", "c11", ".", "transpose", "(", "1", ",", "2", ")", "*", "(", "1", "-", "masks", ")", "\n", "\n", "", "out", "=", "inpainted", "+", "masked_imgs", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.CoarseNet.forward": [[48, 59], ["networks.CoarseNet.preprocess", "networks.CoarseNet.downsample_module", "networks.CoarseNet.upsample_module", "networks.CoarseNet.postprocess"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.CoarseNet.preprocess", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.CoarseNet.postprocess"], ["", "def", "forward", "(", "self", ",", "masked_imgs", ",", "masks", ",", "guidances", "=", "None", ")", ":", "\n", "# B, L, C, H, W = masked.shape", "\n", "        ", "inp", "=", "self", ".", "preprocess", "(", "masked_imgs", ",", "masks", ",", "guidances", ")", "\n", "\n", "encoded_features", "=", "self", ".", "downsample_module", "(", "inp", ")", "\n", "\n", "c11", "=", "self", ".", "upsample_module", "(", "encoded_features", ")", "\n", "\n", "out", "=", "self", ".", "postprocess", "(", "masked_imgs", ",", "masks", ",", "c11", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.RefineNet.__init__": [[62, 68], ["networks.CoarseNet.__init__", "model.modules.UpSampleModule", "model.modules.AttentionDownSampleModule"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nc_in", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ",", "use_skip_connection", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nc_in", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ",", "use_skip_connection", ")", "\n", "self", ".", "upsample_module", "=", "UpSampleModule", "(", "\n", "nf", "*", "16", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ",", "use_skip_connection", ")", "\n", "self", ".", "attention_downsample_module", "=", "AttentionDownSampleModule", "(", "\n", "nc_in", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.RefineNet.forward": [[69, 82], ["networks.RefineNet.preprocess", "networks.RefineNet.downsample_module", "networks.RefineNet.attention_downsample_module", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.RefineNet.upsample_module", "networks.RefineNet.postprocess"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.CoarseNet.preprocess", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.CoarseNet.postprocess"], ["", "def", "forward", "(", "self", ",", "coarse_output", ",", "masks", ",", "guidances", "=", "None", ")", ":", "\n", "        ", "inp", "=", "self", ".", "preprocess", "(", "coarse_output", ",", "masks", ",", "guidances", ")", "\n", "\n", "encoded_features", "=", "self", ".", "downsample_module", "(", "inp", ")", "\n", "\n", "attention_features", ",", "offset_flow", "=", "self", ".", "attention_downsample_module", "(", "inp", ")", "\n", "\n", "deconv_inp", "=", "torch", ".", "cat", "(", "[", "encoded_features", ",", "attention_features", "]", ",", "dim", "=", "2", ")", "\n", "\n", "c11", "=", "self", ".", "upsample_module", "(", "deconv_inp", ")", "\n", "\n", "out", "=", "self", ".", "postprocess", "(", "coarse_output", ",", "masks", ",", "c11", ")", "\n", "return", "out", ",", "offset_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.Generator.__init__": [[85, 97], ["torch.Module.__init__", "networks.CoarseNet", "networks.RefineNet"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "nc_in", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ",", "use_refine", "=", "False", ",", "\n", "use_skip_connection", ":", "bool", "=", "False", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "coarse_net", "=", "CoarseNet", "(", "\n", "nc_in", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ",", "use_skip_connection", "\n", ")", "\n", "self", ".", "use_refine", "=", "use_refine", "\n", "if", "self", ".", "use_refine", ":", "\n", "            ", "self", ".", "refine_net", "=", "RefineNet", "(", "\n", "nc_in", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ",", "use_skip_connection", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.Generator.forward": [[99, 110], ["networks.Generator.coarse_net", "networks.Generator.refine_net"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "masked_imgs", ",", "masks", ",", "guidances", "=", "None", ")", ":", "\n", "        ", "coarse_outputs", "=", "self", ".", "coarse_net", "(", "masked_imgs", ",", "masks", ",", "guidances", ")", "\n", "if", "self", ".", "use_refine", ":", "\n", "            ", "refined_outputs", ",", "offset_flows", "=", "self", ".", "refine_net", "(", "coarse_outputs", ",", "masks", ",", "guidances", ")", "\n", "return", "{", "\n", "\"outputs\"", ":", "refined_outputs", ",", "\n", "\"offset_flows\"", ":", "offset_flows", ",", "\n", "\"coarse_outputs\"", ":", "coarse_outputs", "\n", "}", "\n", "", "else", ":", "\n", "            ", "return", "{", "\"outputs\"", ":", "coarse_outputs", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.SNTemporalPatchGANDiscriminator.__init__": [[117, 154], ["model.modules.BaseModule.__init__", "networks.SNTemporalPatchGANDiscriminator.ConvBlock", "networks.SNTemporalPatchGANDiscriminator.ConvBlock", "networks.SNTemporalPatchGANDiscriminator.ConvBlock", "networks.SNTemporalPatchGANDiscriminator.ConvBlock", "networks.SNTemporalPatchGANDiscriminator.ConvBlock", "networks.SNTemporalPatchGANDiscriminator.ConvBlock", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "nc_in", ",", "nf", "=", "64", ",", "norm", "=", "'SN'", ",", "use_sigmoid", "=", "True", ",", "use_bias", "=", "True", ",", "conv_type", "=", "'vanilla'", ",", "\n", "conv_by", "=", "'3d'", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "conv_type", ")", "\n", "use_bias", "=", "use_bias", "\n", "self", ".", "use_sigmoid", "=", "use_sigmoid", "\n", "\n", "######################", "\n", "# Convolution layers #", "\n", "######################", "\n", "self", ".", "conv1", "=", "self", ".", "ConvBlock", "(", "\n", "nc_in", ",", "nf", "*", "1", ",", "kernel_size", "=", "(", "3", ",", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", "\n", ")", "\n", "self", ".", "conv2", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "1", ",", "nf", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "1", ",", "2", ",", "2", ")", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", "\n", ")", "\n", "self", ".", "conv3", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "2", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "1", ",", "2", ",", "2", ")", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", "\n", ")", "\n", "self", ".", "conv4", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "1", ",", "2", ",", "2", ")", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", "\n", ")", "\n", "self", ".", "conv5", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "1", ",", "2", ",", "2", ")", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", "\n", ")", "\n", "self", ".", "conv6", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "5", ",", "5", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "1", ",", "2", ",", "2", ")", ",", "bias", "=", "use_bias", ",", "norm", "=", "None", ",", "activation", "=", "None", ",", "\n", "conv_by", "=", "conv_by", "\n", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.SNTemporalPatchGANDiscriminator.forward": [[155, 168], ["torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "networks.SNTemporalPatchGANDiscriminator.conv1", "networks.SNTemporalPatchGANDiscriminator.conv2", "networks.SNTemporalPatchGANDiscriminator.conv3", "networks.SNTemporalPatchGANDiscriminator.conv4", "networks.SNTemporalPatchGANDiscriminator.conv5", "networks.SNTemporalPatchGANDiscriminator.conv6", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xs", ")", ":", "\n", "# B, L, C, H, W = xs.shape", "\n", "        ", "xs_t", "=", "torch", ".", "transpose", "(", "xs", ",", "1", ",", "2", ")", "\n", "c1", "=", "self", ".", "conv1", "(", "xs_t", ")", "\n", "c2", "=", "self", ".", "conv2", "(", "c1", ")", "\n", "c3", "=", "self", ".", "conv3", "(", "c2", ")", "\n", "c4", "=", "self", ".", "conv4", "(", "c3", ")", "\n", "c5", "=", "self", ".", "conv5", "(", "c4", ")", "\n", "c6", "=", "self", ".", "conv6", "(", "c5", ")", "\n", "if", "self", ".", "use_sigmoid", ":", "\n", "            ", "c6", "=", "torch", ".", "sigmoid", "(", "c6", ")", "\n", "", "out", "=", "torch", ".", "transpose", "(", "c6", ",", "1", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.TemporalPatchGANDiscriminator.__init__": [[172, 213], ["torch.Module.__init__", "range", "min", "torch.Sequential", "torch.Sequential", "type", "torch.Conv3d", "torch.Conv3d", "torch.LeakyReLU", "torch.LeakyReLU", "min", "torch.Conv3d", "torch.Conv3d", "norm_layer", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "norm_layer", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ",", "output_nc", ",", "ndf", "=", "64", ",", "n_layers", "=", "3", ",", "norm_layer", "=", "nn", ".", "BatchNorm3d", ",", "use_sigmoid", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "type", "(", "norm_layer", ")", "==", "functools", ".", "partial", ":", "\n", "            ", "use_bias", "=", "norm_layer", ".", "func", "==", "nn", ".", "InstanceNorm3d", "\n", "", "else", ":", "\n", "            ", "use_bias", "=", "norm_layer", "==", "nn", ".", "InstanceNorm3d", "\n", "\n", "", "kw", "=", "(", "3", ",", "4", ",", "4", ")", "\n", "padw", "=", "(", "1", ",", "1", ",", "1", ")", "\n", "sequence", "=", "[", "\n", "nn", ".", "Conv3d", "(", "input_nc", ",", "ndf", ",", "kernel_size", "=", "kw", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "padw", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "]", "\n", "\n", "nf_mult", "=", "1", "\n", "nf_mult_prev", "=", "1", "\n", "for", "n", "in", "range", "(", "1", ",", "n_layers", ")", ":", "\n", "            ", "nf_mult_prev", "=", "nf_mult", "\n", "nf_mult", "=", "min", "(", "2", "**", "n", ",", "8", ")", "\n", "sequence", "+=", "[", "\n", "nn", ".", "Conv3d", "(", "ndf", "*", "nf_mult_prev", ",", "ndf", "*", "nf_mult", ",", "\n", "kernel_size", "=", "kw", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "padw", ",", "bias", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ndf", "*", "nf_mult", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "]", "\n", "\n", "", "nf_mult_prev", "=", "nf_mult", "\n", "nf_mult", "=", "min", "(", "2", "**", "n_layers", ",", "8", ")", "\n", "sequence", "+=", "[", "\n", "nn", ".", "Conv3d", "(", "ndf", "*", "nf_mult_prev", ",", "ndf", "*", "nf_mult", ",", "\n", "kernel_size", "=", "kw", ",", "stride", "=", "1", ",", "padding", "=", "padw", ",", "bias", "=", "use_bias", ")", ",", "\n", "norm_layer", "(", "ndf", "*", "nf_mult", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "]", "\n", "\n", "sequence", "+=", "[", "nn", ".", "Conv3d", "(", "ndf", "*", "nf_mult", ",", "output_nc", ",", "kernel_size", "=", "kw", ",", "stride", "=", "1", ",", "padding", "=", "padw", ")", "]", "\n", "\n", "if", "use_sigmoid", ":", "\n", "            ", "sequence", "+=", "[", "nn", ".", "Sigmoid", "(", ")", "]", "\n", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "sequence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.TemporalPatchGANDiscriminator.forward": [[214, 216], ["networks.TemporalPatchGANDiscriminator.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "input", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.vgg.Vgg16.__init__": [[9, 27], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "torchvision.models.vgg16", "vgg.Vgg16.slice1.add_module", "vgg.Vgg16.slice2.add_module", "vgg.Vgg16.slice3.add_module", "vgg.Vgg16.slice4.add_module", "vgg.Vgg16.parameters", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ")", ":", "\n", "        ", "super", "(", "Vgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_pretrained_features", "=", "models", ".", "vgg16", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "for", "x", "in", "range", "(", "4", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "4", ",", "9", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "9", ",", "16", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "16", ",", "23", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.vgg.Vgg16.forward": [[28, 40], ["vgg.Vgg16.slice1", "vgg.Vgg16.slice2", "vgg.Vgg16.slice3", "vgg.Vgg16.slice4", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1_2", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2_2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3_3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4_3", "=", "h", "\n", "vgg_outputs", "=", "namedtuple", "(", "\"VggOutputs\"", ",", "[", "'relu1_2'", ",", "'relu2_2'", ",", "'relu3_3'", ",", "'relu4_3'", "]", ")", "\n", "out", "=", "vgg_outputs", "(", "h_relu1_2", ",", "h_relu2_2", ",", "h_relu3_3", ",", "h_relu4_3", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.completion_model.VideoCN.__init__": [[9, 35], ["torch.Module.__init__", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "model.blocks.Conv3dBlock", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "df", "=", "16", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "conv_kargs", "=", "{", "'norm'", ":", "'BN'", ",", "'activation'", ":", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "}", "\n", "conv_kargs_with_pad", "=", "{", "\n", "'norm'", ":", "'BN'", ",", "'activation'", ":", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "'padding'", ":", "-", "1", "}", "\n", "\n", "self", ".", "conv1", "=", "Conv3dBlock", "(", "4", ",", "df", ",", "5", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv2", "=", "Conv3dBlock", "(", "df", ",", "df", "*", "2", ",", "3", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv3", "=", "Conv3dBlock", "(", "df", "*", "2", ",", "df", "*", "4", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv4", "=", "Conv3dBlock", "(", "df", "*", "4", ",", "df", "*", "8", ",", "3", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "**", "conv_kargs_with_pad", ")", "\n", "\n", "self", ".", "conv5", "=", "Conv3dBlock", "(", "df", "*", "8", ",", "df", "*", "16", ",", "3", ",", "dilation", "=", "(", "1", ",", "2", ",", "2", ")", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv6", "=", "Conv3dBlock", "(", "df", "*", "16", ",", "df", "*", "16", ",", "3", ",", "dilation", "=", "(", "1", ",", "4", ",", "4", ")", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv7", "=", "Conv3dBlock", "(", "df", "*", "16", ",", "df", "*", "16", ",", "3", ",", "dilation", "=", "(", "1", ",", "8", ",", "8", ")", ",", "**", "conv_kargs_with_pad", ")", "\n", "\n", "self", ".", "conv8", "=", "Conv3dBlock", "(", "df", "*", "16", ",", "df", "*", "8", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv9", "=", "Conv3dBlock", "(", "\n", "df", "*", "8", "*", "2", ",", "df", "*", "4", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "transpose", "=", "True", ",", "**", "conv_kargs", ")", "\n", "\n", "self", ".", "conv10", "=", "Conv3dBlock", "(", "df", "*", "4", "*", "2", ",", "df", "*", "2", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv11", "=", "Conv3dBlock", "(", "\n", "df", "*", "2", "*", "2", ",", "df", ",", "4", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "transpose", "=", "True", ",", "**", "conv_kargs", ")", "\n", "\n", "self", ".", "conv12", "=", "Conv3dBlock", "(", "df", ",", "3", ",", "3", ",", "norm", "=", "None", ",", "activation", "=", "None", ",", "padding", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.completion_model.VideoCN._cut_to_align": [[36, 52], ["range", "output_x.narrow.narrow.narrow"], "methods", ["None"], ["", "def", "_cut_to_align", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n            Cut the boarder by 1 frame(temporal)/row(height)/col(width)\n            such that dimensions of x and y could be the same.\n        \"\"\"", "\n", "output_x", "=", "x", "\n", "# dimension: [batch, channel, temporal, width, height]", "\n", "# target 2, 3, 4  ->             ^^^     ^^^    ^^^", "\n", "for", "i", "in", "range", "(", "2", ",", "5", ")", ":", "\n", "            ", "dim_x", "=", "x", ".", "shape", "[", "i", "]", "\n", "dim_y", "=", "y", ".", "shape", "[", "i", "]", "\n", "if", "dim_x", "!=", "dim_y", ":", "\n", "                ", "assert", "dim_x", "==", "dim_y", "+", "1", ",", "(", "'Only deal with the odd width inverse case of deconv. '", ",", "\n", "f'Got dim_x: {dim_x}, dim_y: {dim_y}'", ")", "\n", "output_x", "=", "output_x", ".", "narrow", "(", "i", ",", "0", ",", "dim_y", ")", "\n", "", "", "return", "output_x", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.completion_model.VideoCN.forward": [[53, 79], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "completion_model.VideoCN.conv9", "completion_model.VideoCN._cut_to_align", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "completion_model.VideoCN.conv10", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "completion_model.VideoCN.conv11", "completion_model.VideoCN._cut_to_align", "completion_model.VideoCN.conv12", "getattr"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.completion_model.VideoCN._cut_to_align", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.completion_model.VideoCN._cut_to_align"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# print(f'input size: {x.shape}')", "\n", "        ", "intermediate", "=", "{", "}", "\n", "# Conv 1 ~ 8", "\n", "for", "i", "in", "range", "(", "1", ",", "9", ")", ":", "\n", "            ", "x", "=", "getattr", "(", "self", ",", "f'conv{i}'", ")", "(", "x", ")", "\n", "intermediate", "[", "i", "]", "=", "x", "\n", "# print(f'intermediate[{i}] size: {x.shape}')", "\n", "\n", "", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "intermediate", "[", "4", "]", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv9", "(", "x", ")", "\n", "x", "=", "self", ".", "_cut_to_align", "(", "x", ",", "intermediate", "[", "3", "]", ")", "\n", "# print(f'intermediate[9] size: {x.shape}')", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "intermediate", "[", "3", "]", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv10", "(", "x", ")", "\n", "# print(f'intermediate[10] size: {x.shape}')", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "intermediate", "[", "2", "]", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv11", "(", "x", ")", "\n", "x", "=", "self", ".", "_cut_to_align", "(", "x", ",", "intermediate", "[", "1", "]", ")", "\n", "# print(f'intermediate[11] size: {x.shape}')", "\n", "imcomplete_video", "=", "self", ".", "conv12", "(", "x", ")", "\n", "# print(f'imcomplete_video size: {imcomplete_video.shape}')", "\n", "\n", "return", "imcomplete_video", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.completion_model.CombCN.__init__": [[82, 112], ["torch.Module.__init__", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "model.blocks.Conv2dBlock", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "df", "=", "32", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "conv_kargs_with_pad", "=", "{", "\n", "'norm'", ":", "'BN'", ",", "'activation'", ":", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "'padding'", ":", "-", "1", "}", "\n", "\n", "self", ".", "conv1", "=", "Conv2dBlock", "(", "4", ",", "df", "*", "2", ",", "5", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv2", "=", "Conv2dBlock", "(", "df", "*", "2", ",", "df", "*", "4", ",", "3", ",", "stride", "=", "2", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv3", "=", "Conv2dBlock", "(", "df", "*", "4", "+", "3", ",", "df", "*", "4", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv4", "=", "Conv2dBlock", "(", "df", "*", "4", ",", "df", "*", "8", ",", "3", ",", "stride", "=", "2", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv5", "=", "Conv2dBlock", "(", "df", "*", "8", ",", "df", "*", "8", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv6", "=", "Conv2dBlock", "(", "df", "*", "8", ",", "df", "*", "8", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "\n", "self", ".", "conv7", "=", "Conv2dBlock", "(", "df", "*", "8", ",", "df", "*", "8", ",", "3", ",", "dilation", "=", "2", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv8", "=", "Conv2dBlock", "(", "df", "*", "8", ",", "df", "*", "8", ",", "3", ",", "dilation", "=", "4", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv9", "=", "Conv2dBlock", "(", "df", "*", "8", ",", "df", "*", "8", ",", "3", ",", "dilation", "=", "8", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv10", "=", "Conv2dBlock", "(", "df", "*", "8", "*", "2", ",", "df", "*", "8", ",", "3", ",", "dilation", "=", "16", ",", "**", "conv_kargs_with_pad", ")", "\n", "\n", "self", ".", "conv11", "=", "Conv2dBlock", "(", "df", "*", "8", "*", "2", ",", "df", "*", "8", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv12", "=", "Conv2dBlock", "(", "df", "*", "8", "*", "2", ",", "df", "*", "8", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv13", "=", "Conv2dBlock", "(", "\n", "df", "*", "8", "*", "2", ",", "df", "*", "4", ",", "4", ",", "stride", "=", "2", ",", "\n", "transpose", "=", "True", ",", "**", "conv_kargs_with_pad", ")", "\n", "\n", "self", ".", "conv14", "=", "Conv2dBlock", "(", "df", "*", "4", "*", "2", ",", "df", "*", "4", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv15", "=", "Conv2dBlock", "(", "\n", "df", "*", "4", "*", "2", "+", "3", ",", "df", "*", "2", ",", "4", ",", "stride", "=", "2", ",", "\n", "transpose", "=", "True", ",", "**", "conv_kargs_with_pad", ")", "\n", "\n", "self", ".", "conv16", "=", "Conv2dBlock", "(", "df", "*", "2", "*", "2", ",", "df", ",", "3", ",", "**", "conv_kargs_with_pad", ")", "\n", "self", ".", "conv17", "=", "Conv2dBlock", "(", "df", ",", "3", ",", "3", ",", "norm", "=", "None", ",", "activation", "=", "None", ",", "padding", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.completion_model.CombCN.forward": [[113, 138], ["range", "range", "completion_model.CombCN.conv17", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "getattr", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "getattr"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "imcomplete_frame", ")", ":", "\n", "# print(f'input size: {x.shape}')", "\n", "        ", "intermediate", "=", "{", "}", "\n", "# Conv 1 ~ 9", "\n", "for", "i", "in", "range", "(", "1", ",", "10", ")", ":", "\n", "            ", "if", "i", "==", "3", ":", "\n", "                ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "imcomplete_frame", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "x", "=", "getattr", "(", "self", ",", "f'conv{i}'", ")", "(", "x", ")", "\n", "intermediate", "[", "i", "]", "=", "x", "\n", "# print(f'intermediate[{i}] size: {x.shape}')", "\n", "\n", "# Conv 10 ~ 16", "\n", "", "for", "i", "in", "range", "(", "10", ",", "17", ")", ":", "\n", "            ", "if", "i", "==", "15", ":", "\n", "                ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "imcomplete_frame", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "j", "=", "17", "-", "i", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "intermediate", "[", "j", "]", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "getattr", "(", "self", ",", "f'conv{i}'", ")", "(", "x", ")", "\n", "# print(f'intermediate[{i}] size: {x.shape}')", "\n", "\n", "", "completed_frame", "=", "self", ".", "conv17", "(", "x", ")", "\n", "# print(f'completed_frame size: {completed_frame.shape}')", "\n", "return", "completed_frame", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.completion_model.CompletionNet.__init__": [[141, 146], ["base.BaseModel.__init__", "completion_model.VideoCN", "completion_model.CombCN"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "videoCN", "=", "VideoCN", "(", ")", "\n", "self", ".", "combCN", "=", "CombCN", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.completion_model.CompletionNet.forward": [[147, 183], ["masked_imgs.transpose", "masks.transpose.transpose.transpose", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "completion_model.CompletionNet.videoCN", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "output.transpose.transpose.transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "completion_model.CompletionNet.combCN", "output.transpose.transpose.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "masks", ",", "guidances", "=", "None", ")", ":", "\n", "        ", "masked_imgs", "=", "imgs", "*", "masks", "\n", "\n", "# B, L, C, H, W -> B, C, L, H, W", "\n", "masked_video", "=", "masked_imgs", ".", "transpose", "(", "1", ",", "2", ")", "\n", "masks", "=", "masks", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "d_masks", "=", "nn", ".", "functional", ".", "interpolate", "(", "masks", ",", "scale_factor", "=", "[", "1", ",", "0.5", ",", "0.5", "]", ")", "\n", "d_masked_video", "=", "nn", ".", "functional", ".", "interpolate", "(", "masked_video", ",", "scale_factor", "=", "[", "1", ",", "0.5", ",", "0.5", "]", ")", "\n", "\n", "d_input", "=", "torch", ".", "cat", "(", "[", "d_masked_video", ",", "d_masks", "]", ",", "dim", "=", "1", ")", "\n", "\n", "imcomplete_video", "=", "self", ".", "videoCN", "(", "d_input", ")", "\n", "imcomplete_video", "=", "imcomplete_video", "*", "(", "1", "-", "d_masks", ")", "+", "d_masked_video", "*", "d_masks", "\n", "\n", "output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "imcomplete_video", ".", "shape", "[", "2", "]", ")", ":", "\n", "            ", "masked_frame", "=", "masked_video", "[", ":", ",", ":", ",", "i", "]", "\n", "mask", "=", "masks", "[", ":", ",", ":", ",", "i", "]", "\n", "imcomplete_frame", "=", "imcomplete_video", "[", ":", ",", ":", ",", "i", "]", "\n", "\n", "comb_input", "=", "torch", ".", "cat", "(", "[", "masked_frame", ",", "mask", "]", ",", "dim", "=", "1", ")", "\n", "completed_frame", "=", "self", ".", "combCN", "(", "comb_input", ",", "imcomplete_frame", ")", "\n", "output", ".", "append", "(", "completed_frame", ")", "\n", "", "output", "=", "torch", ".", "stack", "(", "output", ",", "dim", "=", "2", ")", "\n", "\n", "output", "=", "(", "1", "-", "masks", ")", "*", "output", "+", "masks", "*", "masked_video", "\n", "output", "=", "output", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "model_output", "=", "{", "\n", "\"outputs\"", ":", "output", ",", "\n", "\"imcomplete_video\"", ":", "imcomplete_video", "\n", "}", "\n", "\n", "# print(f'Final output size: {output.shape}')", "\n", "return", "model_output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.modules.BaseModule.__init__": [[16, 28], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_type", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_type", "=", "conv_type", "\n", "if", "conv_type", "==", "'gated'", ":", "\n", "            ", "self", ".", "ConvBlock", "=", "GatedConv", "\n", "self", ".", "DeconvBlock", "=", "GatedDeconv", "\n", "", "elif", "conv_type", "==", "'partial'", ":", "\n", "            ", "self", ".", "ConvBlock", "=", "PartialConv", "\n", "self", ".", "DeconvBlock", "=", "PartialDeconv", "\n", "", "elif", "conv_type", "==", "'vanilla'", ":", "\n", "            ", "self", ".", "ConvBlock", "=", "VanillaConv", "\n", "self", ".", "DeconvBlock", "=", "VanillaDeconv", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.modules.DownSampleModule.__init__": [[31, 74], ["modules.BaseModule.__init__", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock", "modules.DownSampleModule.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nc_in", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "conv_type", ")", "\n", "self", ".", "conv1", "=", "self", ".", "ConvBlock", "(", "\n", "nc_in", ",", "nf", "*", "1", ",", "kernel_size", "=", "(", "3", ",", "5", ",", "5", ")", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "\n", "# Downsample 1", "\n", "self", ".", "conv2", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "1", ",", "nf", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "4", ",", "4", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "(", "1", ",", "2", ",", "2", ")", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "conv3", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "2", ",", "nf", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "# Downsample 2", "\n", "self", ".", "conv4", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "2", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "4", ",", "4", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "conv5", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "conv6", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "\n", "# Dilated Convolutions", "\n", "self", ".", "dilated_conv1", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "-", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ",", "dilation", "=", "(", "1", ",", "2", ",", "2", ")", ")", "\n", "self", ".", "dilated_conv2", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "-", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ",", "dilation", "=", "(", "1", ",", "4", ",", "4", ")", ")", "\n", "self", ".", "dilated_conv3", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "-", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ",", "dilation", "=", "(", "1", ",", "8", ",", "8", ")", ")", "\n", "self", ".", "dilated_conv4", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "-", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ",", "dilation", "=", "(", "1", ",", "16", ",", "16", ")", ")", "\n", "self", ".", "conv7", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "\n", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "conv8", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "4", ",", "nf", "*", "4", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "\n", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.modules.DownSampleModule.forward": [[75, 91], ["modules.DownSampleModule.conv1", "modules.DownSampleModule.conv2", "modules.DownSampleModule.conv3", "modules.DownSampleModule.conv4", "modules.DownSampleModule.conv5", "modules.DownSampleModule.conv6", "modules.DownSampleModule.dilated_conv1", "modules.DownSampleModule.dilated_conv2", "modules.DownSampleModule.dilated_conv3", "modules.DownSampleModule.dilated_conv4", "modules.DownSampleModule.conv7", "modules.DownSampleModule.conv8"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "c1", "=", "self", ".", "conv1", "(", "inp", ")", "\n", "c2", "=", "self", ".", "conv2", "(", "c1", ")", "\n", "c3", "=", "self", ".", "conv3", "(", "c2", ")", "\n", "c4", "=", "self", ".", "conv4", "(", "c3", ")", "\n", "c5", "=", "self", ".", "conv5", "(", "c4", ")", "\n", "c6", "=", "self", ".", "conv6", "(", "c5", ")", "\n", "\n", "a1", "=", "self", ".", "dilated_conv1", "(", "c6", ")", "\n", "a2", "=", "self", ".", "dilated_conv2", "(", "a1", ")", "\n", "a3", "=", "self", ".", "dilated_conv3", "(", "a2", ")", "\n", "a4", "=", "self", ".", "dilated_conv4", "(", "a3", ")", "\n", "\n", "c7", "=", "self", ".", "conv7", "(", "a4", ")", "\n", "c8", "=", "self", ".", "conv8", "(", "c7", ")", "\n", "return", "c8", ",", "c4", ",", "c2", "# For skip connection", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.modules.AttentionDownSampleModule.__init__": [[94, 96], ["modules.DownSampleModule.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nc_in", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nc_in", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.modules.UpSampleModule.__init__": [[99, 122], ["modules.BaseModule.__init__", "modules.UpSampleModule.DeconvBlock", "modules.UpSampleModule.ConvBlock", "modules.UpSampleModule.DeconvBlock", "modules.UpSampleModule.ConvBlock", "modules.UpSampleModule.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nc_in", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "conv_by", ",", "conv_type", ",", "\n", "use_skip_connection", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "conv_type", ")", "\n", "# Upsample 1", "\n", "self", ".", "deconv1", "=", "self", ".", "DeconvBlock", "(", "\n", "nc_in", "*", "2", "if", "use_skip_connection", "else", "nc_in", ",", "\n", "nf", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "conv9", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "2", ",", "nf", "*", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "\n", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "# Upsample 2", "\n", "self", ".", "deconv2", "=", "self", ".", "DeconvBlock", "(", "\n", "nf", "*", "4", "if", "use_skip_connection", "else", "nf", "*", "2", ",", "\n", "nf", "*", "1", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "conv10", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "*", "1", ",", "nf", "//", "2", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "\n", "bias", "=", "use_bias", ",", "norm", "=", "norm", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "conv11", "=", "self", ".", "ConvBlock", "(", "\n", "nf", "//", "2", ",", "nc_out", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "1", ",", "bias", "=", "use_bias", ",", "norm", "=", "None", ",", "activation", "=", "None", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "use_skip_connection", "=", "use_skip_connection", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.modules.UpSampleModule.concat_feature": [[123, 132], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "concat_feature", "(", "self", ",", "ca", ",", "cb", ")", ":", "\n", "        ", "if", "self", ".", "conv_type", "==", "'partial'", ":", "\n", "            ", "ca_feature", ",", "ca_mask", "=", "ca", "\n", "cb_feature", ",", "cb_mask", "=", "cb", "\n", "feature_cat", "=", "torch", ".", "cat", "(", "(", "ca_feature", ",", "cb_feature", ")", ",", "1", ")", "\n", "# leave only the later mask", "\n", "return", "feature_cat", ",", "ca_mask", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "cat", "(", "(", "ca", ",", "cb", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.modules.UpSampleModule.forward": [[133, 147], ["modules.UpSampleModule.conv10", "modules.UpSampleModule.conv11", "modules.UpSampleModule.deconv1", "modules.UpSampleModule.conv9", "modules.UpSampleModule.deconv2", "modules.UpSampleModule.deconv1", "modules.UpSampleModule.conv9", "modules.UpSampleModule.deconv2", "modules.UpSampleModule.concat_feature", "modules.UpSampleModule.concat_feature"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.modules.UpSampleModule.concat_feature", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.modules.UpSampleModule.concat_feature"], ["", "", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "c8", ",", "c4", ",", "c2", "=", "inp", "\n", "if", "self", ".", "use_skip_connection", ":", "\n", "            ", "d1", "=", "self", ".", "deconv1", "(", "self", ".", "concat_feature", "(", "c8", ",", "c4", ")", ")", "\n", "c9", "=", "self", ".", "conv9", "(", "d1", ")", "\n", "d2", "=", "self", ".", "deconv2", "(", "self", ".", "concat_feature", "(", "c9", ",", "c2", ")", ")", "\n", "", "else", ":", "\n", "            ", "d1", "=", "self", ".", "deconv1", "(", "c8", ")", "\n", "c9", "=", "self", ".", "conv9", "(", "d1", ")", "\n", "d2", "=", "self", ".", "deconv2", "(", "c9", ")", "\n", "\n", "", "c10", "=", "self", ".", "conv10", "(", "d2", ")", "\n", "c11", "=", "self", ".", "conv11", "(", "c10", ")", "\n", "return", "c11", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.video_inpainting_model.VideoInpaintingModel.__init__": [[12, 64], ["base.BaseModel.__init__", "d_t_args.items", "d_s_args.items", "opts.get", "model.networks.Generator", "model.networks.SNTemporalPatchGANDiscriminator", "model.networks.SNTemporalPatchGANDiscriminator"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opts", ",", "nc_in", "=", "5", ",", "nc_out", "=", "3", ",", "d_s_args", "=", "{", "}", ",", "d_t_args", "=", "{", "}", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "d_t_args", "=", "{", "\n", "\"nf\"", ":", "32", ",", "\n", "\"use_sigmoid\"", ":", "True", ",", "\n", "\"norm\"", ":", "'SN'", "\n", "}", "# default values", "\n", "for", "key", ",", "value", "in", "d_t_args", ".", "items", "(", ")", ":", "\n", "# overwrite default values if provided", "\n", "            ", "self", ".", "d_t_args", "[", "key", "]", "=", "value", "\n", "\n", "", "self", ".", "d_s_args", "=", "{", "\n", "\"nf\"", ":", "32", ",", "\n", "\"use_sigmoid\"", ":", "True", ",", "\n", "\"norm\"", ":", "'SN'", "\n", "}", "# default values", "\n", "for", "key", ",", "value", "in", "d_s_args", ".", "items", "(", ")", ":", "\n", "# overwrite default values if provided", "\n", "            ", "self", ".", "d_s_args", "[", "key", "]", "=", "value", "\n", "\n", "", "nf", "=", "opts", "[", "'nf'", "]", "\n", "norm", "=", "opts", "[", "'norm'", "]", "\n", "use_bias", "=", "opts", "[", "'bias'", "]", "\n", "\n", "# warning: if 2d convolution is used in generator, settings (e.g. stride,", "\n", "# kernal_size, padding) on the temporal axis will be discarded", "\n", "self", ".", "conv_by", "=", "opts", "[", "'conv_by'", "]", "if", "'conv_by'", "in", "opts", "else", "'3d'", "\n", "self", ".", "conv_type", "=", "opts", "[", "'conv_type'", "]", "if", "'conv_type'", "in", "opts", "else", "'gated'", "\n", "\n", "self", ".", "use_refine", "=", "opts", "[", "'use_refine'", "]", "if", "'use_refine'", "in", "opts", "else", "False", "\n", "use_skip_connection", "=", "opts", ".", "get", "(", "'use_skip_connection'", ",", "False", ")", "\n", "\n", "self", ".", "opts", "=", "opts", "\n", "\n", "######################", "\n", "# Convolution layers #", "\n", "######################", "\n", "self", ".", "generator", "=", "Generator", "(", "\n", "nc_in", ",", "nc_out", ",", "nf", ",", "use_bias", ",", "norm", ",", "self", ".", "conv_by", ",", "self", ".", "conv_type", ",", "\n", "use_refine", "=", "self", ".", "use_refine", ",", "use_skip_connection", "=", "use_skip_connection", ")", "\n", "\n", "#################", "\n", "# Discriminator #", "\n", "#################", "\n", "\n", "if", "'spatial_discriminator'", "not", "in", "opts", "or", "opts", "[", "'spatial_discriminator'", "]", ":", "\n", "            ", "self", ".", "spatial_discriminator", "=", "SNTemporalPatchGANDiscriminator", "(", "\n", "nc_in", "=", "5", ",", "conv_type", "=", "'2d'", ",", "**", "self", ".", "d_s_args", "\n", ")", "\n", "", "if", "'temporal_discriminator'", "not", "in", "opts", "or", "opts", "[", "'temporal_discriminator'", "]", ":", "\n", "            ", "self", ".", "temporal_discriminator", "=", "SNTemporalPatchGANDiscriminator", "(", "\n", "nc_in", "=", "5", ",", "**", "self", ".", "d_t_args", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.video_inpainting_model.VideoInpaintingModel.forward": [[66, 90], ["video_inpainting_model.VideoInpaintingModel.generator", "torch.cat", "video_inpainting_model.VideoInpaintingModel.temporal_discriminator", "torch.full_like", "torch.cat", "list", "input_imgs.view.view.view", "video_inpainting_model.VideoInpaintingModel.spatial_discriminator", "output.view.view.view", "ValueError", "torch.full_like"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "imgs", ",", "masks", ",", "guidances", "=", "None", ",", "model", "=", "'G'", ")", ":", "\n", "# imgs: [B, L, C=3, H, W]", "\n", "# masks: [B, L, C=1, H, W]", "\n", "# guidances: [B, L, C=1, H, W]", "\n", "        ", "if", "model", "==", "'G'", ":", "\n", "            ", "masked_imgs", "=", "imgs", "*", "masks", "\n", "output", "=", "self", ".", "generator", "(", "masked_imgs", ",", "masks", ",", "guidances", ")", "\n", "", "elif", "model", "==", "'D_t'", ":", "\n", "            ", "guidances", "=", "torch", ".", "full_like", "(", "masks", ",", "0.", ")", "if", "guidances", "is", "None", "else", "guidances", "\n", "input_imgs", "=", "torch", ".", "cat", "(", "[", "imgs", ",", "masks", ",", "guidances", "]", ",", "dim", "=", "2", ")", "\n", "output", "=", "self", ".", "temporal_discriminator", "(", "input_imgs", ")", "\n", "", "elif", "model", "==", "'D_s'", ":", "\n", "            ", "guidances", "=", "torch", ".", "full_like", "(", "masks", ",", "0.", ")", "if", "guidances", "is", "None", "else", "guidances", "\n", "input_imgs", "=", "torch", ".", "cat", "(", "[", "imgs", ",", "masks", ",", "guidances", "]", ",", "dim", "=", "2", ")", "\n", "# merge temporal dimension to batch dimension", "\n", "in_shape", "=", "list", "(", "input_imgs", ".", "shape", ")", "\n", "input_imgs", "=", "input_imgs", ".", "view", "(", "[", "in_shape", "[", "0", "]", "*", "in_shape", "[", "1", "]", "]", "+", "in_shape", "[", "2", ":", "]", ")", "\n", "output", "=", "self", ".", "spatial_discriminator", "(", "input_imgs", ")", "\n", "# split batch and temporal dimension", "\n", "output", "=", "output", ".", "view", "(", "in_shape", "[", "0", "]", ",", "in_shape", "[", "1", "]", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f'forwarding model should be \"G\", \"D_t\", or \"D_s\", but got {model}'", ")", "\n", "\n", "", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.MaxPool3dSamePadding.compute_pad": [[10, 15], ["max", "max"], "methods", ["None"], ["    ", "def", "compute_pad", "(", "self", ",", "dim", ",", "s", ")", ":", "\n", "        ", "if", "s", "%", "self", ".", "stride", "[", "dim", "]", "==", "0", ":", "\n", "            ", "return", "max", "(", "self", ".", "kernel_size", "[", "dim", "]", "-", "self", ".", "stride", "[", "dim", "]", ",", "0", ")", "\n", "", "else", ":", "\n", "            ", "return", "max", "(", "self", ".", "kernel_size", "[", "dim", "]", "-", "(", "s", "%", "self", ".", "stride", "[", "dim", "]", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.MaxPool3dSamePadding.forward": [[16, 33], ["torch.pad.size", "i3d.MaxPool3dSamePadding.compute_pad", "i3d.MaxPool3dSamePadding.compute_pad", "i3d.MaxPool3dSamePadding.compute_pad", "torch.pad", "torch.pad", "torch.pad", "super().forward"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.Unit3D.compute_pad", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.Unit3D.compute_pad", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.Unit3D.compute_pad", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# compute 'same' padding", "\n", "        ", "(", "batch", ",", "channel", ",", "t", ",", "h", ",", "w", ")", "=", "x", ".", "size", "(", ")", "\n", "pad_t", "=", "self", ".", "compute_pad", "(", "0", ",", "t", ")", "\n", "pad_h", "=", "self", ".", "compute_pad", "(", "1", ",", "h", ")", "\n", "pad_w", "=", "self", ".", "compute_pad", "(", "2", ",", "w", ")", "\n", "\n", "pad_t_f", "=", "pad_t", "//", "2", "\n", "pad_t_b", "=", "pad_t", "-", "pad_t_f", "\n", "pad_h_f", "=", "pad_h", "//", "2", "\n", "pad_h_b", "=", "pad_h", "-", "pad_h_f", "\n", "pad_w_f", "=", "pad_w", "//", "2", "\n", "pad_w_b", "=", "pad_w", "-", "pad_w_f", "\n", "\n", "pad", "=", "(", "pad_w_f", ",", "pad_w_b", ",", "pad_h_f", ",", "pad_h_b", ",", "pad_t_f", ",", "pad_t_b", ")", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "pad", ")", "\n", "return", "super", "(", "MaxPool3dSamePadding", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.Unit3D.__init__": [[37, 68], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "\n", "output_channels", ",", "\n", "kernel_shape", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "0", ",", "\n", "activation_fn", "=", "F", ".", "relu", ",", "\n", "use_batch_norm", "=", "True", ",", "\n", "use_bias", "=", "False", ",", "\n", "name", "=", "'unit_3d'", ")", ":", "\n", "        ", "\"\"\"Initializes Unit3D module.\"\"\"", "\n", "super", "(", "Unit3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_output_channels", "=", "output_channels", "\n", "self", ".", "_kernel_shape", "=", "kernel_shape", "\n", "self", ".", "_stride", "=", "stride", "\n", "self", ".", "_use_batch_norm", "=", "use_batch_norm", "\n", "self", ".", "_activation_fn", "=", "activation_fn", "\n", "self", ".", "_use_bias", "=", "use_bias", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "padding", "=", "padding", "\n", "\n", "self", ".", "conv3d", "=", "nn", ".", "Conv3d", "(", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "self", ".", "_output_channels", ",", "\n", "kernel_size", "=", "self", ".", "_kernel_shape", ",", "\n", "stride", "=", "self", ".", "_stride", ",", "\n", "padding", "=", "0", ",", "# we always want padding to be 0 here. We will", "\n", "# dynamically pad based on input size in forward function", "\n", "bias", "=", "self", ".", "_use_bias", ")", "\n", "\n", "if", "self", ".", "_use_batch_norm", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "self", ".", "_output_channels", ",", "eps", "=", "0.001", ",", "momentum", "=", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.Unit3D.compute_pad": [[69, 74], ["max", "max"], "methods", ["None"], ["", "", "def", "compute_pad", "(", "self", ",", "dim", ",", "s", ")", ":", "\n", "        ", "if", "s", "%", "self", ".", "_stride", "[", "dim", "]", "==", "0", ":", "\n", "            ", "return", "max", "(", "self", ".", "_kernel_shape", "[", "dim", "]", "-", "self", ".", "_stride", "[", "dim", "]", ",", "0", ")", "\n", "", "else", ":", "\n", "            ", "return", "max", "(", "self", ".", "_kernel_shape", "[", "dim", "]", "-", "(", "s", "%", "self", ".", "_stride", "[", "dim", "]", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.Unit3D.forward": [[75, 98], ["i3d.Unit3D.size", "i3d.Unit3D.compute_pad", "i3d.Unit3D.compute_pad", "i3d.Unit3D.compute_pad", "torch.pad", "torch.pad", "torch.pad", "i3d.Unit3D.conv3d", "i3d.Unit3D.bn", "i3d.Unit3D._activation_fn"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.Unit3D.compute_pad", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.Unit3D.compute_pad", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.Unit3D.compute_pad"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# compute 'same' padding", "\n", "        ", "(", "batch", ",", "channel", ",", "t", ",", "h", ",", "w", ")", "=", "x", ".", "size", "(", ")", "\n", "pad_t", "=", "self", ".", "compute_pad", "(", "0", ",", "t", ")", "\n", "pad_h", "=", "self", ".", "compute_pad", "(", "1", ",", "h", ")", "\n", "pad_w", "=", "self", ".", "compute_pad", "(", "2", ",", "w", ")", "\n", "\n", "pad_t_f", "=", "pad_t", "//", "2", "\n", "pad_t_b", "=", "pad_t", "-", "pad_t_f", "\n", "pad_h_f", "=", "pad_h", "//", "2", "\n", "pad_h_b", "=", "pad_h", "-", "pad_h_f", "\n", "pad_w_f", "=", "pad_w", "//", "2", "\n", "pad_w_b", "=", "pad_w", "-", "pad_w_f", "\n", "\n", "pad", "=", "(", "pad_w_f", ",", "pad_w_b", ",", "pad_h_f", ",", "pad_h_b", ",", "pad_t_f", ",", "pad_t_b", ")", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "pad", ")", "\n", "\n", "x", "=", "self", ".", "conv3d", "(", "x", ")", "\n", "if", "self", ".", "_use_batch_norm", ":", "\n", "            ", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "", "if", "self", ".", "_activation_fn", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "_activation_fn", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.InceptionModule.__init__": [[101, 119], ["torch.Module.__init__", "i3d.Unit3D", "i3d.Unit3D", "i3d.Unit3D", "i3d.Unit3D", "i3d.Unit3D", "i3d.MaxPool3dSamePadding", "i3d.Unit3D"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "name", ")", ":", "\n", "        ", "super", "(", "InceptionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "b0", "=", "Unit3D", "(", "in_channels", "=", "in_channels", ",", "output_channels", "=", "out_channels", "[", "0", "]", ",", "kernel_shape", "=", "[", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "0", ",", "\n", "name", "=", "name", "+", "'/Branch_0/Conv3d_0a_1x1'", ")", "\n", "self", ".", "b1a", "=", "Unit3D", "(", "in_channels", "=", "in_channels", ",", "output_channels", "=", "out_channels", "[", "1", "]", ",", "kernel_shape", "=", "[", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "0", ",", "\n", "name", "=", "name", "+", "'/Branch_1/Conv3d_0a_1x1'", ")", "\n", "self", ".", "b1b", "=", "Unit3D", "(", "in_channels", "=", "out_channels", "[", "1", "]", ",", "output_channels", "=", "out_channels", "[", "2", "]", ",", "kernel_shape", "=", "[", "3", ",", "3", ",", "3", "]", ",", "\n", "name", "=", "name", "+", "'/Branch_1/Conv3d_0b_3x3'", ")", "\n", "self", ".", "b2a", "=", "Unit3D", "(", "in_channels", "=", "in_channels", ",", "output_channels", "=", "out_channels", "[", "3", "]", ",", "kernel_shape", "=", "[", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "0", ",", "\n", "name", "=", "name", "+", "'/Branch_2/Conv3d_0a_1x1'", ")", "\n", "self", ".", "b2b", "=", "Unit3D", "(", "in_channels", "=", "out_channels", "[", "3", "]", ",", "output_channels", "=", "out_channels", "[", "4", "]", ",", "kernel_shape", "=", "[", "3", ",", "3", ",", "3", "]", ",", "\n", "name", "=", "name", "+", "'/Branch_2/Conv3d_0b_3x3'", ")", "\n", "self", ".", "b3a", "=", "MaxPool3dSamePadding", "(", "kernel_size", "=", "[", "3", ",", "3", ",", "3", "]", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "0", ")", "\n", "self", ".", "b3b", "=", "Unit3D", "(", "in_channels", "=", "in_channels", ",", "output_channels", "=", "out_channels", "[", "5", "]", ",", "kernel_shape", "=", "[", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "0", ",", "\n", "name", "=", "name", "+", "'/Branch_3/Conv3d_0b_1x1'", ")", "\n", "self", ".", "name", "=", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.InceptionModule.forward": [[120, 126], ["i3d.InceptionModule.b0", "i3d.InceptionModule.b1b", "i3d.InceptionModule.b2b", "i3d.InceptionModule.b3b", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "i3d.InceptionModule.b1a", "i3d.InceptionModule.b2a", "i3d.InceptionModule.b3a"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b0", "=", "self", ".", "b0", "(", "x", ")", "\n", "b1", "=", "self", ".", "b1b", "(", "self", ".", "b1a", "(", "x", ")", ")", "\n", "b2", "=", "self", ".", "b2b", "(", "self", ".", "b2a", "(", "x", ")", ")", "\n", "b3", "=", "self", ".", "b3b", "(", "self", ".", "b3a", "(", "x", ")", ")", "\n", "return", "torch", ".", "cat", "(", "[", "b0", ",", "b1", ",", "b2", ",", "b3", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.InceptionI3d.__init__": [[165, 300], ["torch.Module.__init__", "i3d.Unit3D", "i3d.MaxPool3dSamePadding", "i3d.Unit3D", "i3d.Unit3D", "i3d.MaxPool3dSamePadding", "i3d.InceptionModule", "i3d.InceptionModule", "i3d.MaxPool3dSamePadding", "i3d.InceptionModule", "i3d.InceptionModule", "i3d.InceptionModule", "i3d.InceptionModule", "i3d.InceptionModule", "i3d.MaxPool3dSamePadding", "i3d.InceptionModule", "i3d.InceptionModule", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "i3d.Unit3D", "i3d.InceptionI3d.build", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.InceptionI3d.build"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "400", ",", "spatial_squeeze", "=", "True", ",", "\n", "final_endpoint", "=", "'Logits'", ",", "name", "=", "'inception_i3d'", ",", "in_channels", "=", "3", ",", "dropout_keep_prob", "=", "0.5", ")", ":", "\n", "        ", "\"\"\"Initializes I3D model instance.\n        Args:\n          num_classes: The number of outputs in the logit layer (default 400, which\n              matches the Kinetics dataset).\n          spatial_squeeze: Whether to squeeze the spatial dimensions for the logits\n              before returning (default True).\n          final_endpoint: The model contains many possible endpoints.\n              `final_endpoint` specifies the last endpoint for the model to be built\n              up to. In addition to the output at `final_endpoint`, all the outputs\n              at endpoints up to `final_endpoint` will also be returned, in a\n              dictionary. `final_endpoint` must be one of\n              InceptionI3d.VALID_ENDPOINTS (default 'Logits').\n          name: A string (optional). The name of this module.\n        Raises:\n          ValueError: if `final_endpoint` is not recognized.\n        \"\"\"", "\n", "\n", "if", "final_endpoint", "not", "in", "self", ".", "VALID_ENDPOINTS", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown final endpoint %s'", "%", "final_endpoint", ")", "\n", "\n", "", "super", "(", "InceptionI3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_spatial_squeeze", "=", "spatial_squeeze", "\n", "self", ".", "_final_endpoint", "=", "final_endpoint", "\n", "self", ".", "logits", "=", "None", "\n", "\n", "if", "self", ".", "_final_endpoint", "not", "in", "self", ".", "VALID_ENDPOINTS", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown final endpoint %s'", "%", "self", ".", "_final_endpoint", ")", "\n", "\n", "", "self", ".", "end_points", "=", "{", "}", "\n", "end_point", "=", "'Conv3d_1a_7x7'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "Unit3D", "(", "in_channels", "=", "in_channels", ",", "output_channels", "=", "64", ",", "kernel_shape", "=", "[", "7", ",", "7", ",", "7", "]", ",", "\n", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "(", "3", ",", "3", ",", "3", ")", ",", "name", "=", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'MaxPool3d_2a_3x3'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "MaxPool3dSamePadding", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "0", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Conv3d_2b_1x1'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "Unit3D", "(", "in_channels", "=", "64", ",", "output_channels", "=", "64", ",", "kernel_shape", "=", "[", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "0", ",", "\n", "name", "=", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Conv3d_2c_3x3'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "Unit3D", "(", "in_channels", "=", "64", ",", "output_channels", "=", "192", ",", "kernel_shape", "=", "[", "3", ",", "3", ",", "3", "]", ",", "padding", "=", "1", ",", "\n", "name", "=", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'MaxPool3d_3a_3x3'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "MaxPool3dSamePadding", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "0", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Mixed_3b'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "InceptionModule", "(", "192", ",", "[", "64", ",", "96", ",", "128", ",", "16", ",", "32", ",", "32", "]", ",", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Mixed_3c'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "InceptionModule", "(", "256", ",", "[", "128", ",", "128", ",", "192", ",", "32", ",", "96", ",", "64", "]", ",", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'MaxPool3d_4a_3x3'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "MaxPool3dSamePadding", "(", "kernel_size", "=", "[", "3", ",", "3", ",", "3", "]", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "0", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Mixed_4b'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "InceptionModule", "(", "128", "+", "192", "+", "96", "+", "64", ",", "[", "192", ",", "96", ",", "208", ",", "16", ",", "48", ",", "64", "]", ",", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Mixed_4c'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "InceptionModule", "(", "192", "+", "208", "+", "48", "+", "64", ",", "[", "160", ",", "112", ",", "224", ",", "24", ",", "64", ",", "64", "]", ",", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Mixed_4d'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "InceptionModule", "(", "160", "+", "224", "+", "64", "+", "64", ",", "[", "128", ",", "128", ",", "256", ",", "24", ",", "64", ",", "64", "]", ",", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Mixed_4e'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "InceptionModule", "(", "128", "+", "256", "+", "64", "+", "64", ",", "[", "112", ",", "144", ",", "288", ",", "32", ",", "64", ",", "64", "]", ",", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Mixed_4f'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "InceptionModule", "(", "\n", "112", "+", "288", "+", "64", "+", "64", ",", "[", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", "]", ",", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'MaxPool3d_5a_2x2'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "MaxPool3dSamePadding", "(", "kernel_size", "=", "[", "2", ",", "2", ",", "2", "]", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "0", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Mixed_5b'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "InceptionModule", "(", "\n", "256", "+", "320", "+", "128", "+", "128", ",", "[", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", "]", ",", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Mixed_5c'", "\n", "self", ".", "end_points", "[", "end_point", "]", "=", "InceptionModule", "(", "\n", "256", "+", "320", "+", "128", "+", "128", ",", "[", "384", ",", "192", ",", "384", ",", "48", ",", "128", ",", "128", "]", ",", "name", "+", "end_point", ")", "\n", "if", "self", ".", "_final_endpoint", "==", "end_point", ":", "\n", "            ", "return", "\n", "\n", "", "end_point", "=", "'Logits'", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "[", "2", ",", "7", ",", "7", "]", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout_keep_prob", ")", "\n", "self", ".", "logits", "=", "Unit3D", "(", "in_channels", "=", "384", "+", "384", "+", "128", "+", "128", ",", "output_channels", "=", "self", ".", "_num_classes", ",", "\n", "kernel_shape", "=", "[", "1", ",", "1", ",", "1", "]", ",", "\n", "padding", "=", "0", ",", "\n", "activation_fn", "=", "None", ",", "\n", "use_batch_norm", "=", "False", ",", "\n", "use_bias", "=", "True", ",", "\n", "name", "=", "'logits'", ")", "\n", "\n", "self", ".", "build", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.InceptionI3d.replace_logits": [[301, 310], ["i3d.Unit3D"], "methods", ["None"], ["", "def", "replace_logits", "(", "self", ",", "num_classes", ")", ":", "\n", "        ", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "logits", "=", "Unit3D", "(", "in_channels", "=", "384", "+", "384", "+", "128", "+", "128", ",", "output_channels", "=", "self", ".", "_num_classes", ",", "\n", "kernel_shape", "=", "[", "1", ",", "1", ",", "1", "]", ",", "\n", "padding", "=", "0", ",", "\n", "activation_fn", "=", "None", ",", "\n", "use_batch_norm", "=", "False", ",", "\n", "use_bias", "=", "True", ",", "\n", "name", "=", "'logits'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.InceptionI3d.build": [[311, 314], ["i3d.InceptionI3d.end_points.keys", "i3d.InceptionI3d.add_module"], "methods", ["None"], ["", "def", "build", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "end_points", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "add_module", "(", "k", ",", "self", ".", "end_points", "[", "k", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.InceptionI3d.forward": [[315, 325], ["i3d.InceptionI3d.logits", "i3d.InceptionI3d.dropout", "i3d.InceptionI3d.squeeze().squeeze", "i3d.InceptionI3d.avg_pool", "i3d.InceptionI3d.squeeze"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "end_point", "in", "self", ".", "VALID_ENDPOINTS", ":", "\n", "            ", "if", "end_point", "in", "self", ".", "end_points", ":", "\n", "                ", "x", "=", "self", ".", "_modules", "[", "end_point", "]", "(", "x", ")", "# use _modules to work with dataparallel", "\n", "\n", "", "", "x", "=", "self", ".", "logits", "(", "self", ".", "dropout", "(", "self", ".", "avg_pool", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "_spatial_squeeze", ":", "\n", "            ", "logits", "=", "x", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "3", ")", "\n", "# logits is batch X time X classes, which is what we want to work with", "\n", "", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.i3d.InceptionI3d.extract_features": [[326, 336], ["x.mean().mean().mean", "x.mean().mean", "x.mean"], "methods", ["None"], ["", "def", "extract_features", "(", "self", ",", "x", ",", "target_endpoint", "=", "'Logits'", ")", ":", "\n", "        ", "for", "end_point", "in", "self", ".", "VALID_ENDPOINTS", ":", "\n", "            ", "if", "end_point", "in", "self", ".", "end_points", ":", "\n", "                ", "x", "=", "self", ".", "_modules", "[", "end_point", "]", "(", "x", ")", "\n", "if", "end_point", "==", "target_endpoint", ":", "\n", "                    ", "break", "\n", "", "", "", "if", "target_endpoint", "==", "'Logits'", ":", "\n", "            ", "return", "x", ".", "mean", "(", "4", ")", ".", "mean", "(", "3", ")", ".", "mean", "(", "2", ")", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.tsm_utils.InplaceShift.forward": [[8, 22], ["tensor.size", "tensor.data.new().zero_", "tensor.data.new().zero_.zero_", "tensor.data.new"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "tensor", ")", ":", "\n", "# not support higher order gradient", "\n", "# tensor = tensor.detach_()", "\n", "        ", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "tensor", ".", "size", "(", ")", "\n", "fold", "=", "c", "//", "4", "\n", "ctx", ".", "fold_", "=", "fold", "\n", "buffer_", "=", "tensor", ".", "data", ".", "new", "(", "n", ",", "t", ",", "fold", ",", "h", ",", "w", ")", ".", "zero_", "(", ")", "\n", "buffer_", "[", ":", ",", ":", "-", "1", "]", "=", "tensor", ".", "data", "[", ":", ",", "1", ":", ",", ":", "fold", "]", "\n", "tensor", ".", "data", "[", ":", ",", ":", ",", ":", "fold", "]", "=", "buffer_", "\n", "buffer_", ".", "zero_", "(", ")", "\n", "buffer_", "[", ":", ",", "1", ":", "]", "=", "tensor", ".", "data", "[", ":", ",", ":", "-", "1", ",", "fold", ":", "2", "*", "fold", "]", "\n", "tensor", ".", "data", "[", ":", ",", ":", ",", "fold", ":", "2", "*", "fold", "]", "=", "buffer_", "\n", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.tsm_utils.InplaceShift.backward": [[23, 35], ["grad_output.size", "grad_output.data.new().zero_", "grad_output.data.new().zero_.zero_", "grad_output.data.new"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "# grad_output = grad_output.detach_()", "\n", "        ", "fold", "=", "ctx", ".", "fold_", "\n", "n", ",", "t", ",", "c", ",", "h", ",", "w", "=", "grad_output", ".", "size", "(", ")", "\n", "buffer_", "=", "grad_output", ".", "data", ".", "new", "(", "n", ",", "t", ",", "fold", ",", "h", ",", "w", ")", ".", "zero_", "(", ")", "\n", "buffer_", "[", ":", ",", "1", ":", "]", "=", "grad_output", ".", "data", "[", ":", ",", ":", "-", "1", ",", ":", "fold", "]", "\n", "grad_output", ".", "data", "[", ":", ",", ":", ",", ":", "fold", "]", "=", "buffer_", "\n", "buffer_", ".", "zero_", "(", ")", "\n", "buffer_", "[", ":", ",", ":", "-", "1", "]", "=", "grad_output", ".", "data", "[", ":", ",", "1", ":", ",", "fold", ":", "2", "*", "fold", "]", "\n", "grad_output", ".", "data", "[", ":", ",", ":", ",", "fold", ":", "2", "*", "fold", "]", "=", "buffer_", "\n", "return", "grad_output", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.tsm_utils.tsm": [[37, 59], ["tensor.split", "torch.cat().view", "torch.cat().view", "InplaceShift.apply", "torch.pad", "torch.pad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ValueError", "torch.cat", "torch.cat"], "function", ["None"], ["", "", "def", "tsm", "(", "tensor", ",", "version", "=", "'zero'", ",", "inplace", "=", "True", ")", ":", "\n", "    ", "shape", "=", "B", ",", "T", ",", "C", ",", "H", ",", "W", "=", "tensor", ".", "shape", "\n", "split_size", "=", "C", "//", "4", "\n", "if", "not", "inplace", ":", "\n", "        ", "pre_tensor", ",", "post_tensor", ",", "peri_tensor", "=", "tensor", ".", "split", "(", "\n", "[", "split_size", ",", "split_size", ",", "C", "-", "2", "*", "split_size", "]", ",", "\n", "dim", "=", "2", "\n", ")", "\n", "if", "version", "==", "'zero'", ":", "\n", "            ", "pre_tensor", "=", "F", ".", "pad", "(", "pre_tensor", ",", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ")", ")", "[", ":", ",", ":", "-", "1", ",", "...", "]", "# NOQA", "\n", "post_tensor", "=", "F", ".", "pad", "(", "post_tensor", ",", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ")", ")", "[", ":", ",", "1", ":", ",", "...", "]", "# NOQA", "\n", "", "elif", "version", "==", "'circulant'", ":", "\n", "            ", "pre_tensor", "=", "torch", ".", "cat", "(", "(", "pre_tensor", "[", ":", ",", "-", "1", ":", ",", "...", "]", ",", "# NOQA", "\n", "pre_tensor", "[", ":", ",", ":", "-", "1", ",", "...", "]", ")", ",", "dim", "=", "1", ")", "# NOQA", "\n", "post_tensor", "=", "torch", ".", "cat", "(", "(", "post_tensor", "[", ":", ",", "1", ":", ",", "...", "]", ",", "# NOQA", "\n", "post_tensor", "[", ":", ",", ":", "1", ",", "...", "]", ")", ",", "dim", "=", "1", ")", "# NOQA", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown TSM version: {}'", ".", "format", "(", "version", ")", ")", "\n", "", "return", "torch", ".", "cat", "(", "(", "pre_tensor", ",", "post_tensor", ",", "peri_tensor", ")", ",", "dim", "=", "2", ")", ".", "view", "(", "shape", ")", "\n", "", "else", ":", "\n", "        ", "out", "=", "InplaceShift", ".", "apply", "(", "tensor", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.Conv3dBlock.__init__": [[12, 45], ["torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Module.__init__", "hasattr", "torch.nn.ConvTranspose3d", "torch.nn.ConvTranspose3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.BatchNorm3d", "tuple", "torch.nn.InstanceNorm3d", "torch.nn.InstanceNorm3d", "numpy.array", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "numpy.array", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "bias", "=", "True", ",", "norm", "=", "\"SN\"", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "transpose", "=", "False", ",", "output_padding", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "padding", "==", "-", "1", ":", "\n", "            ", "padding", "=", "(", "(", "np", ".", "array", "(", "kernel_size", ")", "-", "1", ")", "*", "np", ".", "array", "(", "dilation", ")", ")", "//", "2", "\n", "# to check if padding is not a 0-d array, otherwise tuple(padding) will raise an exception", "\n", "if", "hasattr", "(", "padding", ",", "'__iter__'", ")", ":", "\n", "                ", "padding", "=", "tuple", "(", "padding", ")", "\n", "\n", "", "", "if", "transpose", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "ConvTranspose3d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", ",", "padding", ",", "output_padding", ",", "groups", ",", "bias", ",", "dilation", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", ",", "padding", ",", "dilation", ",", "groups", ",", "bias", ")", "\n", "\n", "", "self", ".", "norm", "=", "norm", "\n", "if", "norm", "==", "\"BN\"", ":", "\n", "            ", "self", ".", "norm_layer", "=", "nn", ".", "BatchNorm3d", "(", "out_channels", ")", "\n", "", "elif", "norm", "==", "\"IN\"", ":", "\n", "            ", "self", ".", "norm_layer", "=", "nn", ".", "InstanceNorm3d", "(", "out_channels", ",", "track_running_stats", "=", "True", ")", "\n", "", "elif", "norm", "==", "\"SN\"", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "self", ".", "conv", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "self", ".", "conv", ")", "\n", "", "elif", "norm", "is", "None", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Norm type {norm} not implemented\"", ")", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.Conv3dBlock.forward": [[46, 53], ["blocks.Conv3dBlock.conv", "blocks.Conv3dBlock.activation", "blocks.Conv3dBlock.norm_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xs", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "xs", ")", "\n", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm_layer", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.Conv2dBlock.__init__": [[56, 88], ["torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Module.__init__", "hasattr", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "tuple", "torch.nn.InstanceNorm2d", "torch.nn.InstanceNorm2d", "numpy.array", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "numpy.array", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "bias", "=", "True", ",", "norm", "=", "\"SN\"", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "transpose", "=", "False", ",", "output_padding", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "padding", "==", "-", "1", ":", "\n", "            ", "padding", "=", "(", "(", "np", ".", "array", "(", "kernel_size", ")", "-", "1", ")", "*", "np", ".", "array", "(", "dilation", ")", ")", "//", "2", "\n", "if", "hasattr", "(", "padding", ",", "'__iter__'", ")", ":", "\n", "                ", "padding", "=", "tuple", "(", "padding", ")", "\n", "\n", "", "", "if", "transpose", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", ",", "padding", ",", "output_padding", ",", "groups", ",", "bias", ",", "dilation", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", ",", "padding", ",", "dilation", ",", "groups", ",", "bias", ")", "\n", "\n", "", "self", ".", "norm", "=", "norm", "\n", "if", "norm", "==", "\"BN\"", ":", "\n", "            ", "self", ".", "norm_layer", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "", "elif", "norm", "==", "\"IN\"", ":", "\n", "            ", "self", ".", "norm_layer", "=", "nn", ".", "InstanceNorm2d", "(", "out_channels", ",", "track_running_stats", "=", "True", ")", "\n", "", "elif", "norm", "==", "\"SN\"", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "self", ".", "conv", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "self", ".", "conv", ")", "\n", "", "elif", "norm", "is", "None", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Norm type {norm} not implemented\"", ")", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.Conv2dBlock.forward": [[89, 96], ["blocks.Conv2dBlock.conv", "blocks.Conv2dBlock.activation", "blocks.Conv2dBlock.norm_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xs", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "xs", ")", "\n", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm_layer", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.VanillaConv.__init__": [[195, 229], ["torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Module.__init__", "blocks.VanillaConv.module.Conv3d", "tuple", "blocks.VanillaConv.module.BatchNorm3d", "blocks.VanillaConv.module.InstanceNorm3d", "NotImplementedError", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "numpy.array", "NotImplementedError", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "bias", "=", "True", ",", "norm", "=", "\"SN\"", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "conv_by", "=", "'3d'", "\n", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "conv_by", "==", "'2d'", ":", "\n", "            ", "self", ".", "module", "=", "NN3Dby2D", "\n", "", "elif", "conv_by", "==", "'2dtsm'", ":", "\n", "            ", "self", ".", "module", "=", "NN3Dby2DTSM", "\n", "", "elif", "conv_by", "==", "'3d'", ":", "\n", "            ", "self", ".", "module", "=", "torch", ".", "nn", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f'conv_by {conv_by} is not implemented.'", ")", "\n", "\n", "", "self", ".", "padding", "=", "tuple", "(", "(", "(", "np", ".", "array", "(", "kernel_size", ")", "-", "1", ")", "*", "np", ".", "array", "(", "dilation", ")", ")", "//", "2", ")", "if", "padding", "==", "-", "1", "else", "padding", "\n", "self", ".", "featureConv", "=", "self", ".", "module", ".", "Conv3d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", ",", "self", ".", "padding", ",", "dilation", ",", "groups", ",", "bias", ")", "\n", "\n", "self", ".", "norm", "=", "norm", "\n", "if", "norm", "==", "\"BN\"", ":", "\n", "            ", "self", ".", "norm_layer", "=", "self", ".", "module", ".", "BatchNorm3d", "(", "out_channels", ")", "\n", "", "elif", "norm", "==", "\"IN\"", ":", "\n", "            ", "self", ".", "norm_layer", "=", "self", ".", "module", ".", "InstanceNorm3d", "(", "out_channels", ",", "track_running_stats", "=", "True", ")", "\n", "", "elif", "norm", "==", "\"SN\"", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "self", ".", "featureConv", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "self", ".", "featureConv", ")", "\n", "", "elif", "norm", "is", "None", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Norm type {norm} not implemented\"", ")", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.VanillaConv.forward": [[230, 237], ["blocks.VanillaConv.featureConv", "blocks.VanillaConv.activation", "blocks.VanillaConv.norm_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xs", ")", ":", "\n", "        ", "out", "=", "self", ".", "featureConv", "(", "xs", ")", "\n", "if", "self", ".", "activation", ":", "\n", "            ", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm_layer", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.VanillaDeconv.__init__": [[240, 250], ["torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Module.__init__", "blocks.VanillaConv"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "bias", "=", "True", ",", "norm", "=", "\"SN\"", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "scale_factor", "=", "2", ",", "conv_by", "=", "'3d'", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "VanillaConv", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "groups", ",", "bias", ",", "norm", ",", "activation", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.VanillaDeconv.forward": [[251, 254], ["torch.interpolate", "torch.interpolate", "blocks.VanillaDeconv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xs", ")", ":", "\n", "        ", "xs_resized", "=", "F", ".", "interpolate", "(", "xs", ",", "scale_factor", "=", "(", "1", ",", "self", ".", "scale_factor", ",", "self", ".", "scale_factor", ")", ")", "\n", "return", "self", ".", "conv", "(", "xs_resized", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.GatedConv.__init__": [[257, 274], ["torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "blocks.VanillaConv.__init__", "blocks.GatedConv.module.Conv3d", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "bias", "=", "True", ",", "norm", "=", "\"SN\"", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "conv_by", "=", "'3d'", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "groups", ",", "bias", ",", "norm", ",", "activation", ",", "conv_by", "\n", ")", "\n", "if", "conv_by", "==", "'2dtsm'", ":", "\n", "            ", "self", ".", "module", "=", "NN3Dby2D", "\n", "", "self", ".", "gatingConv", "=", "self", ".", "module", ".", "Conv3d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", ",", "self", ".", "padding", ",", "dilation", ",", "groups", ",", "bias", ")", "\n", "if", "norm", "==", "'SN'", ":", "\n", "            ", "self", ".", "gatingConv", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "self", ".", "gatingConv", ")", "\n", "", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "store_gated_values", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.GatedConv.gated": [[275, 281], ["blocks.GatedConv.sigmoid", "blocks.GatedConv.detach().cpu", "blocks.GatedConv.detach"], "methods", ["None"], ["", "def", "gated", "(", "self", ",", "mask", ")", ":", "\n", "# return torch.clamp(mask, -1, 1)", "\n", "        ", "out", "=", "self", ".", "sigmoid", "(", "mask", ")", "\n", "if", "self", ".", "store_gated_values", ":", "\n", "            ", "self", ".", "gated_values", "=", "out", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.GatedConv.forward": [[282, 291], ["blocks.GatedConv.gatingConv", "blocks.GatedConv.featureConv", "blocks.GatedConv.activation", "blocks.GatedConv.gated", "blocks.GatedConv.norm_layer"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.GatedConv.gated"], ["", "def", "forward", "(", "self", ",", "xs", ")", ":", "\n", "        ", "gating", "=", "self", ".", "gatingConv", "(", "xs", ")", "\n", "feature", "=", "self", ".", "featureConv", "(", "xs", ")", "\n", "if", "self", ".", "activation", ":", "\n", "            ", "feature", "=", "self", ".", "activation", "(", "feature", ")", "\n", "", "out", "=", "self", ".", "gated", "(", "gating", ")", "*", "feature", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm_layer", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.GatedDeconv.__init__": [[294, 306], ["torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "blocks.VanillaDeconv.__init__", "blocks.GatedConv"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "bias", "=", "True", ",", "norm", "=", "\"SN\"", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "scale_factor", "=", "2", ",", "conv_by", "=", "'3d'", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "groups", ",", "bias", ",", "norm", ",", "activation", ",", "scale_factor", ",", "conv_by", "\n", ")", "\n", "self", ".", "conv", "=", "GatedConv", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "groups", ",", "bias", ",", "norm", ",", "activation", ",", "conv_by", "=", "conv_by", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.PartialConv.__init__": [[310, 327], ["torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "blocks.VanillaConv.__init__", "blocks.PartialConv.module.Conv3d", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "blocks.PartialConv.mask_sum_conv.parameters", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "bias", "=", "True", ",", "norm", "=", "\"SN\"", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "conv_by", "=", "'3d'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "groups", ",", "bias", ",", "norm", ",", "activation", ",", "conv_by", "\n", ")", "\n", "self", ".", "mask_sum_conv", "=", "self", ".", "module", ".", "Conv3d", "(", "1", ",", "1", ",", "kernel_size", ",", "\n", "stride", ",", "padding", ",", "dilation", ",", "groups", ",", "False", ")", "\n", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "self", ".", "mask_sum_conv", ".", "weight", ",", "1.0", ")", "\n", "\n", "# mask conv needs not update", "\n", "for", "param", "in", "self", ".", "mask_sum_conv", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "if", "norm", "==", "\"SN\"", ":", "\n", "            ", "self", ".", "featureConv", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "self", ".", "featureConv", ")", "\n", "raise", "NotImplementedError", "(", "f\"Norm type {norm} not implemented\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.PartialConv.forward": [[328, 368], ["blocks.PartialConv.featureConv", "blocks.PartialConv.masked_fill_", "blocks.PartialConv.masked_fill_", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "new_mask.masked_fill_.masked_fill_.masked_fill_", "blocks.PartialConv.featureConv.bias.view", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "blocks.PartialConv.mask_sum_conv", "blocks.PartialConv.activation", "blocks.PartialConv.norm_layer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input_tuple", ")", ":", "\n", "# http://masc.cs.gmu.edu/wiki/partialconv", "\n", "# C(X) = W^T * X + b, C(0) = b, D(M) = 1 * M + 0 = sum(M)", "\n", "# output = W^T* (M .* X) / sum(M) + b = [C(M .* X) \u2013 C(0)] / D(M) + C(0), if sum(M) != 0", "\n", "#        = 0, if sum(M) == 0", "\n", "        ", "inp", ",", "mask", "=", "input_tuple", "\n", "\n", "# C(M .* X)", "\n", "output", "=", "self", ".", "featureConv", "(", "mask", "*", "inp", ")", "\n", "\n", "# C(0) = b", "\n", "if", "self", ".", "featureConv", ".", "bias", "is", "not", "None", ":", "\n", "            ", "output_bias", "=", "self", ".", "featureConv", ".", "bias", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "output_bias", "=", "torch", ".", "zeros", "(", "[", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ")", ".", "to", "(", "inp", ".", "device", ")", "\n", "\n", "# D(M) = sum(M)", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "mask_sum", "=", "self", ".", "mask_sum_conv", "(", "mask", ")", "\n", "\n", "# find those sum(M) == 0", "\n", "", "no_update_holes", "=", "(", "mask_sum", "==", "0", ")", "\n", "\n", "# Just to prevent devided by 0", "\n", "mask_sum_no_zero", "=", "mask_sum", ".", "masked_fill_", "(", "no_update_holes", ",", "1.0", ")", "\n", "\n", "# output = [C(M .* X) \u2013 C(0)] / D(M) + C(0), if sum(M) != 0", "\n", "#        = 0, if sum (M) == 0", "\n", "output", "=", "(", "output", "-", "output_bias", ")", "/", "mask_sum_no_zero", "+", "output_bias", "\n", "output", "=", "output", ".", "masked_fill_", "(", "no_update_holes", ",", "0.0", ")", "\n", "\n", "# create a new mask with only 1 or 0", "\n", "new_mask", "=", "torch", ".", "ones_like", "(", "mask_sum", ")", "\n", "new_mask", "=", "new_mask", ".", "masked_fill_", "(", "no_update_holes", ",", "0.0", ")", "\n", "\n", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "output", "=", "self", ".", "activation", "(", "output", ")", "\n", "", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "output", "=", "self", ".", "norm_layer", "(", "output", ")", "\n", "", "return", "output", ",", "new_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.PartialDeconv.__init__": [[371, 379], ["torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Module.__init__", "blocks.PartialConv"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "bias", "=", "True", ",", "norm", "=", "\"SN\"", ",", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "scale_factor", "=", "2", ",", "conv_by", "=", "'3d'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "PartialConv", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "groups", ",", "bias", ",", "norm", ",", "activation", ",", "conv_by", "=", "conv_by", ")", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.blocks.PartialDeconv.forward": [[380, 386], ["torch.interpolate", "torch.interpolate", "blocks.PartialDeconv.conv", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_tuple", ")", ":", "\n", "        ", "inp", ",", "mask", "=", "input_tuple", "\n", "inp_resized", "=", "F", ".", "interpolate", "(", "inp", ",", "scale_factor", "=", "(", "1", ",", "self", ".", "scale_factor", ",", "self", ".", "scale_factor", ")", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "mask_resized", "=", "F", ".", "interpolate", "(", "mask", ",", "scale_factor", "=", "(", "1", ",", "self", ".", "scale_factor", ",", "self", ".", "scale_factor", ")", ")", "\n", "", "return", "self", ".", "conv", "(", "(", "inp_resized", ",", "mask_resized", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.ReconLoss.__init__": [[17, 21], ["torch.Module.__init__", "torch.L1Loss", "torch.L1Loss"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "reduction", "=", "'mean'", ",", "masked", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss_fn", "=", "nn", ".", "L1Loss", "(", "reduction", "=", "reduction", ")", "\n", "self", ".", "masked", "=", "masked", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.ReconLoss.forward": [[22, 30], ["loss.ReconLoss.loss_fn", "loss.ReconLoss.loss_fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "        ", "outputs", "=", "model_output", "[", "'outputs'", "]", "\n", "targets", "=", "data_input", "[", "'targets'", "]", "\n", "if", "self", ".", "masked", ":", "\n", "            ", "masks", "=", "data_input", "[", "'masks'", "]", "\n", "return", "self", ".", "loss_fn", "(", "outputs", "*", "(", "1", "-", "masks", ")", ",", "targets", "*", "(", "1", "-", "masks", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "loss_fn", "(", "outputs", ",", "targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.VGGLoss.__init__": [[33, 36], ["torch.Module.__init__", "torch.L1Loss", "torch.L1Loss"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l1_loss", "=", "nn", ".", "L1Loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.VGGLoss.vgg_loss": [[37, 46], ["vgg", "vgg", "loss.VGGLoss.l1_loss", "loss.VGGLoss.l1_loss", "loss.VGGLoss.l1_loss"], "methods", ["None"], ["", "def", "vgg_loss", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "output_feature", "=", "vgg", "(", "output", ")", "\n", "target_feature", "=", "vgg", "(", "target", ")", "\n", "loss", "=", "(", "\n", "self", ".", "l1_loss", "(", "output_feature", ".", "relu2_2", ",", "target_feature", ".", "relu2_2", ")", "\n", "+", "self", ".", "l1_loss", "(", "output_feature", ".", "relu3_3", ",", "target_feature", ".", "relu3_3", ")", "\n", "+", "self", ".", "l1_loss", "(", "output_feature", ".", "relu4_3", ",", "target_feature", ".", "relu4_3", ")", "\n", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.VGGLoss.forward": [[47, 60], ["range", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "targets.size", "torch.stack().mean.append", "torch.stack().mean.append", "loss.VGGLoss.vgg_loss", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.VGGLoss.vgg_loss"], ["", "def", "forward", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "        ", "targets", "=", "data_input", "[", "'targets'", "]", "\n", "outputs", "=", "model_output", "[", "'outputs'", "]", "\n", "\n", "# Note: It can be batch-lized", "\n", "mean_image_loss", "=", "[", "]", "\n", "for", "frame_idx", "in", "range", "(", "targets", ".", "size", "(", "1", ")", ")", ":", "\n", "            ", "mean_image_loss", ".", "append", "(", "\n", "self", ".", "vgg_loss", "(", "outputs", "[", ":", ",", "frame_idx", "]", ",", "targets", "[", ":", ",", "frame_idx", "]", ")", "\n", ")", "\n", "\n", "", "mean_image_loss", "=", "torch", ".", "stack", "(", "mean_image_loss", ",", "dim", "=", "0", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "return", "mean_image_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.StyleLoss.__init__": [[63, 67], ["torch.Module.__init__", "torch.L1Loss", "torch.L1Loss"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "original_channel_norm", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l1_loss", "=", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "original_channel_norm", "=", "original_channel_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.StyleLoss.gram_matrix": [[69, 81], ["input.size", "input.view", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm.div", "torch.mm.div", "input.view.t"], "methods", ["None"], ["", "def", "gram_matrix", "(", "self", ",", "input", ")", ":", "\n", "        ", "a", ",", "b", ",", "c", ",", "d", "=", "input", ".", "size", "(", ")", "# a=batch size(=1)", "\n", "# b=number of feature maps", "\n", "# (c,d)=dimensions of a f. map (N=c*d)", "\n", "\n", "features", "=", "input", ".", "view", "(", "a", "*", "b", ",", "c", "*", "d", ")", "# resise F_XL into \\hat F_XL", "\n", "\n", "G", "=", "torch", ".", "mm", "(", "features", ",", "features", ".", "t", "(", ")", ")", "# compute the gram product", "\n", "\n", "# we 'normalize' the values of the gram matrix", "\n", "# by dividing by the number of element in each feature maps.", "\n", "return", "G", ".", "div", "(", "a", "*", "b", "*", "c", "*", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.StyleLoss.style_loss": [[83, 101], ["vgg", "vgg", "enumerate", "getattr", "getattr", "loss.StyleLoss.gram_matrix", "loss.StyleLoss.gram_matrix", "loss.StyleLoss.l1_loss"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.StyleLoss.gram_matrix", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.StyleLoss.gram_matrix"], ["", "def", "style_loss", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "output_features", "=", "vgg", "(", "output", ")", "\n", "target_features", "=", "vgg", "(", "target", ")", "\n", "layers", "=", "[", "'relu2_2'", ",", "'relu3_3'", ",", "'relu4_3'", "]", "# n_channel: 128 (=2 ** 7), 256 (=2 ** 8), 512 (=2 ** 9)", "\n", "loss", "=", "0", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "layers", ")", ":", "\n", "            ", "output_feature", "=", "getattr", "(", "output_features", ",", "layer", ")", "\n", "target_feature", "=", "getattr", "(", "target_features", ",", "layer", ")", "\n", "B", ",", "C_P", ",", "H", ",", "W", "=", "output_feature", ".", "shape", "\n", "output_gram_matrix", "=", "self", ".", "gram_matrix", "(", "output_feature", ")", "\n", "target_gram_matrix", "=", "self", ".", "gram_matrix", "(", "target_feature", ")", "\n", "if", "self", ".", "original_channel_norm", ":", "\n", "                ", "C_P_square_divider", "=", "2", "**", "(", "i", "+", "1", ")", "# original design (avoid too small loss)", "\n", "", "else", ":", "\n", "                ", "C_P_square_divider", "=", "C_P", "**", "2", "\n", "assert", "C_P", "==", "128", "*", "2", "**", "i", "\n", "", "loss", "+=", "self", ".", "l1_loss", "(", "output_gram_matrix", ",", "target_gram_matrix", ")", "/", "C_P_square_divider", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.StyleLoss.forward": [[102, 115], ["range", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "targets.size", "torch.stack().mean.append", "torch.stack().mean.append", "loss.StyleLoss.style_loss", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.StyleLoss.style_loss"], ["", "def", "forward", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "        ", "targets", "=", "data_input", "[", "'targets'", "]", "\n", "outputs", "=", "model_output", "[", "'outputs'", "]", "\n", "\n", "# Note: It can be batch-lized", "\n", "mean_image_loss", "=", "[", "]", "\n", "for", "frame_idx", "in", "range", "(", "targets", ".", "size", "(", "1", ")", ")", ":", "\n", "            ", "mean_image_loss", ".", "append", "(", "\n", "self", ".", "style_loss", "(", "outputs", "[", ":", ",", "frame_idx", "]", ",", "targets", "[", ":", ",", "frame_idx", "]", ")", "\n", ")", "\n", "\n", "", "mean_image_loss", "=", "torch", ".", "stack", "(", "mean_image_loss", ",", "dim", "=", "0", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "return", "mean_image_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.EdgeLoss.__init__": [[118, 121], ["torch.Module.__init__", "torch.L1Loss", "torch.L1Loss"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l1_loss", "=", "nn", ".", "L1Loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.EdgeLoss.edge_loss": [[122, 128], ["get_edge", "get_edge", "loss.EdgeLoss.EdgeLoss.l1_loss"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.edge.get_edge", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.edge.get_edge"], ["", "def", "edge_loss", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "from", "utils", ".", "edge", "import", "get_edge", "\n", "output_edge", "=", "get_edge", "(", "output", ")", "\n", "gt_edge", "=", "get_edge", "(", "target", ")", "\n", "loss", "=", "self", ".", "l1_loss", "(", "output_edge", ",", "gt_edge", ")", "\n", "return", "loss", ",", "output_edge", ",", "gt_edge", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.EdgeLoss.forward": [[129, 154], ["range", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "targets.size", "range", "output_edges.append", "target_edges.append", "targets.size", "loss.EdgeLoss.edge_loss", "torch.stack().mean.append", "torch.stack().mean.append", "edges_o.append", "edges_t.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.EdgeLoss.edge_loss", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "forward", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "        ", "targets", "=", "data_input", "[", "'targets'", "]", "\n", "outputs", "=", "model_output", "[", "'outputs'", "]", "\n", "\n", "mean_image_loss", "=", "[", "]", "\n", "output_edges", "=", "[", "]", "\n", "target_edges", "=", "[", "]", "\n", "for", "batch_idx", "in", "range", "(", "targets", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "edges_o", "=", "[", "]", "\n", "edges_t", "=", "[", "]", "\n", "for", "frame_idx", "in", "range", "(", "targets", ".", "size", "(", "1", ")", ")", ":", "\n", "                ", "loss", ",", "output_edge", ",", "target_edge", "=", "self", ".", "edge_loss", "(", "\n", "outputs", "[", "batch_idx", ",", "frame_idx", ":", "frame_idx", "+", "1", "]", ",", "\n", "targets", "[", "batch_idx", ",", "frame_idx", ":", "frame_idx", "+", "1", "]", "\n", ")", "\n", "mean_image_loss", ".", "append", "(", "loss", ")", "\n", "edges_o", ".", "append", "(", "output_edge", ")", "\n", "edges_t", ".", "append", "(", "target_edge", ")", "\n", "", "output_edges", ".", "append", "(", "torch", ".", "cat", "(", "edges_o", ",", "dim", "=", "0", ")", ")", "\n", "target_edges", ".", "append", "(", "torch", ".", "cat", "(", "edges_t", ",", "dim", "=", "0", ")", ")", "\n", "\n", "", "mean_image_loss", "=", "torch", ".", "stack", "(", "mean_image_loss", ",", "dim", "=", "0", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "self", ".", "current_output_edges", "=", "output_edges", "\n", "self", ".", "current_target_edges", "=", "target_edges", "\n", "return", "mean_image_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.L1LossMaskedMean.__init__": [[157, 160], ["torch.Module.__init__", "torch.L1Loss", "torch.L1Loss"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l1", "=", "nn", ".", "L1Loss", "(", "reduction", "=", "'sum'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.L1LossMaskedMean.forward": [[161, 165], ["loss.L1LossMaskedMean.l1", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "mask", ")", ":", "\n", "        ", "masked", "=", "1", "-", "mask", "\n", "l1_sum", "=", "self", ".", "l1", "(", "x", "*", "masked", ",", "y", "*", "masked", ")", "\n", "return", "l1_sum", "/", "torch", ".", "sum", "(", "masked", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.L2LossMaskedMean.__init__": [[168, 171], ["torch.Module.__init__", "torch.MSELoss", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "reduction", "=", "'sum'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l2", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "reduction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.L2LossMaskedMean.forward": [[172, 176], ["loss.L2LossMaskedMean.l2", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.l2"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ",", "mask", ")", ":", "\n", "        ", "masked", "=", "1", "-", "mask", "\n", "l2_sum", "=", "self", ".", "l2", "(", "x", "*", "masked", ",", "y", "*", "masked", ")", "\n", "return", "l2_sum", "/", "torch", ".", "sum", "(", "masked", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.ImcompleteVideoReconLoss.__init__": [[179, 182], ["torch.Module.__init__", "loss.L1LossMaskedMean"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss_fn", "=", "L1LossMaskedMean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.ImcompleteVideoReconLoss.forward": [[183, 195], ["torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "loss.ImcompleteVideoReconLoss.loss_fn", "targets.transpose", "masks.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "        ", "imcomplete_video", "=", "model_output", "[", "'imcomplete_video'", "]", "\n", "targets", "=", "data_input", "[", "'targets'", "]", "\n", "down_sampled_targets", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "targets", ".", "transpose", "(", "1", ",", "2", ")", ",", "scale_factor", "=", "[", "1", ",", "0.5", ",", "0.5", "]", ")", "\n", "\n", "masks", "=", "data_input", "[", "'masks'", "]", "\n", "down_sampled_masks", "=", "nn", ".", "functional", ".", "interpolate", "(", "\n", "masks", ".", "transpose", "(", "1", ",", "2", ")", ",", "scale_factor", "=", "[", "1", ",", "0.5", ",", "0.5", "]", ")", "\n", "return", "self", ".", "loss_fn", "(", "\n", "imcomplete_video", ",", "down_sampled_targets", ",", "\n", "down_sampled_masks", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.CompleteFramesReconLoss.__init__": [[199, 202], ["torch.Module.__init__", "loss.L1LossMaskedMean"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss_fn", "=", "L1LossMaskedMean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.CompleteFramesReconLoss.forward": [[203, 208], ["loss.CompleteFramesReconLoss.loss_fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "        ", "outputs", "=", "model_output", "[", "'outputs'", "]", "\n", "targets", "=", "data_input", "[", "'targets'", "]", "\n", "masks", "=", "data_input", "[", "'masks'", "]", "\n", "return", "self", ".", "loss_fn", "(", "outputs", ",", "targets", ",", "masks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingLoss.__init__": [[212, 219], ["torch.Module.__init__", "loss.L1LossMaskedMean"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "flownet_checkpoint_path", "=", "None", ",", "alpha", "=", "50", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss_fn", "=", "L1LossMaskedMean", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "\n", "self", ".", "flownet_checkpoint_path", "=", "flownet_checkpoint_path", "\n", "self", ".", "flownet", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingLoss.get_flownet_checkpoint_path": [[220, 222], ["None"], "methods", ["None"], ["", "def", "get_flownet_checkpoint_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "flownet_checkpoint_path", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingLoss._setup": [[223, 226], ["FlowNetWrapper"], "methods", ["None"], ["", "def", "_setup", "(", "self", ")", ":", "\n", "        ", "from", "libs", ".", "flownet2_pytorch", ".", "flownet_wrapper", "import", "FlowNetWrapper", "\n", "self", ".", "flownet", "=", "FlowNetWrapper", "(", "checkpoint_path", "=", "self", ".", "flownet_checkpoint_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingLoss._get_non_occlusion_mask": [[227, 234], ["torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp().unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.sum().pow", "torch.sum().pow", "torch.sum().pow", "torch.sum().pow", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "_get_non_occlusion_mask", "(", "self", ",", "targets", ",", "warped_targets", ")", ":", "\n", "        ", "non_occlusion_masks", "=", "torch", ".", "exp", "(", "\n", "-", "self", ".", "alpha", "*", "torch", ".", "sum", "(", "\n", "targets", "[", ":", ",", "1", ":", "]", "-", "warped_targets", ",", "dim", "=", "2", "\n", ")", ".", "pow", "(", "2", ")", "\n", ")", ".", "unsqueeze", "(", "2", ")", "\n", "return", "non_occlusion_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingLoss._get_loss": [[235, 240], ["loss.TemporalWarpingLoss.loss_fn"], "methods", ["None"], ["", "def", "_get_loss", "(", "self", ",", "outputs", ",", "warped_outputs", ",", "non_occlusion_masks", ",", "masks", ")", ":", "\n", "        ", "return", "self", ".", "loss_fn", "(", "\n", "outputs", "[", ":", ",", "1", ":", "]", "*", "non_occlusion_masks", ",", "\n", "warped_outputs", "*", "non_occlusion_masks", ",", "\n", "masks", "[", ":", ",", "1", ":", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingLoss.forward": [[242, 269], ["data_input[].to", "model_output[].to", "loss.TemporalWarpingLoss.flownet.infer_video().to", "warp_optical_flow().detach", "warp_optical_flow().detach", "loss.TemporalWarpingLoss._get_non_occlusion_mask", "data_input[].to", "loss.TemporalWarpingLoss._get_loss", "loss.TemporalWarpingLoss._setup", "flow_to_image().transpose", "flow_imgs.append", "loss.TemporalWarpingLoss.flownet.infer_video", "warp_optical_flow", "warp_optical_flow", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "flow_to_image", "flow.cpu().permute().detach().numpy", "flow.cpu().permute().detach", "flow.cpu().permute", "flow.cpu"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingLoss._get_non_occlusion_mask", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingError._get_loss", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingLoss._setup", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.flow_utils.warp_optical_flow", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.flow_utils.warp_optical_flow", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.flow_utils.flow_to_image"], ["", "def", "forward", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "        ", "if", "self", ".", "flownet", "is", "None", ":", "\n", "            ", "self", ".", "_setup", "(", ")", "\n", "\n", "", "targets", "=", "data_input", "[", "'targets'", "]", ".", "to", "(", "device", ")", "\n", "outputs", "=", "model_output", "[", "'outputs'", "]", ".", "to", "(", "device", ")", "\n", "flows", "=", "self", ".", "flownet", ".", "infer_video", "(", "targets", ")", ".", "to", "(", "device", ")", "\n", "\n", "from", "utils", ".", "flow_utils", "import", "warp_optical_flow", "\n", "warped_targets", "=", "warp_optical_flow", "(", "targets", "[", ":", ",", ":", "-", "1", "]", ",", "-", "flows", ")", ".", "detach", "(", ")", "\n", "warped_outputs", "=", "warp_optical_flow", "(", "outputs", "[", ":", ",", ":", "-", "1", "]", ",", "-", "flows", ")", ".", "detach", "(", ")", "\n", "non_occlusion_masks", "=", "self", ".", "_get_non_occlusion_mask", "(", "targets", ",", "warped_targets", ")", "\n", "\n", "# model_output is passed by name and dictionary is mutable", "\n", "# These values are sent to trainer for visualization", "\n", "model_output", "[", "'warped_outputs'", "]", "=", "warped_outputs", "[", "0", "]", "\n", "model_output", "[", "'warped_targets'", "]", "=", "warped_targets", "[", "0", "]", "\n", "model_output", "[", "'non_occlusion_masks'", "]", "=", "non_occlusion_masks", "[", "0", "]", "\n", "from", "utils", ".", "flow_utils", "import", "flow_to_image", "\n", "flow_imgs", "=", "[", "]", "\n", "for", "flow", "in", "flows", "[", "0", "]", ":", "\n", "            ", "flow_img", "=", "flow_to_image", "(", "flow", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "flow_imgs", ".", "append", "(", "torch", ".", "Tensor", "(", "flow_img", ")", ")", "\n", "", "model_output", "[", "'flow_imgs'", "]", "=", "flow_imgs", "\n", "\n", "masks", "=", "data_input", "[", "'masks'", "]", ".", "to", "(", "device", ")", "\n", "return", "self", ".", "_get_loss", "(", "outputs", ",", "warped_outputs", ",", "non_occlusion_masks", ",", "masks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingError.__init__": [[272, 275], ["loss.TemporalWarpingLoss.__init__", "loss.L2LossMaskedMean"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "flownet_checkpoint_path", ",", "alpha", "=", "50", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "flownet_checkpoint_path", ",", "alpha", ")", "\n", "self", ".", "loss_fn", "=", "L2LossMaskedMean", "(", "reduction", "=", "'none'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TemporalWarpingError._get_loss": [[276, 288], ["loss.TemporalWarpingError.TemporalWarpingError.loss_fn().sum().sum().sum().sum", "loss.TemporalWarpingError.TemporalWarpingError.sum", "non_occlusion_masks.sum().sum().sum().sum", "loss.TemporalWarpingError.TemporalWarpingError.loss_fn().sum().sum().sum", "non_occlusion_masks.sum().sum().sum", "loss.TemporalWarpingError.TemporalWarpingError.loss_fn().sum().sum", "non_occlusion_masks.sum().sum", "loss.TemporalWarpingError.TemporalWarpingError.loss_fn().sum", "non_occlusion_masks.sum", "loss.TemporalWarpingError.TemporalWarpingError.loss_fn"], "methods", ["None"], ["", "def", "_get_loss", "(", "self", ",", "outputs", ",", "warped_outputs", ",", "non_occlusion_masks", ",", "masks", ")", ":", "\n", "# See https://arxiv.org/pdf/1808.00449.pdf 4.3", "\n", "# The sum of non_occlusion_masks is different for each video,", "\n", "# So the batch dim is kept", "\n", "        ", "loss", "=", "self", ".", "loss_fn", "(", "\n", "outputs", "[", ":", ",", "1", ":", "]", "*", "non_occlusion_masks", ",", "\n", "warped_outputs", "*", "non_occlusion_masks", ",", "\n", "masks", "[", ":", ",", "1", ":", "]", "\n", ")", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", "\n", "\n", "loss", "=", "loss", "/", "non_occlusion_masks", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", "\n", "return", "loss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TVLoss.__init__": [[292, 294], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "TVLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.TVLoss.forward": [[295, 310], ["outputs.view", "masks.view.view.view", "masks.view.view.sum", "torch.pow().sum().sum().sum", "torch.pow().sum().sum().sum", "torch.pow().sum().sum().sum", "torch.pow().sum().sum().sum", "torch.pow().sum().sum().sum", "torch.pow().sum().sum().sum", "torch.pow().sum().sum().sum", "torch.pow().sum().sum().sum", "outputs.view.size", "outputs.view.size", "torch.pow().sum().sum", "torch.pow().sum().sum", "torch.pow().sum().sum", "torch.pow().sum().sum", "torch.pow().sum().sum", "torch.pow().sum().sum", "torch.pow().sum().sum", "torch.pow().sum().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "# View 3D data as 2D", "\n", "        ", "outputs", "=", "model_output", "[", "'outputs'", "]", "\n", "B", ",", "L", ",", "C", ",", "H", ",", "W", "=", "outputs", ".", "shape", "\n", "x", "=", "outputs", ".", "view", "(", "[", "B", "*", "L", ",", "C", ",", "H", ",", "W", "]", ")", "\n", "\n", "masks", "=", "data_input", "[", "'masks'", "]", "\n", "masks", "=", "masks", ".", "view", "(", "[", "B", "*", "L", ",", "-", "1", "]", ")", "\n", "mask_areas", "=", "masks", ".", "sum", "(", "dim", "=", "1", ")", "\n", "\n", "h_x", "=", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "w_x", "=", "x", ".", "size", "(", ")", "[", "3", "]", "\n", "h_tv", "=", "torch", ".", "pow", "(", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "-", "x", "[", ":", ",", ":", ",", ":", "h_x", "-", "1", ",", ":", "]", ")", ",", "2", ")", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", "\n", "w_tv", "=", "torch", ".", "pow", "(", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "-", "x", "[", ":", ",", ":", ",", ":", ",", ":", "w_x", "-", "1", "]", ")", ",", "2", ")", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", ".", "sum", "(", "1", ")", "\n", "return", "(", "(", "h_tv", "+", "w_tv", ")", "/", "mask_areas", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.AdversarialLoss.__init__": [[319, 340], ["torch.Module.__init__", "loss.AdversarialLoss.register_buffer", "loss.AdversarialLoss.register_buffer", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.BCELoss", "torch.BCELoss", "torch.MSELoss", "torch.MSELoss", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.ReLU", "torch.ReLU", "torch.L1Loss", "torch.L1Loss"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "type", "=", "'lsgan'", ",", "target_real_label", "=", "1.0", ",", "target_fake_label", "=", "0.0", ")", ":", "\n", "        ", "r\"\"\"\n        type = nsgan | lsgan | hinge | l1\n        \"\"\"", "\n", "super", "(", "AdversarialLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "type", "=", "type", "\n", "self", ".", "register_buffer", "(", "'real_label'", ",", "torch", ".", "tensor", "(", "target_real_label", ")", ".", "to", "(", "device", ")", ")", "\n", "self", ".", "register_buffer", "(", "'fake_label'", ",", "torch", ".", "tensor", "(", "target_fake_label", ")", ".", "to", "(", "device", ")", ")", "\n", "\n", "if", "type", "==", "'nsgan'", ":", "\n", "            ", "self", ".", "criterion", "=", "nn", ".", "BCELoss", "(", ")", "\n", "\n", "", "elif", "type", "==", "'lsgan'", ":", "\n", "            ", "self", ".", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "", "elif", "type", "==", "'hinge'", ":", "\n", "            ", "self", ".", "criterion", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "", "elif", "type", "==", "'l1'", ":", "\n", "            ", "self", ".", "criterion", "=", "nn", ".", "L1Loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.loss.AdversarialLoss.__call__": [[341, 354], ["loss.AdversarialLoss.AdversarialLoss.criterion", "loss.AdversarialLoss.AdversarialLoss.criterion().mean", "loss.AdversarialLoss.AdversarialLoss.criterion"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "outputs", ",", "is_real", ",", "is_disc", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "type", "==", "'hinge'", ":", "\n", "            ", "if", "is_disc", ":", "\n", "                ", "if", "is_real", ":", "\n", "                    ", "outputs", "=", "-", "outputs", "\n", "", "return", "self", ".", "criterion", "(", "1", "+", "outputs", ")", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "                ", "return", "(", "-", "outputs", ")", ".", "mean", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "labels", "=", "(", "self", ".", "real_label", "if", "is_real", "else", "self", ".", "fake_label", ")", ".", "expand_as", "(", "outputs", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "outputs", ",", "labels", ")", "\n", "return", "loss", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.metric.my_metric": [[4, 11], ["torch.no_grad", "torch.argmax", "torch.sum().item", "len", "len", "torch.sum"], "function", ["None"], ["def", "my_metric", "(", "output", ",", "target", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "pred", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "assert", "pred", ".", "shape", "[", "0", "]", "==", "len", "(", "target", ")", "\n", "correct", "=", "0", "\n", "correct", "+=", "torch", ".", "sum", "(", "pred", "==", "target", ")", ".", "item", "(", ")", "\n", "", "return", "correct", "/", "len", "(", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.metric.my_metric2": [[13, 21], ["torch.no_grad", "range", "len", "torch.topk", "len", "torch.sum().item", "torch.sum"], "function", ["None"], ["", "def", "my_metric2", "(", "output", ",", "target", ",", "k", "=", "3", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "pred", "=", "torch", ".", "topk", "(", "output", ",", "k", ",", "dim", "=", "1", ")", "[", "1", "]", "\n", "assert", "pred", ".", "shape", "[", "0", "]", "==", "len", "(", "target", ")", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "            ", "correct", "+=", "torch", ".", "sum", "(", "pred", "[", ":", ",", "i", "]", "==", "target", ")", ".", "item", "(", ")", "\n", "", "", "return", "correct", "/", "len", "(", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.metric.L2_loss": [[23, 27], ["torch.no_grad", "torch.nn.MSELoss", "torch.nn.MSELoss."], "function", ["None"], ["", "def", "L2_loss", "(", "output", ",", "target", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "loss", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "return", "loss", "(", "output", ",", "target", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.clean_saved.num_checkpoints": [[9, 12], ["glob.glob", "len", "os.path.join"], "function", ["None"], ["def", "num_checkpoints", "(", "path", ")", ":", "\n", "    ", "files", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'*.pth'", ")", ")", "\n", "return", "len", "(", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.clean_saved.collect_satisfied": [[14, 29], ["sorted", "glob.glob", "sorted", "all", "collected.extend", "os.path.join", "glob.glob", "os.path.basename", "os.path.isdir", "os.path.join", "os.path.isdir", "clean_saved.num_checkpoints"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.clean_saved.num_checkpoints"], ["", "def", "collect_satisfied", "(", "args", ")", ":", "\n", "    ", "collected", "=", "[", "]", "\n", "arch_paths", "=", "sorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "args", ".", "saved_dir", ",", "args", ".", "pattern", ")", ")", ")", "\n", "for", "arch_path", "in", "arch_paths", ":", "\n", "        ", "if", "os", ".", "path", ".", "basename", "(", "arch_path", ")", "==", "'runs'", "or", "not", "os", ".", "path", ".", "isdir", "(", "arch_path", ")", ":", "\n", "            ", "continue", "\n", "", "exp_paths", "=", "sorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "arch_path", ",", "'*'", ")", ")", ")", "\n", "assert", "all", "(", "[", "os", ".", "path", ".", "isdir", "(", "exp_path", ")", "for", "exp_path", "in", "exp_paths", "]", ")", "\n", "\n", "exp_paths", "=", "[", "\n", "exp_path", "for", "exp_path", "in", "exp_paths", "\n", "if", "num_checkpoints", "(", "exp_path", ")", "<", "args", ".", "at_least", "\n", "]", "\n", "collected", ".", "extend", "(", "exp_paths", ")", "\n", "", "return", "collected", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.clean_saved.ask_one_by_one": [[31, 49], ["os.path.basename", "os.path.basename", "os.path.join", "print", "print", "os.path.exists", "input", "os.path.dirname", "print", "shutil.rmtree", "os.path.exists", "print", "print", "shutil.rmtree"], "function", ["None"], ["", "def", "ask_one_by_one", "(", "args", ",", "collected", ")", ":", "\n", "    ", "for", "path", "in", "collected", ":", "\n", "        ", "exp_name", "=", "basename", "(", "dirname", "(", "path", ")", ")", "\n", "exp_time", "=", "basename", "(", "path", ")", "\n", "\n", "runs_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "saved_dir", ",", "'runs'", ",", "exp_name", ",", "exp_time", ")", "\n", "print", "(", "'\\nDelete the following directories?'", ")", "\n", "print", "(", "path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "runs_dir", ")", ":", "\n", "            ", "print", "(", "runs_dir", ")", "\n", "", "response", "=", "input", "(", "'[y/N]? '", ")", "\n", "if", "response", "==", "'y'", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "path", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "runs_dir", ")", ":", "\n", "                ", "shutil", ".", "rmtree", "(", "runs_dir", ")", "\n", "", "print", "(", "'Deleted.'", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'No deletion performed.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.clean_saved.clean_empty_exp": [[51, 61], ["clean_saved.clean_empty_exp.walk_clean"], "function", ["None"], ["", "", "", "def", "clean_empty_exp", "(", "args", ")", ":", "\n", "    ", "def", "walk_clean", "(", "root", ")", ":", "\n", "        ", "for", "exp_path", "in", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'*'", ")", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "isdir", "(", "exp_path", ")", ":", "\n", "                ", "continue", "\n", "", "if", "len", "(", "os", ".", "listdir", "(", "exp_path", ")", ")", "==", "0", ":", "\n", "                ", "os", ".", "rmdir", "(", "exp_path", ")", "\n", "\n", "", "", "", "walk_clean", "(", "args", ".", "saved_dir", ")", "\n", "walk_clean", "(", "os", ".", "path", ".", "join", "(", "args", ".", "saved_dir", ",", "'runs'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.clean_saved.ask_all_in_once": [[63, 85], ["print", "input", "os.path.basename", "os.path.basename", "to_delete.append", "print", "os.path.join", "os.path.exists", "print", "print", "print", "os.path.dirname", "to_delete.append", "print", "shutil.rmtree"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "ask_all_in_once", "(", "args", ",", "collected", ")", ":", "\n", "    ", "to_delete", "=", "[", "]", "\n", "print", "(", "'The following directories will be deleted.'", ")", "\n", "for", "path", "in", "collected", ":", "\n", "        ", "exp_name", "=", "basename", "(", "dirname", "(", "path", ")", ")", "\n", "exp_time", "=", "basename", "(", "path", ")", "\n", "to_delete", ".", "append", "(", "path", ")", "\n", "print", "(", "path", ")", "\n", "\n", "runs_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "saved_dir", ",", "'runs'", ",", "exp_name", ",", "exp_time", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "runs_dir", ")", ":", "\n", "            ", "to_delete", ".", "append", "(", "runs_dir", ")", "\n", "print", "(", "runs_dir", ")", "\n", "", "print", "(", ")", "\n", "\n", "", "response", "=", "input", "(", "'[y/N]? '", ")", "\n", "if", "response", "==", "'y'", ":", "\n", "        ", "for", "path", "in", "to_delete", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "path", ")", "\n", "", "print", "(", "'Deleted'", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'No deletion performed.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.compare_results.parse_args": [[13, 76], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-fps'", ",", "'--fps'", ",", "\n", "type", "=", "int", ",", "default", "=", "DEFAULT_FPS", ",", "\n", "help", "=", "\"Output video FPS\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-vs'", ",", "'--root_frames_dirs'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"Video directory names\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-od'", ",", "'--output_dir'", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"Output directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-md'", ",", "'--root_mask_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Masks directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-rp'", ",", "'--result_postfix'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'color'", ",", "\n", "help", "=", "\"Result directory postfix\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-names'", ",", "'--names'", ",", "\n", "nargs", "=", "'+'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "[", "'Input Video'", ",", "'Image-based Inpainting [53]'", ",", "'Patch-based Video Inpainting [33]'", ",", "'VORNet (Ours)'", "]", ",", "\n", "help", "=", "\"Masks directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-n'", ",", "'--test_num'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "100", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-fnwrl'", ",", "'--frame_num_when_repeat_list'", ",", "\n", "type", "=", "int", ",", "\n", "nargs", "=", "'+'", ",", "\n", "default", "=", "[", "1", "]", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--assume_ordered'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "(", "\"Set this if you assume the files of different frames dirs are in\"", "\n", "\"the same order (ignore exact video name matching)\"", ")", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--name_prefix'", ",", "type", "=", "str", ",", "default", "=", "''", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--col'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "\n", "help", "=", "\"how many columns when showing all the videos.\"", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.compare_results.main": [[78, 121], ["utils.util.make_dirs", "range", "utils.util.read_dirnames_under_root", "len", "utils.readers.CompareFramesReader", "utils.readers.CompareFramesReader.write_files_to_video", "utils.util.read_dirnames_under_root", "utils.readers.CompareFramesReader", "utils.readers.CompareFramesReader.write_files_to_video", "os.path.join", "os.path.join", "os.path.join", "range", "os.path.join", "len", "os.listdir", "os.path.join", "os.path.join", "os.listdir", "os.path.join"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_dirnames_under_root", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.FrameReader.write_files_to_video", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_dirnames_under_root", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.FrameReader.write_files_to_video"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "make_dirs", "(", "args", ".", "output_dir", ")", "\n", "# root_frames_dirs: methods' output directories", "\n", "root_frames_dirs", "=", "args", ".", "root_frames_dirs", "\n", "if", "args", ".", "assume_ordered", ":", "\n", "# frames_dirnames[i][j]: target video directory's basename", "\n", "# i: method index, j: video index", "\n", "        ", "frames_dirnames_list", "=", "[", "\n", "read_dirnames_under_root", "(", "root_frames_dir", ")", "\n", "for", "root_frames_dir", "in", "root_frames_dirs", "\n", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "frames_dirnames_list", "[", "0", "]", ")", ")", ":", "\n", "# Find the target video directory of each methods", "\n", "            ", "targets", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "root_frames_dirs", "[", "i", "]", ",", "frames_dirnames_list", "[", "i", "]", "[", "j", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "frames_dirnames_list", ")", ")", "\n", "]", "\n", "# For each target video directory, transform its path if it contains args.result_postfix", "\n", "targets", "=", "[", "\n", "target", "if", "args", ".", "result_postfix", "not", "in", "os", ".", "listdir", "(", "target", ")", "\n", "else", "os", ".", "path", ".", "join", "(", "target", ",", "args", ".", "result_postfix", ")", "\n", "for", "target", "in", "targets", "\n", "]", "\n", "reader", "=", "CompareFramesReader", "(", "targets", ",", "names", "=", "args", ".", "names", ",", "col", "=", "args", ".", "col", ")", "\n", "reader", ".", "write_files_to_video", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "f\"{args.name_prefix}{j:04d}_compare.mp4\"", ")", ",", "\n", "fps", "=", "args", ".", "fps", ",", "frame_num_when_repeat_list", "=", "args", ".", "frame_num_when_repeat_list", "\n", ")", "\n", "\n", "", "", "else", ":", "\n", "        ", "frames_dirnames", "=", "read_dirnames_under_root", "(", "root_frames_dirs", "[", "0", "]", ")", "[", ":", "args", ".", "test_num", "]", "\n", "for", "name", "in", "frames_dirnames", ":", "\n", "            ", "reader", "=", "CompareFramesReader", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "x", ",", "name", ")", "\n", "if", "args", ".", "result_postfix", "not", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "x", ",", "name", ")", ")", "\n", "else", "os", ".", "path", ".", "join", "(", "x", ",", "name", ",", "args", ".", "result_postfix", ")", "\n", "for", "x", "in", "root_frames_dirs", "]", ",", "\n", "names", "=", "args", ".", "names", ",", "col", "=", "args", ".", "col", "\n", "# mask_dir=os.path.join(args.root_mask_dir, name)", "\n", ")", "\n", "reader", ".", "write_files_to_video", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "f\"{args.name_prefix}{name}_compare.mp4\"", ")", ",", "\n", "fps", "=", "args", ".", "fps", ",", "frame_num_when_repeat_list", "=", "args", ".", "frame_num_when_repeat_list", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.FVI_checkpoint_compatibility_transform.parse_args": [[8, 28], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "\"\"\"\n        IMPORTANT NOTE: to run this script, you need to put it under src/ instead of src/scripts\n        due to some unpickling issues of torch.load()\n\n        This script is to modify a checkpoint saved in our previous \"FVI with Gated Conv\" repository.\n        What it will do:\n            1. Add a \"use_skip_connection=True\" tag in the \"arch/args/opts\" entry in the config json.\n            2. Replace names of nn modules that has been changed during the LGTSM development.\n        \"\"\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "'--src'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--dst'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--add_course_net_structures'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'For those older checkpoint, there\\'s no \"Generator.CourseNet\" structures. '", "\n", "'Set this arg to add it manually.'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.FVI_checkpoint_compatibility_transform.rename_conv_to_featureConv": [[30, 45], ["collections.OrderedDict", "collections.OrderedDict", "setattr", "state_dict.items", "state_dict._metadata.items", "k.replace", "re.sub"], "function", ["None"], ["", "def", "rename_conv_to_featureConv", "(", "checkpoint", ")", ":", "\n", "    ", "state_dict", "=", "checkpoint", "[", "'state_dict'", "]", "\n", "new_state_dict", "=", "OrderedDict", "(", "[", "\n", "(", "k", ".", "replace", "(", "'.conv.'", ",", "'.featureConv.'", ")", ",", "v", ")", "\n", "if", "'temporal_discriminator'", "in", "k", "and", "'.conv.'", "in", "k", "else", "(", "k", ",", "v", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", "\n", "]", ")", "\n", "new_metadata", "=", "OrderedDict", "(", "[", "\n", "(", "re", ".", "sub", "(", "r'.conv$'", ",", "'.featureConv'", ",", "k", ")", ",", "v", ")", "\n", "if", "'temporal_discriminator'", "in", "k", "and", "'.conv'", "in", "k", "else", "(", "k", ",", "v", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "_metadata", ".", "items", "(", ")", "\n", "]", ")", "\n", "setattr", "(", "new_state_dict", ",", "'_metadata'", ",", "new_metadata", ")", "\n", "checkpoint", "[", "'state_dict'", "]", "=", "new_state_dict", "\n", "return", "checkpoint", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.FVI_checkpoint_compatibility_transform.add_course_net_structures": [[47, 78], ["collections.OrderedDict", "collections.OrderedDict", "setattr", "any", "any", "FVI_checkpoint_compatibility_transform.add_course_net_structures.transform"], "function", ["None"], ["", "def", "add_course_net_structures", "(", "checkpoint", ")", ":", "\n", "    ", "state_dict", "=", "checkpoint", "[", "'state_dict'", "]", "\n", "downsample_conv_names", "=", "[", "\n", "'conv1'", ",", "'conv2'", ",", "'conv3'", ",", "'conv4'", ",", "'conv5'", ",", "'conv6'", ",", "\n", "'dilated_conv1'", ",", "'dilated_conv2'", ",", "'dilated_conv3'", ",", "'dilated_conv4'", ",", "\n", "'conv7'", ",", "'conv8'", "\n", "]", "\n", "upsample_conv_names", "=", "[", "\n", "'conv9'", ",", "'conv10'", ",", "'conv11'", ",", "'deconv1'", ",", "'deconv2'", "\n", "]", "\n", "\n", "def", "transform", "(", "k", ",", "v", ")", ":", "\n", "        ", "if", "any", "(", "[", "k", ".", "startswith", "(", "name", ")", "for", "name", "in", "upsample_conv_names", "]", ")", ":", "\n", "            ", "out", "=", "(", "'generator.coarse_net.upsample_module.'", "+", "k", ",", "v", ")", "\n", "", "elif", "any", "(", "[", "k", ".", "startswith", "(", "name", ")", "for", "name", "in", "downsample_conv_names", "]", ")", ":", "\n", "            ", "out", "=", "(", "'generator.coarse_net.downsample_module.'", "+", "k", ",", "v", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "(", "k", ",", "v", ")", "\n", "", "return", "out", "\n", "\n", "", "new_state_dict", "=", "OrderedDict", "(", "[", "\n", "transform", "(", "k", ",", "v", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", "\n", "]", ")", "\n", "new_metadata", "=", "OrderedDict", "(", "[", "\n", "transform", "(", "k", ",", "v", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "_metadata", ".", "items", "(", ")", "\n", "]", ")", "\n", "setattr", "(", "new_state_dict", ",", "'_metadata'", ",", "new_metadata", ")", "\n", "checkpoint", "[", "'state_dict'", "]", "=", "new_state_dict", "\n", "return", "checkpoint", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.FVI_checkpoint_compatibility_transform.main": [[80, 96], ["FVI_checkpoint_compatibility_transform.parse_args", "print", "torch.load", "print", "FVI_checkpoint_compatibility_transform.rename_conv_to_featureConv", "print", "torch.save", "print", "print", "FVI_checkpoint_compatibility_transform.add_course_net_structures"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.FVI_checkpoint_compatibility_transform.rename_conv_to_featureConv", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.FVI_checkpoint_compatibility_transform.add_course_net_structures"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "print", "(", "f'\\nLoading the old checkpoint from {args.src}'", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "src", ")", "\n", "\n", "print", "(", "'\\nRenaming state_dict keys and adding the skip connection tag'", ")", "\n", "new_checkpoint", "=", "rename_conv_to_featureConv", "(", "checkpoint", ")", "\n", "new_checkpoint", "[", "'config'", "]", "[", "'arch'", "]", "[", "'args'", "]", "[", "'opts'", "]", "[", "'use_skip_connection'", "]", "=", "True", "\n", "\n", "if", "args", ".", "add_course_net_structures", ":", "\n", "        ", "print", "(", "'\\nAdding course_net structures into checkpoint'", ")", "\n", "new_checkpoint", "=", "add_course_net_structures", "(", "new_checkpoint", ")", "\n", "\n", "", "print", "(", "f'\\nSaving the modified checkpoint into {args.dst}'", ")", "\n", "torch", ".", "save", "(", "new_checkpoint", ",", "args", ".", "dst", ")", "\n", "print", "(", "'\\nDone'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.gen_output_videos.parse_args": [[11, 36], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-id'", ",", "'--input_root_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Input root directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-od'", ",", "'--output_root_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Output root directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-ml'", ",", "'--max_len'", ",", "\n", "type", "=", "int", ",", "default", "=", "999", ",", "\n", "help", "=", "\"Max length of the video\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-ip'", ",", "'--input_postfix'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "''", ",", "\n", "help", "=", "\"Input dir post dirname\"", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.gen_output_videos.main": [[38, 49], ["utils.util.make_dirs", "utils.util.read_dirnames_under_root", "os.path.join", "os.path.join", "utils.readers.FrameReader", "utils.readers.FrameReader.write_files_to_video", "utils.logging_config.logger.error"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_dirnames_under_root", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.FrameReader.write_files_to_video"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "make_dirs", "(", "args", ".", "output_root_dir", ")", "\n", "dirnames", "=", "read_dirnames_under_root", "(", "args", ".", "input_root_dir", ")", "\n", "for", "dirname", "in", "dirnames", ":", "\n", "        ", "try", ":", "\n", "            ", "output_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_root_dir", ",", "f\"{dirname}.mp4\"", ")", "\n", "dirpath", "=", "os", ".", "path", ".", "join", "(", "args", ".", "input_root_dir", ",", "dirname", ",", "args", ".", "input_postfix", ")", "\n", "reader", "=", "FrameReader", "(", "dirpath", ",", "max_length", "=", "args", ".", "max_len", ")", "\n", "reader", ".", "write_files_to_video", "(", "output_path", ")", "\n", "", "except", "Exception", "as", "err", ":", "\n", "            ", "logger", ".", "error", "(", "err", ",", "exc_info", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.leave_32frames.parse_args": [[10, 24], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--src'", ",", "type", "=", "str", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--dst'", ",", "type", "=", "str", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--num'", ",", "type", "=", "int", ",", "\n", "default", "=", "32", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.leave_32frames.get_every": [[26, 28], ["sorted", "glob.glob", "os.path.join"], "function", ["None"], ["", "def", "get_every", "(", "d", ")", ":", "\n", "    ", "return", "sorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "d", ",", "'*'", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.rename.parse_args": [[5, 27], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-d'", ",", "'--base_dir'", ",", "\n", "type", "=", "str", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-p'", ",", "'--print_only'", ",", "\n", "action", "=", "'store_true'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-pf'", ",", "'--postfix'", ",", "\n", "type", "=", "str", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-t'", ",", "'--type'", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ",", "\n", "choices", "=", "[", "'dir'", ",", "'file'", "]", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.rename.main": [[29, 45], ["enumerate", "sorted", "os.path.join", "os.listdir", "os.path.isdir", "os.path.isfile", "os.path.join", "print", "os.rename", "os.path.join.split"], "function", ["None"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "basedir", "=", "args", ".", "base_dir", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "sorted", "(", "os", ".", "listdir", "(", "basedir", ")", ")", ")", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "basedir", ",", "name", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "path", ")", "and", "args", ".", "type", "==", "'file'", ":", "\n", "            ", "continue", "\n", "", "elif", "os", ".", "path", ".", "isfile", "(", "path", ")", "and", "args", ".", "type", "==", "'dir'", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "new_path", "=", "os", ".", "path", ".", "join", "(", "\n", "basedir", ",", "\n", "f'{i:05d}{args.postfix}{\".\" + path.split(\".\")[-1] if args.type == \"file\" else \"\"}'", "\n", ")", "\n", "if", "not", "args", ".", "print_only", ":", "\n", "                ", "os", ".", "rename", "(", "path", ",", "new_path", ")", "\n", "", "print", "(", "f\"Rename {path} ->  {new_path}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.clean_files.parse_args": [[11, 21], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-rd'", ",", "'--root_dir'", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"Root background frames directory\"", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.clean_files.test_all": [[23, 50], ["utils.util.read_dirnames_under_root", "enumerate", "print", "os.path.join", "os.walk", "len", "print", "utils.util.rm_dirs", "os.path.join", "PIL.Image.open", "len", "print", "utils.util.rm_dirs", "len"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_dirnames_under_root", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.rm_dirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.rm_dirs"], ["", "def", "test_all", "(", "\n", "root_bg_frames_dir", ",", "\n", ")", ":", "\n", "    ", "bg_skip_list", "=", "[", "\n", "]", "\n", "bg_frames_dirnames", "=", "read_dirnames_under_root", "(", "\n", "root_bg_frames_dir", ",", "bg_skip_list", "\n", ")", "\n", "\n", "count", "=", "0", "\n", "for", "i", ",", "name", "in", "enumerate", "(", "bg_frames_dirnames", ")", ":", "\n", "        ", "dirname", "=", "os", ".", "path", ".", "join", "(", "root_bg_frames_dir", ",", "name", ")", "\n", "for", "root", ",", "dirs", ",", "names", "in", "os", ".", "walk", "(", "dirname", ")", ":", "\n", "            ", "if", "len", "(", "names", ")", "<", "10", ":", "\n", "                ", "print", "(", "f\"{name} len {len(names)}\"", ")", "\n", "count", "+=", "1", "\n", "rm_dirs", "(", "f\"{root}\"", ",", "ignore_errors", "=", "False", ")", "\n", "continue", "\n", "", "for", "n", "in", "names", ":", "\n", "                ", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "n", ")", "\n", "image", "=", "Image", ".", "open", "(", "path", ")", "\n", "if", "image", ".", "size", "!=", "(", "1280", ",", "720", ")", ":", "\n", "                    ", "count", "+=", "1", "\n", "print", "(", "f\"{name} {image.size}\"", ")", "\n", "rm_dirs", "(", "f\"{root}\"", ",", "ignore_errors", "=", "False", ")", "\n", "", "break", "\n", "", "", "", "print", "(", "f\"Removed {count} / {len(bg_frames_dirnames)}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.extract_frames.Manager.__init__": [[28, 31], ["threading.Lock"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "filepaths", ")", ":", "\n", "        ", "self", ".", "lock", "=", "threading", ".", "Lock", "(", ")", "\n", "self", ".", "filepaths", "=", "filepaths", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.extract_frames.Worker.__init__": [[34, 38], ["threading.Thread.__init__", "str"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "manager", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "str", "(", "name", ")", "\n", "self", ".", "manager", "=", "manager", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.extract_frames.Worker.run": [[39, 49], ["len", "utils.logging_config.logger.info", "extract_frames.save_video_to_frames", "extract_frames.Worker.manager.filepaths.pop", "extract_frames.Worker.split"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.extract_frames.save_video_to_frames"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "while", "len", "(", "self", ".", "manager", ".", "filepaths", ")", ">", "0", ":", "\n", "            ", "with", "self", ".", "manager", ".", "lock", ":", "\n", "                ", "filepath", "=", "self", ".", "manager", ".", "filepaths", ".", "pop", "(", ")", "\n", "", "dirname", "=", "filepath", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "\n", "logger", ".", "info", "(", "f\"Thread {self.name} processing {filepath}\"", ")", "\n", "save_video_to_frames", "(", "\n", "filepath", ",", "args", ".", "output_directory", ",", "args", ".", "max_len", ",", "\n", "args", ".", "min_h", ",", "args", ".", "min_w", ",", "\n", "prefix", "=", "f\"class_{dirname}_\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.extract_frames.parse_args": [[14, 25], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'-rid'", ",", "'--root_input_directory'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'-od'", ",", "'--output_directory'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'-fn'", ",", "'--filename'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'-n'", ",", "'--thread_number'", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'-max_len'", ",", "'--max_len'", ",", "type", "=", "int", ",", "default", "=", "120", ")", "\n", "parser", ".", "add_argument", "(", "'-min_w'", ",", "'--min_w'", ",", "type", "=", "int", ",", "default", "=", "320", ")", "\n", "parser", ".", "add_argument", "(", "'-min_h'", ",", "'--min_h'", ",", "type", "=", "int", ",", "default", "=", "180", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.extract_frames.read_filepaths": [[52, 68], ["sorted", "utils.logging_config.logger.info", "os.listdir", "os.path.join", "utils.logging_config.logger.info", "sorted", "utils.logging_config.logger.info", "os.path.isdir", "os.listdir", "os.path.join", "all_filepaths.append", "len", "len"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "", "", "def", "read_filepaths", "(", "args", ")", ":", "\n", "    ", "dirnames", "=", "sorted", "(", "os", ".", "listdir", "(", "args", ".", "root_input_directory", ")", ")", "\n", "logger", ".", "info", "(", "f\"Total {len(dirnames)} dirs: {dirnames}\"", ")", "\n", "all_filepaths", "=", "[", "]", "\n", "for", "dirname", "in", "dirnames", ":", "\n", "        ", "dirpath", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root_input_directory", ",", "dirname", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "dirpath", ")", ":", "\n", "            ", "continue", "\n", "", "logger", ".", "info", "(", "f\"------------------------- class {dirname}\"", ")", "\n", "filenames", "=", "sorted", "(", "os", ".", "listdir", "(", "dirpath", ")", ")", "\n", "logger", ".", "info", "(", "f\"------------------------- Total {len(filenames)} files\"", ")", "\n", "\n", "for", "filename", "in", "filenames", ":", "\n", "            ", "filepath", "=", "os", ".", "path", ".", "join", "(", "dirpath", ",", "filename", ")", "\n", "all_filepaths", ".", "append", "(", "filepath", ")", "\n", "", "", "return", "all_filepaths", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.extract_frames.main": [[70, 92], ["utils.logging_config.logger.info", "extract_frames.read_filepaths", "extract_frames.Manager", "signal.signal", "range", "threading.currentThread", "threading.enumerate", "utils.logging_config.logger.error", "extract_frames.Worker", "Worker.start", "t.join"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.extract_frames.read_filepaths"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "logger", ".", "info", "(", "args", ")", "\n", "filepaths", "=", "read_filepaths", "(", "args", ")", "\n", "\n", "manager", "=", "Manager", "(", "filepaths", ")", "\n", "\n", "def", "signal_handler", "(", "signum", ",", "frame", ")", ":", "\n", "        ", "manager", ".", "filepaths", "=", "[", "]", "\n", "logger", ".", "error", "(", "\n", "\"Got ctrl+c, set manager filepaths = [], please wait until all workers are done\"", "\n", ")", "\n", "\n", "", "signal", ".", "signal", "(", "signal", ".", "SIGINT", ",", "signal_handler", ")", "\n", "\n", "for", "i", "in", "range", "(", "args", ".", "thread_number", ")", ":", "\n", "        ", "worker", "=", "Worker", "(", "i", ",", "manager", ")", "\n", "worker", ".", "start", "(", ")", "\n", "\n", "", "main_thread", "=", "threading", ".", "currentThread", "(", ")", "\n", "for", "t", "in", "threading", ".", "enumerate", "(", ")", ":", "\n", "        ", "if", "t", "is", "not", "main_thread", ":", "\n", "            ", "t", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.extract_frames.save_video_to_frames": [[94, 113], ["cv2.VideoCapture", "os.path.join", "cv2.VideoCapture.read", "utils.util.make_dirs", "os.path.join", "utils.logging_config.logger.debug", "cv2.imwrite", "[].split", "utils.logging_config.logger.warning", "utils.logging_config.logger.warning", "video_filename.split"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs"], ["", "", "", "def", "save_video_to_frames", "(", "video_filename", ",", "output_dir", ",", "max_len", ",", "min_h", ",", "min_w", ",", "prefix", "=", "''", ")", ":", "\n", "    ", "video_name", "=", "prefix", "+", "video_filename", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "cap", "=", "cv2", ".", "VideoCapture", "(", "video_filename", ")", "\n", "frame_count", "=", "1", "\n", "video_dir", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "video_name", ")", "\n", "while", "frame_count", "<=", "max_len", ":", "\n", "        ", "ret", ",", "img", "=", "cap", ".", "read", "(", ")", "\n", "if", "not", "ret", ":", "\n", "            ", "logger", ".", "warning", "(", "f\"{video_filename} len {frame_count} < max_len {max_len}\"", ")", "\n", "break", "\n", "", "h", ",", "w", ",", "c", "=", "img", ".", "shape", "\n", "if", "h", "<", "min_h", "or", "w", "<", "min_w", ":", "\n", "            ", "logger", ".", "warning", "(", "f\"h {h} < min_h {min_h} or w {w} < min_w {min_w}\"", ")", "\n", "break", "\n", "", "make_dirs", "(", "video_dir", ")", "\n", "output_filename", "=", "os", ".", "path", ".", "join", "(", "video_dir", ",", "f\"{frame_count:04d}.png\"", ")", "\n", "logger", ".", "debug", "(", "f\"  Saving {output_filename}\"", ")", "\n", "cv2", ".", "imwrite", "(", "output_filename", ",", "img", ")", "\n", "frame_count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.reorder.parse_args": [[16, 23], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--target_dir'", ",", "type", "=", "str", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.reorder.get_every": [[25, 27], ["sorted", "glob.glob", "os.path.join"], "function", ["None"], ["", "def", "get_every", "(", "d", ")", ":", "\n", "    ", "return", "sorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "d", ",", "'*'", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.check_len.parse_args": [[9, 29], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-rd'", ",", "'--root_dir'", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"Root background frames directory\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-dl'", ",", "'--dirname_list'", ",", "\n", "type", "=", "str", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "\"Root background frames directory\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-l'", ",", "'--length'", ",", "\n", "type", "=", "int", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.check_len.main": [[31, 43], ["utils.logging_config.logger.info", "enumerate", "open", "os.path.join", "os.listdir", "utils.logging_config.logger.info", "len", "utils.logging_config.logger.error", "line.split", "fin.readlines", "len"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "logger", ".", "info", "(", "f\"Checking {args.root_dir}\"", ")", "\n", "with", "open", "(", "args", ".", "dirname_list", ",", "'r'", ")", "as", "fin", ":", "\n", "        ", "dirnames", "=", "[", "line", ".", "split", "(", ")", "[", "0", "]", "for", "line", "in", "fin", ".", "readlines", "(", ")", "]", "\n", "# dirnames = os.listdir(args.root_dir)", "\n", "", "for", "i", ",", "dirname", "in", "enumerate", "(", "dirnames", ")", ":", "\n", "        ", "if", "i", "%", "2000", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "f\"Checking no. {i}\"", ")", "\n", "", "dirpath", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root_dir", ",", "dirname", ")", "\n", "filenames", "=", "os", ".", "listdir", "(", "dirpath", ")", "\n", "if", "len", "(", "filenames", ")", "!=", "args", ".", "length", ":", "\n", "            ", "logger", ".", "error", "(", "f\"{dirpath} len {len(filenames)}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.dataset_json_generator.get_loader": [[9, 31], ["None"], "function", ["None"], ["def", "get_loader", "(", "type", ",", "ratio", ")", ":", "\n", "    ", "return", "{", "\n", "\"type\"", ":", "\"MaskedFrameDataLoader\"", ",", "\n", "\"args\"", ":", "{", "\n", "\"name\"", ":", "f\"test_{type}_{ratio}\"", ",", "\n", "\"root_videos_dir\"", ":", "\"../dataset/test_20181109/JPEGImages\"", ",", "\n", "\"root_masks_dir\"", ":", "\n", "f\"../dataset/random_masks/test_set/{type}/{ratio}/\"", ",", "\n", "\"root_outputs_dir\"", ":", "\"../VOS_resized2\"", ",", "\n", "\"dataset_args\"", ":", "{", "\n", "\"type\"", ":", "\"video\"", ",", "\n", "\"w\"", ":", "320", ",", "\n", "\"h\"", ":", "180", ",", "\n", "\"sample_length\"", ":", "100", ",", "\n", "\"random_sample\"", ":", "False", ",", "\n", "\"random_sample_mask\"", ":", "False", ",", "\n", "\"mask_type\"", ":", "\"from_start\"", "\n", "}", ",", "\n", "\"batch_size\"", ":", "1", ",", "\n", "\"shuffle\"", ":", "False", ",", "\n", "\"validation_split\"", ":", "0.0", ",", "\n", "\"num_workers\"", ":", "4", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.dataset_json_generator.get_test_data_loaders": [[35, 39], ["dataset_json_generator.get_loader"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.dataset_json_generator.get_loader"], ["", "def", "get_test_data_loaders", "(", "types", ",", "ratios", ")", ":", "\n", "    ", "return", "[", "\n", "get_loader", "(", "type", ",", "ratio", ")", "\n", "for", "type", "in", "types", "for", "ratio", "in", "ratios", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.scripts.dataset_json_generator.save_json": [[42, 51], ["open", "json.dump"], "function", ["None"], ["", "def", "save_json", "(", "name", ",", "dummy_train_data_loader", ",", "test_data_loaders", ")", ":", "\n", "    ", "config", "=", "{", "\n", "\"name\"", ":", "name", ",", "\n", "\"data_loader\"", ":", "dummy_train_data_loader", ",", "\n", "\"test_data_loader\"", ":", "test_data_loaders", ",", "\n", "\"evaluate_test_warp_error\"", ":", "True", "\n", "}", "\n", "with", "open", "(", "f'./dataset_configs/{name}.json'", ",", "'w'", ")", "as", "handle", ":", "\n", "        ", "json", ".", "dump", "(", "config", ",", "handle", ",", "indent", "=", "4", ",", "sort_keys", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.copy_from_base.parse_args": [[11, 29], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--base'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--name'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--dst'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--start'", ",", "type", "=", "int", ",", "\n", "help", "=", "(", "'The start index to copy for each masked ratio directory. '", "\n", "'Index range [args.start, args.start + args.num) will be used. '", "\n", "'For different mask datasets, you should avoid overlapping range.'", ")", "\n", ")", "\n", "parser", ".", "add_argument", "(", "'--num'", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--min_area'", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "'--max_area'", ",", "type", "=", "int", ",", "default", "=", "60", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "assert", "args", ".", "base", "is", "not", "None", "\n", "assert", "args", ".", "dst", "is", "not", "None", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.apply_mask.parse_args": [[12, 28], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-id'", ",", "'--input_dir'", ",", "\n", "type", "=", "str", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-md'", ",", "'--mask_dir'", ",", "\n", "type", "=", "str", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-od'", ",", "'--output_dir'", ",", "\n", "type", "=", "str", ",", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.apply_mask.get_every": [[30, 32], ["sorted", "glob.glob", "os.path.join"], "function", ["None"], ["", "def", "get_every", "(", "d", ")", ":", "\n", "    ", "return", "sorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "d", ",", "'*'", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.apply_mask.apply_video": [[34, 44], ["apply_mask.get_every", "enumerate", "apply_mask.get_every", "PIL.Image.open", "PIL.Image.open", "os.path.basename", "os.path.join", "PIL.Image.fromarray().save", "numpy.array", "numpy.expand_dims", "numpy.array", "PIL.Image.fromarray"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.apply_mask.get_every", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.apply_mask.get_every", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], ["", "def", "apply_video", "(", "video_dir", ",", "mask_dir", ",", "out_dir", ")", ":", "\n", "    ", "mask_paths", "=", "get_every", "(", "mask_dir", ")", "\n", "for", "i", ",", "image_file", "in", "enumerate", "(", "get_every", "(", "video_dir", ")", ")", ":", "\n", "        ", "image", "=", "Image", ".", "open", "(", "image_file", ")", "\n", "mask", "=", "Image", ".", "open", "(", "mask_paths", "[", "i", "]", ")", "\n", "masked", "=", "np", ".", "array", "(", "image", ")", "*", "np", ".", "expand_dims", "(", "np", ".", "array", "(", "mask", ")", ",", "2", ")", "\n", "\n", "name", "=", "os", ".", "path", ".", "basename", "(", "image_file", ")", "\n", "out_file", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "name", ")", "\n", "Image", ".", "fromarray", "(", "masked", ")", ".", "save", "(", "out_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_foresics_masks.parse_args": [[14, 37], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-id'", ",", "'--input_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Output directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-od'", ",", "'--output_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Output directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--img_size'", ",", "\n", "type", "=", "int", ",", "\n", "nargs", "=", "2", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--n_masks'", ",", "\n", "type", "=", "int", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_foresics_masks.get_random_mask": [[39, 54], ["min", "int", "random.randrange", "random.randrange", "PIL.Image.new", "PIL.ImageDraw.Draw", "ImageDraw.Draw.rectangle", "random.random"], "function", ["None"], ["", "def", "get_random_mask", "(", "img_size", "=", "[", "128", ",", "128", "]", ",", "r", "=", "[", "0.375", ",", "0.5", "]", ")", ":", "\n", "# Sample the square width uniformly from r[0] * img_size to r[1] * img_size", "\n", "    ", "shorter_side", "=", "min", "(", "img_size", ")", "\n", "ratio", "=", "random", ".", "random", "(", ")", "*", "(", "r", "[", "1", "]", "-", "r", "[", "0", "]", ")", "+", "r", "[", "0", "]", "\n", "block_size", "=", "int", "(", "shorter_side", "*", "ratio", ")", "\n", "\n", "# Find a random position for mask (but not exceeding the boarder)", "\n", "x0", "=", "random", ".", "randrange", "(", "0", ",", "img_size", "[", "0", "]", "-", "block_size", ")", "\n", "y0", "=", "random", ".", "randrange", "(", "0", ",", "img_size", "[", "1", "]", "-", "block_size", ")", "\n", "x1", ",", "y1", "=", "x0", "+", "block_size", ",", "y0", "+", "block_size", "\n", "\n", "mask", "=", "Image", ".", "new", "(", "mode", "=", "'1'", ",", "size", "=", "(", "img_size", "[", "0", "]", ",", "img_size", "[", "1", "]", ")", ",", "color", "=", "1", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "mask", ")", "\n", "draw", ".", "rectangle", "(", "[", "x0", ",", "y0", ",", "x1", ",", "y1", "]", ",", "fill", "=", "0", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_foresics_masks.gen_masks": [[56, 78], ["utils.util.get_everything_under", "all", "enumerate", "os.path.basename", "len", "os.path.join", "gen_foresics_masks.get_random_mask", "range", "os.path.isdir", "glob.glob", "utils.logging_config.logger.info", "os.path.exists", "os.makedirs", "get_random_mask.save", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_foresics_masks.get_random_mask", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], ["", "def", "gen_masks", "(", "in_direc", ",", "out_direc", ",", "args", ")", ":", "\n", "    ", "assert", "in_direc", "!=", "out_direc", ",", "'input and output directory should not be the same'", "\n", "\n", "video_dirs", "=", "get_everything_under", "(", "in_direc", ")", "\n", "assert", "all", "(", "[", "os", ".", "path", ".", "isdir", "(", "d", ")", "for", "d", "in", "video_dirs", "]", ")", "\n", "\n", "for", "i", ",", "video_dir", "in", "enumerate", "(", "video_dirs", ")", ":", "\n", "        ", "video_name", "=", "os", ".", "path", ".", "basename", "(", "video_dir", ")", "\n", "length", "=", "len", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "video_dir", ",", "'*'", ")", ")", ")", "\n", "assert", "length", ">", "0", ",", "f'Got video in \"{video_dir}\" with no frames'", "\n", "if", "i", "%", "50", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "f'generating masks of video #{i}, name: {video_name}, len: {length}'", ")", "\n", "\n", "", "mask_dir", "=", "os", ".", "path", ".", "join", "(", "out_direc", ",", "video_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "mask_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "mask_dir", ",", "mode", "=", "0o755", ")", "\n", "\n", "", "mask", "=", "get_random_mask", "(", "img_size", "=", "args", ".", "img_size", ")", "\n", "mask_len", "=", "length", "if", "args", ".", "n_masks", "is", "None", "else", "args", ".", "n_masks", "\n", "for", "j", "in", "range", "(", "mask_len", ")", ":", "\n", "            ", "mask_name", "=", "f'{j:05d}.png'", "\n", "mask", ".", "save", "(", "os", ".", "path", ".", "join", "(", "mask_dir", ",", "mask_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.merge_into_base.parse_args": [[16, 24], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'-srcs'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'-dst'", ",", "type", "=", "str", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "assert", "args", ".", "srcs", "is", "not", "None", "\n", "assert", "args", ".", "dst", "is", "not", "None", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args": [[16, 85], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-od'", ",", "'--output_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Output directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-im'", ",", "\n", "'--image_masks'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "\"Set this if you want to generate independent masks in one directory.\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-vl'", ",", "'--video_len'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"Maximum video length (i.e. #mask)\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-ns'", ",", "'--num_stroke'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"Number of stroke in one mask\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-nsb'", ",", "'--num_stroke_bound'", ",", "\n", "type", "=", "int", ",", "\n", "nargs", "=", "2", ",", "\n", "help", "=", "\"Upper/lower bound of number of stroke in one mask\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-n'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"Number of mask to generate\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-sp'", ",", "\n", "'--stroke_preset'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'rand_curve'", ",", "\n", "help", "=", "\"Preset of the stroke parameters\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-iw'", ",", "\n", "'--image_width'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "320", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-ih'", ",", "\n", "'--image_height'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "180", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--cluster_by_area'", ",", "\n", "action", "=", "'store_true'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--leave_boarder_unmasked'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Set this to a number, then a copy of the mask where the mask of boarder is erased.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--redo_without_generation'", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "'Set this, and the script will skip the generation and redo the left tasks'", "\n", "'(uncluster -> erase boarder -> re-cluster)'", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.get_stroke_preset": [[87, 150], ["NotImplementedError"], "function", ["None"], ["", "def", "get_stroke_preset", "(", "stroke_preset", ")", ":", "\n", "    ", "if", "stroke_preset", "==", "'object_like'", ":", "\n", "        ", "return", "{", "\n", "\"nVertexBound\"", ":", "[", "5", ",", "30", "]", ",", "\n", "\"maxHeadSpeed\"", ":", "15", ",", "\n", "\"maxHeadAcceleration\"", ":", "(", "10", ",", "1.5", ")", ",", "\n", "\"brushWidthBound\"", ":", "(", "20", ",", "50", ")", ",", "\n", "\"nMovePointRatio\"", ":", "0.5", ",", "\n", "\"maxPiontMove\"", ":", "10", ",", "\n", "\"maxLineAcceleration\"", ":", "(", "5", ",", "0.5", ")", ",", "\n", "\"boarderGap\"", ":", "None", ",", "\n", "\"maxInitSpeed\"", ":", "10", ",", "\n", "}", "\n", "", "elif", "stroke_preset", "==", "'object_like_middle'", ":", "\n", "        ", "return", "{", "\n", "\"nVertexBound\"", ":", "[", "5", ",", "15", "]", ",", "\n", "\"maxHeadSpeed\"", ":", "8", ",", "\n", "\"maxHeadAcceleration\"", ":", "(", "4", ",", "1.5", ")", ",", "\n", "\"brushWidthBound\"", ":", "(", "20", ",", "50", ")", ",", "\n", "\"nMovePointRatio\"", ":", "0.5", ",", "\n", "\"maxPiontMove\"", ":", "5", ",", "\n", "\"maxLineAcceleration\"", ":", "(", "5", ",", "0.5", ")", ",", "\n", "\"boarderGap\"", ":", "None", ",", "\n", "\"maxInitSpeed\"", ":", "10", ",", "\n", "}", "\n", "", "elif", "stroke_preset", "==", "'object_like_small'", ":", "\n", "        ", "return", "{", "\n", "\"nVertexBound\"", ":", "[", "5", ",", "20", "]", ",", "\n", "\"maxHeadSpeed\"", ":", "7", ",", "\n", "\"maxHeadAcceleration\"", ":", "(", "3.5", ",", "1.5", ")", ",", "\n", "\"brushWidthBound\"", ":", "(", "10", ",", "30", ")", ",", "\n", "\"nMovePointRatio\"", ":", "0.5", ",", "\n", "\"maxPiontMove\"", ":", "5", ",", "\n", "\"maxLineAcceleration\"", ":", "(", "3", ",", "0.5", ")", ",", "\n", "\"boarderGap\"", ":", "None", ",", "\n", "\"maxInitSpeed\"", ":", "4", ",", "\n", "}", "\n", "", "elif", "stroke_preset", "==", "'rand_curve'", ":", "\n", "        ", "return", "{", "\n", "\"nVertexBound\"", ":", "[", "10", ",", "30", "]", ",", "\n", "\"maxHeadSpeed\"", ":", "20", ",", "\n", "\"maxHeadAcceleration\"", ":", "(", "15", ",", "0.5", ")", ",", "\n", "\"brushWidthBound\"", ":", "(", "3", ",", "10", ")", ",", "\n", "\"nMovePointRatio\"", ":", "0.5", ",", "\n", "\"maxPiontMove\"", ":", "3", ",", "\n", "\"maxLineAcceleration\"", ":", "(", "5", ",", "0.5", ")", ",", "\n", "\"boarderGap\"", ":", "None", ",", "\n", "\"maxInitSpeed\"", ":", "6", "\n", "}", "\n", "", "elif", "stroke_preset", "==", "'rand_curve_small'", ":", "\n", "        ", "return", "{", "\n", "\"nVertexBound\"", ":", "[", "6", ",", "22", "]", ",", "\n", "\"maxHeadSpeed\"", ":", "12", ",", "\n", "\"maxHeadAcceleration\"", ":", "(", "8", ",", "0.5", ")", ",", "\n", "\"brushWidthBound\"", ":", "(", "2.5", ",", "5", ")", ",", "\n", "\"nMovePointRatio\"", ":", "0.5", ",", "\n", "\"maxPiontMove\"", ":", "1.5", ",", "\n", "\"maxLineAcceleration\"", ":", "(", "3", ",", "0.5", ")", ",", "\n", "\"boarderGap\"", ":", "None", ",", "\n", "\"maxInitSpeed\"", ":", "3", "\n", "}", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "f'The stroke presetting \"{stroke_preset}\" does not exist.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.copy_masks_without_boarder": [[152, 180], ["utils.logging_config.logger.info", "shutil.copytree", "enumerate", "PIL.Image.fromarray().convert", "utils.util.get_everything_under", "numpy.asarray().astype", "utils.logging_config.logger.info", "PIL.Image.open", "gen_masks.copy_masks_without_boarder.erase_mask_boarder"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "", "def", "copy_masks_without_boarder", "(", "root_dir", ",", "args", ")", ":", "\n", "    ", "def", "erase_mask_boarder", "(", "mask", ",", "gap", ")", ":", "\n", "        ", "pix", "=", "np", ".", "asarray", "(", "mask", ")", ".", "astype", "(", "'uint8'", ")", "*", "255", "\n", "pix", "[", ":", "gap", ",", ":", "]", "=", "255", "\n", "pix", "[", "-", "gap", ":", ",", ":", "]", "=", "255", "\n", "pix", "[", ":", ",", ":", "gap", "]", "=", "255", "\n", "pix", "[", ":", ",", "-", "gap", ":", "]", "=", "255", "\n", "return", "Image", ".", "fromarray", "(", "pix", ")", ".", "convert", "(", "'1'", ")", "\n", "\n", "", "wo_boarder_dir", "=", "root_dir", "+", "'_noBoarder'", "\n", "logger", ".", "info", "(", "'Copying all masks'", ")", "\n", "shutil", ".", "copytree", "(", "root_dir", ",", "wo_boarder_dir", ")", "\n", "\n", "for", "i", ",", "filename", "in", "enumerate", "(", "get_everything_under", "(", "wo_boarder_dir", ")", ")", ":", "\n", "        ", "if", "i", "%", "100", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "f'Erasing {filename}\\'s boarder'", ")", "\n", "", "if", "args", ".", "image_masks", ":", "\n", "            ", "mask", "=", "Image", ".", "open", "(", "filename", ")", "\n", "mask_wo_boarder", "=", "erase_mask_boarder", "(", "mask", ",", "args", ".", "leave_boarder_unmasked", ")", "\n", "mask_wo_boarder", ".", "save", "(", "filename", ")", "\n", "", "else", ":", "\n", "# filename is a diretory containing multiple mask files", "\n", "            ", "for", "f", "in", "get_everything_under", "(", "filename", ",", "pattern", "=", "'*.png'", ")", ":", "\n", "                ", "mask", "=", "Image", ".", "open", "(", "f", ")", "\n", "mask_wo_boarder", "=", "erase_mask_boarder", "(", "mask", ",", "args", ".", "leave_boarder_unmasked", ")", "\n", "mask_wo_boarder", ".", "save", "(", "f", ")", "\n", "\n", "", "", "", "return", "wo_boarder_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.cluster_by_masked_area": [[182, 215], ["utils.logging_config.logger.info", "utils.util.make_dirs", "numpy.arange", "enumerate", "shutil.rmtree", "os.rename", "clustered_subdirs.append", "utils.util.get_everything_under", "enumerate", "utils.util.make_dir_under_root", "utils.logging_config.logger.info", "utils.mask_generators.get_masked_ratio", "numpy.mean", "str", "PIL.Image.open", "shutil.move", "utils.mask_generators.get_masked_ratio", "PIL.Image.open", "utils.util.get_everything_under"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dir_under_root", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_masked_ratio", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_masked_ratio", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under"], ["", "def", "cluster_by_masked_area", "(", "root_dir", ",", "args", ")", ":", "\n", "    ", "logger", ".", "info", "(", "f'Clustering {root_dir}'", ")", "\n", "clustered_dir", "=", "root_dir", "+", "'_clustered'", "\n", "make_dirs", "(", "clustered_dir", ")", "\n", "radius", "=", "5", "\n", "\n", "# all masks with ratio in x +- radius will be stored in sub-directory x", "\n", "clustered_centors", "=", "np", ".", "arange", "(", "radius", ",", "100", ",", "radius", "*", "2", ")", "\n", "clustered_subdirs", "=", "[", "]", "\n", "for", "c", "in", "clustered_centors", ":", "\n", "# make sub-directories for each ratio range", "\n", "        ", "clustered_subdirs", ".", "append", "(", "make_dir_under_root", "(", "clustered_dir", ",", "str", "(", "c", ")", ")", ")", "\n", "\n", "", "for", "i", ",", "filename", "in", "enumerate", "(", "get_everything_under", "(", "root_dir", ")", ")", ":", "\n", "        ", "if", "i", "%", "100", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "f'clustering {filename}'", ")", "\n", "", "if", "args", ".", "image_masks", ":", "\n", "            ", "ratio", "=", "get_masked_ratio", "(", "Image", ".", "open", "(", "filename", ")", ")", "\n", "", "else", ":", "\n", "# filename is a diretory containing multiple mask files", "\n", "            ", "ratio", "=", "np", ".", "mean", "(", "[", "\n", "get_masked_ratio", "(", "Image", ".", "open", "(", "f", ")", ")", "\n", "for", "f", "in", "get_everything_under", "(", "filename", ",", "pattern", "=", "'*.png'", ")", "\n", "]", ")", "\n", "\n", "# find the nearest centor", "\n", "", "for", "i", ",", "c", "in", "enumerate", "(", "clustered_centors", ")", ":", "\n", "            ", "if", "c", "-", "radius", "<=", "ratio", "*", "100", "<=", "c", "+", "radius", ":", "\n", "                ", "shutil", ".", "move", "(", "filename", ",", "clustered_subdirs", "[", "i", "]", ")", "\n", "break", "\n", "\n", "", "", "", "shutil", ".", "rmtree", "(", "root_dir", ")", "\n", "os", ".", "rename", "(", "clustered_dir", ",", "root_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.decide_nStroke": [[217, 224], ["numpy.random.randint", "ValueError"], "function", ["None"], ["", "def", "decide_nStroke", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "num_stroke", "is", "not", "None", ":", "\n", "        ", "return", "args", ".", "num_stroke", "\n", "", "elif", "args", ".", "num_stroke_bound", "is", "not", "None", ":", "\n", "        ", "return", "np", ".", "random", ".", "randint", "(", "args", ".", "num_stroke_bound", "[", "0", "]", ",", "args", ".", "num_stroke_bound", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'One of \"-ns\" or \"-nsb\" is needed'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.main": [[226, 274], ["gen_masks.get_stroke_preset", "utils.util.make_dirs", "utils.util.get_everything_under", "utils.logging_config.logger.info", "gen_masks.copy_masks_without_boarder", "gen_masks.cluster_by_masked_area", "len", "utils.util.get_everything_under", "os.rmdir", "range", "range", "gen_masks.cluster_by_masked_area", "utils.util.get_everything_under", "os.path.isdir", "shutil.move", "gen_masks.decide_nStroke", "mask.save", "utils.util.make_dir_under_root", "utils.readers.MaskReader", "gen_masks.decide_nStroke", "utils.mask_generators.get_video_masks_by_moving_random_stroke", "utils.readers.MaskReader.set_files", "utils.readers.MaskReader.save_files", "utils.logging_config.logger.info", "utils.mask_generators.get_video_masks_by_moving_random_stroke", "os.path.join"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.get_stroke_preset", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.copy_masks_without_boarder", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.cluster_by_masked_area", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.cluster_by_masked_area", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.decide_nStroke", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.make_dir_under_root", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.mask_scripts.gen_masks.decide_nStroke", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_video_masks_by_moving_random_stroke", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.set_files", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.save_files", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.mask_generators.get_video_masks_by_moving_random_stroke"], ["", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "preset", "=", "get_stroke_preset", "(", "args", ".", "stroke_preset", ")", "\n", "make_dirs", "(", "args", ".", "output_dir", ")", "\n", "\n", "if", "args", ".", "redo_without_generation", ":", "\n", "        ", "assert", "(", "len", "(", "get_everything_under", "(", "args", ".", "output_dir", ")", ")", ">", "0", ")", "\n", "# put back clustered masks", "\n", "for", "clustered_subdir", "in", "get_everything_under", "(", "args", ".", "output_dir", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "isdir", "(", "clustered_subdir", ")", ":", "\n", "                ", "continue", "\n", "", "for", "f", "in", "get_everything_under", "(", "clustered_subdir", ")", ":", "\n", "                ", "shutil", ".", "move", "(", "f", ",", "args", ".", "output_dir", ")", "\n", "", "os", ".", "rmdir", "(", "clustered_subdir", ")", "\n", "\n", "", "", "else", ":", "\n", "        ", "if", "args", ".", "image_masks", ":", "\n", "            ", "for", "i", "in", "range", "(", "args", ".", "n", ")", ":", "\n", "                ", "if", "i", "%", "100", "==", "0", ":", "\n", "                    ", "logger", ".", "info", "(", "f'Generating mask number {i:07d}'", ")", "\n", "", "nStroke", "=", "decide_nStroke", "(", "args", ")", "\n", "mask", "=", "get_video_masks_by_moving_random_stroke", "(", "\n", "video_len", "=", "1", ",", "imageWidth", "=", "args", ".", "image_width", ",", "imageHeight", "=", "args", ".", "image_height", ",", "\n", "nStroke", "=", "nStroke", ",", "**", "preset", "\n", ")", "[", "0", "]", "\n", "mask", ".", "save", "(", "os", ".", "path", ".", "join", "(", "args", ".", "output_dir", ",", "f'{i:07d}.png'", ")", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "args", ".", "n", ")", ":", "\n", "                ", "mask_dir", "=", "make_dir_under_root", "(", "args", ".", "output_dir", ",", "f'{i:05d}'", ")", "\n", "mask_reader", "=", "MaskReader", "(", "mask_dir", ",", "read", "=", "False", ")", "\n", "\n", "nStroke", "=", "decide_nStroke", "(", "args", ")", "\n", "masks", "=", "get_video_masks_by_moving_random_stroke", "(", "\n", "imageWidth", "=", "args", ".", "image_width", ",", "imageHeight", "=", "args", ".", "image_height", ",", "\n", "video_len", "=", "args", ".", "video_len", ",", "nStroke", "=", "nStroke", ",", "**", "preset", ")", "\n", "\n", "mask_reader", ".", "set_files", "(", "masks", ")", "\n", "mask_reader", ".", "save_files", "(", "output_dir", "=", "mask_reader", ".", "dir_name", ")", "\n", "\n", "", "", "", "if", "args", ".", "leave_boarder_unmasked", "is", "not", "None", ":", "\n", "        ", "logger", ".", "info", "(", "f'Create a copy of all output and erase the copies\\' s boarder '", "\n", "f'by {args.leave_boarder_unmasked} pixels'", ")", "\n", "dir_leave_boarder", "=", "copy_masks_without_boarder", "(", "args", ".", "output_dir", ",", "args", ")", "\n", "if", "args", ".", "cluster_by_area", ":", "\n", "            ", "cluster_by_masked_area", "(", "dir_leave_boarder", ",", "args", ")", "\n", "\n", "", "", "if", "args", ".", "cluster_by_area", ":", "\n", "        ", "cluster_by_masked_area", "(", "args", ".", "output_dir", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.data_loaders.MaskedFrameDataLoader.__init__": [[10, 41], ["utils.directory_IO.RootInputDirectories", "utils.directory_IO.RootOutputDirectories", "Dataset", "base.BaseDataLoader.__init__", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "root_videos_dir", ",", "root_masks_dir", ",", "root_outputs_dir", ",", "\n", "dataset_args", ",", "\n", "batch_size", ",", "shuffle", ",", "validation_split", ",", "\n", "num_workers", ",", "video_names_filename", "=", "None", ",", "training", "=", "True", ",", "name", "=", "None", "\n", ")", ":", "\n", "# Input directories", "\n", "        ", "self", ".", "rids", "=", "RootInputDirectories", "(", "\n", "root_videos_dir", ",", "root_masks_dir", ",", "video_names_filename", "=", "video_names_filename", ")", "\n", "\n", "# Output directories", "\n", "self", ".", "rods", "=", "RootOutputDirectories", "(", "root_outputs_dir", ")", "\n", "self", ".", "name", "=", "name", "\n", "\n", "# Dataset, default is video", "\n", "if", "'type'", "not", "in", "dataset_args", ":", "\n", "            ", "dataset_args", "[", "'type'", "]", "=", "'video'", "\n", "", "if", "dataset_args", "[", "'type'", "]", "==", "'video'", ":", "\n", "            ", "Dataset", "=", "VideoFrameAndMaskDataset", "\n", "", "elif", "dataset_args", "[", "'type'", "]", "==", "'CelebA'", ":", "\n", "            ", "Dataset", "=", "CelebAFrameAndMaskDataset", "\n", "", "elif", "dataset_args", "[", "'type'", "]", "==", "'Places2'", ":", "\n", "            ", "Dataset", "=", "Places2FrameAndMaskDataset", "\n", "", "elif", "dataset_args", "[", "'type'", "]", "==", "'super_resolution'", ":", "\n", "            ", "Dataset", "=", "VideoSuperResolutionDataset", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Dataset type {dataset_args['type']}\"", ")", "\n", "", "self", ".", "dataset", "=", "Dataset", "(", "\n", "self", ".", "rids", ",", "self", ".", "rods", ",", "dataset_args", ",", "\n", ")", "\n", "super", "(", ")", ".", "__init__", "(", "self", ".", "dataset", ",", "batch_size", ",", "shuffle", ",", "validation_split", ",", "num_workers", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset.__init__": [[26, 67], ["args.get", "args.get", "args.get", "args.get", "args.get", "args.get", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "len", "data_loader.transform.GroupScale", "data_loader.transform.GroupRandomCrop", "data_loader.transform.GroupRandomHorizontalFlip", "data_loader.transform.GroupScale", "data_loader.transform.Stack", "data_loader.transform.ToTorchFormatTensor", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "rids", ":", "RootInputDirectories", ",", "\n", "rods", ":", "RootOutputDirectories", ",", "\n", "args", ":", "dict", ",", "\n", ")", ":", "\n", "        ", "self", ".", "rids", "=", "rids", "\n", "self", ".", "video_dirnames", "=", "rids", ".", "video_dirnames", "\n", "self", ".", "mask_dirnames", "=", "rids", ".", "mask_dirnames", "\n", "self", ".", "rods", "=", "rods", "\n", "self", ".", "sample_length", "=", "args", "[", "'sample_length'", "]", "\n", "self", ".", "random_sample", "=", "args", "[", "'random_sample'", "]", "\n", "self", ".", "random_sample_mask", "=", "args", "[", "'random_sample_mask'", "]", "\n", "# self.sample_period = args['sample_period'] if 'sample_period' in args else 1", "\n", "self", ".", "random_sample_period_max", "=", "args", ".", "get", "(", "'random_sample_period_max'", ",", "1", ")", "\n", "\n", "self", ".", "guidance", "=", "args", ".", "get", "(", "'guidance'", ",", "\"none\"", ")", "\n", "self", ".", "sigma", "=", "args", ".", "get", "(", "'edge_sigma'", ",", "2", ")", "\n", "\n", "self", ".", "size", "=", "self", ".", "w", ",", "self", ".", "h", "=", "(", "args", "[", "'w'", "]", ",", "args", "[", "'h'", "]", ")", "\n", "self", ".", "mask_type", "=", "args", "[", "'mask_type'", "]", "\n", "\n", "self", ".", "do_augment", "=", "args", ".", "get", "(", "'do_augment'", ",", "False", ")", "\n", "self", ".", "skip_last", "=", "args", ".", "get", "(", "'skip_last'", ",", "False", ")", "\n", "\n", "self", ".", "mask_dilation", "=", "args", ".", "get", "(", "'mask_dilation'", ",", "0", ")", "\n", "\n", "self", ".", "_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "GroupScale", "(", "(", "int", "(", "self", ".", "h", "*", "1.2", ")", ",", "int", "(", "self", ".", "w", "*", "1.2", ")", ")", ")", ",", "\n", "GroupRandomCrop", "(", "(", "self", ".", "h", ",", "self", ".", "w", ")", ")", ",", "\n", "GroupRandomHorizontalFlip", "(", ")", ",", "\n", "]", ")", "\n", "self", ".", "_to_tensors", "=", "transforms", ".", "Compose", "(", "[", "\n", "GroupScale", "(", "(", "self", ".", "h", ",", "self", ".", "w", ")", ")", ",", "\n", "Stack", "(", ")", ",", "\n", "ToTorchFormatTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "self", ".", "data_len", "=", "len", "(", "self", ".", "rids", ")", "\n", "if", "self", ".", "skip_last", ":", "\n", "            ", "self", ".", "data_len", "-=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset.__len__": [[68, 70], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "data_len", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset._get_sample_index_from_video": [[71, 79], ["max", "random.randint"], "methods", ["None"], ["", "def", "_get_sample_index_from_video", "(", "self", ",", "length", ")", ":", "\n", "        ", "if", "self", ".", "random_sample", ":", "\n", "            ", "max_start", "=", "max", "(", "0", ",", "length", "-", "self", ".", "sample_length", "-", "1", ")", "\n", "start", "=", "random", ".", "randint", "(", "0", ",", "max_start", ")", "\n", "", "else", ":", "\n", "            ", "start", "=", "0", "\n", "", "end", "=", "start", "+", "self", ".", "sample_length", "\n", "return", "start", ",", "end", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset._get_masks": [[80, 105], ["len", "utils.readers.SegmentationReader", "len", "m.filter", "utils.readers.FrameReader", "utils.readers.FrameReader", "max", "random.randint", "len", "PIL.ImageFilter.MinFilter", "NotImplementedError", "utils.readers.FrameReader", "len"], "methods", ["None"], ["", "def", "_get_masks", "(", "self", ",", "size", ",", "start_idx", ",", "end_idx", ",", "fg_dir", ")", ":", "\n", "        ", "input_len", "=", "end_idx", "-", "start_idx", "\n", "if", "self", ".", "mask_type", "==", "'fg'", ":", "\n", "            ", "masks", "=", "SegmentationReader", "(", "fg_dir", ")", "[", "start_idx", ":", "end_idx", "]", "\n", "if", "self", ".", "mask_dilation", ">", "0", ":", "\n", "                ", "masks", "=", "[", "m", ".", "filter", "(", "ImageFilter", ".", "MinFilter", "(", "self", ".", "mask_dilation", ")", ")", "for", "m", "in", "masks", "]", "\n", "", "", "elif", "self", ".", "mask_type", "==", "'as_video'", ":", "\n", "            ", "masks", "=", "FrameReader", "(", "fg_dir", ")", "[", "start_idx", ":", "end_idx", "]", "\n", "", "elif", "self", ".", "mask_type", "==", "'random'", ":", "\n", "            ", "masks", "=", "FrameReader", "(", "fg_dir", ")", "\n", "# This is to sample a random clip of the mask video.", "\n", "# If gt video is longer than mask video, mask_type=\"random\" may yeild zero masks, then", "\n", "# using mask_type='random_segment can solve it'", "\n", "max_start", "=", "max", "(", "0", ",", "len", "(", "masks", ")", "-", "input_len", "-", "1", ")", "\n", "start", "=", "random", ".", "randint", "(", "0", ",", "max_start", ")", "\n", "masks", "=", "masks", "[", "start", ":", "start", "+", "input_len", "]", "\n", "", "elif", "self", ".", "mask_type", "==", "'from_start'", ":", "\n", "            ", "masks", "=", "FrameReader", "(", "fg_dir", ")", "[", "0", ":", "end_idx", "-", "start_idx", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Mask type {self.mask_type} not exists\"", ")", "\n", "", "if", "len", "(", "masks", ")", "!=", "input_len", ":", "\n", "            ", "assert", "len", "(", "masks", ")", "<", "input_len", "\n", "# when mask video is shorter than input video, repeat last mask frame", "\n", "masks", "+=", "[", "masks", "[", "-", "1", "]", "]", "*", "(", "input_len", "-", "len", "(", "masks", ")", ")", "\n", "", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset._process_vds": [[106, 155], ["random.randint", "utils.readers.FrameReader", "len", "dataset.VideoFrameAndMaskDataset._get_sample_index_from_video", "dataset.VideoFrameAndMaskDataset._get_masks", "dataset.VideoFrameAndMaskDataset._to_tensors", "len", "utils.logging_config.logger.warning", "dataset.VideoFrameAndMaskDataset._transform", "dataset.VideoFrameAndMaskDataset._to_tensors", "dataset.VideoFrameAndMaskDataset._to_tensors", "gt_tensors.narrow.narrow.narrow", "skimage.feature.canny", "PIL.Image.fromarray", "dataset.VideoFrameAndMaskDataset.append", "dataset.VideoFrameAndMaskDataset._to_tensors", "skimage.color.rgb2gray", "PIL.Image.fromarray.astype", "get_landmarks_contour", "PIL.Image.fromarray", "dataset.VideoFrameAndMaskDataset.append", "len", "len", "numpy.array", "numpy.array", "PIL.Image.fromarray.astype"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset._get_sample_index_from_video", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoSuperResolutionDataset._get_masks", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.face.get_landmarks_contour", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "_process_vds", "(", "self", ",", "vds", ")", ":", "\n", "        ", "sample_period", "=", "random", ".", "randint", "(", "1", ",", "self", ".", "random_sample_period_max", ")", "\n", "gt_reader", "=", "FrameReader", "(", "vds", ".", "frames_dir", ",", "sample_period", "=", "sample_period", ")", "\n", "# print(f\"s{sample_period}, len{len(gt_reader)}\")", "\n", "video_length", "=", "len", "(", "gt_reader", ")", "\n", "start", ",", "end", "=", "self", ".", "_get_sample_index_from_video", "(", "video_length", ")", "\n", "gt_frames", "=", "gt_reader", "[", "start", ":", "end", "]", "\n", "if", "len", "(", "gt_frames", ")", "<", "self", ".", "sample_length", ":", "\n", "            ", "logger", ".", "warning", "(", "\n", "f\"len frames {len(gt_frames)} reader {len(gt_reader)} < sample_length {self.sample_length}\"", "\n", "f\" dir {vds.frames_dir}\"", ")", "\n", "", "masks", "=", "self", ".", "_get_masks", "(", "self", ".", "size", ",", "start", ",", "end", ",", "vds", ".", "mask_dir", ")", "\n", "\n", "if", "self", ".", "do_augment", ":", "\n", "            ", "gt_frames", "=", "self", ".", "_transform", "(", "gt_frames", ")", "\n", "\n", "# Edge guidance", "\n", "", "guidances", "=", "[", "]", "\n", "if", "self", ".", "guidance", "==", "\"edge\"", ":", "\n", "            ", "for", "frame", "in", "gt_frames", ":", "\n", "                ", "edge", "=", "canny", "(", "rgb2gray", "(", "np", ".", "array", "(", "frame", ")", ")", ",", "sigma", "=", "self", ".", "sigma", ")", "\n", "edge", "=", "Image", ".", "fromarray", "(", "edge", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "guidances", ".", "append", "(", "edge", ")", "\n", "", "guidances", "=", "self", ".", "_to_tensors", "(", "guidances", ")", "\n", "", "elif", "self", ".", "guidance", "==", "\"landmarks\"", ":", "\n", "            ", "from", "utils", ".", "face", "import", "get_landmarks_contour", "\n", "for", "frame", "in", "gt_frames", ":", "\n", "                ", "edge", "=", "get_landmarks_contour", "(", "np", ".", "array", "(", "frame", ")", ")", "\n", "edge", "=", "Image", ".", "fromarray", "(", "edge", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "guidances", ".", "append", "(", "edge", ")", "\n", "", "guidances", "=", "self", ".", "_to_tensors", "(", "guidances", ")", "\n", "\n", "# To tensors", "\n", "", "gt_tensors", "=", "self", ".", "_to_tensors", "(", "gt_frames", ")", "\n", "mask_tensors", "=", "self", ".", "_to_tensors", "(", "masks", ")", "[", ":", "video_length", "]", "\n", "\n", "# Deal with VOR test set problem: some ground truth videos are longer than masks", "\n", "if", "gt_tensors", ".", "shape", "[", "0", "]", "!=", "mask_tensors", ".", "shape", "[", "0", "]", ":", "\n", "            ", "assert", "gt_tensors", ".", "shape", "[", "0", "]", ">", "mask_tensors", ".", "shape", "[", "0", "]", "\n", "gt_tensors", "=", "gt_tensors", ".", "narrow", "(", "0", ",", "0", ",", "mask_tensors", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# Mask input", "\n", "", "input_tensors", "=", "gt_tensors", "*", "mask_tensors", "\n", "\n", "return", "{", "\n", "\"input_tensors\"", ":", "input_tensors", ",", "\n", "\"mask_tensors\"", ":", "mask_tensors", ",", "\n", "\"gt_tensors\"", ":", "gt_tensors", ",", "\n", "\"guidances\"", ":", "guidances", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset._get_mask_name": [[157, 163], ["random.choice"], "methods", ["None"], ["", "def", "_get_mask_name", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "random_sample_mask", ":", "\n", "            ", "mask_name", "=", "random", ".", "choice", "(", "self", ".", "mask_dirnames", ")", "\n", "", "else", ":", "\n", "            ", "mask_name", "=", "self", ".", "mask_dirnames", "[", "index", "]", "\n", "", "return", "mask_name", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset.__getitem__": [[164, 172], ["dataset.VideoFrameAndMaskDataset._get_mask_name", "utils.directory_IO.VideoDirectories", "dataset.VideoFrameAndMaskDataset._process_vds"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset._get_mask_name", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset._process_vds"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "video_name", "=", "self", ".", "video_dirnames", "[", "index", "]", "\n", "mask_name", "=", "self", ".", "_get_mask_name", "(", "index", ")", "\n", "\n", "vds", "=", "VideoDirectories", "(", "\n", "self", ".", "rids", ",", "self", ".", "rods", ",", "video_name", ",", "mask_name", "\n", ")", "\n", "return", "self", ".", "_process_vds", "(", "vds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.CelebAFrameAndMaskDataset.__init__": [[175, 190], ["dataset.VideoFrameAndMaskDataset.__init__", "utils.util.read_filenames_from_dir", "utils.util.read_filenames_from_dir", "len"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_filenames_from_dir", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.read_filenames_from_dir"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "rids", ":", "RootInputDirectories", ",", "\n", "rods", ":", "RootOutputDirectories", ",", "\n", "args", ":", "dict", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "rids", ",", "rods", ",", "args", ")", "\n", "self", ".", "image_dir", "=", "rids", ".", "root_videos_dir", "\n", "self", ".", "mask_dir", "=", "rids", ".", "root_masks_dir", "\n", "self", ".", "image_filenames", "=", "read_filenames_from_dir", "(", "self", ".", "image_dir", ",", "self", ".", "__class__", ".", "__name__", ")", "\n", "# The dirname here is actually fileanmes", "\n", "self", ".", "mask_dirnames", "=", "read_filenames_from_dir", "(", "self", ".", "mask_dir", ",", "self", ".", "__class__", ".", "__name__", ")", "\n", "self", ".", "crop_rect", "=", "(", "0", ",", "0", ",", "args", "[", "'w'", "]", ",", "args", "[", "'h'", "]", ")", "\n", "\n", "self", ".", "data_len", "=", "len", "(", "self", ".", "image_filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.CelebAFrameAndMaskDataset.__getitem__": [[191, 207], ["dataset.CelebAFrameAndMaskDataset._to_tensors", "dataset.CelebAFrameAndMaskDataset._to_tensors", "PIL.Image.open().crop", "PIL.Image.open().crop", "PIL.Image.open", "PIL.Image.open", "dataset.CelebAFrameAndMaskDataset._get_mask_name"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoFrameAndMaskDataset._get_mask_name"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# Get image data like a video with length=1", "\n", "        ", "gt_frames", "=", "[", "Image", ".", "open", "(", "self", ".", "image_filenames", "[", "index", "]", ")", ".", "crop", "(", "self", ".", "crop_rect", ")", "]", "\n", "masks", "=", "[", "Image", ".", "open", "(", "self", ".", "_get_mask_name", "(", "index", ")", ")", ".", "crop", "(", "self", ".", "crop_rect", ")", "]", "\n", "\n", "# To tensors", "\n", "gt_tensors", "=", "self", ".", "_to_tensors", "(", "gt_frames", ")", "\n", "mask_tensors", "=", "self", ".", "_to_tensors", "(", "masks", ")", "\n", "\n", "# Mask input", "\n", "input_tensors", "=", "gt_tensors", "*", "mask_tensors", "\n", "\n", "return", "{", "\n", "\"input_tensors\"", ":", "input_tensors", ",", "\n", "\"mask_tensors\"", ":", "mask_tensors", ",", "\n", "\"gt_tensors\"", ":", "gt_tensors", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.Places2FrameAndMaskDataset.__init__": [[211, 228], ["dataset.VideoFrameAndMaskDataset.__init__", "args.get", "len", "len", "utils.util.get_everything_under", "utils.util.get_everything_under", "len", "len", "utils.logging_config.logger.warning", "len", "len"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.util.get_everything_under"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "rids", ":", "RootInputDirectories", ",", "\n", "rods", ":", "RootOutputDirectories", ",", "\n", "args", ":", "dict", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "rids", ",", "rods", ",", "args", ")", "\n", "self", ".", "image_dir", "=", "rids", ".", "root_videos_dir", "\n", "self", ".", "mask_dir", "=", "rids", ".", "root_masks_dir", "\n", "self", ".", "max_num", "=", "args", ".", "get", "(", "'max_num'", ",", "None", ")", "\n", "self", ".", "image_filenames", "=", "get_everything_under", "(", "self", ".", "image_dir", ",", "pattern", "=", "\"*/*.jpg\"", ")", "[", ":", "self", ".", "max_num", "]", "\n", "self", ".", "mask_filenames", "=", "get_everything_under", "(", "self", ".", "mask_dir", ",", "pattern", "=", "\"*/*.png\"", ")", "[", ":", "self", ".", "max_num", "]", "\n", "if", "len", "(", "self", ".", "image_filenames", ")", ">", "len", "(", "self", ".", "mask_filenames", ")", ":", "\n", "            ", "logger", ".", "warning", "(", "f\"image num {len(self.image_filenames)} > mask num {len(self.mask_filenames)}\"", ")", "\n", "\n", "", "self", ".", "data_len", "=", "len", "(", "self", ".", "image_filenames", ")", "\n", "self", ".", "mask_len", "=", "len", "(", "self", ".", "mask_filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.Places2FrameAndMaskDataset.__getitem__": [[229, 248], ["dataset.Places2FrameAndMaskDataset._to_tensors", "dataset.Places2FrameAndMaskDataset._to_tensors", "PIL.Image.open().convert().resize", "random.choice", "PIL.Image.open().resize", "PIL.Image.open().convert", "PIL.Image.open", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# Places2 are 256 * 256, and here we resize it to w * h", "\n", "        ", "gt_frames", "=", "[", "Image", ".", "open", "(", "self", ".", "image_filenames", "[", "index", "]", ")", ".", "convert", "(", "\"RGB\"", ")", ".", "resize", "(", "self", ".", "size", ")", "]", "# Some are L mode", "\n", "mask_filename", "=", "random", ".", "choice", "(", "self", ".", "mask_filenames", ")", "if", "self", ".", "random_sample_mask", "else", "self", ".", "mask_filenames", "[", "index", "%", "self", ".", "mask_len", "]", "\n", "masks", "=", "[", "Image", ".", "open", "(", "mask_filename", ")", ".", "resize", "(", "self", ".", "size", ")", "]", "\n", "\n", "# Get image data like a video with length=1", "\n", "# To tensors", "\n", "gt_tensors", "=", "self", ".", "_to_tensors", "(", "gt_frames", ")", "\n", "mask_tensors", "=", "self", ".", "_to_tensors", "(", "masks", ")", "\n", "\n", "# Mask input", "\n", "input_tensors", "=", "gt_tensors", "*", "mask_tensors", "\n", "\n", "return", "{", "\n", "\"input_tensors\"", ":", "input_tensors", ",", "\n", "\"mask_tensors\"", ":", "mask_tensors", ",", "\n", "\"gt_tensors\"", ":", "gt_tensors", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoSuperResolutionDataset.__init__": [[252, 263], ["args.pop", "dataset.VideoFrameAndMaskDataset.__init__", "PIL.Image.new", "dataset.VideoSuperResolutionDataset._get_spatial_sr_mask"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoSuperResolutionDataset._get_spatial_sr_mask"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "rids", ":", "RootInputDirectories", ",", "\n", "rods", ":", "RootOutputDirectories", ",", "\n", "args", ":", "dict", "\n", ")", ":", "\n", "        ", "self", ".", "upsample_rates", "=", "args", ".", "pop", "(", "'upsample_rates'", ")", "\n", "assert", "[", "rate", ">=", "1.0", "for", "rate", "in", "self", ".", "upsample_rates", "]", "\n", "super", "(", ")", ".", "__init__", "(", "rids", ",", "rods", ",", "args", ")", "\n", "self", ".", "black_mask", "=", "Image", ".", "new", "(", "mode", "=", "'1'", ",", "size", "=", "(", "self", ".", "size", "[", "0", "]", ",", "self", ".", "size", "[", "1", "]", ")", ",", "color", "=", "0", ")", "\n", "self", ".", "spatial_sr_mask", "=", "self", ".", "_get_spatial_sr_mask", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoSuperResolutionDataset._get_spatial_sr_mask": [[264, 273], ["PIL.Image.new", "PIL.Image.new.load", "numpy.arange", "int", "numpy.arange", "numpy.round", "int", "numpy.round"], "methods", ["None"], ["", "def", "_get_spatial_sr_mask", "(", "self", ")", ":", "\n", "        ", "mask", "=", "Image", ".", "new", "(", "mode", "=", "'1'", ",", "size", "=", "(", "self", ".", "size", "[", "0", "]", ",", "self", ".", "size", "[", "1", "]", ")", ",", "color", "=", "0", ")", "\n", "pixels", "=", "mask", ".", "load", "(", ")", "\n", "for", "i", "in", "np", ".", "arange", "(", "0", ",", "self", ".", "size", "[", "0", "]", ",", "self", ".", "upsample_rates", "[", "1", "]", ")", ":", "\n", "            ", "round_i", "=", "int", "(", "np", ".", "round", "(", "i", ")", ")", "\n", "for", "j", "in", "np", ".", "arange", "(", "0", ",", "self", ".", "size", "[", "1", "]", ",", "self", ".", "upsample_rates", "[", "2", "]", ")", ":", "\n", "                ", "round_j", "=", "int", "(", "np", ".", "round", "(", "j", ")", ")", "\n", "pixels", "[", "round_i", ",", "round_j", "]", "=", "1", "\n", "", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.dataset.VideoSuperResolutionDataset._get_masks": [[274, 285], ["int", "round", "numpy.arange", "range"], "methods", ["None"], ["", "def", "_get_masks", "(", "self", ",", "size", ",", "start_idx", ",", "end_idx", ",", "fg_dir", ")", ":", "\n", "        ", "revealed_ts", "=", "[", "\n", "int", "(", "round", "(", "t", ")", ")", "\n", "for", "t", "in", "np", ".", "arange", "(", "0", ",", "self", ".", "sample_length", ",", "self", ".", "upsample_rates", "[", "0", "]", ")", "\n", "]", "\n", "masks", "=", "[", "\n", "self", ".", "spatial_sr_mask", "if", "t", "in", "revealed_ts", "\n", "else", "self", ".", "black_mask", "\n", "for", "t", "in", "range", "(", "self", ".", "sample_length", ")", "\n", "]", "\n", "return", "masks", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupRandomCrop.__init__": [[14, 19], ["isinstance", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupRandomCrop.__call__": [[20, 38], ["list", "random.randint", "random.randint", "list.append", "list.append", "img.crop"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "\n", "        ", "w", ",", "h", "=", "img_group", "[", "0", "]", ".", "size", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "\n", "out_images", "=", "list", "(", ")", "\n", "\n", "x1", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "tw", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "th", ")", "\n", "\n", "for", "img", "in", "img_group", ":", "\n", "            ", "assert", "(", "img", ".", "size", "[", "0", "]", "==", "w", "and", "img", ".", "size", "[", "1", "]", "==", "h", ")", "\n", "if", "w", "==", "tw", "and", "h", "==", "th", ":", "\n", "                ", "out_images", ".", "append", "(", "img", ")", "\n", "", "else", ":", "\n", "                ", "out_images", ".", "append", "(", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "tw", ",", "y1", "+", "th", ")", ")", ")", "\n", "\n", "", "", "return", "out_images", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupCenterCrop.__init__": [[41, 43], ["torchvision.transforms.CenterCrop"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "self", ".", "worker", "=", "torchvision", ".", "transforms", ".", "CenterCrop", "(", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupCenterCrop.__call__": [[44, 46], ["transform.GroupCenterCrop.worker"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "return", "[", "self", ".", "worker", "(", "img", ")", "for", "img", "in", "img_group", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupRandomHorizontalFlip.__init__": [[51, 53], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "is_flow", "=", "False", ")", ":", "\n", "        ", "self", ".", "is_flow", "=", "is_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupRandomHorizontalFlip.__call__": [[54, 64], ["random.random", "img.transpose", "range", "len", "PIL.ImageOps.invert"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ",", "is_flow", "=", "False", ")", ":", "\n", "        ", "v", "=", "random", ".", "random", "(", ")", "\n", "if", "v", "<", "0.5", ":", "\n", "            ", "ret", "=", "[", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "for", "img", "in", "img_group", "]", "\n", "if", "self", ".", "is_flow", ":", "\n", "                ", "for", "i", "in", "range", "(", "0", ",", "len", "(", "ret", ")", ",", "2", ")", ":", "\n", "                    ", "ret", "[", "i", "]", "=", "ImageOps", ".", "invert", "(", "ret", "[", "i", "]", ")", "# invert flow pixel values when flipping", "\n", "", "", "return", "ret", "\n", "", "else", ":", "\n", "            ", "return", "img_group", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupNormalize.__init__": [[67, 70], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupNormalize.__call__": [[71, 80], ["zip", "t.sub_().div_", "len", "len", "tensor.size", "tensor.size", "t.sub_"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "rep_mean", "=", "self", ".", "mean", "*", "(", "tensor", ".", "size", "(", ")", "[", "0", "]", "//", "len", "(", "self", ".", "mean", ")", ")", "\n", "rep_std", "=", "self", ".", "std", "*", "(", "tensor", ".", "size", "(", ")", "[", "0", "]", "//", "len", "(", "self", ".", "std", ")", ")", "\n", "\n", "# TODO: make efficient", "\n", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "tensor", ",", "rep_mean", ",", "rep_std", ")", ":", "\n", "            ", "t", ".", "sub_", "(", "m", ")", ".", "div_", "(", "s", ")", "\n", "\n", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupScale.__init__": [[91, 93], ["torchvision.transforms.Resize"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "self", ".", "worker", "=", "torchvision", ".", "transforms", ".", "Resize", "(", "size", ",", "interpolation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupScale.__call__": [[94, 96], ["transform.GroupScale.worker"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "return", "[", "self", ".", "worker", "(", "img", ")", "for", "img", "in", "img_group", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupOverSample.__init__": [[99, 106], ["transform.GroupScale", "isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "crop_size", ",", "scale_size", "=", "None", ")", ":", "\n", "        ", "self", ".", "crop_size", "=", "crop_size", "if", "not", "isinstance", "(", "crop_size", ",", "int", ")", "else", "(", "crop_size", ",", "crop_size", ")", "\n", "\n", "if", "scale_size", "is", "not", "None", ":", "\n", "            ", "self", ".", "scale_worker", "=", "GroupScale", "(", "scale_size", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "scale_worker", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupOverSample.__call__": [[107, 133], ["transform.GroupMultiScaleCrop.fill_fix_offset", "list", "transform.GroupOverSample.scale_worker", "list", "list", "enumerate", "list.extend", "list.extend", "img.crop", "list.append", "img.crop.copy().transpose", "list.append", "list.append", "img.crop.copy", "PIL.ImageOps.invert"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupMultiScaleCrop.fill_fix_offset", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "\n", "        ", "if", "self", ".", "scale_worker", "is", "not", "None", ":", "\n", "            ", "img_group", "=", "self", ".", "scale_worker", "(", "img_group", ")", "\n", "\n", "", "image_w", ",", "image_h", "=", "img_group", "[", "0", "]", ".", "size", "\n", "crop_w", ",", "crop_h", "=", "self", ".", "crop_size", "\n", "\n", "offsets", "=", "GroupMultiScaleCrop", ".", "fill_fix_offset", "(", "False", ",", "image_w", ",", "image_h", ",", "crop_w", ",", "crop_h", ")", "\n", "oversample_group", "=", "list", "(", ")", "\n", "for", "o_w", ",", "o_h", "in", "offsets", ":", "\n", "            ", "normal_group", "=", "list", "(", ")", "\n", "flip_group", "=", "list", "(", ")", "\n", "for", "i", ",", "img", "in", "enumerate", "(", "img_group", ")", ":", "\n", "                ", "crop", "=", "img", ".", "crop", "(", "(", "o_w", ",", "o_h", ",", "o_w", "+", "crop_w", ",", "o_h", "+", "crop_h", ")", ")", "\n", "normal_group", ".", "append", "(", "crop", ")", "\n", "flip_crop", "=", "crop", ".", "copy", "(", ")", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "if", "img", ".", "mode", "==", "'L'", "and", "i", "%", "2", "==", "0", ":", "\n", "                    ", "flip_group", ".", "append", "(", "ImageOps", ".", "invert", "(", "flip_crop", ")", ")", "\n", "", "else", ":", "\n", "                    ", "flip_group", ".", "append", "(", "flip_crop", ")", "\n", "\n", "", "", "oversample_group", ".", "extend", "(", "normal_group", ")", "\n", "oversample_group", ".", "extend", "(", "flip_group", ")", "\n", "", "return", "oversample_group", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupMultiScaleCrop.__init__": [[137, 144], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "scales", "=", "None", ",", "max_distort", "=", "1", ",", "fix_crop", "=", "True", ",", "more_fix_crop", "=", "True", ")", ":", "\n", "        ", "self", ".", "scales", "=", "scales", "if", "scales", "is", "not", "None", "else", "[", "1", ",", ".875", ",", ".75", ",", ".66", "]", "\n", "self", ".", "max_distort", "=", "max_distort", "\n", "self", ".", "fix_crop", "=", "fix_crop", "\n", "self", ".", "more_fix_crop", "=", "more_fix_crop", "\n", "self", ".", "input_size", "=", "input_size", "if", "not", "isinstance", "(", "input_size", ",", "int", ")", "else", "[", "input_size", ",", "input_size", "]", "\n", "self", ".", "interpolation", "=", "Image", ".", "BILINEAR", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupMultiScaleCrop.__call__": [[145, 154], ["transform.GroupMultiScaleCrop._sample_crop_size", "img.crop", "img.resize"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupMultiScaleCrop._sample_crop_size"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "\n", "        ", "im_size", "=", "img_group", "[", "0", "]", ".", "size", "\n", "\n", "crop_w", ",", "crop_h", ",", "offset_w", ",", "offset_h", "=", "self", ".", "_sample_crop_size", "(", "im_size", ")", "\n", "crop_img_group", "=", "[", "img", ".", "crop", "(", "(", "offset_w", ",", "offset_h", ",", "offset_w", "+", "crop_w", ",", "offset_h", "+", "crop_h", ")", ")", "for", "img", "in", "img_group", "]", "\n", "ret_img_group", "=", "[", "img", ".", "resize", "(", "(", "self", ".", "input_size", "[", "0", "]", ",", "self", ".", "input_size", "[", "1", "]", ")", ",", "self", ".", "interpolation", ")", "\n", "for", "img", "in", "crop_img_group", "]", "\n", "return", "ret_img_group", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupMultiScaleCrop._sample_crop_size": [[155, 178], ["min", "enumerate", "random.choice", "int", "enumerate", "random.randint", "random.randint", "transform.GroupMultiScaleCrop._sample_fix_offset", "abs", "abs", "abs", "pairs.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupMultiScaleCrop._sample_fix_offset", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "_sample_crop_size", "(", "self", ",", "im_size", ")", ":", "\n", "        ", "image_w", ",", "image_h", "=", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", "\n", "\n", "# find a crop size", "\n", "base_size", "=", "min", "(", "image_w", ",", "image_h", ")", "\n", "crop_sizes", "=", "[", "int", "(", "base_size", "*", "x", ")", "for", "x", "in", "self", ".", "scales", "]", "\n", "crop_h", "=", "[", "self", ".", "input_size", "[", "1", "]", "if", "abs", "(", "x", "-", "self", ".", "input_size", "[", "1", "]", ")", "<", "3", "else", "x", "for", "x", "in", "crop_sizes", "]", "\n", "crop_w", "=", "[", "self", ".", "input_size", "[", "0", "]", "if", "abs", "(", "x", "-", "self", ".", "input_size", "[", "0", "]", ")", "<", "3", "else", "x", "for", "x", "in", "crop_sizes", "]", "\n", "\n", "pairs", "=", "[", "]", "\n", "for", "i", ",", "h", "in", "enumerate", "(", "crop_h", ")", ":", "\n", "            ", "for", "j", ",", "w", "in", "enumerate", "(", "crop_w", ")", ":", "\n", "                ", "if", "abs", "(", "i", "-", "j", ")", "<=", "self", ".", "max_distort", ":", "\n", "                    ", "pairs", ".", "append", "(", "(", "w", ",", "h", ")", ")", "\n", "\n", "", "", "", "crop_pair", "=", "random", ".", "choice", "(", "pairs", ")", "\n", "if", "not", "self", ".", "fix_crop", ":", "\n", "            ", "w_offset", "=", "random", ".", "randint", "(", "0", ",", "image_w", "-", "crop_pair", "[", "0", "]", ")", "\n", "h_offset", "=", "random", ".", "randint", "(", "0", ",", "image_h", "-", "crop_pair", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "w_offset", ",", "h_offset", "=", "self", ".", "_sample_fix_offset", "(", "image_w", ",", "image_h", ",", "crop_pair", "[", "0", "]", ",", "crop_pair", "[", "1", "]", ")", "\n", "\n", "", "return", "crop_pair", "[", "0", "]", ",", "crop_pair", "[", "1", "]", ",", "w_offset", ",", "h_offset", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupMultiScaleCrop._sample_fix_offset": [[179, 182], ["transform.GroupMultiScaleCrop.fill_fix_offset", "random.choice"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupMultiScaleCrop.fill_fix_offset"], ["", "def", "_sample_fix_offset", "(", "self", ",", "image_w", ",", "image_h", ",", "crop_w", ",", "crop_h", ")", ":", "\n", "        ", "offsets", "=", "self", ".", "fill_fix_offset", "(", "self", ".", "more_fix_crop", ",", "image_w", ",", "image_h", ",", "crop_w", ",", "crop_h", ")", "\n", "return", "random", ".", "choice", "(", "offsets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupMultiScaleCrop.fill_fix_offset": [[183, 207], ["list", "list.append", "list.append", "list.append", "list.append", "list.append", "list.append", "list.append", "list.append", "list.append", "list.append", "list.append", "list.append", "list.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "@", "staticmethod", "\n", "def", "fill_fix_offset", "(", "more_fix_crop", ",", "image_w", ",", "image_h", ",", "crop_w", ",", "crop_h", ")", ":", "\n", "        ", "w_step", "=", "(", "image_w", "-", "crop_w", ")", "//", "4", "\n", "h_step", "=", "(", "image_h", "-", "crop_h", ")", "//", "4", "\n", "\n", "ret", "=", "list", "(", ")", "\n", "ret", ".", "append", "(", "(", "0", ",", "0", ")", ")", "# upper left", "\n", "ret", ".", "append", "(", "(", "4", "*", "w_step", ",", "0", ")", ")", "# upper right", "\n", "ret", ".", "append", "(", "(", "0", ",", "4", "*", "h_step", ")", ")", "# lower left", "\n", "ret", ".", "append", "(", "(", "4", "*", "w_step", ",", "4", "*", "h_step", ")", ")", "# lower right", "\n", "ret", ".", "append", "(", "(", "2", "*", "w_step", ",", "2", "*", "h_step", ")", ")", "# center", "\n", "\n", "if", "more_fix_crop", ":", "\n", "            ", "ret", ".", "append", "(", "(", "0", ",", "2", "*", "h_step", ")", ")", "# center left", "\n", "ret", ".", "append", "(", "(", "4", "*", "w_step", ",", "2", "*", "h_step", ")", ")", "# center right", "\n", "ret", ".", "append", "(", "(", "2", "*", "w_step", ",", "4", "*", "h_step", ")", ")", "# lower center", "\n", "ret", ".", "append", "(", "(", "2", "*", "w_step", ",", "0", "*", "h_step", ")", ")", "# upper center", "\n", "\n", "ret", ".", "append", "(", "(", "1", "*", "w_step", ",", "1", "*", "h_step", ")", ")", "# upper left quarter", "\n", "ret", ".", "append", "(", "(", "3", "*", "w_step", ",", "1", "*", "h_step", ")", ")", "# upper right quarter", "\n", "ret", ".", "append", "(", "(", "1", "*", "w_step", ",", "3", "*", "h_step", ")", ")", "# lower left quarter", "\n", "ret", ".", "append", "(", "(", "3", "*", "w_step", ",", "3", "*", "h_step", ")", ")", "# lower righ quarter", "\n", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupRandomSizedCrop.__init__": [[216, 219], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.GroupRandomSizedCrop.__call__": [[220, 254], ["range", "random.uniform", "int", "int", "list", "transform.GroupScale", "transform.GroupRandomCrop", "GroupRandomCrop.", "random.uniform", "round", "round", "random.random", "random.randint", "random.randint", "img.crop.crop.crop", "list.append", "GroupScale.", "math.sqrt", "math.sqrt", "img.crop.crop.resize"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "for", "attempt", "in", "range", "(", "10", ")", ":", "\n", "            ", "area", "=", "img_group", "[", "0", "]", ".", "size", "[", "0", "]", "*", "img_group", "[", "0", "]", ".", "size", "[", "1", "]", "\n", "target_area", "=", "random", ".", "uniform", "(", "0.08", ",", "1.0", ")", "*", "area", "\n", "aspect_ratio", "=", "random", ".", "uniform", "(", "3.", "/", "4", ",", "4.", "/", "3", ")", "\n", "\n", "w", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "*", "aspect_ratio", ")", ")", ")", "\n", "h", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "/", "aspect_ratio", ")", ")", ")", "\n", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "                ", "w", ",", "h", "=", "h", ",", "w", "\n", "\n", "", "if", "w", "<=", "img_group", "[", "0", "]", ".", "size", "[", "0", "]", "and", "h", "<=", "img_group", "[", "0", "]", ".", "size", "[", "1", "]", ":", "\n", "                ", "x1", "=", "random", ".", "randint", "(", "0", ",", "img_group", "[", "0", "]", ".", "size", "[", "0", "]", "-", "w", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "img_group", "[", "0", "]", ".", "size", "[", "1", "]", "-", "h", ")", "\n", "found", "=", "True", "\n", "break", "\n", "", "", "else", ":", "\n", "            ", "found", "=", "False", "\n", "x1", "=", "0", "\n", "y1", "=", "0", "\n", "\n", "", "if", "found", ":", "\n", "            ", "out_group", "=", "list", "(", ")", "\n", "for", "img", "in", "img_group", ":", "\n", "                ", "img", "=", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "w", ",", "y1", "+", "h", ")", ")", "\n", "assert", "(", "img", ".", "size", "==", "(", "w", ",", "h", ")", ")", "\n", "out_group", ".", "append", "(", "img", ".", "resize", "(", "(", "self", ".", "size", ",", "self", ".", "size", ")", ",", "self", ".", "interpolation", ")", ")", "\n", "", "return", "out_group", "\n", "", "else", ":", "\n", "# Fallback", "\n", "            ", "scale", "=", "GroupScale", "(", "self", ".", "size", ",", "interpolation", "=", "self", ".", "interpolation", ")", "\n", "crop", "=", "GroupRandomCrop", "(", "self", ".", "size", ")", "\n", "return", "crop", "(", "scale", "(", "img_group", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.Stack.__init__": [[258, 260], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "roll", "=", "False", ")", ":", "\n", "        ", "self", ".", "roll", "=", "roll", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.Stack.__call__": [[261, 275], ["numpy.stack", "img.convert", "NotImplementedError", "numpy.expand_dims", "numpy.stack", "numpy.stack", "numpy.array"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_group", ")", ":", "\n", "        ", "mode", "=", "img_group", "[", "0", "]", ".", "mode", "\n", "if", "mode", "==", "'1'", ":", "\n", "            ", "img_group", "=", "[", "img", ".", "convert", "(", "'L'", ")", "for", "img", "in", "img_group", "]", "\n", "mode", "=", "'L'", "\n", "", "if", "mode", "==", "'L'", ":", "\n", "            ", "return", "np", ".", "stack", "(", "[", "np", ".", "expand_dims", "(", "x", ",", "2", ")", "for", "x", "in", "img_group", "]", ",", "axis", "=", "2", ")", "\n", "", "elif", "mode", "==", "'RGB'", ":", "\n", "            ", "if", "self", ".", "roll", ":", "\n", "                ", "return", "np", ".", "stack", "(", "[", "np", ".", "array", "(", "x", ")", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "for", "x", "in", "img_group", "]", ",", "axis", "=", "2", ")", "\n", "", "else", ":", "\n", "                ", "return", "np", ".", "stack", "(", "img_group", ",", "axis", "=", "2", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "f\"Image mode {mode}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.ToTorchFormatTensor.__init__": [[280, 282], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "div", "=", "True", ")", ":", "\n", "        ", "self", ".", "div", "=", "div", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.ToTorchFormatTensor.__call__": [[283, 296], ["isinstance", "torch.from_numpy().permute().contiguous", "torch.ByteTensor", "img.transpose().transpose().contiguous.transpose().transpose().contiguous.view", "img.transpose().transpose().contiguous.transpose().transpose().contiguous.transpose().transpose().contiguous", "img.transpose().transpose().contiguous.transpose().transpose().contiguous.float().div", "img.transpose().transpose().contiguous.transpose().transpose().contiguous.float", "torch.ByteStorage.from_buffer", "len", "torch.from_numpy().permute", "pic.tobytes", "img.transpose().transpose().contiguous.transpose().transpose().contiguous.transpose().transpose", "img.transpose().transpose().contiguous.transpose().transpose().contiguous.float", "torch.from_numpy", "img.transpose().transpose().contiguous.transpose().transpose().contiguous.transpose"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "pic", ")", ":", "\n", "        ", "if", "isinstance", "(", "pic", ",", "np", ".", "ndarray", ")", ":", "\n", "# handle numpy array", "\n", "            ", "img", "=", "torch", ".", "from_numpy", "(", "pic", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "# img: [L, C, H, W]", "\n", "", "else", ":", "\n", "# handle PIL Image", "\n", "            ", "img", "=", "torch", ".", "ByteTensor", "(", "torch", ".", "ByteStorage", ".", "from_buffer", "(", "pic", ".", "tobytes", "(", ")", ")", ")", "\n", "img", "=", "img", ".", "view", "(", "pic", ".", "size", "[", "1", "]", ",", "pic", ".", "size", "[", "0", "]", ",", "len", "(", "pic", ".", "mode", ")", ")", "\n", "# put it from HWC to CHW format", "\n", "# yikes, this transpose takes 80% of the loading time/CPU", "\n", "img", "=", "img", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "0", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "", "return", "img", ".", "float", "(", ")", ".", "div", "(", "255", ")", "if", "self", ".", "div", "else", "img", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data_loader.transform.IdentityTransform.__call__": [[300, 302], ["None"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer.__init__": [[23, 54], ["base.BaseTrainer.__init__", "model.loss.AdversarialLoss", "config[].get", "evaluate.init_i3d_model", "torchvision.transforms.ToPILImage", "config.get", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.init_i3d_model"], ["def", "__init__", "(", "\n", "self", ",", "model", ",", "losses", ",", "metrics", ",", "\n", "optimizer_g", ",", "optimizer_d_s", ",", "optimizer_d_t", ",", "resume", ",", "config", ",", "\n", "data_loader", ",", "valid_data_loader", "=", "None", ",", "lr_scheduler", "=", "None", ",", "\n", "train_logger", "=", "None", ",", "learn_mask", "=", "True", ",", "test_data_loader", "=", "None", ",", "\n", "pretrained_path", "=", "None", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "model", ",", "losses", ",", "metrics", ",", "optimizer_g", ",", "\n", "optimizer_d_s", ",", "optimizer_d_t", ",", "resume", ",", "config", ",", "train_logger", ",", "\n", "pretrained_path", "\n", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "data_loader", "=", "data_loader", "\n", "self", ".", "valid_data_loader", "=", "valid_data_loader", "\n", "self", ".", "test_data_loader", "=", "test_data_loader", "\n", "self", ".", "do_validation", "=", "self", ".", "valid_data_loader", "is", "not", "None", "\n", "self", ".", "lr_scheduler", "=", "lr_scheduler", "\n", "self", ".", "log_step", "=", "self", ".", "config", "[", "'visualization'", "]", "[", "'log_step'", "]", "\n", "self", ".", "loss_gan_s_w", "=", "config", "[", "'gan_losses'", "]", "[", "'loss_gan_spatial_weight'", "]", "\n", "self", ".", "loss_gan_t_w", "=", "config", "[", "'gan_losses'", "]", "[", "'loss_gan_temporal_weight'", "]", "\n", "self", ".", "adv_loss_fn", "=", "AdversarialLoss", "(", ")", "\n", "self", ".", "evaluate_score", "=", "config", "[", "'trainer'", "]", ".", "get", "(", "'evaluate_score'", ",", "True", ")", "\n", "self", ".", "store_gated_values", "=", "False", "\n", "self", ".", "printlog", "=", "False", "\n", "\n", "if", "self", ".", "test_data_loader", "is", "not", "None", ":", "\n", "            ", "self", ".", "toPILImage", "=", "ToPILImage", "(", ")", "\n", "self", ".", "evaluate_test_warp_error", "=", "config", ".", "get", "(", "'evaluate_test_warp_error'", ",", "False", ")", "\n", "self", ".", "test_output_root_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "'test_outputs'", ")", "\n", "", "init_i3d_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._store_gated_values": [[55, 79], ["trainer.Trainer.model.generator.coarse_net.upsample_module.named_children", "trainer.Trainer.model.generator.coarse_net.downsample_module.named_children", "isinstance", "target.transpose.transpose.transpose", "range", "os.path.join", "trainer.Trainer._store_gated_values.save_target"], "methods", ["None"], ["", "def", "_store_gated_values", "(", "self", ",", "out_dir", ")", ":", "\n", "        ", "from", "model", ".", "blocks", "import", "GatedConv", ",", "GatedDeconv", "\n", "\n", "def", "save_target", "(", "child", ",", "out_subdir", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "out_subdir", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "out_subdir", ")", "\n", "", "if", "isinstance", "(", "child", ",", "GatedConv", ")", ":", "\n", "                ", "target", "=", "child", ".", "gated_values", "[", "0", "]", "\n", "", "elif", "isinstance", "(", "child", ",", "GatedDeconv", ")", ":", "\n", "                ", "target", "=", "child", ".", "conv", ".", "gated_values", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'should be gated conv or gated deconv'", ")", "\n", "", "target", "=", "target", ".", "transpose", "(", "0", ",", "1", ")", "\n", "for", "t", "in", "range", "(", "target", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "for", "c", "in", "range", "(", "target", ".", "shape", "[", "1", "]", ")", ":", "\n", "                    ", "out_file", "=", "os", ".", "path", ".", "join", "(", "out_subdir", ",", "f'time{t:03d}_channel{c:04d}.png'", ")", "\n", "self", ".", "toPILImage", "(", "target", "[", "t", ",", "c", ":", "c", "+", "1", "]", ")", ".", "save", "(", "out_file", ")", "\n", "\n", "", "", "", "for", "key", ",", "child", "in", "self", ".", "model", ".", "generator", ".", "coarse_net", ".", "upsample_module", ".", "named_children", "(", ")", ":", "\n", "            ", "out_subdir", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "f'upsample_{key}'", ")", "\n", "save_target", "(", "child", ",", "out_subdir", ")", "\n", "", "for", "key", ",", "child", "in", "self", ".", "model", ".", "generator", ".", "coarse_net", ".", "downsample_module", ".", "named_children", "(", ")", ":", "\n", "            ", "out_subdir", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "f'downsample_{key}'", ")", "\n", "save_target", "(", "child", ",", "out_subdir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._evaluate_data_loader": [[80, 164], ["os.path.join", "os.path.join", "torch.no_grad", "enumerate", "numpy.concatenate", "numpy.concatenate", "evaluate.get_fid_score", "trainer.Trainer.writer.set_step", "trainer.Trainer._write_images", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar", "trainer.Trainer._process_data", "trainer.Trainer._unpack_data", "outputs[].cpu.clamp", "outputs[].cpu", "targets[].cpu", "masks[].cpu", "trainer.Trainer.writer.add_scalar", "os.path.join", "trainer.Trainer._store_gated_values", "numpy.concatenate.append", "numpy.concatenate.append", "len", "os.path.join", "trainer.Trainer.logger.debug", "utils.readers.save_frames_to_dir", "os.path.join", "trainer.Trainer.logger.debug", "utils.readers.save_frames_to_dir", "trainer.Trainer._evaluate_test_video", "evaluate.get_i3d_activations().cpu().numpy", "evaluate.get_i3d_activations().cpu().numpy", "trainer.Trainer.toPILImage", "trainer.Trainer.toPILImage", "evaluate.get_i3d_activations().cpu", "evaluate.get_i3d_activations().cpu", "inputs.cpu", "evaluate.get_i3d_activations", "evaluate.get_i3d_activations"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.get_fid_score", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.visualization.WriterTensorboardX.set_step", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._write_images", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._process_data", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._unpack_data", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._store_gated_values", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.save_frames_to_dir", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.save_frames_to_dir", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._evaluate_test_video", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.get_i3d_activations", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.get_i3d_activations"], ["", "", "def", "_evaluate_data_loader", "(", "self", ",", "epoch", "=", "None", ",", "output_root_dir", "=", "None", ",", "data_loader", "=", "None", ",", "name", "=", "'test'", ")", ":", "\n", "        ", "total_length", "=", "0", "\n", "total_warp_error", "=", "0", "if", "self", ".", "evaluate_test_warp_error", "else", "None", "\n", "total_error", "=", "0", "\n", "total_psnr", "=", "0", "\n", "total_ssim", "=", "0", "\n", "total_p_dist", "=", "0", "\n", "\n", "if", "output_root_dir", "is", "None", ":", "\n", "            ", "output_root_dir", "=", "self", ".", "test_output_root_dir", "\n", "", "if", "epoch", "is", "not", "None", ":", "\n", "            ", "output_root_dir", "=", "os", ".", "path", ".", "join", "(", "output_root_dir", ",", "f\"epoch_{epoch}\"", ")", "\n", "", "output_root_dir", "=", "os", ".", "path", ".", "join", "(", "output_root_dir", ",", "name", ")", "\n", "\n", "output_i3d_activations", "=", "[", "]", "\n", "real_i3d_activations", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "batch_idx", ",", "data", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                ", "data_input", ",", "model_output", "=", "self", ".", "_process_data", "(", "data", ")", "\n", "inputs", ",", "outputs", ",", "targets", ",", "masks", "=", "self", ".", "_unpack_data", "(", "data_input", ",", "model_output", ")", "\n", "if", "self", ".", "store_gated_values", ":", "\n", "                    ", "out_dir", "=", "os", ".", "path", ".", "join", "(", "output_root_dir", ",", "'gated_values'", ",", "f'input_{batch_idx:04}'", ")", "\n", "self", ".", "_store_gated_values", "(", "out_dir", ")", "\n", "", "outputs", "=", "outputs", ".", "clamp", "(", "0", ",", "1", ")", "\n", "\n", "if", "self", ".", "evaluate_score", ":", "\n", "# get i3d activation", "\n", "                    ", "output_i3d_activations", ".", "append", "(", "get_i3d_activations", "(", "outputs", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "real_i3d_activations", ".", "append", "(", "get_i3d_activations", "(", "targets", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "assert", "len", "(", "outputs", ")", "==", "1", "# Batch size = 1 for testing", "\n", "inputs", "=", "inputs", "[", "0", "]", "\n", "outputs", "=", "outputs", "[", "0", "]", ".", "cpu", "(", ")", "\n", "targets", "=", "targets", "[", "0", "]", ".", "cpu", "(", ")", "\n", "masks", "=", "masks", "[", "0", "]", ".", "cpu", "(", ")", "\n", "\n", "if", "epoch", "is", "not", "None", "and", "epoch", "==", "0", ":", "\n", "# Save inputs to output_dir", "\n", "                    ", "output_dir", "=", "os", ".", "path", ".", "join", "(", "output_root_dir", ",", "'inputs'", ",", "f\"input_{batch_idx:04}\"", ")", "\n", "self", ".", "logger", ".", "debug", "(", "f\"Saving batch {batch_idx} input to {output_dir}\"", ")", "\n", "save_frames_to_dir", "(", "[", "self", ".", "toPILImage", "(", "t", ")", "for", "t", "in", "inputs", ".", "cpu", "(", ")", "]", ",", "output_dir", ")", "\n", "\n", "", "if", "epoch", "is", "not", "None", "and", "epoch", "%", "5", "==", "0", ":", "\n", "# Save test results to output_dir", "\n", "                    ", "output_dir", "=", "os", ".", "path", ".", "join", "(", "output_root_dir", ",", "f\"result_{batch_idx:04}\"", ")", "\n", "self", ".", "logger", ".", "debug", "(", "f\"Saving batch {batch_idx} to {output_dir}\"", ")", "\n", "save_frames_to_dir", "(", "[", "self", ".", "toPILImage", "(", "t", ")", "for", "t", "in", "outputs", "]", ",", "output_dir", ")", "\n", "\n", "", "if", "self", ".", "evaluate_score", ":", "\n", "# Evaluate scores", "\n", "                    ", "warp_error", ",", "error", ",", "psnr_value", ",", "ssim_value", ",", "p_dist", ",", "length", "=", "self", ".", "_evaluate_test_video", "(", "outputs", ",", "targets", ",", "masks", ")", "\n", "if", "self", ".", "evaluate_test_warp_error", ":", "\n", "                        ", "total_warp_error", "+=", "warp_error", "\n", "", "total_error", "+=", "error", "\n", "total_ssim", "+=", "ssim_value", "\n", "total_psnr", "+=", "psnr_value", "\n", "total_p_dist", "+=", "p_dist", "\n", "total_length", "+=", "length", "\n", "\n", "", "", "", "if", "self", ".", "evaluate_score", ":", "\n", "            ", "output_i3d_activations", "=", "np", ".", "concatenate", "(", "output_i3d_activations", ",", "axis", "=", "0", ")", "\n", "real_i3d_activations", "=", "np", ".", "concatenate", "(", "real_i3d_activations", ",", "axis", "=", "0", ")", "\n", "fid_score", "=", "get_fid_score", "(", "real_i3d_activations", ",", "output_i3d_activations", ")", "\n", "", "else", ":", "\n", "            ", "fid_score", "=", "0", "\n", "total_p_dist", "=", "[", "0", "]", "\n", "total_length", "=", "1", "\n", "", "total_p_dist", "=", "total_p_dist", "[", "0", "]", "\n", "\n", "if", "epoch", "is", "not", "None", ":", "\n", "            ", "self", ".", "writer", ".", "set_step", "(", "epoch", ",", "name", ")", "\n", "self", ".", "_write_images", "(", "\n", "inputs", ",", "outputs", ",", "targets", ",", "masks", ",", "\n", "model_output", "=", "model_output", ",", "data_input", "=", "data_input", "\n", ")", "\n", "if", "self", ".", "evaluate_test_warp_error", ":", "\n", "                ", "self", ".", "writer", ".", "add_scalar", "(", "'test_warp_error'", ",", "total_warp_error", "/", "total_length", ")", "\n", "", "self", ".", "writer", ".", "add_scalar", "(", "'test_mse'", ",", "total_error", "/", "total_length", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'test_ssim'", ",", "total_ssim", "/", "total_length", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'test_psnr'", ",", "total_psnr", "/", "total_length", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'test_p_dist'", ",", "total_p_dist", "/", "total_length", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'test_fid_score'", ",", "fid_score", ")", "\n", "", "return", "total_warp_error", ",", "total_error", ",", "total_ssim", ",", "total_psnr", ",", "total_p_dist", ",", "total_length", ",", "fid_score", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._write_images": [[165, 193], ["trainer.Trainer.writer.add_image", "trainer.Trainer.writer.add_image", "trainer.Trainer.writer.add_image", "trainer.Trainer.writer.add_image", "trainer.Trainer.writer.add_image", "trainer.Trainer.writer.add_image", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "trainer.Trainer.writer.add_image", "trainer.Trainer.writer.add_image", "trainer.Trainer.writer.add_image", "inputs.cpu", "masks.cpu", "outputs.clamp().cpu", "targets.cpu", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "model_output.keys", "trainer.Trainer.writer.add_image", "targets.cpu", "outputs.cpu", "inputs.cpu", "outputs.cpu", "output_edges[].cpu", "target_edges[].cpu", "guidances[].cpu", "torchvision.utils.make_grid", "outputs.clamp", "[].transpose().cpu", "[].transpose"], "methods", ["None"], ["", "def", "_write_images", "(", "\n", "self", ",", "inputs", ",", "outputs", ",", "targets", ",", "masks", ",", "output_edges", "=", "None", ",", "\n", "target_edges", "=", "None", ",", "model_output", "=", "None", ",", "data_input", "=", "None", "\n", ")", ":", "\n", "        ", "self", ".", "writer", ".", "add_image", "(", "'input'", ",", "make_grid", "(", "inputs", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "False", ")", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "'loss_mask'", ",", "make_grid", "(", "masks", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "False", ")", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "\n", "'output'", ",", "make_grid", "(", "outputs", ".", "clamp", "(", "0", ",", "1", ")", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "False", ")", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "'gt'", ",", "make_grid", "(", "targets", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "False", ")", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "'diff'", ",", "make_grid", "(", "targets", ".", "cpu", "(", ")", "-", "outputs", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "True", ")", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "'IO_diff'", ",", "make_grid", "(", "inputs", ".", "cpu", "(", ")", "-", "outputs", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "True", ")", ")", "\n", "try", ":", "\n", "            ", "output_edges", "=", "self", ".", "losses", "[", "'loss_edge'", "]", "[", "0", "]", ".", "current_output_edges", "\n", "target_edges", "=", "self", ".", "losses", "[", "'loss_edge'", "]", "[", "0", "]", ".", "current_target_edges", "\n", "self", ".", "writer", ".", "add_image", "(", "'output_edge'", ",", "make_grid", "(", "output_edges", "[", "0", "]", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "True", ")", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "'target_edge'", ",", "make_grid", "(", "target_edges", "[", "0", "]", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "True", ")", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "pass", "\n", "", "try", ":", "\n", "            ", "guidances", "=", "data_input", "[", "'guidances'", "]", "\n", "self", ".", "writer", ".", "add_image", "(", "'guidances'", ",", "make_grid", "(", "guidances", "[", "0", "]", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "True", ")", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "pass", "\n", "\n", "", "if", "model_output", "is", "not", "None", ":", "\n", "            ", "if", "'imcomplete_video'", "in", "model_output", ".", "keys", "(", ")", ":", "\n", "                ", "self", ".", "writer", ".", "add_image", "(", "'imcomplete_video'", ",", "make_grid", "(", "\n", "model_output", "[", "'imcomplete_video'", "]", "[", "0", "]", ".", "transpose", "(", "0", ",", "1", ")", ".", "cpu", "(", ")", ",", "nrow", "=", "3", ",", "normalize", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._evaluate_test_video": [[194, 203], ["evaluate.evaluate_video_error", "trainer.Trainer.toPILImage", "trainer.Trainer.toPILImage", "trainer.Trainer.toPILImage"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.src.evaluate.evaluate_video_error"], ["", "", "", "def", "_evaluate_test_video", "(", "self", ",", "output", ",", "gt_frames", ",", "masks", ")", ":", "\n", "        ", "gt_images", "=", "[", "self", ".", "toPILImage", "(", "gt", ")", "for", "gt", "in", "gt_frames", "]", "\n", "result_images", "=", "[", "self", ".", "toPILImage", "(", "result", ")", "for", "result", "in", "output", "]", "\n", "mask_images", "=", "[", "self", ".", "toPILImage", "(", "mask", "/", "255", ")", "for", "mask", "in", "masks", "]", "\n", "return", "evaluate_video_error", "(", "\n", "result_images", ",", "gt_images", ",", "mask_images", ",", "\n", "flownet_checkpoint_path", "=", "None", ",", "\n", "evaluate_warping_error", "=", "self", ".", "evaluate_test_warp_error", ",", "\n", "printlog", "=", "self", ".", "printlog", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._eval_metrics": [[205, 211], ["numpy.zeros", "enumerate", "len", "metric", "trainer.Trainer.writer.add_scalar"], "methods", ["None"], ["", "def", "_eval_metrics", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "acc_metrics", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "metrics", ")", ")", "\n", "for", "i", ",", "metric", "in", "enumerate", "(", "self", ".", "metrics", ")", ":", "\n", "            ", "acc_metrics", "[", "i", "]", "+=", "metric", "(", "output", ",", "target", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "f'{metric.__name__}'", ",", "acc_metrics", "[", "i", "]", ")", "\n", "", "return", "acc_metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_gan_loss": [[212, 218], ["trainer.Trainer.model.forward", "trainer.Trainer.adv_loss_fn", "torch.Tensor().to", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward"], ["", "def", "_get_gan_loss", "(", "self", ",", "outputs", ",", "target", ",", "masks", ",", "discriminator", ",", "w", ",", "guidances", "=", "None", ",", "is_disc", "=", "None", ")", ":", "\n", "        ", "if", "w", "<=", "0", ":", "\n", "            ", "return", "torch", ".", "Tensor", "(", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "", "scores", "=", "self", ".", "model", ".", "forward", "(", "outputs", ",", "masks", ",", "guidances", ",", "model", "=", "discriminator", ")", "\n", "gan_loss", "=", "self", ".", "adv_loss_fn", "(", "scores", ",", "target", ",", "is_disc", ")", "\n", "return", "gan_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_grad_mean_magnitude": [[219, 245], ["optimizer.zero_grad", "output.backward", "torch.cat().abs().mean().item", "optimizer.zero_grad", "all_grad.append", "torch.cat().abs().mean", "p.grad.view", "torch.cat().abs", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.tsm_utils.InplaceShift.backward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "_get_grad_mean_magnitude", "(", "self", ",", "output", ",", "optimizer", ")", ":", "\n", "        ", "\"\"\"\n        Get mean magitude (absolute value) of gradient of output w.r.t params in the optimizer.\n        This function is used to get a simple understanding over the impact of a loss.\n\n        :output: usually the loss you want to compute gradient w.r.t params\n        :optimizer: the optimizer who contains the parameters you care\n\n        Note:\n            This function will reset the gradient stored in paramerter, so please\n            use it before <your loss>.backward()\n\n        Example:\n            > grad_magnitude = self._get_grad_mean_magnitude(\n                  loss_recon * self.loss_recon_w, self.optimizer_g))\n            > print(grad_magnitude)\n        \"\"\"", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "all_grad", "=", "[", "]", "\n", "for", "group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "all_grad", ".", "append", "(", "p", ".", "grad", ".", "view", "(", "-", "1", ")", ")", "\n", "", "", "value", "=", "torch", ".", "cat", "(", "all_grad", ")", ".", "abs", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_edge_guidances": [[246, 259], ["range", "torch.stack", "tensors.size", "range", "torch.stack.append", "tensors.size", "get_edge", "batch_edges.append", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.edge.get_edge", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "_get_edge_guidances", "(", "self", ",", "tensors", ")", ":", "\n", "        ", "from", "utils", ".", "edge", "import", "get_edge", "\n", "guidances", "=", "[", "]", "\n", "for", "batch_idx", "in", "range", "(", "tensors", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "batch_edges", "=", "[", "]", "\n", "for", "frame_idx", "in", "range", "(", "tensors", ".", "size", "(", "1", ")", ")", ":", "\n", "                ", "edge", "=", "get_edge", "(", "\n", "tensors", "[", "batch_idx", ",", "frame_idx", ":", "frame_idx", "+", "1", "]", "\n", ")", "\n", "batch_edges", ".", "append", "(", "edge", ")", "\n", "", "guidances", ".", "append", "(", "torch", ".", "cat", "(", "batch_edges", ",", "dim", "=", "0", ")", ")", "\n", "", "guidances", "=", "torch", ".", "stack", "(", "guidances", ")", "\n", "return", "guidances", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._process_data": [[260, 275], ["data[].to", "data[].to", "data[].to", "trainer.Trainer.model", "data[].to", "len"], "methods", ["None"], ["", "def", "_process_data", "(", "self", ",", "data", ")", ":", "\n", "        ", "inputs", "=", "data", "[", "\"input_tensors\"", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "masks", "=", "data", "[", "\"mask_tensors\"", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "targets", "=", "data", "[", "\"gt_tensors\"", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "# guidances = self._get_edge_guidances(targets).to(self.device) if 'edge' in data['guidance'] else None", "\n", "guidances", "=", "data", "[", "\"guidances\"", "]", ".", "to", "(", "self", ".", "device", ")", "if", "len", "(", "data", "[", "\"guidances\"", "]", ")", ">", "0", "else", "None", "\n", "data_input", "=", "{", "\n", "\"inputs\"", ":", "inputs", ",", "\n", "\"masks\"", ":", "masks", ",", "\n", "\"targets\"", ":", "targets", ",", "\n", "\"guidances\"", ":", "guidances", "\n", "}", "\n", "\n", "model_output", "=", "self", ".", "model", "(", "inputs", ",", "masks", ",", "guidances", ")", "\n", "return", "data_input", ",", "model_output", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._unpack_data": [[276, 284], ["model_output.keys"], "methods", ["None"], ["", "def", "_unpack_data", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "# inputs, outputs, targets, masks = self._unpack_data(data_input, model_output)", "\n", "        ", "return", "(", "\n", "data_input", "[", "'inputs'", "]", ",", "\n", "model_output", "[", "'outputs'", "]", "if", "'refined_outputs'", "not", "in", "model_output", ".", "keys", "(", ")", "\n", "else", "model_output", "[", "'refined_outputs'", "]", ",", "\n", "data_input", "[", "'targets'", "]", ",", "\n", "data_input", "[", "'masks'", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_non_gan_loss": [[286, 297], ["trainer.Trainer.losses.items", "sum", "loss_instance", "trainer.Trainer.writer.add_scalar", "losses.append", "loss_instance.item"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "_get_non_gan_loss", "(", "self", ",", "data_input", ",", "model_output", ")", ":", "\n", "# Compute and write all non-GAN losses to tensorboard by for loop", "\n", "        ", "losses", "=", "[", "]", "\n", "for", "loss_name", ",", "(", "loss_instance", ",", "loss_weight", ")", "in", "self", ".", "losses", ".", "items", "(", ")", ":", "\n", "            ", "if", "loss_weight", ">", "0.0", ":", "\n", "                ", "loss", "=", "loss_instance", "(", "data_input", ",", "model_output", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "f'{loss_name}'", ",", "loss", ".", "item", "(", ")", ")", "\n", "loss", "*=", "loss_weight", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "", "", "loss", "=", "sum", "(", "losses", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._train_epoch": [[298, 410], ["trainer.Trainer.model.train", "time.time", "numpy.zeros", "enumerate", "len", "time.time", "trainer.Trainer.writer.set_step", "trainer.Trainer._process_data", "trainer.Trainer._unpack_data", "trainer.Trainer._get_non_gan_loss", "trainer.Trainer._get_gan_loss", "trainer.Trainer._get_gan_loss", "trainer.Trainer.optimizer_g.zero_grad", "loss_total.backward", "trainer.Trainer.optimizer_g.step", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.writer.add_scalar", "trainer.Trainer._valid_epoch", "trainer.Trainer.evaluate_test_set", "trainer.Trainer.lr_scheduler.step", "getattr", "getattr", "loss_total.item", "trainer.Trainer.item", "trainer.Trainer.item", "torch.no_grad", "loss_total.item", "trainer.Trainer._eval_metrics", "trainer.Trainer.logger.info", "trainer.Trainer._write_images", "time.time", "len", "getattr.zero_grad", "loss_d.backward", "getattr.step", "trainer.Trainer.writer.add_scalar", "len", "loss_d.item", "len", "trainer.Trainer._get_gan_loss", "trainer.Trainer._get_gan_loss", "loss_total.item", "outputs.detach", "len", "time.time"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer.train", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.visualization.WriterTensorboardX.set_step", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._process_data", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._unpack_data", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_non_gan_loss", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_gan_loss", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_gan_loss", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.tsm_utils.InplaceShift.backward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._valid_epoch", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer.evaluate_test_set", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._eval_metrics", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._write_images", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.tsm_utils.InplaceShift.backward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_gan_loss", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_gan_loss"], ["", "def", "_train_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "\"\"\"\n        Training logic for an epoch\n\n        :param epoch: Current training epoch.\n        :return: A log that contains all information you want to save.\n\n        Note:\n            If you have additional information to record, for example:\n                > additional_log = {\"x\": x, \"y\": y}\n            merge it with log before return. i.e.\n                > log = {**log, **additional_log}\n                > return log\n\n            The metrics in log must have the key 'metrics'.\n        \"\"\"", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "epoch_start_time", "=", "time", ".", "time", "(", ")", "\n", "total_loss", "=", "0", "\n", "total_metrics", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "metrics", ")", ")", "\n", "for", "batch_idx", ",", "data", "in", "enumerate", "(", "self", ".", "data_loader", ")", ":", "\n", "            ", "batch_start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "# Set writer", "\n", "self", ".", "writer", ".", "set_step", "(", "(", "epoch", "-", "1", ")", "*", "len", "(", "self", ".", "data_loader", ")", "+", "batch_idx", ")", "\n", "\n", "data_input", ",", "model_output", "=", "self", ".", "_process_data", "(", "data", ")", "\n", "inputs", ",", "outputs", ",", "targets", ",", "masks", "=", "self", ".", "_unpack_data", "(", "data_input", ",", "model_output", ")", "\n", "\n", "# Train G", "\n", "non_gan_loss", "=", "self", ".", "_get_non_gan_loss", "(", "data_input", ",", "model_output", ")", "\n", "\n", "loss_gan_s", "=", "self", ".", "_get_gan_loss", "(", "\n", "outputs", ",", "1", ",", "masks", ",", "discriminator", "=", "'D_s'", ",", "w", "=", "self", ".", "loss_gan_s_w", ",", "is_disc", "=", "False", ")", "\n", "loss_gan_t", "=", "self", ".", "_get_gan_loss", "(", "\n", "outputs", ",", "1", ",", "masks", ",", "discriminator", "=", "'D_t'", ",", "w", "=", "self", ".", "loss_gan_t_w", ",", "is_disc", "=", "False", ")", "\n", "\n", "loss_total", "=", "(", "\n", "non_gan_loss", "\n", "+", "loss_gan_s", "*", "self", ".", "loss_gan_s_w", "\n", "+", "loss_gan_t", "*", "self", ".", "loss_gan_t_w", "\n", ")", "\n", "\n", "self", ".", "optimizer_g", ".", "zero_grad", "(", ")", "\n", "\n", "# Uncomment these lines to see the gradient", "\n", "# grad_recon = self._get_grad_mean_magnitude(loss_recon, self.optimizer_g)", "\n", "# grad_vgg = self._get_grad_mean_magnitude(loss_vgg, self.optimizer_g)", "\n", "# grad_gan_s = self._get_grad_mean_magnitude(loss_gan_s, self.optimizer_g)", "\n", "# grad_gan_t = self._get_grad_mean_magnitude(loss_gan_t, self.optimizer_g)", "\n", "# self.logger.info(f\"Grad: recon {grad_recon} vgg {grad_vgg} gan_s {grad_gan_s} gan_t {grad_gan_t}\")", "\n", "\n", "loss_total", ".", "backward", "(", ")", "\n", "self", ".", "optimizer_g", ".", "step", "(", ")", "\n", "\n", "# Train spatial and temporal discriminators", "\n", "for", "d", "in", "[", "'s'", ",", "'t'", "]", ":", "\n", "                ", "weight", "=", "getattr", "(", "self", ",", "f'loss_gan_{d}_w'", ")", "\n", "optimizer", "=", "getattr", "(", "self", ",", "f'optimizer_d_{d}'", ")", "\n", "\n", "if", "weight", ">", "0", ":", "\n", "                    ", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_d", "=", "(", "\n", "self", ".", "_get_gan_loss", "(", "\n", "targets", ",", "1", ",", "masks", ",", "discriminator", "=", "f'D_{d}'", ",", "w", "=", "weight", ",", "is_disc", "=", "True", ")", "\n", "+", "self", ".", "_get_gan_loss", "(", "\n", "outputs", ".", "detach", "(", ")", ",", "0", ",", "masks", ",", "discriminator", "=", "f'D_{d}'", ",", "w", "=", "weight", ",", "is_disc", "=", "True", ")", "\n", ")", "/", "2", "\n", "loss_d", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "self", ".", "writer", ".", "add_scalar", "(", "f'loss_d_{d}'", ",", "loss_d", ".", "item", "(", ")", ")", "\n", "\n", "", "", "self", ".", "writer", ".", "add_scalar", "(", "'loss_total'", ",", "loss_total", ".", "item", "(", ")", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'loss_gan_s'", ",", "loss_gan_s", ".", "item", "(", ")", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'loss_gan_t'", ",", "loss_gan_t", ".", "item", "(", ")", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "total_loss", "+=", "loss_total", ".", "item", "(", ")", "\n", "total_metrics", "+=", "self", ".", "_eval_metrics", "(", "outputs", ",", "targets", ")", "\n", "\n", "", "if", "self", ".", "verbosity", ">=", "2", "and", "(", "batch_idx", "%", "self", ".", "log_step", "==", "0", "and", "epoch", "<", "30", ")", "or", "batch_idx", "==", "0", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "\n", "f'Epoch: {epoch} [{batch_idx * self.data_loader.batch_size}/{self.data_loader.n_samples} '", "\n", "f' ({100.0 * batch_idx / len(self.data_loader):.0f}%)] '", "\n", "f'loss_total: {loss_total.item():.3f}, '", "\n", "f'BT: {time.time() - batch_start_time:.2f}s'", "\n", ")", "\n", "\n", "self", ".", "_write_images", "(", "inputs", "[", "0", "]", ",", "outputs", "[", "0", "]", ",", "targets", "[", "0", "]", ",", "masks", "[", "0", "]", ",", "\n", "model_output", "=", "model_output", ",", "data_input", "=", "data_input", ")", "\n", "\n", "", "", "log", "=", "{", "\n", "'epoch_time'", ":", "time", ".", "time", "(", ")", "-", "epoch_start_time", ",", "\n", "'loss_total'", ":", "total_loss", "/", "len", "(", "self", ".", "data_loader", ")", ",", "\n", "'metrics'", ":", "(", "total_metrics", "/", "len", "(", "self", ".", "data_loader", ")", ")", ".", "tolist", "(", ")", "\n", "}", "\n", "\n", "if", "self", ".", "do_validation", ":", "\n", "            ", "val_log", "=", "self", ".", "_valid_epoch", "(", "epoch", ")", "\n", "log", "=", "{", "**", "log", ",", "**", "val_log", "}", "\n", "\n", "", "if", "self", ".", "test_data_loader", "is", "not", "None", ":", "\n", "            ", "log", "=", "self", ".", "evaluate_test_set", "(", "epoch", "=", "epoch", ",", "log", "=", "log", ")", "\n", "\n", "", "if", "self", ".", "lr_scheduler", "is", "not", "None", ":", "\n", "            ", "self", ".", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "", "return", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer.evaluate_test_set": [[411, 441], ["trainer.Trainer.model.eval", "isinstance", "enumerate", "trainer.Trainer._evaluate_data_loader", "trainer.Trainer.logger.error", "breakpoint", "trainer.Trainer.logger.info", "trainer.Trainer.logger.info", "trainer.Trainer.logger.info", "trainer.Trainer.logger.info", "trainer.Trainer.logger.info", "trainer.Trainer.logger.info", "trainer.Trainer.logger.info"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._evaluate_data_loader", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "evaluate_test_set", "(", "self", ",", "output_root_dir", "=", "None", ",", "epoch", "=", "None", ",", "log", "=", "None", ")", ":", "\n", "# Insert breakpoint when Nan", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "if", "isinstance", "(", "self", ".", "test_data_loader", ",", "list", ")", ":", "\n", "            ", "test_data_loaders", "=", "self", ".", "test_data_loader", "\n", "", "else", ":", "\n", "            ", "test_data_loaders", "=", "[", "self", ".", "test_data_loader", "]", "\n", "", "try", ":", "\n", "            ", "for", "i", ",", "data_loader", "in", "enumerate", "(", "test_data_loaders", ")", ":", "\n", "                ", "name", "=", "data_loader", ".", "name", "if", "data_loader", ".", "name", "is", "not", "None", "else", "f'test{i}'", "\n", "total_warp_error", ",", "total_error", ",", "total_ssim", ",", "total_psnr", ",", "total_p_dist", ",", "total_length", ",", "fid_score", "=", "self", ".", "_evaluate_data_loader", "(", "data_loader", "=", "data_loader", ",", "name", "=", "name", ",", "\n", "output_root_dir", "=", "output_root_dir", ",", "epoch", "=", "epoch", ")", "\n", "\n", "if", "log", "is", "not", "None", ":", "\n", "                    ", "log", "[", "f'{name}_p_dist'", "]", "=", "total_p_dist", "/", "total_length", "\n", "log", "[", "f'{name}_fid_score'", "]", "=", "fid_score", "\n", "", "if", "self", ".", "printlog", ":", "\n", "                    ", "self", ".", "logger", ".", "info", "(", "f'test set name: {name}'", ")", "\n", "if", "self", ".", "evaluate_test_warp_error", ":", "\n", "                        ", "self", ".", "logger", ".", "info", "(", "f'test_warp_error: {total_warp_error / total_length}'", ")", "\n", "", "self", ".", "logger", ".", "info", "(", "f'test_mse: {total_error / total_length}'", ")", "\n", "self", ".", "logger", ".", "info", "(", "f'test_ssim: {total_ssim / total_length}'", ")", "\n", "self", ".", "logger", ".", "info", "(", "f'test_psnr: {total_psnr / total_length}'", ")", "\n", "self", ".", "logger", ".", "info", "(", "f'test_p_dist: {total_p_dist / total_length}'", ")", "\n", "self", ".", "logger", ".", "info", "(", "f'test_fid_score: {fid_score}\\n'", ")", "\n", "", "", "", "except", "Exception", "as", "err", ":", "\n", "            ", "self", ".", "logger", ".", "error", "(", "err", ",", "exc_info", "=", "True", ")", "\n", "breakpoint", "(", ")", "# NOQA", "\n", "", "return", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._valid_epoch": [[442, 478], ["trainer.Trainer.model.eval", "numpy.zeros", "trainer.Trainer.logger.info", "len", "torch.no_grad", "enumerate", "trainer.Trainer.writer.set_step", "trainer.Trainer._process_data", "trainer.Trainer._unpack_data", "trainer.Trainer._get_non_gan_loss", "trainer.Trainer.writer.add_scalar", "trainer.Trainer.item", "trainer.Trainer._eval_metrics", "len", "trainer.Trainer.item", "trainer.Trainer._write_images", "len", "len"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.visualization.WriterTensorboardX.set_step", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._process_data", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._unpack_data", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._get_non_gan_loss", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._eval_metrics", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.trainer.trainer.Trainer._write_images"], ["", "def", "_valid_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "\"\"\"\n        Validate after training an epoch\n\n        :return: A log that contains information about validation\n\n        Note:\n            The validation metrics in log must have the key 'val_metrics'.\n        \"\"\"", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "total_val_loss", "=", "0", "\n", "total_val_metrics", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "metrics", ")", ")", "\n", "self", ".", "logger", ".", "info", "(", "f\"Doing {epoch} validation ..\"", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "batch_idx", ",", "data", "in", "enumerate", "(", "self", ".", "valid_data_loader", ")", ":", "\n", "                ", "if", "epoch", "==", "1", "and", "batch_idx", ">", "5", ":", "\n", "                    ", "continue", "\n", "", "self", ".", "writer", ".", "set_step", "(", "(", "epoch", "-", "1", ")", "*", "len", "(", "self", ".", "valid_data_loader", ")", "+", "batch_idx", ",", "'valid'", ")", "\n", "data_input", ",", "model_output", "=", "self", ".", "_process_data", "(", "data", ")", "\n", "inputs", ",", "outputs", ",", "targets", ",", "masks", "=", "self", ".", "_unpack_data", "(", "data_input", ",", "model_output", ")", "\n", "\n", "loss_total", "=", "self", ".", "_get_non_gan_loss", "(", "data_input", ",", "model_output", ")", "\n", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'loss_total'", ",", "loss_total", ".", "item", "(", ")", ")", "\n", "total_val_loss", "+=", "loss_total", ".", "item", "(", ")", "\n", "total_val_metrics", "+=", "self", ".", "_eval_metrics", "(", "outputs", ",", "targets", ")", "\n", "\n", "if", "batch_idx", "%", "self", ".", "log_step", "==", "0", ":", "\n", "                    ", "self", ".", "_write_images", "(", "\n", "inputs", "[", "0", "]", ",", "outputs", "[", "0", "]", ",", "targets", "[", "0", "]", ",", "masks", "[", "0", "]", ",", "\n", "model_output", "=", "model_output", ",", "data_input", "=", "data_input", "\n", ")", "\n", "\n", "", "", "", "return", "{", "\n", "'val_loss'", ":", "total_val_loss", "/", "len", "(", "self", ".", "valid_data_loader", ")", ",", "\n", "'val_metrics'", ":", "(", "total_val_metrics", "/", "len", "(", "self", ".", "valid_data_loader", ")", ")", ".", "tolist", "(", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer.__init__": [[16, 74], ["logging.getLogger", "base_trainer.BaseTrainer._prepare_device", "model.to", "datetime.datetime.now().strftime", "os.path.join", "os.path.join", "utils.visualization.WriterTensorboardX", "utils.util.ensure_dir", "os.path.join", "open", "json.dump", "base_trainer.BaseTrainer._resume_checkpoint", "len", "torch.nn.DataParallel", "datetime.datetime.now", "base_trainer.BaseTrainer._load_pretrained"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._prepare_device", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._resume_checkpoint", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._load_pretrained"], ["def", "__init__", "(", "\n", "self", ",", "model", ",", "losses", ",", "metrics", ",", "optimizer_g", ",", "\n", "optimizer_d_s", ",", "optimizer_d_t", ",", "\n", "resume", ",", "config", ",", "\n", "train_logger", "=", "None", ",", "\n", "pretrained_path", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "\n", "# setup GPU device if available, move model into configured device", "\n", "self", ".", "device", ",", "device_ids", "=", "self", ".", "_prepare_device", "(", "config", "[", "'n_gpu'", "]", ")", "\n", "self", ".", "model", "=", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "losses", "=", "losses", "\n", "self", ".", "metrics", "=", "metrics", "\n", "self", ".", "optimizer_g", "=", "optimizer_g", "\n", "self", ".", "optimizer_d_s", "=", "optimizer_d_s", "\n", "self", ".", "optimizer_d_t", "=", "optimizer_d_t", "\n", "\n", "self", ".", "epochs", "=", "config", "[", "'trainer'", "]", "[", "'epochs'", "]", "\n", "self", ".", "save_freq", "=", "config", "[", "'trainer'", "]", "[", "'save_freq'", "]", "\n", "self", ".", "verbosity", "=", "config", "[", "'trainer'", "]", "[", "'verbosity'", "]", "\n", "\n", "# Set pretrained_load_strict to False to load model without strict state name matching", "\n", "# It's useful when pretrained model without GAN but we want to use GAN for this time", "\n", "self", ".", "pretrained_load_strict", "=", "config", "[", "'trainer'", "]", "[", "'pretrained_load_strict'", "]", "\n", "\n", "self", ".", "train_logger", "=", "train_logger", "\n", "\n", "# configuration to monitor model performance and save best", "\n", "self", ".", "monitor", "=", "config", "[", "'trainer'", "]", "[", "'monitor'", "]", "\n", "self", ".", "monitor_mode", "=", "config", "[", "'trainer'", "]", "[", "'monitor_mode'", "]", "\n", "assert", "self", ".", "monitor_mode", "in", "[", "'min'", ",", "'max'", ",", "'off'", "]", "\n", "self", ".", "monitor_best", "=", "math", ".", "inf", "if", "self", ".", "monitor_mode", "==", "'min'", "else", "-", "math", ".", "inf", "\n", "self", ".", "start_epoch", "=", "1", "\n", "\n", "# setup directory for checkpoint saving", "\n", "start_time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%m%d_%H%M%S'", ")", "\n", "self", ".", "checkpoint_dir", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'trainer'", "]", "[", "'save_dir'", "]", ",", "config", "[", "'name'", "]", ",", "start_time", ")", "\n", "# setup visualization writer instance", "\n", "writer_dir", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'visualization'", "]", "[", "'log_dir'", "]", ",", "config", "[", "'name'", "]", ",", "start_time", ")", "\n", "self", ".", "writer", "=", "WriterTensorboardX", "(", "writer_dir", ",", "self", ".", "logger", ",", "config", "[", "'visualization'", "]", "[", "'tensorboardX'", "]", ")", "\n", "\n", "# Save configuration file into checkpoint directory:", "\n", "ensure_dir", "(", "self", ".", "checkpoint_dir", ")", "\n", "config_save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "'config.json'", ")", "\n", "with", "open", "(", "config_save_path", ",", "'w'", ")", "as", "handle", ":", "\n", "            ", "json", ".", "dump", "(", "config", ",", "handle", ",", "indent", "=", "4", ",", "sort_keys", "=", "False", ")", "\n", "\n", "", "if", "resume", ":", "\n", "            ", "self", ".", "_resume_checkpoint", "(", "resume", ")", "\n", "", "elif", "pretrained_path", "is", "not", "None", ":", "\n", "            ", "self", ".", "_load_pretrained", "(", "pretrained_path", ")", "\n", "\n", "# put model into DataParallel module only after the checkpoint is loaded", "\n", "", "if", "len", "(", "device_ids", ")", ">", "1", ":", "\n", "            ", "self", ".", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "device_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._prepare_device": [[75, 92], ["torch.cuda.device_count", "torch.device", "list", "base_trainer.BaseTrainer.logger.warning", "base_trainer.BaseTrainer.logger.warning", "range"], "methods", ["None"], ["", "", "def", "_prepare_device", "(", "self", ",", "n_gpu_use", ")", ":", "\n", "        ", "\"\"\"\n        setup GPU device if available, move model into configured device\n        \"\"\"", "\n", "n_gpu", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "if", "n_gpu_use", ">", "0", "and", "n_gpu", "==", "0", ":", "\n", "            ", "self", ".", "logger", ".", "warning", "(", "\n", "\"Warning: There\\'s no GPU available on this machine, training will be performed on CPU.\"", ")", "\n", "n_gpu_use", "=", "0", "\n", "", "if", "n_gpu_use", ">", "n_gpu", ":", "\n", "            ", "msg", "=", "(", "f\"Warning: The number of GPU\\'s configured to use is {n_gpu_use}, \"", "\n", "f\"but only {n_gpu} are available on this machine.\"", ")", "\n", "self", ".", "logger", ".", "warning", "(", "msg", ")", "\n", "n_gpu_use", "=", "n_gpu", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda:0'", "if", "n_gpu_use", ">", "0", "else", "'cpu'", ")", "\n", "list_ids", "=", "list", "(", "range", "(", "n_gpu_use", ")", ")", "\n", "return", "device", ",", "list_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer.train": [[93, 135], ["range", "base_trainer.BaseTrainer._train_epoch", "base_trainer.BaseTrainer.items", "base_trainer.BaseTrainer.train_logger.add_entry", "base_trainer.BaseTrainer._save_checkpoint", "log.update", "log.items", "log.update", "base_trainer.BaseTrainer.logger.info", "base_trainer.BaseTrainer.logger.warning", "enumerate", "str", "enumerate"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._train_epoch", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.logger.Logger.add_entry", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._save_checkpoint", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Full training logic\n        \"\"\"", "\n", "for", "epoch", "in", "range", "(", "self", ".", "start_epoch", ",", "self", ".", "epochs", "+", "1", ")", ":", "\n", "            ", "result", "=", "self", ".", "_train_epoch", "(", "epoch", ")", "\n", "\n", "# save logged informations into log dict", "\n", "log", "=", "{", "'epoch'", ":", "epoch", "}", "\n", "for", "key", ",", "value", "in", "result", ".", "items", "(", ")", ":", "\n", "                ", "if", "key", "==", "'metrics'", ":", "\n", "                    ", "log", ".", "update", "(", "{", "mtr", ".", "__name__", ":", "value", "[", "i", "]", "for", "i", ",", "mtr", "in", "enumerate", "(", "self", ".", "metrics", ")", "}", ")", "\n", "", "elif", "key", "==", "'val_metrics'", ":", "\n", "                    ", "log", ".", "update", "(", "{", "'val_'", "+", "mtr", ".", "__name__", ":", "value", "[", "i", "]", "for", "i", ",", "mtr", "in", "enumerate", "(", "self", ".", "metrics", ")", "}", ")", "\n", "", "else", ":", "\n", "                    ", "log", "[", "key", "]", "=", "value", "\n", "\n", "# print logged informations to the screen", "\n", "", "", "if", "self", ".", "train_logger", "is", "not", "None", ":", "\n", "                ", "self", ".", "train_logger", ".", "add_entry", "(", "log", ")", "\n", "if", "self", ".", "verbosity", ">=", "1", ":", "\n", "                    ", "for", "key", ",", "value", "in", "log", ".", "items", "(", ")", ":", "\n", "                        ", "self", ".", "logger", ".", "info", "(", "'    {:15s}: {}'", ".", "format", "(", "str", "(", "key", ")", ",", "value", ")", ")", "\n", "\n", "# evaluate model performance according to configured metric, save best checkpoint as model_best", "\n", "", "", "", "best", "=", "False", "\n", "monitor_value", "=", "None", "\n", "if", "self", ".", "monitor_mode", "!=", "'off'", ":", "\n", "                ", "try", ":", "\n", "                    ", "if", "(", "self", ".", "monitor_mode", "==", "'min'", "and", "log", "[", "self", ".", "monitor", "]", "<", "self", ".", "monitor_best", ")", "or", "(", "self", ".", "monitor_mode", "==", "'max'", "and", "log", "[", "self", ".", "monitor", "]", ">", "self", ".", "monitor_best", ")", ":", "\n", "                        ", "self", ".", "monitor_best", "=", "log", "[", "self", ".", "monitor", "]", "\n", "best", "=", "True", "\n", "", "monitor_value", "=", "log", "[", "self", ".", "monitor", "]", "\n", "\n", "", "except", "KeyError", ":", "\n", "                    ", "if", "epoch", "==", "1", ":", "\n", "                        ", "msg", "=", "\"Warning: Can\\'t recognize metric named '{}' \"", ".", "format", "(", "self", ".", "monitor", ")", "+", "\"for performance monitoring. model_best checkpoint won\\'t be updated.\"", "\n", "self", ".", "logger", ".", "warning", "(", "msg", ")", "\n", "", "", "", "if", "epoch", "%", "self", ".", "save_freq", "==", "0", "or", "best", ":", "\n", "                ", "self", ".", "_save_checkpoint", "(", "epoch", ",", "save_best", "=", "best", ",", "monitor_value", "=", "monitor_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._train_epoch": [[136, 143], ["None"], "methods", ["None"], ["", "", "", "def", "_train_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "\"\"\"\n        Training logic for an epoch\n\n        :param epoch: Current epoch number\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._save_checkpoint": [[144, 177], ["isinstance", "os.path.join", "torch.save", "base_trainer.BaseTrainer.logger.info", "type", "base_trainer.BaseTrainer.model.module.state_dict", "base_trainer.BaseTrainer.model.state_dict", "base_trainer.BaseTrainer.optimizer_g.state_dict", "base_trainer.BaseTrainer.optimizer_d_s.state_dict", "base_trainer.BaseTrainer.optimizer_d_t.state_dict"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "_save_checkpoint", "(", "self", ",", "epoch", ",", "save_best", "=", "False", ",", "monitor_value", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Saving checkpoints\n\n        :param epoch: current epoch number\n        :param log: logging information of the epoch\n        :param save_best: if True, rename the saved checkpoint to 'model_best.pth'\n        \"\"\"", "\n", "arch", "=", "type", "(", "self", ".", "model", ")", ".", "__name__", "\n", "\n", "# assure that we save the model state without DataParallel module", "\n", "if", "isinstance", "(", "self", ".", "model", ",", "torch", ".", "nn", ".", "DataParallel", ")", ":", "\n", "# get the original state out from DataParallel module", "\n", "            ", "model_state", "=", "self", ".", "model", ".", "module", ".", "state_dict", "(", ")", "\n", "", "else", ":", "\n", "            ", "model_state", "=", "self", ".", "model", ".", "state_dict", "(", ")", "\n", "", "state", "=", "{", "\n", "'arch'", ":", "arch", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'logger'", ":", "self", ".", "train_logger", ",", "\n", "'state_dict'", ":", "model_state", ",", "\n", "'optimizer_g'", ":", "self", ".", "optimizer_g", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_d_s'", ":", "self", ".", "optimizer_d_s", ".", "state_dict", "(", ")", "if", "self", ".", "optimizer_d_s", "is", "not", "None", "else", "None", ",", "\n", "'optimizer_d_t'", ":", "self", ".", "optimizer_d_t", ".", "state_dict", "(", ")", "if", "self", ".", "optimizer_d_t", "is", "not", "None", "else", "None", ",", "\n", "'monitor_best'", ":", "self", ".", "monitor_best", ",", "\n", "'config'", ":", "self", ".", "config", "\n", "}", "\n", "\n", "best_str", "=", "'-best-so-far'", "if", "save_best", "else", "''", "\n", "monitor_str", "=", "f'-{self.monitor}{monitor_value:.4f}'", "if", "monitor_value", "is", "not", "None", "else", "''", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "f'checkpoint-epoch{epoch}{monitor_str}{best_str}.pth'", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Saving checkpoint: {} ...\"", ".", "format", "(", "filename", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._resume_checkpoint": [[178, 205], ["base_trainer.BaseTrainer.logger.info", "torch.load", "base_trainer.BaseTrainer.model.load_state_dict", "base_trainer.BaseTrainer.optimizer_g.load_state_dict", "base_trainer.BaseTrainer.logger.info", "base_trainer.BaseTrainer.logger.warning", "base_trainer.BaseTrainer.optimizer_d_s.load_state_dict", "base_trainer.BaseTrainer.optimizer_d_t.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "_resume_checkpoint", "(", "self", ",", "resume_path", ")", ":", "\n", "        ", "\"\"\"\n        Resume from saved checkpoints\n\n        :param resume_path: Checkpoint path to be resumed\n        \"\"\"", "\n", "self", ".", "logger", ".", "info", "(", "\"Loading checkpoint: {} ...\"", ".", "format", "(", "resume_path", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "resume_path", ")", "\n", "self", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "+", "1", "\n", "self", ".", "monitor_best", "=", "checkpoint", "[", "'monitor_best'", "]", "\n", "\n", "# load architecture params from checkpoint.", "\n", "if", "checkpoint", "[", "'config'", "]", "[", "'arch'", "]", "!=", "self", ".", "config", "[", "'arch'", "]", ":", "\n", "            ", "self", ".", "logger", ".", "warning", "(", "\n", "'Warning: Architecture configuration given in config file is different from that of checkpoint. '", "\n", "'This may yield an exception while state_dict is being loaded.'", ")", "\n", "", "self", ".", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "\n", "# load optimizer state from checkpoint only when optimizer type is not changed.", "\n", "self", ".", "optimizer_g", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_g'", "]", ")", "\n", "if", "self", ".", "optimizer_d_s", "is", "not", "None", ":", "\n", "            ", "self", ".", "optimizer_d_s", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_d_s'", "]", ")", "\n", "", "if", "self", ".", "optimizer_d_t", "is", "not", "None", ":", "\n", "            ", "self", ".", "optimizer_d_t", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_d_t'", "]", ")", "\n", "\n", "", "self", ".", "train_logger", "=", "checkpoint", "[", "'logger'", "]", "\n", "self", ".", "logger", ".", "info", "(", "\"Checkpoint '{}' (epoch {}) loaded\"", ".", "format", "(", "resume_path", ",", "self", ".", "start_epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_trainer.BaseTrainer._load_pretrained": [[206, 247], ["base_trainer.BaseTrainer.logger.info", "torch.load", "base_trainer.BaseTrainer.logger.info", "base_trainer.BaseTrainer.model.load_state_dict", "base_trainer.BaseTrainer.model.state_dict", "set", "base_trainer.BaseTrainer.logger.info", "base_trainer.BaseTrainer.logger.info", "set", "base_trainer.BaseTrainer.logger.info", "pretrained_state.items", "base_trainer.BaseTrainer.update", "base_trainer.BaseTrainer.model.load_state_dict", "k.split", "base_trainer.BaseTrainer.keys", "k.split", "pretrained_state.keys", "set", "pretrained_state.keys", "base_trainer.BaseTrainer.keys", "base_trainer.BaseTrainer.logger.warning"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "_load_pretrained", "(", "self", ",", "pretrained_path", ")", ":", "\n", "        ", "self", ".", "logger", ".", "info", "(", "f\"Loading pretrained checkpoint from {pretrained_path}\"", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "pretrained_path", ")", "\n", "pretrained_state", "=", "checkpoint", "[", "'state_dict'", "]", "\n", "if", "self", ".", "pretrained_load_strict", ":", "\n", "            ", "self", ".", "model", ".", "load_state_dict", "(", "pretrained_state", ")", "\n", "", "else", ":", "\n", "            ", "current_state", "=", "self", ".", "model", ".", "state_dict", "(", ")", "\n", "lack_modules", "=", "set", "(", "[", "\n", "k", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "for", "k", "in", "current_state", ".", "keys", "(", ")", "\n", "if", "k", "not", "in", "pretrained_state", ".", "keys", "(", ")", "\n", "]", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Allowing lack of submodules for pretrained model.\"", ")", "\n", "self", ".", "logger", ".", "info", "(", "f\"Submodule(s) not in pretrained model but in current model: {lack_modules}\"", ")", "\n", "redundant_modules", "=", "set", "(", "[", "\n", "k", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "for", "k", "in", "pretrained_state", ".", "keys", "(", ")", "\n", "if", "k", "not", "in", "current_state", ".", "keys", "(", ")", "\n", "]", ")", "\n", "self", ".", "logger", ".", "info", "(", "f\"Submodule(s) not in current model but in pretraired model: {set(redundant_modules)}\"", ")", "\n", "\n", "# used_pretrained_state = {k: v for k, v in pretrained_state.items() if k in current_state}", "\n", "used_pretrained_state", "=", "{", "}", "\n", "prefixs", "=", "[", "\n", "'generator.coarse_net.upsample_module.'", ",", "\n", "'generator.coarse_net.downsample_module.'", ",", "\n", "]", "\n", "for", "k", ",", "v", "in", "pretrained_state", ".", "items", "(", ")", ":", "\n", "                ", "if", "k", "in", "current_state", ":", "\n", "                    ", "used_pretrained_state", "[", "k", "]", "=", "v", "\n", "", "else", ":", "\n", "# Backward compatible", "\n", "                    ", "for", "prefix", "in", "prefixs", ":", "\n", "                        ", "new_key", "=", "prefix", "+", "k", "\n", "if", "new_key", "in", "current_state", ":", "\n", "                            ", "self", ".", "logger", ".", "warning", "(", "f\"Load key to new model: {k} -> {new_key}\"", ")", "\n", "used_pretrained_state", "[", "new_key", "]", "=", "v", "\n", "", "", "", "", "current_state", ".", "update", "(", "used_pretrained_state", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "current_state", ")", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Pretrained checkpoint loaded\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_data_loader.BaseDataLoader.__init__": [[11, 28], ["len", "base_data_loader.BaseDataLoader._split_sampler", "torch.utils.data.DataLoader.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_data_loader.BaseDataLoader._split_sampler", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "dataset", ",", "batch_size", ",", "shuffle", ",", "validation_split", ",", "num_workers", ",", "collate_fn", "=", "default_collate", ")", ":", "\n", "        ", "self", ".", "validation_split", "=", "validation_split", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "\n", "self", ".", "batch_idx", "=", "0", "\n", "self", ".", "n_samples", "=", "len", "(", "dataset", ")", "\n", "\n", "self", ".", "sampler", ",", "self", ".", "valid_sampler", "=", "self", ".", "_split_sampler", "(", "self", ".", "validation_split", ")", "\n", "\n", "self", ".", "init_kwargs", "=", "{", "\n", "'dataset'", ":", "dataset", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'shuffle'", ":", "self", ".", "shuffle", ",", "\n", "'collate_fn'", ":", "collate_fn", ",", "\n", "'num_workers'", ":", "num_workers", "\n", "}", "\n", "super", "(", "BaseDataLoader", ",", "self", ")", ".", "__init__", "(", "sampler", "=", "self", ".", "sampler", ",", "**", "self", ".", "init_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_data_loader.BaseDataLoader._split_sampler": [[29, 51], ["numpy.arange", "numpy.random.seed", "numpy.random.shuffle", "int", "numpy.delete", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "len", "numpy.arange"], "methods", ["None"], ["", "def", "_split_sampler", "(", "self", ",", "split", ")", ":", "\n", "        ", "if", "split", "==", "0.0", ":", "\n", "            ", "return", "None", ",", "None", "\n", "\n", "", "idx_full", "=", "np", ".", "arange", "(", "self", ".", "n_samples", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "1", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idx_full", ")", "\n", "\n", "len_valid", "=", "int", "(", "self", ".", "n_samples", "*", "split", ")", "\n", "\n", "valid_idx", "=", "idx_full", "[", "0", ":", "len_valid", "]", "\n", "train_idx", "=", "np", ".", "delete", "(", "idx_full", ",", "np", ".", "arange", "(", "0", ",", "len_valid", ")", ")", "\n", "\n", "train_sampler", "=", "SubsetRandomSampler", "(", "train_idx", ")", "\n", "valid_sampler", "=", "SubsetRandomSampler", "(", "valid_idx", ")", "\n", "\n", "# turn off shuffle option which is mutually exclusive with sampler", "\n", "self", ".", "shuffle", "=", "False", "\n", "self", ".", "n_samples", "=", "len", "(", "train_idx", ")", "\n", "\n", "return", "train_sampler", ",", "valid_sampler", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_data_loader.BaseDataLoader.split_validation": [[52, 57], ["torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "split_validation", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "valid_sampler", "is", "None", ":", "\n", "            ", "return", "None", "\n", "", "else", ":", "\n", "            ", "return", "DataLoader", "(", "sampler", "=", "self", ".", "valid_sampler", ",", "**", "self", ".", "init_kwargs", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_model.BaseModel.__init__": [[10, 13], ["torch.Module.__init__", "logging.getLogger"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BaseModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_model.BaseModel.forward": [[14, 21], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "input", ")", ":", "\n", "        ", "\"\"\"\n        Forward pass logic\n\n        :return: Model output\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.base.base_model.BaseModel.summary": [[22, 30], ["filter", "sum", "base_model.BaseModel.logger.info", "base_model.BaseModel.logger.info", "base_model.BaseModel.parameters", "numpy.prod", "p.size"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info"], ["", "def", "summary", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Model summary\n        \"\"\"", "\n", "model_parameters", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "self", ".", "parameters", "(", ")", ")", "\n", "params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model_parameters", "]", ")", "\n", "self", ".", "logger", ".", "info", "(", "'Trainable parameters: {}'", ".", "format", "(", "params", ")", ")", "\n", "self", ".", "logger", ".", "info", "(", "self", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.PerceptualSimilarity.perceptual_loss.PerceptModel.__init__": [[33, 36], ["super().__init__", "torch.nn.Parameter"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PerceptModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pred", "=", "torch", ".", "nn", ".", "Parameter", "(", "pred", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.PerceptualSimilarity.perceptual_loss.PerceptModel.forward": [[37, 39], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.PerceptualSimilarity.__init__.PerceptualLoss.__init__": [[9, 15], ["print", "models.dist_model.DistModel", "__init__.PerceptualLoss.model.initialize", "print"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.initialize"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.PerceptualSimilarity.__init__.PerceptualLoss.forward": [[16, 32], ["__init__.PerceptualLoss.model.forward_pair"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.forward_pair"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.__init__": [[7, 23], ["os.path.join", "dominate.document", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "meta", "str"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "web_dir", ",", "title", ",", "image_subdir", "=", "''", ",", "reflesh", "=", "0", ")", ":", "\n", "        ", "self", ".", "title", "=", "title", "\n", "self", ".", "web_dir", "=", "web_dir", "\n", "# self.img_dir = os.path.join(self.web_dir, )", "\n", "self", ".", "img_subdir", "=", "image_subdir", "\n", "self", ".", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "web_dir", ",", "image_subdir", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "web_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "web_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "img_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "img_dir", ")", "\n", "# print(self.img_dir)", "\n", "\n", "", "self", ".", "doc", "=", "dominate", ".", "document", "(", "title", "=", "title", ")", "\n", "if", "reflesh", ">", "0", ":", "\n", "            ", "with", "self", ".", "doc", ".", "head", ":", "\n", "                ", "meta", "(", "http_equiv", "=", "\"reflesh\"", ",", "content", "=", "str", "(", "reflesh", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.get_image_dir": [[24, 26], ["None"], "methods", ["None"], ["", "", "", "def", "get_image_dir", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "img_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.add_header": [[27, 30], ["h3"], "methods", ["None"], ["", "def", "add_header", "(", "self", ",", "str", ")", ":", "\n", "        ", "with", "self", ".", "doc", ":", "\n", "            ", "h3", "(", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.add_table": [[31, 34], ["table", "html.HTML.doc.add"], "methods", ["None"], ["", "", "def", "add_table", "(", "self", ",", "border", "=", "1", ")", ":", "\n", "        ", "self", ".", "t", "=", "table", "(", "border", "=", "border", ",", "style", "=", "\"table-layout: fixed;\"", ")", "\n", "self", ".", "doc", ".", "add", "(", "self", ".", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.add_images": [[35, 46], ["html.HTML.add_table", "tr", "zip", "td", "p", "br", "p", "a", "img", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.add_table"], ["", "def", "add_images", "(", "self", ",", "ims", ",", "txts", ",", "links", ",", "width", "=", "400", ")", ":", "\n", "        ", "self", ".", "add_table", "(", ")", "\n", "with", "self", ".", "t", ":", "\n", "            ", "with", "tr", "(", ")", ":", "\n", "                ", "for", "im", ",", "txt", ",", "link", "in", "zip", "(", "ims", ",", "txts", ",", "links", ")", ":", "\n", "                    ", "with", "td", "(", "style", "=", "\"word-wrap: break-word;\"", ",", "halign", "=", "\"center\"", ",", "valign", "=", "\"top\"", ")", ":", "\n", "                        ", "with", "p", "(", ")", ":", "\n", "                            ", "with", "a", "(", "href", "=", "os", ".", "path", ".", "join", "(", "link", ")", ")", ":", "\n", "                                ", "img", "(", "style", "=", "\"width:%dpx\"", "%", "width", ",", "src", "=", "os", ".", "path", ".", "join", "(", "im", ")", ")", "\n", "", "br", "(", ")", "\n", "p", "(", "txt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.save": [[47, 52], ["open", "open.write", "open.close", "html.HTML.doc.render"], "methods", ["None"], ["", "", "", "", "", "", "def", "save", "(", "self", ",", "file", "=", "'index'", ")", ":", "\n", "        ", "html_file", "=", "'%s/%s.html'", "%", "(", "self", ".", "web_dir", ",", "file", ")", "\n", "f", "=", "open", "(", "html_file", ",", "'wt'", ")", "\n", "f", ".", "write", "(", "self", ".", "doc", ".", "render", "(", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.Visualizer.__init__": [[21, 41], ["os.path.join", "util.mkdirs", "visdom.Visdom", "os.path.join", "print", "util.mkdirs"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.mkdirs", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.mkdirs"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "# self.opt = opt", "\n", "        ", "self", ".", "display_id", "=", "opt", ".", "display_id", "\n", "# self.use_html = opt.is_train and not opt.no_html", "\n", "self", ".", "win_size", "=", "opt", ".", "display_winsize", "\n", "self", ".", "name", "=", "opt", ".", "name", "\n", "self", ".", "display_cnt", "=", "0", "# display_current_results counter", "\n", "self", ".", "display_cnt_high", "=", "0", "\n", "self", ".", "use_html", "=", "opt", ".", "use_html", "\n", "\n", "if", "self", ".", "display_id", ">", "0", ":", "\n", "            ", "import", "visdom", "\n", "self", ".", "vis", "=", "visdom", ".", "Visdom", "(", "port", "=", "opt", ".", "display_port", ")", "\n", "\n", "", "self", ".", "web_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoints_dir", ",", "opt", ".", "name", ",", "'web'", ")", "\n", "util", ".", "mkdirs", "(", "[", "self", ".", "web_dir", ",", "]", ")", "\n", "if", "self", ".", "use_html", ":", "\n", "            ", "self", ".", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "web_dir", ",", "'images'", ")", "\n", "print", "(", "'create web directory %s...'", "%", "self", ".", "web_dir", ")", "\n", "util", ".", "mkdirs", "(", "[", "self", ".", "img_dir", ",", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.Visualizer.display_current_results": [[43, 92], ["visuals.items", "visualizer.Visualizer.vis.images", "visuals.items", "numpy.maximum", "html.HTML", "range", "html.HTML.save", "int", "image_numpy.transpose", "visualizer.zoom_to_res", "images.append", "visualizer.zoom_to_res", "images.append", "os.path.join", "util.save_image", "html.HTML.add_header", "range", "math.ceil", "len", "numpy.ones_like", "dict", "visualizer.zoom_to_res", "visuals.items", "html.HTML.add_images", "visuals.items", "image_numpy.transpose", "ims.append", "txts.append", "links.append", "len", "os.path.join", "os.path.join", "visuals.items"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.zoom_to_res", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.zoom_to_res", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.save_image", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.add_header", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.zoom_to_res", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.add_images", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "", "def", "display_current_results", "(", "self", ",", "visuals", ",", "epoch", ",", "nrows", "=", "None", ",", "res", "=", "256", ")", ":", "\n", "        ", "if", "self", ".", "display_id", ">", "0", ":", "# show images in the browser", "\n", "            ", "title", "=", "self", ".", "name", "\n", "if", "(", "nrows", "is", "None", ")", ":", "\n", "                ", "nrows", "=", "int", "(", "math", ".", "ceil", "(", "len", "(", "visuals", ".", "items", "(", ")", ")", "/", "2.0", ")", ")", "\n", "", "images", "=", "[", "]", "\n", "idx", "=", "0", "\n", "for", "label", ",", "image_numpy", "in", "visuals", ".", "items", "(", ")", ":", "\n", "                ", "title", "+=", "\" | \"", "if", "idx", "%", "nrows", "==", "0", "else", "\", \"", "\n", "title", "+=", "label", "\n", "img", "=", "image_numpy", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "img", "=", "zoom_to_res", "(", "img", ",", "res", "=", "res", ",", "order", "=", "0", ")", "\n", "images", ".", "append", "(", "img", ")", "\n", "idx", "+=", "1", "\n", "", "if", "len", "(", "visuals", ".", "items", "(", ")", ")", "%", "2", "!=", "0", ":", "\n", "                ", "white_image", "=", "np", ".", "ones_like", "(", "image_numpy", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ")", "*", "255", "\n", "white_image", "=", "zoom_to_res", "(", "white_image", ",", "res", "=", "res", ",", "order", "=", "0", ")", "\n", "images", ".", "append", "(", "white_image", ")", "\n", "", "self", ".", "vis", ".", "images", "(", "images", ",", "nrow", "=", "nrows", ",", "win", "=", "self", ".", "display_id", "+", "1", ",", "\n", "opts", "=", "dict", "(", "title", "=", "title", ")", ")", "\n", "\n", "", "if", "self", ".", "use_html", ":", "# save images to a html file", "\n", "            ", "for", "label", ",", "image_numpy", "in", "visuals", ".", "items", "(", ")", ":", "\n", "                ", "img_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "img_dir", ",", "'epoch%.3d_cnt%.6d_%s.png'", "%", "(", "epoch", ",", "self", ".", "display_cnt", ",", "label", ")", ")", "\n", "util", ".", "save_image", "(", "zoom_to_res", "(", "image_numpy", ",", "res", "=", "res", ",", "axis", "=", "2", ")", ",", "img_path", ")", "\n", "\n", "", "self", ".", "display_cnt", "+=", "1", "\n", "self", ".", "display_cnt_high", "=", "np", ".", "maximum", "(", "self", ".", "display_cnt_high", ",", "self", ".", "display_cnt", ")", "\n", "\n", "# update website", "\n", "webpage", "=", "html", ".", "HTML", "(", "self", ".", "web_dir", ",", "'Experiment name = %s'", "%", "self", ".", "name", ",", "reflesh", "=", "1", ")", "\n", "for", "n", "in", "range", "(", "epoch", ",", "0", ",", "-", "1", ")", ":", "\n", "                ", "webpage", ".", "add_header", "(", "'epoch [%d]'", "%", "n", ")", "\n", "if", "(", "n", "==", "epoch", ")", ":", "\n", "                    ", "high", "=", "self", ".", "display_cnt", "\n", "", "else", ":", "\n", "                    ", "high", "=", "self", ".", "display_cnt_high", "\n", "", "for", "c", "in", "range", "(", "high", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "                    ", "ims", "=", "[", "]", "\n", "txts", "=", "[", "]", "\n", "links", "=", "[", "]", "\n", "\n", "for", "label", ",", "image_numpy", "in", "visuals", ".", "items", "(", ")", ":", "\n", "                        ", "img_path", "=", "'epoch%.3d_cnt%.6d_%s.png'", "%", "(", "n", ",", "c", ",", "label", ")", "\n", "ims", ".", "append", "(", "os", ".", "path", ".", "join", "(", "'images'", ",", "img_path", ")", ")", "\n", "txts", ".", "append", "(", "label", ")", "\n", "links", ".", "append", "(", "os", ".", "path", ".", "join", "(", "'images'", ",", "img_path", ")", ")", "\n", "", "webpage", ".", "add_images", "(", "ims", ",", "txts", ",", "links", ",", "width", "=", "self", ".", "win_size", ")", "\n", "", "", "webpage", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.Visualizer.plot_current_errors_save": [[94, 124], ["visualizer.Visualizer.plot_data[].append", "visualizer.Visualizer.plot_data[].append", "enumerate", "hasattr", "matplotlib.subplots", "numpy.save", "numpy.save", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "f.savefig", "f.clf", "matplotlib.close", "list", "numpy.array", "ax.plot", "os.path.join", "errors.keys", "numpy.where", "os.path.join", "os.path.join", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], ["", "", "def", "plot_current_errors_save", "(", "self", ",", "epoch", ",", "counter_ratio", ",", "opt", ",", "errors", ",", "keys", "=", "'+ALL'", ",", "name", "=", "'loss'", ",", "to_plot", "=", "False", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "self", ",", "'plot_data'", ")", ":", "\n", "            ", "self", ".", "plot_data", "=", "{", "'X'", ":", "[", "]", ",", "'Y'", ":", "[", "]", ",", "'legend'", ":", "list", "(", "errors", ".", "keys", "(", ")", ")", "}", "\n", "", "self", ".", "plot_data", "[", "'X'", "]", ".", "append", "(", "epoch", "+", "counter_ratio", ")", "\n", "self", ".", "plot_data", "[", "'Y'", "]", ".", "append", "(", "[", "errors", "[", "k", "]", "for", "k", "in", "self", ".", "plot_data", "[", "'legend'", "]", "]", ")", "\n", "\n", "# embed()", "\n", "if", "(", "keys", "==", "'+ALL'", ")", ":", "\n", "            ", "plot_keys", "=", "self", ".", "plot_data", "[", "'legend'", "]", "\n", "", "else", ":", "\n", "            ", "plot_keys", "=", "keys", "\n", "\n", "", "if", "(", "to_plot", ")", ":", "\n", "            ", "(", "f", ",", "ax", ")", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "", "for", "(", "k", ",", "kname", ")", "in", "enumerate", "(", "plot_keys", ")", ":", "\n", "            ", "kk", "=", "np", ".", "where", "(", "np", ".", "array", "(", "self", ".", "plot_data", "[", "'legend'", "]", ")", "==", "kname", ")", "[", "0", "]", "[", "0", "]", "\n", "x", "=", "self", ".", "plot_data", "[", "'X'", "]", "\n", "y", "=", "np", ".", "array", "(", "self", ".", "plot_data", "[", "'Y'", "]", ")", "[", ":", ",", "kk", "]", "\n", "if", "(", "to_plot", ")", ":", "\n", "                ", "ax", ".", "plot", "(", "x", ",", "y", ",", "'o-'", ",", "label", "=", "kname", ")", "\n", "", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "self", ".", "web_dir", ",", "'%s_x'", ")", "%", "kname", ",", "x", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "self", ".", "web_dir", ",", "'%s_y'", ")", "%", "kname", ",", "y", ")", "\n", "\n", "", "if", "(", "to_plot", ")", ":", "\n", "            ", "plt", ".", "legend", "(", "loc", "=", "0", ",", "fontsize", "=", "'small'", ")", "\n", "plt", ".", "xlabel", "(", "'epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Value'", ")", "\n", "f", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "self", ".", "web_dir", ",", "'%s.png'", "%", "name", ")", ")", "\n", "f", ".", "clf", "(", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.Visualizer.plot_current_errors": [[126, 140], ["visualizer.Visualizer.plot_data[].append", "visualizer.Visualizer.plot_data[].append", "visualizer.Visualizer.vis.line", "hasattr", "list", "numpy.stack", "numpy.array", "errors.keys", "len", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "", "def", "plot_current_errors", "(", "self", ",", "epoch", ",", "counter_ratio", ",", "opt", ",", "errors", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "self", ",", "'plot_data'", ")", ":", "\n", "            ", "self", ".", "plot_data", "=", "{", "'X'", ":", "[", "]", ",", "'Y'", ":", "[", "]", ",", "'legend'", ":", "list", "(", "errors", ".", "keys", "(", ")", ")", "}", "\n", "", "self", ".", "plot_data", "[", "'X'", "]", ".", "append", "(", "epoch", "+", "counter_ratio", ")", "\n", "self", ".", "plot_data", "[", "'Y'", "]", ".", "append", "(", "[", "errors", "[", "k", "]", "for", "k", "in", "self", ".", "plot_data", "[", "'legend'", "]", "]", ")", "\n", "self", ".", "vis", ".", "line", "(", "\n", "X", "=", "np", ".", "stack", "(", "[", "np", ".", "array", "(", "self", ".", "plot_data", "[", "'X'", "]", ")", "]", "*", "len", "(", "self", ".", "plot_data", "[", "'legend'", "]", ")", ",", "1", ")", ",", "\n", "Y", "=", "np", ".", "array", "(", "self", ".", "plot_data", "[", "'Y'", "]", ")", ",", "\n", "opts", "=", "{", "\n", "'title'", ":", "self", ".", "name", "+", "' loss over time'", ",", "\n", "'legend'", ":", "self", ".", "plot_data", "[", "'legend'", "]", ",", "\n", "'xlabel'", ":", "'epoch'", ",", "\n", "'ylabel'", ":", "'loss'", "}", ",", "\n", "win", "=", "self", ".", "display_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.Visualizer.print_current_errors": [[142, 149], ["print", "fid.write", "errors.items"], "methods", ["None"], ["", "def", "print_current_errors", "(", "self", ",", "epoch", ",", "i", ",", "errors", ",", "t", ",", "t2", "=", "-", "1", ",", "t2o", "=", "-", "1", ",", "fid", "=", "None", ")", ":", "\n", "        ", "message", "=", "'(ep: %d, it: %d, t: %.3f[s], ept: %.2f/%.2f[h]) '", "%", "(", "epoch", ",", "i", ",", "t", ",", "t2o", ",", "t2", ")", "\n", "message", "+=", "(", "', '", ")", ".", "join", "(", "[", "'%s: %.3f'", "%", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "errors", ".", "items", "(", ")", "]", ")", "\n", "\n", "print", "(", "message", ")", "\n", "if", "(", "fid", "is", "not", "None", ")", ":", "\n", "            ", "fid", ".", "write", "(", "'%s\\n'", "%", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.Visualizer.save_images_simple": [[152, 172], ["webpage.get_image_dir", "zip", "webpage.add_images", "os.path.join", "ims.append", "txts.append", "links.append", "util.save_image", "util.save_image", "os.path.join", "os.path.join", "visualizer.zoom_to_res"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.get_image_dir", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.add_images", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.save_image", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.save_image", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.zoom_to_res"], ["", "", "def", "save_images_simple", "(", "self", ",", "webpage", ",", "images", ",", "names", ",", "in_txts", ",", "prefix", "=", "''", ",", "res", "=", "256", ")", ":", "\n", "        ", "image_dir", "=", "webpage", ".", "get_image_dir", "(", ")", "\n", "ims", "=", "[", "]", "\n", "txts", "=", "[", "]", "\n", "links", "=", "[", "]", "\n", "\n", "for", "name", ",", "image_numpy", ",", "txt", "in", "zip", "(", "names", ",", "images", ",", "in_txts", ")", ":", "\n", "            ", "image_name", "=", "'%s_%s.png'", "%", "(", "prefix", ",", "name", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "image_name", ")", "\n", "if", "(", "res", "is", "not", "None", ")", ":", "\n", "                ", "util", ".", "save_image", "(", "zoom_to_res", "(", "image_numpy", ",", "res", "=", "res", ",", "axis", "=", "2", ")", ",", "save_path", ")", "\n", "", "else", ":", "\n", "                ", "util", ".", "save_image", "(", "image_numpy", ",", "save_path", ")", "\n", "\n", "", "ims", ".", "append", "(", "os", ".", "path", ".", "join", "(", "webpage", ".", "img_subdir", ",", "image_name", ")", ")", "\n", "# txts.append(name)", "\n", "txts", ".", "append", "(", "txt", ")", "\n", "links", ".", "append", "(", "os", ".", "path", ".", "join", "(", "webpage", ".", "img_subdir", ",", "image_name", ")", ")", "\n", "# embed()", "\n", "", "webpage", ".", "add_images", "(", "ims", ",", "txts", ",", "links", ",", "width", "=", "self", ".", "win_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.Visualizer.save_images": [[174, 193], ["webpage.get_image_dir", "zip", "webpage.add_images", "os.path.join", "util.save_image", "ims.append", "txts.append", "links.append"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.get_image_dir", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.html.HTML.add_images", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.save_image", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "def", "save_images", "(", "self", ",", "webpage", ",", "images", ",", "names", ",", "image_path", ",", "title", "=", "''", ")", ":", "\n", "        ", "image_dir", "=", "webpage", ".", "get_image_dir", "(", ")", "\n", "# short_path = ntpath.basename(image_path)", "\n", "# name = os.path.splitext(short_path)[0]", "\n", "# name = short_path", "\n", "# webpage.add_header('%s, %s' % (name, title))", "\n", "ims", "=", "[", "]", "\n", "txts", "=", "[", "]", "\n", "links", "=", "[", "]", "\n", "\n", "for", "label", ",", "image_numpy", "in", "zip", "(", "names", ",", "images", ")", ":", "\n", "            ", "image_name", "=", "'%s.jpg'", "%", "(", "label", ",", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "image_name", ")", "\n", "util", ".", "save_image", "(", "image_numpy", ",", "save_path", ")", "\n", "\n", "ims", ".", "append", "(", "image_name", ")", "\n", "txts", ".", "append", "(", "label", ")", "\n", "links", ".", "append", "(", "image_name", ")", "\n", "", "webpage", ".", "add_images", "(", "ims", ",", "txts", ",", "links", ",", "width", "=", "self", ".", "win_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.visualizer.zoom_to_res": [[11, 19], ["zoom", "zoom"], "function", ["None"], ["def", "zoom_to_res", "(", "img", ",", "res", "=", "256", ",", "order", "=", "0", ",", "axis", "=", "0", ")", ":", "\n", "# img   3xXxX", "\n", "    ", "from", "scipy", ".", "ndimage", "import", "zoom", "\n", "zoom_factor", "=", "res", "/", "img", ".", "shape", "[", "1", "]", "\n", "if", "(", "axis", "==", "0", ")", ":", "\n", "        ", "return", "zoom", "(", "img", ",", "[", "1", ",", "zoom_factor", ",", "zoom_factor", "]", ",", "order", "=", "order", ")", "\n", "", "elif", "(", "axis", "==", "2", ")", ":", "\n", "        ", "return", "zoom", "(", "img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.zeroClipper.__init__": [[372, 374], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.zeroClipper.__call__": [[375, 380], ["hasattr", "torch.max"], "methods", ["None"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.datetime_str": [[20, 23], ["datetime.datetime.now"], "function", ["None"], ["'-fl'", ",", "'--flow_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Optical flow ground truth directory name\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.read_text_file": [[24, 35], ["open", "open.readline", "open.close", "numpy.array", "vals.append", "open.readline", "float"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["parser", ".", "add_argument", "(", "\n", "'-od'", ",", "'--output_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Output directory name\"", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-o'", ",", "'--output_filename'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Output output filename\"", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.bootstrap": [[36, 39], ["stats.bootstrap", "numpy.array"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.bootstrap"], ["\n", "\n", "", "def", "make_dirs", "(", "dir_name", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir_name", ")", ":", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.rand_flip": [[40, 45], ["numpy.random.binomial"], "function", ["None"], ["        ", "os", ".", "makedirs", "(", "dir_name", ")", "\n", "logger", ".", "info", "(", "f\"Directory {dir_name} made\"", ")", "\n", "\n", "\n", "", "", "ensure_dir", "=", "make_dirs", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.l2": [[46, 48], ["numpy.mean"], "function", ["None"], ["\n", "def", "make_dir_under_root", "(", "root_dir", ",", "name", ")", ":", "\n", "    ", "full_dir_name", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "name", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.psnr": [[49, 51], ["numpy.log10", "numpy.mean"], "function", ["None"], ["make_dirs", "(", "full_dir_name", ")", "\n", "return", "full_dir_name", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.dssim": [[52, 55], ["skimage.measure.compare_ssim"], "function", ["None"], ["\n", "", "def", "rm_dirs", "(", "dir_name", ",", "ignore_errors", "=", "False", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "dir_name", ")", ":", "\n", "        ", "shutil", ".", "rmtree", "(", "dir_name", ",", "ignore_errors", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.rgb2lab": [[257, 260], ["color.rgb2lab"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.rgb2lab"], ["", "if", "max_length", "is", "not", "None", ":", "\n", "            ", "return", "filenames", "[", ":", "max_length", "]", "\n", "", "return", "filenames", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.normalize_blob": [[63, 66], ["numpy.sqrt", "numpy.sum"], "function", ["None"], ["and", "name", "not", "in", "skip_list", "\n", "and", "i", "not", "in", "skip_list", ")", "\n", "]", "\n", "logger", ".", "info", "(", "f\"Reading directories under {root_dir}, exclude {skip_list}, num: {len(dirnames)}\"", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.cos_sim_blob": [[67, 73], ["util.normalize_blob", "util.normalize_blob", "numpy.mean", "numpy.mean", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.normalize_blob", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.normalize_blob"], ["return", "dirnames", "\n", "\n", "\n", "", "def", "bbox_offset", "(", "bbox", ",", "location", ")", ":", "\n", "    ", "x0", ",", "y0", "=", "location", "\n", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "bbox", "\n", "return", "(", "(", "x1", "+", "x0", ",", "y1", "+", "y0", ")", ",", "(", "x2", "+", "x0", ",", "y2", "+", "y0", ")", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.normalize_tensor": [[74, 78], ["torch.sqrt().view", "torch.sqrt", "in_feat.size", "in_feat.size", "in_feat.size", "torch.sqrt().view.expand_as", "torch.sum"], "function", ["None"], ["\n", "\n", "", "def", "cover2_bbox", "(", "bbox1", ",", "bbox2", ")", ":", "\n", "    ", "x1", "=", "min", "(", "bbox1", "[", "0", "]", "[", "0", "]", ",", "bbox2", "[", "0", "]", "[", "0", "]", ")", "\n", "y1", "=", "min", "(", "bbox1", "[", "0", "]", "[", "1", "]", ",", "bbox2", "[", "0", "]", "[", "1", "]", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.cos_sim": [[79, 87], ["util.normalize_tensor", "util.normalize_tensor", "torch.mean().view", "in0.size", "in0.size", "in0.size", "torch.mean", "torch.mean().view", "torch.mean", "torch.sum().view", "torch.sum"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.normalize_tensor", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.normalize_tensor"], ["x2", "=", "max", "(", "bbox1", "[", "1", "]", "[", "0", "]", ",", "bbox2", "[", "1", "]", "[", "0", "]", ")", "\n", "y2", "=", "max", "(", "bbox1", "[", "1", "]", "[", "1", "]", ",", "bbox2", "[", "1", "]", "[", "1", "]", ")", "\n", "return", "(", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ")", "\n", "\n", "\n", "", "def", "extend_r_bbox", "(", "bbox", ",", "w", ",", "h", ",", "r", ")", ":", "\n", "    ", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "bbox", "\n", "x1", "=", "max", "(", "x1", "-", "r", ",", "0", ")", "\n", "x2", "=", "min", "(", "x2", "+", "r", ",", "w", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2np": [[91, 94], ["tensor_obj[].cpu().float().numpy().transpose", "tensor_obj[].cpu().float().numpy", "tensor_obj[].cpu().float", "tensor_obj[].cpu"], "function", ["None"], ["\n", "\n", "", "def", "mean_squared_error", "(", "A", ",", "B", ")", ":", "\n", "    ", "return", "np", ".", "square", "(", "np", ".", "subtract", "(", "A", ",", "B", ")", ")", ".", "mean", "(", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.np2tensor": [[95, 98], ["torch.Tensor", "np_obj[].transpose"], "function", ["None"], ["\n", "\n", "", "def", "bboxes_to_mask", "(", "size", ",", "bboxes", ")", ":", "\n", "    ", "mask", "=", "Image", ".", "new", "(", "\"L\"", ",", "size", ",", "255", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2tensorlab": [[99, 114], ["util.tensor2im", "color.rgb2lab", "util.np2tensor"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2im", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.rgb2lab", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.np2tensor"], ["mask", "=", "np", ".", "array", "(", "mask", ")", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "        ", "try", ":", "\n", "            ", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "bbox", "\n", "", "except", "Exception", ":", "\n", "            ", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", "=", "bbox", "\n", "\n", "", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "0", "\n", "", "mask", "=", "Image", ".", "fromarray", "(", "mask", ".", "astype", "(", "\"uint8\"", ")", ")", "\n", "return", "mask", "\n", "\n", "\n", "", "def", "get_extended_from_box", "(", "img_size", ",", "box", ",", "patch_size", ")", ":", "\n", "    ", "def", "_decide_patch_num", "(", "box_width", ",", "patch_size", ")", ":", "\n", "        ", "num", "=", "np", ".", "ceil", "(", "box_width", "/", "patch_size", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "if", "(", "num", "*", "patch_size", "-", "box_width", ")", "<", "(", "patch_size", "//", "2", ")", ":", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensorlab2tensor": [[115, 137], ["warnings.filterwarnings", "util.tensor2np", "numpy.clip", "color.rgb2lab", "util.np2tensor", "util.im2tensor", "color.lab2rgb", "rgb_back.astype", "numpy.isclose", "util.im2tensor", "lab.astype", "numpy.prod"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2np", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.rgb2lab", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.np2tensor", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.im2tensor", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.im2tensor"], ["            ", "num", "+=", "1", "\n", "", "return", "num", "\n", "\n", "", "x1", ",", "y1", "=", "box", "[", "0", "]", "\n", "x2", ",", "y2", "=", "box", "[", "1", "]", "\n", "new_box", "=", "(", "x1", ",", "y1", ",", "x2", "-", "x1", ",", "y2", "-", "y1", ")", "\n", "box_x_start", ",", "box_y_start", ",", "box_x_size", ",", "box_y_size", "=", "new_box", "\n", "\n", "patchN_x", "=", "_decide_patch_num", "(", "box_x_size", ",", "patch_size", ")", "\n", "patchN_y", "=", "_decide_patch_num", "(", "box_y_size", ",", "patch_size", ")", "\n", "\n", "extend_x", "=", "(", "patch_size", "*", "patchN_x", "-", "box_x_size", ")", "//", "2", "\n", "extend_y", "=", "(", "patch_size", "*", "patchN_y", "-", "box_y_size", ")", "//", "2", "\n", "img_x_size", "=", "img_size", "[", "0", "]", "\n", "img_y_size", "=", "img_size", "[", "1", "]", "\n", "\n", "x_start", "=", "max", "(", "0", ",", "box_x_start", "-", "extend_x", ")", "\n", "x_end", "=", "min", "(", "box_x_start", "-", "extend_x", "+", "patchN_x", "*", "patch_size", ",", "img_x_size", ")", "\n", "\n", "y_start", "=", "max", "(", "0", ",", "box_y_start", "-", "extend_y", ")", "\n", "y_end", "=", "min", "(", "box_y_start", "-", "extend_y", "+", "patchN_y", "*", "patch_size", ",", "img_y_size", ")", "\n", "x_start", ",", "y_start", ",", "x_end", ",", "y_end", "=", "int", "(", "x_start", ")", ",", "int", "(", "y_start", ")", ",", "int", "(", "x_end", ")", ",", "int", "(", "y_end", ")", "\n", "extented_box", "=", "(", "(", "x_start", ",", "y_start", ")", ",", "(", "x_end", ",", "y_end", ")", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2im": [[138, 143], ["image_tensor[].cpu().float().numpy", "image_tensor[].cpu().float().numpy.astype", "image_tensor[].cpu().float", "numpy.transpose", "image_tensor[].cpu"], "function", ["None"], ["return", "extented_box", "\n", "\n", "\n", "# code modified from https://github.com/WonwoongCho/Generative-Inpainting-pytorch/blob/master/util.py", "\n", "", "def", "spatial_discounting_mask", "(", "mask_width", ",", "mask_height", ",", "discounting_gamma", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.im2tensor": [[144, 148], ["torch.Tensor", "[].transpose"], "function", ["None"], ["\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2vec": [[149, 151], ["vector_tensor.data.cpu().numpy", "vector_tensor.data.cpu"], "function", ["None"], ["gamma", "=", "discounting_gamma", "\n", "mask_values", "=", "np", ".", "ones", "(", "(", "mask_width", ",", "mask_height", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "mask_width", ")", ":", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.diagnose_network": [[152, 163], ["net.parameters", "print", "print", "torch.mean", "torch.abs"], "function", ["None"], ["        ", "for", "j", "in", "range", "(", "mask_height", ")", ":", "\n", "            ", "mask_values", "[", "i", ",", "j", "]", "=", "max", "(", "\n", "gamma", "**", "min", "(", "i", ",", "mask_width", "-", "i", ")", ",", "\n", "gamma", "**", "min", "(", "j", ",", "mask_height", "-", "j", ")", ")", "\n", "\n", "", "", "return", "mask_values", "\n", "\n", "\n", "", "def", "bboxes_to_discounting_loss_mask", "(", "img_size", ",", "bboxes", ",", "discounting_gamma", "=", "0.99", ")", ":", "\n", "    ", "mask", "=", "np", ".", "zeros", "(", "img_size", ",", "dtype", "=", "np", ".", "float32", ")", "+", "0.5", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "        ", "try", ":", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.grab_patch": [[164, 166], ["None"], "function", ["None"], ["            ", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "bbox", "\n", "", "except", "Exception", ":", "\n", "            ", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", "=", "bbox", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.load_image": [[167, 180], ["rawpy.imread", "raw.postprocess", "cv2.imread", "matplotlib.imread"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.networks.CoarseNet.postprocess"], ["", "mask_width", ",", "mask_height", "=", "y2", "-", "y1", ",", "x2", "-", "x1", "\n", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "spatial_discounting_mask", "(", "mask_width", ",", "mask_height", ",", "discounting_gamma", ")", "\n", "", "return", "mask", "\n", "\n", "\n", "", "def", "find_proper_window", "(", "image_size", ",", "bbox_point", ")", ":", "\n", "    ", "'''\n        parameters:\n            image_size(2-tuple): (height, width)\n            bbox_point(2-2-tuple): (first_point, last_point)\n        return values:\n            window left-up point, (2-tuple)\n            window right-bottom point, (2-tuple)\n    '''", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.resize_image": [[182, 191], ["max", "scipy.ndimage.interpolation.zoom"], "function", ["None"], ["bbox_width", "=", "bbox_point", "[", "1", "]", "[", "1", "]", "-", "bbox_point", "[", "0", "]", "[", "1", "]", "\n", "\n", "window_size", "=", "min", "(", "\n", "max", "(", "bbox_height", ",", "bbox_width", ")", "*", "2", ",", "\n", "image_size", "[", "0", "]", ",", "image_size", "[", "1", "]", "\n", ")", "\n", "# Limit min window size due to the requirement of VGG16", "\n", "window_size", "=", "max", "(", "window_size", ",", "32", ")", "\n", "\n", "horizontal_span", "=", "window_size", "-", "(", "bbox_point", "[", "1", "]", "[", "1", "]", "-", "bbox_point", "[", "0", "]", "[", "1", "]", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.resize_image_zoom": [[192, 197], ["scipy.ndimage.interpolation.zoom"], "function", ["None"], ["vertical_span", "=", "window_size", "-", "(", "bbox_point", "[", "1", "]", "[", "0", "]", "-", "bbox_point", "[", "0", "]", "[", "0", "]", ")", "\n", "\n", "top_bound", ",", "bottom_bound", "=", "bbox_point", "[", "0", "]", "[", "0", "]", "-", "vertical_span", "//", "2", ",", "bbox_point", "[", "1", "]", "[", "0", "]", "+", "vertical_span", "//", "2", "\n", "left_bound", ",", "right_bound", "=", "bbox_point", "[", "0", "]", "[", "1", "]", "-", "horizontal_span", "//", "2", ",", "bbox_point", "[", "1", "]", "[", "1", "]", "+", "horizontal_span", "//", "2", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.save_image": [[198, 201], ["PIL.Image.fromarray", "Image.fromarray.save"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], ["\n", "if", "left_bound", "<", "0", ":", "\n", "        ", "right_bound", "+=", "0", "-", "left_bound", "\n", "left_bound", "+=", "0", "-", "left_bound", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.prep_display_image": [[203, 208], ["numpy.clip().astype", "numpy.clip", "numpy.clip"], "function", ["None"], ["        ", "left_bound", "-=", "right_bound", "-", "image_size", "[", "1", "]", "\n", "right_bound", "-=", "right_bound", "-", "image_size", "[", "1", "]", "\n", "\n", "", "if", "top_bound", "<", "0", ":", "\n", "        ", "bottom_bound", "+=", "0", "-", "top_bound", "\n", "top_bound", "+=", "0", "-", "top_bound", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.info": [[210, 224], ["print", "dir", "isinstance", "getattr", "s.split", "method.ljust", "processFunc", "str", "getattr"], "function", ["None"], ["        ", "top_bound", "-=", "bottom_bound", "-", "image_size", "[", "0", "]", "\n", "bottom_bound", "-=", "bottom_bound", "-", "image_size", "[", "0", "]", "\n", "\n", "", "return", "(", "top_bound", ",", "left_bound", ")", ",", "(", "bottom_bound", ",", "right_bound", ")", "\n", "\n", "\n", "", "def", "drawrect", "(", "drawcontext", ",", "xy", ",", "outline", "=", "None", ",", "width", "=", "0", ",", "partial", "=", "None", ")", ":", "\n", "    ", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "=", "xy", "\n", "if", "partial", "is", "None", ":", "\n", "        ", "points", "=", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "x1", ",", "y2", ")", ",", "(", "x1", ",", "y1", ")", "\n", "drawcontext", ".", "line", "(", "points", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "", "else", ":", "\n", "        ", "drawcontext", ".", "line", "(", "[", "(", "x1", ",", "y1", ")", ",", "(", "x1", ",", "y1", "+", "partial", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "drawcontext", ".", "line", "(", "[", "(", "x1", "+", "partial", ",", "y1", ")", ",", "(", "x1", ",", "y1", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.varname": [[226, 231], ["inspect.getframeinfo", "re.search", "re.search.group", "inspect.currentframe"], "function", ["None"], ["drawcontext", ".", "line", "(", "[", "(", "x2", ",", "y1", ")", ",", "(", "x2", "-", "partial", ",", "y1", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "\n", "drawcontext", ".", "line", "(", "[", "(", "x1", ",", "y2", ")", ",", "(", "x1", "+", "partial", ",", "y2", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "drawcontext", ".", "line", "(", "[", "(", "x1", ",", "y2", ")", ",", "(", "x1", ",", "y2", "-", "partial", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n", "\n", "drawcontext", ".", "line", "(", "[", "(", "x2", "-", "partial", ",", "y2", ")", ",", "(", "x2", ",", "y2", ")", "]", ",", "fill", "=", "outline", ",", "width", "=", "width", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.print_numpy": [[233, 242], ["x.flatten.astype", "print", "x.flatten.flatten", "print", "numpy.mean", "numpy.min", "numpy.max", "numpy.median", "numpy.std"], "function", ["None"], ["\n", "\n", "", "", "def", "get_everything_under", "(", "root_dir", ",", "pattern", "=", "'*'", ",", "only_dirs", "=", "False", ",", "only_files", "=", "False", ")", ":", "\n", "    ", "assert", "not", "(", "only_dirs", "and", "only_files", ")", ",", "'You will get nothnig '", "'when \"only_dirs\" and \"only_files\" are both set to True'", "\n", "everything", "=", "sorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "root_dir", ",", "pattern", ")", ")", ")", "\n", "if", "only_dirs", ":", "\n", "        ", "everything", "=", "[", "f", "for", "f", "in", "everything", "if", "os", ".", "path", ".", "isdir", "(", "f", ")", "]", "\n", "", "if", "only_files", ":", "\n", "        ", "everything", "=", "[", "f", "for", "f", "in", "everything", "if", "os", ".", "path", ".", "isfile", "(", "f", ")", "]", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.mkdirs": [[244, 250], ["isinstance", "util.mkdir", "isinstance", "util.mkdir"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.mkdir", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.mkdir"], ["", "return", "everything", "\n", "\n", "\n", "", "def", "read_filenames_from_dir", "(", "dir_name", ",", "reader", ",", "max_length", "=", "None", ")", ":", "\n", "    ", "logger", ".", "debug", "(", "\n", "f\"{reader} reading files from {dir_name}\"", ")", "\n", "filenames", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.mkdir": [[252, 255], ["os.path.exists", "os.makedirs"], "function", ["None"], ["        ", "assert", "len", "(", "dirs", ")", "==", "0", ",", "f\"There are direcories: {dirs} in {root}\"", "\n", "assert", "len", "(", "files", ")", "!=", "0", ",", "f\"There are no files in {root}\"", "\n", "filenames", "=", "[", "os", ".", "path", ".", "join", "(", "root", ",", "name", ")", "for", "name", "in", "sorted", "(", "files", ")", "]", "\n", "for", "name", "in", "filenames", ":", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.montage": [[262, 370], ["numpy.array", "numpy.array", "numpy.uint", "numpy.uint", "numpy.zeros", "numpy.random.permutation", "numpy.ceil", "numpy.ceil", "numpy.ceil", "numpy.meshgrid", "[].astype", "imgs.reshape.reshape", "np.array.flatten", "numpy.sqrt", "numpy.ceil", "numpy.arange", "numpy.arange", "numpy.meshgrid", "np.uint.flatten", "np.uint.flatten", "numpy.uint", "numpy.uint", "numpy.concatenate", "numpy.ceil", "numpy.arange", "numpy.arange", "backClr.flatten", "numpy.uint", "numpy.uint", "numpy.uint", "numpy.uint"], "function", ["None"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.flatten_nested_list": [[381, 388], ["accum.append"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.read_file": [[389, 406], ["open", "open.readline", "open.close", "open.readline", "agg_str.replace", "agg_str.split", "ret_list.append"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.read_csv_file_as_text": [[407, 416], ["open", "open.readline", "open.close", "agg_str.append", "open.readline"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.random_swap": [[417, 422], ["numpy.random.rand"], "function", ["None"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.voc_ap": [[423, 455], ["numpy.arange", "numpy.concatenate", "numpy.concatenate", "range", "numpy.sum", "numpy.maximum", "numpy.where", "numpy.sum", "numpy.max"], "function", ["None"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.models.create_model": [[3, 11], ["print", "DistModel", "DistModel.initialize", "print", "DistModel.name"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.initialize", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.custom_dataset_data_loader.CustomDatasetDataLoader.name"], ["def", "create_model", "(", "opt", ")", ":", "\n", "    ", "model", "=", "None", "\n", "print", "(", "opt", ".", "model", ")", "\n", "from", ".", "siam_model", "import", "*", "\n", "model", "=", "DistModel", "(", ")", "\n", "model", ".", "initialize", "(", "opt", ",", "opt", ".", "batchSize", ",", ")", "\n", "print", "(", "\"model [%s] was created\"", "%", "(", "model", ".", "name", "(", ")", ")", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.PNet.__init__": [[18, 44], ["torch.Module.__init__", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "pretrained_networks.vgg16", "networks_basic.PNet.net.cuda", "networks_basic.PNet.shift.cuda", "networks_basic.PNet.scale.cuda", "pretrained_networks.alexnet", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "pretrained_networks.resnet", "pretrained_networks.squeezenet", "int"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "pnet_type", "=", "'vgg'", ",", "pnet_rand", "=", "False", ",", "use_gpu", "=", "True", ")", ":", "\n", "        ", "super", "(", "PNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "\n", "self", ".", "pnet_type", "=", "pnet_type", "\n", "self", ".", "pnet_rand", "=", "pnet_rand", "\n", "\n", "self", ".", "shift", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "Tensor", "(", "[", "-", ".030", ",", "-", ".088", ",", "-", ".188", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "scale", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "Tensor", "(", "[", ".458", ",", ".448", ",", ".450", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "\n", "if", "(", "self", ".", "pnet_type", "in", "[", "'vgg'", ",", "'vgg16'", "]", ")", ":", "\n", "            ", "self", ".", "net", "=", "pn", ".", "vgg16", "(", "pretrained", "=", "not", "self", ".", "pnet_rand", ",", "requires_grad", "=", "False", ")", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'alex'", ")", ":", "\n", "            ", "self", ".", "net", "=", "pn", ".", "alexnet", "(", "pretrained", "=", "not", "self", ".", "pnet_rand", ",", "requires_grad", "=", "False", ")", "\n", "", "elif", "(", "self", ".", "pnet_type", "[", ":", "-", "2", "]", "==", "'resnet'", ")", ":", "\n", "            ", "self", ".", "net", "=", "pn", ".", "resnet", "(", "pretrained", "=", "not", "self", ".", "pnet_rand", ",", "requires_grad", "=", "False", ",", "num", "=", "int", "(", "self", ".", "pnet_type", "[", "-", "2", ":", "]", ")", ")", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "\n", "            ", "self", ".", "net", "=", "pn", ".", "squeezenet", "(", "pretrained", "=", "not", "self", ".", "pnet_rand", ",", "requires_grad", "=", "False", ")", "\n", "\n", "", "self", ".", "L", "=", "self", ".", "net", ".", "N_slices", "\n", "\n", "if", "(", "use_gpu", ")", ":", "\n", "            ", "self", ".", "net", ".", "cuda", "(", ")", "\n", "self", ".", "shift", "=", "self", ".", "shift", ".", "cuda", "(", ")", "\n", "self", ".", "scale", "=", "self", ".", "scale", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.PNet.forward": [[45, 68], ["networks_basic.PNet.net.forward", "networks_basic.PNet.net.forward", "enumerate", "networks_basic.PNet.scale.expand_as", "networks_basic.PNet.scale.expand_as", "networks_basic.PNet.shift.expand_as", "networks_basic.PNet.shift.expand_as", "util.util.util.cos_sim"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.cos_sim"], ["", "", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "False", ")", ":", "\n", "        ", "in0_sc", "=", "(", "in0", "-", "self", ".", "shift", ".", "expand_as", "(", "in0", ")", ")", "/", "self", ".", "scale", ".", "expand_as", "(", "in0", ")", "\n", "in1_sc", "=", "(", "in1", "-", "self", ".", "shift", ".", "expand_as", "(", "in0", ")", ")", "/", "self", ".", "scale", ".", "expand_as", "(", "in0", ")", "\n", "\n", "outs0", "=", "self", ".", "net", ".", "forward", "(", "in0_sc", ")", "\n", "outs1", "=", "self", ".", "net", ".", "forward", "(", "in1_sc", ")", "\n", "\n", "if", "(", "retPerLayer", ")", ":", "\n", "            ", "all_scores", "=", "[", "]", "\n", "", "for", "(", "kk", ",", "out0", ")", "in", "enumerate", "(", "outs0", ")", ":", "\n", "            ", "cur_score", "=", "(", "1.", "-", "util", ".", "cos_sim", "(", "outs0", "[", "kk", "]", ",", "outs1", "[", "kk", "]", ")", ")", "\n", "if", "(", "kk", "==", "0", ")", ":", "\n", "                ", "val", "=", "1.", "*", "cur_score", "\n", "", "else", ":", "\n", "# val = val + self.lambda_feat_layers[kk]*cur_score", "\n", "                ", "val", "=", "val", "+", "cur_score", "\n", "", "if", "(", "retPerLayer", ")", ":", "\n", "                ", "all_scores", "+=", "[", "cur_score", "]", "\n", "\n", "", "", "if", "(", "retPerLayer", ")", ":", "\n", "            ", "return", "(", "val", ",", "all_scores", ")", "\n", "", "else", ":", "\n", "            ", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.PNetLin.__init__": [[71, 125], ["torch.Module.__init__", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "net_type", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "networks_basic.PNetLin.shift.cuda", "networks_basic.PNetLin.scale.cuda", "networks_basic.PNetLin.lin0.cuda", "networks_basic.PNetLin.lin1.cuda", "networks_basic.PNetLin.lin2.cuda", "networks_basic.PNetLin.lin3.cuda", "networks_basic.PNetLin.lin4.cuda", "net_type", "networks_basic.PNetLin.net.cuda", "networks_basic.PNetLin.net[].cuda", "networks_basic.PNetLin.lin5.cuda", "networks_basic.PNetLin.lin6.cuda", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pnet_type", "=", "'vgg'", ",", "pnet_rand", "=", "False", ",", "pnet_tune", "=", "False", ",", "use_dropout", "=", "True", ",", "use_gpu", "=", "True", ",", "spatial", "=", "False", ",", "version", "=", "'0.1'", ")", ":", "\n", "        ", "super", "(", "PNetLin", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "pnet_type", "=", "pnet_type", "\n", "self", ".", "pnet_tune", "=", "pnet_tune", "\n", "self", ".", "pnet_rand", "=", "pnet_rand", "\n", "self", ".", "spatial", "=", "spatial", "\n", "self", ".", "version", "=", "version", "\n", "\n", "if", "(", "self", ".", "pnet_type", "in", "[", "'vgg'", ",", "'vgg16'", "]", ")", ":", "\n", "            ", "net_type", "=", "pn", ".", "vgg16", "\n", "self", ".", "chns", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", "]", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'alex'", ")", ":", "\n", "            ", "net_type", "=", "pn", ".", "alexnet", "\n", "self", ".", "chns", "=", "[", "64", ",", "192", ",", "384", ",", "256", ",", "256", "]", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "\n", "            ", "net_type", "=", "pn", ".", "squeezenet", "\n", "self", ".", "chns", "=", "[", "64", ",", "128", ",", "256", ",", "384", ",", "384", ",", "512", ",", "512", "]", "\n", "\n", "", "if", "(", "self", ".", "pnet_tune", ")", ":", "\n", "            ", "self", ".", "net", "=", "net_type", "(", "pretrained", "=", "not", "self", ".", "pnet_rand", ",", "requires_grad", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "net", "=", "[", "net_type", "(", "pretrained", "=", "not", "self", ".", "pnet_rand", ",", "requires_grad", "=", "False", ")", ",", "]", "\n", "\n", "", "self", ".", "lin0", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "0", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin1", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "1", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin2", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "2", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin3", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "3", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin4", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "4", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lins", "=", "[", "self", ".", "lin0", ",", "self", ".", "lin1", ",", "self", ".", "lin2", ",", "self", ".", "lin3", ",", "self", ".", "lin4", "]", "\n", "if", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "# 7 layers for squeezenet", "\n", "            ", "self", ".", "lin5", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "5", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin6", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "6", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lins", "+=", "[", "self", ".", "lin5", ",", "self", ".", "lin6", "]", "\n", "\n", "", "self", ".", "shift", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "Tensor", "(", "[", "-", ".030", ",", "-", ".088", ",", "-", ".188", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "scale", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "Tensor", "(", "[", ".458", ",", ".448", ",", ".450", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "\n", "if", "(", "use_gpu", ")", ":", "\n", "            ", "if", "(", "self", ".", "pnet_tune", ")", ":", "\n", "                ", "self", ".", "net", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "net", "[", "0", "]", ".", "cuda", "(", ")", "\n", "", "self", ".", "shift", "=", "self", ".", "shift", ".", "cuda", "(", ")", "\n", "self", ".", "scale", "=", "self", ".", "scale", ".", "cuda", "(", ")", "\n", "self", ".", "lin0", ".", "cuda", "(", ")", "\n", "self", ".", "lin1", ".", "cuda", "(", ")", "\n", "self", ".", "lin2", ".", "cuda", "(", ")", "\n", "self", ".", "lin3", ".", "cuda", "(", ")", "\n", "self", ".", "lin4", ".", "cuda", "(", ")", "\n", "if", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "\n", "                ", "self", ".", "lin5", ".", "cuda", "(", ")", "\n", "self", ".", "lin6", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.PNetLin.forward": [[126, 174], ["enumerate", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "val.view.view.view", "networks_basic.PNetLin.scale.expand_as", "networks_basic.PNetLin.scale.expand_as", "networks_basic.PNetLin.net.forward", "networks_basic.PNetLin.net.forward", "networks_basic.PNetLin.net[].forward", "networks_basic.PNetLin.net[].forward", "len", "util.util.util.normalize_tensor", "util.util.util.normalize_tensor", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "networks_basic.PNetLin.shift.expand_as", "networks_basic.PNetLin.shift.expand_as", "lin_models.extend", "lin_models[].model", "networks_basic.PNetLin.lin0.model", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "val.view.view.size", "val.view.view.size", "range", "networks_basic.PNetLin.lin1.model", "networks_basic.PNetLin.lin2.model", "networks_basic.PNetLin.lin3.model", "networks_basic.PNetLin.lin4.model", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "len", "networks_basic.PNetLin.lin5.model", "networks_basic.PNetLin.lin6.model"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.normalize_tensor", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.normalize_tensor"], ["", "", "", "def", "forward", "(", "self", ",", "in0", ",", "in1", ")", ":", "\n", "        ", "in0_sc", "=", "(", "in0", "-", "self", ".", "shift", ".", "expand_as", "(", "in0", ")", ")", "/", "self", ".", "scale", ".", "expand_as", "(", "in0", ")", "\n", "in1_sc", "=", "(", "in1", "-", "self", ".", "shift", ".", "expand_as", "(", "in0", ")", ")", "/", "self", ".", "scale", ".", "expand_as", "(", "in0", ")", "\n", "\n", "if", "(", "self", ".", "version", "==", "'0.0'", ")", ":", "\n", "# v0.0 - original release had a bug, where input was not scaled", "\n", "            ", "in0_input", "=", "in0", "\n", "in1_input", "=", "in1", "\n", "", "else", ":", "\n", "# v0.1", "\n", "            ", "in0_input", "=", "in0_sc", "\n", "in1_input", "=", "in1_sc", "\n", "\n", "", "if", "(", "self", ".", "pnet_tune", ")", ":", "\n", "            ", "outs0", "=", "self", ".", "net", ".", "forward", "(", "in0_input", ")", "\n", "outs1", "=", "self", ".", "net", ".", "forward", "(", "in1_input", ")", "\n", "", "else", ":", "\n", "            ", "outs0", "=", "self", ".", "net", "[", "0", "]", ".", "forward", "(", "in0_input", ")", "\n", "outs1", "=", "self", ".", "net", "[", "0", "]", ".", "forward", "(", "in1_input", ")", "\n", "\n", "", "feats0", "=", "{", "}", "\n", "feats1", "=", "{", "}", "\n", "diffs", "=", "[", "0", "]", "*", "len", "(", "outs0", ")", "\n", "\n", "for", "(", "kk", ",", "out0", ")", "in", "enumerate", "(", "outs0", ")", ":", "\n", "            ", "feats0", "[", "kk", "]", "=", "util", ".", "normalize_tensor", "(", "outs0", "[", "kk", "]", ")", "\n", "feats1", "[", "kk", "]", "=", "util", ".", "normalize_tensor", "(", "outs1", "[", "kk", "]", ")", "\n", "diffs", "[", "kk", "]", "=", "(", "feats0", "[", "kk", "]", "-", "feats1", "[", "kk", "]", ")", "**", "2", "\n", "\n", "", "if", "self", ".", "spatial", ":", "\n", "            ", "lin_models", "=", "[", "self", ".", "lin0", ",", "self", ".", "lin1", ",", "self", ".", "lin2", ",", "self", ".", "lin3", ",", "self", ".", "lin4", "]", "\n", "if", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "\n", "                ", "lin_models", ".", "extend", "(", "[", "self", ".", "lin5", ",", "self", ".", "lin6", "]", ")", "\n", "", "res", "=", "[", "lin_models", "[", "kk", "]", ".", "model", "(", "diffs", "[", "kk", "]", ")", "for", "kk", "in", "range", "(", "len", "(", "diffs", ")", ")", "]", "\n", "return", "res", "\n", "\n", "", "val", "=", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "self", ".", "lin0", ".", "model", "(", "diffs", "[", "0", "]", ")", ",", "dim", "=", "3", ")", ",", "dim", "=", "2", ")", "\n", "val", "=", "val", "+", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "self", ".", "lin1", ".", "model", "(", "diffs", "[", "1", "]", ")", ",", "dim", "=", "3", ")", ",", "dim", "=", "2", ")", "\n", "val", "=", "val", "+", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "self", ".", "lin2", ".", "model", "(", "diffs", "[", "2", "]", ")", ",", "dim", "=", "3", ")", ",", "dim", "=", "2", ")", "\n", "val", "=", "val", "+", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "self", ".", "lin3", ".", "model", "(", "diffs", "[", "3", "]", ")", ",", "dim", "=", "3", ")", ",", "dim", "=", "2", ")", "\n", "val", "=", "val", "+", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "self", ".", "lin4", ".", "model", "(", "diffs", "[", "4", "]", ")", ",", "dim", "=", "3", ")", ",", "dim", "=", "2", ")", "\n", "if", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "\n", "            ", "val", "=", "val", "+", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "self", ".", "lin5", ".", "model", "(", "diffs", "[", "5", "]", ")", ",", "dim", "=", "3", ")", ",", "dim", "=", "2", ")", "\n", "val", "=", "val", "+", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "self", ".", "lin6", ".", "model", "(", "diffs", "[", "6", "]", ")", ",", "dim", "=", "3", ")", ",", "dim", "=", "2", ")", "\n", "\n", "", "val", "=", "val", ".", "view", "(", "val", ".", "size", "(", ")", "[", "0", "]", ",", "val", ".", "size", "(", ")", "[", "1", "]", ",", "1", ",", "1", ")", "\n", "\n", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.Dist2LogitLayer.__init__": [[177, 187], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "chn_mid", "=", "32", ",", "use_sigmoid", "=", "True", ")", ":", "\n", "        ", "super", "(", "Dist2LogitLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "nn", ".", "Conv2d", "(", "5", ",", "chn_mid", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "chn_mid", ",", "chn_mid", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "chn_mid", ",", "1", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "]", "\n", "if", "(", "use_sigmoid", ")", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "Sigmoid", "(", ")", ",", "]", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.Dist2LogitLayer.forward": [[188, 190], ["networks_basic.Dist2LogitLayer.model.forward", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward"], ["", "def", "forward", "(", "self", ",", "d0", ",", "d1", ",", "eps", "=", "0.1", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "forward", "(", "torch", ".", "cat", "(", "(", "d0", ",", "d1", ",", "d0", "-", "d1", ",", "d0", "/", "(", "d1", "+", "eps", ")", ",", "d1", "/", "(", "d0", "+", "eps", ")", ")", ",", "dim", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.BCERankingLoss.__init__": [[192, 202], ["torch.Module.__init__", "networks_basic.Dist2LogitLayer", "list", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.Sequential", "torch.Sequential", "networks_basic.BCERankingLoss.net.parameters", "networks_basic.BCERankingLoss.net.cuda"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_gpu", "=", "True", ",", "chn_mid", "=", "32", ")", ":", "\n", "        ", "super", "(", "BCERankingLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "net", "=", "Dist2LogitLayer", "(", "chn_mid", "=", "chn_mid", ")", "\n", "self", ".", "parameters", "=", "list", "(", "self", ".", "net", ".", "parameters", "(", ")", ")", "\n", "self", ".", "loss", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "[", "self", ".", "net", "]", ")", "\n", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "self", ".", "net", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.BCERankingLoss.forward": [[203, 209], ["networks_basic.BCERankingLoss.net.forward", "networks_basic.BCERankingLoss.loss", "per.cuda.cuda.cuda"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward"], ["", "", "def", "forward", "(", "self", ",", "d0", ",", "d1", ",", "judge", ")", ":", "\n", "        ", "per", "=", "(", "judge", "+", "1.", ")", "/", "2.", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "per", "=", "per", ".", "cuda", "(", ")", "\n", "", "self", ".", "logit", "=", "self", ".", "net", ".", "forward", "(", "d0", ",", "d1", ")", "\n", "return", "self", ".", "loss", "(", "self", ".", "logit", ",", "per", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.NetLinLayer.__init__": [[212, 218], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["def", "__init__", "(", "self", ",", "chn_in", ",", "chn_out", "=", "1", ",", "use_dropout", "=", "False", ")", ":", "\n", "        ", "super", "(", "NetLinLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "nn", ".", "Dropout", "(", ")", ",", "]", "if", "(", "use_dropout", ")", "else", "[", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "chn_in", ",", "chn_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.FakeNet.__init__": [[222, 226], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_gpu", "=", "True", ",", "colorspace", "=", "'Lab'", ")", ":", "\n", "        ", "super", "(", "FakeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "colorspace", "=", "colorspace", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.L2.forward": [[229, 243], ["in0.size", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "in0.size", "util.util.util.l2().astype", "torch.autograd.Variable", "torch.autograd.Variable", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "ret_var.cuda.cuda.cuda", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "util.util.util.l2", "util.util.util.tensor2np", "util.util.util.tensor2np", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "util.util.util.tensor2tensorlab", "util.util.util.tensor2tensorlab", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.l2", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2np", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2np", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2tensorlab", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2tensorlab"], ["    ", "def", "forward", "(", "self", ",", "in0", ",", "in1", ")", ":", "\n", "        ", "assert", "(", "in0", ".", "size", "(", ")", "[", "0", "]", "==", "1", ")", "# currently only supports batchSize 1", "\n", "\n", "if", "(", "self", ".", "colorspace", "==", "'RGB'", ")", ":", "\n", "            ", "(", "N", ",", "C", ",", "X", ",", "Y", ")", "=", "in0", ".", "size", "(", ")", "\n", "value", "=", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "(", "in0", "-", "in1", ")", "**", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "N", ",", "1", ",", "X", ",", "Y", ")", ",", "dim", "=", "2", ")", ".", "view", "(", "N", ",", "1", ",", "1", ",", "Y", ")", ",", "dim", "=", "3", ")", ".", "view", "(", "N", ")", "\n", "return", "value", "\n", "", "elif", "(", "self", ".", "colorspace", "==", "'Lab'", ")", ":", "\n", "            ", "value", "=", "util", ".", "l2", "(", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in0", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "\n", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in1", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "range", "=", "100.", ")", ".", "astype", "(", "'float'", ")", "\n", "ret_var", "=", "Variable", "(", "torch", ".", "Tensor", "(", "(", "value", ",", ")", ")", ")", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "                ", "ret_var", "=", "ret_var", ".", "cuda", "(", ")", "\n", "", "return", "ret_var", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.DSSIM.forward": [[246, 258], ["torch.autograd.Variable", "torch.autograd.Variable", "util.util.util.dssim().astype", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "ret_var.cuda.cuda.cuda", "in0.size", "util.util.util.dssim().astype", "util.util.util.dssim", "util.util.util.dssim", "util.util.util.tensor2im", "util.util.util.tensor2im", "util.util.util.tensor2np", "util.util.util.tensor2np", "util.util.util.tensor2tensorlab", "util.util.util.tensor2tensorlab"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.dssim", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.dssim", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2im", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2im", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2np", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2np", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2tensorlab", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2tensorlab"], ["    ", "def", "forward", "(", "self", ",", "in0", ",", "in1", ")", ":", "\n", "        ", "assert", "(", "in0", ".", "size", "(", ")", "[", "0", "]", "==", "1", ")", "# currently only supports batchSize 1", "\n", "\n", "if", "(", "self", ".", "colorspace", "==", "'RGB'", ")", ":", "\n", "            ", "value", "=", "util", ".", "dssim", "(", "1.", "*", "util", ".", "tensor2im", "(", "in0", ".", "data", ")", ",", "1.", "*", "util", ".", "tensor2im", "(", "in1", ".", "data", ")", ",", "range", "=", "255.", ")", ".", "astype", "(", "'float'", ")", "\n", "", "elif", "(", "self", ".", "colorspace", "==", "'Lab'", ")", ":", "\n", "            ", "value", "=", "util", ".", "dssim", "(", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in0", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "\n", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in1", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "range", "=", "100.", ")", ".", "astype", "(", "'float'", ")", "\n", "", "ret_var", "=", "Variable", "(", "torch", ".", "Tensor", "(", "(", "value", ",", ")", ")", ")", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "ret_var", "=", "ret_var", ".", "cuda", "(", ")", "\n", "", "return", "ret_var", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.print_network": [[259, 265], ["net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "'Network'", ",", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.name": [[21, 23], ["None"], "methods", ["None"], ["    ", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.initialize": [[24, 100], ["base_model.BaseModel.initialize", "list", "networks_basic.PNetLin", "dist_model.DistModel.net.parameters", "networks_basic.BCERankingLoss", "torch.optim.Adam", "dist_model.DistModel.net.eval", "print", "networks_basic.print_network", "print", "os.path.abspath", "print", "dist_model.DistModel.net.load_state_dict", "networks_basic.PNet", "os.path.join", "torch.load", "networks_basic.L2", "inspect.getfile", "networks_basic.DSSIM", "ValueError"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.initialize", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.networks_basic.print_network"], ["", "def", "initialize", "(", "self", ",", "model", "=", "'net-lin'", ",", "net", "=", "'alex'", ",", "pnet_rand", "=", "False", ",", "pnet_tune", "=", "False", ",", "model_path", "=", "None", ",", "colorspace", "=", "'Lab'", ",", "use_gpu", "=", "True", ",", "printNet", "=", "False", ",", "spatial", "=", "False", ",", "spatial_shape", "=", "None", ",", "spatial_order", "=", "1", ",", "spatial_factor", "=", "None", ",", "is_train", "=", "False", ",", "lr", "=", ".0001", ",", "beta1", "=", "0.5", ",", "version", "=", "'0.1'", ")", ":", "\n", "        ", "'''\n        INPUTS\n            model - ['net-lin'] for linearly calibrated network\n                    ['net'] for off-the-shelf network\n                    ['L2'] for L2 distance in Lab colorspace\n                    ['SSIM'] for ssim in RGB colorspace\n            net - ['squeeze','alex','vgg']\n            model_path - if None, will look in weights/[NET_NAME].pth\n            colorspace - ['Lab','RGB'] colorspace to use for L2 and SSIM\n            use_gpu - bool - whether or not to use a GPU\n            printNet - bool - whether or not to print network architecture out\n            spatial - bool - whether to output an array containing varying distances across spatial dimensions\n            spatial_shape - if given, output spatial shape. if None then spatial shape is determined automatically via spatial_factor (see below).\n            spatial_factor - if given, specifies upsampling factor relative to the largest spatial extent of a convolutional layer. if None then resized to size of input images.\n            spatial_order - spline order of filter for upsampling in spatial mode, by default 1 (bilinear).\n            is_train - bool - [True] for training mode\n            lr - float - initial learning rate\n            beta1 - float - initial momentum term for adam\n            version - 0.1 for latest, 0.0 was original\n        '''", "\n", "BaseModel", ".", "initialize", "(", "self", ",", "use_gpu", "=", "use_gpu", ")", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "spatial", "=", "spatial", "\n", "self", ".", "spatial_shape", "=", "spatial_shape", "\n", "self", ".", "spatial_order", "=", "spatial_order", "\n", "self", ".", "spatial_factor", "=", "spatial_factor", "\n", "\n", "self", ".", "model_name", "=", "'%s [%s]'", "%", "(", "model", ",", "net", ")", "\n", "if", "(", "self", ".", "model", "==", "'net-lin'", ")", ":", "# pretrained net + linear layer", "\n", "            ", "self", ".", "net", "=", "networks", ".", "PNetLin", "(", "use_gpu", "=", "use_gpu", ",", "pnet_rand", "=", "pnet_rand", ",", "pnet_tune", "=", "pnet_tune", ",", "pnet_type", "=", "net", ",", "use_dropout", "=", "True", ",", "spatial", "=", "spatial", ",", "version", "=", "version", ")", "\n", "kw", "=", "{", "}", "\n", "if", "not", "use_gpu", ":", "\n", "                ", "kw", "[", "'map_location'", "]", "=", "'cpu'", "\n", "", "if", "(", "model_path", "is", "None", ")", ":", "\n", "                ", "import", "inspect", "\n", "# model_path = './PerceptualSimilarity/weights/v%s/%s.pth'%(version,net)", "\n", "model_path", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "inspect", ".", "getfile", "(", "self", ".", "initialize", ")", ",", "'..'", ",", "'..'", ",", "'weights/v%s/%s.pth'", "%", "(", "version", ",", "net", ")", ")", ")", "\n", "\n", "", "if", "(", "not", "is_train", ")", ":", "\n", "                ", "print", "(", "'Loading model from: %s'", "%", "model_path", ")", "\n", "self", ".", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_path", ",", "**", "kw", ")", ")", "\n", "\n", "", "", "elif", "(", "self", ".", "model", "==", "'net'", ")", ":", "# pretrained network", "\n", "            ", "assert", "not", "self", ".", "spatial", ",", "'spatial argument not supported yet for uncalibrated networks'", "\n", "self", ".", "net", "=", "networks", ".", "PNet", "(", "use_gpu", "=", "use_gpu", ",", "pnet_type", "=", "net", ")", "\n", "self", ".", "is_fake_net", "=", "True", "\n", "", "elif", "(", "self", ".", "model", "in", "[", "'L2'", ",", "'l2'", "]", ")", ":", "\n", "            ", "self", ".", "net", "=", "networks", ".", "L2", "(", "use_gpu", "=", "use_gpu", ",", "colorspace", "=", "colorspace", ")", "# not really a network, only for testing", "\n", "self", ".", "model_name", "=", "'L2'", "\n", "", "elif", "(", "self", ".", "model", "in", "[", "'DSSIM'", ",", "'dssim'", ",", "'SSIM'", ",", "'ssim'", "]", ")", ":", "\n", "            ", "self", ".", "net", "=", "networks", ".", "DSSIM", "(", "use_gpu", "=", "use_gpu", ",", "colorspace", "=", "colorspace", ")", "\n", "self", ".", "model_name", "=", "'SSIM'", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Model [%s] not recognized.\"", "%", "self", ".", "model", ")", "\n", "\n", "", "self", ".", "parameters", "=", "list", "(", "self", ".", "net", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "# training mode", "\n", "# extra network on top to go from distances (d0,d1) => predicted human judgment (h*)", "\n", "            ", "self", ".", "rankLoss", "=", "networks", ".", "BCERankingLoss", "(", "use_gpu", "=", "use_gpu", ")", "\n", "self", ".", "parameters", "+=", "self", ".", "rankLoss", ".", "parameters", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "old_lr", "=", "lr", "\n", "self", ".", "optimizer_net", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", ",", "lr", "=", "lr", ",", "betas", "=", "(", "beta1", ",", "0.999", ")", ")", "\n", "", "else", ":", "# test mode", "\n", "            ", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n", "", "if", "(", "printNet", ")", ":", "\n", "            ", "print", "(", "'---------- Networks initialized -------------'", ")", "\n", "networks", ".", "print_network", "(", "self", ".", "net", ")", "\n", "print", "(", "'-----------------------------------------------'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.forward_pair": [[101, 106], ["dist_model.DistModel.net.forward", "dist_model.DistModel.net.forward"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward"], ["", "", "def", "forward_pair", "(", "self", ",", "in1", ",", "in2", ",", "retPerLayer", "=", "False", ")", ":", "\n", "        ", "if", "(", "retPerLayer", ")", ":", "\n", "            ", "return", "self", ".", "net", ".", "forward", "(", "in1", ",", "in2", ",", "retPerLayer", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "net", ".", "forward", "(", "in1", ",", "in2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.forward": [[107, 156], ["torch.autograd.Variable", "torch.autograd.Variable", "dist_model.DistModel.forward_pair", "dist_model.DistModel.input_ref.cuda", "dist_model.DistModel.input_p0.cuda", "numpy.mean", "dist_model.DistModel.forward.convert_output"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.forward_pair"], ["", "", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retNumpy", "=", "True", ")", ":", "\n", "        ", "''' Function computes the distance between image patches in0 and in1\n        INPUTS\n            in0, in1 - torch.Tensor object of shape Nx3xXxY - image patch scaled to [-1,1]\n            retNumpy - [False] to return as torch.Tensor, [True] to return as numpy array\n        OUTPUT\n            computed distances between in0 and in1\n        '''", "\n", "\n", "self", ".", "input_ref", "=", "in0", "\n", "self", ".", "input_p0", "=", "in1", "\n", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "self", ".", "input_ref", "=", "self", ".", "input_ref", ".", "cuda", "(", ")", "\n", "self", ".", "input_p0", "=", "self", ".", "input_p0", ".", "cuda", "(", ")", "\n", "\n", "", "self", ".", "var_ref", "=", "Variable", "(", "self", ".", "input_ref", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "var_p0", "=", "Variable", "(", "self", ".", "input_p0", ",", "requires_grad", "=", "True", ")", "\n", "\n", "self", ".", "d0", "=", "self", ".", "forward_pair", "(", "self", ".", "var_ref", ",", "self", ".", "var_p0", ")", "\n", "self", ".", "loss_total", "=", "self", ".", "d0", "\n", "\n", "def", "convert_output", "(", "d0", ")", ":", "\n", "            ", "if", "(", "retNumpy", ")", ":", "\n", "                ", "ans", "=", "d0", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "if", "not", "self", ".", "spatial", ":", "\n", "                    ", "ans", "=", "ans", ".", "flatten", "(", ")", "\n", "", "else", ":", "\n", "                    ", "assert", "(", "ans", ".", "shape", "[", "0", "]", "==", "1", "and", "len", "(", "ans", ".", "shape", ")", "==", "4", ")", "\n", "return", "ans", "[", "0", ",", "...", "]", ".", "transpose", "(", "[", "1", ",", "2", ",", "0", "]", ")", "# Reshape to usual numpy image format: (height, width, channels)", "\n", "", "return", "ans", "\n", "", "else", ":", "\n", "                ", "return", "d0", "\n", "\n", "", "", "if", "self", ".", "spatial", ":", "\n", "            ", "L", "=", "[", "convert_output", "(", "x", ")", "for", "x", "in", "self", ".", "d0", "]", "\n", "spatial_shape", "=", "self", ".", "spatial_shape", "\n", "if", "spatial_shape", "is", "None", ":", "\n", "                ", "if", "(", "self", ".", "spatial_factor", "is", "None", ")", ":", "\n", "                    ", "spatial_shape", "=", "(", "in0", ".", "size", "(", ")", "[", "2", "]", ",", "in0", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "", "else", ":", "\n", "                    ", "spatial_shape", "=", "(", "max", "(", "[", "x", ".", "shape", "[", "0", "]", "for", "x", "in", "L", "]", ")", "*", "self", ".", "spatial_factor", ",", "max", "(", "[", "x", ".", "shape", "[", "1", "]", "for", "x", "in", "L", "]", ")", "*", "self", ".", "spatial_factor", ")", "\n", "\n", "", "", "L", "=", "[", "skimage", ".", "transform", ".", "resize", "(", "x", ",", "spatial_shape", ",", "order", "=", "self", ".", "spatial_order", ",", "mode", "=", "'edge'", ")", "for", "x", "in", "L", "]", "\n", "\n", "L", "=", "np", ".", "mean", "(", "np", ".", "concatenate", "(", "L", ",", "2", ")", "*", "len", "(", "L", ")", ",", "2", ")", "\n", "return", "L", "\n", "", "else", ":", "\n", "            ", "return", "convert_output", "(", "self", ".", "d0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.optimize_parameters": [[158, 164], ["dist_model.DistModel.forward_train", "dist_model.DistModel.optimizer_net.zero_grad", "dist_model.DistModel.backward_train", "dist_model.DistModel.optimizer_net.step", "dist_model.DistModel.clamp_weights"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.forward_train", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.backward_train", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.clamp_weights"], ["", "", "def", "optimize_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "forward_train", "(", ")", "\n", "self", ".", "optimizer_net", ".", "zero_grad", "(", ")", "\n", "self", ".", "backward_train", "(", ")", "\n", "self", ".", "optimizer_net", ".", "step", "(", ")", "\n", "self", ".", "clamp_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.clamp_weights": [[165, 169], ["dist_model.DistModel.net.modules", "hasattr", "torch.clamp"], "methods", ["None"], ["", "def", "clamp_weights", "(", "self", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "net", ".", "modules", "(", ")", ":", "\n", "            ", "if", "(", "hasattr", "(", "module", ",", "'weight'", ")", "and", "module", ".", "kernel_size", "==", "(", "1", ",", "1", ")", ")", ":", "\n", "                ", "module", ".", "weight", ".", "data", "=", "torch", ".", "clamp", "(", "module", ".", "weight", ".", "data", ",", "min", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.set_input": [[170, 185], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "dist_model.DistModel.input_ref.cuda", "dist_model.DistModel.input_p0.cuda", "dist_model.DistModel.input_p1.cuda", "dist_model.DistModel.input_judge.cuda"], "methods", ["None"], ["", "", "", "def", "set_input", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "input_ref", "=", "data", "[", "'ref'", "]", "\n", "self", ".", "input_p0", "=", "data", "[", "'p0'", "]", "\n", "self", ".", "input_p1", "=", "data", "[", "'p1'", "]", "\n", "self", ".", "input_judge", "=", "data", "[", "'judge'", "]", "\n", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "self", ".", "input_ref", "=", "self", ".", "input_ref", ".", "cuda", "(", ")", "\n", "self", ".", "input_p0", "=", "self", ".", "input_p0", ".", "cuda", "(", ")", "\n", "self", ".", "input_p1", "=", "self", ".", "input_p1", ".", "cuda", "(", ")", "\n", "self", ".", "input_judge", "=", "self", ".", "input_judge", ".", "cuda", "(", ")", "\n", "\n", "", "self", ".", "var_ref", "=", "Variable", "(", "self", ".", "input_ref", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "var_p0", "=", "Variable", "(", "self", ".", "input_p0", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "var_p1", "=", "Variable", "(", "self", ".", "input_p1", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.forward_train": [[186, 196], ["dist_model.DistModel.forward_pair", "dist_model.DistModel.forward_pair", "dist_model.DistModel.compute_accuracy", "torch.autograd.Variable().view", "dist_model.DistModel.rankLoss.forward", "dist_model.DistModel.d0.size", "torch.autograd.Variable"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.forward_pair", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.forward_pair", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.compute_accuracy", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward"], ["", "def", "forward_train", "(", "self", ")", ":", "# run forward pass", "\n", "        ", "self", ".", "d0", "=", "self", ".", "forward_pair", "(", "self", ".", "var_ref", ",", "self", ".", "var_p0", ")", "\n", "self", ".", "d1", "=", "self", ".", "forward_pair", "(", "self", ".", "var_ref", ",", "self", ".", "var_p1", ")", "\n", "self", ".", "acc_r", "=", "self", ".", "compute_accuracy", "(", "self", ".", "d0", ",", "self", ".", "d1", ",", "self", ".", "input_judge", ")", "\n", "\n", "# var_judge", "\n", "self", ".", "var_judge", "=", "Variable", "(", "1.", "*", "self", ".", "input_judge", ")", ".", "view", "(", "self", ".", "d0", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "loss_total", "=", "self", ".", "rankLoss", ".", "forward", "(", "self", ".", "d0", ",", "self", ".", "d1", ",", "self", ".", "var_judge", "*", "2.", "-", "1.", ")", "\n", "return", "self", ".", "loss_total", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.backward_train": [[197, 199], ["torch.mean().backward", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.model.tsm_utils.InplaceShift.backward"], ["", "def", "backward_train", "(", "self", ")", ":", "\n", "        ", "torch", ".", "mean", "(", "self", ".", "loss_total", ")", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.compute_accuracy": [[200, 205], ["judge.cpu().numpy().flatten", "judge.cpu().numpy", "judge.cpu"], "methods", ["None"], ["", "def", "compute_accuracy", "(", "self", ",", "d0", ",", "d1", ",", "judge", ")", ":", "\n", "        ", "''' d0, d1 are Variables, judge is a Tensor '''", "\n", "d1_lt_d0", "=", "(", "d1", "<", "d0", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "judge_per", "=", "judge", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "return", "d1_lt_d0", "*", "judge_per", "+", "(", "1", "-", "d1_lt_d0", ")", "*", "(", "1", "-", "judge_per", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.get_current_errors": [[206, 214], ["collections.OrderedDict", "collections.OrderedDict.keys", "numpy.mean", "dist_model.DistModel.loss_total.data.cpu().numpy", "dist_model.DistModel.loss_total.data.cpu"], "methods", ["None"], ["", "def", "get_current_errors", "(", "self", ")", ":", "\n", "        ", "retDict", "=", "OrderedDict", "(", "[", "(", "'loss_total'", ",", "self", ".", "loss_total", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "\n", "(", "'acc_r'", ",", "self", ".", "acc_r", ")", "]", ")", "\n", "\n", "for", "key", "in", "retDict", ".", "keys", "(", ")", ":", "\n", "            ", "retDict", "[", "key", "]", "=", "np", ".", "mean", "(", "retDict", "[", "key", "]", ")", "\n", "\n", "", "return", "retDict", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.get_current_visuals": [[215, 229], ["util.util.util.tensor2im", "util.util.util.tensor2im", "util.util.util.tensor2im", "scipy.ndimage.zoom", "scipy.ndimage.zoom", "scipy.ndimage.zoom", "collections.OrderedDict", "dist_model.DistModel.var_ref.data.size"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2im", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2im", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.tensor2im"], ["", "def", "get_current_visuals", "(", "self", ")", ":", "\n", "        ", "zoom_factor", "=", "256", "/", "self", ".", "var_ref", ".", "data", ".", "size", "(", ")", "[", "2", "]", "\n", "\n", "ref_img", "=", "util", ".", "tensor2im", "(", "self", ".", "var_ref", ".", "data", ")", "\n", "p0_img", "=", "util", ".", "tensor2im", "(", "self", ".", "var_p0", ".", "data", ")", "\n", "p1_img", "=", "util", ".", "tensor2im", "(", "self", ".", "var_p1", ".", "data", ")", "\n", "\n", "ref_img_vis", "=", "zoom", "(", "ref_img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "0", ")", "\n", "p0_img_vis", "=", "zoom", "(", "p0_img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "0", ")", "\n", "p1_img_vis", "=", "zoom", "(", "p1_img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "0", ")", "\n", "\n", "return", "OrderedDict", "(", "[", "(", "'ref'", ",", "ref_img_vis", ")", ",", "\n", "(", "'p0'", ",", "p0_img_vis", ")", ",", "\n", "(", "'p1'", ",", "p1_img_vis", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.save": [[230, 233], ["dist_model.DistModel.save_network", "dist_model.DistModel.save_network"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save_network", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save_network"], ["", "def", "save", "(", "self", ",", "path", ",", "label", ")", ":", "\n", "        ", "self", ".", "save_network", "(", "self", ".", "net", ",", "path", ",", "''", ",", "label", ")", "\n", "self", ".", "save_network", "(", "self", ".", "rankLoss", ".", "net", ",", "path", ",", "'rank'", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.DistModel.update_learning_rate": [[234, 243], ["print"], "methods", ["None"], ["", "def", "update_learning_rate", "(", "self", ",", "nepoch_decay", ")", ":", "\n", "        ", "lrd", "=", "self", ".", "lr", "/", "nepoch_decay", "\n", "lr", "=", "self", ".", "old_lr", "-", "lrd", "\n", "\n", "for", "param_group", "in", "self", ".", "optimizer_net", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n", "", "print", "(", "'update lr [%s] decay: %f -> %f'", "%", "(", "type", ",", "self", ".", "old_lr", ",", "lr", ")", ")", "\n", "self", ".", "old_lr", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.score_2afc_dataset": [[246, 282], ["enumerate", "numpy.array", "numpy.array", "numpy.array", "data_loader.load_data", "func().tolist", "func().tolist", "data[].cpu().numpy().flatten().tolist", "numpy.mean", "dict", "func", "func", "data[].cpu().numpy().flatten", "data[].cpu().numpy", "data[].cpu"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.load_data"], ["", "", "def", "score_2afc_dataset", "(", "data_loader", ",", "func", ")", ":", "\n", "    ", "''' Function computes Two Alternative Forced Choice (2AFC) score using\n        distance function 'func' in dataset 'data_loader'\n    INPUTS\n        data_loader - CustomDatasetDataLoader object - contains a TwoAFCDataset inside\n        func - callable distance function - calling d=func(in0,in1) should take 2\n            pytorch tensors with shape Nx3xXxY, and return numpy array of length N\n    OUTPUTS\n        [0] - 2AFC score in [0,1], fraction of time func agrees with human evaluators\n        [1] - dictionary with following elements\n            d0s,d1s - N arrays containing distances between reference patch to perturbed patches\n            gts - N array in [0,1], preferred patch selected by human evaluators\n                (closer to \"0\" for left patch p0, \"1\" for right patch p1,\n                \"0.6\" means 60pct people preferred right patch, 40pct preferred left)\n            scores - N array in [0,1], corresponding to what percentage function agreed with humans\n    CONSTS\n        N - number of test triplets in data_loader\n    '''", "\n", "\n", "d0s", "=", "[", "]", "\n", "d1s", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "\n", "# bar = pb.ProgressBar(max_value=data_loader.load_data().__len__())", "\n", "for", "(", "i", ",", "data", ")", "in", "enumerate", "(", "data_loader", ".", "load_data", "(", ")", ")", ":", "\n", "        ", "d0s", "+=", "func", "(", "data", "[", "'ref'", "]", ",", "data", "[", "'p0'", "]", ")", ".", "tolist", "(", ")", "\n", "d1s", "+=", "func", "(", "data", "[", "'ref'", "]", ",", "data", "[", "'p1'", "]", ")", ".", "tolist", "(", ")", "\n", "gts", "+=", "data", "[", "'judge'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "# bar.update(i)", "\n", "\n", "", "d0s", "=", "np", ".", "array", "(", "d0s", ")", "\n", "d1s", "=", "np", ".", "array", "(", "d1s", ")", "\n", "gts", "=", "np", ".", "array", "(", "gts", ")", "\n", "scores", "=", "(", "d0s", "<", "d1s", ")", "*", "(", "1.", "-", "gts", ")", "+", "(", "d1s", "<", "d0s", ")", "*", "gts", "+", "(", "d1s", "==", "d0s", ")", "*", ".5", "\n", "\n", "return", "(", "np", ".", "mean", "(", "scores", ")", ",", "dict", "(", "d0s", "=", "d0s", ",", "d1s", "=", "d1s", ",", "gts", "=", "gts", ",", "scores", "=", "scores", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.dist_model.score_jnd_dataset": [[283, 323], ["enumerate", "numpy.array", "numpy.array", "numpy.argsort", "numpy.cumsum", "numpy.cumsum", "util.util.voc_ap", "data_loader.load_data", "func().tolist", "data[].cpu().numpy().flatten().tolist", "numpy.sum", "dict", "func", "data[].cpu().numpy().flatten", "data[].cpu().numpy", "data[].cpu"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.util.util.voc_ap", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.load_data"], ["", "def", "score_jnd_dataset", "(", "data_loader", ",", "func", ")", ":", "\n", "    ", "''' Function computes JND score using distance function 'func' in dataset 'data_loader'\n    INPUTS\n        data_loader - CustomDatasetDataLoader object - contains a JNDDataset inside\n        func - callable distance function - calling d=func(in0,in1) should take 2\n            pytorch tensors with shape Nx3xXxY, and return numpy array of length N\n    OUTPUTS\n        [0] - JND score in [0,1], mAP score (area under precision-recall curve)\n        [1] - dictionary with following elements\n            ds - N array containing distances between two patches shown to human evaluator\n            sames - N array containing fraction of people who thought the two patches were identical\n    CONSTS\n        N - number of test triplets in data_loader\n    '''", "\n", "\n", "ds", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "\n", "# bar = pb.ProgressBar(max_value=data_loader.load_data().__len__())", "\n", "for", "(", "i", ",", "data", ")", "in", "enumerate", "(", "data_loader", ".", "load_data", "(", ")", ")", ":", "\n", "        ", "ds", "+=", "func", "(", "data", "[", "'p0'", "]", ",", "data", "[", "'p1'", "]", ")", ".", "tolist", "(", ")", "\n", "gts", "+=", "data", "[", "'same'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "# bar.update(i)", "\n", "\n", "", "sames", "=", "np", ".", "array", "(", "gts", ")", "\n", "ds", "=", "np", ".", "array", "(", "ds", ")", "\n", "\n", "sorted_inds", "=", "np", ".", "argsort", "(", "ds", ")", "\n", "ds_sorted", "=", "ds", "[", "sorted_inds", "]", "\n", "sames_sorted", "=", "sames", "[", "sorted_inds", "]", "\n", "\n", "TPs", "=", "np", ".", "cumsum", "(", "sames_sorted", ")", "\n", "FPs", "=", "np", ".", "cumsum", "(", "1", "-", "sames_sorted", ")", "\n", "FNs", "=", "np", ".", "sum", "(", "sames_sorted", ")", "-", "TPs", "\n", "\n", "precs", "=", "TPs", "/", "(", "TPs", "+", "FPs", ")", "\n", "recs", "=", "TPs", "/", "(", "TPs", "+", "FNs", ")", "\n", "score", "=", "util", ".", "voc_ap", "(", "recs", ",", "precs", ")", "\n", "\n", "return", "(", "score", ",", "dict", "(", "ds", "=", "ds", ",", "sames", "=", "sames", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.pretrained_networks.squeezenet.__init__": [[6, 34], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "range", "range", "torchvision.models.squeezenet1_1", "pretrained_networks.squeezenet.slice1.add_module", "pretrained_networks.squeezenet.slice2.add_module", "pretrained_networks.squeezenet.slice3.add_module", "pretrained_networks.squeezenet.slice4.add_module", "pretrained_networks.squeezenet.slice5.add_module", "pretrained_networks.squeezenet.slice6.add_module", "pretrained_networks.squeezenet.slice7.add_module", "pretrained_networks.squeezenet.parameters", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "squeezenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "pretrained_features", "=", "models", ".", "squeezenet1_1", "(", "pretrained", "=", "pretrained", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice6", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice7", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "N_slices", "=", "7", "\n", "for", "x", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "2", ",", "5", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "5", ",", "8", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "8", ",", "10", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "10", ",", "11", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "11", ",", "12", ")", ":", "\n", "            ", "self", ".", "slice6", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "12", ",", "13", ")", ":", "\n", "            ", "self", ".", "slice7", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.pretrained_networks.squeezenet.forward": [[35, 54], ["pretrained_networks.squeezenet.slice1", "pretrained_networks.squeezenet.slice2", "pretrained_networks.squeezenet.slice3", "pretrained_networks.squeezenet.slice4", "pretrained_networks.squeezenet.slice5", "pretrained_networks.squeezenet.slice6", "pretrained_networks.squeezenet.slice7", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4", "=", "h", "\n", "h", "=", "self", ".", "slice5", "(", "h", ")", "\n", "h_relu5", "=", "h", "\n", "h", "=", "self", ".", "slice6", "(", "h", ")", "\n", "h_relu6", "=", "h", "\n", "h", "=", "self", ".", "slice7", "(", "h", ")", "\n", "h_relu7", "=", "h", "\n", "vgg_outputs", "=", "namedtuple", "(", "\"SqueezeOutputs\"", ",", "[", "'relu1'", ",", "'relu2'", ",", "'relu3'", ",", "'relu4'", ",", "'relu5'", ",", "'relu6'", ",", "'relu7'", "]", ")", "\n", "out", "=", "vgg_outputs", "(", "h_relu1", ",", "h_relu2", ",", "h_relu3", ",", "h_relu4", ",", "h_relu5", ",", "h_relu6", ",", "h_relu7", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.pretrained_networks.alexnet.__init__": [[57, 79], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "torchvision.models.alexnet", "pretrained_networks.alexnet.slice1.add_module", "pretrained_networks.alexnet.slice2.add_module", "pretrained_networks.alexnet.slice3.add_module", "pretrained_networks.alexnet.slice4.add_module", "pretrained_networks.alexnet.slice5.add_module", "pretrained_networks.alexnet.parameters", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "alexnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "alexnet_pretrained_features", "=", "models", ".", "alexnet", "(", "pretrained", "=", "pretrained", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "N_slices", "=", "5", "\n", "for", "x", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "2", ",", "5", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "5", ",", "8", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "8", ",", "10", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "10", ",", "12", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.pretrained_networks.alexnet.forward": [[80, 95], ["pretrained_networks.alexnet.slice1", "pretrained_networks.alexnet.slice2", "pretrained_networks.alexnet.slice3", "pretrained_networks.alexnet.slice4", "pretrained_networks.alexnet.slice5", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4", "=", "h", "\n", "h", "=", "self", ".", "slice5", "(", "h", ")", "\n", "h_relu5", "=", "h", "\n", "alexnet_outputs", "=", "namedtuple", "(", "\"AlexnetOutputs\"", ",", "[", "'relu1'", ",", "'relu2'", ",", "'relu3'", ",", "'relu4'", ",", "'relu5'", "]", ")", "\n", "out", "=", "alexnet_outputs", "(", "h_relu1", ",", "h_relu2", ",", "h_relu3", ",", "h_relu4", ",", "h_relu5", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.pretrained_networks.vgg16.__init__": [[97, 119], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "torchvision.models.vgg16", "pretrained_networks.vgg16.slice1.add_module", "pretrained_networks.vgg16.slice2.add_module", "pretrained_networks.vgg16.slice3.add_module", "pretrained_networks.vgg16.slice4.add_module", "pretrained_networks.vgg16.slice5.add_module", "pretrained_networks.vgg16.parameters", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "vgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_pretrained_features", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "N_slices", "=", "5", "\n", "for", "x", "in", "range", "(", "4", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "4", ",", "9", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "9", ",", "16", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "16", ",", "23", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "23", ",", "30", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.pretrained_networks.vgg16.forward": [[120, 135], ["pretrained_networks.vgg16.slice1", "pretrained_networks.vgg16.slice2", "pretrained_networks.vgg16.slice3", "pretrained_networks.vgg16.slice4", "pretrained_networks.vgg16.slice5", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1_2", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2_2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3_3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4_3", "=", "h", "\n", "h", "=", "self", ".", "slice5", "(", "h", ")", "\n", "h_relu5_3", "=", "h", "\n", "vgg_outputs", "=", "namedtuple", "(", "\"VggOutputs\"", ",", "[", "'relu1_2'", ",", "'relu2_2'", ",", "'relu3_3'", ",", "'relu4_3'", ",", "'relu5_3'", "]", ")", "\n", "out", "=", "vgg_outputs", "(", "h_relu1_2", ",", "h_relu2_2", ",", "h_relu3_3", ",", "h_relu4_3", ",", "h_relu5_3", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.pretrained_networks.resnet.__init__": [[139, 161], ["super().__init__", "torchvision.models.resnet18", "torchvision.models.resnet34", "torchvision.models.resnet50", "torchvision.models.resnet101", "torchvision.models.resnet152"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ",", "num", "=", "18", ")", ":", "\n", "        ", "super", "(", "resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "(", "num", "==", "18", ")", ":", "\n", "            ", "self", ".", "net", "=", "models", ".", "resnet18", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "34", ")", ":", "\n", "            ", "self", ".", "net", "=", "models", ".", "resnet34", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "50", ")", ":", "\n", "            ", "self", ".", "net", "=", "models", ".", "resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "101", ")", ":", "\n", "            ", "self", ".", "net", "=", "models", ".", "resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "152", ")", ":", "\n", "            ", "self", ".", "net", "=", "models", ".", "resnet152", "(", "pretrained", "=", "pretrained", ")", "\n", "", "self", ".", "N_slices", "=", "5", "\n", "\n", "self", ".", "conv1", "=", "self", ".", "net", ".", "conv1", "\n", "self", ".", "bn1", "=", "self", ".", "net", ".", "bn1", "\n", "self", ".", "relu", "=", "self", ".", "net", ".", "relu", "\n", "self", ".", "maxpool", "=", "self", ".", "net", ".", "maxpool", "\n", "self", ".", "layer1", "=", "self", ".", "net", ".", "layer1", "\n", "self", ".", "layer2", "=", "self", ".", "net", ".", "layer2", "\n", "self", ".", "layer3", "=", "self", ".", "net", ".", "layer3", "\n", "self", ".", "layer4", "=", "self", ".", "net", ".", "layer4", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.pretrained_networks.resnet.forward": [[162, 181], ["pretrained_networks.resnet.conv1", "pretrained_networks.resnet.bn1", "pretrained_networks.resnet.relu", "pretrained_networks.resnet.maxpool", "pretrained_networks.resnet.layer1", "pretrained_networks.resnet.layer2", "pretrained_networks.resnet.layer3", "pretrained_networks.resnet.layer4", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "conv1", "(", "X", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ")", "\n", "h", "=", "self", ".", "relu", "(", "h", ")", "\n", "h_relu1", "=", "h", "\n", "h", "=", "self", ".", "maxpool", "(", "h", ")", "\n", "h", "=", "self", ".", "layer1", "(", "h", ")", "\n", "h_conv2", "=", "h", "\n", "h", "=", "self", ".", "layer2", "(", "h", ")", "\n", "h_conv3", "=", "h", "\n", "h", "=", "self", ".", "layer3", "(", "h", ")", "\n", "h_conv4", "=", "h", "\n", "h", "=", "self", ".", "layer4", "(", "h", ")", "\n", "h_conv5", "=", "h", "\n", "\n", "outputs", "=", "namedtuple", "(", "\"Outputs\"", ",", "[", "'relu1'", ",", "'conv2'", ",", "'conv3'", ",", "'conv4'", ",", "'conv5'", "]", ")", "\n", "out", "=", "outputs", "(", "h_relu1", ",", "h_conv2", ",", "h_conv3", ",", "h_conv4", ",", "h_conv5", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.__init__": [[8, 10], ["None"], "methods", ["None"], ["\n", "def", "__init__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.name": [[11, 13], ["None"], "methods", ["None"], ["        ", "super", "(", "BaseModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "self", ".", "__class__", ".", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.initialize": [[14, 17], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "input", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.forward": [[19, 21], ["None"], "methods", ["None"], ["\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.optimize_parameters": [[22, 24], ["None"], "methods", ["None"], ["", "def", "summary", "(", "self", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.get_current_visuals": [[25, 27], ["None"], "methods", ["None"], ["\n", "model_parameters", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "self", ".", "parameters", "(", ")", ")", "\n", "params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model_parameters", "]", ")", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.get_current_errors": [[28, 30], ["None"], "methods", ["None"], ["self", ".", "logger", ".", "info", "(", "'Trainable parameters: {}'", ".", "format", "(", "params", ")", ")", "\n", "self", ".", "logger", ".", "info", "(", "self", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save": [[31, 33], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save_network": [[35, 39], ["os.path.join", "torch.save", "network.state_dict"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.load_network": [[41, 47], ["os.path.join", "print", "network.load_state_dict", "torch.load"], "methods", ["None"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.update_learning_rate": [[48, 50], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.get_image_paths": [[51, 53], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save_done": [[54, 58], ["numpy.save", "numpy.savetxt", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.models.base_model.BaseModel.save"], []], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.data_loader.CreateDataLoader": [[1, 7], ["CustomDatasetDataLoader", "CustomDatasetDataLoader.initialize"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.initialize"], ["def", "CreateDataLoader", "(", "datafolder", ",", "dataroot", "=", "'./dataset'", ",", "dataset_mode", "=", "'2afc'", ",", "load_size", "=", "64", ",", "batch_size", "=", "1", ",", "serial_batches", "=", "True", ")", ":", "\n", "    ", "from", "data", ".", "custom_dataset_data_loader", "import", "CustomDatasetDataLoader", "\n", "data_loader", "=", "CustomDatasetDataLoader", "(", ")", "\n", "# print(data_loader.name())", "\n", "data_loader", ".", "initialize", "(", "datafolder", ",", "dataroot", "=", "dataroot", "+", "'/'", "+", "dataset_mode", ",", "dataset_mode", "=", "dataset_mode", ",", "load_size", "=", "load_size", ",", "batch_size", "=", "batch_size", ",", "serial_batches", "=", "serial_batches", ",", "nThreads", "=", "1", ")", "\n", "return", "data_loader", "\n", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.custom_dataset_data_loader.CustomDatasetDataLoader.name": [[20, 22], ["None"], "methods", ["None"], ["    ", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'CustomDatasetDataLoader'", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.custom_dataset_data_loader.CustomDatasetDataLoader.initialize": [[23, 34], ["data.base_data_loader.BaseDataLoader.initialize", "custom_dataset_data_loader.CreateDataset", "torch.utils.data.DataLoader", "isinstance", "os.path.join", "int"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.initialize", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.custom_dataset_data_loader.CreateDataset"], ["", "def", "initialize", "(", "self", ",", "datafolders", ",", "dataroot", "=", "'./dataset'", ",", "dataset_mode", "=", "'2afc'", ",", "load_size", "=", "64", ",", "batch_size", "=", "1", ",", "serial_batches", "=", "True", ",", "nThreads", "=", "1", ")", ":", "\n", "        ", "BaseDataLoader", ".", "initialize", "(", "self", ")", "\n", "if", "(", "not", "isinstance", "(", "datafolders", ",", "list", ")", ")", ":", "\n", "            ", "datafolders", "=", "[", "datafolders", ",", "]", "\n", "", "data_root_folders", "=", "[", "os", ".", "path", ".", "join", "(", "dataroot", ",", "datafolder", ")", "for", "datafolder", "in", "datafolders", "]", "\n", "self", ".", "dataset", "=", "CreateDataset", "(", "data_root_folders", ",", "dataset_mode", "=", "dataset_mode", ",", "load_size", "=", "load_size", ")", "\n", "self", ".", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "not", "serial_batches", ",", "\n", "num_workers", "=", "int", "(", "nThreads", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.custom_dataset_data_loader.CustomDatasetDataLoader.load_data": [[35, 37], ["None"], "methods", ["None"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.custom_dataset_data_loader.CustomDatasetDataLoader.__len__": [[38, 40], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.custom_dataset_data_loader.CreateDataset": [[5, 18], ["JNDDataset.initialize", "TwoAFCDataset", "JNDDataset", "ValueError"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.initialize"], ["def", "CreateDataset", "(", "dataroots", ",", "dataset_mode", "=", "'2afc'", ",", "load_size", "=", "64", ",", ")", ":", "\n", "    ", "dataset", "=", "None", "\n", "if", "dataset_mode", "==", "'2afc'", ":", "# human judgements", "\n", "        ", "from", "dataset", ".", "twoafc_dataset", "import", "TwoAFCDataset", "\n", "dataset", "=", "TwoAFCDataset", "(", ")", "\n", "", "elif", "dataset_mode", "==", "'jnd'", ":", "# human judgements", "\n", "        ", "from", "dataset", ".", "jnd_dataset", "import", "JNDDataset", "\n", "dataset", "=", "JNDDataset", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Dataset Mode [%s] not recognized.\"", "%", "self", ".", "dataset_mode", ")", "\n", "\n", "", "dataset", ".", "initialize", "(", "dataroots", ",", "load_size", "=", "load_size", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.image_folder.ImageFolder.__init__": [[47, 59], ["image_folder.make_dataset", "len", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.image_folder.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "transform", "=", "None", ",", "return_paths", "=", "False", ",", "\n", "loader", "=", "default_loader", ")", ":", "\n", "        ", "imgs", "=", "make_dataset", "(", "root", ")", "\n", "if", "len", "(", "imgs", ")", "==", "0", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "\"Found 0 images in: \"", "+", "root", "+", "\"\\n\"", "\n", "\"Supported image extensions are: \"", "+", "\",\"", ".", "join", "(", "IMG_EXTENSIONS", ")", ")", ")", "\n", "\n", "", "self", ".", "root", "=", "root", "\n", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "return_paths", "=", "return_paths", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.image_folder.ImageFolder.__getitem__": [[60, 69], ["image_folder.ImageFolder.loader", "image_folder.ImageFolder.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "path", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "if", "self", ".", "return_paths", ":", "\n", "            ", "return", "img", ",", "path", "\n", "", "else", ":", "\n", "            ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.image_folder.ImageFolder.__len__": [[70, 72], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.image_folder.is_image_file": [[21, 26], ["any", "any", "filename.endswith", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ",", "mode", "=", "'img'", ")", ":", "\n", "    ", "if", "(", "mode", "==", "'img'", ")", ":", "\n", "        ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "", "elif", "(", "mode", "==", "'np'", ")", ":", "\n", "        ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "NP_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.image_folder.make_dataset": [[27, 42], ["isinstance", "os.path.isdir", "os.path.isdir", "sorted", "os.walk", "os.walk", "image_folder.is_image_file", "os.path.join", "os.path.join", "images.append"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.image_folder.is_image_file", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.utils.readers.Reader.append"], ["", "", "def", "make_dataset", "(", "dirs", ",", "mode", "=", "'img'", ")", ":", "\n", "    ", "if", "(", "not", "isinstance", "(", "dirs", ",", "list", ")", ")", ":", "\n", "        ", "dirs", "=", "[", "dirs", ",", "]", "\n", "\n", "", "images", "=", "[", "]", "\n", "for", "dir", "in", "dirs", ":", "\n", "        ", "assert", "os", ".", "path", ".", "isdir", "(", "dir", ")", ",", "'%s is not a valid directory'", "%", "dir", "\n", "for", "root", ",", "_", ",", "fnames", "in", "sorted", "(", "os", ".", "walk", "(", "dir", ")", ")", ":", "\n", "            ", "for", "fname", "in", "fnames", ":", "\n", "                ", "if", "is_image_file", "(", "fname", ",", "mode", "=", "mode", ")", ":", "\n", "                    ", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "fname", ")", "\n", "images", ".", "append", "(", "path", ")", "\n", "\n", "# print(\"Found %i images in %s\"%(len(images),root))", "\n", "", "", "", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.image_folder.default_loader": [[43, 45], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "return", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.__init__": [[3, 5], ["None"], "methods", ["None"], ["from", "torch", ".", "utils", ".", "data", ".", "dataloader", "import", "default_collate", "\n", "from", "torch", ".", "utils", ".", "data", ".", "sampler", "import", "SubsetRandomSampler", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.initialize": [[6, 8], ["None"], "methods", ["None"], ["\n", "class", "BaseDataLoader", "(", "DataLoader", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.data.base_data_loader.BaseDataLoader.load_data": [[9, 11], ["None"], "methods", ["None"], ["\n", "def", "__init__", "(", "self", ",", "dataset", ",", "batch_size", ",", "shuffle", ",", "validation_split", ",", "num_workers", ",", "collate_fn", "=", "default_collate", ")", ":", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.vifp.vifp_mscale": [[65, 114], ["range", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.sum", "numpy.sum", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.log10", "numpy.log10"], "function", ["None"], ["def", "vifp_mscale", "(", "ref", ",", "dist", ")", ":", "\n", "    ", "sigma_nsq", "=", "2", "\n", "eps", "=", "1e-10", "\n", "\n", "num", "=", "0.0", "\n", "den", "=", "0.0", "\n", "for", "scale", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "\n", "        ", "N", "=", "2", "**", "(", "4", "-", "scale", "+", "1", ")", "+", "1", "\n", "sd", "=", "N", "/", "5.0", "\n", "\n", "if", "(", "scale", ">", "1", ")", ":", "\n", "            ", "ref", "=", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "ref", ",", "sd", ")", "\n", "dist", "=", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "dist", ",", "sd", ")", "\n", "ref", "=", "ref", "[", ":", ":", "2", ",", ":", ":", "2", "]", "\n", "dist", "=", "dist", "[", ":", ":", "2", ",", ":", ":", "2", "]", "\n", "\n", "", "mu1", "=", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "ref", ",", "sd", ")", "\n", "mu2", "=", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "dist", ",", "sd", ")", "\n", "mu1_sq", "=", "mu1", "*", "mu1", "\n", "mu2_sq", "=", "mu2", "*", "mu2", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "sigma1_sq", "=", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "ref", "*", "ref", ",", "sd", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "dist", "*", "dist", ",", "sd", ")", "-", "mu2_sq", "\n", "sigma12", "=", "scipy", ".", "ndimage", ".", "gaussian_filter", "(", "ref", "*", "dist", ",", "sd", ")", "-", "mu1_mu2", "\n", "\n", "sigma1_sq", "[", "sigma1_sq", "<", "0", "]", "=", "0", "\n", "sigma2_sq", "[", "sigma2_sq", "<", "0", "]", "=", "0", "\n", "\n", "g", "=", "sigma12", "/", "(", "sigma1_sq", "+", "eps", ")", "\n", "sv_sq", "=", "sigma2_sq", "-", "g", "*", "sigma12", "\n", "\n", "g", "[", "sigma1_sq", "<", "eps", "]", "=", "0", "\n", "sv_sq", "[", "sigma1_sq", "<", "eps", "]", "=", "sigma2_sq", "[", "sigma1_sq", "<", "eps", "]", "\n", "sigma1_sq", "[", "sigma1_sq", "<", "eps", "]", "=", "0", "\n", "\n", "g", "[", "sigma2_sq", "<", "eps", "]", "=", "0", "\n", "sv_sq", "[", "sigma2_sq", "<", "eps", "]", "=", "0", "\n", "\n", "sv_sq", "[", "g", "<", "0", "]", "=", "sigma2_sq", "[", "g", "<", "0", "]", "\n", "g", "[", "g", "<", "0", "]", "=", "0", "\n", "sv_sq", "[", "sv_sq", "<=", "eps", "]", "=", "eps", "\n", "\n", "num", "+=", "numpy", ".", "sum", "(", "numpy", ".", "log10", "(", "1", "+", "g", "*", "g", "*", "sigma1_sq", "/", "(", "sv_sq", "+", "sigma_nsq", ")", ")", ")", "\n", "den", "+=", "numpy", ".", "sum", "(", "numpy", ".", "log10", "(", "1", "+", "sigma1_sq", "/", "sigma_nsq", ")", ")", "\n", "\n", "", "vifp", "=", "num", "/", "den", "\n", "\n", "return", "vifp", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.Laguerre_Gauss_Circular_Harmonic_3_0": [[36, 45], ["numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.sqrt", "numpy.arctan2", "numpy.exp", "numpy.exp", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["def", "Laguerre_Gauss_Circular_Harmonic_3_0", "(", "size", ",", "sigma", ")", ":", "\n", "    ", "x", "=", "numpy", ".", "linspace", "(", "-", "size", "/", "2.0", ",", "size", "/", "2.0", ",", "size", ")", "\n", "y", "=", "numpy", ".", "linspace", "(", "-", "size", "/", "2.0", ",", "size", "/", "2.0", ",", "size", ")", "\n", "xx", ",", "yy", "=", "numpy", ".", "meshgrid", "(", "x", ",", "y", ")", "\n", "\n", "r", "=", "numpy", ".", "sqrt", "(", "xx", "*", "xx", "+", "yy", "*", "yy", ")", "\n", "gamma", "=", "numpy", ".", "arctan2", "(", "yy", ",", "xx", ")", "\n", "l30", "=", "-", "(", "1", "/", "6.0", ")", "*", "(", "1", "/", "(", "sigma", "*", "sqrt", "(", "pi", ")", ")", ")", "*", "numpy", ".", "exp", "(", "-", "r", "*", "r", "/", "(", "2", "*", "sigma", "*", "sigma", ")", ")", "*", "(", "sqrt", "(", "r", "*", "r", "/", "(", "sigma", "*", "sigma", ")", ")", "**", "3", ")", "*", "numpy", ".", "exp", "(", "-", "1j", "*", "3", "*", "gamma", ")", "\n", "return", "l30", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.Laguerre_Gauss_Circular_Harmonic_1_0": [[46, 55], ["numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.sqrt", "numpy.arctan2", "numpy.exp", "numpy.sqrt", "numpy.exp", "numpy.sqrt"], "function", ["None"], ["", "def", "Laguerre_Gauss_Circular_Harmonic_1_0", "(", "size", ",", "sigma", ")", ":", "\n", "    ", "x", "=", "numpy", ".", "linspace", "(", "-", "size", "/", "2.0", ",", "size", "/", "2.0", ",", "size", ")", "\n", "y", "=", "numpy", ".", "linspace", "(", "-", "size", "/", "2.0", ",", "size", "/", "2.0", ",", "size", ")", "\n", "xx", ",", "yy", "=", "numpy", ".", "meshgrid", "(", "x", ",", "y", ")", "\n", "\n", "r", "=", "numpy", ".", "sqrt", "(", "xx", "*", "xx", "+", "yy", "*", "yy", ")", "\n", "gamma", "=", "numpy", ".", "arctan2", "(", "yy", ",", "xx", ")", "\n", "l10", "=", "-", "(", "1", "/", "(", "sigma", "*", "sqrt", "(", "pi", ")", ")", ")", "*", "numpy", ".", "exp", "(", "-", "r", "*", "r", "/", "(", "2", "*", "sigma", "*", "sigma", ")", ")", "*", "sqrt", "(", "r", "*", "r", "/", "(", "sigma", "*", "sigma", ")", ")", "*", "numpy", ".", "exp", "(", "-", "1j", "*", "gamma", ")", "\n", "return", "l10", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.pec": [[60, 68], ["reco.Laguerre_Gauss_Circular_Harmonic_1_0", "reco.Laguerre_Gauss_Circular_Harmonic_3_0", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "numpy.cos", "numpy.real", "scipy.ndimage.filters.convolve", "numpy.real", "scipy.ndimage.filters.convolve", "numpy.imag", "numpy.imag", "numpy.absolute", "numpy.absolute", "numpy.angle", "numpy.angle"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.Laguerre_Gauss_Circular_Harmonic_1_0", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.Laguerre_Gauss_Circular_Harmonic_3_0"], ["def", "pec", "(", "img", ")", ":", "\n", "# TODO scale parameter should depend on resolution", "\n", "    ", "l10", "=", "Laguerre_Gauss_Circular_Harmonic_1_0", "(", "17", ",", "2", ")", "\n", "l30", "=", "Laguerre_Gauss_Circular_Harmonic_3_0", "(", "17", ",", "2", ")", "\n", "y10", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img", ",", "numpy", ".", "real", "(", "l10", ")", ")", "+", "1j", "*", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img", ",", "numpy", ".", "imag", "(", "l10", ")", ")", "\n", "y30", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img", ",", "numpy", ".", "real", "(", "l30", ")", ")", "+", "1j", "*", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img", ",", "numpy", ".", "imag", "(", "l30", ")", ")", "\n", "pec_map", "=", "-", "(", "numpy", ".", "absolute", "(", "y30", ")", "/", "numpy", ".", "absolute", "(", "y10", ")", ")", "*", "numpy", ".", "cos", "(", "numpy", ".", "angle", "(", "y30", ")", "-", "3", "*", "numpy", ".", "angle", "(", "y10", ")", ")", "\n", "return", "pec_map", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.eco": [[73, 80], ["reco.Laguerre_Gauss_Circular_Harmonic_1_0", "reco.Laguerre_Gauss_Circular_Harmonic_3_0", "numpy.sum", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "numpy.real", "scipy.ndimage.filters.convolve", "numpy.real", "scipy.ndimage.filters.convolve", "numpy.cos", "numpy.imag", "numpy.imag", "numpy.absolute", "numpy.absolute", "numpy.angle", "numpy.angle"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.Laguerre_Gauss_Circular_Harmonic_1_0", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.Laguerre_Gauss_Circular_Harmonic_3_0"], ["def", "eco", "(", "img", ")", ":", "\n", "    ", "l10", "=", "Laguerre_Gauss_Circular_Harmonic_1_0", "(", "17", ",", "2", ")", "\n", "l30", "=", "Laguerre_Gauss_Circular_Harmonic_3_0", "(", "17", ",", "2", ")", "\n", "y10", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img", ",", "numpy", ".", "real", "(", "l10", ")", ")", "+", "1j", "*", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img", ",", "numpy", ".", "imag", "(", "l10", ")", ")", "\n", "y30", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img", ",", "numpy", ".", "real", "(", "l30", ")", ")", "+", "1j", "*", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img", ",", "numpy", ".", "imag", "(", "l30", ")", ")", "\n", "eco", "=", "numpy", ".", "sum", "(", "-", "(", "numpy", ".", "absolute", "(", "y30", ")", "*", "numpy", ".", "absolute", "(", "y10", ")", ")", "*", "numpy", ".", "cos", "(", "numpy", ".", "angle", "(", "y30", ")", "-", "3", "*", "numpy", ".", "angle", "(", "y10", ")", ")", ")", "\n", "return", "eco", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.reco": [[85, 88], ["reco.eco", "reco.eco"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.eco", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.reco.eco"], ["def", "reco", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "C", "=", "1", "# TODO what is a good value?", "\n", "return", "(", "eco", "(", "img2", ")", "+", "C", ")", "/", "(", "eco", "(", "img1", ")", "+", "C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.ssim.block_view": [[27, 36], ["numpy.lib.stride_tricks.as_strided"], "function", ["None"], ["def", "block_view", "(", "A", ",", "block", "=", "(", "3", ",", "3", ")", ")", ":", "\n", "    ", "\"\"\"Provide a 2D block view to 2D array. No error checking made.\n    Therefore meaningful (as implemented) only for blocks strictly\n    compatible with the shape of A.\"\"\"", "\n", "# simple shape and strides computations may seem at first strange", "\n", "# unless one is able to recognize the 'tuple additions' involved ;-)", "\n", "shape", "=", "(", "A", ".", "shape", "[", "0", "]", "/", "block", "[", "0", "]", ",", "A", ".", "shape", "[", "1", "]", "/", "block", "[", "1", "]", ")", "+", "block", "\n", "strides", "=", "(", "block", "[", "0", "]", "*", "A", ".", "strides", "[", "0", "]", ",", "block", "[", "1", "]", "*", "A", ".", "strides", "[", "1", "]", ")", "+", "A", ".", "strides", "\n", "return", "ast", "(", "A", ",", "shape", "=", "shape", ",", "strides", "=", "strides", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.ssim.ssim": [[38, 52], ["ssim.block_view", "ssim.block_view", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.mean", "numpy.sum", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.ssim.block_view", "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.ssim.block_view"], ["", "def", "ssim", "(", "img1", ",", "img2", ",", "C1", "=", "0.01", "**", "2", ",", "C2", "=", "0.03", "**", "2", ")", ":", "\n", "\n", "    ", "bimg1", "=", "block_view", "(", "img1", ",", "(", "4", ",", "4", ")", ")", "\n", "bimg2", "=", "block_view", "(", "img2", ",", "(", "4", ",", "4", ")", ")", "\n", "s1", "=", "numpy", ".", "sum", "(", "bimg1", ",", "(", "-", "1", ",", "-", "2", ")", ")", "\n", "s2", "=", "numpy", ".", "sum", "(", "bimg2", ",", "(", "-", "1", ",", "-", "2", ")", ")", "\n", "ss", "=", "numpy", ".", "sum", "(", "bimg1", "*", "bimg1", ",", "(", "-", "1", ",", "-", "2", ")", ")", "+", "numpy", ".", "sum", "(", "bimg2", "*", "bimg2", ",", "(", "-", "1", ",", "-", "2", ")", ")", "\n", "s12", "=", "numpy", ".", "sum", "(", "bimg1", "*", "bimg2", ",", "(", "-", "1", ",", "-", "2", ")", ")", "\n", "\n", "vari", "=", "ss", "-", "s1", "*", "s1", "-", "s2", "*", "s2", "\n", "covar", "=", "s12", "-", "s1", "*", "s2", "\n", "\n", "ssim_map", "=", "(", "2", "*", "s1", "*", "s2", "+", "C1", ")", "*", "(", "2", "*", "covar", "+", "C2", ")", "/", "(", "(", "s1", "*", "s1", "+", "s2", "*", "s2", "+", "C1", ")", "*", "(", "vari", "+", "C2", ")", ")", "\n", "return", "numpy", ".", "mean", "(", "ssim_map", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.ssim.ssim_exact": [[54, 71], ["scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "numpy.mean", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter", "scipy.ndimage.gaussian_filter"], "function", ["None"], ["", "def", "ssim_exact", "(", "img1", ",", "img2", ",", "sd", "=", "1.5", ",", "C1", "=", "0.01", "**", "2", ",", "C2", "=", "0.03", "**", "2", ")", ":", "\n", "\n", "    ", "mu1", "=", "gaussian_filter", "(", "img1", ",", "sd", ")", "\n", "mu2", "=", "gaussian_filter", "(", "img2", ",", "sd", ")", "\n", "mu1_sq", "=", "mu1", "*", "mu1", "\n", "mu2_sq", "=", "mu2", "*", "mu2", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "sigma1_sq", "=", "gaussian_filter", "(", "img1", "*", "img1", ",", "sd", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "gaussian_filter", "(", "img2", "*", "img2", ",", "sd", ")", "-", "mu2_sq", "\n", "sigma12", "=", "gaussian_filter", "(", "img1", "*", "img2", ",", "sd", ")", "-", "mu1_mu2", "\n", "\n", "ssim_num", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "\n", "\n", "ssim_den", "=", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "\n", "ssim_map", "=", "ssim_num", "/", "ssim_den", "\n", "return", "numpy", ".", "mean", "(", "ssim_map", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amjltc295_Free-Form-Video-Inpainting.video_quality.psnr.psnr": [[22, 28], ["numpy.mean", "math.log10", "math.sqrt"], "function", ["None"], ["def", "psnr", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "mse", "=", "numpy", ".", "mean", "(", "(", "img1", "-", "img2", ")", "**", "2", ")", "\n", "if", "mse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "PIXEL_MAX", "=", "255.0", "\n", "return", "20", "*", "math", ".", "log10", "(", "PIXEL_MAX", "/", "math", ".", "sqrt", "(", "mse", ")", ")", "\n", "", ""]]}