{"home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.config.Config.__init__": [[10, 90], ["range"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset_name", ")", ":", "\n", "# Global", "\n", "        ", "self", ".", "image_size", "=", "720", ",", "1280", "#input image size", "\n", "self", ".", "batch_size", "=", "32", "#train batch size ", "\n", "self", ".", "test_batch_size", "=", "8", "#test batch size", "\n", "self", ".", "num_boxes", "=", "12", "#max number of bounding boxes in each frame", "\n", "\n", "# Gpu", "\n", "self", ".", "use_gpu", "=", "True", "\n", "self", ".", "use_multi_gpu", "=", "True", "\n", "self", ".", "device_list", "=", "\"0,1\"", "#id list of gpus used for training", "\n", "\n", "# Dataset", "\n", "assert", "(", "dataset_name", "in", "[", "'volleyball'", ",", "'collective'", "]", ")", "\n", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n", "if", "dataset_name", "==", "'volleyball'", ":", "\n", "            ", "self", ".", "data_path", "=", "'../data/volleyball'", "#data path for the volleyball dataset", "\n", "self", ".", "train_seqs", "=", "[", "1", ",", "3", ",", "6", ",", "7", ",", "10", ",", "13", ",", "15", ",", "16", ",", "18", ",", "22", ",", "23", ",", "31", ",", "32", ",", "36", ",", "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", "48", ",", "50", ",", "52", ",", "53", ",", "54", ",", "\n", "0", ",", "2", ",", "8", ",", "12", ",", "17", ",", "19", ",", "24", ",", "26", ",", "27", ",", "28", ",", "30", ",", "33", ",", "46", ",", "49", ",", "51", "]", "#video id list of train set ", "\n", "self", ".", "test_seqs", "=", "[", "4", ",", "5", ",", "9", ",", "11", ",", "14", ",", "20", ",", "21", ",", "25", ",", "29", ",", "34", ",", "35", ",", "37", ",", "43", ",", "44", ",", "45", ",", "47", "]", "#video id list of test set", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "data_path", "=", "'data/collective/ActivityDataset'", "#data path for the collective dataset", "\n", "self", ".", "test_seqs", "=", "[", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "15", ",", "16", ",", "25", ",", "28", ",", "29", ",", "52", ",", "53", ",", "59", ",", "60", ",", "64", ",", "66", ",", "68", ",", "70", ",", "71", "]", "\n", "self", ".", "train_seqs", "=", "[", "s", "for", "s", "in", "range", "(", "1", ",", "73", ")", "if", "s", "not", "in", "self", ".", "test_seqs", "]", "\n", "\n", "# START: Original code by Zijian and Xinran", "\n", "# Backbone ", "\n", "", "self", ".", "backbone", "=", "'inv3'", "\n", "#self.backbone='mobilenet'", "\n", "# END: Original code by Zijian and Xinran", "\n", "\n", "self", ".", "crop_size", "=", "5", ",", "5", "#crop size of roi align", "\n", "self", ".", "train_backbone", "=", "False", "#if freeze the feature extraction part of network, True for stage 1, False for stage 2", "\n", "self", ".", "out_size", "=", "87", ",", "157", "#output feature map size of backbone ", "\n", "self", ".", "emb_features", "=", "1056", "#output feature map channel of backbone", "\n", "\n", "\n", "# Activity Action", "\n", "self", ".", "num_actions", "=", "9", "#number of action categories", "\n", "self", ".", "num_activities", "=", "8", "#number of activity categories", "\n", "self", ".", "actions_loss_weight", "=", "1.0", "#weight used to balance action loss and activity loss", "\n", "self", ".", "actions_weights", "=", "None", "\n", "\n", "# Sample", "\n", "self", ".", "num_frames", "=", "3", "\n", "self", ".", "num_before", "=", "5", "\n", "self", ".", "num_after", "=", "4", "\n", "\n", "# GCN", "\n", "self", ".", "num_features_boxes", "=", "1024", "\n", "self", ".", "num_features_relation", "=", "256", "\n", "self", ".", "num_graph", "=", "16", "#number of graphs", "\n", "self", ".", "num_features_gcn", "=", "self", ".", "num_features_boxes", "\n", "self", ".", "gcn_layers", "=", "1", "#number of GCN layers", "\n", "self", ".", "tau_sqrt", "=", "False", "\n", "self", ".", "pos_threshold", "=", "0.2", "#distance mask threshold in position relation", "\n", "\n", "# START: Original code by Zijian and Xinran", "\n", "self", ".", "appearance_calc", "=", "\"DotProduct\"", "#based on our experiments, we suggest to use NCC or SAD to represent similarity relation graph instead of DotProduct", "\n", "# END: Original code by Zijian and Xinran", "\n", "\n", "# Training Parameters", "\n", "self", ".", "train_random_seed", "=", "0", "\n", "self", ".", "train_learning_rate", "=", "2e-4", "#initial learning rate ", "\n", "self", ".", "lr_plan", "=", "{", "41", ":", "1e-4", ",", "81", ":", "5e-5", ",", "121", ":", "1e-5", "}", "#change learning rate in these epochs ", "\n", "self", ".", "train_dropout_prob", "=", "0.3", "#dropout probability", "\n", "self", ".", "weight_decay", "=", "0", "#l2 weight decay", "\n", "\n", "self", ".", "max_epoch", "=", "150", "#max training epoch", "\n", "self", ".", "test_interval_epoch", "=", "2", "\n", "\n", "# Exp", "\n", "self", ".", "training_stage", "=", "1", "#specify stage1 or stage2", "\n", "self", ".", "stage1_model_path", "=", "'result/stage1_inv3_90.91%.pth'", "#path of the base model, need to be set in stage2", "\n", "self", ".", "stage2_model_path", "=", "'result/stage2_epoch84_90.65%.pth'", "#path of the gcn model, need to be set in stage3", "\n", "self", ".", "test_before_train", "=", "False", "\n", "self", ".", "exp_note", "=", "'Group-Activity-Recognition'", "\n", "self", ".", "exp_name", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.config.Config.init_config": [[91, 101], ["time.strftime", "os.makedirs", "time.localtime"], "methods", ["None"], ["", "def", "init_config", "(", "self", ",", "need_new_folder", "=", "True", ")", ":", "\n", "        ", "if", "self", ".", "exp_name", "is", "None", ":", "\n", "            ", "time_str", "=", "time", ".", "strftime", "(", "\"%Y-%m-%d_%H-%M-%S\"", ",", "time", ".", "localtime", "(", ")", ")", "\n", "self", ".", "exp_name", "=", "'[%s_stage%d]<%s>'", "%", "(", "self", ".", "exp_note", ",", "self", ".", "training_stage", ",", "time_str", ")", "\n", "\n", "", "self", ".", "result_path", "=", "'result/%s'", "%", "self", ".", "exp_name", "\n", "self", ".", "log_path", "=", "'result/%s/log.txt'", "%", "self", ".", "exp_name", "\n", "\n", "if", "need_new_folder", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "result_path", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.test_net.test_net": [[16, 84], ["list", "cfg.init_config", "utils.show_config", "dataset.return_dataset", "data.DataLoader", "utils.Timer", "GCNnet.to", "test", "utils.show_epoch_info", "utils.print_log", "utils.print_log", "map", "torch.cuda.is_available", "torch.device", "torch.device", "Basenet", "nn.DataParallel", "cfg.device_list.split", "GCNnet", "torch.load", "OrderedDict", "state_dict.items", "GCNnet.load_state_dict", "utils.Timer.totaltime"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.config.Config.init_config", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.show_config", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.dataset.return_dataset", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.show_epoch_info", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.totaltime"], ["def", "test_net", "(", "cfg", ")", ":", "\n", "    ", "'''\n    test gcn net\n    '''", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "cfg", ".", "device_list", "\n", "devices", "=", "list", "(", "map", "(", "int", ",", "cfg", ".", "device_list", ".", "split", "(", "','", ")", ")", ")", "\n", "\n", "# Show config parameters", "\n", "cfg", ".", "init_config", "(", ")", "\n", "show_config", "(", "cfg", ")", "\n", "\n", "# Reading dataset", "\n", "_", ",", "validation_set", "=", "return_dataset", "(", "cfg", ")", "\n", "\n", "params", "=", "{", "'batch_size'", ":", "cfg", ".", "test_batch_size", ",", "'shuffle'", ":", "False", ",", "'num_workers'", ":", "0", "}", "\n", "\n", "validation_loader", "=", "data", ".", "DataLoader", "(", "validation_set", ",", "**", "params", ")", "\n", "\n", "# Set data position", "\n", "if", "cfg", ".", "use_gpu", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cuda'", ",", "devices", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "\n", "# Build model and optimizer", "\n", "", "basenet_list", "=", "{", "'volleyball'", ":", "Basenet_volleyball", ",", "'collective'", ":", "Basenet_collective", "}", "\n", "gcnnet_list", "=", "{", "'volleyball'", ":", "GCNnet_volleyball", ",", "'collective'", ":", "GCNnet_collective", "}", "\n", "\n", "if", "cfg", ".", "training_stage", "==", "1", ":", "\n", "        ", "Basenet", "=", "basenet_list", "[", "cfg", ".", "dataset_name", "]", "\n", "model", "=", "Basenet", "(", "cfg", ")", "\n", "", "elif", "cfg", ".", "training_stage", "==", "3", ":", "\n", "        ", "GCNnet", "=", "gcnnet_list", "[", "cfg", ".", "dataset_name", "]", "\n", "model", "=", "GCNnet", "(", "cfg", ")", "\n", "\n", "# Load backbone", "\n", "checkpoint", "=", "torch", ".", "load", "(", "cfg", ".", "stage2_model_path", ")", "\n", "\n", "# original saved file with DataParallel", "\n", "state_dict", "=", "checkpoint", "[", "'state_dict'", "]", "\n", "\n", "# create new OrderedDict that does not contain `module.`", "\n", "from", "collections", "import", "OrderedDict", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "# load params", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "\n", "\n", "", "else", ":", "\n", "        ", "assert", "(", "False", ")", "\n", "\n", "", "if", "cfg", ".", "use_multi_gpu", ":", "\n", "        ", "model", "=", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "devices", ")", "\n", "\n", "", "timer", "=", "Timer", "(", ")", "\n", "model", "=", "model", ".", "to", "(", "f'cuda:{model.device_ids[0]}'", ")", "\n", "test_list", "=", "{", "'volleyball'", ":", "test_volleyball", ",", "'collective'", ":", "test_collective", "}", "\n", "test", "=", "test_list", "[", "cfg", ".", "dataset_name", "]", "\n", "\n", "test_info", "=", "test", "(", "validation_loader", ",", "model", ",", "device", ",", "epoch", ",", "cfg", ")", "\n", "show_epoch_info", "(", "'Test'", ",", "cfg", ".", "log_path", ",", "test_info", ")", "\n", "print_log", "(", "cfg", ".", "log_path", ",", "test_info", ")", "\n", "print_log", "(", "cfg", ".", "log_path", ",", "'Total used time %.1f seconds.'", "%", "(", "timer", ".", "totaltime", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.test_net.test_volleyball": [[85, 141], ["model.eval", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.Timer", "torch.no_grad", "utils.Timer.timeit", "batch_data_test[].reshape", "batch_data_test[].reshape", "model", "actions_in[].reshape", "activities_in[].reshape", "torch.tensor().to", "F.cross_entropy", "torch.argmax", "F.cross_entropy", "torch.argmax", "torch.sum", "torch.sum", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "b.to", "torch.eq().float", "torch.eq().float", "torch.sum.item", "torch.sum.item", "total_loss.item", "torch.tensor", "torch.eq", "torch.eq", "torch.argmax.int", "actions_in[].reshape.int", "torch.argmax.int", "activities_in[].reshape.int"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.timeit", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update"], ["", "def", "test_volleyball", "(", "data_loader", ",", "model", ",", "device", ",", "epoch", ",", "cfg", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "actions_meter", "=", "AverageMeter", "(", ")", "\n", "activities_meter", "=", "AverageMeter", "(", ")", "\n", "loss_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "epoch_timer", "=", "Timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_data_test", "in", "data_loader", ":", "\n", "# prepare batch data", "\n", "            ", "batch_data_test", "=", "[", "b", ".", "to", "(", "device", "=", "device", ")", "for", "b", "in", "batch_data_test", "]", "\n", "batch_size", "=", "batch_data_test", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "num_frames", "=", "batch_data_test", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "actions_in", "=", "batch_data_test", "[", "2", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ",", "cfg", ".", "num_boxes", ")", ")", "\n", "activities_in", "=", "batch_data_test", "[", "3", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ")", ")", "\n", "\n", "# forward", "\n", "actions_scores", ",", "activities_scores", "=", "model", "(", "(", "batch_data_test", "[", "0", "]", ",", "batch_data_test", "[", "1", "]", ")", ")", "\n", "\n", "# Predict actions", "\n", "actions_in", "=", "actions_in", "[", ":", ",", "0", ",", ":", "]", ".", "reshape", "(", "(", "batch_size", "*", "cfg", ".", "num_boxes", ",", ")", ")", "\n", "activities_in", "=", "activities_in", "[", ":", ",", "0", "]", ".", "reshape", "(", "(", "batch_size", ",", ")", ")", "\n", "\n", "actions_weights", "=", "torch", ".", "tensor", "(", "cfg", ".", "actions_weights", ")", ".", "to", "(", "device", "=", "device", ")", "\n", "actions_loss", "=", "F", ".", "cross_entropy", "(", "actions_scores", ",", "actions_in", ",", "weight", "=", "actions_weights", ")", "\n", "actions_labels", "=", "torch", ".", "argmax", "(", "actions_scores", ",", "dim", "=", "1", ")", "\n", "\n", "# Predict activities", "\n", "activities_loss", "=", "F", ".", "cross_entropy", "(", "activities_scores", ",", "activities_in", ")", "\n", "activities_labels", "=", "torch", ".", "argmax", "(", "activities_scores", ",", "dim", "=", "1", ")", "\n", "\n", "actions_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "actions_labels", ".", "int", "(", ")", ",", "actions_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "activities_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "activities_labels", ".", "int", "(", ")", ",", "activities_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "# Get accuracy", "\n", "actions_accuracy", "=", "actions_correct", ".", "item", "(", ")", "/", "actions_scores", ".", "shape", "[", "0", "]", "\n", "activities_accuracy", "=", "activities_correct", ".", "item", "(", ")", "/", "activities_scores", ".", "shape", "[", "0", "]", "\n", "\n", "actions_meter", ".", "update", "(", "actions_accuracy", ",", "actions_scores", ".", "shape", "[", "0", "]", ")", "\n", "activities_meter", ".", "update", "(", "activities_accuracy", ",", "activities_scores", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# Total loss", "\n", "total_loss", "=", "activities_loss", "+", "cfg", ".", "actions_loss_weight", "*", "actions_loss", "\n", "loss_meter", ".", "update", "(", "total_loss", ".", "item", "(", ")", ",", "batch_size", ")", "\n", "\n", "", "", "test_info", "=", "{", "\n", "'time'", ":", "epoch_timer", ".", "timeit", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'loss'", ":", "loss_meter", ".", "avg", ",", "\n", "'activities_acc'", ":", "activities_meter", ".", "avg", "*", "100", ",", "\n", "'actions_acc'", ":", "actions_meter", ".", "avg", "*", "100", "\n", "}", "\n", "\n", "return", "test_info", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.test_net.test_collective": [[142, 237], ["model.eval", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "enumerate", "utils.Timer", "matplotlib.Patch", "legends.append", "torch.no_grad", "utils.Timer.timeit", "enumerate", "batch_data[].reshape", "batch_data[].reshape", "batch_data[].reshape", "model", "torch.cat().reshape", "F.cross_entropy", "torch.argmax", "torch.sum", "F.cross_entropy", "torch.argmax", "torch.sum", "min", "test_net.visualize", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "matplotlib.TABLEAU_COLORS.keys", "b.to", "actions_in.reshape.reshape", "bboxes_num.reshape.reshape", "range", "range", "activities_in[].reshape.reshape", "activities_in[].reshape", "torch.eq().float", "torch.eq().float", "torch.sum.item", "torch.sum.item", "len", "torch.argmax.cpu().detach().numpy", "torch.argmax.cpu().detach().numpy", "activities_in[].reshape.cpu().detach().numpy", "total_loss.item", "actions_in_nopad.append", "actions_in_nopad.append", "torch.cat", "torch.eq", "torch.eq", "torch.argmax.cpu().detach", "torch.argmax.cpu().detach", "activities_in[].reshape.cpu().detach", "torch.argmax.int", "actions_in.reshape.int", "torch.argmax.int", "activities_in[].reshape.int", "torch.argmax.cpu", "torch.argmax.cpu", "activities_in[].reshape.cpu"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.timeit", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.test_net.visualize", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update"], ["", "def", "test_collective", "(", "data_loader", ",", "model", ",", "device", ",", "epoch", ",", "cfg", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "actions_meter", "=", "AverageMeter", "(", ")", "\n", "activities_meter", "=", "AverageMeter", "(", ")", "\n", "loss_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "colors", "=", "{", "i", ":", "a", "for", "i", ",", "a", "in", "enumerate", "(", "\n", "mcolors", ".", "TABLEAU_COLORS", ".", "keys", "(", ")", ")", "}", "# {0: 'tab:blue', 1: 'tab:orange', 2: 'tab:green', 3: 'tab:red', 4: 'tab:purple', 5: 'tab:brown', 6: 'tab:pink', 7: 'tab:gray', 8: 'tab:olive', 9: 'tab:cyan'}", "\n", "legends", "=", "[", "]", "\n", "for", "i", ",", "action", "in", "enumerate", "(", "ACTIONS", ")", ":", "\n", "        ", "patch", "=", "mpatches", ".", "Patch", "(", "color", "=", "colors", "[", "i", "]", ",", "label", "=", "ACTIONS", "[", "i", "]", ",", "fill", "=", "False", ",", "linewidth", "=", "2.2", ")", "\n", "legends", ".", "append", "(", "patch", ")", "\n", "\n", "", "epoch_timer", "=", "Timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "i", "=", "0", "\n", "for", "batch_data", "in", "data_loader", ":", "\n", "            ", "sid", ",", "fid", "=", "data_loader", ".", "dataset", ".", "frames", "[", "i", "]", "\n", "ground_truth", "=", "data_loader", ".", "dataset", ".", "anns", "[", "sid", "]", "[", "fid", "]", "\n", "\n", "# prepare batch data", "\n", "batch_data", "=", "[", "b", ".", "to", "(", "device", "=", "device", ")", "for", "b", "in", "batch_data", "]", "\n", "batch_size", "=", "batch_data", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "num_frames", "=", "batch_data", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "actions_in", "=", "batch_data", "[", "2", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ",", "cfg", ".", "num_boxes", ")", ")", "\n", "activities_in", "=", "batch_data", "[", "3", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ")", ")", "\n", "bboxes_num", "=", "batch_data", "[", "4", "]", ".", "reshape", "(", "batch_size", ",", "num_frames", ")", "\n", "\n", "# forward", "\n", "actions_scores", ",", "activities_scores", "=", "model", "(", "(", "batch_data", "[", "0", "]", ",", "batch_data", "[", "1", "]", ",", "batch_data", "[", "4", "]", ")", ")", "\n", "\n", "actions_in_nopad", "=", "[", "]", "\n", "\n", "if", "cfg", ".", "training_stage", "==", "1", ":", "\n", "                ", "actions_in", "=", "actions_in", ".", "reshape", "(", "(", "batch_size", "*", "num_frames", ",", "cfg", ".", "num_boxes", ",", ")", ")", "\n", "bboxes_num", "=", "bboxes_num", ".", "reshape", "(", "batch_size", "*", "num_frames", ",", ")", "\n", "for", "bt", "in", "range", "(", "batch_size", "*", "num_frames", ")", ":", "\n", "                    ", "N", "=", "bboxes_num", "[", "bt", "]", "\n", "actions_in_nopad", ".", "append", "(", "actions_in", "[", "bt", ",", ":", "N", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "for", "b", "in", "range", "(", "batch_size", ")", ":", "\n", "                    ", "N", "=", "bboxes_num", "[", "b", "]", "[", "0", "]", "\n", "actions_in_nopad", ".", "append", "(", "actions_in", "[", "b", "]", "[", "0", "]", "[", ":", "N", "]", ")", "\n", "", "", "actions_in", "=", "torch", ".", "cat", "(", "actions_in_nopad", ",", "dim", "=", "0", ")", ".", "reshape", "(", "-", "1", ",", ")", "# ALL_N,", "\n", "\n", "if", "cfg", ".", "training_stage", "==", "1", ":", "\n", "                ", "activities_in", "=", "activities_in", ".", "reshape", "(", "-", "1", ",", ")", "\n", "", "else", ":", "\n", "                ", "activities_in", "=", "activities_in", "[", ":", ",", "0", "]", ".", "reshape", "(", "batch_size", ",", ")", "\n", "\n", "", "actions_loss", "=", "F", ".", "cross_entropy", "(", "actions_scores", ",", "actions_in", ")", "\n", "actions_labels", "=", "torch", ".", "argmax", "(", "actions_scores", ",", "dim", "=", "1", ")", "# ALL_N,", "\n", "actions_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "actions_labels", ".", "int", "(", ")", ",", "actions_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "# Predict activities", "\n", "activities_loss", "=", "F", ".", "cross_entropy", "(", "activities_scores", ",", "activities_in", ")", "\n", "activities_labels", "=", "torch", ".", "argmax", "(", "activities_scores", ",", "dim", "=", "1", ")", "# B,", "\n", "activities_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "activities_labels", ".", "int", "(", ")", ",", "activities_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "# Get accuracy", "\n", "actions_accuracy", "=", "actions_correct", ".", "item", "(", ")", "/", "actions_scores", ".", "shape", "[", "0", "]", "\n", "activities_accuracy", "=", "activities_correct", ".", "item", "(", ")", "/", "activities_scores", ".", "shape", "[", "0", "]", "\n", "\n", "# Visualize the result", "\n", "# print('\\nFrame id: ', fid)", "\n", "# print('Predict actions: ', actions_labels.int())", "\n", "# print(\"GT actions: \", actions_in.int())", "\n", "# print('Predict activities: ', activities_labels.int())", "\n", "# print(\"GT activities: \", activities_in.int())", "\n", "# print(\"action accu: \", actions_accuracy)", "\n", "# print(\"activity accu: \", activities_accuracy)", "\n", "\n", "num_draw_bboxes", "=", "min", "(", "len", "(", "ground_truth", "[", "'bboxes'", "]", ")", ",", "actions_labels", ".", "shape", "[", "0", "]", ")", "\n", "visualize", "(", "cfg", ",", "sid", ",", "fid", ",", "ground_truth", "[", "'bboxes'", "]", ",", "actions_labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "\n", "activities_labels", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "num_draw_bboxes", ",", "colors", ",", "legends", ",", "activities_in", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "actions_accuracy", ",", "activities_accuracy", ")", "\n", "\n", "actions_meter", ".", "update", "(", "actions_accuracy", ",", "actions_scores", ".", "shape", "[", "0", "]", ")", "\n", "activities_meter", ".", "update", "(", "activities_accuracy", ",", "activities_scores", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# Total loss", "\n", "total_loss", "=", "activities_loss", "+", "cfg", ".", "actions_loss_weight", "*", "actions_loss", "\n", "loss_meter", ".", "update", "(", "total_loss", ".", "item", "(", ")", ",", "batch_size", ")", "\n", "i", "+=", "1", "\n", "\n", "", "", "test_info", "=", "{", "\n", "'time'", ":", "epoch_timer", ".", "timeit", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'loss'", ":", "loss_meter", ".", "avg", ",", "\n", "'activities_acc'", ":", "activities_meter", ".", "avg", "*", "100", ",", "\n", "'actions_acc'", ":", "actions_meter", ".", "avg", "*", "100", "\n", "}", "\n", "\n", "return", "test_info", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.test_net.visualize": [[239, 285], ["os.path.join", "cv2.imread", "matplotlib.figure", "matplotlib.imshow", "matplotlib.gca", "plt.gca.get_xaxis().set_ticks", "plt.gca.get_yaxis().set_ticks", "plt.gca.text", "plt.gca.text", "plt.gca.text", "range", "matplotlib.subplots_adjust", "matplotlib.legend", "matplotlib.gcf", "matplotlib.savefig", "matplotlib.close", "cv2.imread", "cv2.imshow", "cv2.waitKey", "print", "exit", "np.array", "matplotlib.patches.Rectangle", "plt.gca.add_patch", "plt.gca.get_xaxis", "plt.gca.get_yaxis"], "function", ["None"], ["", "def", "visualize", "(", "cfg", ",", "sid", ",", "fid", ",", "bboxes", ",", "actions_labels", ",", "activities_labels", ",", "num_draw_bboxes", ",", "colors", ",", "legends", ",", "activities_in", ",", "actions_accuracy", ",", "activities_accuracy", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "cfg", ".", "data_path", ",", "'seq%02d/frame%04d.jpg'", "%", "(", "sid", ",", "fid", ")", ")", "\n", "image", "=", "cv", ".", "imread", "(", "path", ")", "\n", "if", "image", "is", "None", ":", "\n", "        ", "print", "(", "'Could not open or find the image: %s'", ",", "path", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "", "OH", ",", "OW", "=", "FRAMES_SIZE", "[", "sid", "]", "\n", "plt", ".", "figure", "(", "facecolor", "=", "'white'", ")", "\n", "plt", ".", "imshow", "(", "image", ")", "\n", "axes", "=", "plt", ".", "gca", "(", ")", "\n", "axes", ".", "get_xaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "axes", ".", "get_yaxis", "(", ")", ".", "set_ticks", "(", "[", "]", ")", "\n", "\n", "axes", ".", "text", "(", "0.5", ",", "0.95", ",", "\"Predicted Activity: \"", "+", "ACTIVITIES", "[", "activities_labels", "[", "0", "]", "]", ",", "\n", "style", "=", "'normal'", ",", "verticalalignment", "=", "'top'", ",", "horizontalalignment", "=", "'center'", ",", "\n", "weight", "=", "'bold'", ",", "bbox", "=", "{", "'facecolor'", ":", "'white'", ",", "'alpha'", ":", "0.8", ",", "'pad'", ":", "0.2", ",", "'boxstyle'", ":", "'round'", ",", "'edgecolor'", ":", "'none'", "}", ",", "\n", "color", "=", "colors", "[", "activities_labels", "[", "0", "]", "+", "1", "]", ",", "fontsize", "=", "10", ",", "transform", "=", "axes", ".", "transAxes", ")", "\n", "\n", "axes", ".", "text", "(", "0.5", ",", "0.90", ",", "\"Ground Truth Activity: \"", "+", "ACTIVITIES", "[", "activities_in", "[", "0", "]", "]", ",", "\n", "style", "=", "'normal'", ",", "verticalalignment", "=", "'top'", ",", "horizontalalignment", "=", "'center'", ",", "\n", "weight", "=", "'bold'", ",", "\n", "bbox", "=", "{", "'facecolor'", ":", "'white'", ",", "'alpha'", ":", "0.8", ",", "'pad'", ":", "0.10", ",", "'boxstyle'", ":", "'round'", ",", "'edgecolor'", ":", "'none'", "}", ",", "\n", "color", "=", "colors", "[", "activities_in", "[", "0", "]", "+", "1", "]", ",", "fontsize", "=", "10", ",", "transform", "=", "axes", ".", "transAxes", ")", "\n", "\n", "axes", ".", "text", "(", "0.5", ",", "0.85", ",", "\"Actions Accuracy: {:.2f}\"", ".", "format", "(", "actions_accuracy", ")", "+", "\"\\nActivities Accuracy: {:.2f}\"", ".", "format", "(", "activities_accuracy", ")", ",", "\n", "style", "=", "'normal'", ",", "verticalalignment", "=", "'top'", ",", "horizontalalignment", "=", "'center'", ",", "\n", "bbox", "=", "{", "'facecolor'", ":", "'white'", ",", "'alpha'", ":", "0.8", ",", "'pad'", ":", "0.2", ",", "'boxstyle'", ":", "'round'", ",", "'edgecolor'", ":", "'none'", "}", ",", "\n", "weight", "=", "'bold'", ",", "color", "=", "'black'", ",", "fontsize", "=", "10", ",", "transform", "=", "axes", ".", "transAxes", ")", "\n", "\n", "for", "i", "in", "range", "(", "num_draw_bboxes", ")", ":", "\n", "        ", "y1", ",", "x1", ",", "y2", ",", "x2", "=", "bboxes", "[", "i", "]", "\n", "tmp_boxes", "=", "[", "y1", "*", "OH", ",", "x1", "*", "OW", ",", "y2", "*", "OH", ",", "x2", "*", "OW", "]", "\n", "bb", "=", "np", ".", "array", "(", "tmp_boxes", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "rect", "=", "Rectangle", "(", "(", "bb", "[", "1", "]", ",", "bb", "[", "0", "]", ")", ",", "bb", "[", "3", "]", "-", "bb", "[", "1", "]", ",", "bb", "[", "2", "]", "-", "bb", "[", "0", "]", ",", "fill", "=", "False", ",", "color", "=", "colors", "[", "actions_labels", "[", "i", "]", "]", ",", "linewidth", "=", "2.2", ")", "\n", "axes", ".", "add_patch", "(", "rect", ")", "\n", "\n", "", "plt", ".", "subplots_adjust", "(", "bottom", "=", "0.2", ")", "\n", "plt", ".", "legend", "(", "handles", "=", "legends", ",", "loc", "=", "'upper center'", ",", "bbox_to_anchor", "=", "(", "0.5", ",", "-", "0.05", ")", ",", "fancybox", "=", "True", ",", "shadow", "=", "True", ",", "ncol", "=", "4", ")", "\n", "plt", ".", "gcf", "(", ")", "\n", "img_path", "=", "cfg", ".", "result_path", "+", "'/seq%02d_frame%04d.jpg'", "%", "(", "sid", ",", "fid", ")", "\n", "plt", ".", "savefig", "(", "img_path", ")", "\n", "plt", ".", "close", "(", ")", "\n", "img", "=", "cv", ".", "imread", "(", "img_path", ")", "\n", "cv", ".", "imshow", "(", "\"Results\"", ",", "img", ")", "\n", "cv", ".", "waitKey", "(", "120", ")", "\n", "# END: Original code by Zijian and Xinran", ""]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.CollectiveDataset.__init__": [[105, 117], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "anns", ",", "frames", ",", "images_path", ",", "image_size", ",", "feature_size", ",", "num_boxes", "=", "13", ",", "num_frames", "=", "10", ",", "is_training", "=", "True", ",", "is_finetune", "=", "False", ")", ":", "\n", "        ", "self", ".", "anns", "=", "anns", "\n", "self", ".", "frames", "=", "frames", "\n", "self", ".", "images_path", "=", "images_path", "\n", "self", ".", "image_size", "=", "image_size", "\n", "self", ".", "feature_size", "=", "feature_size", "\n", "\n", "self", ".", "num_boxes", "=", "num_boxes", "\n", "self", ".", "num_frames", "=", "num_frames", "\n", "\n", "self", ".", "is_training", "=", "is_training", "\n", "self", ".", "is_finetune", "=", "is_finetune", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.CollectiveDataset.__len__": [[118, 123], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Return the total number of samples\n        \"\"\"", "\n", "return", "len", "(", "self", ".", "frames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.CollectiveDataset.__getitem__": [[124, 134], ["collective.CollectiveDataset.get_frames", "collective.CollectiveDataset.load_samples_sequence"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.CollectiveDataset.get_frames", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.CollectiveDataset.load_samples_sequence"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Generate one sample of the dataset\n        \"\"\"", "\n", "\n", "select_frames", "=", "self", ".", "get_frames", "(", "self", ".", "frames", "[", "index", "]", ")", "\n", "\n", "sample", "=", "self", ".", "load_samples_sequence", "(", "select_frames", ")", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.CollectiveDataset.get_frames": [[135, 156], ["random.randint", "random.sample", "range", "range"], "methods", ["None"], ["", "def", "get_frames", "(", "self", ",", "frame", ")", ":", "\n", "\n", "        ", "sid", ",", "src_fid", "=", "frame", "\n", "\n", "if", "self", ".", "is_finetune", ":", "\n", "            ", "if", "self", ".", "is_training", ":", "\n", "                ", "fid", "=", "random", ".", "randint", "(", "src_fid", ",", "src_fid", "+", "self", ".", "num_frames", "-", "1", ")", "\n", "return", "[", "(", "sid", ",", "src_fid", ",", "fid", ")", "]", "\n", "\n", "", "else", ":", "\n", "                ", "return", "[", "(", "sid", ",", "src_fid", ",", "fid", ")", "\n", "for", "fid", "in", "range", "(", "src_fid", ",", "src_fid", "+", "self", ".", "num_frames", ")", "]", "\n", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "is_training", ":", "\n", "                ", "sample_frames", "=", "random", ".", "sample", "(", "range", "(", "src_fid", ",", "src_fid", "+", "self", ".", "num_frames", ")", ",", "3", ")", "\n", "return", "[", "(", "sid", ",", "src_fid", ",", "fid", ")", "for", "fid", "in", "sample_frames", "]", "\n", "\n", "", "else", ":", "\n", "                ", "sample_frames", "=", "[", "src_fid", ",", "src_fid", "+", "3", ",", "src_fid", "+", "6", ",", "src_fid", "+", "1", ",", "src_fid", "+", "4", ",", "src_fid", "+", "7", ",", "src_fid", "+", "2", ",", "src_fid", "+", "5", ",", "src_fid", "+", "8", "]", "\n", "return", "[", "(", "sid", ",", "src_fid", ",", "fid", ")", "for", "fid", "in", "sample_frames", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.CollectiveDataset.load_samples_sequence": [[158, 216], ["enumerate", "numpy.stack", "numpy.array", "numpy.array", "numpy.array().reshape", "numpy.array().reshape", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().long", "torch.from_numpy().long", "torch.from_numpy().int", "PIL.Image.open", "torchvision.functional.resize", "torchvision.functional.resize", "numpy.array", "img.transpose.transpose.transpose", "torch.from_numpy().float.append", "torch.from_numpy().int.append", "torch.from_numpy().float.append", "torch.from_numpy().long.append", "torch.from_numpy().long.append", "temp_boxes.append", "len", "len", "temp_boxes.append", "temp_actions.append", "numpy.array", "numpy.array", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "", "", "def", "load_samples_sequence", "(", "self", ",", "select_frames", ")", ":", "\n", "        ", "\"\"\"\n        load samples sequence\n\n        Returns:\n            pytorch tensors\n        \"\"\"", "\n", "OH", ",", "OW", "=", "self", ".", "feature_size", "\n", "\n", "images", ",", "bboxes", "=", "[", "]", ",", "[", "]", "\n", "activities", ",", "actions", "=", "[", "]", ",", "[", "]", "\n", "bboxes_num", "=", "[", "]", "\n", "\n", "\n", "for", "i", ",", "(", "sid", ",", "src_fid", ",", "fid", ")", "in", "enumerate", "(", "select_frames", ")", ":", "\n", "\n", "            ", "img", "=", "Image", ".", "open", "(", "self", ".", "images_path", "+", "'/seq%02d/frame%04d.jpg'", "%", "(", "sid", ",", "fid", ")", ")", "\n", "\n", "img", "=", "transforms", ".", "functional", ".", "resize", "(", "img", ",", "self", ".", "image_size", ")", "\n", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "\n", "# H,W,3 -> 3,H,W", "\n", "img", "=", "img", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "images", ".", "append", "(", "img", ")", "\n", "\n", "temp_boxes", "=", "[", "]", "\n", "for", "box", "in", "self", ".", "anns", "[", "sid", "]", "[", "src_fid", "]", "[", "'bboxes'", "]", ":", "\n", "                ", "y1", ",", "x1", ",", "y2", ",", "x2", "=", "box", "\n", "w1", ",", "h1", ",", "w2", ",", "h2", "=", "x1", "*", "OW", ",", "y1", "*", "OH", ",", "x2", "*", "OW", ",", "y2", "*", "OH", "\n", "temp_boxes", ".", "append", "(", "(", "w1", ",", "h1", ",", "w2", ",", "h2", ")", ")", "\n", "\n", "", "temp_actions", "=", "self", ".", "anns", "[", "sid", "]", "[", "src_fid", "]", "[", "'actions'", "]", "[", ":", "]", "\n", "bboxes_num", ".", "append", "(", "len", "(", "temp_boxes", ")", ")", "\n", "\n", "while", "len", "(", "temp_boxes", ")", "!=", "self", ".", "num_boxes", ":", "\n", "                ", "temp_boxes", ".", "append", "(", "(", "0", ",", "0", ",", "0", ",", "0", ")", ")", "\n", "temp_actions", ".", "append", "(", "-", "1", ")", "\n", "\n", "", "bboxes", ".", "append", "(", "temp_boxes", ")", "\n", "actions", ".", "append", "(", "temp_actions", ")", "\n", "\n", "activities", ".", "append", "(", "self", ".", "anns", "[", "sid", "]", "[", "src_fid", "]", "[", "'group_activity'", "]", ")", "\n", "\n", "\n", "", "images", "=", "np", ".", "stack", "(", "images", ")", "\n", "activities", "=", "np", ".", "array", "(", "activities", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "bboxes_num", "=", "np", ".", "array", "(", "bboxes_num", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "bboxes", "=", "np", ".", "array", "(", "bboxes", ",", "dtype", "=", "np", ".", "float", ")", ".", "reshape", "(", "-", "1", ",", "self", ".", "num_boxes", ",", "4", ")", "\n", "actions", "=", "np", ".", "array", "(", "actions", ",", "dtype", "=", "np", ".", "int32", ")", ".", "reshape", "(", "-", "1", ",", "self", ".", "num_boxes", ")", "\n", "\n", "#convert to pytorch tensor", "\n", "images", "=", "torch", ".", "from_numpy", "(", "images", ")", ".", "float", "(", ")", "\n", "bboxes", "=", "torch", ".", "from_numpy", "(", "bboxes", ")", ".", "float", "(", ")", "\n", "actions", "=", "torch", ".", "from_numpy", "(", "actions", ")", ".", "long", "(", ")", "\n", "activities", "=", "torch", ".", "from_numpy", "(", "activities", ")", ".", "long", "(", ")", "\n", "bboxes_num", "=", "torch", ".", "from_numpy", "(", "bboxes_num", ")", ".", "int", "(", ")", "\n", "\n", "return", "images", ",", "bboxes", ",", "actions", ",", "activities", ",", "bboxes_num", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.collective_read_annotations": [[43, 88], ["open", "f.readlines", "l[].split", "actions.append", "bboxes.append", "collections.Counter().most_common", "int", "int", "int", "collections.Counter().most_common", "int", "range", "collections.Counter", "collections.Counter"], "function", ["None"], ["def", "collective_read_annotations", "(", "path", ",", "sid", ")", ":", "\n", "    ", "annotations", "=", "{", "}", "\n", "path", "=", "path", "+", "'/seq%02d/annotations.txt'", "%", "sid", "\n", "\n", "with", "open", "(", "path", ",", "mode", "=", "'r'", ")", "as", "f", ":", "\n", "        ", "frame_id", "=", "None", "\n", "group_activity", "=", "None", "\n", "actions", "=", "[", "]", "\n", "bboxes", "=", "[", "]", "\n", "for", "l", "in", "f", ".", "readlines", "(", ")", ":", "\n", "            ", "values", "=", "l", "[", ":", "-", "1", "]", ".", "split", "(", "'\t'", ")", "\n", "\n", "if", "int", "(", "values", "[", "0", "]", ")", "!=", "frame_id", ":", "\n", "                ", "if", "frame_id", "!=", "None", "and", "frame_id", "%", "10", "==", "1", "and", "frame_id", "+", "9", "<=", "FRAMES_NUM", "[", "sid", "]", ":", "\n", "                    ", "counter", "=", "Counter", "(", "actions", ")", ".", "most_common", "(", "2", ")", "\n", "group_activity", "=", "counter", "[", "0", "]", "[", "0", "]", "-", "1", "if", "counter", "[", "0", "]", "[", "0", "]", "!=", "0", "else", "counter", "[", "1", "]", "[", "0", "]", "-", "1", "\n", "annotations", "[", "frame_id", "]", "=", "{", "\n", "'frame_id'", ":", "frame_id", ",", "\n", "'group_activity'", ":", "group_activity", ",", "\n", "'actions'", ":", "actions", ",", "\n", "'bboxes'", ":", "bboxes", "\n", "}", "\n", "\n", "", "frame_id", "=", "int", "(", "values", "[", "0", "]", ")", "\n", "group_activity", "=", "None", "\n", "actions", "=", "[", "]", "\n", "bboxes", "=", "[", "]", "\n", "\n", "", "actions", ".", "append", "(", "int", "(", "values", "[", "5", "]", ")", "-", "1", ")", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "(", "int", "(", "values", "[", "i", "]", ")", "for", "i", "in", "range", "(", "1", ",", "5", ")", ")", "\n", "H", ",", "W", "=", "FRAMES_SIZE", "[", "sid", "]", "\n", "\n", "bboxes", ".", "append", "(", "(", "y", "/", "H", ",", "x", "/", "W", ",", "(", "y", "+", "h", ")", "/", "H", ",", "(", "x", "+", "w", ")", "/", "W", ")", ")", "\n", "\n", "", "if", "frame_id", "!=", "None", "and", "frame_id", "%", "10", "==", "1", "and", "frame_id", "+", "9", "<=", "FRAMES_NUM", "[", "sid", "]", ":", "\n", "            ", "counter", "=", "Counter", "(", "actions", ")", ".", "most_common", "(", "2", ")", "\n", "group_activity", "=", "counter", "[", "0", "]", "[", "0", "]", "-", "1", "if", "counter", "[", "0", "]", "[", "0", "]", "!=", "0", "else", "counter", "[", "1", "]", "[", "0", "]", "-", "1", "\n", "annotations", "[", "frame_id", "]", "=", "{", "\n", "'frame_id'", ":", "frame_id", ",", "\n", "'group_activity'", ":", "group_activity", ",", "\n", "'actions'", ":", "actions", ",", "\n", "'bboxes'", ":", "bboxes", "\n", "}", "\n", "\n", "", "", "return", "annotations", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.collective_read_dataset": [[91, 96], ["collective.collective_read_annotations"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.collective_read_annotations"], ["", "def", "collective_read_dataset", "(", "path", ",", "seqs", ")", ":", "\n", "    ", "data", "=", "{", "}", "\n", "for", "sid", "in", "seqs", ":", "\n", "        ", "data", "[", "sid", "]", "=", "collective_read_annotations", "(", "path", ",", "sid", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.collective_all_frames": [[97, 99], ["None"], "function", ["None"], ["", "def", "collective_all_frames", "(", "anns", ")", ":", "\n", "    ", "return", "[", "(", "s", ",", "f", ")", "for", "s", "in", "anns", "for", "f", "in", "anns", "[", "s", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.dataset.return_dataset": [[6, 32], ["print", "print", "print", "collective.collective_read_dataset", "collective.collective_all_frames", "collective.collective_read_dataset", "collective.collective_all_frames", "collective.CollectiveDataset", "collective.CollectiveDataset", "len", "len"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.collective_read_dataset", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.collective_all_frames", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.collective_read_dataset", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.collective.collective_all_frames"], ["def", "return_dataset", "(", "cfg", ")", ":", "\n", "\n", "    ", "if", "cfg", ".", "dataset_name", "==", "'collective'", ":", "\n", "        ", "train_anns", "=", "collective_read_dataset", "(", "cfg", ".", "data_path", ",", "cfg", ".", "train_seqs", ")", "\n", "train_frames", "=", "collective_all_frames", "(", "train_anns", ")", "\n", "\n", "test_anns", "=", "collective_read_dataset", "(", "cfg", ".", "data_path", ",", "cfg", ".", "test_seqs", ")", "\n", "test_frames", "=", "collective_all_frames", "(", "test_anns", ")", "\n", "\n", "training_set", "=", "CollectiveDataset", "(", "train_anns", ",", "train_frames", ",", "\n", "cfg", ".", "data_path", ",", "cfg", ".", "image_size", ",", "cfg", ".", "out_size", ",", "\n", "num_frames", "=", "cfg", ".", "num_frames", ",", "is_training", "=", "True", ",", "is_finetune", "=", "(", "cfg", ".", "training_stage", "==", "1", ")", ")", "\n", "\n", "validation_set", "=", "CollectiveDataset", "(", "test_anns", ",", "test_frames", ",", "\n", "cfg", ".", "data_path", ",", "cfg", ".", "image_size", ",", "cfg", ".", "out_size", ",", "\n", "num_frames", "=", "cfg", ".", "num_frames", ",", "is_training", "=", "False", ",", "is_finetune", "=", "(", "cfg", ".", "training_stage", "==", "1", ")", ")", "\n", "\n", "", "else", ":", "\n", "        ", "assert", "False", "\n", "\n", "\n", "", "print", "(", "'Reading dataset finished...'", ")", "\n", "print", "(", "'%d train samples'", "%", "len", "(", "train_frames", ")", ")", "\n", "print", "(", "'%d test samples'", "%", "len", "(", "test_frames", ")", ")", "\n", "\n", "return", "training_set", ",", "validation_set", "\n", "", ""]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.gcn_model.GCN_Module.__init__": [[6, 26], ["nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "nn.Linear", "nn.Linear", "nn.Linear", "range", "range", "range", "nn.LayerNorm", "nn.LayerNorm", "range", "range"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "GCN_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "NFR", "=", "cfg", ".", "num_features_relation", "\n", "NG", "=", "cfg", ".", "num_graph", "\n", "N", "=", "cfg", ".", "num_boxes", "\n", "T", "=", "cfg", ".", "num_frames", "\n", "\n", "NFG", "=", "cfg", ".", "num_features_gcn", "\n", "NFG_ONE", "=", "NFG", "\n", "\n", "self", ".", "fc_rn_theta_list", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "NFG", ",", "NFR", ")", "for", "i", "in", "range", "(", "NG", ")", "]", ")", "\n", "self", ".", "fc_rn_phi_list", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "NFG", ",", "NFR", ")", "for", "i", "in", "range", "(", "NG", ")", "]", ")", "\n", "\n", "self", ".", "fc_gcn_list", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "NFG", ",", "NFG_ONE", ",", "bias", "=", "False", ")", "for", "i", "in", "range", "(", "NG", ")", "]", ")", "\n", "\n", "if", "cfg", ".", "dataset_name", "==", "'volleyball'", ":", "\n", "            ", "self", ".", "nl_gcn_list", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "nn", ".", "LayerNorm", "(", "[", "T", "*", "N", ",", "NFG_ONE", "]", ")", "for", "i", "in", "range", "(", "NG", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "nl_gcn_list", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "nn", ".", "LayerNorm", "(", "[", "NFG_ONE", "]", ")", "for", "i", "in", "range", "(", "NG", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.gcn_model.GCN_Module.forward": [[28, 92], ["graph_boxes_positions[].reshape", "utils.calc_pairwise_distance_3d", "range", "torch.sum", "sad_relation_graph.reshape.to.reshape", "torch.softmax", "F.relu", "graph_boxes_features_list.append", "torch.stack", "utils.calc_ncc", "ncc_relation_graph.reshape.reshape.reshape", "ncc_relation_graph.reshape.reshape.to", "float", "torch.matmul", "utils.calc_sad", "sad_relation_graph.reshape.reshape.reshape", "sad_relation_graph.reshape.reshape.to", "torch.matmul", "similarity_relation_graph.reshape.reshape.reshape", "graph_boxes_features_phi.transpose", "np.sqrt"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.calc_pairwise_distance_3d", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.calc_ncc", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.calc_sad"], ["", "", "def", "forward", "(", "self", ",", "graph_boxes_features", ",", "boxes_in_flat", ")", ":", "\n", "        ", "\"\"\"\n        graph_boxes_features  [B*T,N,NFG]\n        \"\"\"", "\n", "\n", "# GCN graph modeling", "\n", "# Prepare boxes similarity relation", "\n", "B", ",", "N", ",", "NFG", "=", "graph_boxes_features", ".", "shape", "\n", "NFR", "=", "self", ".", "cfg", ".", "num_features_relation", "\n", "NG", "=", "self", ".", "cfg", ".", "num_graph", "\n", "NFG_ONE", "=", "NFG", "\n", "\n", "OH", ",", "OW", "=", "self", ".", "cfg", ".", "out_size", "\n", "pos_threshold", "=", "self", ".", "cfg", ".", "pos_threshold", "\n", "\n", "# Prepare position mask", "\n", "graph_boxes_positions", "=", "boxes_in_flat", "#B*T*N, 4", "\n", "graph_boxes_positions", "[", ":", ",", "0", "]", "=", "(", "graph_boxes_positions", "[", ":", ",", "0", "]", "+", "graph_boxes_positions", "[", ":", ",", "2", "]", ")", "/", "2", "\n", "graph_boxes_positions", "[", ":", ",", "1", "]", "=", "(", "graph_boxes_positions", "[", ":", ",", "1", "]", "+", "graph_boxes_positions", "[", ":", ",", "3", "]", ")", "/", "2", "\n", "graph_boxes_positions", "=", "graph_boxes_positions", "[", ":", ",", ":", "2", "]", ".", "reshape", "(", "B", ",", "N", ",", "2", ")", "#B*T, N, 2", "\n", "\n", "graph_boxes_distances", "=", "calc_pairwise_distance_3d", "(", "graph_boxes_positions", ",", "graph_boxes_positions", ")", "#B, N, N", "\n", "position_mask", "=", "(", "graph_boxes_distances", ">", "(", "pos_threshold", "*", "OW", ")", ")", "\n", "\n", "relation_graph", "=", "None", "\n", "graph_boxes_features_list", "=", "[", "]", "\n", "\n", "# START: Original code by Zijian and Xinran", "\n", "for", "i", "in", "range", "(", "NG", ")", ":", "\n", "            ", "if", "self", ".", "cfg", ".", "appearance_calc", "==", "'NCC'", ":", "\n", "# use NCC value to represent similarity relation graph", "\n", "                ", "ncc_relation_graph", "=", "calc_ncc", "(", "graph_boxes_features", ",", "graph_boxes_features", ",", "B", "*", "N", ")", "\n", "ncc_relation_graph", "=", "ncc_relation_graph", ".", "reshape", "(", "-", "1", ",", "1", ")", "#B*N*N, 1", "\n", "relation_graph", "=", "ncc_relation_graph", ".", "to", "(", "device", "=", "graph_boxes_features", ".", "device", ")", "\n", "\n", "", "elif", "self", ".", "cfg", ".", "appearance_calc", "==", "'SAD'", ":", "\n", "# use SAD value to represent similarity relation graph", "\n", "                ", "sad_relation_graph", "=", "calc_sad", "(", "graph_boxes_features", ",", "graph_boxes_features", ")", "\n", "sad_relation_graph", "=", "sad_relation_graph", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "relation_graph", "=", "sad_relation_graph", ".", "to", "(", "device", "=", "graph_boxes_features", ".", "device", ")", "\n", "\n", "", "elif", "self", ".", "cfg", ".", "appearance_calc", "==", "'DotProduct'", ":", "\n", "# use Dot product to represent similarity relation graph", "\n", "                ", "graph_boxes_features_theta", "=", "self", ".", "fc_rn_theta_list", "[", "i", "]", "(", "graph_boxes_features", ")", "# B,N,NFR", "\n", "graph_boxes_features_phi", "=", "self", ".", "fc_rn_phi_list", "[", "i", "]", "(", "graph_boxes_features", ")", "# B,N,NFR", "\n", "similarity_relation_graph", "=", "torch", ".", "matmul", "(", "graph_boxes_features_theta", ",", "graph_boxes_features_phi", ".", "transpose", "(", "1", ",", "2", ")", ")", "#B,N,N", "\n", "similarity_relation_graph", "=", "similarity_relation_graph", "/", "np", ".", "sqrt", "(", "NFR", ")", "\n", "similarity_relation_graph", "=", "similarity_relation_graph", ".", "reshape", "(", "-", "1", ",", "1", ")", "#B*N*N, 1", "\n", "relation_graph", "=", "similarity_relation_graph", "\n", "# END: Original code by Zijian and Xinran", "\n", "\n", "", "relation_graph", "=", "relation_graph", ".", "reshape", "(", "B", ",", "N", ",", "N", ")", "\n", "relation_graph", "[", "position_mask", "]", "=", "-", "float", "(", "'inf'", ")", "\n", "relation_graph", "=", "torch", ".", "softmax", "(", "relation_graph", ",", "dim", "=", "2", ")", "\n", "\n", "# Graph convolution", "\n", "one_graph_boxes_features", "=", "self", ".", "fc_gcn_list", "[", "i", "]", "(", "torch", ".", "matmul", "(", "relation_graph", ",", "graph_boxes_features", ")", ")", "#B, N, NFG_ONE", "\n", "one_graph_boxes_features", "=", "self", ".", "nl_gcn_list", "[", "i", "]", "(", "one_graph_boxes_features", ")", "\n", "one_graph_boxes_features", "=", "F", ".", "relu", "(", "one_graph_boxes_features", ")", "\n", "graph_boxes_features_list", ".", "append", "(", "one_graph_boxes_features", ")", "\n", "\n", "", "graph_boxes_features", "=", "torch", ".", "sum", "(", "torch", ".", "stack", "(", "graph_boxes_features_list", ")", ",", "dim", "=", "0", ")", "#B, N, NFG", "\n", "\n", "return", "graph_boxes_features", ",", "relation_graph", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.gcn_model.GCNnet_volleyball.__init__": [[97, 141], ["nn.Module.__init__", "roi_align.roi_align.RoIAlign", "nn.Linear", "nn.LayerNorm", "torch.nn.ModuleList", "nn.Dropout", "nn.Linear", "nn.Linear", "gcn_model.GCNnet_volleyball.modules", "backbone.MyInception_v3", "gcn_model.GCNnet_volleyball.backbone.parameters", "isinstance", "backbone.MyVGG16", "gcn_model.GCN_Module", "nn.init.kaiming_normal_", "backbone.MyVGG19", "range", "nn.init.zeros_"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__"], ["def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "GCNnet_volleyball", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "\n", "T", ",", "N", "=", "self", ".", "cfg", ".", "num_frames", ",", "self", ".", "cfg", ".", "num_boxes", "\n", "D", "=", "self", ".", "cfg", ".", "emb_features", "\n", "K", "=", "self", ".", "cfg", ".", "crop_size", "[", "0", "]", "\n", "NFB", "=", "self", ".", "cfg", ".", "num_features_boxes", "\n", "NFR", ",", "NFG", "=", "self", ".", "cfg", ".", "num_features_relation", ",", "self", ".", "cfg", ".", "num_features_gcn", "\n", "NG", "=", "self", ".", "cfg", ".", "num_graph", "\n", "\n", "\n", "if", "cfg", ".", "backbone", "==", "'inv3'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyInception_v3", "(", "transform_input", "=", "False", ",", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'vgg16'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyVGG16", "(", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'vgg19'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyVGG19", "(", "pretrained", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "\n", "", "if", "not", "cfg", ".", "train_backbone", ":", "\n", "            ", "for", "p", "in", "self", ".", "backbone", ".", "parameters", "(", ")", ":", "\n", "                ", "p", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "self", ".", "roi_align", "=", "RoIAlign", "(", "*", "self", ".", "cfg", ".", "crop_size", ")", "\n", "\n", "self", ".", "fc_emb_1", "=", "nn", ".", "Linear", "(", "K", "*", "K", "*", "D", ",", "NFB", ")", "\n", "self", ".", "nl_emb_1", "=", "nn", ".", "LayerNorm", "(", "[", "NFB", "]", ")", "\n", "\n", "\n", "self", ".", "gcn_list", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "GCN_Module", "(", "self", ".", "cfg", ")", "for", "i", "in", "range", "(", "self", ".", "cfg", ".", "gcn_layers", ")", "]", ")", "\n", "\n", "\n", "self", ".", "dropout_global", "=", "nn", ".", "Dropout", "(", "p", "=", "self", ".", "cfg", ".", "train_dropout_prob", ")", "\n", "\n", "self", ".", "fc_actions", "=", "nn", ".", "Linear", "(", "NFG", ",", "self", ".", "cfg", ".", "num_actions", ")", "\n", "self", ".", "fc_activities", "=", "nn", ".", "Linear", "(", "NFG", ",", "self", ".", "cfg", ".", "num_activities", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.gcn_model.GCNnet_volleyball.loadmodel": [[143, 148], ["torch.load", "gcn_model.GCNnet_volleyball.backbone.load_state_dict", "gcn_model.GCNnet_volleyball.fc_emb_1.load_state_dict", "print"], "methods", ["None"], ["", "", "", "", "def", "loadmodel", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "state", "=", "torch", ".", "load", "(", "filepath", ")", "\n", "self", ".", "backbone", ".", "load_state_dict", "(", "state", "[", "'backbone_state_dict'", "]", ")", "\n", "self", ".", "fc_emb_1", ".", "load_state_dict", "(", "state", "[", "'fc_emb_state_dict'", "]", ")", "\n", "print", "(", "'Load model states from: '", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.gcn_model.GCNnet_volleyball.forward": [[150, 257], ["torch.reshape", "torch.reshape", "torch.stack().to", "torch.reshape", "utils.prep_images", "gcn_model.GCNnet_volleyball.backbone", "torch.cat", "gcn_model.GCNnet_volleyball.roi_align", "boxes_features.reshape.reshape.reshape", "gcn_model.GCNnet_volleyball.fc_emb_1", "gcn_model.GCNnet_volleyball.nl_emb_1", "F.relu", "boxes_features.reshape.reshape.reshape", "range", "graph_boxes_features.reshape.reshape.reshape", "boxes_features.reshape.reshape.reshape", "gcn_model.GCNnet_volleyball.dropout_global", "gcn_model.GCNnet_volleyball.reshape", "gcn_model.GCNnet_volleyball.fc_actions", "torch.max", "boxes_states_pooled.reshape", "gcn_model.GCNnet_volleyball.fc_activities", "torch.mean().reshape.reshape", "torch.mean().reshape", "torch.mean().reshape.reshape", "torch.mean().reshape", "images_in.reshape", "boxes_in.reshape", "torch.Size", "torch.cat.append", "len", "torch.mean().reshape", "torch.mean().reshape", "torch.ones", "range", "torch.stack", "torch.Size", "F.interpolate", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean().reshape.reshape", "torch.mean().reshape.reshape"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.prep_images"], ["", "def", "forward", "(", "self", ",", "batch_data", ")", ":", "\n", "        ", "images_in", ",", "boxes_in", "=", "batch_data", "\n", "\n", "# read config parameters", "\n", "B", "=", "images_in", ".", "shape", "[", "0", "]", "\n", "T", "=", "images_in", ".", "shape", "[", "1", "]", "\n", "H", ",", "W", "=", "self", ".", "cfg", ".", "image_size", "\n", "OH", ",", "OW", "=", "self", ".", "cfg", ".", "out_size", "\n", "N", "=", "self", ".", "cfg", ".", "num_boxes", "\n", "NFB", "=", "self", ".", "cfg", ".", "num_features_boxes", "\n", "NFR", ",", "NFG", "=", "self", ".", "cfg", ".", "num_features_relation", ",", "self", ".", "cfg", ".", "num_features_gcn", "\n", "NG", "=", "self", ".", "cfg", ".", "num_graph", "\n", "\n", "D", "=", "self", ".", "cfg", ".", "emb_features", "\n", "K", "=", "self", ".", "cfg", ".", "crop_size", "[", "0", "]", "\n", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "B", "=", "B", "*", "3", "\n", "T", "=", "T", "//", "3", "\n", "images_in", ".", "reshape", "(", "(", "B", ",", "T", ")", "+", "images_in", ".", "shape", "[", "2", ":", "]", ")", "\n", "boxes_in", ".", "reshape", "(", "(", "B", ",", "T", ")", "+", "boxes_in", ".", "shape", "[", "2", ":", "]", ")", "\n", "\n", "\n", "# Reshape the input data", "\n", "", "images_in_flat", "=", "torch", ".", "reshape", "(", "images_in", ",", "(", "B", "*", "T", ",", "3", ",", "H", ",", "W", ")", ")", "#B*T, 3, H, W", "\n", "boxes_in_flat", "=", "torch", ".", "reshape", "(", "boxes_in", ",", "(", "B", "*", "T", "*", "N", ",", "4", ")", ")", "#B*T*N, 4", "\n", "\n", "boxes_idx", "=", "[", "i", "*", "torch", ".", "ones", "(", "N", ",", "dtype", "=", "torch", ".", "int", ")", "for", "i", "in", "range", "(", "B", "*", "T", ")", "]", "\n", "boxes_idx", "=", "torch", ".", "stack", "(", "boxes_idx", ")", ".", "to", "(", "device", "=", "boxes_in", ".", "device", ")", "# B*T, N", "\n", "boxes_idx_flat", "=", "torch", ".", "reshape", "(", "boxes_idx", ",", "(", "B", "*", "T", "*", "N", ",", ")", ")", "#B*T*N,", "\n", "\n", "# Use backbone to extract features of images_in", "\n", "# Pre-precess first", "\n", "images_in_flat", "=", "prep_images", "(", "images_in_flat", ")", "\n", "outputs", "=", "self", ".", "backbone", "(", "images_in_flat", ")", "\n", "\n", "\n", "# Build  features", "\n", "assert", "outputs", "[", "0", "]", ".", "shape", "[", "2", ":", "4", "]", "==", "torch", ".", "Size", "(", "[", "OH", ",", "OW", "]", ")", "\n", "features_multiscale", "=", "[", "]", "\n", "for", "features", "in", "outputs", ":", "\n", "            ", "if", "features", ".", "shape", "[", "2", ":", "4", "]", "!=", "torch", ".", "Size", "(", "[", "OH", ",", "OW", "]", ")", ":", "\n", "                ", "features", "=", "F", ".", "interpolate", "(", "features", ",", "size", "=", "(", "OH", ",", "OW", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "features_multiscale", ".", "append", "(", "features", ")", "\n", "\n", "", "features_multiscale", "=", "torch", ".", "cat", "(", "features_multiscale", ",", "dim", "=", "1", ")", "#B*T, D, OH, OW", "\n", "\n", "\n", "# RoI Align", "\n", "boxes_in_flat", ".", "requires_grad", "=", "False", "\n", "boxes_idx_flat", ".", "requires_grad", "=", "False", "\n", "boxes_features", "=", "self", ".", "roi_align", "(", "features_multiscale", ",", "\n", "boxes_in_flat", ",", "\n", "boxes_idx_flat", ")", "#B*T*N, D, K, K,", "\n", "\n", "boxes_features", "=", "boxes_features", ".", "reshape", "(", "B", ",", "T", ",", "N", ",", "-", "1", ")", "#B,T,N, D*K*K", "\n", "\n", "# Embedding ", "\n", "boxes_features", "=", "self", ".", "fc_emb_1", "(", "boxes_features", ")", "# B,T,N, NFB", "\n", "boxes_features", "=", "self", ".", "nl_emb_1", "(", "boxes_features", ")", "\n", "boxes_features", "=", "F", ".", "relu", "(", "boxes_features", ")", "\n", "\n", "# GCN       ", "\n", "graph_boxes_features", "=", "boxes_features", ".", "reshape", "(", "B", ",", "T", "*", "N", ",", "NFG", ")", "\n", "\n", "#         visual_info=[]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "gcn_list", ")", ")", ":", "\n", "            ", "graph_boxes_features", ",", "relation_graph", "=", "self", ".", "gcn_list", "[", "i", "]", "(", "graph_boxes_features", ",", "boxes_in_flat", ")", "\n", "#             visual_info.append(relation_graph.reshape(B,T,N,N))", "\n", "\n", "\n", "\n", "# fuse graph_boxes_features with boxes_features", "\n", "", "graph_boxes_features", "=", "graph_boxes_features", ".", "reshape", "(", "B", ",", "T", ",", "N", ",", "NFG", ")", "\n", "boxes_features", "=", "boxes_features", ".", "reshape", "(", "B", ",", "T", ",", "N", ",", "NFB", ")", "\n", "\n", "#         boxes_states= torch.cat( [graph_boxes_features,boxes_features],dim=3)  #B, T, N, NFG+NFB", "\n", "boxes_states", "=", "graph_boxes_features", "+", "boxes_features", "\n", "\n", "boxes_states", "=", "self", ".", "dropout_global", "(", "boxes_states", ")", "\n", "\n", "NFS", "=", "NFG", "\n", "\n", "# Predict actions", "\n", "boxes_states_flat", "=", "boxes_states", ".", "reshape", "(", "-", "1", ",", "NFS", ")", "#B*T*N, NFS", "\n", "actions_scores", "=", "self", ".", "fc_actions", "(", "boxes_states_flat", ")", "#B*T*N, actn_num", "\n", "\n", "# Predict activities", "\n", "boxes_states_pooled", ",", "_", "=", "torch", ".", "max", "(", "boxes_states", ",", "dim", "=", "2", ")", "\n", "boxes_states_pooled_flat", "=", "boxes_states_pooled", ".", "reshape", "(", "-", "1", ",", "NFS", ")", "\n", "\n", "activities_scores", "=", "self", ".", "fc_activities", "(", "boxes_states_pooled_flat", ")", "#B*T, acty_num", "\n", "\n", "# Temporal fusion", "\n", "actions_scores", "=", "actions_scores", ".", "reshape", "(", "B", ",", "T", ",", "N", ",", "-", "1", ")", "\n", "actions_scores", "=", "torch", ".", "mean", "(", "actions_scores", ",", "dim", "=", "1", ")", ".", "reshape", "(", "B", "*", "N", ",", "-", "1", ")", "\n", "activities_scores", "=", "activities_scores", ".", "reshape", "(", "B", ",", "T", ",", "-", "1", ")", "\n", "activities_scores", "=", "torch", ".", "mean", "(", "activities_scores", ",", "dim", "=", "1", ")", ".", "reshape", "(", "B", ",", "-", "1", ")", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "B", "=", "B", "//", "3", "\n", "actions_scores", "=", "torch", ".", "mean", "(", "actions_scores", ".", "reshape", "(", "B", ",", "3", ",", "N", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ".", "reshape", "(", "B", "*", "N", ",", "-", "1", ")", "\n", "activities_scores", "=", "torch", ".", "mean", "(", "activities_scores", ".", "reshape", "(", "B", ",", "3", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ".", "reshape", "(", "B", ",", "-", "1", ")", "\n", "\n", "\n", "", "return", "actions_scores", ",", "activities_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.gcn_model.GCNnet_collective.__init__": [[262, 307], ["nn.Module.__init__", "roi_align.roi_align.RoIAlign", "nn.LayerNorm", "torch.nn.ModuleList", "nn.Dropout", "nn.Linear", "nn.Linear", "gcn_model.GCNnet_collective.modules", "backbone.MyInception_v3", "gcn_model.GCNnet_collective.backbone.parameters", "nn.Linear", "isinstance", "backbone.MyVGG16", "nn.Linear", "gcn_model.GCN_Module", "nn.init.kaiming_normal_", "backbone.MyVGG19", "range", "nn.init.zeros_", "backbone.MyMobileNet"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__"], ["def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "GCNnet_collective", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "\n", "D", "=", "self", ".", "cfg", ".", "emb_features", "\n", "K", "=", "self", ".", "cfg", ".", "crop_size", "[", "0", "]", "\n", "NFB", "=", "self", ".", "cfg", ".", "num_features_boxes", "\n", "NFR", ",", "NFG", "=", "self", ".", "cfg", ".", "num_features_relation", ",", "self", ".", "cfg", ".", "num_features_gcn", "\n", "\n", "# START: Original code by Zijian and Xinran", "\n", "if", "cfg", ".", "backbone", "==", "'inv3'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyInception_v3", "(", "transform_input", "=", "False", ",", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'vgg16'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyVGG16", "(", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'vgg19'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyVGG19", "(", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'mobilenet'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyMobileNet", "(", "pretrained", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "\n", "", "if", "not", "self", ".", "cfg", ".", "train_backbone", ":", "\n", "            ", "for", "p", "in", "self", ".", "backbone", ".", "parameters", "(", ")", ":", "\n", "                ", "p", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "self", ".", "roi_align", "=", "RoIAlign", "(", "*", "self", ".", "cfg", ".", "crop_size", ")", "\n", "if", "cfg", ".", "backbone", "==", "'inv3'", ":", "\n", "            ", "self", ".", "fc_emb_1", "=", "nn", ".", "Linear", "(", "K", "*", "K", "*", "D", ",", "NFB", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'mobilenet'", ":", "\n", "            ", "self", ".", "fc_emb_1", "=", "nn", ".", "Linear", "(", "32000", ",", "NFB", ")", "\n", "# END: Original code by Zijian and Xinran", "\n", "\n", "", "self", ".", "nl_emb_1", "=", "nn", ".", "LayerNorm", "(", "[", "NFB", "]", ")", "\n", "self", ".", "gcn_list", "=", "torch", ".", "nn", ".", "ModuleList", "(", "[", "GCN_Module", "(", "self", ".", "cfg", ")", "for", "i", "in", "range", "(", "self", ".", "cfg", ".", "gcn_layers", ")", "]", ")", "\n", "\n", "self", ".", "dropout_global", "=", "nn", ".", "Dropout", "(", "p", "=", "self", ".", "cfg", ".", "train_dropout_prob", ")", "\n", "\n", "self", ".", "fc_actions", "=", "nn", ".", "Linear", "(", "NFG", ",", "self", ".", "cfg", ".", "num_actions", ")", "\n", "self", ".", "fc_activities", "=", "nn", ".", "Linear", "(", "NFG", ",", "self", ".", "cfg", ".", "num_activities", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.gcn_model.GCNnet_collective.loadmodel": [[311, 316], ["torch.load", "gcn_model.GCNnet_collective.backbone.load_state_dict", "gcn_model.GCNnet_collective.fc_emb_1.load_state_dict", "print"], "methods", ["None"], ["", "", "", "", "def", "loadmodel", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "state", "=", "torch", ".", "load", "(", "filepath", ",", "map_location", "=", "'cpu'", ")", "\n", "self", ".", "backbone", ".", "load_state_dict", "(", "state", "[", "'backbone_state_dict'", "]", ")", "\n", "self", ".", "fc_emb_1", ".", "load_state_dict", "(", "state", "[", "'fc_emb_state_dict'", "]", ")", "\n", "print", "(", "'Load model states from: '", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.gcn_model.GCNnet_collective.forward": [[318, 445], ["torch.reshape", "boxes_in.reshape.reshape.reshape", "utils.prep_images", "gcn_model.GCNnet_collective.backbone", "torch.cat", "torch.reshape", "torch.stack().to", "torch.reshape", "gcn_model.GCNnet_collective.roi_align", "boxes_features_all.reshape.reshape.reshape", "gcn_model.GCNnet_collective.fc_emb_1", "gcn_model.GCNnet_collective.nl_emb_1", "F.relu", "boxes_features_all.reshape.reshape.reshape", "boxes_in.reshape.reshape.reshape", "bboxes_num_in.reshape.reshape.reshape", "range", "torch.cat", "torch.cat", "images_in.reshape", "boxes_in.reshape.reshape.reshape", "bboxes_num_in.reshape.reshape.reshape", "torch.cat.append", "boxes_features_all[].reshape", "boxes_in[].reshape", "range", "boxes_features.reshape.reshape.reshape", "gcn_model.GCNnet_collective.dropout_global", "boxes_states.reshape.reshape.reshape", "gcn_model.GCNnet_collective.fc_actions", "torch.max", "gcn_model.GCNnet_collective.fc_activities", "torch.mean().reshape", "torch.mean().reshape", "torch.mean.append", "torch.mean().reshape.append", "torch.mean", "torch.mean().reshape", "torch.Size", "F.interpolate", "torch.ones", "range", "torch.stack", "len", "torch.mean.reshape", "torch.mean", "torch.mean", "torch.mean", "torch.mean().reshape.reshape"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.prep_images"], ["", "def", "forward", "(", "self", ",", "batch_data", ")", ":", "\n", "# images_in:batch*3_random_sample*3_channel*480*720", "\n", "# boxes_in: w1, h1, w2, h2", "\n", "        ", "images_in", ",", "boxes_in", ",", "bboxes_num_in", "=", "batch_data", "\n", "\n", "# read config parameters", "\n", "B", "=", "images_in", ".", "shape", "[", "0", "]", "\n", "T", "=", "images_in", ".", "shape", "[", "1", "]", "\n", "H", ",", "W", "=", "self", ".", "cfg", ".", "image_size", "\n", "OH", ",", "OW", "=", "self", ".", "cfg", ".", "out_size", "\n", "MAX_N", "=", "self", ".", "cfg", ".", "num_boxes", "\n", "NFB", "=", "self", ".", "cfg", ".", "num_features_boxes", "\n", "NFR", ",", "NFG", "=", "self", ".", "cfg", ".", "num_features_relation", ",", "self", ".", "cfg", ".", "num_features_gcn", "\n", "\n", "D", "=", "self", ".", "cfg", ".", "emb_features", "\n", "K", "=", "self", ".", "cfg", ".", "crop_size", "[", "0", "]", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "B", "=", "B", "*", "3", "\n", "T", "=", "T", "//", "3", "\n", "images_in", ".", "reshape", "(", "(", "B", ",", "T", ")", "+", "images_in", ".", "shape", "[", "2", ":", "]", ")", "\n", "boxes_in", ".", "reshape", "(", "(", "B", ",", "T", ")", "+", "boxes_in", ".", "shape", "[", "2", ":", "]", ")", "\n", "bboxes_num_in", ".", "reshape", "(", "(", "B", ",", "T", ")", ")", "\n", "\n", "# Reshape the input data", "\n", "", "images_in_flat", "=", "torch", ".", "reshape", "(", "images_in", ",", "(", "B", "*", "T", ",", "3", ",", "H", ",", "W", ")", ")", "#B*T, 3, H, W", "\n", "boxes_in", "=", "boxes_in", ".", "reshape", "(", "B", "*", "T", ",", "MAX_N", ",", "4", ")", "\n", "\n", "# Use backbone to extract features of images_in", "\n", "# Pre-precess first", "\n", "images_in_flat", "=", "prep_images", "(", "images_in_flat", ")", "\n", "outputs", "=", "self", ".", "backbone", "(", "images_in_flat", ")", "\n", "\n", "\n", "# Build multiscale features", "\n", "features_multiscale", "=", "[", "]", "\n", "for", "features", "in", "outputs", ":", "\n", "            ", "if", "features", ".", "shape", "[", "2", ":", "4", "]", "!=", "torch", ".", "Size", "(", "[", "OH", ",", "OW", "]", ")", ":", "\n", "                ", "features", "=", "F", ".", "interpolate", "(", "features", ",", "size", "=", "(", "OH", ",", "OW", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "features_multiscale", ".", "append", "(", "features", ")", "\n", "\n", "", "features_multiscale", "=", "torch", ".", "cat", "(", "features_multiscale", ",", "dim", "=", "1", ")", "#B*T, D, OH, OW", "\n", "\n", "\n", "boxes_in_flat", "=", "torch", ".", "reshape", "(", "boxes_in", ",", "(", "B", "*", "T", "*", "MAX_N", ",", "4", ")", ")", "#B*T*MAX_N, 4", "\n", "\n", "boxes_idx", "=", "[", "i", "*", "torch", ".", "ones", "(", "MAX_N", ",", "dtype", "=", "torch", ".", "int", ")", "for", "i", "in", "range", "(", "B", "*", "T", ")", "]", "\n", "boxes_idx", "=", "torch", ".", "stack", "(", "boxes_idx", ")", ".", "to", "(", "device", "=", "boxes_in", ".", "device", ")", "# B*T, MAX_N", "\n", "boxes_idx_flat", "=", "torch", ".", "reshape", "(", "boxes_idx", ",", "(", "B", "*", "T", "*", "MAX_N", ",", ")", ")", "#B*T*MAX_N,", "\n", "\n", "# RoI Align", "\n", "boxes_in_flat", ".", "requires_grad", "=", "False", "\n", "boxes_idx_flat", ".", "requires_grad", "=", "False", "\n", "boxes_features_all", "=", "self", ".", "roi_align", "(", "features_multiscale", ",", "\n", "boxes_in_flat", ",", "\n", "boxes_idx_flat", ")", "#B*T*MAX_N, D, K, K,", "\n", "\n", "boxes_features_all", "=", "boxes_features_all", ".", "reshape", "(", "B", "*", "T", ",", "MAX_N", ",", "-", "1", ")", "#B*T,MAX_N, D*K*K", "\n", "\n", "# Embedding ", "\n", "boxes_features_all", "=", "self", ".", "fc_emb_1", "(", "boxes_features_all", ")", "# B*T,MAX_N, NFB", "\n", "boxes_features_all", "=", "self", ".", "nl_emb_1", "(", "boxes_features_all", ")", "\n", "boxes_features_all", "=", "F", ".", "relu", "(", "boxes_features_all", ")", "\n", "\n", "\n", "boxes_features_all", "=", "boxes_features_all", ".", "reshape", "(", "B", ",", "T", ",", "MAX_N", ",", "NFB", ")", "\n", "boxes_in", "=", "boxes_in", ".", "reshape", "(", "B", ",", "T", ",", "MAX_N", ",", "4", ")", "\n", "\n", "\n", "actions_scores", "=", "[", "]", "\n", "activities_scores", "=", "[", "]", "\n", "bboxes_num_in", "=", "bboxes_num_in", ".", "reshape", "(", "B", ",", "T", ")", "#B,T,", "\n", "\n", "for", "b", "in", "range", "(", "B", ")", ":", "\n", "\n", "            ", "N", "=", "bboxes_num_in", "[", "b", "]", "[", "0", "]", "\n", "\n", "boxes_features", "=", "boxes_features_all", "[", "b", ",", ":", ",", ":", "N", ",", ":", "]", ".", "reshape", "(", "1", ",", "T", "*", "N", ",", "NFB", ")", "#1,T,N,NFB", "\n", "\n", "boxes_positions", "=", "boxes_in", "[", "b", ",", ":", ",", ":", "N", ",", ":", "]", ".", "reshape", "(", "T", "*", "N", ",", "4", ")", "#T*N, 4", "\n", "\n", "# GCN graph modeling", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "gcn_list", ")", ")", ":", "\n", "                ", "graph_boxes_features", ",", "relation_graph", "=", "self", ".", "gcn_list", "[", "i", "]", "(", "boxes_features", ",", "boxes_positions", ")", "\n", "\n", "\n", "# cat graph_boxes_features with boxes_features", "\n", "", "boxes_features", "=", "boxes_features", ".", "reshape", "(", "1", ",", "T", "*", "N", ",", "NFB", ")", "\n", "boxes_states", "=", "graph_boxes_features", "+", "boxes_features", "#1, T*N, NFG", "\n", "boxes_states", "=", "self", ".", "dropout_global", "(", "boxes_states", ")", "\n", "\n", "NFS", "=", "NFG", "\n", "boxes_states", "=", "boxes_states", ".", "reshape", "(", "T", ",", "N", ",", "NFS", ")", "\n", "\n", "# Predict actions", "\n", "actn_score", "=", "self", ".", "fc_actions", "(", "boxes_states", ")", "#T,N, actn_num", "\n", "\n", "\n", "# Predict activities", "\n", "boxes_states_pooled", ",", "_", "=", "torch", ".", "max", "(", "boxes_states", ",", "dim", "=", "1", ")", "#T, NFS", "\n", "acty_score", "=", "self", ".", "fc_activities", "(", "boxes_states_pooled", ")", "#T, acty_num", "\n", "\n", "\n", "# GSN fusion", "\n", "actn_score", "=", "torch", ".", "mean", "(", "actn_score", ",", "dim", "=", "0", ")", ".", "reshape", "(", "N", ",", "-", "1", ")", "#N, actn_num", "\n", "acty_score", "=", "torch", ".", "mean", "(", "acty_score", ",", "dim", "=", "0", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", "#1, acty_num", "\n", "\n", "\n", "actions_scores", ".", "append", "(", "actn_score", ")", "\n", "activities_scores", ".", "append", "(", "acty_score", ")", "\n", "\n", "\n", "\n", "", "actions_scores", "=", "torch", ".", "cat", "(", "actions_scores", ",", "dim", "=", "0", ")", "#ALL_N,actn_num", "\n", "activities_scores", "=", "torch", ".", "cat", "(", "activities_scores", ",", "dim", "=", "0", ")", "#B,acty_num", "\n", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "B", "=", "B", "//", "3", "\n", "actions_scores", "=", "torch", ".", "mean", "(", "actions_scores", ".", "reshape", "(", "-", "1", ",", "3", ",", "actions_scores", ".", "shape", "[", "1", "]", ")", ",", "dim", "=", "1", ")", "\n", "activities_scores", "=", "torch", ".", "mean", "(", "activities_scores", ".", "reshape", "(", "B", ",", "3", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ".", "reshape", "(", "B", ",", "-", "1", ")", "\n", "\n", "\n", "#         print(actions_scores.shape)", "\n", "#         print(activities_scores.shape)", "\n", "\n", "", "return", "actions_scores", ",", "activities_scores", "", "", "", ""]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_volleyball.__init__": [[9, 41], ["nn.Module.__init__", "roi_align.roi_align.RoIAlign", "nn.Linear", "nn.Dropout", "nn.Linear", "nn.Linear", "base_model.Basenet_volleyball.modules", "backbone.MyInception_v3", "isinstance", "backbone.MyVGG16", "nn.init.kaiming_normal_", "nn.init.zeros_", "backbone.MyVGG19"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__"], ["def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Basenet_volleyball", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "\n", "NFB", "=", "self", ".", "cfg", ".", "num_features_boxes", "\n", "D", "=", "self", ".", "cfg", ".", "emb_features", "\n", "K", "=", "self", ".", "cfg", ".", "crop_size", "[", "0", "]", "\n", "\n", "\n", "if", "cfg", ".", "backbone", "==", "'inv3'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyInception_v3", "(", "transform_input", "=", "False", ",", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'vgg16'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyVGG16", "(", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'vgg19'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyVGG19", "(", "pretrained", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "\n", "", "self", ".", "roi_align", "=", "RoIAlign", "(", "*", "self", ".", "cfg", ".", "crop_size", ")", "\n", "\n", "\n", "self", ".", "fc_emb", "=", "nn", ".", "Linear", "(", "K", "*", "K", "*", "D", ",", "NFB", ")", "\n", "self", ".", "dropout_emb", "=", "nn", ".", "Dropout", "(", "p", "=", "self", ".", "cfg", ".", "train_dropout_prob", ")", "\n", "\n", "self", ".", "fc_actions", "=", "nn", ".", "Linear", "(", "NFB", ",", "self", ".", "cfg", ".", "num_actions", ")", "\n", "self", ".", "fc_activities", "=", "nn", ".", "Linear", "(", "NFB", ",", "self", ".", "cfg", ".", "num_activities", ")", "\n", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_volleyball.savemodel": [[43, 53], ["torch.save", "print", "base_model.Basenet_volleyball.backbone.state_dict", "base_model.Basenet_volleyball.fc_emb.state_dict", "base_model.Basenet_volleyball.fc_actions.state_dict", "base_model.Basenet_volleyball.fc_activities.state_dict"], "methods", ["None"], ["", "", "", "def", "savemodel", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "state", "=", "{", "\n", "'backbone_state_dict'", ":", "self", ".", "backbone", ".", "state_dict", "(", ")", ",", "\n", "'fc_emb_state_dict'", ":", "self", ".", "fc_emb", ".", "state_dict", "(", ")", ",", "\n", "'fc_actions_state_dict'", ":", "self", ".", "fc_actions", ".", "state_dict", "(", ")", ",", "\n", "'fc_activities_state_dict'", ":", "self", ".", "fc_activities", ".", "state_dict", "(", ")", "\n", "}", "\n", "\n", "torch", ".", "save", "(", "state", ",", "filepath", ")", "\n", "print", "(", "'model saved to:'", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_volleyball.loadmodel": [[54, 61], ["torch.load", "base_model.Basenet_volleyball.backbone.load_state_dict", "base_model.Basenet_volleyball.fc_emb.load_state_dict", "base_model.Basenet_volleyball.fc_actions.load_state_dict", "base_model.Basenet_volleyball.fc_activities.load_state_dict", "print"], "methods", ["None"], ["", "def", "loadmodel", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "state", "=", "torch", ".", "load", "(", "filepath", ")", "\n", "self", ".", "backbone", ".", "load_state_dict", "(", "state", "[", "'backbone_state_dict'", "]", ")", "\n", "self", ".", "fc_emb", ".", "load_state_dict", "(", "state", "[", "'fc_emb_state_dict'", "]", ")", "\n", "self", ".", "fc_actions", ".", "load_state_dict", "(", "state", "[", "'fc_actions_state_dict'", "]", ")", "\n", "self", ".", "fc_activities", ".", "load_state_dict", "(", "state", "[", "'fc_activities_state_dict'", "]", ")", "\n", "print", "(", "'Load model states from: '", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_volleyball.forward": [[62, 140], ["torch.reshape", "torch.reshape", "torch.stack().to", "torch.reshape", "utils.prep_images", "base_model.Basenet_volleyball.backbone", "torch.cat", "base_model.Basenet_volleyball.roi_align", "base_model.Basenet_volleyball.reshape", "base_model.Basenet_volleyball.fc_emb", "F.relu", "base_model.Basenet_volleyball.dropout_emb", "base_model.Basenet_volleyball.reshape", "base_model.Basenet_volleyball.reshape.reshape", "base_model.Basenet_volleyball.fc_actions", "torch.max", "boxes_states_pooled.reshape", "base_model.Basenet_volleyball.fc_activities", "torch.cat.append", "actions_scores.reshape().mean().reshape.reshape().mean().reshape.reshape().mean().reshape", "activities_scores.reshape().mean.reshape().mean.reshape().mean", "torch.ones", "range", "torch.stack", "torch.Size", "F.interpolate", "actions_scores.reshape().mean().reshape.reshape().mean().reshape.reshape().mean", "activities_scores.reshape().mean.reshape().mean.reshape", "actions_scores.reshape().mean().reshape.reshape().mean().reshape.reshape"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.prep_images"], ["", "def", "forward", "(", "self", ",", "batch_data", ")", ":", "\n", "        ", "images_in", ",", "boxes_in", "=", "batch_data", "\n", "\n", "# read config parameters", "\n", "B", "=", "images_in", ".", "shape", "[", "0", "]", "\n", "T", "=", "images_in", ".", "shape", "[", "1", "]", "\n", "H", ",", "W", "=", "self", ".", "cfg", ".", "image_size", "\n", "OH", ",", "OW", "=", "self", ".", "cfg", ".", "out_size", "\n", "N", "=", "self", ".", "cfg", ".", "num_boxes", "\n", "NFB", "=", "self", ".", "cfg", ".", "num_features_boxes", "\n", "\n", "# Reshape the input data", "\n", "images_in_flat", "=", "torch", ".", "reshape", "(", "images_in", ",", "(", "B", "*", "T", ",", "3", ",", "H", ",", "W", ")", ")", "#B*T, 3, H, W", "\n", "boxes_in_flat", "=", "torch", ".", "reshape", "(", "boxes_in", ",", "(", "B", "*", "T", "*", "N", ",", "4", ")", ")", "#B*T*N, 4", "\n", "\n", "boxes_idx", "=", "[", "i", "*", "torch", ".", "ones", "(", "N", ",", "dtype", "=", "torch", ".", "int", ")", "for", "i", "in", "range", "(", "B", "*", "T", ")", "]", "\n", "boxes_idx", "=", "torch", ".", "stack", "(", "boxes_idx", ")", ".", "to", "(", "device", "=", "boxes_in", ".", "device", ")", "# B*T, N", "\n", "boxes_idx_flat", "=", "torch", ".", "reshape", "(", "boxes_idx", ",", "(", "B", "*", "T", "*", "N", ",", ")", ")", "#B*T*N,", "\n", "\n", "\n", "# Use backbone to extract features of images_in", "\n", "# Pre-precess first", "\n", "images_in_flat", "=", "prep_images", "(", "images_in_flat", ")", "\n", "\n", "outputs", "=", "self", ".", "backbone", "(", "images_in_flat", ")", "\n", "\n", "\n", "# Build multiscale features", "\n", "features_multiscale", "=", "[", "]", "\n", "for", "features", "in", "outputs", ":", "\n", "            ", "if", "features", ".", "shape", "[", "2", ":", "4", "]", "!=", "torch", ".", "Size", "(", "[", "OH", ",", "OW", "]", ")", ":", "\n", "                ", "features", "=", "F", ".", "interpolate", "(", "features", ",", "size", "=", "(", "OH", ",", "OW", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "features_multiscale", ".", "append", "(", "features", ")", "\n", "\n", "", "features_multiscale", "=", "torch", ".", "cat", "(", "features_multiscale", ",", "dim", "=", "1", ")", "#B*T, D, OH, OW", "\n", "\n", "\n", "\n", "# ActNet", "\n", "boxes_in_flat", ".", "requires_grad", "=", "False", "\n", "boxes_idx_flat", ".", "requires_grad", "=", "False", "\n", "#         features_multiscale.requires_grad=False", "\n", "\n", "\n", "# RoI Align", "\n", "boxes_features", "=", "self", ".", "roi_align", "(", "features_multiscale", ",", "\n", "boxes_in_flat", ",", "\n", "boxes_idx_flat", ")", "#B*T*N, D, K, K,", "\n", "\n", "\n", "boxes_features", "=", "boxes_features", ".", "reshape", "(", "B", "*", "T", "*", "N", ",", "-", "1", ")", "# B*T*N, D*K*K", "\n", "\n", "\n", "# Embedding to hidden state", "\n", "boxes_features", "=", "self", ".", "fc_emb", "(", "boxes_features", ")", "# B*T*N, NFB", "\n", "boxes_features", "=", "F", ".", "relu", "(", "boxes_features", ")", "\n", "boxes_features", "=", "self", ".", "dropout_emb", "(", "boxes_features", ")", "\n", "\n", "\n", "boxes_states", "=", "boxes_features", ".", "reshape", "(", "B", ",", "T", ",", "N", ",", "NFB", ")", "\n", "\n", "# Predict actions", "\n", "boxes_states_flat", "=", "boxes_states", ".", "reshape", "(", "-", "1", ",", "NFB", ")", "#B*T*N, NFB", "\n", "\n", "actions_scores", "=", "self", ".", "fc_actions", "(", "boxes_states_flat", ")", "#B*T*N, actn_num", "\n", "\n", "\n", "# Predict activities", "\n", "boxes_states_pooled", ",", "_", "=", "torch", ".", "max", "(", "boxes_states", ",", "dim", "=", "2", ")", "#B, T, NFB", "\n", "boxes_states_pooled_flat", "=", "boxes_states_pooled", ".", "reshape", "(", "-", "1", ",", "NFB", ")", "#B*T, NFB", "\n", "\n", "activities_scores", "=", "self", ".", "fc_activities", "(", "boxes_states_pooled_flat", ")", "#B*T, acty_num", "\n", "\n", "if", "T", "!=", "1", ":", "\n", "            ", "actions_scores", "=", "actions_scores", ".", "reshape", "(", "B", ",", "T", ",", "N", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "1", ")", ".", "reshape", "(", "B", "*", "N", ",", "-", "1", ")", "\n", "activities_scores", "=", "activities_scores", ".", "reshape", "(", "B", ",", "T", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "1", ")", "\n", "\n", "", "return", "actions_scores", ",", "activities_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_collective.__init__": [[146, 187], ["nn.Module.__init__", "roi_align.roi_align.RoIAlign", "nn.Dropout", "nn.Linear", "nn.Linear", "base_model.Basenet_collective.modules", "backbone.MyInception_v3", "base_model.Basenet_collective.backbone.parameters", "nn.Linear", "isinstance", "backbone.MyVGG16", "nn.Linear", "nn.init.kaiming_normal_", "backbone.MyVGG19", "backbone.MyMobileNet"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__"], ["def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Basenet_collective", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "\n", "D", "=", "self", ".", "cfg", ".", "emb_features", "\n", "K", "=", "self", ".", "cfg", ".", "crop_size", "[", "0", "]", "\n", "NFB", "=", "self", ".", "cfg", ".", "num_features_boxes", "\n", "\n", "# START: Original code by Zijian and Xinran", "\n", "if", "cfg", ".", "backbone", "==", "'inv3'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyInception_v3", "(", "transform_input", "=", "False", ",", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'vgg16'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyVGG16", "(", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'vgg19'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyVGG19", "(", "pretrained", "=", "True", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'mobilenet'", ":", "\n", "            ", "self", ".", "backbone", "=", "MyMobileNet", "(", "pretrained", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "# END: Original code by Zijian and Xinran", "\n", "\n", "", "if", "not", "self", ".", "cfg", ".", "train_backbone", ":", "\n", "            ", "for", "p", "in", "self", ".", "backbone", ".", "parameters", "(", ")", ":", "\n", "                ", "p", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "self", ".", "roi_align", "=", "RoIAlign", "(", "*", "self", ".", "cfg", ".", "crop_size", ")", "\n", "\n", "# START: Original code by Zijian and Xinran", "\n", "if", "cfg", ".", "backbone", "==", "'inv3'", ":", "\n", "            ", "self", ".", "fc_emb_1", "=", "nn", ".", "Linear", "(", "K", "*", "K", "*", "D", ",", "NFB", ")", "\n", "", "elif", "cfg", ".", "backbone", "==", "'mobilenet'", ":", "\n", "            ", "self", ".", "fc_emb_1", "=", "nn", ".", "Linear", "(", "32000", ",", "NFB", ")", "\n", "# END: Original code by Zijian and Xinran", "\n", "\n", "", "self", ".", "dropout_emb_1", "=", "nn", ".", "Dropout", "(", "p", "=", "self", ".", "cfg", ".", "train_dropout_prob", ")", "\n", "self", ".", "fc_actions", "=", "nn", ".", "Linear", "(", "NFB", ",", "self", ".", "cfg", ".", "num_actions", ")", "\n", "self", ".", "fc_activities", "=", "nn", ".", "Linear", "(", "NFB", ",", "self", ".", "cfg", ".", "num_activities", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_collective.savemodel": [[188, 198], ["torch.save", "print", "base_model.Basenet_collective.backbone.state_dict", "base_model.Basenet_collective.fc_emb_1.state_dict", "base_model.Basenet_collective.fc_actions.state_dict", "base_model.Basenet_collective.fc_activities.state_dict"], "methods", ["None"], ["", "", "", "def", "savemodel", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "state", "=", "{", "\n", "'backbone_state_dict'", ":", "self", ".", "backbone", ".", "state_dict", "(", ")", ",", "\n", "'fc_emb_state_dict'", ":", "self", ".", "fc_emb_1", ".", "state_dict", "(", ")", ",", "\n", "'fc_actions_state_dict'", ":", "self", ".", "fc_actions", ".", "state_dict", "(", ")", ",", "\n", "'fc_activities_state_dict'", ":", "self", ".", "fc_activities", ".", "state_dict", "(", ")", "\n", "}", "\n", "\n", "torch", ".", "save", "(", "state", ",", "filepath", ")", "\n", "print", "(", "'model saved to:'", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_collective.loadmodel": [[200, 205], ["torch.load", "base_model.Basenet_collective.backbone.load_state_dict", "base_model.Basenet_collective.fc_emb_1.load_state_dict", "print"], "methods", ["None"], ["", "def", "loadmodel", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "state", "=", "torch", ".", "load", "(", "filepath", ")", "\n", "self", ".", "backbone", ".", "load_state_dict", "(", "state", "[", "'backbone_state_dict'", "]", ")", "\n", "self", ".", "fc_emb_1", ".", "load_state_dict", "(", "state", "[", "'fc_emb_state_dict'", "]", ")", "\n", "print", "(", "'Load model states from: '", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_collective.forward": [[207, 290], ["torch.reshape", "boxes_in.reshape.reshape.reshape", "utils.prep_images", "base_model.Basenet_collective.backbone", "torch.cat", "torch.reshape", "torch.stack().to", "torch.reshape", "base_model.Basenet_collective.roi_align", "base_model.Basenet_collective.reshape", "base_model.Basenet_collective.fc_emb_1", "F.relu", "base_model.Basenet_collective.dropout_emb_1", "bboxes_num_in.reshape.reshape.reshape", "range", "torch.cat", "torch.cat", "torch.cat.append", "boxes_features_all[].reshape", "boxes_states.reshape", "base_model.Basenet_collective.fc_actions", "torch.cat.append", "torch.max", "boxes_states_pooled.reshape", "base_model.Basenet_collective.fc_activities", "torch.cat.append", "torch.Size", "F.interpolate", "torch.ones", "range", "torch.stack"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.prep_images"], ["", "def", "forward", "(", "self", ",", "batch_data", ")", ":", "\n", "        ", "images_in", ",", "boxes_in", ",", "bboxes_num_in", "=", "batch_data", "\n", "\n", "# read config parameters", "\n", "B", "=", "images_in", ".", "shape", "[", "0", "]", "\n", "T", "=", "images_in", ".", "shape", "[", "1", "]", "\n", "H", ",", "W", "=", "self", ".", "cfg", ".", "image_size", "\n", "OH", ",", "OW", "=", "self", ".", "cfg", ".", "out_size", "\n", "MAX_N", "=", "self", ".", "cfg", ".", "num_boxes", "\n", "NFB", "=", "self", ".", "cfg", ".", "num_features_boxes", "\n", "\n", "# Reshape the input data", "\n", "images_in_flat", "=", "torch", ".", "reshape", "(", "images_in", ",", "(", "B", "*", "T", ",", "3", ",", "H", ",", "W", ")", ")", "#B*T, 3, H, W", "\n", "boxes_in", "=", "boxes_in", ".", "reshape", "(", "B", "*", "T", ",", "MAX_N", ",", "4", ")", "\n", "\n", "# Use backbone to extract features of images_in", "\n", "# Pre-precess first", "\n", "images_in_flat", "=", "prep_images", "(", "images_in_flat", ")", "\n", "outputs", "=", "self", ".", "backbone", "(", "images_in_flat", ")", "\n", "\n", "\n", "# Build multiscale features", "\n", "features_multiscale", "=", "[", "]", "\n", "for", "features", "in", "outputs", ":", "\n", "            ", "if", "features", ".", "shape", "[", "2", ":", "4", "]", "!=", "torch", ".", "Size", "(", "[", "OH", ",", "OW", "]", ")", ":", "\n", "                ", "features", "=", "F", ".", "interpolate", "(", "features", ",", "size", "=", "(", "OH", ",", "OW", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "features_multiscale", ".", "append", "(", "features", ")", "\n", "\n", "", "features_multiscale", "=", "torch", ".", "cat", "(", "features_multiscale", ",", "dim", "=", "1", ")", "#B*T, D, OH, OW", "\n", "\n", "\n", "boxes_in_flat", "=", "torch", ".", "reshape", "(", "boxes_in", ",", "(", "B", "*", "T", "*", "MAX_N", ",", "4", ")", ")", "#B*T*MAX_N, 4", "\n", "\n", "boxes_idx", "=", "[", "i", "*", "torch", ".", "ones", "(", "MAX_N", ",", "dtype", "=", "torch", ".", "int", ")", "for", "i", "in", "range", "(", "B", "*", "T", ")", "]", "\n", "boxes_idx", "=", "torch", ".", "stack", "(", "boxes_idx", ")", ".", "to", "(", "device", "=", "boxes_in", ".", "device", ")", "# B*T, MAX_N", "\n", "boxes_idx_flat", "=", "torch", ".", "reshape", "(", "boxes_idx", ",", "(", "B", "*", "T", "*", "MAX_N", ",", ")", ")", "#B*T*MAX_N,", "\n", "\n", "# RoI Align", "\n", "boxes_in_flat", ".", "requires_grad", "=", "False", "\n", "boxes_idx_flat", ".", "requires_grad", "=", "False", "\n", "boxes_features_all", "=", "self", ".", "roi_align", "(", "features_multiscale", ",", "\n", "boxes_in_flat", ",", "\n", "boxes_idx_flat", ")", "#B*T*MAX_N, D, K, K,", "\n", "\n", "boxes_features_all", "=", "boxes_features_all", ".", "reshape", "(", "B", "*", "T", ",", "MAX_N", ",", "-", "1", ")", "#B*T,MAX_N, D*K*K", "\n", "\n", "# Embedding", "\n", "# print(boxes_features_all.shape)", "\n", "boxes_features_all", "=", "self", ".", "fc_emb_1", "(", "boxes_features_all", ")", "# B*T,MAX_N, NFB", "\n", "boxes_features_all", "=", "F", ".", "relu", "(", "boxes_features_all", ")", "\n", "boxes_features_all", "=", "self", ".", "dropout_emb_1", "(", "boxes_features_all", ")", "\n", "\n", "\n", "actions_scores", "=", "[", "]", "\n", "activities_scores", "=", "[", "]", "\n", "bboxes_num_in", "=", "bboxes_num_in", ".", "reshape", "(", "B", "*", "T", ",", ")", "#B*T,", "\n", "for", "bt", "in", "range", "(", "B", "*", "T", ")", ":", "\n", "\n", "            ", "N", "=", "bboxes_num_in", "[", "bt", "]", "\n", "boxes_features", "=", "boxes_features_all", "[", "bt", ",", ":", "N", ",", ":", "]", ".", "reshape", "(", "1", ",", "N", ",", "NFB", ")", "#1,N,NFB", "\n", "\n", "boxes_states", "=", "boxes_features", "\n", "\n", "NFS", "=", "NFB", "\n", "\n", "# Predict actions", "\n", "boxes_states_flat", "=", "boxes_states", ".", "reshape", "(", "-", "1", ",", "NFS", ")", "#1*N, NFS", "\n", "actn_score", "=", "self", ".", "fc_actions", "(", "boxes_states_flat", ")", "#1*N, actn_num", "\n", "actions_scores", ".", "append", "(", "actn_score", ")", "\n", "\n", "# Predict activities", "\n", "boxes_states_pooled", ",", "_", "=", "torch", ".", "max", "(", "boxes_states", ",", "dim", "=", "1", ")", "#1, NFS", "\n", "boxes_states_pooled_flat", "=", "boxes_states_pooled", ".", "reshape", "(", "-", "1", ",", "NFS", ")", "#1, NFS", "\n", "acty_score", "=", "self", ".", "fc_activities", "(", "boxes_states_pooled_flat", ")", "#1, acty_num", "\n", "activities_scores", ".", "append", "(", "acty_score", ")", "\n", "\n", "", "actions_scores", "=", "torch", ".", "cat", "(", "actions_scores", ",", "dim", "=", "0", ")", "#ALL_N,actn_num", "\n", "activities_scores", "=", "torch", ".", "cat", "(", "activities_scores", ",", "dim", "=", "0", ")", "#B*T,acty_num", "\n", "\n", "#         print(actions_scores.shape)", "\n", "#         print(activities_scores.shape)", "\n", "\n", "return", "actions_scores", ",", "activities_scores", "\n", "", "", ""]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.__init__": [[171, 173], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.reset": [[174, 179], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update": [[180, 185], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.__init__": [[191, 195], ["time.time", "time.time"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "last_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "init_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "total_time", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.timeit": [[196, 200], ["time.time"], "methods", ["None"], ["", "def", "timeit", "(", "self", ")", ":", "\n", "        ", "old_time", "=", "self", ".", "last_time", "\n", "self", ".", "last_time", "=", "time", ".", "time", "(", ")", "\n", "return", "self", ".", "last_time", "-", "old_time", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.totaltime": [[201, 204], ["time.time"], "methods", ["None"], ["", "def", "totaltime", "(", "self", ")", ":", "\n", "        ", "self", ".", "total_time", "=", "time", ".", "time", "(", ")", "-", "self", ".", "init_time", "\n", "return", "self", ".", "total_time", "", "", "", ""]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.prep_images": [[6, 18], ["torch.mul.div", "torch.sub", "torch.mul"], "function", ["None"], ["def", "prep_images", "(", "images", ")", ":", "\n", "    ", "\"\"\"\n    preprocess images\n    Args:\n        images: pytorch tensor\n    \"\"\"", "\n", "images", "=", "images", ".", "div", "(", "255.0", ")", "\n", "\n", "images", "=", "torch", ".", "sub", "(", "images", ",", "0.5", ")", "\n", "images", "=", "torch", ".", "mul", "(", "images", ",", "2.0", ")", "\n", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.calc_pairwise_distance": [[19, 32], ["X.pow().sum().reshape", "Y.pow().sum().reshape", "torch.sqrt", "Y.pow().sum().reshape.t", "X.pow().sum", "Y.pow().sum", "X.matmul", "X.pow", "Y.pow", "Y.t"], "function", ["None"], ["", "def", "calc_pairwise_distance", "(", "X", ",", "Y", ")", ":", "\n", "    ", "\"\"\"\n    computes pairwise distance between each element\n    Args: \n        X: [N,D]\n        Y: [M,D]\n    Returns:\n        dist: [N,M] matrix of euclidean distances\n    \"\"\"", "\n", "rx", "=", "X", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "ry", "=", "Y", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "dist", "=", "rx", "-", "2.0", "*", "X", ".", "matmul", "(", "Y", ".", "t", "(", ")", ")", "+", "ry", ".", "t", "(", ")", "\n", "return", "torch", ".", "sqrt", "(", "dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.calc_pairwise_distance_3d": [[33, 50], ["X.pow().sum().reshape", "Y.pow().sum().reshape", "torch.sqrt", "Y.pow().sum().reshape.transpose", "X.pow().sum", "Y.pow().sum", "X.matmul", "X.pow", "Y.pow", "Y.transpose"], "function", ["None"], ["", "def", "calc_pairwise_distance_3d", "(", "X", ",", "Y", ")", ":", "\n", "    ", "\"\"\"\n    computes pairwise distance between each element\n    Args: \n        X: [B,N,D]\n        Y: [B,M,D]\n    Returns:\n        dist: [B,N,M] matrix of euclidean distances\n    \"\"\"", "\n", "B", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "rx", "=", "X", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "2", ")", ".", "reshape", "(", "(", "B", ",", "-", "1", ",", "1", ")", ")", "\n", "ry", "=", "Y", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "2", ")", ".", "reshape", "(", "(", "B", ",", "-", "1", ",", "1", ")", ")", "\n", "\n", "dist", "=", "rx", "-", "2.0", "*", "X", ".", "matmul", "(", "Y", ".", "transpose", "(", "1", ",", "2", ")", ")", "+", "ry", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "return", "torch", ".", "sqrt", "(", "dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.sincos_encoding_2d": [[51, 76], ["torch.FloatTensor().to", "idxs.repeat.repeat", "torch.cat", "torch.sin", "torch.cos", "numpy.power", "range", "torch.FloatTensor", "positions[].reshape().repeat", "positions[].reshape().repeat", "positions[].reshape", "positions[].reshape"], "function", ["None"], ["", "def", "sincos_encoding_2d", "(", "positions", ",", "d_emb", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        positions: [N,2]\n    Returns:\n        positions high-dimensional representation: [N,d_emb]\n    \"\"\"", "\n", "\n", "N", "=", "positions", ".", "shape", "[", "0", "]", "\n", "\n", "d", "=", "d_emb", "//", "2", "\n", "\n", "idxs", "=", "[", "np", ".", "power", "(", "1000", ",", "2", "*", "(", "idx", "//", "2", ")", "/", "d", ")", "for", "idx", "in", "range", "(", "d", ")", "]", "\n", "idxs", "=", "torch", ".", "FloatTensor", "(", "idxs", ")", ".", "to", "(", "device", "=", "positions", ".", "device", ")", "\n", "\n", "idxs", "=", "idxs", ".", "repeat", "(", "N", ",", "2", ")", "#N, d_emb", "\n", "\n", "pos", "=", "torch", ".", "cat", "(", "[", "positions", "[", ":", ",", "0", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "d", ")", ",", "positions", "[", ":", ",", "1", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "d", ")", "]", ",", "dim", "=", "1", ")", "\n", "\n", "embeddings", "=", "pos", "/", "idxs", "\n", "\n", "embeddings", "[", ":", ",", "0", ":", ":", "2", "]", "=", "torch", ".", "sin", "(", "embeddings", "[", ":", ",", "0", ":", ":", "2", "]", ")", "# dim 2i", "\n", "embeddings", "[", ":", ",", "1", ":", ":", "2", "]", "=", "torch", ".", "cos", "(", "embeddings", "[", ":", ",", "1", ":", ":", "2", "]", ")", "# dim 2i+1", "\n", "\n", "return", "embeddings", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.ncc_val": [[78, 85], ["torch.mean", "torch.mean", "torch.std", "torch.std", "torch.mean"], "function", ["None"], ["", "def", "ncc_val", "(", "I", ",", "J", ")", ":", "\n", "  ", "I_mean", "=", "torch", ".", "mean", "(", "I", ")", "\n", "J_mean", "=", "torch", ".", "mean", "(", "J", ")", "\n", "I_std", "=", "torch", ".", "std", "(", "I", ")", "\n", "J_std", "=", "torch", ".", "std", "(", "J", ")", "\n", "ncc", "=", "torch", ".", "mean", "(", "(", "I", "-", "I_mean", ")", "*", "(", "J", "-", "J_mean", ")", "/", "(", "I_std", "*", "J_std", ")", ")", "\n", "return", "ncc", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.calc_ncc": [[86, 100], ["range", "numpy.array", "torch.from_numpy().float", "range", "torch.from_numpy().float.append", "ncc_list.append", "torch.from_numpy", "utils.ncc_val"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.ncc_val"], ["", "def", "calc_ncc", "(", "X", ",", "Y", ",", "index", ")", ":", "\n", "    ", "ncc_top_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "index", ")", ":", "\n", "        ", "ncc_list", "=", "[", "]", "\n", "\n", "for", "j", "in", "range", "(", "index", ")", ":", "\n", "            ", "ncc_list", ".", "append", "(", "ncc_val", "(", "X", "[", "0", "]", "[", "i", "]", ",", "Y", "[", "0", "]", "[", "j", "]", ")", ")", "\n", "", "ncc_top_list", ".", "append", "(", "ncc_list", ")", "\n", "\n", "", "ncc_top_list", "=", "np", ".", "array", "(", "ncc_top_list", ",", "dtype", "=", "np", ".", "float", ")", "\n", "ncc_top_list", "=", "torch", ".", "from_numpy", "(", "ncc_top_list", ")", ".", "float", "(", ")", "\n", "\n", "return", "ncc_top_list", "[", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.calc_sad": [[101, 113], ["range", "torch.unsqueeze", "range", "torch.unsqueeze.append", "torch.FloatTensor", "torch.norm", "sad_individual.append"], "function", ["None"], ["", "def", "calc_sad", "(", "X", ",", "Y", ")", ":", "\n", "   ", "sad_all", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "X", ".", "shape", "[", "1", "]", ")", ":", "\n", "       ", "sad_individual", "=", "[", "]", "\n", "x", "=", "X", "[", "0", ",", "i", ",", ":", "]", "\n", "for", "j", "in", "range", "(", "Y", ".", "shape", "[", "1", "]", ")", ":", "\n", "           ", "y", "=", "Y", "[", "0", ",", "j", ",", ":", "]", "\n", "l1_norm", "=", "torch", ".", "norm", "(", "x", "-", "y", ",", "p", "=", "1", ")", "\n", "sad_individual", ".", "append", "(", "l1_norm", ")", "\n", "", "sad_all", ".", "append", "(", "sad_individual", ")", "\n", "", "sad_all", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "FloatTensor", "(", "sad_all", ")", ",", "dim", "=", "0", ")", "\n", "return", "sad_all", "\n", "# END: Original code by Zijian and Xinran", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log": [[115, 120], ["print", "open", "print"], "function", ["None"], ["", "def", "print_log", "(", "file_path", ",", "*", "args", ")", ":", "\n", "    ", "print", "(", "*", "args", ")", "\n", "if", "file_path", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "file_path", ",", "'a'", ")", "as", "f", ":", "\n", "            ", "print", "(", "*", "args", ",", "file", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.show_config": [[121, 126], ["utils.print_log", "cfg.__dict__.items", "utils.print_log", "utils.print_log"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log"], ["", "", "", "def", "show_config", "(", "cfg", ")", ":", "\n", "    ", "print_log", "(", "cfg", ".", "log_path", ",", "'=====================Config====================='", ")", "\n", "for", "k", ",", "v", "in", "cfg", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "        ", "print_log", "(", "cfg", ".", "log_path", ",", "k", ",", "': '", ",", "v", ")", "\n", "", "print_log", "(", "cfg", ".", "log_path", ",", "'======================End======================='", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.show_epoch_info": [[127, 136], ["utils.print_log", "utils.print_log", "utils.print_log", "utils.print_log"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log"], ["", "def", "show_epoch_info", "(", "phase", ",", "log_path", ",", "info", ")", ":", "\n", "    ", "print_log", "(", "log_path", ",", "''", ")", "\n", "if", "phase", "==", "'Test'", ":", "\n", "        ", "print_log", "(", "log_path", ",", "'====> %s at epoch #%d'", "%", "(", "phase", ",", "info", "[", "'epoch'", "]", ")", ")", "\n", "", "else", ":", "\n", "        ", "print_log", "(", "log_path", ",", "'%s at epoch #%d'", "%", "(", "phase", ",", "info", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "print_log", "(", "log_path", ",", "'Group Activity Accuracy: %.2f%%, Individual Actions Accuracy: %.2f%%, Loss: %.5f, Using %.1f seconds'", "%", "(", "\n", "info", "[", "'activities_acc'", "]", ",", "info", "[", "'actions_acc'", "]", ",", "info", "[", "'loss'", "]", ",", "info", "[", "'time'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.log_final_exp_result": [[137, 165], ["pickle.load", "pickle.dump", "open", "print", "print", "print", "print", "exp_result[].__dict__.items", "print", "print", "print", "print", "print", "open", "open", "print"], "function", ["None"], ["", "def", "log_final_exp_result", "(", "log_path", ",", "data_path", ",", "exp_result", ")", ":", "\n", "    ", "no_display_cfg", "=", "[", "'num_workers'", ",", "'use_gpu'", ",", "'use_multi_gpu'", ",", "'device_list'", ",", "\n", "'batch_size_test'", ",", "'test_interval_epoch'", ",", "'train_random_seed'", ",", "\n", "'result_path'", ",", "'log_path'", ",", "'device'", "]", "\n", "\n", "with", "open", "(", "log_path", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "print", "(", "''", ",", "file", "=", "f", ")", "\n", "print", "(", "''", ",", "file", "=", "f", ")", "\n", "print", "(", "''", ",", "file", "=", "f", ")", "\n", "print", "(", "'=====================Config====================='", ",", "file", "=", "f", ")", "\n", "\n", "for", "k", ",", "v", "in", "exp_result", "[", "'cfg'", "]", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "not", "in", "no_display_cfg", ":", "\n", "                ", "print", "(", "k", ",", "': '", ",", "v", ",", "file", "=", "f", ")", "\n", "\n", "", "", "print", "(", "'=====================Result======================'", ",", "file", "=", "f", ")", "\n", "\n", "print", "(", "'Best result:'", ",", "file", "=", "f", ")", "\n", "print", "(", "exp_result", "[", "'best_result'", "]", ",", "file", "=", "f", ")", "\n", "\n", "print", "(", "'Cost total %.4f hours.'", "%", "(", "exp_result", "[", "'total_time'", "]", ")", ",", "file", "=", "f", ")", "\n", "\n", "print", "(", "'======================End======================='", ",", "file", "=", "f", ")", "\n", "\n", "\n", "", "data_dict", "=", "pickle", ".", "load", "(", "open", "(", "data_path", ",", "'rb'", ")", ")", "\n", "data_dict", "[", "exp_result", "[", "'cfg'", "]", ".", "exp_name", "]", "=", "exp_result", "\n", "pickle", ".", "dump", "(", "data_dict", ",", "open", "(", "data_path", ",", "'wb'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.train_net.set_bn_eval": [[17, 21], ["classname.find", "m.eval"], "function", ["None"], ["def", "set_bn_eval", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.train_net.adjust_lr": [[22, 26], ["print"], "function", ["None"], ["", "", "def", "adjust_lr", "(", "optimizer", ",", "new_lr", ")", ":", "\n", "    ", "print", "(", "'change learning rate:'", ",", "new_lr", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "new_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.train_net.train_net": [[27, 140], ["list", "cfg.init_config", "utils.show_config", "dataset.return_dataset", "data.DataLoader", "data.DataLoader", "np.random.seed", "torch.manual_seed", "torch.manual_seed", "random.seed", "print", "GCNnet.to", "GCNnet.train", "GCNnet.apply", "torch.Adam", "utils.Timer", "range", "utils.print_log", "map", "torch.cuda.is_available", "torch.cuda.is_available", "torch.device", "torch.device", "torch.device", "torch.device", "Basenet", "nn.DataParallel", "filter", "test", "print", "train", "utils.show_epoch_info", "cfg.device_list.split", "GCNnet", "GCNnet.loadmodel", "GCNnet.parameters", "train_net.adjust_lr", "test", "utils.show_epoch_info", "utils.print_log", "utils.Timer.totaltime", "torch.save", "torch.save", "print", "GCNnet.state_dict", "optim.Adam.state_dict", "GCNnet.modules", "isinstance", "m.savemodel"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.config.Config.init_config", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.show_config", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.dataset.return_dataset", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.show_epoch_info", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_collective.loadmodel", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.train_net.adjust_lr", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.show_epoch_info", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.print_log", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.totaltime", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.base_model.Basenet_collective.savemodel"], ["", "", "def", "train_net", "(", "cfg", ")", ":", "\n", "    ", "\"\"\"\n    training gcn net\n    \"\"\"", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "cfg", ".", "device_list", "\n", "devices", "=", "list", "(", "map", "(", "int", ",", "cfg", ".", "device_list", ".", "split", "(", "','", ")", ")", ")", "\n", "\n", "# Show config parameters", "\n", "cfg", ".", "init_config", "(", ")", "\n", "show_config", "(", "cfg", ")", "\n", "\n", "# Reading dataset", "\n", "training_set", ",", "validation_set", "=", "return_dataset", "(", "cfg", ")", "\n", "\n", "params", "=", "{", "\n", "'batch_size'", ":", "cfg", ".", "batch_size", ",", "\n", "'shuffle'", ":", "True", ",", "\n", "'num_workers'", ":", "4", "\n", "}", "\n", "training_loader", "=", "data", ".", "DataLoader", "(", "training_set", ",", "**", "params", ")", "\n", "\n", "params", "[", "'batch_size'", "]", "=", "cfg", ".", "test_batch_size", "\n", "validation_loader", "=", "data", ".", "DataLoader", "(", "validation_set", ",", "**", "params", ")", "\n", "\n", "# Set random seed", "\n", "np", ".", "random", ".", "seed", "(", "cfg", ".", "train_random_seed", ")", "\n", "torch", ".", "manual_seed", "(", "cfg", ".", "train_random_seed", ")", "\n", "random", ".", "seed", "(", "cfg", ".", "train_random_seed", ")", "\n", "\n", "# Set data position", "\n", "if", "cfg", ".", "use_gpu", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cuda'", ",", "devices", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "\n", "# Build model and optimizer", "\n", "", "basenet_list", "=", "{", "'volleyball'", ":", "Basenet_volleyball", ",", "'collective'", ":", "Basenet_collective", "}", "\n", "gcnnet_list", "=", "{", "'volleyball'", ":", "GCNnet_volleyball", ",", "'collective'", ":", "GCNnet_collective", "}", "\n", "\n", "if", "cfg", ".", "training_stage", "==", "1", ":", "\n", "        ", "Basenet", "=", "basenet_list", "[", "cfg", ".", "dataset_name", "]", "\n", "model", "=", "Basenet", "(", "cfg", ")", "\n", "", "elif", "cfg", ".", "training_stage", "==", "2", ":", "\n", "        ", "GCNnet", "=", "gcnnet_list", "[", "cfg", ".", "dataset_name", "]", "\n", "model", "=", "GCNnet", "(", "cfg", ")", "\n", "# Load backbone", "\n", "model", ".", "loadmodel", "(", "cfg", ".", "stage1_model_path", ")", "\n", "", "else", ":", "\n", "        ", "assert", "(", "False", ")", "\n", "\n", "", "print", "(", "model", ")", "\n", "\n", "if", "cfg", ".", "use_multi_gpu", ":", "\n", "        ", "model", "=", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "devices", ")", "\n", "\n", "", "model", "=", "model", ".", "to", "(", "f'cuda:{model.device_ids[0]}'", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "model", ".", "apply", "(", "set_bn_eval", ")", "\n", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", ",", "lr", "=", "cfg", ".", "train_learning_rate", ",", "weight_decay", "=", "cfg", ".", "weight_decay", ")", "\n", "\n", "train_list", "=", "{", "'volleyball'", ":", "train_volleyball", ",", "'collective'", ":", "train_collective", "}", "\n", "test_list", "=", "{", "'volleyball'", ":", "test_volleyball", ",", "'collective'", ":", "test_collective", "}", "\n", "train", "=", "train_list", "[", "cfg", ".", "dataset_name", "]", "\n", "test", "=", "test_list", "[", "cfg", ".", "dataset_name", "]", "\n", "\n", "if", "cfg", ".", "test_before_train", ":", "\n", "        ", "test_info", "=", "test", "(", "validation_loader", ",", "model", ",", "device", ",", "0", ",", "cfg", ")", "\n", "print", "(", "test_info", ")", "\n", "\n", "# Training iteration", "\n", "", "best_result", "=", "{", "'epoch'", ":", "0", ",", "'activities_acc'", ":", "0", "}", "\n", "start_epoch", "=", "1", "\n", "timer", "=", "Timer", "(", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "start_epoch", "+", "cfg", ".", "max_epoch", ")", ":", "\n", "\n", "        ", "if", "epoch", "in", "cfg", ".", "lr_plan", ":", "\n", "            ", "adjust_lr", "(", "optimizer", ",", "cfg", ".", "lr_plan", "[", "epoch", "]", ")", "\n", "\n", "# One epoch of forward and backward", "\n", "", "train_info", "=", "train", "(", "training_loader", ",", "model", ",", "device", ",", "optimizer", ",", "epoch", ",", "cfg", ")", "\n", "show_epoch_info", "(", "'Train'", ",", "cfg", ".", "log_path", ",", "train_info", ")", "\n", "\n", "# Test", "\n", "if", "epoch", "%", "cfg", ".", "test_interval_epoch", "==", "0", ":", "\n", "            ", "test_info", "=", "test", "(", "validation_loader", ",", "model", ",", "device", ",", "epoch", ",", "cfg", ")", "\n", "show_epoch_info", "(", "'Test'", ",", "cfg", ".", "log_path", ",", "test_info", ")", "\n", "\n", "if", "test_info", "[", "'activities_acc'", "]", ">", "best_result", "[", "'activities_acc'", "]", ":", "\n", "                ", "best_result", "=", "test_info", "\n", "", "print_log", "(", "cfg", ".", "log_path", ",", "\n", "'Best group activity accuracy: %.2f%% at epoch #%d.'", "%", "(", "best_result", "[", "'activities_acc'", "]", ",", "best_result", "[", "'epoch'", "]", ")", ")", "\n", "\n", "# Save model", "\n", "if", "cfg", ".", "training_stage", "==", "2", ":", "\n", "                ", "state", "=", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", "\n", "filepath", "=", "cfg", ".", "result_path", "+", "'/stage%d_epoch%d_%.2f%%.pth'", "%", "(", "cfg", ".", "training_stage", ",", "epoch", ",", "test_info", "[", "'activities_acc'", "]", ")", "\n", "torch", ".", "save", "(", "state", ",", "filepath", ")", "\n", "print", "(", "'model saved to:'", ",", "filepath", ")", "\n", "", "elif", "cfg", ".", "training_stage", "==", "1", ":", "\n", "                ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "                    ", "if", "isinstance", "(", "m", ",", "Basenet", ")", ":", "\n", "                        ", "filepath", "=", "cfg", ".", "result_path", "+", "'/stage%d_epoch%d_%.2f%%.pth'", "%", "(", "cfg", ".", "training_stage", ",", "epoch", ",", "test_info", "[", "'activities_acc'", "]", ")", "\n", "m", ".", "savemodel", "(", "filepath", ")", "\n", "#                         print('model saved to:',filepath)", "\n", "", "", "", "else", ":", "\n", "                ", "assert", "False", "\n", "", "", "", "print_log", "(", "cfg", ".", "log_path", ",", "'Total used time %.1f seconds.'", "%", "(", "timer", ".", "totaltime", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.train_net.train_volleyball": [[142, 202], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.Timer", "model.train", "model.apply", "batch_data[].reshape", "batch_data[].reshape", "actions_in[].reshape", "activities_in[].reshape", "model", "torch.tensor().to", "torch.tensor().to", "F.cross_entropy", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "F.cross_entropy", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "optimizer.zero_grad", "total_loss.backward", "optimizer.step", "utils.Timer.timeit", "b.to", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.sum.item", "torch.sum.item", "total_loss.item", "torch.tensor", "torch.tensor", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.argmax.int", "actions_in[].reshape.int", "torch.argmax.int", "activities_in[].reshape.int"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.timeit"], ["", "def", "train_volleyball", "(", "data_loader", ",", "model", ",", "device", ",", "optimizer", ",", "epoch", ",", "cfg", ")", ":", "\n", "\n", "    ", "actions_meter", "=", "AverageMeter", "(", ")", "\n", "activities_meter", "=", "AverageMeter", "(", ")", "\n", "loss_meter", "=", "AverageMeter", "(", ")", "\n", "epoch_timer", "=", "Timer", "(", ")", "\n", "for", "batch_data", "in", "data_loader", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "model", ".", "apply", "(", "set_bn_eval", ")", "\n", "\n", "# prepare batch data", "\n", "batch_data", "=", "[", "b", ".", "to", "(", "device", "=", "device", ")", "for", "b", "in", "batch_data", "]", "\n", "batch_size", "=", "batch_data", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "num_frames", "=", "batch_data", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "actions_in", "=", "batch_data", "[", "2", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ",", "cfg", ".", "num_boxes", ")", ")", "\n", "activities_in", "=", "batch_data", "[", "3", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ")", ")", "\n", "\n", "actions_in", "=", "actions_in", "[", ":", ",", "0", ",", ":", "]", ".", "reshape", "(", "(", "batch_size", "*", "cfg", ".", "num_boxes", ",", ")", ")", "\n", "activities_in", "=", "activities_in", "[", ":", ",", "0", "]", ".", "reshape", "(", "(", "batch_size", ",", ")", ")", "\n", "\n", "# forward", "\n", "actions_scores", ",", "activities_scores", "=", "model", "(", "(", "batch_data", "[", "0", "]", ",", "batch_data", "[", "1", "]", ")", ")", "\n", "\n", "# Predict actions", "\n", "actions_weights", "=", "torch", ".", "tensor", "(", "cfg", ".", "actions_weights", ")", ".", "to", "(", "device", "=", "device", ")", "\n", "actions_loss", "=", "F", ".", "cross_entropy", "(", "actions_scores", ",", "actions_in", ",", "weight", "=", "actions_weights", ")", "\n", "actions_labels", "=", "torch", ".", "argmax", "(", "actions_scores", ",", "dim", "=", "1", ")", "\n", "actions_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "actions_labels", ".", "int", "(", ")", ",", "actions_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "# Predict activities", "\n", "activities_loss", "=", "F", ".", "cross_entropy", "(", "activities_scores", ",", "activities_in", ")", "\n", "activities_labels", "=", "torch", ".", "argmax", "(", "activities_scores", ",", "dim", "=", "1", ")", "\n", "activities_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "activities_labels", ".", "int", "(", ")", ",", "activities_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "# Get accuracy", "\n", "actions_accuracy", "=", "actions_correct", ".", "item", "(", ")", "/", "actions_scores", ".", "shape", "[", "0", "]", "\n", "activities_accuracy", "=", "activities_correct", ".", "item", "(", ")", "/", "activities_scores", ".", "shape", "[", "0", "]", "\n", "\n", "actions_meter", ".", "update", "(", "actions_accuracy", ",", "actions_scores", ".", "shape", "[", "0", "]", ")", "\n", "activities_meter", ".", "update", "(", "activities_accuracy", ",", "activities_scores", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# Total loss", "\n", "total_loss", "=", "activities_loss", "+", "cfg", ".", "actions_loss_weight", "*", "actions_loss", "\n", "loss_meter", ".", "update", "(", "total_loss", ".", "item", "(", ")", ",", "batch_size", ")", "\n", "\n", "# Optim", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "train_info", "=", "{", "\n", "'time'", ":", "epoch_timer", ".", "timeit", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'loss'", ":", "loss_meter", ".", "avg", ",", "\n", "'activities_acc'", ":", "activities_meter", ".", "avg", "*", "100", ",", "\n", "'actions_acc'", ":", "actions_meter", ".", "avg", "*", "100", "\n", "}", "\n", "\n", "return", "train_info", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.train_net.test_volleyball": [[204, 260], ["model.eval", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.Timer", "torch.no_grad", "torch.no_grad", "utils.Timer.timeit", "batch_data_test[].reshape", "batch_data_test[].reshape", "model", "actions_in[].reshape", "activities_in[].reshape", "torch.tensor().to", "torch.tensor().to", "F.cross_entropy", "torch.argmax", "torch.argmax", "F.cross_entropy", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "b.to", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.sum.item", "torch.sum.item", "total_loss.item", "torch.tensor", "torch.tensor", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.argmax.int", "actions_in[].reshape.int", "torch.argmax.int", "activities_in[].reshape.int"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.timeit", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update"], ["", "def", "test_volleyball", "(", "data_loader", ",", "model", ",", "device", ",", "epoch", ",", "cfg", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "actions_meter", "=", "AverageMeter", "(", ")", "\n", "activities_meter", "=", "AverageMeter", "(", ")", "\n", "loss_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "epoch_timer", "=", "Timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_data_test", "in", "data_loader", ":", "\n", "# prepare batch data", "\n", "            ", "batch_data_test", "=", "[", "b", ".", "to", "(", "device", "=", "device", ")", "for", "b", "in", "batch_data_test", "]", "\n", "batch_size", "=", "batch_data_test", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "num_frames", "=", "batch_data_test", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "actions_in", "=", "batch_data_test", "[", "2", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ",", "cfg", ".", "num_boxes", ")", ")", "\n", "activities_in", "=", "batch_data_test", "[", "3", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ")", ")", "\n", "\n", "# forward", "\n", "actions_scores", ",", "activities_scores", "=", "model", "(", "(", "batch_data_test", "[", "0", "]", ",", "batch_data_test", "[", "1", "]", ")", ")", "\n", "\n", "# Predict actions", "\n", "actions_in", "=", "actions_in", "[", ":", ",", "0", ",", ":", "]", ".", "reshape", "(", "(", "batch_size", "*", "cfg", ".", "num_boxes", ",", ")", ")", "\n", "activities_in", "=", "activities_in", "[", ":", ",", "0", "]", ".", "reshape", "(", "(", "batch_size", ",", ")", ")", "\n", "\n", "actions_weights", "=", "torch", ".", "tensor", "(", "cfg", ".", "actions_weights", ")", ".", "to", "(", "device", "=", "device", ")", "\n", "actions_loss", "=", "F", ".", "cross_entropy", "(", "actions_scores", ",", "actions_in", ",", "weight", "=", "actions_weights", ")", "\n", "actions_labels", "=", "torch", ".", "argmax", "(", "actions_scores", ",", "dim", "=", "1", ")", "\n", "\n", "# Predict activities", "\n", "activities_loss", "=", "F", ".", "cross_entropy", "(", "activities_scores", ",", "activities_in", ")", "\n", "activities_labels", "=", "torch", ".", "argmax", "(", "activities_scores", ",", "dim", "=", "1", ")", "\n", "\n", "actions_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "actions_labels", ".", "int", "(", ")", ",", "actions_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "activities_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "activities_labels", ".", "int", "(", ")", ",", "activities_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "# Get accuracy", "\n", "actions_accuracy", "=", "actions_correct", ".", "item", "(", ")", "/", "actions_scores", ".", "shape", "[", "0", "]", "\n", "activities_accuracy", "=", "activities_correct", ".", "item", "(", ")", "/", "activities_scores", ".", "shape", "[", "0", "]", "\n", "\n", "actions_meter", ".", "update", "(", "actions_accuracy", ",", "actions_scores", ".", "shape", "[", "0", "]", ")", "\n", "activities_meter", ".", "update", "(", "activities_accuracy", ",", "activities_scores", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# Total loss", "\n", "total_loss", "=", "activities_loss", "+", "cfg", ".", "actions_loss_weight", "*", "actions_loss", "\n", "loss_meter", ".", "update", "(", "total_loss", ".", "item", "(", ")", ",", "batch_size", ")", "\n", "\n", "", "", "test_info", "=", "{", "\n", "'time'", ":", "epoch_timer", ".", "timeit", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'loss'", ":", "loss_meter", ".", "avg", ",", "\n", "'activities_acc'", ":", "activities_meter", ".", "avg", "*", "100", ",", "\n", "'actions_acc'", ":", "actions_meter", ".", "avg", "*", "100", "\n", "}", "\n", "\n", "return", "test_info", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.train_net.train_collective": [[262, 338], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.Timer", "model.train", "model.apply", "model", "batch_data[].reshape", "batch_data[].reshape", "batch_data[].reshape", "torch.cat().reshape", "torch.cat().reshape", "F.cross_entropy", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "F.cross_entropy", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "optimizer.zero_grad", "total_loss.backward", "optimizer.step", "utils.Timer.timeit", "b.to", "actions_in.reshape.reshape", "bboxes_num.reshape.reshape", "range", "range", "activities_in[].reshape.reshape", "activities_in[].reshape", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.sum.item", "torch.sum.item", "total_loss.item", "actions_in_nopad.append", "actions_in_nopad.append", "torch.cat", "torch.cat", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.argmax.int", "actions_in.reshape.int", "torch.argmax.int", "activities_in[].reshape.int"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.timeit"], ["", "def", "train_collective", "(", "data_loader", ",", "model", ",", "device", ",", "optimizer", ",", "epoch", ",", "cfg", ")", ":", "\n", "\n", "    ", "actions_meter", "=", "AverageMeter", "(", ")", "\n", "activities_meter", "=", "AverageMeter", "(", ")", "\n", "loss_meter", "=", "AverageMeter", "(", ")", "\n", "epoch_timer", "=", "Timer", "(", ")", "\n", "for", "batch_data", "in", "data_loader", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "model", ".", "apply", "(", "set_bn_eval", ")", "\n", "\n", "# prepare batch data", "\n", "batch_data", "=", "[", "b", ".", "to", "(", "device", "=", "device", ")", "for", "b", "in", "batch_data", "]", "\n", "batch_size", "=", "batch_data", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "num_frames", "=", "batch_data", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "# forward", "\n", "actions_scores", ",", "activities_scores", "=", "model", "(", "(", "batch_data", "[", "0", "]", ",", "batch_data", "[", "1", "]", ",", "batch_data", "[", "4", "]", ")", ")", "\n", "\n", "actions_in", "=", "batch_data", "[", "2", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ",", "cfg", ".", "num_boxes", ")", ")", "\n", "activities_in", "=", "batch_data", "[", "3", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ")", ")", "\n", "bboxes_num", "=", "batch_data", "[", "4", "]", ".", "reshape", "(", "batch_size", ",", "num_frames", ")", "\n", "\n", "actions_in_nopad", "=", "[", "]", "\n", "if", "cfg", ".", "training_stage", "==", "1", ":", "\n", "            ", "actions_in", "=", "actions_in", ".", "reshape", "(", "(", "batch_size", "*", "num_frames", ",", "cfg", ".", "num_boxes", ",", ")", ")", "\n", "bboxes_num", "=", "bboxes_num", ".", "reshape", "(", "batch_size", "*", "num_frames", ",", ")", "\n", "for", "bt", "in", "range", "(", "batch_size", "*", "num_frames", ")", ":", "\n", "                ", "N", "=", "bboxes_num", "[", "bt", "]", "\n", "actions_in_nopad", ".", "append", "(", "actions_in", "[", "bt", ",", ":", "N", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "b", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "N", "=", "bboxes_num", "[", "b", "]", "[", "0", "]", "\n", "actions_in_nopad", ".", "append", "(", "actions_in", "[", "b", "]", "[", "0", "]", "[", ":", "N", "]", ")", "\n", "", "", "actions_in", "=", "torch", ".", "cat", "(", "actions_in_nopad", ",", "dim", "=", "0", ")", ".", "reshape", "(", "-", "1", ",", ")", "#ALL_N,", "\n", "\n", "if", "cfg", ".", "training_stage", "==", "1", ":", "\n", "            ", "activities_in", "=", "activities_in", ".", "reshape", "(", "-", "1", ",", ")", "\n", "", "else", ":", "\n", "            ", "activities_in", "=", "activities_in", "[", ":", ",", "0", "]", ".", "reshape", "(", "batch_size", ",", ")", "\n", "\n", "# Predict actions", "\n", "", "actions_loss", "=", "F", ".", "cross_entropy", "(", "actions_scores", ",", "actions_in", ",", "weight", "=", "None", ")", "\n", "actions_labels", "=", "torch", ".", "argmax", "(", "actions_scores", ",", "dim", "=", "1", ")", "#B*T*N,", "\n", "actions_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "actions_labels", ".", "int", "(", ")", ",", "actions_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "# Predict activities", "\n", "activities_loss", "=", "F", ".", "cross_entropy", "(", "activities_scores", ",", "activities_in", ")", "\n", "activities_labels", "=", "torch", ".", "argmax", "(", "activities_scores", ",", "dim", "=", "1", ")", "#B*T,", "\n", "activities_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "activities_labels", ".", "int", "(", ")", ",", "activities_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "\n", "# Get accuracy", "\n", "actions_accuracy", "=", "actions_correct", ".", "item", "(", ")", "/", "actions_scores", ".", "shape", "[", "0", "]", "\n", "activities_accuracy", "=", "activities_correct", ".", "item", "(", ")", "/", "activities_scores", ".", "shape", "[", "0", "]", "\n", "\n", "actions_meter", ".", "update", "(", "actions_accuracy", ",", "actions_scores", ".", "shape", "[", "0", "]", ")", "\n", "activities_meter", ".", "update", "(", "activities_accuracy", ",", "activities_scores", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# Total loss", "\n", "total_loss", "=", "activities_loss", "+", "cfg", ".", "actions_loss_weight", "*", "actions_loss", "\n", "loss_meter", ".", "update", "(", "total_loss", ".", "item", "(", ")", ",", "batch_size", ")", "\n", "\n", "# Optim", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "train_info", "=", "{", "\n", "'time'", ":", "epoch_timer", ".", "timeit", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'loss'", ":", "loss_meter", ".", "avg", ",", "\n", "'activities_acc'", ":", "activities_meter", ".", "avg", "*", "100", ",", "\n", "'actions_acc'", ":", "actions_meter", ".", "avg", "*", "100", "\n", "}", "\n", "\n", "return", "train_info", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.train_net.test_collective": [[340, 410], ["model.eval", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.Timer", "torch.no_grad", "torch.no_grad", "utils.Timer.timeit", "batch_data[].reshape", "batch_data[].reshape", "batch_data[].reshape", "model", "torch.cat().reshape", "torch.cat().reshape", "F.cross_entropy", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "F.cross_entropy", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "b.to", "actions_in.reshape.reshape", "bboxes_num.reshape.reshape", "range", "range", "activities_in[].reshape.reshape", "activities_in[].reshape", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.sum.item", "torch.sum.item", "total_loss.item", "actions_in_nopad.append", "actions_in_nopad.append", "torch.cat", "torch.cat", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.argmax.int", "actions_in.reshape.int", "torch.argmax.int", "activities_in[].reshape.int"], "function", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.Timer.timeit", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.utils.AverageMeter.update"], ["", "def", "test_collective", "(", "data_loader", ",", "model", ",", "device", ",", "epoch", ",", "cfg", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "actions_meter", "=", "AverageMeter", "(", ")", "\n", "activities_meter", "=", "AverageMeter", "(", ")", "\n", "loss_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "epoch_timer", "=", "Timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_data", "in", "data_loader", ":", "\n", "# prepare batch data", "\n", "            ", "batch_data", "=", "[", "b", ".", "to", "(", "device", "=", "device", ")", "for", "b", "in", "batch_data", "]", "\n", "batch_size", "=", "batch_data", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "num_frames", "=", "batch_data", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "actions_in", "=", "batch_data", "[", "2", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ",", "cfg", ".", "num_boxes", ")", ")", "\n", "activities_in", "=", "batch_data", "[", "3", "]", ".", "reshape", "(", "(", "batch_size", ",", "num_frames", ")", ")", "\n", "bboxes_num", "=", "batch_data", "[", "4", "]", ".", "reshape", "(", "batch_size", ",", "num_frames", ")", "\n", "\n", "# forward", "\n", "actions_scores", ",", "activities_scores", "=", "model", "(", "(", "batch_data", "[", "0", "]", ",", "batch_data", "[", "1", "]", ",", "batch_data", "[", "4", "]", ")", ")", "\n", "\n", "actions_in_nopad", "=", "[", "]", "\n", "\n", "if", "cfg", ".", "training_stage", "==", "1", ":", "\n", "                ", "actions_in", "=", "actions_in", ".", "reshape", "(", "(", "batch_size", "*", "num_frames", ",", "cfg", ".", "num_boxes", ",", ")", ")", "\n", "bboxes_num", "=", "bboxes_num", ".", "reshape", "(", "batch_size", "*", "num_frames", ",", ")", "\n", "for", "bt", "in", "range", "(", "batch_size", "*", "num_frames", ")", ":", "\n", "                    ", "N", "=", "bboxes_num", "[", "bt", "]", "\n", "actions_in_nopad", ".", "append", "(", "actions_in", "[", "bt", ",", ":", "N", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "for", "b", "in", "range", "(", "batch_size", ")", ":", "\n", "                    ", "N", "=", "bboxes_num", "[", "b", "]", "[", "0", "]", "\n", "actions_in_nopad", ".", "append", "(", "actions_in", "[", "b", "]", "[", "0", "]", "[", ":", "N", "]", ")", "\n", "", "", "actions_in", "=", "torch", ".", "cat", "(", "actions_in_nopad", ",", "dim", "=", "0", ")", ".", "reshape", "(", "-", "1", ",", ")", "#ALL_N,", "\n", "\n", "if", "cfg", ".", "training_stage", "==", "1", ":", "\n", "                ", "activities_in", "=", "activities_in", ".", "reshape", "(", "-", "1", ",", ")", "\n", "", "else", ":", "\n", "                ", "activities_in", "=", "activities_in", "[", ":", ",", "0", "]", ".", "reshape", "(", "batch_size", ",", ")", "\n", "\n", "", "actions_loss", "=", "F", ".", "cross_entropy", "(", "actions_scores", ",", "actions_in", ")", "\n", "actions_labels", "=", "torch", ".", "argmax", "(", "actions_scores", ",", "dim", "=", "1", ")", "#ALL_N,", "\n", "actions_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "actions_labels", ".", "int", "(", ")", ",", "actions_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "# Predict activities", "\n", "activities_loss", "=", "F", ".", "cross_entropy", "(", "activities_scores", ",", "activities_in", ")", "\n", "activities_labels", "=", "torch", ".", "argmax", "(", "activities_scores", ",", "dim", "=", "1", ")", "#B,", "\n", "activities_correct", "=", "torch", ".", "sum", "(", "torch", ".", "eq", "(", "activities_labels", ".", "int", "(", ")", ",", "activities_in", ".", "int", "(", ")", ")", ".", "float", "(", ")", ")", "\n", "\n", "# Get accuracy", "\n", "actions_accuracy", "=", "actions_correct", ".", "item", "(", ")", "/", "actions_scores", ".", "shape", "[", "0", "]", "\n", "activities_accuracy", "=", "activities_correct", ".", "item", "(", ")", "/", "activities_scores", ".", "shape", "[", "0", "]", "\n", "\n", "actions_meter", ".", "update", "(", "actions_accuracy", ",", "actions_scores", ".", "shape", "[", "0", "]", ")", "\n", "activities_meter", ".", "update", "(", "activities_accuracy", ",", "activities_scores", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# Total loss", "\n", "total_loss", "=", "activities_loss", "+", "cfg", ".", "actions_loss_weight", "*", "actions_loss", "\n", "loss_meter", ".", "update", "(", "total_loss", ".", "item", "(", ")", ",", "batch_size", ")", "\n", "\n", "", "", "test_info", "=", "{", "\n", "'time'", ":", "epoch_timer", ".", "timeit", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'loss'", ":", "loss_meter", ".", "avg", ",", "\n", "'activities_acc'", ":", "activities_meter", ".", "avg", "*", "100", ",", "\n", "'actions_acc'", ":", "actions_meter", ".", "avg", "*", "100", "\n", "}", "\n", "\n", "return", "test_info", "\n", "", ""]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyInception_v3.__init__": [[8, 26], ["torch.Module.__init__", "torchvision.inception_v3"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "transform_input", "=", "False", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "super", "(", "MyInception_v3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "transform_input", "=", "transform_input", "\n", "inception", "=", "models", ".", "inception_v3", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "self", ".", "Conv2d_1a_3x3", "=", "inception", ".", "Conv2d_1a_3x3", "\n", "self", ".", "Conv2d_2a_3x3", "=", "inception", ".", "Conv2d_2a_3x3", "\n", "self", ".", "Conv2d_2b_3x3", "=", "inception", ".", "Conv2d_2b_3x3", "\n", "self", ".", "Conv2d_3b_1x1", "=", "inception", ".", "Conv2d_3b_1x1", "\n", "self", ".", "Conv2d_4a_3x3", "=", "inception", ".", "Conv2d_4a_3x3", "\n", "self", ".", "Mixed_5b", "=", "inception", ".", "Mixed_5b", "\n", "self", ".", "Mixed_5c", "=", "inception", ".", "Mixed_5c", "\n", "self", ".", "Mixed_5d", "=", "inception", ".", "Mixed_5d", "\n", "self", ".", "Mixed_6a", "=", "inception", ".", "Mixed_6a", "\n", "self", ".", "Mixed_6b", "=", "inception", ".", "Mixed_6b", "\n", "self", ".", "Mixed_6c", "=", "inception", ".", "Mixed_6c", "\n", "self", ".", "Mixed_6d", "=", "inception", ".", "Mixed_6d", "\n", "self", ".", "Mixed_6e", "=", "inception", ".", "Mixed_6e", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyInception_v3.forward": [[27, 71], ["backbone.MyInception_v3.Conv2d_1a_3x3", "backbone.MyInception_v3.Conv2d_2a_3x3", "backbone.MyInception_v3.Conv2d_2b_3x3", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "backbone.MyInception_v3.Conv2d_3b_1x1", "backbone.MyInception_v3.Conv2d_4a_3x3", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "backbone.MyInception_v3.Mixed_5b", "backbone.MyInception_v3.Mixed_5c", "backbone.MyInception_v3.Mixed_5d", "outputs.append", "backbone.MyInception_v3.Mixed_6a", "backbone.MyInception_v3.Mixed_6b", "backbone.MyInception_v3.Mixed_6c", "backbone.MyInception_v3.Mixed_6d", "backbone.MyInception_v3.Mixed_6e", "outputs.append", "x.clone.clone.clone"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outputs", "=", "[", "]", "\n", "\n", "if", "self", ".", "transform_input", ":", "\n", "            ", "x", "=", "x", ".", "clone", "(", ")", "\n", "x", "[", ":", ",", "0", "]", "=", "x", "[", ":", ",", "0", "]", "*", "(", "0.229", "/", "0.5", ")", "+", "(", "0.485", "-", "0.5", ")", "/", "0.5", "\n", "x", "[", ":", ",", "1", "]", "=", "x", "[", ":", ",", "1", "]", "*", "(", "0.224", "/", "0.5", ")", "+", "(", "0.456", "-", "0.5", ")", "/", "0.5", "\n", "x", "[", ":", ",", "2", "]", "=", "x", "[", ":", ",", "2", "]", "*", "(", "0.225", "/", "0.5", ")", "+", "(", "0.406", "-", "0.5", ")", "/", "0.5", "\n", "# 299 x 299 x 3", "\n", "", "x", "=", "self", ".", "Conv2d_1a_3x3", "(", "x", ")", "\n", "# 149 x 149 x 32", "\n", "x", "=", "self", ".", "Conv2d_2a_3x3", "(", "x", ")", "\n", "# 147 x 147 x 32", "\n", "x", "=", "self", ".", "Conv2d_2b_3x3", "(", "x", ")", "\n", "# 147 x 147 x 64", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "# 73 x 73 x 64", "\n", "x", "=", "self", ".", "Conv2d_3b_1x1", "(", "x", ")", "\n", "# 73 x 73 x 80", "\n", "x", "=", "self", ".", "Conv2d_4a_3x3", "(", "x", ")", "\n", "# 71 x 71 x 192", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "# 35 x 35 x 192", "\n", "x", "=", "self", ".", "Mixed_5b", "(", "x", ")", "\n", "# 35 x 35 x 256", "\n", "x", "=", "self", ".", "Mixed_5c", "(", "x", ")", "\n", "# 35 x 35 x 288", "\n", "x", "=", "self", ".", "Mixed_5d", "(", "x", ")", "\n", "# 35 x 35 x 288", "\n", "outputs", ".", "append", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "Mixed_6a", "(", "x", ")", "\n", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6b", "(", "x", ")", "\n", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6c", "(", "x", ")", "\n", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6d", "(", "x", ")", "\n", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6e", "(", "x", ")", "\n", "# 17 x 17 x 768", "\n", "outputs", ".", "append", "(", "x", ")", "\n", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyVGG16.__init__": [[74, 80], ["torch.Module.__init__", "torchvision.vgg16"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "super", "(", "MyVGG16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "vgg", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "self", ".", "features", "=", "vgg", ".", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyVGG16.forward": [[81, 84], ["backbone.MyVGG16.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "[", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyVGG19.__init__": [[87, 93], ["torch.Module.__init__", "torchvision.vgg19"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "super", "(", "MyVGG19", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "vgg", "=", "models", ".", "vgg19", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "self", ".", "features", "=", "vgg", ".", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyVGG19.forward": [[94, 97], ["backbone.MyVGG19.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "[", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__": [[100, 106], ["torch.Module.__init__", "torchvision.mobilenet_v2"], "methods", ["home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "super", "(", "MyMobileNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "mobileNet", "=", "models", ".", "mobilenet_v2", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "self", ".", "features", "=", "mobileNet", ".", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.kuangzijian_Improved-Actor-Relation-Graph-based-Group-Activity-Recognition.None.backbone.MyMobileNet.forward": [[107, 110], ["backbone.MyMobileNet.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "[", "x", "]", "\n", "# END: Original code by Zijian and Xinran", ""]]}