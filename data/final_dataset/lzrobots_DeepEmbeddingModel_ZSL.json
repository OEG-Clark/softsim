{"home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.CUB_attribute.weight_variable": [[12, 15], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.CUB_attribute.bias_variable": [[16, 19], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.CUB_attribute.compute_accuracy": [[21, 35], ["sess.run", "numpy.squeeze", "numpy.squeeze", "test_label.astype.astype", "range", "tensorflow.equal", "tensorflow.reduce_mean", "sess.run", "numpy.asarray", "numpy.asarray", "kNN.kNNClassify", "tensorflow.cast"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify"], ["", "def", "compute_accuracy", "(", "test_att", ",", "test_visual", ",", "test_id", ",", "test_label", ")", ":", "\n", "    ", "global", "left_a2", "\n", "att_pre", "=", "sess", ".", "run", "(", "left_a2", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", "}", ")", "\n", "test_id", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_id", ")", ")", "\n", "outpre", "=", "[", "0", "]", "*", "2933", "\n", "test_label", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_label", ")", ")", "\n", "test_label", "=", "test_label", ".", "astype", "(", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "2933", ")", ":", "\n", "        ", "outputLabel", "=", "kNN", ".", "kNNClassify", "(", "test_visual", "[", "i", ",", ":", "]", ",", "att_pre", ",", "test_id", ",", "1", ")", "\n", "outpre", "[", "i", "]", "=", "outputLabel", "\n", "", "correct_prediction", "=", "tf", ".", "equal", "(", "outpre", ",", "test_label", ")", "\n", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "result", "=", "sess", ".", "run", "(", "accuracy", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", ",", "visual_features", ":", "test_visual", "}", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.CUB_attribute.data_iterator": [[61, 76], ["numpy.arange", "numpy.random.shuffle", "range", "len", "len", "visual_batch.astype.astype"], "function", ["None"], ["def", "data_iterator", "(", ")", ":", "\n", "    ", "\"\"\" A simple data iterator \"\"\"", "\n", "batch_idx", "=", "0", "\n", "while", "True", ":", "\n", "# shuffle labels and features", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "shuf_visual", "=", "x", "[", "idxs", "]", "\n", "shuf_att", "=", "att", "[", "idxs", "]", "\n", "batch_size", "=", "100", "\n", "for", "batch_idx", "in", "range", "(", "0", ",", "len", "(", "x", ")", ",", "batch_size", ")", ":", "\n", "            ", "visual_batch", "=", "shuf_visual", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "visual_batch", "=", "visual_batch", ".", "astype", "(", "\"float32\"", ")", "\n", "att_batch", "=", "shuf_att", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "yield", "att_batch", ",", "visual_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.aPY_GBU.weight_variable": [[10, 13], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.aPY_GBU.bias_variable": [[15, 18], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.aPY_GBU.compute_accuracy": [[20, 39], ["sess.run", "numpy.squeeze", "numpy.squeeze", "test_label.astype.astype", "range", "numpy.array", "numpy.unique", "numpy.asarray", "numpy.asarray", "kNN.kNNClassify", "sklearn.metrics.accuracy_score", "numpy.nonzero"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify"], ["", "def", "compute_accuracy", "(", "test_att", ",", "test_visual", ",", "test_id", ",", "test_label", ")", ":", "\n", "    ", "global", "left_a2", "\n", "att_pre", "=", "sess", ".", "run", "(", "left_a2", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", "}", ")", "\n", "test_id", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_id", ")", ")", "\n", "outpre", "=", "[", "0", "]", "*", "test_visual", ".", "shape", "[", "0", "]", "# CUB 2933", "\n", "test_label", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_label", ")", ")", "\n", "test_label", "=", "test_label", ".", "astype", "(", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "test_visual", ".", "shape", "[", "0", "]", ")", ":", "# CUB 2933", "\n", "        ", "outputLabel", "=", "kNN", ".", "kNNClassify", "(", "test_visual", "[", "i", ",", ":", "]", ",", "att_pre", ",", "test_id", ",", "1", ")", "\n", "outpre", "[", "i", "]", "=", "outputLabel", "\n", "# compute averaged per class accuracy", "\n", "", "outpre", "=", "np", ".", "array", "(", "outpre", ",", "dtype", "=", "'int'", ")", "\n", "unique_labels", "=", "np", ".", "unique", "(", "test_label", ")", "\n", "acc", "=", "0", "\n", "for", "l", "in", "unique_labels", ":", "\n", "        ", "idx", "=", "np", ".", "nonzero", "(", "test_label", "==", "l", ")", "[", "0", "]", "\n", "acc", "+=", "accuracy_score", "(", "test_label", "[", "idx", "]", ",", "outpre", "[", "idx", "]", ")", "\n", "", "acc", "=", "acc", "/", "unique_labels", ".", "shape", "[", "0", "]", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.aPY_GBU.data_iterator": [[69, 84], ["numpy.arange", "numpy.random.shuffle", "range", "len", "len", "visual_batch.astype.astype"], "function", ["None"], ["def", "data_iterator", "(", ")", ":", "\n", "    ", "\"\"\" A simple data iterator \"\"\"", "\n", "batch_idx", "=", "0", "\n", "while", "True", ":", "\n", "# shuffle labels and features", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "shuf_visual", "=", "x", "[", "idxs", "]", "\n", "shuf_att", "=", "att", "[", "idxs", "]", "\n", "batch_size", "=", "64", "\n", "for", "batch_idx", "in", "range", "(", "0", ",", "len", "(", "x", ")", ",", "batch_size", ")", ":", "\n", "            ", "visual_batch", "=", "shuf_visual", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "visual_batch", "=", "visual_batch", ".", "astype", "(", "\"float32\"", ")", "\n", "att_batch", "=", "shuf_att", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "yield", "att_batch", ",", "visual_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN_cosine.createDataSet": [[19, 24], ["array"], "function", ["None"], ["def", "createDataSet", "(", ")", ":", "\n", "# create a matrix: each row as a sample  ", "\n", "    ", "group", "=", "array", "(", "[", "[", "1.0", ",", "0.9", "]", ",", "[", "1.0", ",", "1.0", "]", ",", "[", "0.1", ",", "0.2", "]", ",", "[", "0.0", ",", "0.1", "]", "]", ")", "\n", "labels", "=", "[", "'A'", ",", "'A'", ",", "'B'", ",", "'B'", "]", "# four samples and two classes  ", "\n", "return", "group", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN_cosine.cosine_distance": [[25, 32], ["numpy.inner", "numpy.inner", "numpy.inner", "math.sqrt"], "function", ["None"], ["", "def", "cosine_distance", "(", "v1", ",", "v2", ")", ":", "\n", "    ", "\"compute cosine similarity of v1 to v2: (v1 dot v2)/{||v1||*||v2||)\"", "\n", "\n", "v1_sq", "=", "np", ".", "inner", "(", "v1", ",", "v1", ")", "\n", "v2_sq", "=", "np", ".", "inner", "(", "v2", ",", "v2", ")", "\n", "dis", "=", "1", "-", "np", ".", "inner", "(", "v1", ",", "v2", ")", "/", "math", ".", "sqrt", "(", "v1_sq", "*", "v2_sq", ")", "\n", "return", "dis", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN_cosine.kNNClassify": [[35, 64], ["range", "argsort", "xrange", "classCount.items", "kNN_cosine.cosine_distance", "classCount.get"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN_cosine.cosine_distance"], ["", "def", "kNNClassify", "(", "newInput", ",", "dataSet", ",", "labels", ",", "k", ")", ":", "\n", "    ", "global", "distance", "\n", "distance", "=", "[", "0", "]", "*", "dataSet", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "dataSet", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "distance", "[", "i", "]", "=", "cosine_distance", "(", "newInput", ",", "dataSet", "[", "i", "]", ")", "\n", "\n", "\n", "## step 2: sort the distance  ", "\n", "# argsort() returns the indices that would sort an array in a ascending order  ", "\n", "", "sortedDistIndices", "=", "argsort", "(", "distance", ")", "\n", "\n", "classCount", "=", "{", "}", "# define a dictionary (can be append element)  ", "\n", "for", "i", "in", "xrange", "(", "k", ")", ":", "\n", "## step 3: choose the min k distance  ", "\n", "        ", "voteLabel", "=", "labels", "[", "sortedDistIndices", "[", "i", "]", "]", "\n", "\n", "## step 4: count the times labels occur  ", "\n", "# when the key voteLabel is not in dictionary classCount, get()  ", "\n", "# will return 0  ", "\n", "classCount", "[", "voteLabel", "]", "=", "classCount", ".", "get", "(", "voteLabel", ",", "0", ")", "+", "1", "\n", "\n", "## step 5: the max voted class will return  ", "\n", "", "maxCount", "=", "0", "\n", "for", "key", ",", "value", "in", "classCount", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ">", "maxCount", ":", "\n", "            ", "maxCount", "=", "value", "\n", "maxIndex", "=", "key", "\n", "\n", "", "", "return", "maxIndex", "\n", "#return sortedDistIndices   ", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_fusion.weight_variable": [[10, 13], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_fusion.bias_variable": [[14, 17], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_fusion.compute_accuracy": [[19, 34], ["sess.run", "numpy.squeeze", "numpy.squeeze", "test_label.astype.astype", "range", "tensorflow.equal", "tensorflow.reduce_mean", "sess.run", "numpy.asarray", "numpy.asarray", "kNN.kNNClassify", "tensorflow.cast"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify"], ["", "def", "compute_accuracy", "(", "test_att", ",", "test_word", ",", "test_visual", ",", "test_id", ",", "test_label", ")", ":", "\n", "    ", "global", "center_1", "\n", "pre", "=", "sess", ".", "run", "(", "center_1", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", ",", "word_features", ":", "test_word", "}", ")", "\n", "test_id", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_id", ")", ")", "\n", "outpre", "=", "[", "0", "]", "*", "6180", "\n", "test_label", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_label", ")", ")", "\n", "test_label", "=", "test_label", ".", "astype", "(", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "6180", ")", ":", "\n", "        ", "outputLabel", "=", "kNN", ".", "kNNClassify", "(", "test_visual", "[", "i", ",", ":", "]", ",", "pre", ",", "test_id", ",", "1", ")", "\n", "outpre", "[", "i", "]", "=", "outputLabel", "\n", "", "correct_prediction", "=", "tf", ".", "equal", "(", "outpre", ",", "test_label", ")", "\n", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "result", "=", "sess", ".", "run", "(", "accuracy", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", ",", "\n", "word_features", ":", "test_word", ",", "visual_features", ":", "test_visual", "}", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_fusion.data_iterator": [[73, 90], ["numpy.arange", "numpy.random.shuffle", "range", "len", "len", "visual_batch.astype.astype"], "function", ["None"], ["def", "data_iterator", "(", ")", ":", "\n", "    ", "\"\"\" A simple data iterator \"\"\"", "\n", "batch_idx", "=", "0", "\n", "while", "True", ":", "\n", "# shuffle labels and features", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "shuf_visual", "=", "x", "[", "idxs", "]", "\n", "shuf_att", "=", "att", "[", "idxs", "]", "\n", "shuf_word", "=", "word", "[", "idxs", "]", "\n", "batch_size", "=", "64", "\n", "for", "batch_idx", "in", "range", "(", "0", ",", "len", "(", "x", ")", ",", "batch_size", ")", ":", "\n", "            ", "visual_batch", "=", "shuf_visual", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "visual_batch", "=", "visual_batch", ".", "astype", "(", "\"float32\"", ")", "\n", "att_batch", "=", "shuf_att", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "word_batch", "=", "shuf_word", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "yield", "att_batch", ",", "word_batch", ",", "visual_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.CUB1_GBU.weight_variable": [[9, 12], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.CUB1_GBU.bias_variable": [[13, 16], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.CUB1_GBU.compute_accuracy": [[17, 36], ["sess.run", "numpy.squeeze", "numpy.squeeze", "test_label.astype.astype", "range", "numpy.array", "numpy.unique", "numpy.asarray", "numpy.asarray", "kNN_cosine.kNNClassify", "sklearn.metrics.accuracy_score", "numpy.nonzero"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify"], ["", "def", "compute_accuracy", "(", "test_att", ",", "test_visual", ",", "test_id", ",", "test_label", ")", ":", "\n", "    ", "global", "left_a2", "\n", "att_pre", "=", "sess", ".", "run", "(", "left_a2", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", "}", ")", "\n", "test_id", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_id", ")", ")", "\n", "outpre", "=", "[", "0", "]", "*", "test_visual", ".", "shape", "[", "0", "]", "# CUB 2933", "\n", "test_label", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_label", ")", ")", "\n", "test_label", "=", "test_label", ".", "astype", "(", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "test_visual", ".", "shape", "[", "0", "]", ")", ":", "# CUB 2933", "\n", "        ", "outputLabel", "=", "kNN_cosine", ".", "kNNClassify", "(", "test_visual", "[", "i", ",", ":", "]", ",", "att_pre", ",", "test_id", ",", "1", ")", "\n", "outpre", "[", "i", "]", "=", "outputLabel", "\n", "#compute averaged per class accuracy", "\n", "", "outpre", "=", "np", ".", "array", "(", "outpre", ",", "dtype", "=", "'int'", ")", "\n", "unique_labels", "=", "np", ".", "unique", "(", "test_label", ")", "\n", "acc", "=", "0", "\n", "for", "l", "in", "unique_labels", ":", "\n", "        ", "idx", "=", "np", ".", "nonzero", "(", "test_label", "==", "l", ")", "[", "0", "]", "\n", "acc", "+=", "accuracy_score", "(", "test_label", "[", "idx", "]", ",", "outpre", "[", "idx", "]", ")", "\n", "", "acc", "=", "acc", "/", "unique_labels", ".", "shape", "[", "0", "]", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.CUB1_GBU.data_iterator": [[65, 80], ["numpy.arange", "numpy.random.shuffle", "range", "len", "len", "visual_batch.astype.astype"], "function", ["None"], ["def", "data_iterator", "(", ")", ":", "\n", "    ", "\"\"\" A simple data iterator \"\"\"", "\n", "batch_idx", "=", "0", "\n", "while", "True", ":", "\n", "# shuffle labels and features", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "shuf_visual", "=", "x", "[", "idxs", "]", "\n", "shuf_att", "=", "att", "[", "idxs", "]", "\n", "batch_size", "=", "100", "\n", "for", "batch_idx", "in", "range", "(", "0", ",", "len", "(", "x", ")", ",", "batch_size", ")", ":", "\n", "            ", "visual_batch", "=", "shuf_visual", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "visual_batch", "=", "visual_batch", ".", "astype", "(", "\"float32\"", ")", "\n", "att_batch", "=", "shuf_att", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "yield", "att_batch", ",", "visual_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.SUN_GBU.weight_variable": [[10, 13], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.SUN_GBU.bias_variable": [[15, 18], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.SUN_GBU.compute_accuracy": [[20, 39], ["sess.run", "numpy.squeeze", "numpy.squeeze", "test_label.astype.astype", "range", "numpy.array", "numpy.unique", "numpy.asarray", "numpy.asarray", "kNN.kNNClassify", "sklearn.metrics.accuracy_score", "numpy.nonzero"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify"], ["", "def", "compute_accuracy", "(", "test_att", ",", "test_visual", ",", "test_id", ",", "test_label", ")", ":", "\n", "    ", "global", "left_a2", "\n", "att_pre", "=", "sess", ".", "run", "(", "left_a2", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", "}", ")", "\n", "test_id", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_id", ")", ")", "\n", "outpre", "=", "[", "0", "]", "*", "test_visual", ".", "shape", "[", "0", "]", "# CUB 2933", "\n", "test_label", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_label", ")", ")", "\n", "test_label", "=", "test_label", ".", "astype", "(", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "test_visual", ".", "shape", "[", "0", "]", ")", ":", "# CUB 2933", "\n", "        ", "outputLabel", "=", "kNN", ".", "kNNClassify", "(", "test_visual", "[", "i", ",", ":", "]", ",", "att_pre", ",", "test_id", ",", "1", ")", "\n", "outpre", "[", "i", "]", "=", "outputLabel", "\n", "# compute averaged per class accuracy", "\n", "", "outpre", "=", "np", ".", "array", "(", "outpre", ",", "dtype", "=", "'int'", ")", "\n", "unique_labels", "=", "np", ".", "unique", "(", "test_label", ")", "\n", "acc", "=", "0", "\n", "for", "l", "in", "unique_labels", ":", "\n", "        ", "idx", "=", "np", ".", "nonzero", "(", "test_label", "==", "l", ")", "[", "0", "]", "\n", "acc", "+=", "accuracy_score", "(", "test_label", "[", "idx", "]", ",", "outpre", "[", "idx", "]", ")", "\n", "", "acc", "=", "acc", "/", "unique_labels", ".", "shape", "[", "0", "]", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.SUN_GBU.data_iterator": [[69, 84], ["numpy.arange", "numpy.random.shuffle", "range", "len", "len", "visual_batch.astype.astype"], "function", ["None"], ["def", "data_iterator", "(", ")", ":", "\n", "    ", "\"\"\" A simple data iterator \"\"\"", "\n", "batch_idx", "=", "0", "\n", "while", "True", ":", "\n", "# shuffle labels and features", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "shuf_visual", "=", "x", "[", "idxs", "]", "\n", "shuf_att", "=", "att", "[", "idxs", "]", "\n", "batch_size", "=", "64", "\n", "for", "batch_idx", "in", "range", "(", "0", ",", "len", "(", "x", ")", ",", "batch_size", ")", ":", "\n", "            ", "visual_batch", "=", "shuf_visual", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "visual_batch", "=", "visual_batch", ".", "astype", "(", "\"float32\"", ")", "\n", "att_batch", "=", "shuf_att", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "yield", "att_batch", ",", "visual_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA2_GBU.weight_variable": [[10, 13], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA2_GBU.bias_variable": [[15, 18], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA2_GBU.compute_accuracy": [[20, 39], ["sess.run", "numpy.squeeze", "numpy.squeeze", "test_label.astype.astype", "range", "numpy.array", "numpy.unique", "numpy.asarray", "numpy.asarray", "kNN.kNNClassify", "sklearn.metrics.accuracy_score", "numpy.nonzero"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify"], ["", "def", "compute_accuracy", "(", "test_att", ",", "test_visual", ",", "test_id", ",", "test_label", ")", ":", "\n", "    ", "global", "left_a2", "\n", "att_pre", "=", "sess", ".", "run", "(", "left_a2", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", "}", ")", "\n", "test_id", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_id", ")", ")", "\n", "outpre", "=", "[", "0", "]", "*", "test_visual", ".", "shape", "[", "0", "]", "# CUB 2933", "\n", "test_label", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_label", ")", ")", "\n", "test_label", "=", "test_label", ".", "astype", "(", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "test_visual", ".", "shape", "[", "0", "]", ")", ":", "# CUB 2933", "\n", "        ", "outputLabel", "=", "kNN", ".", "kNNClassify", "(", "test_visual", "[", "i", ",", ":", "]", ",", "att_pre", ",", "test_id", ",", "1", ")", "\n", "outpre", "[", "i", "]", "=", "outputLabel", "\n", "# compute averaged per class accuracy", "\n", "", "outpre", "=", "np", ".", "array", "(", "outpre", ",", "dtype", "=", "'int'", ")", "\n", "unique_labels", "=", "np", ".", "unique", "(", "test_label", ")", "\n", "acc", "=", "0", "\n", "for", "l", "in", "unique_labels", ":", "\n", "        ", "idx", "=", "np", ".", "nonzero", "(", "test_label", "==", "l", ")", "[", "0", "]", "\n", "acc", "+=", "accuracy_score", "(", "test_label", "[", "idx", "]", ",", "outpre", "[", "idx", "]", ")", "\n", "", "acc", "=", "acc", "/", "unique_labels", ".", "shape", "[", "0", "]", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA2_GBU.data_iterator": [[69, 84], ["numpy.arange", "numpy.random.shuffle", "range", "len", "len", "visual_batch.astype.astype"], "function", ["None"], ["def", "data_iterator", "(", ")", ":", "\n", "    ", "\"\"\" A simple data iterator \"\"\"", "\n", "batch_idx", "=", "0", "\n", "while", "True", ":", "\n", "# shuffle labels and features", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "shuf_visual", "=", "x", "[", "idxs", "]", "\n", "shuf_att", "=", "att", "[", "idxs", "]", "\n", "batch_size", "=", "64", "\n", "for", "batch_idx", "in", "range", "(", "0", ",", "len", "(", "x", ")", ",", "batch_size", ")", ":", "\n", "            ", "visual_batch", "=", "shuf_visual", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "visual_batch", "=", "visual_batch", ".", "astype", "(", "\"float32\"", ")", "\n", "att_batch", "=", "shuf_att", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "yield", "att_batch", ",", "visual_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA1_GBU.weight_variable": [[9, 12], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA1_GBU.bias_variable": [[13, 16], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA1_GBU.compute_accuracy": [[17, 36], ["sess.run", "numpy.squeeze", "numpy.squeeze", "test_label.astype.astype", "range", "numpy.array", "numpy.unique", "numpy.asarray", "numpy.asarray", "kNN.kNNClassify", "sklearn.metrics.accuracy_score", "numpy.nonzero"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify"], ["", "def", "compute_accuracy", "(", "test_att", ",", "test_visual", ",", "test_id", ",", "test_label", ")", ":", "\n", "    ", "global", "left_a2", "\n", "att_pre", "=", "sess", ".", "run", "(", "left_a2", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", "}", ")", "\n", "test_id", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_id", ")", ")", "\n", "outpre", "=", "[", "0", "]", "*", "test_visual", ".", "shape", "[", "0", "]", "# CUB 2933", "\n", "test_label", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_label", ")", ")", "\n", "test_label", "=", "test_label", ".", "astype", "(", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "test_visual", ".", "shape", "[", "0", "]", ")", ":", "# CUB 2933", "\n", "        ", "outputLabel", "=", "kNN", ".", "kNNClassify", "(", "test_visual", "[", "i", ",", ":", "]", ",", "att_pre", ",", "test_id", ",", "1", ")", "\n", "outpre", "[", "i", "]", "=", "outputLabel", "\n", "#compute averaged per class accuracy", "\n", "", "outpre", "=", "np", ".", "array", "(", "outpre", ",", "dtype", "=", "'int'", ")", "\n", "unique_labels", "=", "np", ".", "unique", "(", "test_label", ")", "\n", "acc", "=", "0", "\n", "for", "l", "in", "unique_labels", ":", "\n", "        ", "idx", "=", "np", ".", "nonzero", "(", "test_label", "==", "l", ")", "[", "0", "]", "\n", "acc", "+=", "accuracy_score", "(", "test_label", "[", "idx", "]", ",", "outpre", "[", "idx", "]", ")", "\n", "", "acc", "=", "acc", "/", "unique_labels", ".", "shape", "[", "0", "]", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA1_GBU.data_iterator": [[65, 80], ["numpy.arange", "numpy.random.shuffle", "range", "len", "len", "visual_batch.astype.astype"], "function", ["None"], ["def", "data_iterator", "(", ")", ":", "\n", "    ", "\"\"\" A simple data iterator \"\"\"", "\n", "batch_idx", "=", "0", "\n", "while", "True", ":", "\n", "# shuffle labels and features", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "shuf_visual", "=", "x", "[", "idxs", "]", "\n", "shuf_att", "=", "att", "[", "idxs", "]", "\n", "batch_size", "=", "64", "\n", "for", "batch_idx", "in", "range", "(", "0", ",", "len", "(", "x", ")", ",", "batch_size", ")", ":", "\n", "            ", "visual_batch", "=", "shuf_visual", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "visual_batch", "=", "visual_batch", ".", "astype", "(", "\"float32\"", ")", "\n", "att_batch", "=", "shuf_att", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "yield", "att_batch", ",", "visual_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_wordvector.weight_variable": [[10, 13], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_wordvector.bias_variable": [[14, 17], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_wordvector.compute_accuracy": [[19, 34], ["sess.run", "numpy.squeeze", "numpy.squeeze", "test_label.astype.astype", "range", "tensorflow.equal", "tensorflow.reduce_mean", "sess.run", "numpy.asarray", "numpy.asarray", "kNN_cosine.kNNClassify", "tensorflow.cast"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify"], ["", "def", "compute_accuracy", "(", "test_word", ",", "test_visual", ",", "test_id", ",", "test_label", ")", ":", "\n", "    ", "global", "left_w1", "\n", "word_pre", "=", "sess", ".", "run", "(", "left_w1", ",", "feed_dict", "=", "{", "word_features", ":", "test_word", "}", ")", "\n", "test_id", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_id", ")", ")", "\n", "outpre", "=", "[", "0", "]", "*", "6180", "\n", "test_label", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_label", ")", ")", "\n", "test_label", "=", "test_label", ".", "astype", "(", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "6180", ")", ":", "\n", "        ", "outputLabel", "=", "kNN_cosine", ".", "kNNClassify", "(", "test_visual", "[", "i", ",", ":", "]", ",", "word_pre", ",", "test_id", ",", "1", ")", "\n", "outpre", "[", "i", "]", "=", "outputLabel", "\n", "", "correct_prediction", "=", "tf", ".", "equal", "(", "outpre", ",", "test_label", ")", "\n", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "result", "=", "sess", ".", "run", "(", "accuracy", ",", "feed_dict", "=", "{", "\n", "word_features", ":", "test_word", ",", "visual_features", ":", "test_visual", "}", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_wordvector.data_iterator": [[65, 80], ["numpy.arange", "numpy.random.shuffle", "range", "len", "len", "visual_batch.astype.astype"], "function", ["None"], ["def", "data_iterator", "(", ")", ":", "\n", "    ", "\"\"\" A simple data iterator \"\"\"", "\n", "batch_idx", "=", "0", "\n", "while", "True", ":", "\n", "# shuffle labels and features", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "shuf_visual", "=", "x", "[", "idxs", "]", "\n", "shuf_word", "=", "word", "[", "idxs", "]", "\n", "batch_size", "=", "64", "\n", "for", "batch_idx", "in", "range", "(", "0", ",", "len", "(", "x", ")", ",", "batch_size", ")", ":", "\n", "            ", "visual_batch", "=", "shuf_visual", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "visual_batch", "=", "visual_batch", ".", "astype", "(", "\"float32\"", ")", "\n", "word_batch", "=", "shuf_word", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "yield", "word_batch", ",", "visual_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_attribute.weight_variable": [[10, 13], ["tensorflow.truncated_normal", "tensorflow.Variable"], "function", ["None"], ["def", "weight_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "truncated_normal", "(", "shape", ",", "stddev", "=", "0.1", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_attribute.bias_variable": [[14, 17], ["tensorflow.constant", "tensorflow.Variable"], "function", ["None"], ["", "def", "bias_variable", "(", "shape", ")", ":", "\n", "    ", "initial", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_attribute.compute_accuracy": [[19, 34], ["sess.run", "numpy.squeeze", "numpy.squeeze", "test_label.astype.astype", "range", "tensorflow.equal", "tensorflow.reduce_mean", "sess.run", "numpy.asarray", "numpy.asarray", "kNN.kNNClassify", "tensorflow.cast"], "function", ["home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify"], ["", "def", "compute_accuracy", "(", "test_att", ",", "test_visual", ",", "test_id", ",", "test_label", ")", ":", "\n", "    ", "global", "left_a2", "\n", "att_pre", "=", "sess", ".", "run", "(", "left_a2", ",", "feed_dict", "=", "{", "att_features", ":", "test_att", "}", ")", "\n", "test_id", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_id", ")", ")", "\n", "outpre", "=", "[", "0", "]", "*", "6180", "# CUB 2933", "\n", "test_label", "=", "np", ".", "squeeze", "(", "np", ".", "asarray", "(", "test_label", ")", ")", "\n", "test_label", "=", "test_label", ".", "astype", "(", "\"float32\"", ")", "\n", "for", "i", "in", "range", "(", "6180", ")", ":", "# CUB 2933", "\n", "        ", "outputLabel", "=", "kNN", ".", "kNNClassify", "(", "test_visual", "[", "i", ",", ":", "]", ",", "att_pre", ",", "test_id", ",", "1", ")", "\n", "outpre", "[", "i", "]", "=", "outputLabel", "\n", "", "correct_prediction", "=", "tf", ".", "equal", "(", "outpre", ",", "test_label", ")", "\n", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "result", "=", "sess", ".", "run", "(", "accuracy", ",", "feed_dict", "=", "{", "\n", "att_features", ":", "test_att", ",", "visual_features", ":", "test_visual", "}", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.AwA_attribute.data_iterator": [[65, 80], ["numpy.arange", "numpy.random.shuffle", "range", "len", "len", "visual_batch.astype.astype"], "function", ["None"], ["def", "data_iterator", "(", ")", ":", "\n", "    ", "\"\"\" A simple data iterator \"\"\"", "\n", "batch_idx", "=", "0", "\n", "while", "True", ":", "\n", "# shuffle labels and features", "\n", "        ", "idxs", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "shuf_visual", "=", "x", "[", "idxs", "]", "\n", "shuf_att", "=", "att", "[", "idxs", "]", "\n", "batch_size", "=", "64", "\n", "for", "batch_idx", "in", "range", "(", "0", ",", "len", "(", "x", ")", ",", "batch_size", ")", ":", "\n", "            ", "visual_batch", "=", "shuf_visual", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "visual_batch", "=", "visual_batch", ".", "astype", "(", "\"float32\"", ")", "\n", "att_batch", "=", "shuf_att", "[", "batch_idx", ":", "batch_idx", "+", "batch_size", "]", "\n", "yield", "att_batch", ",", "visual_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.createDataSet": [[16, 21], ["array"], "function", ["None"], ["def", "createDataSet", "(", ")", ":", "\n", "# create a matrix: each row as a sample  ", "\n", "    ", "group", "=", "array", "(", "[", "[", "1.0", ",", "0.9", "]", ",", "[", "1.0", ",", "1.0", "]", ",", "[", "0.1", ",", "0.2", "]", ",", "[", "0.0", ",", "0.1", "]", "]", ")", "\n", "labels", "=", "[", "'A'", ",", "'A'", ",", "'B'", ",", "'B'", "]", "# four samples and two classes  ", "\n", "return", "group", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.lzrobots_DeepEmbeddingModel_ZSL.None.kNN.kNNClassify": [[24, 57], ["sum", "argsort", "xrange", "classCount.items", "tile", "classCount.get"], "function", ["None"], ["", "def", "kNNClassify", "(", "newInput", ",", "dataSet", ",", "labels", ",", "k", ")", ":", "\n", "    ", "numSamples", "=", "dataSet", ".", "shape", "[", "0", "]", "# shape[0] stands for the num of row  ", "\n", "\n", "## step 1: calculate Euclidean distance  ", "\n", "# tile(A, reps): Construct an array by repeating A reps times  ", "\n", "# the following copy numSamples rows for dataSet  ", "\n", "diff", "=", "tile", "(", "newInput", ",", "(", "numSamples", ",", "1", ")", ")", "-", "dataSet", "# Subtract element-wise  ", "\n", "squaredDiff", "=", "diff", "**", "2", "# squared for the subtract  ", "\n", "squaredDist", "=", "sum", "(", "squaredDiff", ",", "axis", "=", "1", ")", "# sum is performed by row  ", "\n", "distance", "=", "squaredDist", "**", "0.5", "\n", "\n", "## step 2: sort the distance  ", "\n", "# argsort() returns the indices that would sort an array in a ascending order  ", "\n", "sortedDistIndices", "=", "argsort", "(", "distance", ")", "\n", "\n", "classCount", "=", "{", "}", "# define a dictionary (can be append element)  ", "\n", "for", "i", "in", "xrange", "(", "k", ")", ":", "\n", "## step 3: choose the min k distance  ", "\n", "        ", "voteLabel", "=", "labels", "[", "sortedDistIndices", "[", "i", "]", "]", "\n", "\n", "## step 4: count the times labels occur  ", "\n", "# when the key voteLabel is not in dictionary classCount, get()  ", "\n", "# will return 0  ", "\n", "classCount", "[", "voteLabel", "]", "=", "classCount", ".", "get", "(", "voteLabel", ",", "0", ")", "+", "1", "\n", "\n", "## step 5: the max voted class will return  ", "\n", "", "maxCount", "=", "0", "\n", "for", "key", ",", "value", "in", "classCount", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ">", "maxCount", ":", "\n", "            ", "maxCount", "=", "value", "\n", "maxIndex", "=", "key", "\n", "\n", "", "", "return", "maxIndex", "\n", "#return sortedDistIndices   ", "\n"]]}