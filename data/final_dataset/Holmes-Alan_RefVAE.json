{"home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_4x.eval": [[77, 149], ["model.eval", "enc.eval", "dec.eval", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "sorted", "sorted", "range", "model.load_state_dict", "print", "os.path.join", "os.path.join", "len", "PIL.Image.open().convert", "image_utils.modcrop", "torch.load", "torch.load", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "print", "range", "PIL.Image.open", "len", "len", "PIL.Image.open().convert", "chop_forward.data[].cpu().permute", "chop_forward.clamp", "PIL.Image.fromarray().save", "print", "image_utils.modcrop.resize", "chop_forward.data[].cpu().permute", "chop_forward.clamp", "PIL.Image.fromarray().save", "print", "range", "torch.no_grad", "torch.no_grad", "eval_4x.chop_forward", "torch.no_grad", "torch.no_grad", "eval_4x.chop_forward", "numpy.random.rand", "PIL.Image.fromarray", "chop_forward.data[].cpu().permute", "chop_forward.clamp", "print", "PIL.Image.fromarray().save", "PIL.Image.open", "chop_forward.data[].cpu", "str().zfill", "PIL.Image.fromarray", "chop_forward.data[].cpu", "lr_name.zfill", "PIL.Image.fromarray", "numpy.uint8", "torch.no_grad", "torch.no_grad", "eval_4x.chop_forward", "numpy.uint8", "numpy.uint8", "chop_forward.data[].cpu", "str().zfill", "PIL.Image.fromarray", "lr_name.zfill", "str", "numpy.uint8", "lr_name.zfill", "str"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.modcrop", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.chop_forward"], ["def", "eval", "(", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "enc", ".", "eval", "(", ")", "\n", "dec", ".", "eval", "(", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "opt", ".", "model", ")", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "opt", ".", "model", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "print", "(", "opt", ".", "model", ")", "\n", "\n", "", "Ref_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "input_dataset", ",", "'Ref'", ")", "\n", "LR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "input_dataset", ",", "'LR'", ")", "\n", "SR_filename", "=", "opt", ".", "output_dataset", "\n", "\n", "lr_image", "=", "[", "join", "(", "LR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "lr_image", "=", "sorted", "(", "lr_image", ")", "\n", "ref_image", "=", "[", "join", "(", "Ref_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "Ref_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "ref_image", "=", "sorted", "(", "ref_image", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "lr_image", ")", ")", ":", "\n", "\n", "        ", "LR", "=", "Image", ".", "open", "(", "lr_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR", "=", "modcrop", "(", "LR", ",", "opt", ".", "up_factor", ")", "\n", "\n", "if", "len", "(", "ref_image", ")", "!=", "0", "and", "opt", ".", "use_ref", ":", "\n", "            ", "print", "(", "\"using ref images for SR\"", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "ref_image", ")", ")", ":", "\n", "                ", "Ref", "=", "Image", ".", "open", "(", "ref_image", "[", "j", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "prediction", "=", "chop_forward", "(", "Ref", ",", "LR", ")", "\n", "\n", "", "prediction", "=", "prediction", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clamp", "(", "0", ",", "255", ")", "\n", "lr_name", "=", "lr_image", "[", "i", "]", "[", "-", "8", ":", "-", "4", "]", "\n", "output_name", "=", "SR_filename", "+", "'/'", "+", "lr_name", ".", "zfill", "(", "6", ")", "+", "'_sample'", "+", "str", "(", "j", ")", ".", "zfill", "(", "5", ")", "+", "'.png'", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "output_name", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "if", "opt", ".", "use_img_self", ":", "\n", "                ", "print", "(", "\"using LR images itself for SR\"", ")", "\n", "Ref", "=", "LR", ".", "resize", "(", "(", "256", ",", "256", ")", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "prediction", "=", "chop_forward", "(", "Ref", ",", "LR", ")", "\n", "\n", "", "prediction", "=", "prediction", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clamp", "(", "0", ",", "255", ")", "\n", "lr_name", "=", "lr_image", "[", "i", "]", "[", "-", "8", ":", "-", "4", "]", "\n", "output_name", "=", "SR_filename", "+", "'/'", "+", "lr_name", ".", "zfill", "(", "6", ")", "+", "'_sample0.png'", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "output_name", ")", "\n", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"using random noise for SR\"", ")", "\n", "for", "j", "in", "range", "(", "opt", ".", "num_sample", ")", ":", "\n", "                    ", "a", "=", "np", ".", "random", ".", "rand", "(", "256", ",", "256", ",", "3", ")", "\n", "Ref", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "a", "*", "128", ")", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "prediction", "=", "chop_forward", "(", "Ref", ",", "LR", ")", "\n", "\n", "", "prediction", "=", "prediction", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clamp", "(", "0", ",", "255", ")", "\n", "lr_name", "=", "lr_image", "[", "i", "]", "[", "-", "8", ":", "-", "4", "]", "\n", "output_name", "=", "SR_filename", "+", "'/'", "+", "lr_name", ".", "zfill", "(", "6", ")", "+", "'_sample'", "+", "str", "(", "j", ")", ".", "zfill", "(", "5", ")", "+", "'.png'", "\n", "print", "(", "\"random SR: {}\"", ".", "format", "(", "j", ")", ")", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "output_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_4x.chop_forward": [[186, 203], ["transform().unsqueeze", "style_transform().unsqueeze", "torch.TensorDataset", "torch.DataLoader", "enumerate", "enc", "enc", "model", "transform", "style_transform", "batch[].to", "batch[].to", "F.interpolate"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform"], ["def", "chop_forward", "(", "ref", ",", "img", ")", ":", "\n", "\n", "    ", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "ref", "=", "style_transform", "(", "ref", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "ref", ",", "img", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "ref", ",", "input", "=", "batch", "[", "0", "]", ".", "to", "(", "device", ")", ",", "batch", "[", "1", "]", ".", "to", "(", "device", ")", "\n", "\n", "LR_feat", "=", "enc", "(", "F", ".", "interpolate", "(", "input", ",", "scale_factor", "=", "opt", ".", "up_factor", ",", "mode", "=", "'bicubic'", ")", ")", "\n", "ref_feat", "=", "enc", "(", "ref", ")", "\n", "SR", ",", "_", "=", "model", "(", "input", ",", "LR_feat", "[", "'r41'", "]", ",", "ref_feat", "[", "'r41'", "]", ")", "\n", "\n", "", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.TVLoss.__init__": [[8, 10], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "TVLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.TVLoss.forward": [[11, 21], ["image_utils.TVLoss._tensor_size", "image_utils.TVLoss._tensor_size", "torch.pow().sum", "torch.pow().sum", "x.size", "x.size", "x.size", "torch.pow", "torch.pow"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.TVLoss._tensor_size", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.TVLoss._tensor_size"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "h_x", "=", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "w_x", "=", "x", ".", "size", "(", ")", "[", "3", "]", "\n", "count_h", "=", "self", ".", "_tensor_size", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", ")", "\n", "count_w", "=", "self", ".", "_tensor_size", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", ")", "\n", "h_tv", "=", "torch", ".", "pow", "(", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "-", "x", "[", ":", ",", ":", ",", ":", "h_x", "-", "1", ",", ":", "]", ")", ",", "2", ")", ".", "sum", "(", ")", "\n", "w_tv", "=", "torch", ".", "pow", "(", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "-", "x", "[", ":", ",", ":", ",", ":", ",", ":", "w_x", "-", "1", "]", ")", ",", "2", ")", ".", "sum", "(", ")", "\n", "# return 2*(h_tv/count_h+w_tv/count_w)/batch_size", "\n", "return", "2", "*", "(", "h_tv", "+", "w_tv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.TVLoss._tensor_size": [[22, 24], ["t.size", "t.size", "t.size"], "methods", ["None"], ["", "def", "_tensor_size", "(", "self", ",", "t", ")", ":", "\n", "        ", "return", "t", ".", "size", "(", ")", "[", "1", "]", "*", "t", ".", "size", "(", ")", "[", "2", "]", "*", "t", ".", "size", "(", ")", "[", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.log_Logistic_256": [[25, 47], ["x.view.view", "mean.view.view", "logvar.view.view", "torch.exp", "torch.sigmoid", "torch.sigmoid", "x.view.size", "x.view.size", "x.view.size", "torch.log", "torch.mean", "torch.sum", "torch.floor"], "function", ["None"], ["", "", "def", "log_Logistic_256", "(", "x", ",", "mean", ",", "logvar", ",", "average", "=", "False", ",", "reduce", "=", "True", ",", "dim", "=", "None", ")", ":", "\n", "    ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "mean", "=", "mean", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "logvar", "=", "logvar", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "bin_size", "=", "1.", "/", "256.", "\n", "\n", "# implementation like https://github.com/openai/iaf/blob/master/tf_utils/distributions.py#L28", "\n", "scale", "=", "torch", ".", "exp", "(", "logvar", ")", "\n", "x", "=", "(", "torch", ".", "floor", "(", "x", "/", "bin_size", ")", "*", "bin_size", "-", "mean", ")", "/", "scale", "\n", "cdf_plus", "=", "torch", ".", "sigmoid", "(", "x", "+", "bin_size", "/", "scale", ")", "\n", "cdf_minus", "=", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n", "# calculate final log-likelihood for an image", "\n", "log_logist_256", "=", "-", "torch", ".", "log", "(", "cdf_plus", "-", "cdf_minus", "+", "1.e-7", ")", "\n", "\n", "if", "reduce", ":", "\n", "        ", "if", "average", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "log_logist_256", ",", "dim", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "sum", "(", "log_logist_256", ",", "dim", ")", "\n", "", "", "else", ":", "\n", "        ", "return", "log_logist_256", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.reduce_image": [[49, 58], ["img.size", "torch.zeros().cuda", "range", "range", "torch.zeros", "range"], "function", ["None"], ["", "", "def", "reduce_image", "(", "img", ",", "scale", ")", ":", "\n", "    ", "batch", ",", "channels", ",", "height", ",", "width", "=", "img", ".", "size", "(", ")", "\n", "reduced_img", "=", "torch", ".", "zeros", "(", "batch", ",", "channels", "*", "scale", "*", "scale", ",", "height", "//", "scale", ",", "width", "//", "scale", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "x", "in", "range", "(", "scale", ")", ":", "\n", "        ", "for", "y", "in", "range", "(", "scale", ")", ":", "\n", "            ", "for", "c", "in", "range", "(", "channels", ")", ":", "\n", "                ", "reduced_img", "[", ":", ",", "c", "+", "channels", "*", "(", "y", "+", "scale", "*", "x", ")", ",", ":", ",", ":", "]", "=", "img", "[", ":", ",", "c", ",", "x", ":", ":", "scale", ",", "y", ":", ":", "scale", "]", "\n", "", "", "", "return", "reduced_img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.reconstruct_image": [[60, 71], ["features.size", "torch.zeros().cuda", "range", "range", "torch.zeros", "range"], "function", ["None"], ["", "def", "reconstruct_image", "(", "features", ",", "scale", ")", ":", "\n", "    ", "batch", ",", "channels", ",", "height", ",", "width", "=", "features", ".", "size", "(", ")", "\n", "img_channels", "=", "channels", "//", "(", "scale", "**", "2", ")", "\n", "reconstructed_img", "=", "torch", ".", "zeros", "(", "batch", ",", "img_channels", ",", "height", "*", "scale", ",", "width", "*", "scale", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "x", "in", "range", "(", "scale", ")", ":", "\n", "        ", "for", "y", "in", "range", "(", "scale", ")", ":", "\n", "            ", "for", "c", "in", "range", "(", "img_channels", ")", ":", "\n", "                ", "f_channel", "=", "c", "+", "img_channels", "*", "(", "y", "+", "scale", "*", "x", ")", "\n", "reconstructed_img", "[", ":", ",", "c", ",", "x", ":", ":", "scale", ",", "y", ":", ":", "scale", "]", "=", "features", "[", ":", ",", "f_channel", ",", ":", ",", ":", "]", "\n", "", "", "", "return", "reconstructed_img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.patchify_tensor": [[73, 101], ["features.size", "range", "torch.cat", "range", "range", "min", "min", "patches.append"], "function", ["None"], ["", "def", "patchify_tensor", "(", "features", ",", "patch_size", ",", "overlap", "=", "10", ")", ":", "\n", "    ", "batch_size", ",", "channels", ",", "height", ",", "width", "=", "features", ".", "size", "(", ")", "\n", "# side = min(height, width, patch_size)", "\n", "# delta = patch_size - side", "\n", "# Z = torch.zeros([batch_size, channels, height + delta, width + delta])", "\n", "# Z[:, :, delta // 2:height + delta // 2, delta // 2:width + delta // 2] = features", "\n", "# features = Z", "\n", "# batch_size, channels, height, width = features.size()", "\n", "\n", "effective_patch_size", "=", "patch_size", "-", "overlap", "\n", "n_patches_height", "=", "(", "height", "//", "effective_patch_size", ")", "\n", "n_patches_width", "=", "(", "width", "//", "effective_patch_size", ")", "\n", "\n", "if", "n_patches_height", "*", "effective_patch_size", "<", "height", ":", "\n", "        ", "n_patches_height", "+=", "1", "\n", "", "if", "n_patches_width", "*", "effective_patch_size", "<", "width", ":", "\n", "        ", "n_patches_width", "+=", "1", "\n", "\n", "", "patches", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "for", "h", "in", "range", "(", "n_patches_height", ")", ":", "\n", "            ", "for", "w", "in", "range", "(", "n_patches_width", ")", ":", "\n", "                ", "patch_start_height", "=", "min", "(", "h", "*", "effective_patch_size", ",", "height", "-", "patch_size", ")", "\n", "patch_start_width", "=", "min", "(", "w", "*", "effective_patch_size", ",", "width", "-", "patch_size", ")", "\n", "patches", ".", "append", "(", "features", "[", "b", ":", "b", "+", "1", ",", ":", ",", "\n", "patch_start_height", ":", "patch_start_height", "+", "patch_size", ",", "\n", "patch_start_width", ":", "patch_start_width", "+", "patch_size", "]", ")", "\n", "", "", "", "return", "torch", ".", "cat", "(", "patches", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.recompose_tensor": [[103, 152], ["patches.size", "torch.linspace", "torch.linspace", "torch.ones", "torch.cat", "blending_profile[].repeat", "blending_profile[].repeat", "torch.zeros", "range", "torch.zeros", "range", "print", "range", "blending_patch.cuda.cuda", "blending_image.cuda.cuda", "recomposed_tensor.cuda.cuda", "range", "min", "min", "range", "min", "min"], "function", ["None"], ["", "def", "recompose_tensor", "(", "patches", ",", "full_height", ",", "full_width", ",", "overlap", "=", "10", ")", ":", "\n", "\n", "    ", "batch_size", ",", "channels", ",", "patch_size", ",", "_", "=", "patches", ".", "size", "(", ")", "\n", "effective_patch_size", "=", "patch_size", "-", "overlap", "\n", "n_patches_height", "=", "(", "full_height", "//", "effective_patch_size", ")", "\n", "n_patches_width", "=", "(", "full_width", "//", "effective_patch_size", ")", "\n", "\n", "if", "n_patches_height", "*", "effective_patch_size", "<", "full_height", ":", "\n", "        ", "n_patches_height", "+=", "1", "\n", "", "if", "n_patches_width", "*", "effective_patch_size", "<", "full_width", ":", "\n", "        ", "n_patches_width", "+=", "1", "\n", "\n", "", "n_patches", "=", "n_patches_height", "*", "n_patches_width", "\n", "if", "batch_size", "%", "n_patches", "!=", "0", ":", "\n", "        ", "print", "(", "\"Error: The number of patches provided to the recompose function does not match the number of patches in each image.\"", ")", "\n", "", "final_batch_size", "=", "batch_size", "//", "n_patches", "\n", "\n", "blending_in", "=", "torch", ".", "linspace", "(", "0.1", ",", "1.0", ",", "overlap", ")", "\n", "blending_out", "=", "torch", ".", "linspace", "(", "1.0", ",", "0.1", ",", "overlap", ")", "\n", "middle_part", "=", "torch", ".", "ones", "(", "patch_size", "-", "2", "*", "overlap", ")", "\n", "blending_profile", "=", "torch", ".", "cat", "(", "[", "blending_in", ",", "middle_part", ",", "blending_out", "]", ",", "0", ")", "\n", "\n", "horizontal_blending", "=", "blending_profile", "[", "None", "]", ".", "repeat", "(", "patch_size", ",", "1", ")", "\n", "vertical_blending", "=", "blending_profile", "[", ":", ",", "None", "]", ".", "repeat", "(", "1", ",", "patch_size", ")", "\n", "blending_patch", "=", "horizontal_blending", "*", "vertical_blending", "\n", "\n", "blending_image", "=", "torch", ".", "zeros", "(", "1", ",", "channels", ",", "full_height", ",", "full_width", ")", "\n", "for", "h", "in", "range", "(", "n_patches_height", ")", ":", "\n", "        ", "for", "w", "in", "range", "(", "n_patches_width", ")", ":", "\n", "            ", "patch_start_height", "=", "min", "(", "h", "*", "effective_patch_size", ",", "full_height", "-", "patch_size", ")", "\n", "patch_start_width", "=", "min", "(", "w", "*", "effective_patch_size", ",", "full_width", "-", "patch_size", ")", "\n", "blending_image", "[", "0", ",", ":", ",", "patch_start_height", ":", "patch_start_height", "+", "patch_size", ",", "patch_start_width", ":", "patch_start_width", "+", "patch_size", "]", "+=", "blending_patch", "[", "None", "]", "\n", "\n", "", "", "recomposed_tensor", "=", "torch", ".", "zeros", "(", "final_batch_size", ",", "channels", ",", "full_height", ",", "full_width", ")", "\n", "if", "patches", ".", "is_cuda", ":", "\n", "        ", "blending_patch", "=", "blending_patch", ".", "cuda", "(", ")", "\n", "blending_image", "=", "blending_image", ".", "cuda", "(", ")", "\n", "recomposed_tensor", "=", "recomposed_tensor", ".", "cuda", "(", ")", "\n", "", "patch_index", "=", "0", "\n", "for", "b", "in", "range", "(", "final_batch_size", ")", ":", "\n", "        ", "for", "h", "in", "range", "(", "n_patches_height", ")", ":", "\n", "            ", "for", "w", "in", "range", "(", "n_patches_width", ")", ":", "\n", "                ", "patch_start_height", "=", "min", "(", "h", "*", "effective_patch_size", ",", "full_height", "-", "patch_size", ")", "\n", "patch_start_width", "=", "min", "(", "w", "*", "effective_patch_size", ",", "full_width", "-", "patch_size", ")", "\n", "recomposed_tensor", "[", "b", ",", ":", ",", "patch_start_height", ":", "patch_start_height", "+", "patch_size", ",", "patch_start_width", ":", "patch_start_width", "+", "patch_size", "]", "+=", "patches", "[", "patch_index", "]", "*", "blending_patch", "\n", "patch_index", "+=", "1", "\n", "", "", "", "recomposed_tensor", "/=", "blending_image", "\n", "\n", "return", "recomposed_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.modcrop": [[155, 162], ["img.crop.crop"], "function", ["None"], ["", "def", "modcrop", "(", "img", ",", "modulo", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img", ".", "size", "\n", "ih", "=", "ih", "-", "(", "ih", "%", "modulo", ")", "\n", "iw", "=", "iw", "-", "(", "iw", "%", "modulo", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "0", ",", "0", ",", "ih", ",", "iw", ")", ")", "\n", "#y, cb, cr = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.rescale_img": [[164, 169], ["img_in.resize.resize", "int", "int"], "function", ["None"], ["", "def", "rescale_img", "(", "img_in", ",", "scale", ")", ":", "\n", "    ", "(", "w", ",", "h", ")", "=", "img_in", ".", "size", "\n", "new_size_in", "=", "(", "int", "(", "scale", "*", "w", ")", ",", "int", "(", "scale", "*", "h", ")", ")", "\n", "img_in", "=", "img_in", ".", "resize", "(", "new_size_in", ",", "resample", "=", "Image", ".", "BICUBIC", ")", "\n", "return", "img_in", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.rgb2ycbcr": [[170, 187], ["img.astype", "rlt.round.round", "numpy.dot", "numpy.matmul"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img", ",", "only_y", "=", "True", ")", ":", "\n", "    ", "'''same as matlab rgb2ycbcr\n    only_y: only return Y channel\n    Input:\n        float32, [0, 255]\n        float32, [0, 255]\n    '''", "\n", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# convert", "\n", "if", "only_y", ":", "\n", "        ", "rlt", "=", "np", ".", "dot", "(", "img", ",", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", "/", "255.0", "+", "16.0", "\n", "", "else", ":", "\n", "        ", "rlt", "=", "np", ".", "matmul", "(", "img", ",", "[", "[", "65.481", ",", "-", "37.797", ",", "112.0", "]", ",", "[", "128.553", ",", "-", "74.203", ",", "-", "93.786", "]", ",", "\n", "[", "24.966", ",", "112.0", ",", "-", "18.214", "]", "]", ")", "/", "255.0", "+", "[", "16", ",", "128", ",", "128", "]", "\n", "", "rlt", "=", "rlt", ".", "round", "(", ")", "\n", "\n", "return", "rlt", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.PSNR": [[188, 196], ["math.sqrt", "numpy.mean", "math.log10"], "function", ["None"], ["", "def", "PSNR", "(", "pred", ",", "gt", ",", "shave_border", ")", ":", "\n", "    ", "pred", "=", "pred", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "gt", "=", "gt", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "imdff", "=", "pred", "-", "gt", "\n", "rmse", "=", "math", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "if", "rmse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.calculate_ssim": [[197, 218], ["img1.astype.astype", "img2.astype.astype", "cv2.getGaussianKernel", "numpy.outer", "ssim_map.mean", "cv2.getGaussianKernel.transpose", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D"], "function", ["None"], ["", "def", "calculate_ssim", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "C1", "=", "(", "0.01", "*", "255", ")", "**", "2", "\n", "C2", "=", "(", "0.03", "*", "255", ")", "**", "2", "\n", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "kernel", "=", "cv2", ".", "getGaussianKernel", "(", "11", ",", "1.5", ")", "\n", "window", "=", "np", ".", "outer", "(", "kernel", ",", "kernel", ".", "transpose", "(", ")", ")", "\n", "\n", "mu1", "=", "cv2", ".", "filter2D", "(", "img1", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "# valid", "\n", "mu2", "=", "cv2", ".", "filter2D", "(", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "\n", "mu1_sq", "=", "mu1", "**", "2", "\n", "mu2_sq", "=", "mu2", "**", "2", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "sigma1_sq", "=", "cv2", ".", "filter2D", "(", "img1", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_sq", "\n", "sigma2_sq", "=", "cv2", ".", "filter2D", "(", "img2", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu2_sq", "\n", "sigma12", "=", "cv2", ".", "filter2D", "(", "img1", "*", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_mu2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "\n", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "return", "ssim_map", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.SSIM": [[220, 241], ["ValueError", "image_utils.calculate_ssim", "ValueError", "range", "numpy.array().mean", "ssims.append", "image_utils.calculate_ssim", "image_utils.calculate_ssim", "numpy.array", "numpy.squeeze", "numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.calculate_ssim", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.calculate_ssim", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.calculate_ssim"], ["", "def", "SSIM", "(", "img1", ",", "img2", ",", "shave_border", ")", ":", "\n", "    ", "'''calculate SSIM\n    the same outputs as MATLAB's\n    img1, img2: [0, 255]\n    '''", "\n", "img1", "=", "img1", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "img2", "=", "img2", "[", "shave_border", ":", "-", "shave_border", ",", "shave_border", ":", "-", "shave_border", "]", "\n", "if", "not", "img1", ".", "shape", "==", "img2", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "'Input images must have the same dimensions.'", ")", "\n", "", "if", "img1", ".", "ndim", "==", "2", ":", "\n", "        ", "return", "calculate_ssim", "(", "img1", ",", "img2", ")", "\n", "", "elif", "img1", ".", "ndim", "==", "3", ":", "\n", "        ", "if", "img1", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "            ", "ssims", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "ssims", ".", "append", "(", "calculate_ssim", "(", "img1", ",", "img2", ")", ")", "\n", "", "return", "np", ".", "array", "(", "ssims", ")", ".", "mean", "(", ")", "\n", "", "elif", "img1", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "            ", "return", "calculate_ssim", "(", "np", ".", "squeeze", "(", "img1", ")", ",", "np", ".", "squeeze", "(", "img2", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Wrong input image dimensions.'", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.encoder3.__init__": [[5, 41], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "encoder3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# vgg", "\n", "# 224 x 224", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "3", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "reflecPad1", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "# 226 x 226", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "reflecPad3", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu3", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "maxPool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "return_indices", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad4", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu4", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad5", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu5", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "maxPool2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "return_indices", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad6", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv6", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu6", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.encoder3.forward": [[42, 62], ["network.encoder3.conv1", "network.encoder3.reflecPad1", "network.encoder3.conv2", "network.encoder3.relu2", "network.encoder3.reflecPad3", "network.encoder3.conv3", "network.encoder3.relu3", "network.encoder3.maxPool", "network.encoder3.reflecPad4", "network.encoder3.conv4", "network.encoder3.relu4", "network.encoder3.reflecPad5", "network.encoder3.conv5", "network.encoder3.relu5", "network.encoder3.maxPool2", "network.encoder3.reflecPad6", "network.encoder3.conv6", "network.encoder3.relu6"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "reflecPad1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu2", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad3", "(", "out", ")", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "pool1", "=", "self", ".", "relu3", "(", "out", ")", "\n", "out", ",", "pool_idx", "=", "self", ".", "maxPool", "(", "pool1", ")", "\n", "out", "=", "self", ".", "reflecPad4", "(", "out", ")", "\n", "out", "=", "self", ".", "conv4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu4", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad5", "(", "out", ")", "\n", "out", "=", "self", ".", "conv5", "(", "out", ")", "\n", "pool2", "=", "self", ".", "relu5", "(", "out", ")", "\n", "out", ",", "pool_idx2", "=", "self", ".", "maxPool2", "(", "pool2", ")", "\n", "out", "=", "self", ".", "reflecPad6", "(", "out", ")", "\n", "out", "=", "self", ".", "conv6", "(", "out", ")", "\n", "out", "=", "self", ".", "relu6", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.decoder3.__init__": [[64, 93], ["torch.Module.__init__", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "decoder3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# decoder", "\n", "self", ".", "reflecPad7", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv7", "=", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu7", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "unpool", "=", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad8", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv8", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu8", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad9", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv9", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu9", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "unpool2", "=", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "reflecPad10", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv10", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu10", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "reflecPad11", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv11", "=", "nn", ".", "Conv2d", "(", "64", ",", "3", ",", "3", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.decoder3.forward": [[94, 113], ["network.decoder3.reflecPad7", "network.decoder3.conv7", "network.decoder3.relu7", "network.decoder3.unpool", "network.decoder3.reflecPad8", "network.decoder3.conv8", "network.decoder3.relu8", "network.decoder3.reflecPad9", "network.decoder3.conv9", "network.decoder3.relu9", "network.decoder3.unpool2", "network.decoder3.reflecPad10", "network.decoder3.conv10", "network.decoder3.relu10", "network.decoder3.reflecPad11", "network.decoder3.conv11"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "{", "}", "\n", "out", "=", "self", ".", "reflecPad7", "(", "x", ")", "\n", "out", "=", "self", ".", "conv7", "(", "out", ")", "\n", "out", "=", "self", ".", "relu7", "(", "out", ")", "\n", "out", "=", "self", ".", "unpool", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad8", "(", "out", ")", "\n", "out", "=", "self", ".", "conv8", "(", "out", ")", "\n", "out", "=", "self", ".", "relu8", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad9", "(", "out", ")", "\n", "out", "=", "self", ".", "conv9", "(", "out", ")", "\n", "out_relu9", "=", "self", ".", "relu9", "(", "out", ")", "\n", "out", "=", "self", ".", "unpool2", "(", "out_relu9", ")", "\n", "out", "=", "self", ".", "reflecPad10", "(", "out", ")", "\n", "out", "=", "self", ".", "conv10", "(", "out", ")", "\n", "out", "=", "self", ".", "relu10", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad11", "(", "out", ")", "\n", "out", "=", "self", ".", "conv11", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.encoder4.__init__": [[115, 174], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "encoder4", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# vgg", "\n", "# 224 x 224", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "3", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "reflecPad1", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "# 226 x 226", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "reflecPad3", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu3", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "maxPool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad4", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu4", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad5", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu5", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "maxPool2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad6", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv6", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu6", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad7", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv7", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu7", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad8", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv8", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu8", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad9", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv9", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu9", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "maxPool3", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "reflecPad10", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv10", "=", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu10", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 28 x 28", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.encoder4.forward": [[175, 221], ["network.encoder4.conv1", "network.encoder4.reflecPad1", "network.encoder4.conv2", "network.encoder4.relu2", "network.encoder4.reflecPad7", "network.encoder4.conv3", "network.encoder4.relu3", "network.encoder4.maxPool", "network.encoder4.reflecPad4", "network.encoder4.conv4", "network.encoder4.relu4", "network.encoder4.reflecPad7", "network.encoder4.conv5", "network.encoder4.relu5", "network.encoder4.maxPool2", "network.encoder4.reflecPad6", "network.encoder4.conv6", "network.encoder4.relu6", "network.encoder4.conv7", "network.encoder4.relu7", "network.encoder4.reflecPad8", "network.encoder4.conv8", "network.encoder4.relu8", "network.encoder4.reflecPad9", "network.encoder4.conv9", "network.encoder4.relu9", "network.encoder4.maxPool3", "network.encoder4.reflecPad10", "network.encoder4.conv10", "network.encoder4.relu10", "matrix31", "network.encoder4.reflecPad7", "network.encoder4.reflecPad7"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "sF", "=", "None", ",", "matrix11", "=", "None", ",", "matrix21", "=", "None", ",", "matrix31", "=", "None", ")", ":", "\n", "        ", "output", "=", "{", "}", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "reflecPad1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "output", "[", "'r11'", "]", "=", "self", ".", "relu2", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad7", "(", "output", "[", "'r11'", "]", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "output", "[", "'r12'", "]", "=", "self", ".", "relu3", "(", "out", ")", "\n", "\n", "output", "[", "'p1'", "]", "=", "self", ".", "maxPool", "(", "output", "[", "'r12'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad4", "(", "output", "[", "'p1'", "]", ")", "\n", "out", "=", "self", ".", "conv4", "(", "out", ")", "\n", "output", "[", "'r21'", "]", "=", "self", ".", "relu4", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad7", "(", "output", "[", "'r21'", "]", ")", "\n", "\n", "out", "=", "self", ".", "conv5", "(", "out", ")", "\n", "output", "[", "'r22'", "]", "=", "self", ".", "relu5", "(", "out", ")", "\n", "\n", "output", "[", "'p2'", "]", "=", "self", ".", "maxPool2", "(", "output", "[", "'r22'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad6", "(", "output", "[", "'p2'", "]", ")", "\n", "out", "=", "self", ".", "conv6", "(", "out", ")", "\n", "output", "[", "'r31'", "]", "=", "self", ".", "relu6", "(", "out", ")", "\n", "if", "(", "matrix31", "is", "not", "None", ")", ":", "\n", "            ", "feature3", ",", "transmatrix3", "=", "matrix31", "(", "output", "[", "'r31'", "]", ",", "sF", "[", "'r31'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad7", "(", "feature3", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "reflecPad7", "(", "output", "[", "'r31'", "]", ")", "\n", "", "out", "=", "self", ".", "conv7", "(", "out", ")", "\n", "output", "[", "'r32'", "]", "=", "self", ".", "relu7", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad8", "(", "output", "[", "'r32'", "]", ")", "\n", "out", "=", "self", ".", "conv8", "(", "out", ")", "\n", "output", "[", "'r33'", "]", "=", "self", ".", "relu8", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad9", "(", "output", "[", "'r33'", "]", ")", "\n", "out", "=", "self", ".", "conv9", "(", "out", ")", "\n", "output", "[", "'r34'", "]", "=", "self", ".", "relu9", "(", "out", ")", "\n", "\n", "output", "[", "'p3'", "]", "=", "self", ".", "maxPool3", "(", "output", "[", "'r34'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad10", "(", "output", "[", "'p3'", "]", ")", "\n", "out", "=", "self", ".", "conv10", "(", "out", ")", "\n", "output", "[", "'r41'", "]", "=", "self", ".", "relu10", "(", "out", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.decoder4.__init__": [[223, 277], ["torch.Module.__init__", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "decoder4", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# decoder", "\n", "self", ".", "reflecPad11", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv11", "=", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu11", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "unpool", "=", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad12", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv12", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu12", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad13", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv13", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu13", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad14", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv14", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu14", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad15", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv15", "=", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu15", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "unpool2", "=", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad16", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv16", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu16", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad17", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv17", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu17", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "unpool3", "=", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "reflecPad18", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv18", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu18", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "reflecPad19", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv19", "=", "nn", ".", "Conv2d", "(", "64", ",", "3", ",", "3", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.decoder4.forward": [[278, 311], ["network.decoder4.reflecPad11", "network.decoder4.conv11", "network.decoder4.relu11", "network.decoder4.unpool", "network.decoder4.reflecPad12", "network.decoder4.conv12", "network.decoder4.relu12", "network.decoder4.reflecPad13", "network.decoder4.conv13", "network.decoder4.relu13", "network.decoder4.reflecPad14", "network.decoder4.conv14", "network.decoder4.relu14", "network.decoder4.reflecPad15", "network.decoder4.conv15", "network.decoder4.relu15", "network.decoder4.unpool2", "network.decoder4.reflecPad16", "network.decoder4.conv16", "network.decoder4.relu16", "network.decoder4.reflecPad17", "network.decoder4.conv17", "network.decoder4.relu17", "network.decoder4.unpool3", "network.decoder4.reflecPad18", "network.decoder4.conv18", "network.decoder4.relu18", "network.decoder4.reflecPad19", "network.decoder4.conv19"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# decoder", "\n", "        ", "out", "=", "self", ".", "reflecPad11", "(", "x", ")", "\n", "out", "=", "self", ".", "conv11", "(", "out", ")", "\n", "out", "=", "self", ".", "relu11", "(", "out", ")", "\n", "out", "=", "self", ".", "unpool", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad12", "(", "out", ")", "\n", "out", "=", "self", ".", "conv12", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "relu12", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad13", "(", "out", ")", "\n", "out", "=", "self", ".", "conv13", "(", "out", ")", "\n", "out", "=", "self", ".", "relu13", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad14", "(", "out", ")", "\n", "out", "=", "self", ".", "conv14", "(", "out", ")", "\n", "out", "=", "self", ".", "relu14", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad15", "(", "out", ")", "\n", "out", "=", "self", ".", "conv15", "(", "out", ")", "\n", "out", "=", "self", ".", "relu15", "(", "out", ")", "\n", "out", "=", "self", ".", "unpool2", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad16", "(", "out", ")", "\n", "out", "=", "self", ".", "conv16", "(", "out", ")", "\n", "out", "=", "self", ".", "relu16", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad17", "(", "out", ")", "\n", "out", "=", "self", ".", "conv17", "(", "out", ")", "\n", "out", "=", "self", ".", "relu17", "(", "out", ")", "\n", "out", "=", "self", ".", "unpool3", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad18", "(", "out", ")", "\n", "out", "=", "self", ".", "conv18", "(", "out", ")", "\n", "out", "=", "self", ".", "relu18", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad19", "(", "out", ")", "\n", "out", "=", "self", ".", "conv19", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.encoder5.__init__": [[314, 390], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "encoder5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# vgg", "\n", "# 224 x 224", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "3", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "reflecPad1", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "# 226 x 226", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "reflecPad3", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu3", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "maxPool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad4", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu4", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad5", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu5", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "maxPool2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad6", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv6", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu6", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad7", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv7", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu7", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad8", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv8", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu8", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad9", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv9", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu9", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "maxPool3", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "reflecPad10", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv10", "=", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu10", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "reflecPad11", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv11", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu11", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "reflecPad12", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv12", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu12", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "reflecPad13", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv13", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu13", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "maxPool4", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "reflecPad14", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv14", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu14", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.encoder5.forward": [[391, 456], ["network.encoder5.conv1", "network.encoder5.reflecPad1", "network.encoder5.conv2", "network.encoder5.relu2", "network.encoder5.reflecPad7", "network.encoder5.conv3", "network.encoder5.relu3", "network.encoder5.maxPool", "network.encoder5.reflecPad4", "network.encoder5.conv4", "network.encoder5.relu4", "network.encoder5.reflecPad7", "network.encoder5.conv5", "network.encoder5.relu5", "network.encoder5.maxPool2", "network.encoder5.reflecPad6", "network.encoder5.conv6", "network.encoder5.relu6", "network.encoder5.conv7", "network.encoder5.relu7", "network.encoder5.reflecPad8", "network.encoder5.conv8", "network.encoder5.relu8", "network.encoder5.reflecPad9", "network.encoder5.conv9", "network.encoder5.relu9", "network.encoder5.maxPool3", "network.encoder5.reflecPad10", "network.encoder5.conv10", "network.encoder5.relu10", "network.encoder5.reflecPad11", "network.encoder5.conv11", "network.encoder5.relu11", "network.encoder5.reflecPad12", "network.encoder5.conv12", "network.encoder5.relu12", "network.encoder5.reflecPad13", "network.encoder5.conv13", "network.encoder5.relu13", "network.encoder5.maxPool4", "network.encoder5.reflecPad14", "network.encoder5.conv14", "network.encoder5.relu14", "matrix31", "network.encoder5.reflecPad7", "network.encoder5.reflecPad7"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "sF", "=", "None", ",", "contentV256", "=", "None", ",", "styleV256", "=", "None", ",", "matrix11", "=", "None", ",", "matrix21", "=", "None", ",", "matrix31", "=", "None", ")", ":", "\n", "        ", "output", "=", "{", "}", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "reflecPad1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "output", "[", "'r11'", "]", "=", "self", ".", "relu2", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad7", "(", "output", "[", "'r11'", "]", ")", "\n", "\n", "#out = self.reflecPad3(output['r11'])", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "output", "[", "'r12'", "]", "=", "self", ".", "relu3", "(", "out", ")", "\n", "\n", "output", "[", "'p1'", "]", "=", "self", ".", "maxPool", "(", "output", "[", "'r12'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad4", "(", "output", "[", "'p1'", "]", ")", "\n", "out", "=", "self", ".", "conv4", "(", "out", ")", "\n", "output", "[", "'r21'", "]", "=", "self", ".", "relu4", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad7", "(", "output", "[", "'r21'", "]", ")", "\n", "\n", "#out = self.reflecPad5(output['r21'])", "\n", "out", "=", "self", ".", "conv5", "(", "out", ")", "\n", "output", "[", "'r22'", "]", "=", "self", ".", "relu5", "(", "out", ")", "\n", "\n", "output", "[", "'p2'", "]", "=", "self", ".", "maxPool2", "(", "output", "[", "'r22'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad6", "(", "output", "[", "'p2'", "]", ")", "\n", "out", "=", "self", ".", "conv6", "(", "out", ")", "\n", "output", "[", "'r31'", "]", "=", "self", ".", "relu6", "(", "out", ")", "\n", "if", "(", "styleV256", "is", "not", "None", ")", ":", "\n", "            ", "feature", "=", "matrix31", "(", "output", "[", "'r31'", "]", ",", "sF", "[", "'r31'", "]", ",", "contentV256", ",", "styleV256", ")", "\n", "out", "=", "self", ".", "reflecPad7", "(", "feature", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "reflecPad7", "(", "output", "[", "'r31'", "]", ")", "\n", "", "out", "=", "self", ".", "conv7", "(", "out", ")", "\n", "output", "[", "'r32'", "]", "=", "self", ".", "relu7", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad8", "(", "output", "[", "'r32'", "]", ")", "\n", "out", "=", "self", ".", "conv8", "(", "out", ")", "\n", "output", "[", "'r33'", "]", "=", "self", ".", "relu8", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad9", "(", "output", "[", "'r33'", "]", ")", "\n", "out", "=", "self", ".", "conv9", "(", "out", ")", "\n", "output", "[", "'r34'", "]", "=", "self", ".", "relu9", "(", "out", ")", "\n", "\n", "output", "[", "'p3'", "]", "=", "self", ".", "maxPool3", "(", "output", "[", "'r34'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad10", "(", "output", "[", "'p3'", "]", ")", "\n", "out", "=", "self", ".", "conv10", "(", "out", ")", "\n", "output", "[", "'r41'", "]", "=", "self", ".", "relu10", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad11", "(", "output", "[", "'r41'", "]", ")", "\n", "out", "=", "self", ".", "conv11", "(", "out", ")", "\n", "output", "[", "'r42'", "]", "=", "self", ".", "relu11", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad12", "(", "output", "[", "'r42'", "]", ")", "\n", "out", "=", "self", ".", "conv12", "(", "out", ")", "\n", "output", "[", "'r43'", "]", "=", "self", ".", "relu12", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad13", "(", "output", "[", "'r43'", "]", ")", "\n", "out", "=", "self", ".", "conv13", "(", "out", ")", "\n", "output", "[", "'r44'", "]", "=", "self", ".", "relu13", "(", "out", ")", "\n", "\n", "output", "[", "'p4'", "]", "=", "self", ".", "maxPool4", "(", "output", "[", "'r44'", "]", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad14", "(", "output", "[", "'p4'", "]", ")", "\n", "out", "=", "self", ".", "conv14", "(", "out", ")", "\n", "output", "[", "'r51'", "]", "=", "self", ".", "relu14", "(", "out", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.decoder5.__init__": [[458, 528], ["torch.Module.__init__", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "decoder5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# decoder", "\n", "self", ".", "reflecPad15", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv15", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu15", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "unpool", "=", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "reflecPad16", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv16", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu16", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "reflecPad17", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv17", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu17", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "reflecPad18", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv18", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu18", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "reflecPad19", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv19", "=", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu19", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "unpool2", "=", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad20", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv20", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu20", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad21", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv21", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu21", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "reflecPad22", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv22", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu22", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "reflecPad23", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv23", "=", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu23", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "unpool3", "=", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", "\n", "# 112 X 112", "\n", "\n", "self", ".", "reflecPad24", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv24", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu24", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "reflecPad25", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv25", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu25", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "unpool4", "=", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", "\n", "\n", "self", ".", "reflecPad26", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv26", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu26", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "reflecPad27", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv27", "=", "nn", ".", "Conv2d", "(", "64", ",", "3", ",", "3", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.decoder5.forward": [[529, 574], ["network.decoder5.reflecPad15", "network.decoder5.conv15", "network.decoder5.relu15", "network.decoder5.unpool", "network.decoder5.reflecPad16", "network.decoder5.conv16", "network.decoder5.relu16", "network.decoder5.reflecPad17", "network.decoder5.conv17", "network.decoder5.relu17", "network.decoder5.reflecPad18", "network.decoder5.conv18", "network.decoder5.relu18", "network.decoder5.reflecPad19", "network.decoder5.conv19", "network.decoder5.relu19", "network.decoder5.unpool2", "network.decoder5.reflecPad20", "network.decoder5.conv20", "network.decoder5.relu20", "network.decoder5.reflecPad21", "network.decoder5.conv21", "network.decoder5.relu21", "network.decoder5.reflecPad22", "network.decoder5.conv22", "network.decoder5.relu22", "network.decoder5.reflecPad23", "network.decoder5.conv23", "network.decoder5.relu23", "network.decoder5.unpool3", "network.decoder5.reflecPad24", "network.decoder5.conv24", "network.decoder5.relu24", "network.decoder5.reflecPad25", "network.decoder5.conv25", "network.decoder5.relu25", "network.decoder5.unpool4", "network.decoder5.reflecPad26", "network.decoder5.conv26", "network.decoder5.relu26", "network.decoder5.reflecPad27", "network.decoder5.conv27"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# decoder", "\n", "        ", "out", "=", "self", ".", "reflecPad15", "(", "x", ")", "\n", "out", "=", "self", ".", "conv15", "(", "out", ")", "\n", "out", "=", "self", ".", "relu15", "(", "out", ")", "\n", "out", "=", "self", ".", "unpool", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad16", "(", "out", ")", "\n", "out", "=", "self", ".", "conv16", "(", "out", ")", "\n", "out", "=", "self", ".", "relu16", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad17", "(", "out", ")", "\n", "out", "=", "self", ".", "conv17", "(", "out", ")", "\n", "out", "=", "self", ".", "relu17", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad18", "(", "out", ")", "\n", "out", "=", "self", ".", "conv18", "(", "out", ")", "\n", "out", "=", "self", ".", "relu18", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad19", "(", "out", ")", "\n", "out", "=", "self", ".", "conv19", "(", "out", ")", "\n", "out", "=", "self", ".", "relu19", "(", "out", ")", "\n", "out", "=", "self", ".", "unpool2", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad20", "(", "out", ")", "\n", "out", "=", "self", ".", "conv20", "(", "out", ")", "\n", "out", "=", "self", ".", "relu20", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad21", "(", "out", ")", "\n", "out", "=", "self", ".", "conv21", "(", "out", ")", "\n", "out", "=", "self", ".", "relu21", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad22", "(", "out", ")", "\n", "out", "=", "self", ".", "conv22", "(", "out", ")", "\n", "out", "=", "self", ".", "relu22", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad23", "(", "out", ")", "\n", "out", "=", "self", ".", "conv23", "(", "out", ")", "\n", "out", "=", "self", ".", "relu23", "(", "out", ")", "\n", "out", "=", "self", ".", "unpool3", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad24", "(", "out", ")", "\n", "out", "=", "self", ".", "conv24", "(", "out", ")", "\n", "out", "=", "self", ".", "relu24", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad25", "(", "out", ")", "\n", "out", "=", "self", ".", "conv25", "(", "out", ")", "\n", "out", "=", "self", ".", "relu25", "(", "out", ")", "\n", "out", "=", "self", ".", "unpool4", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad26", "(", "out", ")", "\n", "out", "=", "self", ".", "conv26", "(", "out", ")", "\n", "out", "=", "self", ".", "relu26", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad27", "(", "out", ")", "\n", "out", "=", "self", ".", "conv27", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.ConvBlock.__init__": [[577, 585], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU", "torch.InstanceNorm2d", "torch.InstanceNorm2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "\n", "self", ".", "bn", "=", "nn", ".", "InstanceNorm2d", "(", "output_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.ConvBlock.forward": [[586, 591], ["network.ConvBlock.conv", "network.ConvBlock.bn", "network.ConvBlock.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "\n", "return", "self", ".", "act", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.discriminator.__init__": [[595, 624], ["torch.Module.__init__", "network.ConvBlock", "network.ConvBlock", "torch.MaxPool2d", "torch.MaxPool2d", "network.ConvBlock", "network.ConvBlock", "torch.MaxPool2d", "torch.MaxPool2d", "network.ConvBlock", "network.ConvBlock", "torch.MaxPool2d", "torch.MaxPool2d", "network.ConvBlock", "network.ConvBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "network.discriminator.modules", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "base_filter", ")", ":", "\n", "        ", "super", "(", "discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_conv", "=", "ConvBlock", "(", "num_channels", ",", "base_filter", ",", "3", ",", "1", ",", "1", ")", "#512", "\n", "self", ".", "conv1", "=", "ConvBlock", "(", "base_filter", ",", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "max1", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ",", "0", ")", "\n", "self", ".", "conv2", "=", "ConvBlock", "(", "base_filter", ",", "2", "*", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv3", "=", "ConvBlock", "(", "2", "*", "base_filter", ",", "2", "*", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "max2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ",", "0", ")", "\n", "self", ".", "conv4", "=", "ConvBlock", "(", "2", "*", "base_filter", ",", "4", "*", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv5", "=", "ConvBlock", "(", "4", "*", "base_filter", ",", "4", "*", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "max3", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ",", "0", ")", "\n", "self", ".", "conv6", "=", "ConvBlock", "(", "4", "*", "base_filter", ",", "8", "*", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv7", "=", "ConvBlock", "(", "8", "*", "base_filter", ",", "8", "*", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "weight1", "=", "nn", ".", "Conv2d", "(", "2", "*", "base_filter", ",", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "weight2", "=", "nn", ".", "Conv2d", "(", "4", "*", "base_filter", ",", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "weight3", "=", "nn", ".", "Conv2d", "(", "8", "*", "base_filter", ",", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.discriminator.forward": [[625, 638], ["network.discriminator.input_conv", "network.discriminator.max1", "network.discriminator.conv3", "network.discriminator.weight1", "network.discriminator.conv5", "network.discriminator.weight2", "network.discriminator.conv7", "network.discriminator.weight3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.discriminator.conv1", "network.discriminator.conv2", "network.discriminator.conv4", "network.discriminator.conv6", "network.discriminator.max2", "network.discriminator.max3", "network.discriminator.view", "network.discriminator.view", "network.discriminator.view"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "input_conv", "(", "x", ")", "\n", "out", "=", "self", ".", "max1", "(", "self", ".", "conv1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "conv3", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "feat1", "=", "self", ".", "weight1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv5", "(", "self", ".", "conv4", "(", "self", ".", "max2", "(", "out", ")", ")", ")", "\n", "feat2", "=", "self", ".", "weight2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv7", "(", "self", ".", "conv6", "(", "self", ".", "max3", "(", "out", ")", ")", ")", "\n", "feat3", "=", "self", ".", "weight3", "(", "out", ")", "\n", "b", "=", "x", ".", "shape", "[", "0", "]", "\n", "out", "=", "torch", ".", "cat", "(", "(", "feat1", ".", "view", "(", "b", ",", "-", "1", ")", ",", "feat2", ".", "view", "(", "b", ",", "-", "1", ")", ",", "feat3", ".", "view", "(", "b", ",", "-", "1", ")", ")", ",", "1", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.discriminator_v2.__init__": [[641, 667], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.UpsamplingBilinear2d", "torch.UpsamplingBilinear2d", "network.discriminator_v2.modules", "classname.find", "m.weight.data.normal_", "m.bias.data.zero_", "classname.find", "m.weight.data.normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "base_filter", ")", ":", "\n", "        ", "super", "(", "discriminator_v2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_conv", "=", "nn", ".", "Conv2d", "(", "num_channels", "*", "2", ",", "base_filter", ",", "4", ",", "2", ",", "1", ")", "#512*256", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "base_filter", ",", "base_filter", "*", "2", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "norm1", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", "*", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "base_filter", "*", "2", ",", "base_filter", "*", "4", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", "*", "4", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "base_filter", "*", "4", ",", "base_filter", "*", "8", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "norm3", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", "*", "8", ")", "\n", "self", ".", "act", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ",", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Conv2d", "(", "base_filter", "*", "8", ",", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "down", "=", "nn", ".", "UpsamplingBilinear2d", "(", "scale_factor", "=", "0.5", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.discriminator_v2.encode": [[668, 677], ["network.discriminator_v2.act", "network.discriminator_v2.act", "network.discriminator_v2.act", "network.discriminator_v2.act", "network.discriminator_v2.weight().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.discriminator_v2.input_conv", "network.discriminator_v2.norm1", "network.discriminator_v2.norm2", "network.discriminator_v2.norm3", "network.discriminator_v2.conv1", "network.discriminator_v2.conv2", "network.discriminator_v2.conv3", "network.discriminator_v2.weight", "network.discriminator_v2.view", "network.discriminator_v2.view", "network.discriminator_v2.view"], "methods", ["None"], ["", "", "", "", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat1", "=", "self", ".", "act", "(", "self", ".", "input_conv", "(", "x", ")", ")", "\n", "feat1", "=", "self", ".", "act", "(", "self", ".", "norm1", "(", "self", ".", "conv1", "(", "feat1", ")", ")", ")", "\n", "feat2", "=", "self", ".", "act", "(", "self", ".", "norm2", "(", "self", ".", "conv2", "(", "feat1", ")", ")", ")", "\n", "feat3", "=", "self", ".", "act", "(", "self", ".", "norm3", "(", "self", ".", "conv3", "(", "feat2", ")", ")", ")", "\n", "out3", "=", "self", ".", "weight", "(", "feat3", ")", ".", "view", "(", "feat3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n", "feat", "=", "torch", ".", "cat", "(", "(", "feat1", ".", "view", "(", "feat1", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "feat2", ".", "view", "(", "feat2", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "feat3", ".", "view", "(", "feat3", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", ",", "1", ")", "\n", "return", "feat", ",", "out3", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.discriminator_v2.forward": [[678, 690], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.discriminator_v2.encode", "network.discriminator_v2.down", "network.discriminator_v2.encode", "network.discriminator_v2.down", "network.discriminator_v2.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "y", ")", ",", "1", ")", "\n", "feat1", ",", "prob1", "=", "self", ".", "encode", "(", "x", ")", "\n", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "feat2", ",", "prob2", "=", "self", ".", "encode", "(", "x", ")", "\n", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "feat3", ",", "prob3", "=", "self", ".", "encode", "(", "x", ")", "\n", "\n", "feat_out", "=", "torch", ".", "cat", "(", "(", "feat1", ",", "feat2", ",", "feat3", ")", ",", "1", ")", "\n", "prob_out", "=", "torch", ".", "cat", "(", "(", "prob1", ",", "prob2", ",", "prob3", ")", ",", "1", ")", "\n", "\n", "return", "feat_out", ",", "prob_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.encoder6.__init__": [[693, 752], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "encoder6", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# vgg", "\n", "# 224 x 224", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "3", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "reflecPad1", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "# 226 x 226", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "reflecPad3", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu3", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "maxPool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad4", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu4", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad5", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu5", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "maxPool2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad6", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv6", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu6", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad7", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv7", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu7", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad8", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv8", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu8", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad9", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv9", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu9", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "maxPool3", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "reflecPad10", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv10", "=", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu10", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 28 x 28", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.encoder6.forward": [[753, 799], ["network.encoder6.conv1", "network.encoder6.reflecPad1", "network.encoder6.conv2", "network.encoder6.relu2", "network.encoder6.reflecPad7", "network.encoder6.conv3", "network.encoder6.relu3", "network.encoder6.maxPool", "network.encoder6.reflecPad4", "network.encoder6.conv4", "network.encoder6.relu4", "network.encoder6.reflecPad7", "network.encoder6.conv5", "network.encoder6.relu5", "network.encoder6.maxPool2", "network.encoder6.reflecPad6", "network.encoder6.conv6", "network.encoder6.relu6", "network.encoder6.conv7", "network.encoder6.relu7", "network.encoder6.reflecPad8", "network.encoder6.conv8", "network.encoder6.relu8", "network.encoder6.reflecPad9", "network.encoder6.conv9", "network.encoder6.relu9", "network.encoder6.maxPool3", "network.encoder6.reflecPad10", "network.encoder6.conv10", "network.encoder6.relu10", "matrix31", "network.encoder6.reflecPad7", "network.encoder6.reflecPad7"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "sF", "=", "None", ",", "matrix11", "=", "None", ",", "matrix21", "=", "None", ",", "matrix31", "=", "None", ")", ":", "\n", "        ", "output", "=", "{", "}", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "reflecPad1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "output", "[", "'r11'", "]", "=", "self", ".", "relu2", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad7", "(", "output", "[", "'r11'", "]", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "output", "[", "'r12'", "]", "=", "self", ".", "relu3", "(", "out", ")", "\n", "\n", "output", "[", "'p1'", "]", "=", "self", ".", "maxPool", "(", "output", "[", "'r12'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad4", "(", "output", "[", "'p1'", "]", ")", "\n", "out", "=", "self", ".", "conv4", "(", "out", ")", "\n", "output", "[", "'r21'", "]", "=", "self", ".", "relu4", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad7", "(", "output", "[", "'r21'", "]", ")", "\n", "\n", "out", "=", "self", ".", "conv5", "(", "out", ")", "\n", "output", "[", "'r22'", "]", "=", "self", ".", "relu5", "(", "out", ")", "\n", "\n", "output", "[", "'p2'", "]", "=", "self", ".", "maxPool2", "(", "output", "[", "'r22'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad6", "(", "output", "[", "'p2'", "]", ")", "\n", "out", "=", "self", ".", "conv6", "(", "out", ")", "\n", "output", "[", "'r31'", "]", "=", "self", ".", "relu6", "(", "out", ")", "\n", "if", "(", "matrix31", "is", "not", "None", ")", ":", "\n", "            ", "feature3", ",", "transmatrix3", "=", "matrix31", "(", "output", "[", "'r31'", "]", ",", "sF", "[", "'r31'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad7", "(", "feature3", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "reflecPad7", "(", "output", "[", "'r31'", "]", ")", "\n", "", "out", "=", "self", ".", "conv7", "(", "out", ")", "\n", "output", "[", "'r32'", "]", "=", "self", ".", "relu7", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad8", "(", "output", "[", "'r32'", "]", ")", "\n", "out", "=", "self", ".", "conv8", "(", "out", ")", "\n", "output", "[", "'r33'", "]", "=", "self", ".", "relu8", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "reflecPad9", "(", "output", "[", "'r33'", "]", ")", "\n", "out", "=", "self", ".", "conv9", "(", "out", ")", "\n", "output", "[", "'r34'", "]", "=", "self", ".", "relu9", "(", "out", ")", "\n", "\n", "output", "[", "'p3'", "]", "=", "self", ".", "maxPool3", "(", "output", "[", "'r34'", "]", ")", "\n", "out", "=", "self", ".", "reflecPad10", "(", "output", "[", "'p3'", "]", ")", "\n", "out", "=", "self", ".", "conv10", "(", "out", ")", "\n", "output", "[", "'r41'", "]", "=", "self", ".", "relu10", "(", "out", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.decoder6.__init__": [[801, 858], ["torch.Module.__init__", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "decoder6", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# decoder", "\n", "self", ".", "reflecPad11", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv11", "=", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu11", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 28 x 28", "\n", "\n", "self", ".", "unpool1", "=", "nn", ".", "ConvTranspose2d", "(", "256", ",", "256", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "act1", "=", "nn", ".", "ReLU", "(", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad12", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv12", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu12", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad13", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv13", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu13", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad14", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv14", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu14", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "reflecPad15", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv15", "=", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu15", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 56 x 56", "\n", "\n", "self", ".", "unpool2", "=", "nn", ".", "ConvTranspose2d", "(", "128", ",", "128", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "act2", "=", "nn", ".", "ReLU", "(", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad16", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv16", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu16", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "reflecPad17", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv17", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu17", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 112 x 112", "\n", "\n", "self", ".", "unpool3", "=", "nn", ".", "ConvTranspose2d", "(", "64", ",", "64", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "act3", "=", "nn", ".", "ReLU", "(", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "reflecPad18", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv18", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "0", ")", "\n", "self", ".", "relu18", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# 224 x 224", "\n", "\n", "self", ".", "reflecPad19", "=", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv19", "=", "nn", ".", "Conv2d", "(", "64", ",", "3", ",", "3", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.network.decoder6.forward": [[859, 892], ["network.decoder6.reflecPad11", "network.decoder6.conv11", "network.decoder6.relu11", "network.decoder6.act1", "network.decoder6.reflecPad12", "network.decoder6.conv12", "network.decoder6.relu12", "network.decoder6.reflecPad13", "network.decoder6.conv13", "network.decoder6.relu13", "network.decoder6.reflecPad14", "network.decoder6.conv14", "network.decoder6.relu14", "network.decoder6.reflecPad15", "network.decoder6.conv15", "network.decoder6.relu15", "network.decoder6.act2", "network.decoder6.reflecPad16", "network.decoder6.conv16", "network.decoder6.relu16", "network.decoder6.reflecPad17", "network.decoder6.conv17", "network.decoder6.relu17", "network.decoder6.act3", "network.decoder6.reflecPad18", "network.decoder6.conv18", "network.decoder6.relu18", "network.decoder6.reflecPad19", "network.decoder6.conv19", "network.decoder6.unpool1", "network.decoder6.unpool2", "network.decoder6.unpool3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# decoder", "\n", "        ", "out", "=", "self", ".", "reflecPad11", "(", "x", ")", "\n", "out", "=", "self", ".", "conv11", "(", "out", ")", "\n", "out", "=", "self", ".", "relu11", "(", "out", ")", "\n", "out", "=", "self", ".", "act1", "(", "self", ".", "unpool1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "reflecPad12", "(", "out", ")", "\n", "out", "=", "self", ".", "conv12", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "relu12", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad13", "(", "out", ")", "\n", "out", "=", "self", ".", "conv13", "(", "out", ")", "\n", "out", "=", "self", ".", "relu13", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad14", "(", "out", ")", "\n", "out", "=", "self", ".", "conv14", "(", "out", ")", "\n", "out", "=", "self", ".", "relu14", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad15", "(", "out", ")", "\n", "out", "=", "self", ".", "conv15", "(", "out", ")", "\n", "out", "=", "self", ".", "relu15", "(", "out", ")", "\n", "out", "=", "self", ".", "act2", "(", "self", ".", "unpool2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "reflecPad16", "(", "out", ")", "\n", "out", "=", "self", ".", "conv16", "(", "out", ")", "\n", "out", "=", "self", ".", "relu16", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad17", "(", "out", ")", "\n", "out", "=", "self", ".", "conv17", "(", "out", ")", "\n", "out", "=", "self", ".", "relu17", "(", "out", ")", "\n", "out", "=", "self", ".", "act3", "(", "self", ".", "unpool3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "reflecPad18", "(", "out", ")", "\n", "out", "=", "self", ".", "conv18", "(", "out", ")", "\n", "out", "=", "self", ".", "relu18", "(", "out", ")", "\n", "out", "=", "self", ".", "reflecPad19", "(", "out", ")", "\n", "out", "=", "self", ".", "conv19", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolder.__init__": [[129, 148], ["torch.Dataset.__init__", "os.path.join", "os.path.join", "sorted", "sorted", "os.path.join", "os.path.join", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "data_dir1", ",", "data_dir2", ",", "patch_size", ",", "up_factor", ",", "data_augmentation", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "DatasetFromFolder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "GT_dir", "=", "join", "(", "data_dir1", ",", "'HR'", ")", "\n", "input_dir", "=", "join", "(", "data_dir1", ",", "'LR'", ")", "\n", "self", ".", "gt_image_filenames", "=", "[", "join", "(", "GT_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "GT_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "input_image_filenames", "=", "[", "join", "(", "input_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "input_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "# GT_dir = join(data_dir2, 'HR')", "\n", "# input_dir = join(data_dir2, 'LR')", "\n", "# self.gt_image_filenames += [join(GT_dir, x) for x in listdir(GT_dir) if is_image_file(x)]", "\n", "# self.input_image_filenames += [join(input_dir, x) for x in listdir(input_dir) if is_image_file(x)]", "\n", "# ref_dir = '/home/server2/ZSLiu/style_transfer/Data/wikiart'", "\n", "# self.ref_image_filenames = [join(ref_dir, x) for x in listdir(ref_dir) if is_image_file(x)]", "\n", "\n", "self", ".", "gt_image_filenames", "=", "sorted", "(", "self", ".", "gt_image_filenames", ")", "\n", "self", ".", "input_image_filenames", "=", "sorted", "(", "self", ".", "input_image_filenames", ")", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "up_factor", "=", "up_factor", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "data_augmentation", "=", "data_augmentation", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolder.__getitem__": [[150, 179], ["dataset.load_img", "dataset.load_img", "torch.randint().item", "torch.randint().item", "torch.randint().item", "torch.randint().item", "dataset.load_img", "dataset.rescale_img", "dataset.rescale_img", "dataset.rescale_img", "dataset.get_patch", "dataset.augment", "dataset.DatasetFromFolder.transform", "dataset.DatasetFromFolder.transform", "dataset.DatasetFromFolder.transform", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "len"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.rescale_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.rescale_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.rescale_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.get_patch", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.augment", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "target", "=", "load_img", "(", "self", ".", "gt_image_filenames", "[", "index", "]", ")", "\n", "\n", "input", "=", "load_img", "(", "self", ".", "input_image_filenames", "[", "index", "]", ")", "\n", "\n", "\n", "rand_no", "=", "torch", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "gt_image_filenames", ")", ",", "(", "1", ",", ")", ")", ".", "item", "(", ")", "\n", "ref", "=", "load_img", "(", "self", ".", "gt_image_filenames", "[", "rand_no", "]", ")", "\n", "ref", "=", "rescale_img", "(", "ref", ",", "256", ")", "\n", "\n", "target", "=", "rescale_img", "(", "target", ",", "288", ")", "\n", "input", "=", "rescale_img", "(", "input", ",", "288", "//", "self", ".", "up_factor", ")", "\n", "\n", "input", ",", "target", "=", "get_patch", "(", "input", ",", "target", ",", "self", ".", "patch_size", ",", "scale", "=", "self", ".", "up_factor", ")", "\n", "\n", "\n", "if", "self", ".", "data_augmentation", ":", "\n", "            ", "input", ",", "target", ",", "ref", "=", "augment", "(", "input", ",", "target", ",", "ref", ")", "\n", "# input, target = color_shift(input, target)", "\n", "\n", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "input", "=", "self", ".", "transform", "(", "input", ")", "\n", "target", "=", "self", ".", "transform", "(", "target", ")", "\n", "ref", "=", "self", ".", "transform", "(", "ref", ")", "\n", "\n", "\n", "", "return", "input", ",", "target", ",", "ref", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolder.__len__": [[180, 182], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "gt_image_filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolder_new.__init__": [[185, 204], ["torch.Dataset.__init__", "os.path.join", "os.path.join", "sorted", "sorted", "os.path.join", "os.path.join", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "data_dir1", ",", "data_dir2", ",", "patch_size", ",", "up_factor", ",", "data_augmentation", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "DatasetFromFolder_new", ",", "self", ")", ".", "__init__", "(", ")", "\n", "GT_dir", "=", "join", "(", "data_dir1", ",", "'HR'", ")", "\n", "input_dir", "=", "join", "(", "data_dir1", ",", "'LR'", ")", "\n", "self", ".", "gt_image_filenames", "=", "[", "join", "(", "GT_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "GT_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "input_image_filenames", "=", "[", "join", "(", "input_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "input_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "# GT_dir = join(data_dir2, 'HR')", "\n", "# input_dir = join(data_dir2, 'LR')", "\n", "# self.gt_image_filenames += [join(GT_dir, x) for x in listdir(GT_dir) if is_image_file(x)]", "\n", "# self.input_image_filenames += [join(input_dir, x) for x in listdir(input_dir) if is_image_file(x)]", "\n", "# ref_dir = '/home/server2/ZSLiu/style_transfer/Data/wikiart'", "\n", "# self.ref_image_filenames = [join(ref_dir, x) for x in listdir(ref_dir) if is_image_file(x)]", "\n", "\n", "self", ".", "gt_image_filenames", "=", "sorted", "(", "self", ".", "gt_image_filenames", ")", "\n", "self", ".", "input_image_filenames", "=", "sorted", "(", "self", ".", "input_image_filenames", ")", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "up_factor", "=", "up_factor", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "data_augmentation", "=", "data_augmentation", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolder_new.__getitem__": [[206, 236], ["dataset.load_img", "imresize.imresize.imresize", "PIL.Image.fromarray", "torch.randint().item", "torch.randint().item", "torch.randint().item", "torch.randint().item", "dataset.load_img", "dataset.rescale_img", "dataset.rescale_img", "dataset.rescale_img", "dataset.get_patch", "numpy.array", "numpy.unit8", "dataset.augment", "dataset.DatasetFromFolder_new.transform", "dataset.DatasetFromFolder_new.transform", "dataset.DatasetFromFolder_new.transform", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "len"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.rescale_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.rescale_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.rescale_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.get_patch", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.augment", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "target", "=", "load_img", "(", "self", ".", "gt_image_filenames", "[", "index", "]", ")", "\n", "\n", "input", "=", "imresize", "(", "np", ".", "array", "(", "target", ")", ",", "0.125", ")", "\n", "input", "=", "Image", ".", "fromarray", "(", "np", ".", "unit8", "(", "input", ")", ")", "\n", "\n", "\n", "rand_no", "=", "torch", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "gt_image_filenames", ")", ",", "(", "1", ",", ")", ")", ".", "item", "(", ")", "\n", "ref", "=", "load_img", "(", "self", ".", "gt_image_filenames", "[", "rand_no", "]", ")", "\n", "ref", "=", "rescale_img", "(", "ref", ",", "256", ")", "\n", "\n", "target", "=", "rescale_img", "(", "target", ",", "288", ")", "\n", "input", "=", "rescale_img", "(", "input", ",", "36", ")", "\n", "# ref = rescale_img(target, 256)", "\n", "input", ",", "target", "=", "get_patch", "(", "input", ",", "target", ",", "self", ".", "patch_size", ",", "scale", "=", "self", ".", "up_factor", ")", "\n", "\n", "\n", "if", "self", ".", "data_augmentation", ":", "\n", "            ", "input", ",", "target", ",", "ref", "=", "augment", "(", "input", ",", "target", ",", "ref", ")", "\n", "# input, target = color_shift(input, target)", "\n", "\n", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "input", "=", "self", ".", "transform", "(", "input", ")", "\n", "target", "=", "self", ".", "transform", "(", "target", ")", "\n", "ref", "=", "self", ".", "transform", "(", "ref", ")", "\n", "\n", "\n", "", "return", "input", ",", "target", ",", "ref", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolder_new.__len__": [[237, 239], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "gt_image_filenames", ")", "\n", "", "", "class", "DatasetFromFolderEval", "(", "data", ".", "Dataset", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolderEval.__init__": [[240, 245], ["torch.Dataset.__init__", "os.path.join", "os.listdir", "dataset.is_image_file"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", "DatasetFromFolderEval", ",", "self", ")", ".", "__init__", "(", ")", "\n", "data_dir", "=", "data_dir", "+", "'hazy'", "\n", "self", ".", "image_filenames", "=", "[", "join", "(", "data_dir", ",", "x", ")", "for", "x", "in", "listdir", "(", "data_dir", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolderEval.__getitem__": [[246, 254], ["dataset.load_img", "dataset.DatasetFromFolderEval.transform"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.load_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "input", "=", "load_img", "(", "self", ".", "image_filenames", "[", "index", "]", ")", "\n", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "input", "=", "self", ".", "transform", "(", "input", ")", "\n", "\n", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolderEval.__len__": [[255, 257], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_filenames", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file": [[14, 16], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "[", "\".png\"", ",", "\".jpg\"", ",", "\".jpeg\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.load_img": [[18, 22], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["", "def", "load_img", "(", "filepath", ")", ":", "\n", "    ", "img", "=", "Image", ".", "open", "(", "filepath", ")", ".", "convert", "(", "'RGB'", ")", "\n", "# y, _, _ = img.split()", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.rescale_img": [[29, 34], ["tuple", "img_in.resize.resize"], "function", ["None"], ["", "def", "rescale_img", "(", "img_in", ",", "size", ")", ":", "\n", "# size_in = img_in.size", "\n", "    ", "new_size_in", "=", "tuple", "(", "[", "size", ",", "size", "]", ")", "\n", "img_in", "=", "img_in", ".", "resize", "(", "new_size_in", ",", "resample", "=", "Image", ".", "BICUBIC", ")", "\n", "return", "img_in", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.get_patch": [[36, 62], ["img_in.crop.crop", "img_tar.crop.crop", "random.randrange", "random.randrange"], "function", ["None"], ["", "def", "get_patch", "(", "img_in", ",", "img_tar", ",", "patch_size", ",", "scale", ",", "ix", "=", "-", "1", ",", "iy", "=", "-", "1", ")", ":", "\n", "    ", "(", "ih", ",", "iw", ")", "=", "img_in", ".", "size", "\n", "#(th, tw) = (scale * ih, scale * iw)", "\n", "\n", "patch_mult", "=", "scale", "# if len(scale) > 1 else 1", "\n", "tp", "=", "patch_mult", "*", "patch_size", "\n", "ip", "=", "tp", "//", "scale", "\n", "\n", "if", "ix", "==", "-", "1", ":", "\n", "        ", "ix", "=", "random", ".", "randrange", "(", "0", ",", "iw", "-", "ip", "+", "1", ")", "\n", "# ix = torch.randint(0, iw - ip + 1, (1,)).item()", "\n", "", "if", "iy", "==", "-", "1", ":", "\n", "        ", "iy", "=", "random", ".", "randrange", "(", "0", ",", "ih", "-", "ip", "+", "1", ")", "\n", "# iy = torch.randint(0, ih - ip + 1, (1,)).item()", "\n", "\n", "\n", "", "(", "tx", ",", "ty", ")", "=", "(", "scale", "*", "ix", ",", "scale", "*", "iy", ")", "\n", "\n", "img_in", "=", "img_in", ".", "crop", "(", "(", "iy", ",", "ix", ",", "iy", "+", "ip", ",", "ix", "+", "ip", ")", ")", "\n", "img_tar", "=", "img_tar", ".", "crop", "(", "(", "ty", ",", "tx", ",", "ty", "+", "tp", ",", "tx", "+", "tp", ")", ")", "\n", "# img_ref = img_ref.crop((ty, tx, ty + tp, tx + tp))", "\n", "\n", "#info_patch = {", "\n", "#    'ix': ix, 'iy': iy, 'ip': ip, 'tx': tx, 'ty': ty, 'tp': tp}", "\n", "\n", "return", "img_in", ",", "img_tar", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.augment": [[66, 87], ["PIL.ImageOps.flip", "PIL.ImageOps.flip", "PIL.ImageOps.flip", "PIL.ImageOps.mirror", "PIL.ImageOps.mirror", "PIL.ImageOps.mirror", "img_in.rotate.rotate", "img_tar.rotate.rotate", "img_ref.rotate.rotate", "torch.rand().item", "torch.rand().item", "torch.rand().item", "torch.rand().item", "torch.rand().item", "torch.rand().item", "torch.randint().item", "torch.randint().item", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.randint", "torch.randint"], "function", ["None"], ["", "def", "augment", "(", "img_in", ",", "img_tar", ",", "img_ref", ",", "flip_h", "=", "True", ",", "flip_v", "=", "True", ",", "rot", "=", "True", ")", ":", "\n", "\n", "\n", "    ", "if", "torch", ".", "rand", "(", "1", ")", ".", "item", "(", ")", "<", "0.5", "and", "flip_h", ":", "\n", "        ", "img_in", "=", "ImageOps", ".", "flip", "(", "img_in", ")", "\n", "img_tar", "=", "ImageOps", ".", "flip", "(", "img_tar", ")", "\n", "img_ref", "=", "ImageOps", ".", "flip", "(", "img_ref", ")", "\n", "\n", "", "if", "torch", ".", "rand", "(", "1", ")", ".", "item", "(", ")", "<", "0.5", "and", "flip_v", ":", "\n", "        ", "img_in", "=", "ImageOps", ".", "mirror", "(", "img_in", ")", "\n", "img_tar", "=", "ImageOps", ".", "mirror", "(", "img_tar", ")", "\n", "img_ref", "=", "ImageOps", ".", "mirror", "(", "img_ref", ")", "\n", "\n", "", "if", "torch", ".", "rand", "(", "1", ")", ".", "item", "(", ")", "<", "0.5", "and", "rot", ":", "\n", "        ", "rot", "=", "torch", ".", "randint", "(", "1", ",", "3", ",", "(", "1", ",", ")", ")", ".", "item", "(", ")", "*", "90", "\n", "img_in", "=", "img_in", ".", "rotate", "(", "rot", ")", "\n", "img_tar", "=", "img_tar", ".", "rotate", "(", "rot", ")", "\n", "img_ref", "=", "img_ref", ".", "rotate", "(", "rot", ")", "\n", "\n", "\n", "", "return", "img_in", ",", "img_tar", ",", "img_ref", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.rgb_permute": [[88, 102], ["numpy.array", "numpy.array", "numpy.random.permutation", "PIL.Image.fromarray", "PIL.Image.fromarray"], "function", ["None"], ["", "def", "rgb_permute", "(", "im1", ",", "im2", ")", ":", "\n", "\n", "    ", "im1", "=", "np", ".", "array", "(", "im1", ")", "\n", "im2", "=", "np", ".", "array", "(", "im2", ")", "\n", "# if np.random.rand(1) >= prob:", "\n", "#     return im1, im2", "\n", "\n", "perm", "=", "np", ".", "random", ".", "permutation", "(", "3", ")", "\n", "im1", "=", "im1", "[", ":", ",", ":", ",", "perm", "]", "\n", "im2", "=", "im2", "[", ":", ",", ":", ",", "perm", "]", "\n", "im1", "=", "Image", ".", "fromarray", "(", "im1", ")", "\n", "im2", "=", "Image", ".", "fromarray", "(", "im2", ")", "\n", "\n", "return", "im1", ",", "im2", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.color_shift": [[103, 124], ["random.uniform", "random.uniform", "random.uniform", "torch.rand().item", "torch.rand().item", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Color().enhance", "torch.rand().item", "torch.rand().item", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Contrast().enhance", "torch.rand().item", "torch.rand().item", "PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Brightness().enhance", "torch.rand", "torch.rand", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Color", "torch.rand", "torch.rand", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast", "torch.rand", "torch.rand", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Brightness"], "function", ["None"], ["", "def", "color_shift", "(", "img_in", ",", "img_tar", ")", ":", "\n", "\n", "    ", "color_factor", "=", "random", ".", "uniform", "(", "1", ",", "1.5", ")", "\n", "contrast_factor", "=", "random", ".", "uniform", "(", "1", ",", "1.5", ")", "\n", "bright_factor", "=", "random", ".", "uniform", "(", "1", ",", "1.5", ")", "\n", "# sharp_factor = random.uniform(0.5, 1)", "\n", "\n", "if", "torch", ".", "rand", "(", "1", ")", ".", "item", "(", ")", "<", "0.5", ":", "\n", "        ", "img_tar", "=", "ImageEnhance", ".", "Color", "(", "img_tar", ")", ".", "enhance", "(", "color_factor", ")", "\n", "img_in", "=", "ImageEnhance", ".", "Color", "(", "img_in", ")", ".", "enhance", "(", "color_factor", ")", "\n", "\n", "", "if", "torch", ".", "rand", "(", "1", ")", ".", "item", "(", ")", "<", "0.5", ":", "\n", "        ", "img_tar", "=", "ImageEnhance", ".", "Contrast", "(", "img_tar", ")", ".", "enhance", "(", "contrast_factor", ")", "\n", "img_in", "=", "ImageEnhance", ".", "Contrast", "(", "img_in", ")", ".", "enhance", "(", "contrast_factor", ")", "\n", "\n", "", "if", "torch", ".", "rand", "(", "1", ")", ".", "item", "(", ")", "<", "0.5", ":", "\n", "        ", "img_tar", "=", "ImageEnhance", ".", "Brightness", "(", "img_tar", ")", ".", "enhance", "(", "bright_factor", ")", "\n", "img_in", "=", "ImageEnhance", ".", "Brightness", "(", "img_in", ")", ".", "enhance", "(", "bright_factor", ")", "\n", "# img_in = ImageEnhance.Sharpness(img_in).enhance(sharp_factor)", "\n", "\n", "", "return", "img_in", ",", "img_tar", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform": [[6, 9], ["torchvision.transforms.Compose", "torchvision.transforms.ToTensor"], "function", ["None"], ["def", "transform", "(", ")", ":", "\n", "    ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "# Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.get_training_set": [[22, 28], ["dataset.DatasetFromFolder", "data.transform"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform"], ["", "def", "get_training_set", "(", "data_dir", ",", "patch_size", ",", "up_factor", ",", "data_augmentation", ")", ":", "\n", "    ", "data1", "=", "data_dir", "+", "'DIV2K'", "\n", "data2", "=", "data_dir", "+", "'Flickr2K'", "\n", "\n", "return", "DatasetFromFolder", "(", "data1", ",", "data2", ",", "patch_size", ",", "up_factor", ",", "data_augmentation", ",", "\n", "transform", "=", "transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.get_eval_set": [[29, 31], ["dataset.DatasetFromFolderEval", "data.transform"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform"], ["", "def", "get_eval_set", "(", "data_dir", ")", ":", "\n", "    ", "return", "DatasetFromFolderEval", "(", "data_dir", ",", "transform", "=", "transform", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.LapLoss.__init__": [[49, 57], ["torch.nn.Module.__init__", "torch.nn.L1Loss", "torch.nn.L1Loss"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "max_levels", "=", "5", ",", "k_size", "=", "5", ",", "sigma", "=", "2.0", ")", ":", "\n", "        ", "super", "(", "LapLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_levels", "=", "max_levels", "\n", "self", ".", "k_size", "=", "k_size", "\n", "self", ".", "sigma", "=", "sigma", "\n", "self", ".", "_gauss_kernel", "=", "None", "\n", "\n", "self", ".", "L1_loss", "=", "nn", ".", "L1Loss", "(", "size_average", "=", "False", ")", "\n", "", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.LapLoss.forward": [[57, 66], ["laploss.laplacian_pyramid", "laploss.laplacian_pyramid", "sum", "laploss.build_gauss_kernel", "laploss.LapLoss.L1_loss", "zip"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.laplacian_pyramid", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.laplacian_pyramid", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.build_gauss_kernel"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "if", "self", ".", "_gauss_kernel", "is", "None", "or", "self", ".", "_gauss_kernel", ".", "shape", "[", "1", "]", "!=", "input", ".", "shape", "[", "1", "]", ":", "\n", "            ", "self", ".", "_gauss_kernel", "=", "build_gauss_kernel", "(", "\n", "size", "=", "self", ".", "k_size", ",", "sigma", "=", "self", ".", "sigma", ",", "\n", "n_channels", "=", "input", ".", "shape", "[", "1", "]", ",", "cuda", "=", "input", ".", "is_cuda", "\n", ")", "\n", "", "pyr_input", "=", "laplacian_pyramid", "(", "input", ",", "self", ".", "_gauss_kernel", ",", "self", ".", "max_levels", ")", "\n", "pyr_target", "=", "laplacian_pyramid", "(", "target", ",", "self", ".", "_gauss_kernel", ",", "self", ".", "max_levels", ")", "\n", "return", "sum", "(", "self", ".", "L1_loss", "(", "a", ",", "b", ")", "for", "a", ",", "b", "in", "zip", "(", "pyr_input", ",", "pyr_target", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.LapMap.__init__": [[68, 74], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "max_levels", "=", "5", ",", "k_size", "=", "5", ",", "sigma", "=", "2.0", ")", ":", "\n", "        ", "super", "(", "LapMap", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_levels", "=", "max_levels", "\n", "self", ".", "k_size", "=", "k_size", "\n", "self", ".", "sigma", "=", "sigma", "\n", "self", ".", "_gauss_kernel", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.LapMap.forward": [[75, 84], ["laploss.laplacian_pyramid", "laploss.build_gauss_kernel"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.laplacian_pyramid", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.build_gauss_kernel"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "_gauss_kernel", "is", "None", "or", "self", ".", "_gauss_kernel", ".", "shape", "[", "1", "]", "!=", "input", ".", "shape", "[", "1", "]", ":", "\n", "            ", "self", ".", "_gauss_kernel", "=", "build_gauss_kernel", "(", "\n", "size", "=", "self", ".", "k_size", ",", "sigma", "=", "self", ".", "sigma", ",", "\n", "n_channels", "=", "input", ".", "shape", "[", "1", "]", ",", "cuda", "=", "input", ".", "is_cuda", "\n", ")", "\n", "", "pyr_input", "=", "laplacian_pyramid", "(", "input", ",", "self", ".", "_gauss_kernel", ",", "self", ".", "max_levels", ")", "\n", "\n", "return", "pyr_input", "", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.build_gauss_kernel": [[10, 25], ["numpy.float32", "numpy.sum", "numpy.sum", "numpy.tile", "torch.FloatTensor", "torch.FloatTensor", "torch.autograd.Variable", "ValueError", "gaussian", "kernel.cuda.cuda", "numpy.exp"], "function", ["None"], ["def", "build_gauss_kernel", "(", "size", "=", "5", ",", "sigma", "=", "1.0", ",", "n_channels", "=", "1", ",", "cuda", "=", "False", ")", ":", "\n", "    ", "if", "size", "%", "2", "!=", "1", ":", "\n", "        ", "raise", "ValueError", "(", "\"kernel size must be uneven\"", ")", "\n", "", "grid", "=", "np", ".", "float32", "(", "np", ".", "mgrid", "[", "0", ":", "size", ",", "0", ":", "size", "]", ".", "T", ")", "\n", "gaussian", "=", "lambda", "x", ":", "np", ".", "exp", "(", "(", "x", "-", "size", "//", "2", ")", "**", "2", "/", "(", "-", "2", "*", "sigma", "**", "2", ")", ")", "**", "2", "\n", "kernel", "=", "np", ".", "sum", "(", "gaussian", "(", "grid", ")", ",", "axis", "=", "2", ")", "\n", "kernel", "/=", "np", ".", "sum", "(", "kernel", ")", "\n", "# repeat same kernel across depth dimension", "\n", "kernel", "=", "np", ".", "tile", "(", "kernel", ",", "(", "n_channels", ",", "1", ",", "1", ")", ")", "\n", "# conv weight should be (out_channels, groups/in_channels, h, w),", "\n", "# and since we have depth-separable convolution we want the groups dimension to be 1", "\n", "kernel", "=", "torch", ".", "FloatTensor", "(", "kernel", "[", ":", ",", "None", ",", ":", ",", ":", "]", ")", "\n", "if", "cuda", ":", "\n", "        ", "kernel", "=", "kernel", ".", "cuda", "(", ")", "\n", "", "return", "Variable", "(", "kernel", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.conv_gauss": [[27, 32], ["torch.pad", "torch.conv2d"], "function", ["None"], ["", "def", "conv_gauss", "(", "img", ",", "kernel", ")", ":", "\n", "    ", "\"\"\" convolve img with a gaussian kernel that has been built with build_gauss_kernel \"\"\"", "\n", "n_channels", ",", "_", ",", "kw", ",", "kh", "=", "kernel", ".", "shape", "\n", "img", "=", "fnn", ".", "pad", "(", "img", ",", "(", "kw", "//", "2", ",", "kh", "//", "2", ",", "kw", "//", "2", ",", "kh", "//", "2", ")", ",", "mode", "=", "'replicate'", ")", "\n", "return", "fnn", ".", "conv2d", "(", "img", ",", "kernel", ",", "groups", "=", "n_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.laplacian_pyramid": [[34, 46], ["range", "pyr.append", "laploss.conv_gauss", "pyr.append", "torch.avg_pool2d"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.laploss.conv_gauss"], ["", "def", "laplacian_pyramid", "(", "img", ",", "kernel", ",", "max_levels", "=", "5", ")", ":", "\n", "    ", "current", "=", "img", "\n", "pyr", "=", "[", "]", "\n", "\n", "for", "level", "in", "range", "(", "max_levels", ")", ":", "\n", "        ", "filtered", "=", "conv_gauss", "(", "current", ",", "kernel", ")", "\n", "diff", "=", "current", "-", "filtered", "\n", "pyr", ".", "append", "(", "diff", ")", "\n", "current", "=", "fnn", ".", "avg_pool2d", "(", "filtered", ",", "2", ")", "\n", "\n", "", "pyr", ".", "append", "(", "current", ")", "\n", "return", "pyr", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.main_GAN.train": [[52, 174], ["G.train", "D.train", "enc.eval", "dec.eval", "enumerate", "print", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "input.to.to", "target.to.to", "ref.to.to", "real_label.to.to", "fake_label.to.to", "D.parameters", "G_optimizer.zero_grad", "torch.interpolate", "enc", "enc", "G", "torch.interpolate", "L1_criterion", "KL.mean", "VGG_feat", "loss_fn_alex_sp", "lpips_sp.mean.mean", "D", "D", "L1_criterion", "L1_criterion", "G_loss.backward", "G_optimizer.step", "D.parameters", "D_optimizer.zero_grad", "D", "D", "D_loss.backward", "D_optimizer.step", "print", "input.to.size", "L1_criterion", "predict.detach", "numpy.random.uniform", "numpy.random.uniform", "L1_criterion", "L1_criterion", "torch.interpolate", "torch.interpolate", "L1_criterion", "L1_criterion", "len", "len", "len", "torch.interpolate", "torch.interpolate"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.main_GAN.train", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.main_GAN.train", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "G_epoch_loss", "=", "0", "\n", "D_epoch_loss", "=", "0", "\n", "G", ".", "train", "(", ")", "\n", "D", ".", "train", "(", ")", "\n", "enc", ".", "eval", "(", ")", "\n", "dec", ".", "eval", "(", ")", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "training_data_loader", ",", "1", ")", ":", "\n", "        ", "input", ",", "target", ",", "ref", "=", "batch", "[", "0", "]", ",", "batch", "[", "1", "]", ",", "batch", "[", "2", "]", "\n", "\n", "minibatch", "=", "input", ".", "size", "(", ")", "[", "0", "]", "\n", "real_label", "=", "torch", ".", "ones", "(", "(", "minibatch", ",", "1344", ")", ")", "\n", "fake_label", "=", "torch", ".", "zeros", "(", "(", "minibatch", ",", "1344", ")", ")", "\n", "\n", "input", "=", "input", ".", "to", "(", "device", ")", "\n", "target", "=", "target", ".", "to", "(", "device", ")", "\n", "ref", "=", "ref", ".", "to", "(", "device", ")", "\n", "real_label", "=", "real_label", ".", "to", "(", "device", ")", "\n", "fake_label", "=", "fake_label", ".", "to", "(", "device", ")", "\n", "\n", "# Reset gradient", "\n", "for", "p", "in", "D", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "False", "\n", "\n", "", "G_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# encoder", "\n", "bic", "=", "F", ".", "interpolate", "(", "input", ",", "scale_factor", "=", "opt", ".", "up_factor", ",", "mode", "=", "'bicubic'", ")", "\n", "# ref_feat = enc(ref)", "\n", "tar_feat", "=", "enc", "(", "target", ")", "\n", "LR_feat", "=", "enc", "(", "bic", ")", "\n", "\n", "predict", ",", "KL", "=", "G", "(", "input", ",", "LR_feat", "[", "'r41'", "]", ",", "tar_feat", "[", "'r41'", "]", ")", "\n", "\n", "# predict = dec(LR_feat)", "\n", "\n", "pre_LR", "=", "F", ".", "interpolate", "(", "predict", ",", "scale_factor", "=", "1.0", "/", "opt", ".", "up_factor", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "# Reconstruction loss", "\n", "LR_loss", "=", "L1_criterion", "(", "pre_LR", ",", "input", ")", "\n", "\n", "# pre_feat = enc(predict)", "\n", "# tar_feat = enc(target)", "\n", "# SR_loss = L1_criterion(pre_feat['r41'], tar_feat['r41'])", "\n", "SR_L1", "=", "L1_criterion", "(", "predict", ",", "target", ")", "+", "L1_criterion", "(", "F", ".", "interpolate", "(", "predict", ",", "scale_factor", "=", "0.5", ",", "mode", "=", "'bicubic'", ")", ",", "F", ".", "interpolate", "(", "target", ",", "scale_factor", "=", "0.5", ",", "mode", "=", "'bicubic'", ")", ")", "+", "L1_criterion", "(", "F", ".", "interpolate", "(", "predict", ",", "scale_factor", "=", "0.25", ",", "mode", "=", "'bicubic'", ")", ",", "F", ".", "interpolate", "(", "target", ",", "scale_factor", "=", "0.25", ",", "mode", "=", "'bicubic'", ")", ")", "\n", "# SR_lap = lap_loss(2*predict-1, 2*target-1)", "\n", "\n", "KL_loss", "=", "KL", ".", "mean", "(", ")", "\n", "# RE = log_Logistic_256(target, pre_mean, pre_logvar, average=False, dim=1)", "\n", "# RE = RE.mean()", "\n", "\n", "# ssim_loss = 1 - ssim(predict, target)", "\n", "# lap_recon = lap_loss(predict, target)", "\n", "# TV_loss = TV(predict)", "\n", "# PD_feat, mean_var_loss = PD_loss(predict, target)", "\n", "ContentLoss", ",", "StyleLoss", "=", "VGG_feat", "(", "predict", ",", "target", ")", "\n", "# VGG_loss = L1_criterion(pre_feat4, tar_feat4)", "\n", "lpips_sp", "=", "loss_fn_alex_sp", "(", "2", "*", "predict", "-", "1", ",", "2", "*", "target", "-", "1", ")", "\n", "lpips_sp", "=", "lpips_sp", ".", "mean", "(", ")", "\n", "\n", "D_fake_feat", ",", "D_fake_decision", "=", "D", "(", "predict", ")", "\n", "D_real_feat", ",", "D_real_decision", "=", "D", "(", "target", ")", "\n", "GAN_feat_loss", "=", "L1_criterion", "(", "D_fake_feat", ",", "D_real_feat", ")", "\n", "\n", "GAN_loss", "=", "L1_criterion", "(", "D_fake_decision", ",", "real_label", ")", "\n", "\n", "G_loss", "=", "100", "*", "LR_loss", "+", "1", "*", "SR_L1", "+", "0.01", "*", "GAN_feat_loss", "+", "1", "*", "GAN_loss", "+", "0.01", "*", "ContentLoss", "+", "10", "*", "StyleLoss", "+", "1", "*", "KL_loss", "+", "1e4", "*", "lpips_sp", "\n", "\n", "G_loss", ".", "backward", "(", ")", "\n", "G_optimizer", ".", "step", "(", ")", "\n", "\n", "# Reset gradient", "\n", "for", "p", "in", "D", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "True", "\n", "\n", "", "D_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "_", ",", "D_fake_decision", "=", "D", "(", "predict", ".", "detach", "(", ")", ")", "\n", "_", ",", "D_real_decision", "=", "D", "(", "target", ")", "\n", "\n", "real", "=", "real_label", "*", "np", ".", "random", ".", "uniform", "(", "0.7", ",", "1.2", ")", "\n", "fake", "=", "fake_label", "+", "np", ".", "random", ".", "uniform", "(", "0.0", ",", "0.3", ")", "\n", "\n", "\n", "Dis_loss", "=", "(", "L1_criterion", "(", "D_real_decision", ",", "real", ")", "\n", "+", "L1_criterion", "(", "D_fake_decision", ",", "fake", ")", ")", "/", "2.0", "\n", "\n", "# Back propagation", "\n", "D_loss", "=", "Dis_loss", "\n", "D_loss", ".", "backward", "(", ")", "\n", "D_optimizer", ".", "step", "(", ")", "\n", "\n", "G_epoch_loss", "+=", "G_loss", ".", "data", "\n", "D_epoch_loss", "+=", "D_loss", ".", "data", "\n", "\n", "print", "(", "\"===> Epoch[{}]({}/{}): G_loss: {:.4f} || \"", "\n", "\"D_loss: {:.4f} || \"", "\n", "\"LR_loss: {:.4f} || \"", "\n", "\"SR_L1: {:.4f} || \"", "\n", "\"GAN_loss: {:.4f} || \"", "\n", "\"KL_loss: {:.4f} || \"", "\n", "\"ContentLoss: {:.4f} || \"", "\n", "\"StyleLoss: {:.4f} ||\"", "\n", "\"lpips_sp: {:.4f} ||\"", "\n", "\"GAN_feat_loss: {:.4f} ||\"", ".", "format", "(", "epoch", ",", "iteration", ",", "\n", "len", "(", "training_data_loader", ")", ",", "\n", "G_loss", ".", "data", ",", "\n", "D_loss", ".", "data", ",", "\n", "LR_loss", ".", "data", ",", "\n", "SR_L1", ".", "data", ",", "\n", "GAN_loss", ".", "data", ",", "\n", "KL_loss", ".", "data", ",", "\n", "ContentLoss", ".", "data", ",", "\n", "StyleLoss", ".", "data", ",", "\n", "lpips_sp", ".", "data", ",", "\n", "GAN_feat_loss", ".", "data", ")", ")", "\n", "\n", "", "print", "(", "\"===> Epoch {} Complete: Avg. G Loss: {:.4f} || D Loss: {:.4f}\"", ".", "format", "(", "epoch", ",", "G_epoch_loss", "/", "len", "(", "training_data_loader", ")", ",", "\n", "D_epoch_loss", "/", "len", "(", "training_data_loader", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.main_GAN.print_network": [[176, 182], ["net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.main_GAN.checkpoint": [[184, 190], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "G.state_dict", "D.state_dict"], "function", ["None"], ["", "def", "checkpoint", "(", "epoch", ")", ":", "\n", "    ", "G_model_out_path", "=", "opt", ".", "save_folder", "+", "opt", ".", "model_type", "+", "\"_generator_{}.pth\"", ".", "format", "(", "epoch", ")", "\n", "D_model_out_path", "=", "opt", ".", "save_folder", "+", "opt", ".", "model_type", "+", "\"_discriminator_{}.pth\"", ".", "format", "(", "epoch", ")", "\n", "torch", ".", "save", "(", "G", ".", "state_dict", "(", ")", ",", "G_model_out_path", ")", "\n", "torch", ".", "save", "(", "D", ".", "state_dict", "(", ")", ",", "D_model_out_path", ")", "\n", "print", "(", "\"Checkpoint saved to {} and {}\"", ".", "format", "(", "G_model_out_path", ",", "D_model_out_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.test.eval": [[89, 174], ["model.eval", "enc.eval", "dec.eval", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "sorted", "time.time", "range", "time.time", "print", "model.load_state_dict", "print", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "gt_image.__len__", "PIL.Image.open().convert", "image_utils.modcrop", "PIL.Image.open().convert", "image_utils.modcrop", "image_utils.rescale_img", "np.array().astype.data[].cpu().permute", "np.array().astype.data[].cpu().permute", "np.array().astype.clamp", "np.array().astype.clamp", "PIL.Image.fromarray().save", "PIL.Image.fromarray().save", "numpy.array().astype", "model.rgb2ycbcr", "numpy.array().astype", "model.rgb2ycbcr", "numpy.array().astype", "numpy.array().astype", "model.rgb2ycbcr", "model.rgb2ycbcr", "image_utils.PSNR", "image_utils.SSIM", "image_utils.PSNR", "image_utils.SSIM", "str", "torch.load", "torch.load", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "torch.no_grad", "torch.no_grad", "test.chop_forward", "PIL.Image.open", "PIL.Image.open", "np.array().astype.data[].cpu", "np.array().astype.data[].cpu", "PIL.Image.fromarray", "PIL.Image.fromarray", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.uint8", "numpy.uint8"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.DatasetFromFolderEval.__len__", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.modcrop", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.modcrop", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.rescale_img", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.rgb2ycbcr", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.rgb2ycbcr", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.rgb2ycbcr", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.rgb2ycbcr", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.PSNR", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.SSIM", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.PSNR", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.SSIM", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.chop_forward"], ["def", "eval", "(", "i", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "enc", ".", "eval", "(", ")", "\n", "dec", ".", "eval", "(", ")", "\n", "\n", "model_name", "=", "'models/GAN_generator_'", "+", "str", "(", "i", ")", "+", "'.pth'", "\n", "if", "os", ".", "path", ".", "exists", "(", "model_name", ")", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_name", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "print", "(", "model_name", ")", "\n", "\n", "", "HR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'HR'", ")", "\n", "Ref_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'Ref'", ")", "\n", "# LR_filename = os.path.join(opt.image_dataset, 'hazy')", "\n", "SR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'SR'", ")", "\n", "SLR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "image_dataset", ",", "'SLR'", ")", "\n", "\n", "gt_image", "=", "[", "join", "(", "HR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "HR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "ref_image", "=", "[", "join", "(", "Ref_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "Ref_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "ref_image", "=", "sorted", "(", "ref_image", ")", "\n", "output_image", "=", "[", "join", "(", "SR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "HR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "slr_output_image", "=", "[", "join", "(", "SLR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "HR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "count", "=", "0", "\n", "avg_psnr_predicted", "=", "0.0", "\n", "avg_ssim_predicted", "=", "0.0", "\n", "avg_psnr_LR", "=", "0.0", "\n", "avg_ssim_LR", "=", "0.0", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "# ran_patch = torch.randint(896, (2,))", "\n", "for", "i", "in", "range", "(", "gt_image", ".", "__len__", "(", ")", ")", ":", "\n", "\n", "        ", "HR", "=", "Image", ".", "open", "(", "gt_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "HR", "=", "modcrop", "(", "HR", ",", "opt", ".", "up_factor", ")", "\n", "Ref", "=", "Image", ".", "open", "(", "ref_image", "[", "2", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "Ref", "=", "modcrop", "(", "Ref", ",", "opt", ".", "up_factor", ")", "\n", "LR", "=", "rescale_img", "(", "HR", ",", "1.0", "/", "opt", ".", "up_factor", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pre_LR", ",", "prediction", "=", "chop_forward", "(", "Ref", ",", "LR", ")", "\n", "\n", "# print(\"===> Processing: %s || Timer: %.4f sec.\" % (str(i), (t1 - t0)))", "\n", "", "prediction", "=", "prediction", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "pre_LR", "=", "pre_LR", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "pre_LR", "=", "pre_LR", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clamp", "(", "0", ",", "255", ")", "\n", "pre_LR", "=", "pre_LR", ".", "clamp", "(", "0", ",", "255", ")", "\n", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "output_image", "[", "i", "]", ")", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "pre_LR", ")", ")", ".", "save", "(", "slr_output_image", "[", "i", "]", ")", "\n", "\n", "GT", "=", "np", ".", "array", "(", "HR", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "GT_Y", "=", "rgb2ycbcr", "(", "GT", ")", "\n", "LR", "=", "np", ".", "array", "(", "LR", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "LR_Y", "=", "rgb2ycbcr", "(", "LR", ")", "\n", "prediction", "=", "np", ".", "array", "(", "prediction", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "pre_LR", "=", "np", ".", "array", "(", "pre_LR", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "prediction_Y", "=", "rgb2ycbcr", "(", "prediction", ")", "\n", "pre_LR_Y", "=", "rgb2ycbcr", "(", "pre_LR", ")", "\n", "psnr_predicted", "=", "PSNR", "(", "prediction_Y", ",", "GT_Y", ",", "shave_border", "=", "opt", ".", "up_factor", ")", "\n", "ssim_predicted", "=", "SSIM", "(", "prediction_Y", ",", "GT_Y", ",", "shave_border", "=", "opt", ".", "up_factor", ")", "\n", "avg_psnr_predicted", "+=", "psnr_predicted", "\n", "avg_ssim_predicted", "+=", "ssim_predicted", "\n", "psnr_predicted", "=", "PSNR", "(", "pre_LR_Y", ",", "LR_Y", ",", "shave_border", "=", "1", ")", "\n", "ssim_predicted", "=", "SSIM", "(", "pre_LR_Y", ",", "LR_Y", ",", "shave_border", "=", "1", ")", "\n", "avg_psnr_LR", "+=", "psnr_predicted", "\n", "avg_ssim_LR", "+=", "ssim_predicted", "\n", "count", "+=", "1", "\n", "\n", "", "t1", "=", "time", ".", "time", "(", ")", "\n", "\n", "avg_psnr_predicted", "=", "avg_psnr_predicted", "/", "count", "\n", "avg_ssim_predicted", "=", "avg_ssim_predicted", "/", "count", "\n", "avg_psnr_LR", "=", "avg_psnr_LR", "/", "count", "\n", "avg_ssim_LR", "=", "avg_ssim_LR", "/", "count", "\n", "avg_time_predicted", "=", "t1", "-", "t0", "\n", "print", "(", "\"PSNR_predicted= {:.4f} || \"", "\n", "\"SSIM_predicted= {:.4f} || \"", "\n", "\"PSNR_LR= {:.4f} || \"", "\n", "\"SSIM_LR= {:.4f} || Time= {:.4f} \"", ".", "format", "(", "\n", "avg_psnr_predicted", ",", "\n", "avg_ssim_predicted", ",", "\n", "avg_psnr_LR", ",", "\n", "avg_ssim_LR", ",", "\n", "avg_time_predicted", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.test.chop_forward": [[183, 224], ["transform().unsqueeze", "transform().unsqueeze", "torch.TensorDataset", "torch.DataLoader", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float.to", "enumerate", "input.size", "enc", "enc", "model", "F.interpolate", "transform", "transform", "torch.from_numpy", "torch.from_numpy", "batch[].to", "batch[].to", "F.interpolate", "numpy.random.normal"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform"], ["def", "chop_forward", "(", "ref", ",", "img", ")", ":", "\n", "\n", "    ", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "ref", "=", "transform", "(", "ref", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "ref", ",", "img", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "std_z", "=", "torch", ".", "from_numpy", "(", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "1", ",", "256", ")", ")", ")", ".", "float", "(", ")", "\n", "z_q", "=", "std_z", ".", "to", "(", "device", ")", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "ref", ",", "input", "=", "batch", "[", "0", "]", ".", "to", "(", "device", ")", ",", "batch", "[", "1", "]", ".", "to", "(", "device", ")", "\n", "batch_size", ",", "channels", ",", "img_height", ",", "img_width", "=", "input", ".", "size", "(", ")", "\n", "# eps = torch.randn(input.shape[0], 64, 1, 1).to(device)", "\n", "\n", "# eps = torch.from_numpy(np.random.normal(0, 1, (input.shape[0], 3, 256, 256))).float()", "\n", "# eps = eps.to(device)", "\n", "#", "\n", "# LR_patches = patchify_tensor(input, patch_size=opt.patch_size, overlap=opt.stride)", "\n", "# n_patches = LR_patches.size(0)", "\n", "# out_box = []", "\n", "# with torch.no_grad():", "\n", "#     for p in range(n_patches):", "\n", "#         LR_input = LR_patches[p:p + 1]", "\n", "#         LR_feat = enc(F.interpolate(LR_input, scale_factor=opt.up_factor, mode='bicubic'))", "\n", "#         ref_feat = enc(ref)", "\n", "#         SR, _ = model(LR_input, LR_feat['r41'], ref_feat['r41'])", "\n", "#         out_box.append(SR)", "\n", "#", "\n", "#     out_box = torch.cat(out_box, 0)", "\n", "#     SR = recompose_tensor(out_box, opt.up_factor * img_height, opt.up_factor * img_width,", "\n", "#                                       overlap=opt.up_factor * opt.stride)", "\n", "\n", "LR_feat", "=", "enc", "(", "F", ".", "interpolate", "(", "input", ",", "scale_factor", "=", "opt", ".", "up_factor", ",", "mode", "=", "'bicubic'", ")", ")", "\n", "ref_feat", "=", "enc", "(", "ref", ")", "\n", "SR", ",", "_", "=", "model", "(", "input", ",", "LR_feat", "[", "'r41'", "]", ",", "ref_feat", "[", "'r41'", "]", ")", "\n", "\n", "LR", "=", "F", ".", "interpolate", "(", "SR", ",", "scale_factor", "=", "1", "/", "opt", ".", "up_factor", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "", "return", "LR", ",", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ncc_test.__init__": [[31, 43], ["torch.Module.__init__", "torch.Unfold", "torch.Unfold", "torch.Fold", "torch.Fold", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["def", "__init__", "(", "self", ",", "\n", "k", ",", "\n", "patch_size", ",", ")", ":", "\n", "        ", "super", "(", "ncc_test", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "\n", "self", ".", "unfold", "=", "nn", ".", "Unfold", "(", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "2", ")", "\n", "self", ".", "fold", "=", "nn", ".", "Fold", "(", "output_size", "=", "(", "self", ".", "patch_size", ",", "self", ".", "patch_size", ")", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "2", ")", "\n", "self", ".", "max", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ncc_test.forward": [[44, 72], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "model.ncc_test.unfold", "model.ncc_test.unfold", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model.ncc_test.norm", "input_norm.permute", "model.ncc_test.norm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.zeros().type_as", "torch.zeros().type_as", "torch.zeros().type_as", "torch.zeros().type_as", "range", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "idx[].squeeze", "ref_patch[].squeeze", "model.ncc_test.max", "model.ncc_test.fold"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "ref", ")", ":", "\n", "# x_gray = torch.min(x, dim=1, keepdim=True)[0]", "\n", "        ", "x_gray", "=", "torch", ".", "max", "(", "self", ".", "max", "(", "x", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "-", "torch", ".", "min", "(", "x", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "ref_gray", "=", "torch", ".", "mean", "(", "ref", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "input_patch", "=", "self", ".", "unfold", "(", "x_gray", ")", "\n", "ref_patch", "=", "self", ".", "unfold", "(", "ref_gray", ")", "\n", "input_mu", "=", "torch", ".", "mean", "(", "input_patch", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "ref_mu", "=", "torch", ".", "mean", "(", "ref_patch", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "\n", "input_norm", "=", "input_patch", "-", "input_mu", "\n", "input_len", "=", "input_patch", ".", "norm", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "input_norm", "=", "input_norm", "/", "input_len", "\n", "input_norm_t", "=", "input_norm", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "ref_norm", "=", "ref_patch", "-", "ref_mu", "\n", "ref_len", "=", "ref_patch", ".", "norm", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "ref_norm", "=", "ref_norm", "/", "ref_len", "\n", "ncc", "=", "torch", ".", "bmm", "(", "input_norm_t", ",", "ref_norm", ")", "\n", "# idx = torch.argmax(ncc, dim=2)", "\n", "idx", "=", "torch", ".", "topk", "(", "ncc", ",", "k", "=", "self", ".", "k", ",", "dim", "=", "2", ")", "[", "1", "]", "\n", "x_rec", "=", "torch", ".", "zeros", "(", "input_patch", ".", "shape", "[", "0", "]", ",", "input_patch", ".", "shape", "[", "1", "]", ",", "input_patch", ".", "shape", "[", "2", "]", ")", ".", "type_as", "(", "input_patch", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "k", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "input_patch", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "t", "=", "idx", "[", "j", ":", "j", "+", "1", ",", ":", ",", "i", ":", "i", "+", "1", "]", ".", "squeeze", "(", "2", ")", "\n", "x_rec", "[", "j", ":", "j", "+", "1", ",", ":", ",", ":", "]", "=", "ref_patch", "[", "j", ":", "j", "+", "1", ",", ":", ",", "t", "]", ".", "squeeze", "(", "2", ")", "\n", "\n", "", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "self", ".", "fold", "(", "x_rec", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v1.__init__": [[90, 189], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Hardtanh", "torch.Hardtanh", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "model.ResnetBlock", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "model.ResnetBlock", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "model.ResnetBlock", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "model.ResnetBlock", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "up_factor", ")", ":", "\n", "        ", "super", "(", "VAE_v1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "up_factor", "=", "up_factor", "\n", "self", ".", "init_feat", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ",", "0", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ",", "0", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ",", "0", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ",", "0", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ",", "0", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ",", "0", ")", ",", "\n", ")", "\n", "\n", "self", ".", "VAE_encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "8192", ",", "512", ")", ",", "\n", "# nn.ReLU(),", "\n", "# nn.Linear(2048, 512),", "\n", ")", "\n", "self", ".", "VAE_decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "16384", ")", ",", "\n", ")", "\n", "\n", "self", ".", "up1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "16", ",", "256", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "ResnetBlock", "(", "256", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "256", ")", "\n", ")", "\n", "self", ".", "mask1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "256", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "# nn.InstanceNorm2d(256),", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "1", ",", "1", ",", "0", ")", "\n", ")", "\n", "self", ".", "up2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "ResnetBlock", "(", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "128", ")", "\n", ")", "\n", "self", ".", "mask2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "# nn.InstanceNorm2d(128),", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "1", ",", "1", ",", "0", ")", "\n", ")", "\n", "self", ".", "up3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "ResnetBlock", "(", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "64", ")", "\n", ")", "\n", "self", ".", "mask3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "# nn.InstanceNorm2d(64),", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "1", ",", "1", ",", "0", ")", "\n", ")", "\n", "self", ".", "up4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "ResnetBlock", "(", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "64", ")", "\n", ")", "\n", "self", ".", "mask4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "# nn.InstanceNorm2d(64),", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "1", ",", "1", ",", "0", ")", "\n", ")", "\n", "\n", "self", ".", "recon", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "3", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", "\n", ")", "\n", "self", ".", "pix_up", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "self", ".", "mu_act", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "var_act", "=", "nn", ".", "Hardtanh", "(", "min_val", "=", "-", "4.5", ",", "max_val", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v1.reparameterize": [[190, 195], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like.mul", "torch.randn_like.mul"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ")", ":", "\n", "        ", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "\n", "return", "eps", ".", "mul", "(", "std", ")", "+", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v1.encode": [[196, 203], ["model.VAE_v1.init_feat", "model.VAE_v1.VAE_encoder().chunk", "model.VAE_v1.VAE_encoder", "model.VAE_v1.view", "model.VAE_v1.size"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "HR", ")", ":", "\n", "# initial", "\n", "        ", "HR_feat", "=", "self", ".", "init_feat", "(", "HR", ")", "\n", "# encoder", "\n", "z_q_mu", ",", "z_q_logvar", "=", "self", ".", "VAE_encoder", "(", "HR_feat", ".", "view", "(", "HR_feat", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "\n", "return", "z_q_mu", ",", "z_q_logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v1.decode": [[204, 236], ["model.VAE_v1.VAE_decoder().view", "model.VAE_v1.up1", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v1.mask1().chunk", "model.VAE_v1.pix_up", "model.VAE_v1.up2", "model.VAE_v1.mask2().chunk", "model.VAE_v1.pix_up", "model.VAE_v1.up3", "model.VAE_v1.mask3().chunk", "model.VAE_v1.pix_up", "model.VAE_v1.up4", "model.VAE_v1.mask4().chunk", "model.VAE_v1.recon", "LR.size", "model.VAE_v1.VAE_decoder", "model.VAE_v1.mask1", "model.VAE_v1.mask2", "model.VAE_v1.mask3", "model.VAE_v1.mask4", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "LR", ",", "z_q", ")", ":", "\n", "        ", "dec_feat", "=", "self", ".", "VAE_decoder", "(", "z_q", ")", ".", "view", "(", "LR", ".", "size", "(", "0", ")", ",", "16", ",", "32", ",", "32", ")", "\n", "\n", "# reconstruction", "\n", "up1", "=", "self", ".", "up1", "(", "dec_feat", ")", "\n", "# up1 = norm_mean_std(up1)", "\n", "up1", "=", "F", ".", "interpolate", "(", "up1", ",", "size", "=", "[", "LR", ".", "shape", "[", "2", "]", ",", "LR", ".", "shape", "[", "3", "]", "]", ",", "mode", "=", "'bicubic'", ")", "\n", "mu1", ",", "var1", "=", "self", ".", "mask1", "(", "LR", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "up1", "=", "up1", "*", "(", "1", "+", "var1", ")", "+", "mu1", "\n", "up1", "=", "self", ".", "pix_up", "(", "up1", ")", "\n", "\n", "up2", "=", "self", ".", "up2", "(", "up1", ")", "\n", "# up2 = norm_mean_std(up2)", "\n", "mu2", ",", "var2", "=", "self", ".", "mask2", "(", "F", ".", "interpolate", "(", "LR", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bicubic'", ")", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "up2", "=", "up2", "*", "(", "1", "+", "var2", ")", "+", "mu2", "\n", "up2", "=", "self", ".", "pix_up", "(", "up2", ")", "\n", "\n", "up3", "=", "self", ".", "up3", "(", "up2", ")", "\n", "# up3 = norm_mean_std(up3)", "\n", "mu3", ",", "var3", "=", "self", ".", "mask3", "(", "F", ".", "interpolate", "(", "LR", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bicubic'", ")", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "up3", "=", "up3", "*", "(", "1", "+", "var3", ")", "+", "mu3", "\n", "up3", "=", "self", ".", "pix_up", "(", "up3", ")", "\n", "\n", "up4", "=", "self", ".", "up4", "(", "up3", ")", "\n", "# up4 = norm_mean_std(up4)", "\n", "mu4", ",", "var4", "=", "self", ".", "mask4", "(", "F", ".", "interpolate", "(", "LR", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bicubic'", ")", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "up4", "=", "up4", "*", "(", "1", "+", "var4", ")", "+", "mu4", "\n", "\n", "SR", "=", "self", ".", "recon", "(", "up4", ")", "\n", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v1.forward": [[238, 253], ["torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v1.encode", "model.VAE_v1.reparameterize", "model.VAE_v1.decode", "model.VAE_v1.decode", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "z_q_logvar.exp", "z_q_mu.pow"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.reparameterize", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.decode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.decode"], ["", "def", "forward", "(", "self", ",", "LR", ",", "HR", "=", "None", ",", "z_q", "=", "None", ")", ":", "\n", "# encode", "\n", "        ", "if", "z_q", "is", "None", ":", "\n", "            ", "bic", "=", "F", ".", "interpolate", "(", "LR", ",", "scale_factor", "=", "self", ".", "up_factor", ",", "mode", "=", "'bicubic'", ")", "\n", "z_q_mu", ",", "z_q_logvar", "=", "self", ".", "encode", "(", "HR", "-", "bic", ")", "\n", "z_q", "=", "self", ".", "reparameterize", "(", "z_q_mu", ",", "z_q_logvar", ")", "\n", "KL", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "z_q_logvar", "-", "z_q_mu", ".", "pow", "(", "2", ")", "-", "z_q_logvar", ".", "exp", "(", ")", ")", "\n", "# decode", "\n", "SR", "=", "self", ".", "decode", "(", "LR", ",", "z_q", ")", "\n", "\n", "return", "SR", ",", "KL", "\n", "", "else", ":", "\n", "            ", "SR", "=", "self", ".", "decode", "(", "LR", ",", "z_q", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v2.__init__": [[257, 297], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sigmoid", "torch.Sigmoid", "torch.Hardtanh", "torch.Hardtanh", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "model.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "model.ResnetBlock", "model.ResnetBlock", "model.ResnetBlock", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "up_factor", ")", ":", "\n", "        ", "super", "(", "VAE_v2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "up_factor", "=", "up_factor", "\n", "self", ".", "init_feat", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "64", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "VAE_encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "16384", ",", "512", ")", ",", "\n", "# nn.ReLU(),", "\n", "# nn.Linear(2048, 512),", "\n", ")", "\n", "self", ".", "VAE_decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "16384", ")", ",", "\n", ")", "\n", "\n", "self", ".", "dec_feat", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "512", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "# nn.LeakyReLU(),", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "self", ".", "mask", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "# nn.Dropout2d(p=0.5),", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "1024", ",", "1", ",", "1", ",", "0", ")", ",", "\n", ")", "\n", "\n", "\n", "self", ".", "mu_act", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "var_act", "=", "nn", ".", "Hardtanh", "(", "min_val", "=", "-", "4.5", ",", "max_val", "=", "0", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v2.reparameterize": [[298, 303], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like.mul", "torch.randn_like.mul"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ")", ":", "\n", "        ", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "\n", "return", "eps", ".", "mul", "(", "std", ")", "+", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v2.encode": [[304, 313], ["model.VAE_v2.init_feat", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v2.VAE_encoder().chunk", "model.VAE_v2.VAE_encoder", "torch.nn.functional.interpolate.view", "torch.nn.functional.interpolate.size"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "HR_feat", ")", ":", "\n", "# initial", "\n", "        ", "HR_feat", "=", "self", ".", "init_feat", "(", "HR_feat", ")", "\n", "# encoder", "\n", "HR_feat", "=", "F", ".", "interpolate", "(", "HR_feat", ",", "size", "=", "[", "16", ",", "16", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "z_q_mu", ",", "z_q_logvar", "=", "self", ".", "VAE_encoder", "(", "HR_feat", ".", "view", "(", "HR_feat", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "# z_q_mu = self.bn(z_q_mu)", "\n", "\n", "return", "z_q_mu", ",", "z_q_logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v2.decode": [[314, 324], ["model.VAE_v2.VAE_decoder().view", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v2.dec_feat", "model.VAE_v2.mask().chunk", "LR_feat.size", "model.VAE_v2.VAE_decoder", "model.VAE_v2.mask"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "LR_feat", ",", "z_q", ")", ":", "\n", "        ", "dec_feat", "=", "self", ".", "VAE_decoder", "(", "z_q", ")", ".", "view", "(", "LR_feat", ".", "size", "(", "0", ")", ",", "64", ",", "16", ",", "16", ")", "\n", "\n", "# reconstruction", "\n", "dec_feat", "=", "F", ".", "interpolate", "(", "dec_feat", ",", "size", "=", "[", "LR_feat", ".", "shape", "[", "2", "]", ",", "LR_feat", ".", "shape", "[", "3", "]", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "feat", "=", "self", ".", "dec_feat", "(", "dec_feat", ")", "\n", "mu", ",", "var", "=", "self", ".", "mask", "(", "LR_feat", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "feat", "=", "feat", "*", "(", "1", "+", "var", ")", "+", "mu", "\n", "\n", "return", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v2.forward": [[326, 340], ["model.VAE_v2.encode", "model.VAE_v2.reparameterize", "model.VAE_v2.decode", "model.VAE_v2.decode", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "z_q_logvar.exp", "z_q_mu.pow"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.reparameterize", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.decode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.decode"], ["", "def", "forward", "(", "self", ",", "LR_feat", ",", "HR_feat", "=", "None", ",", "z_q", "=", "None", ")", ":", "\n", "# encode", "\n", "        ", "if", "z_q", "is", "None", ":", "\n", "            ", "z_q_mu", ",", "z_q_logvar", "=", "self", ".", "encode", "(", "HR_feat", ")", "\n", "z_q", "=", "self", ".", "reparameterize", "(", "z_q_mu", ",", "z_q_logvar", ")", "\n", "KL", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "z_q_logvar", "-", "z_q_mu", ".", "pow", "(", "2", ")", "-", "z_q_logvar", ".", "exp", "(", ")", ")", "\n", "# decode", "\n", "SR", "=", "self", ".", "decode", "(", "LR_feat", ",", "z_q", ")", "\n", "\n", "return", "SR", ",", "KL", "\n", "", "else", ":", "\n", "            ", "SR", "=", "self", ".", "decode", "(", "LR_feat", ",", "z_q", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_8x.__init__": [[343, 398], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sigmoid", "torch.Sigmoid", "torch.Hardtanh", "torch.Hardtanh", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "model.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "model.ResnetBlock", "model.ResnetBlock", "model.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "up_factor", ")", ":", "\n", "        ", "super", "(", "VAE_v3_8x", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "up_factor", "=", "up_factor", "\n", "self", ".", "init_feat", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "64", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "VAE_encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "16384", ",", "512", ")", ",", "\n", "# nn.ReLU(),", "\n", "# nn.Linear(2048, 512),", "\n", ")", "\n", "self", ".", "VAE_decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "16384", ")", ",", "\n", ")", "\n", "\n", "self", ".", "dec_feat", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "512", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "# nn.LeakyReLU(),", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "self", ".", "mask", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "# nn.Dropout2d(p=0.5),", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "1024", ",", "1", ",", "1", ",", "0", ")", ",", "\n", ")", "\n", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "3", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "\n", "self", ".", "mu_act", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "var_act", "=", "nn", ".", "Hardtanh", "(", "min_val", "=", "-", "4.5", ",", "max_val", "=", "0", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_8x.reparameterize": [[399, 404], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like.mul", "torch.randn_like.mul"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ")", ":", "\n", "        ", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "\n", "return", "eps", ".", "mul", "(", "std", ")", "+", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_8x.encode": [[405, 414], ["model.VAE_v3_8x.init_feat", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v3_8x.VAE_encoder().chunk", "model.VAE_v3_8x.VAE_encoder", "torch.nn.functional.interpolate.view", "torch.nn.functional.interpolate.size"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "HR_feat", ")", ":", "\n", "# initial", "\n", "        ", "HR_feat", "=", "self", ".", "init_feat", "(", "HR_feat", ")", "\n", "# encoder", "\n", "HR_feat", "=", "F", ".", "interpolate", "(", "HR_feat", ",", "size", "=", "[", "16", ",", "16", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "z_q_mu", ",", "z_q_logvar", "=", "self", ".", "VAE_encoder", "(", "HR_feat", ".", "view", "(", "HR_feat", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "# z_q_mu = self.bn(z_q_mu)", "\n", "\n", "return", "z_q_mu", ",", "z_q_logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_8x.decode": [[415, 427], ["model.VAE_v3_8x.VAE_decoder().view", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v3_8x.dec_feat", "model.VAE_v3_8x.mask().chunk", "LR_feat.size", "model.VAE_v3_8x.decoder", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v3_8x.VAE_decoder", "model.VAE_v3_8x.mask"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "LR", ",", "LR_feat", ",", "z_q", ")", ":", "\n", "        ", "dec_feat", "=", "self", ".", "VAE_decoder", "(", "z_q", ")", ".", "view", "(", "LR_feat", ".", "size", "(", "0", ")", ",", "64", ",", "16", ",", "16", ")", "\n", "\n", "# reconstruction", "\n", "dec_feat", "=", "F", ".", "interpolate", "(", "dec_feat", ",", "size", "=", "[", "LR_feat", ".", "shape", "[", "2", "]", ",", "LR_feat", ".", "shape", "[", "3", "]", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "feat", "=", "self", ".", "dec_feat", "(", "dec_feat", ")", "\n", "mu", ",", "var", "=", "self", ".", "mask", "(", "LR_feat", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "feat", "=", "feat", "*", "(", "1", "+", "var", ")", "+", "mu", "\n", "\n", "SR", "=", "self", ".", "decoder", "(", "feat", ")", "+", "F", ".", "interpolate", "(", "LR", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_8x.forward": [[429, 443], ["model.VAE_v3_8x.encode", "model.VAE_v3_8x.reparameterize", "model.VAE_v3_8x.decode", "model.VAE_v3_8x.decode", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "z_q_logvar.exp", "z_q_mu.pow"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.reparameterize", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.decode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.decode"], ["", "def", "forward", "(", "self", ",", "LR", ",", "LR_feat", ",", "HR_feat", "=", "None", ",", "z_q", "=", "None", ")", ":", "\n", "# encode", "\n", "        ", "if", "z_q", "is", "None", ":", "\n", "            ", "z_q_mu", ",", "z_q_logvar", "=", "self", ".", "encode", "(", "HR_feat", ")", "\n", "z_q", "=", "self", ".", "reparameterize", "(", "z_q_mu", ",", "z_q_logvar", ")", "\n", "KL", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "z_q_logvar", "-", "z_q_mu", ".", "pow", "(", "2", ")", "-", "z_q_logvar", ".", "exp", "(", ")", ")", "\n", "# decode", "\n", "SR", "=", "self", ".", "decode", "(", "LR", ",", "LR_feat", ",", "z_q", ")", "\n", "\n", "return", "SR", ",", "KL", "\n", "", "else", ":", "\n", "            ", "SR", "=", "self", ".", "decode", "(", "LR", ",", "LR_feat", ",", "z_q", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.__init__": [[447, 502], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sigmoid", "torch.Sigmoid", "torch.Hardtanh", "torch.Hardtanh", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "model.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "model.ResnetBlock", "model.ResnetBlock", "model.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "up_factor", ")", ":", "\n", "        ", "super", "(", "VAE_v3_4x", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "up_factor", "=", "up_factor", "\n", "self", ".", "init_feat", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "64", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "VAE_encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "16384", ",", "512", ")", ",", "\n", "# nn.ReLU(),", "\n", "# nn.Linear(2048, 512),", "\n", ")", "\n", "self", ".", "VAE_decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", ",", "16384", ")", ",", "\n", ")", "\n", "\n", "self", ".", "dec_feat", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "512", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "# nn.LeakyReLU(),", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "self", ".", "mask", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "# nn.Dropout2d(p=0.5),", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ResnetBlock", "(", "512", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "1024", ",", "1", ",", "1", ",", "0", ")", ",", "\n", ")", "\n", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "3", ",", "3", ",", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "\n", "self", ".", "mu_act", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "var_act", "=", "nn", ".", "Hardtanh", "(", "min_val", "=", "-", "4.5", ",", "max_val", "=", "0", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.reparameterize": [[503, 508], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like.mul", "torch.randn_like.mul"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ")", ":", "\n", "        ", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "\n", "return", "eps", ".", "mul", "(", "std", ")", "+", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.encode": [[509, 518], ["model.VAE_v3_4x.init_feat", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v3_4x.VAE_encoder().chunk", "model.VAE_v3_4x.VAE_encoder", "torch.nn.functional.interpolate.view", "torch.nn.functional.interpolate.size"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "HR_feat", ")", ":", "\n", "# initial", "\n", "        ", "HR_feat", "=", "self", ".", "init_feat", "(", "HR_feat", ")", "\n", "# encoder", "\n", "HR_feat", "=", "F", ".", "interpolate", "(", "HR_feat", ",", "size", "=", "[", "16", ",", "16", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "z_q_mu", ",", "z_q_logvar", "=", "self", ".", "VAE_encoder", "(", "HR_feat", ".", "view", "(", "HR_feat", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "# z_q_mu = self.bn(z_q_mu)", "\n", "\n", "return", "z_q_mu", ",", "z_q_logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.decode": [[519, 531], ["model.VAE_v3_4x.VAE_decoder().view", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v3_4x.dec_feat", "model.VAE_v3_4x.mask().chunk", "LR_feat.size", "model.VAE_v3_4x.decoder", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.VAE_v3_4x.VAE_decoder", "model.VAE_v3_4x.mask"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "LR", ",", "LR_feat", ",", "z_q", ")", ":", "\n", "        ", "dec_feat", "=", "self", ".", "VAE_decoder", "(", "z_q", ")", ".", "view", "(", "LR_feat", ".", "size", "(", "0", ")", ",", "64", ",", "16", ",", "16", ")", "\n", "\n", "# reconstruction", "\n", "dec_feat", "=", "F", ".", "interpolate", "(", "dec_feat", ",", "size", "=", "[", "LR_feat", ".", "shape", "[", "2", "]", ",", "LR_feat", ".", "shape", "[", "3", "]", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "feat", "=", "self", ".", "dec_feat", "(", "dec_feat", ")", "\n", "mu", ",", "var", "=", "self", ".", "mask", "(", "LR_feat", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "feat", "=", "feat", "*", "(", "1", "+", "var", ")", "+", "mu", "\n", "\n", "SR", "=", "self", ".", "decoder", "(", "feat", ")", "+", "F", ".", "interpolate", "(", "LR", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.forward": [[533, 547], ["model.VAE_v3_4x.encode", "model.VAE_v3_4x.reparameterize", "model.VAE_v3_4x.decode", "model.VAE_v3_4x.decode", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "z_q_logvar.exp", "z_q_mu.pow"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.reparameterize", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.decode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.VAE_v3_4x.decode"], ["", "def", "forward", "(", "self", ",", "LR", ",", "LR_feat", ",", "HR_feat", "=", "None", ",", "z_q", "=", "None", ")", ":", "\n", "# encode", "\n", "        ", "if", "z_q", "is", "None", ":", "\n", "            ", "z_q_mu", ",", "z_q_logvar", "=", "self", ".", "encode", "(", "HR_feat", ")", "\n", "z_q", "=", "self", ".", "reparameterize", "(", "z_q_mu", ",", "z_q_logvar", ")", "\n", "KL", "=", "-", "0.5", "*", "torch", ".", "sum", "(", "1", "+", "z_q_logvar", "-", "z_q_mu", ".", "pow", "(", "2", ")", "-", "z_q_logvar", ".", "exp", "(", ")", ")", "\n", "# decode", "\n", "SR", "=", "self", ".", "decode", "(", "LR", ",", "LR_feat", ",", "z_q", ")", "\n", "\n", "return", "SR", ",", "KL", "\n", "", "else", ":", "\n", "            ", "SR", "=", "self", ".", "decode", "(", "LR", ",", "LR_feat", ",", "z_q", ")", "\n", "\n", "return", "SR", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.generator.__init__": [[552, 584], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "model.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "model.ResnetBlock", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "model.ResnetBlock", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "model.generator.modules", "classname.find", "m.weight.data.normal_", "m.bias.data.zero_", "classname.find", "m.weight.data.normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_num", ",", "base_filter", ")", ":", "\n", "        ", "super", "(", "generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# backbone", "\n", "self", ".", "input_conv", "=", "nn", ".", "Linear", "(", "256", ",", "16384", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "16", ",", "base_filter", "*", "4", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "norm1", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", "*", "4", ")", "\n", "self", ".", "res1", "=", "ResnetBlock", "(", "base_filter", "*", "4", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "base_filter", "*", "4", ",", "base_filter", "*", "2", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", "*", "2", ")", "\n", "self", ".", "res2", "=", "ResnetBlock", "(", "base_filter", "*", "2", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "base_filter", "*", "2", ",", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "norm3", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", ")", "\n", "self", ".", "res3", "=", "ResnetBlock", "(", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "act", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "# condition", "\n", "self", ".", "feat", "=", "nn", ".", "Conv2d", "(", "input_num", ",", "base_filter", "*", "4", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.generator.encode": [[585, 605], ["model.generator.act", "model.generator.act", "model.generator.act", "model.generator.act", "model.generator.weight", "prob.view.view.view", "feat.view.view.view", "out1.view.view.view", "out2.view.view.view", "out3.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.generator.input_conv", "model.generator.norm1", "model.generator.norm2", "model.generator.norm3", "model.generator.conv1", "model.generator.conv2", "model.generator.conv3"], "methods", ["None"], ["", "", "", "", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat", "=", "self", ".", "act", "(", "self", ".", "input_conv", "(", "x", ")", ")", "\n", "out1", "=", "self", ".", "act", "(", "self", ".", "norm1", "(", "self", ".", "conv1", "(", "feat", ")", ")", ")", "\n", "out2", "=", "self", ".", "act", "(", "self", ".", "norm2", "(", "self", ".", "conv2", "(", "out1", ")", ")", ")", "\n", "out3", "=", "self", ".", "act", "(", "self", ".", "norm3", "(", "self", ".", "conv3", "(", "out2", ")", ")", ")", "\n", "\n", "prob", "=", "self", ".", "weight", "(", "out3", ")", "\n", "\n", "b", "=", "feat", ".", "shape", "[", "0", "]", "\n", "\n", "prob", "=", "prob", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "\n", "feat", "=", "feat", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "out1", "=", "out1", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "out2", "=", "out2", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "out3", "=", "out3", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "\n", "out", "=", "torch", ".", "cat", "(", "(", "feat", ",", "out1", ",", "out2", ",", "out3", ")", ",", "1", ")", "\n", "\n", "return", "out", ",", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.generator.forward": [[606, 618], ["model.generator.encode", "model.generator.down", "model.generator.encode", "model.generator.down", "model.generator.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# x = torch.cat((x, y), 1)", "\n", "        ", "feat1", ",", "prob1", "=", "self", ".", "encode", "(", "x", ")", "\n", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "feat2", ",", "prob2", "=", "self", ".", "encode", "(", "x", ")", "\n", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "feat3", ",", "prob3", "=", "self", ".", "encode", "(", "x", ")", "\n", "\n", "feat_out", "=", "torch", ".", "cat", "(", "(", "feat1", ",", "feat2", ",", "feat3", ")", ",", "1", ")", "\n", "prob_out", "=", "torch", ".", "cat", "(", "(", "prob1", ",", "prob2", ",", "prob3", ")", ",", "1", ")", "\n", "\n", "return", "feat_out", ",", "prob_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.__init__": [[620, 647], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "model.discriminator_v2.modules", "classname.find", "m.weight.data.normal_", "m.bias.data.zero_", "classname.find", "m.weight.data.normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "base_filter", ")", ":", "\n", "        ", "super", "(", "discriminator_v2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_conv", "=", "nn", ".", "Conv2d", "(", "num_channels", ",", "base_filter", ",", "3", ",", "1", ",", "1", ")", "#512*256", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "base_filter", ",", "base_filter", "*", "2", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "norm1", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", "*", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "base_filter", "*", "2", ",", "base_filter", "*", "4", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", "*", "4", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "base_filter", "*", "4", ",", "base_filter", "*", "8", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "norm3", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", "*", "8", ")", "\n", "self", ".", "act", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "False", ")", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Conv2d", "(", "base_filter", "*", "8", ",", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "self", ".", "down", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "[", "1", ",", "1", "]", ")", "\n", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode": [[648, 668], ["model.discriminator_v2.act", "model.discriminator_v2.act", "model.discriminator_v2.act", "model.discriminator_v2.act", "model.discriminator_v2.weight", "prob.view.view.view", "feat.view.view.view", "out1.view.view.view", "out2.view.view.view", "out3.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.discriminator_v2.input_conv", "model.discriminator_v2.norm1", "model.discriminator_v2.norm2", "model.discriminator_v2.norm3", "model.discriminator_v2.conv1", "model.discriminator_v2.conv2", "model.discriminator_v2.conv3"], "methods", ["None"], ["", "", "", "", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat", "=", "self", ".", "act", "(", "self", ".", "input_conv", "(", "x", ")", ")", "\n", "out1", "=", "self", ".", "act", "(", "self", ".", "norm1", "(", "self", ".", "conv1", "(", "feat", ")", ")", ")", "\n", "out2", "=", "self", ".", "act", "(", "self", ".", "norm2", "(", "self", ".", "conv2", "(", "out1", ")", ")", ")", "\n", "out3", "=", "self", ".", "act", "(", "self", ".", "norm3", "(", "self", ".", "conv3", "(", "out2", ")", ")", ")", "\n", "\n", "prob", "=", "self", ".", "weight", "(", "out3", ")", "\n", "\n", "b", "=", "feat", ".", "shape", "[", "0", "]", "\n", "\n", "prob", "=", "prob", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "\n", "feat", "=", "feat", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "out1", "=", "out1", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "out2", "=", "out2", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "out3", "=", "out3", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "\n", "out", "=", "torch", ".", "cat", "(", "(", "feat", ",", "out1", ",", "out2", ",", "out3", ")", ",", "1", ")", "\n", "\n", "return", "out", ",", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.forward": [[669, 681], ["model.discriminator_v2.encode", "model.discriminator_v2.down", "model.discriminator_v2.encode", "model.discriminator_v2.down", "model.discriminator_v2.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v2.encode"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# x = torch.cat((x, y), 1)", "\n", "        ", "feat1", ",", "prob1", "=", "self", ".", "encode", "(", "x", ")", "\n", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "feat2", ",", "prob2", "=", "self", ".", "encode", "(", "x", ")", "\n", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "feat3", ",", "prob3", "=", "self", ".", "encode", "(", "x", ")", "\n", "\n", "feat_out", "=", "torch", ".", "cat", "(", "(", "feat1", ",", "feat2", ",", "feat3", ")", ",", "1", ")", "\n", "prob_out", "=", "torch", ".", "cat", "(", "(", "prob1", ",", "prob2", ",", "prob3", ")", ",", "1", ")", "\n", "\n", "return", "feat_out", ",", "prob_out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v3.__init__": [[684, 713], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "model.discriminator_v3.modules", "classname.find", "m.weight.data.normal_", "m.bias.data.zero_", "classname.find", "m.weight.data.normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "base_filter", ",", "down_factor", ")", ":", "\n", "        ", "super", "(", "discriminator_v3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down_factor", "=", "down_factor", "\n", "\n", "self", ".", "input_conv", "=", "nn", ".", "Conv2d", "(", "num_channels", "*", "down_factor", "*", "down_factor", ",", "base_filter", ",", "1", ",", "1", ",", "0", ")", "#512*256", "\n", "self", ".", "bn", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "base_filter", ",", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "norm1", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "base_filter", ",", "base_filter", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "base_filter", ",", "base_filter", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "norm3", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv2d", "(", "base_filter", ",", "base_filter", ",", "4", ",", "2", ",", "1", ")", "\n", "self", ".", "norm4", "=", "nn", ".", "InstanceNorm2d", "(", "base_filter", ")", "\n", "self", ".", "act", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "False", ")", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Conv2d", "(", "base_filter", ",", "base_filter", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.discriminator_v3.forward": [[715, 737], ["model.pixel_unshuffle", "model.discriminator_v3.bn", "model.discriminator_v3.act", "model.discriminator_v3.act", "model.discriminator_v3.act", "model.discriminator_v3.act", "model.discriminator_v3.weight", "prob.view.view.view", "out1.view.view.view", "out2.view.view.view", "out3.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.discriminator_v3.input_conv", "model.discriminator_v3.norm1", "model.discriminator_v3.norm2", "model.discriminator_v3.norm3", "model.discriminator_v3.norm4", "model.discriminator_v3.conv1", "model.discriminator_v3.conv2", "model.discriminator_v3.conv3", "model.discriminator_v3.conv4"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.pixel_unshuffle"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# x = torch.cat((x, y), 1)", "\n", "        ", "x", "=", "pixel_unshuffle", "(", "x", ",", "downscale_factor", "=", "self", ".", "down_factor", ")", "\n", "feat", "=", "self", ".", "bn", "(", "self", ".", "input_conv", "(", "x", ")", ")", "\n", "out1", "=", "self", ".", "act", "(", "self", ".", "norm1", "(", "self", ".", "conv1", "(", "feat", ")", ")", ")", "\n", "out2", "=", "self", ".", "act", "(", "self", ".", "norm2", "(", "self", ".", "conv2", "(", "out1", ")", ")", ")", "\n", "out3", "=", "self", ".", "act", "(", "self", ".", "norm3", "(", "self", ".", "conv3", "(", "out2", ")", ")", ")", "\n", "out4", "=", "self", ".", "act", "(", "self", ".", "norm4", "(", "self", ".", "conv4", "(", "out3", ")", ")", ")", "\n", "\n", "prob", "=", "self", ".", "weight", "(", "out4", ")", "\n", "\n", "b", "=", "feat", ".", "shape", "[", "0", "]", "\n", "\n", "prob", "=", "prob", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "\n", "out1", "=", "out1", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "out2", "=", "out2", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "out3", "=", "out3", ".", "view", "(", "b", ",", "-", "1", ")", "\n", "\n", "feat_out", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ",", "out3", ")", ",", "1", ")", "\n", "\n", "return", "feat_out", ",", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Vgg19_feat.__init__": [[741, 768], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "range", "range", "range", "torch.L1Loss().to", "torch.L1Loss().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "model.Vgg19_feat.register_buffer", "model.Vgg19_feat.register_buffer", "torchvision.models.vgg19", "model.Vgg19_feat.slice1.add_module", "model.Vgg19_feat.slice2.add_module", "model.Vgg19_feat.slice3.add_module", "model.Vgg19_feat.slice4.add_module", "model.Vgg19_feat.parameters", "str", "str", "str", "str", "torch.L1Loss", "torch.L1Loss", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "requires_grad", "=", "False", ")", ":", "\n", "        ", "super", "(", "Vgg19_feat", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_pretrained_features", "=", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "\n", "self", ".", "slice1", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "x", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "2", ",", "7", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "7", ",", "12", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "12", ",", "21", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "\n", "# fixed pretrained vgg19 model for feature extraction", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "self", ".", "L1_loss", "=", "nn", ".", "L1Loss", "(", "size_average", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "mean", "=", "torch", ".", "Tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "std", "=", "torch", ".", "Tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "register_buffer", "(", "'mean'", ",", "mean", ")", "\n", "self", ".", "register_buffer", "(", "'std'", ",", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Vgg19_feat.feat_extract": [[769, 781], ["model.Vgg19_feat.slice1", "model.Vgg19_feat.slice2", "model.Vgg19_feat.slice3", "model.Vgg19_feat.slice4"], "methods", ["None"], ["", "def", "feat_extract", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "h", "=", "self", ".", "slice1", "(", "x", ")", "\n", "h_relu1_1", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2_1", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3_1", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4_1", "=", "h", "\n", "\n", "return", "h_relu1_1", ",", "h_relu2_1", ",", "h_relu3_1", ",", "h_relu4_1", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Vgg19_feat.forward": [[782, 811], ["model.Vgg19_feat.feat_extract", "model.Vgg19_feat.feat_extract", "model.Vgg19_feat.L1_loss", "model.calc_mean_std", "model.calc_mean_std", "model.calc_mean_std", "model.calc_mean_std", "model.calc_mean_std", "model.calc_mean_std", "model.calc_mean_std", "model.calc_mean_std", "model.Vgg19_feat.L1_loss", "model.Vgg19_feat.L1_loss", "model.Vgg19_feat.L1_loss", "model.Vgg19_feat.L1_loss", "model.Vgg19_feat.L1_loss", "model.Vgg19_feat.L1_loss", "model.Vgg19_feat.L1_loss", "model.Vgg19_feat.L1_loss"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Vgg19_feat.feat_extract", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Vgg19_feat.feat_extract", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x_feat1", ",", "x_feat2", ",", "x_feat3", ",", "x_feat4", "=", "self", ".", "feat_extract", "(", "x", ")", "\n", "y_feat1", ",", "y_feat2", ",", "y_feat3", ",", "y_feat4", "=", "self", ".", "feat_extract", "(", "y", ")", "\n", "\n", "ContentLoss", "=", "self", ".", "L1_loss", "(", "x_feat4", ",", "y_feat4", ")", "\n", "\n", "# style loss", "\n", "StyleLoss", "=", "0", "\n", "mean_x", ",", "var_x", "=", "calc_mean_std", "(", "x_feat1", ")", "\n", "mean_style", ",", "var_style", "=", "calc_mean_std", "(", "y_feat1", ")", "\n", "StyleLoss", "=", "StyleLoss", "+", "self", ".", "L1_loss", "(", "mean_x", ",", "mean_style", ")", "\n", "StyleLoss", "=", "StyleLoss", "+", "self", ".", "L1_loss", "(", "var_x", ",", "var_style", ")", "\n", "\n", "mean_x", ",", "var_x", "=", "calc_mean_std", "(", "x_feat2", ")", "\n", "mean_style", ",", "var_style", "=", "calc_mean_std", "(", "y_feat2", ")", "\n", "StyleLoss", "=", "StyleLoss", "+", "self", ".", "L1_loss", "(", "mean_x", ",", "mean_style", ")", "\n", "StyleLoss", "=", "StyleLoss", "+", "self", ".", "L1_loss", "(", "var_x", ",", "var_style", ")", "\n", "\n", "mean_x", ",", "var_x", "=", "calc_mean_std", "(", "x_feat3", ")", "\n", "mean_style", ",", "var_style", "=", "calc_mean_std", "(", "y_feat3", ")", "\n", "StyleLoss", "=", "StyleLoss", "+", "self", ".", "L1_loss", "(", "mean_x", ",", "mean_style", ")", "\n", "StyleLoss", "=", "StyleLoss", "+", "self", ".", "L1_loss", "(", "var_x", ",", "var_style", ")", "\n", "\n", "mean_x", ",", "var_x", "=", "calc_mean_std", "(", "x_feat4", ")", "\n", "mean_style", ",", "var_style", "=", "calc_mean_std", "(", "y_feat4", ")", "\n", "StyleLoss", "=", "StyleLoss", "+", "self", ".", "L1_loss", "(", "mean_x", ",", "mean_style", ")", "\n", "StyleLoss", "=", "StyleLoss", "+", "self", ".", "L1_loss", "(", "var_x", ",", "var_style", ")", "\n", "\n", "return", "ContentLoss", ",", "StyleLoss", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Vgg19Conv2.__init__": [[814, 830], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "range", "torchvision.models.vgg19", "model.Vgg19Conv2.slice2.add_module", "model.Vgg19Conv2.parameters", "str"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ")", ":", "\n", "        ", "super", "(", "Vgg19Conv2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_pretrained_features", "=", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "\n", "# self.slice1 = nn.Sequential()", "\n", "self", ".", "slice2", "=", "nn", ".", "Sequential", "(", ")", "\n", "\n", "# for x in range(2):", "\n", "#     self.slice1.add_module(str(x), vgg_pretrained_features[x])", "\n", "\n", "for", "x", "in", "range", "(", "23", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "# fixed pretrained vgg19 model for feature extraction", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Vgg19Conv2.forward": [[831, 836], ["model.Vgg19Conv2.slice2"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# out1 = self.slice1(x)", "\n", "        ", "out2", "=", "self", ".", "slice2", "(", "x", ")", "\n", "\n", "return", "out2", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.PDLoss.__init__": [[849, 860], ["torch.Module.__init__", "Vgg19Conv2().to", "torch.L1Loss", "torch.L1Loss", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "torch.Tensor().view().to", "model.PDLoss.register_buffer", "model.PDLoss.register_buffer", "model.Vgg19Conv2", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "l1_lambda", "=", "1.5", ",", "w_lambda", "=", "0.01", ",", "average", "=", "True", ")", ":", "\n", "        ", "super", "(", "PDLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vgg", "=", "Vgg19Conv2", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "criterionL1", "=", "nn", ".", "L1Loss", "(", "size_average", "=", "average", ")", "\n", "self", ".", "w_lambda", "=", "w_lambda", "\n", "self", ".", "l1_lambda", "=", "l1_lambda", "\n", "\n", "mean", "=", "torch", ".", "Tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "std", "=", "torch", ".", "Tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "register_buffer", "(", "'mean'", ",", "mean", ")", "\n", "self", ".", "register_buffer", "(", "'std'", ",", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.PDLoss.w_distance": [[861, 883], ["model.calc_mean_std", "model.calc_mean_std", "xvgg.view.view.view", "yvgg.view.view.view", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum.sum", "torch.sum.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.sum.sum", "torch.sum.sum", "torch.sum.sum", "torch.sum.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "xvgg.view.view.size", "xvgg.view.view.size", "yvgg.view.view.size", "yvgg.view.view.size"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std"], ["", "def", "w_distance", "(", "self", ",", "xvgg", ",", "yvgg", ")", ":", "\n", "        ", "x_mean", ",", "x_var", "=", "calc_mean_std", "(", "xvgg", ")", "\n", "y_mean", ",", "y_var", "=", "calc_mean_std", "(", "yvgg", ")", "\n", "xvgg", "=", "xvgg", "/", "(", "torch", ".", "sum", "(", "xvgg", ",", "dim", "=", "(", "2", ",", "3", ")", ",", "keepdim", "=", "True", ")", "+", "1e-14", ")", "\n", "yvgg", "=", "yvgg", "/", "(", "torch", ".", "sum", "(", "yvgg", ",", "dim", "=", "(", "2", ",", "3", ")", ",", "keepdim", "=", "True", ")", "+", "1e-14", ")", "\n", "\n", "xvgg", "=", "xvgg", ".", "view", "(", "xvgg", ".", "size", "(", ")", "[", "0", "]", ",", "xvgg", ".", "size", "(", ")", "[", "1", "]", ",", "-", "1", ")", "\n", "yvgg", "=", "yvgg", ".", "view", "(", "yvgg", ".", "size", "(", ")", "[", "0", "]", ",", "yvgg", ".", "size", "(", ")", "[", "1", "]", ",", "-", "1", ")", "\n", "\n", "cdf_xvgg", "=", "torch", ".", "cumsum", "(", "xvgg", ",", "dim", "=", "-", "1", ")", "\n", "cdf_yvgg", "=", "torch", ".", "cumsum", "(", "yvgg", ",", "dim", "=", "-", "1", ")", "\n", "\n", "cdf_distance", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "cdf_xvgg", "-", "cdf_yvgg", ")", ",", "dim", "=", "-", "1", ")", "\n", "# cdf_loss = cdf_distance.mean()", "\n", "cdf_loss", "=", "cdf_distance", ".", "sum", "(", ")", "\n", "\n", "mean_distance", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "x_mean", "-", "y_mean", ")", ",", "dim", "=", "-", "1", ")", "\n", "var_distance", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "x_var", "-", "y_var", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n", "mean_var_loss", "=", "mean_distance", ".", "sum", "(", ")", "+", "var_distance", ".", "sum", "(", ")", "\n", "\n", "return", "cdf_loss", ",", "mean_var_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.PDLoss.forward": [[884, 897], ["model.PDLoss.vgg", "model.PDLoss.vgg", "model.PDLoss.w_distance"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.PDLoss.w_distance"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "# L1loss = self.criterionL1(x, y) * self.l1_lambda", "\n", "# L1loss = 0", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "y", "=", "(", "y", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "x_vgg1", "=", "self", ".", "vgg", "(", "x", ")", "\n", "y_vgg1", "=", "self", ".", "vgg", "(", "y", ")", "\n", "\n", "WdLoss", ",", "mean_var_loss", "=", "self", ".", "w_distance", "(", "x_vgg1", ",", "y_vgg1", ")", "\n", "WdLoss", "=", "WdLoss", "*", "self", ".", "w_lambda", "\n", "# WdLoss_img = self.w_distance(x, y)", "\n", "\n", "return", "WdLoss", ",", "mean_var_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.GatedDense.__init__": [[908, 915], ["torch.Module.__init__", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "activation", "=", "None", ")", ":", "\n", "        ", "super", "(", "GatedDense", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "h", "=", "nn", ".", "Linear", "(", "input_size", ",", "output_size", ")", "\n", "self", ".", "g", "=", "nn", ".", "Linear", "(", "input_size", ",", "output_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.GatedDense.forward": [[916, 924], ["model.GatedDense.h", "model.GatedDense.sigmoid", "model.GatedDense.activation", "model.GatedDense.g", "model.GatedDense.h"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "h", "(", "x", ")", "\n", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "h", "=", "self", ".", "activation", "(", "self", ".", "h", "(", "x", ")", ")", "\n", "\n", "", "g", "=", "self", ".", "sigmoid", "(", "self", ".", "g", "(", "x", ")", ")", "\n", "\n", "return", "h", "*", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ConvBlock.__init__": [[926, 932], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ConvBlock.forward": [[933, 937], ["model.ConvBlock.conv", "model.ConvBlock.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "return", "self", ".", "act", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.DeconvBlock.__init__": [[940, 946], ["super().__init__", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "DeconvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "deconv", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.DeconvBlock.forward": [[947, 951], ["model.DeconvBlock.deconv", "model.DeconvBlock.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "deconv", "(", "x", ")", "\n", "\n", "return", "self", ".", "act", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.UpBlock.__init__": [[954, 962], ["super().__init__", "model.DeconvBlock", "model.ConvBlock", "model.DeconvBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ")", ":", "\n", "        ", "super", "(", "UpBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "DeconvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "DeconvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "local_weight1", "=", "nn", ".", "Conv2d", "(", "input_size", ",", "2", "*", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "local_weight2", "=", "nn", ".", "Conv2d", "(", "output_size", ",", "2", "*", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.UpBlock.forward": [[963, 971], ["model.UpBlock.conv1", "model.UpBlock.conv2", "model.UpBlock.local_weight1().chunk", "model.UpBlock.conv3", "model.UpBlock.local_weight2().chunk", "model.UpBlock.local_weight1", "model.UpBlock.local_weight2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hr", "=", "self", ".", "conv1", "(", "x", ")", "\n", "lr", "=", "self", ".", "conv2", "(", "hr", ")", "\n", "mean", ",", "var", "=", "self", ".", "local_weight1", "(", "x", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "residue", "=", "mean", "+", "lr", "*", "(", "1", "+", "var", ")", "\n", "h_residue", "=", "self", ".", "conv3", "(", "residue", ")", "\n", "mean", ",", "var", "=", "self", ".", "local_weight2", "(", "hr", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "return", "mean", "+", "h_residue", "*", "(", "1", "+", "var", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.DownBlock.__init__": [[974, 982], ["super().__init__", "model.ConvBlock", "model.DeconvBlock", "model.ConvBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ")", ":", "\n", "        ", "super", "(", "DownBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "ConvBlock", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "DeconvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "ConvBlock", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "local_weight1", "=", "nn", ".", "Conv2d", "(", "input_size", ",", "2", "*", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "local_weight2", "=", "nn", ".", "Conv2d", "(", "output_size", ",", "2", "*", "output_size", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.DownBlock.forward": [[983, 991], ["model.DownBlock.conv1", "model.DownBlock.conv2", "model.DownBlock.local_weight1().chunk", "model.DownBlock.conv3", "model.DownBlock.local_weight2().chunk", "model.DownBlock.local_weight1", "model.DownBlock.local_weight2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "lr", "=", "self", ".", "conv1", "(", "x", ")", "\n", "hr", "=", "self", ".", "conv2", "(", "lr", ")", "\n", "mean", ",", "var", "=", "self", ".", "local_weight1", "(", "x", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "residue", "=", "mean", "+", "hr", "*", "(", "1", "+", "var", ")", "\n", "l_residue", "=", "self", ".", "conv3", "(", "residue", ")", "\n", "mean", ",", "var", "=", "self", ".", "local_weight2", "(", "lr", ")", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "return", "mean", "+", "l_residue", "*", "(", "1", "+", "var", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResnetBlock.__init__": [[994, 1001], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv2d", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv2d", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "act1", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", ")", "\n", "self", ".", "act2", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResnetBlock.forward": [[1002, 1010], ["model.ResnetBlock.conv1", "model.ResnetBlock.act1", "model.ResnetBlock.conv2", "model.ResnetBlock.act2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "act1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "out", "+", "x", "\n", "out", "=", "self", ".", "act2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Self_attention.__init__": [[1013, 1034], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", ":", "\n", "        ", "super", "(", "Self_attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "self", ".", "K", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "Q", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "V", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "self", ".", "scale", "+", "2", ",", "stride", "=", "self", ".", "scale", ",", "padding", "=", "1", ")", "\n", "\n", "if", "kernel_size", "==", "1", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Self_attention.forward": [[1035, 1065], ["x.size", "model.Self_attention.K", "model.Self_attention.Q", "model.Self_attention.V", "model.Self_attention.view", "V_reshape.permute.permute.permute", "model.Self_attention.view", "model.Self_attention.view", "K_reshape.permute.permute.permute", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous", "torch.matmul.permute().contiguous.view", "model.Self_attention.local_weight", "model.Self_attention.pool", "model.Self_attention.pool", "torch.matmul.permute", "torch.matmul.permute", "x.size", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "K", "=", "self", ".", "K", "(", "x", ")", "\n", "Q", "=", "self", ".", "Q", "(", "x", ")", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "Q", "=", "self", ".", "pool", "(", "Q", ")", "\n", "", "else", ":", "\n", "            ", "Q", "=", "Q", "\n", "", "V", "=", "self", ".", "V", "(", "x", ")", "\n", "if", "self", ".", "stride", ">", "1", ":", "\n", "            ", "V", "=", "self", ".", "pool", "(", "V", ")", "\n", "", "else", ":", "\n", "            ", "V", "=", "V", "\n", "", "V_reshape", "=", "V", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "V_reshape", "=", "V_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "Q_reshape", "=", "Q", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "\n", "K_reshape", "=", "K", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "K_reshape", "=", "K_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "KQ", "=", "torch", ".", "matmul", "(", "K_reshape", ",", "Q_reshape", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "KQ", ",", "dim", "=", "-", "1", ")", "\n", "\n", "vector", "=", "torch", ".", "matmul", "(", "attention", ",", "V_reshape", ")", "\n", "vector_reshape", "=", "vector", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "O", "=", "vector_reshape", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "x", ".", "size", "(", "2", ")", "//", "self", ".", "stride", ",", "x", ".", "size", "(", "3", ")", "//", "self", ".", "stride", ")", "\n", "W", "=", "self", ".", "local_weight", "(", "O", ")", "\n", "output", "=", "x", "+", "W", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Space_attention.__init__": [[1070, 1090], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ")", ":", "\n", "        ", "super", "(", "Space_attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "self", ".", "K", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "Q", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "V", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "self", ".", "scale", "+", "2", ",", "stride", "=", "self", ".", "scale", ",", "padding", "=", "1", ")", "\n", "if", "kernel_size", "==", "1", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Space_attention.forward": [[1091, 1121], ["x.size", "model.Space_attention.K", "model.Space_attention.Q", "model.Space_attention.V", "torch.nn.functional.interpolate.view", "V_reshape.permute.permute.permute", "model.Space_attention.view", "model.Space_attention.view", "K_reshape.permute.permute.permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm.permute().contiguous", "torch.bmm.permute().contiguous", "torch.bmm.permute().contiguous.view", "model.Space_attention.pool", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "model.Space_attention.local_weight", "torch.bmm.permute", "torch.bmm.permute", "x.size", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "K", "=", "self", ".", "K", "(", "x", ")", "\n", "Q", "=", "self", ".", "Q", "(", "x", ")", "\n", "if", "self", ".", "scale", ">", "1", ":", "\n", "            ", "Q", "=", "self", ".", "pool", "(", "Q", ")", "\n", "", "else", ":", "\n", "            ", "Q", "=", "Q", "\n", "", "V", "=", "self", ".", "V", "(", "y", ")", "\n", "if", "self", ".", "scale", ">", "1", ":", "\n", "            ", "V", "=", "F", ".", "interpolate", "(", "V", ",", "scale_factor", "=", "1", "/", "self", ".", "scale", ",", "mode", "=", "'bicubic'", ")", "\n", "", "else", ":", "\n", "            ", "V", "=", "V", "\n", "\n", "", "V_reshape", "=", "V", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "V_reshape", "=", "V_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "Q_reshape", "=", "Q", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "\n", "K_reshape", "=", "K", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "K_reshape", "=", "K_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "KQ", "=", "torch", ".", "bmm", "(", "K_reshape", ",", "Q_reshape", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "KQ", ",", "dim", "=", "-", "1", ")", "\n", "vector", "=", "torch", ".", "bmm", "(", "attention", ",", "V_reshape", ")", "\n", "vector_reshape", "=", "vector", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "O", "=", "vector_reshape", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "x", ".", "size", "(", "2", ")", "//", "self", ".", "stride", ",", "x", ".", "size", "(", "3", ")", "//", "self", ".", "stride", ")", "\n", "output", "=", "y", "+", "self", ".", "local_weight", "(", "O", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Cross_attention.__init__": [[1124, 1147], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "scale", ",", "t", "=", "0", ")", ":", "\n", "        ", "super", "(", "Cross_attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "t", "=", "t", "\n", "self", ".", "num", "=", "output_size", "//", "input_size", "\n", "\n", "self", ".", "K", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "Q", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "V", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "self", ".", "scale", "+", "2", ",", "stride", "=", "self", ".", "scale", ",", "padding", "=", "1", ")", "\n", "\n", "if", "kernel_size", "==", "1", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "Conv2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "local_weight", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "output_size", ",", "input_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "\n", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Cross_attention.forward": [[1148, 1187], ["y.size", "model.Cross_attention.K", "model.Cross_attention.Q", "model.Cross_attention.V", "model.Cross_attention.view", "V_reshape.permute.permute.permute", "model.Cross_attention.view", "model.Cross_attention.view", "K_reshape.permute.permute.permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm.permute().contiguous", "torch.bmm.permute().contiguous", "torch.bmm.permute().contiguous.view", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.bmm.permute().contiguous.view", "model.Cross_attention.local_weight", "model.Cross_attention.pool", "model.Cross_attention.pool", "model.Cross_attention.pool", "torch.bmm.permute", "torch.bmm.permute", "x.size", "x.size", "y.size", "y.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "batch_size", "=", "y", ".", "size", "(", "0", ")", "\n", "K", "=", "self", ".", "K", "(", "x", ")", "\n", "if", "self", ".", "t", "==", "0", ":", "\n", "            ", "if", "self", ".", "scale", ">", "1", ":", "\n", "                ", "K", "=", "self", ".", "pool", "(", "K", ")", "\n", "", "", "Q", "=", "self", ".", "Q", "(", "x", ")", "\n", "if", "self", ".", "t", "==", "0", ":", "\n", "            ", "if", "self", ".", "scale", ">", "1", ":", "\n", "                ", "Q", "=", "self", ".", "pool", "(", "Q", ")", "\n", "\n", "", "", "V", "=", "self", ".", "V", "(", "y", ")", "\n", "if", "self", ".", "t", "==", "1", ":", "\n", "            ", "if", "self", ".", "scale", ">", "1", ":", "\n", "                ", "V", "=", "self", ".", "pool", "(", "V", ")", "\n", "\n", "", "", "V_reshape", "=", "V", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "V_reshape", "=", "V_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "Q_reshape", "=", "Q", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "\n", "K_reshape", "=", "K", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "-", "1", ")", "\n", "K_reshape", "=", "K_reshape", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "KQ", "=", "torch", ".", "bmm", "(", "K_reshape", ",", "Q_reshape", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "KQ", ",", "dim", "=", "-", "1", ")", "\n", "\n", "vector", "=", "torch", ".", "bmm", "(", "attention", ",", "V_reshape", ")", "\n", "vector_reshape", "=", "vector", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "\n", "if", "self", ".", "t", "==", "1", ":", "\n", "            ", "O", "=", "vector_reshape", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "O", "=", "F", ".", "interpolate", "(", "O", ",", "scale_factor", "=", "self", ".", "scale", ",", "mode", "=", "'nearest'", ")", "\n", "", "else", ":", "\n", "            ", "O", "=", "vector_reshape", ".", "view", "(", "batch_size", ",", "self", ".", "output_size", ",", "y", ".", "size", "(", "2", ")", ",", "y", ".", "size", "(", "3", ")", ")", "\n", "\n", "", "output", "=", "y", "+", "self", ".", "local_weight", "(", "O", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.Upsample.__init__": [[1217, 1230], ["torch.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "ValueError", "math.log", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["def", "__init__", "(", "self", ",", "scale", ",", "num_feat", ")", ":", "\n", "        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# scale = 2^n", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "m", ".", "append", "(", "nn", ".", "Conv2d", "(", "num_feat", ",", "4", "*", "num_feat", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "m", ".", "append", "(", "nn", ".", "Conv2d", "(", "num_feat", ",", "9", "*", "num_feat", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f'scale {scale} is not supported. '", "\n", "'Supported scales: 2^n and 3.'", ")", "\n", "", "super", "(", "Upsample", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ChannelAttention.__init__": [[1251, 1259], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["def", "__init__", "(", "self", ",", "num_feat", ",", "squeeze_factor", "=", "16", ")", ":", "\n", "        ", "super", "(", "ChannelAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "attention", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_feat", ",", "num_feat", "//", "squeeze_factor", ",", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_feat", "//", "squeeze_factor", ",", "num_feat", ",", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ChannelAttention.forward": [[1260, 1263], ["model.ChannelAttention.attention"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "attention", "(", "x", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.RCAB.__init__": [[1273, 1281], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "model.ChannelAttention"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["def", "__init__", "(", "self", ",", "num_feat", ",", "squeeze_factor", "=", "16", ",", "res_scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "RCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n", "self", ".", "rcab", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "num_feat", ",", "num_feat", ",", "3", ",", "1", ",", "1", ")", ",", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_feat", ",", "num_feat", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "ChannelAttention", "(", "num_feat", ",", "squeeze_factor", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.RCAB.forward": [[1282, 1285], ["model.RCAB.rcab"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "rcab", "(", "x", ")", "*", "self", ".", "res_scale", "\n", "return", "res", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResidualGroup.__init__": [[1296, 1306], ["torch.Module.__init__", "model.make_layer", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.make_layer"], ["def", "__init__", "(", "self", ",", "num_feat", ",", "num_block", ",", "squeeze_factor", "=", "16", ",", "res_scale", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResidualGroup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "residual_group", "=", "make_layer", "(", "\n", "RCAB", ",", "\n", "num_block", ",", "\n", "num_feat", "=", "num_feat", ",", "\n", "squeeze_factor", "=", "squeeze_factor", ",", "\n", "res_scale", "=", "res_scale", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "num_feat", ",", "num_feat", ",", "3", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResidualGroup.forward": [[1307, 1310], ["model.ResidualGroup.conv", "model.ResidualGroup.residual_group"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "conv", "(", "self", ".", "residual_group", "(", "x", ")", ")", "\n", "return", "res", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.one_conv.__init__": [[1313, 1317], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "G0", ",", "G", ")", ":", "\n", "        ", "super", "(", "one_conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "G0", ",", "G", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.one_conv.forward": [[1317, 1320], ["model.one_conv.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.one_conv.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "self", ".", "relu", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "return", "torch", ".", "cat", "(", "(", "x", ",", "output", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.RDB.__init__": [[1323, 1330], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "convs.append", "model.one_conv"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "G0", ",", "C", ",", "G", ")", ":", "\n", "        ", "super", "(", "RDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "convs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "C", ")", ":", "\n", "            ", "convs", ".", "append", "(", "one_conv", "(", "G0", "+", "i", "*", "G", ",", "G", ")", ")", "\n", "", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "convs", ")", "\n", "self", ".", "LFF", "=", "nn", ".", "Conv2d", "(", "G0", "+", "C", "*", "G", ",", "G0", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.RDB.forward": [[1330, 1334], ["model.RDB.conv", "model.RDB.LFF"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "lff", "=", "self", ".", "LFF", "(", "out", ")", "\n", "return", "lff", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.RDG.__init__": [[1337, 1345], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "RDBs.append", "model.RDB"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "G0", ",", "C", ",", "G", ",", "n_RDB", ")", ":", "\n", "        ", "super", "(", "RDG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_RDB", "=", "n_RDB", "\n", "RDBs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_RDB", ")", ":", "\n", "            ", "RDBs", ".", "append", "(", "RDB", "(", "G0", ",", "C", ",", "G", ")", ")", "\n", "", "self", ".", "RDB", "=", "nn", ".", "Sequential", "(", "*", "RDBs", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "G0", "*", "n_RDB", ",", "G0", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.RDG.forward": [[1346, 1355], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.RDG.conv", "temp.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "buffer", "=", "x", "\n", "temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "n_RDB", ")", ":", "\n", "            ", "buffer", "=", "self", ".", "RDB", "[", "i", "]", "(", "buffer", ")", "\n", "temp", ".", "append", "(", "buffer", ")", "\n", "", "buffer_cat", "=", "torch", ".", "cat", "(", "temp", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "conv", "(", "buffer_cat", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.CALayer.__init__": [[1358, 1366], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "16", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "16", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.CALayer.forward": [[1367, 1371], ["model.CALayer.avg_pool", "model.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__": [[1374, 1380], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", "ResB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "4", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "4", ",", "bias", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.ResB.__call__": [[1381, 1384], ["model.ResB.body"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "body", "(", "x", ")", "\n", "return", "out", "+", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.norm_mean_std": [[74, 86], ["feat.size", "feat_var.sqrt().view", "feat.view().mean().view", "len", "feat.view().var", "feat_var.sqrt().view.expand", "feat_var.sqrt", "feat.view().mean", "feat.view().mean().view.expand", "feat.view", "feat.view"], "function", ["None"], ["", "", "def", "norm_mean_std", "(", "feat", ",", "eps", "=", "1e-5", ")", ":", "\n", "# eps is a small value added to the variance to avoid divide-by-zero.", "\n", "    ", "size", "=", "feat", ".", "size", "(", ")", "\n", "assert", "(", "len", "(", "size", ")", "==", "4", ")", "\n", "N", ",", "C", "=", "size", "[", ":", "2", "]", "\n", "feat_var", "=", "feat", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", ".", "var", "(", "dim", "=", "2", ")", "+", "eps", "\n", "feat_std", "=", "feat_var", ".", "sqrt", "(", ")", ".", "view", "(", "N", ",", "C", ",", "1", ",", "1", ")", "\n", "feat_mean", "=", "feat", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "2", ")", ".", "view", "(", "N", ",", "C", ",", "1", ",", "1", ")", "\n", "normalized_feat", "=", "(", "feat", "-", "feat_mean", ".", "expand", "(", "\n", "size", ")", ")", "/", "feat_std", ".", "expand", "(", "size", ")", "\n", "\n", "return", "normalized_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.calc_mean_std": [[837, 846], ["feat.size", "feat_var.sqrt().view", "feat.view().mean().view", "len", "feat.view().var", "feat_var.sqrt", "feat.view().mean", "feat.view", "feat.view"], "function", ["None"], ["", "", "def", "calc_mean_std", "(", "feat", ",", "eps", "=", "1e-5", ")", ":", "\n", "# eps is a small value added to the variance to avoid divide-by-zero.", "\n", "    ", "size", "=", "feat", ".", "size", "(", ")", "\n", "assert", "(", "len", "(", "size", ")", "==", "4", ")", "\n", "N", ",", "C", "=", "size", "[", ":", "2", "]", "\n", "feat_var", "=", "feat", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", ".", "var", "(", "dim", "=", "2", ")", "+", "eps", "\n", "feat_std", "=", "feat_var", ".", "sqrt", "(", ")", ".", "view", "(", "N", ",", "C", ",", "1", ",", "1", ")", "\n", "feat_mean", "=", "feat", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "2", ")", ".", "view", "(", "N", ",", "C", ",", "1", ",", "1", ")", "\n", "return", "feat_mean", ",", "feat_std", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.rgb2ycbcr": [[901, 906], ["Y.unsqueeze"], "function", ["None"], ["", "", "def", "rgb2ycbcr", "(", "img", ")", ":", "\n", "\n", "    ", "Y", "=", "0.", "+", ".299", "*", "img", "[", ":", ",", "0", "]", "+", ".587", "*", "img", "[", ":", ",", "1", "]", "+", ".114", "*", "img", "[", ":", ",", "2", "]", "\n", "\n", "return", "Y", ".", "unsqueeze", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.pixel_unshuffle": [[1193, 1208], ["torch.zeros", "torch.zeros", "range", "torch.nn.functional.conv2d", "range"], "function", ["None"], ["", "", "def", "pixel_unshuffle", "(", "input", ",", "downscale_factor", ")", ":", "\n", "    ", "'''\n    input: batchSize * c * k*w * k*h\n    kdownscale_factor: k\n    batchSize * c * k*w * k*h -> batchSize * k*k*c * w * h\n    '''", "\n", "c", "=", "input", ".", "shape", "[", "1", "]", "\n", "\n", "kernel", "=", "torch", ".", "zeros", "(", "size", "=", "[", "downscale_factor", "*", "downscale_factor", "*", "c", ",", "\n", "1", ",", "downscale_factor", ",", "downscale_factor", "]", ",", "\n", "device", "=", "input", ".", "device", ")", "\n", "for", "y", "in", "range", "(", "downscale_factor", ")", ":", "\n", "        ", "for", "x", "in", "range", "(", "downscale_factor", ")", ":", "\n", "            ", "kernel", "[", "x", "+", "y", "*", "downscale_factor", ":", ":", "downscale_factor", "*", "downscale_factor", ",", "0", ",", "y", ",", "x", "]", "=", "1", "\n", "", "", "return", "F", ".", "conv2d", "(", "input", ",", "kernel", ",", "stride", "=", "downscale_factor", ",", "groups", "=", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.model.make_layer": [[1231, 1243], ["range", "torch.Sequential", "layers.append", "basic_block"], "function", ["None"], ["", "", "def", "make_layer", "(", "basic_block", ",", "num_basic_block", ",", "**", "kwarg", ")", ":", "\n", "    ", "\"\"\"Make layers by stacking the same blocks.\n    Args:\n        basic_block (nn.module): nn.module class for basic block.\n        num_basic_block (int): number of blocks.\n    Returns:\n        nn.Sequential: Stacked blocks in nn.Sequential.\n    \"\"\"", "\n", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_basic_block", ")", ":", "\n", "        ", "layers", ".", "append", "(", "basic_block", "(", "**", "kwarg", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval": [[77, 149], ["model.eval", "enc.eval", "dec.eval", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "sorted", "sorted", "range", "model.load_state_dict", "print", "os.path.join", "os.path.join", "len", "PIL.Image.open().convert", "image_utils.modcrop", "torch.load", "torch.load", "os.listdir", "dataset.is_image_file", "os.listdir", "dataset.is_image_file", "print", "range", "PIL.Image.open", "len", "len", "PIL.Image.open().convert", "chop_forward.data[].cpu().permute", "chop_forward.clamp", "PIL.Image.fromarray().save", "print", "image_utils.modcrop.resize", "chop_forward.data[].cpu().permute", "chop_forward.clamp", "PIL.Image.fromarray().save", "print", "range", "torch.no_grad", "torch.no_grad", "eval_8x.chop_forward", "torch.no_grad", "torch.no_grad", "eval_8x.chop_forward", "numpy.random.rand", "PIL.Image.fromarray", "chop_forward.data[].cpu().permute", "chop_forward.clamp", "print", "PIL.Image.fromarray().save", "PIL.Image.open", "chop_forward.data[].cpu", "str().zfill", "PIL.Image.fromarray", "chop_forward.data[].cpu", "lr_name.zfill", "PIL.Image.fromarray", "numpy.uint8", "torch.no_grad", "torch.no_grad", "eval_8x.chop_forward", "numpy.uint8", "numpy.uint8", "chop_forward.data[].cpu", "str().zfill", "PIL.Image.fromarray", "lr_name.zfill", "str", "numpy.uint8", "lr_name.zfill", "str"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.eval", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.image_utils.modcrop", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.dataset.is_image_file", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.chop_forward", "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.chop_forward"], ["def", "eval", "(", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "enc", ".", "eval", "(", ")", "\n", "dec", ".", "eval", "(", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "opt", ".", "model", ")", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "opt", ".", "model", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", ")", "\n", "print", "(", "opt", ".", "model", ")", "\n", "\n", "", "Ref_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "input_dataset", ",", "'Ref'", ")", "\n", "LR_filename", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "input_dataset", ",", "'LR'", ")", "\n", "SR_filename", "=", "opt", ".", "output_dataset", "\n", "\n", "lr_image", "=", "[", "join", "(", "LR_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "LR_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "lr_image", "=", "sorted", "(", "lr_image", ")", "\n", "ref_image", "=", "[", "join", "(", "Ref_filename", ",", "x", ")", "for", "x", "in", "listdir", "(", "Ref_filename", ")", "if", "is_image_file", "(", "x", ")", "]", "\n", "ref_image", "=", "sorted", "(", "ref_image", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "lr_image", ")", ")", ":", "\n", "\n", "        ", "LR", "=", "Image", ".", "open", "(", "lr_image", "[", "i", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "LR", "=", "modcrop", "(", "LR", ",", "opt", ".", "up_factor", ")", "\n", "\n", "if", "len", "(", "ref_image", ")", "!=", "0", "and", "opt", ".", "use_ref", ":", "\n", "            ", "print", "(", "\"using ref images for SR\"", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "ref_image", ")", ")", ":", "\n", "                ", "Ref", "=", "Image", ".", "open", "(", "ref_image", "[", "j", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "prediction", "=", "chop_forward", "(", "Ref", ",", "LR", ")", "\n", "\n", "", "prediction", "=", "prediction", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clamp", "(", "0", ",", "255", ")", "\n", "lr_name", "=", "lr_image", "[", "i", "]", "[", "-", "8", ":", "-", "4", "]", "\n", "output_name", "=", "SR_filename", "+", "'/'", "+", "lr_name", ".", "zfill", "(", "6", ")", "+", "'_sample'", "+", "str", "(", "j", ")", ".", "zfill", "(", "5", ")", "+", "'.png'", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "output_name", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "if", "opt", ".", "use_img_self", ":", "\n", "                ", "print", "(", "\"using LR images itself for SR\"", ")", "\n", "Ref", "=", "LR", ".", "resize", "(", "(", "256", ",", "256", ")", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "prediction", "=", "chop_forward", "(", "Ref", ",", "LR", ")", "\n", "\n", "", "prediction", "=", "prediction", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clamp", "(", "0", ",", "255", ")", "\n", "lr_name", "=", "lr_image", "[", "i", "]", "[", "-", "8", ":", "-", "4", "]", "\n", "output_name", "=", "SR_filename", "+", "'/'", "+", "lr_name", ".", "zfill", "(", "6", ")", "+", "'_sample0.png'", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "output_name", ")", "\n", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"using random noise for SR\"", ")", "\n", "for", "j", "in", "range", "(", "opt", ".", "num_sample", ")", ":", "\n", "                    ", "a", "=", "np", ".", "random", ".", "rand", "(", "256", ",", "256", ",", "3", ")", "\n", "Ref", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "a", "*", "128", ")", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "prediction", "=", "chop_forward", "(", "Ref", ",", "LR", ")", "\n", "\n", "", "prediction", "=", "prediction", ".", "data", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "prediction", "=", "prediction", "*", "255.0", "\n", "prediction", "=", "prediction", ".", "clamp", "(", "0", ",", "255", ")", "\n", "lr_name", "=", "lr_image", "[", "i", "]", "[", "-", "8", ":", "-", "4", "]", "\n", "output_name", "=", "SR_filename", "+", "'/'", "+", "lr_name", ".", "zfill", "(", "6", ")", "+", "'_sample'", "+", "str", "(", "j", ")", ".", "zfill", "(", "5", ")", "+", "'.png'", "\n", "print", "(", "\"random SR: {}\"", ".", "format", "(", "j", ")", ")", "\n", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "prediction", ")", ")", ".", "save", "(", "output_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.eval_8x.chop_forward": [[186, 203], ["transform().unsqueeze", "style_transform().unsqueeze", "torch.TensorDataset", "torch.DataLoader", "enumerate", "enc", "enc", "model", "transform", "style_transform", "batch[].to", "batch[].to", "F.interpolate"], "function", ["home.repos.pwc.inspect_result.Holmes-Alan_RefVAE.None.data.transform"], ["def", "chop_forward", "(", "ref", ",", "img", ")", ":", "\n", "\n", "    ", "img", "=", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", "\n", "ref", "=", "style_transform", "(", "ref", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "testset", "=", "utils", ".", "TensorDataset", "(", "ref", ",", "img", ")", "\n", "test_dataloader", "=", "utils", ".", "DataLoader", "(", "testset", ",", "num_workers", "=", "opt", ".", "threads", ",", "\n", "drop_last", "=", "False", ",", "batch_size", "=", "opt", ".", "testBatchSize", ",", "shuffle", "=", "False", ")", "\n", "\n", "for", "iteration", ",", "batch", "in", "enumerate", "(", "test_dataloader", ",", "1", ")", ":", "\n", "        ", "ref", ",", "input", "=", "batch", "[", "0", "]", ".", "to", "(", "device", ")", ",", "batch", "[", "1", "]", ".", "to", "(", "device", ")", "\n", "\n", "LR_feat", "=", "enc", "(", "F", ".", "interpolate", "(", "input", ",", "scale_factor", "=", "opt", ".", "up_factor", ",", "mode", "=", "'bicubic'", ")", ")", "\n", "ref_feat", "=", "enc", "(", "ref", ")", "\n", "SR", ",", "_", "=", "model", "(", "input", ",", "LR_feat", "[", "'r41'", "]", ",", "ref_feat", "[", "'r41'", "]", ")", "\n", "\n", "", "return", "SR", "\n", "\n"]]}