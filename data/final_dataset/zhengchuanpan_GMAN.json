{"home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.tf_utils.conv2d": [[3, 22], ["tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.Variable", "tensorflow.nn.bias_add", "activation", "batch_norm.get_shape", "tensorflow.glorot_uniform_initializer", "tf_utils.batch_norm", "tensorflow.zeros_initializer"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.conv2d", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.batch_norm"], ["def", "conv2d", "(", "x", ",", "output_dims", ",", "kernel_size", ",", "stride", "=", "[", "1", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", ",", "use_bias", "=", "True", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "False", ",", "bn_decay", "=", "None", ",", "is_training", "=", "None", ")", ":", "\n", "    ", "input_dims", "=", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ".", "value", "\n", "kernel_shape", "=", "kernel_size", "+", "[", "input_dims", ",", "output_dims", "]", "\n", "kernel", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "glorot_uniform_initializer", "(", ")", "(", "shape", "=", "kernel_shape", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ",", "name", "=", "'kernel'", ")", "\n", "x", "=", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "kernel", ",", "[", "1", "]", "+", "stride", "+", "[", "1", "]", ",", "padding", "=", "padding", ")", "\n", "if", "use_bias", ":", "\n", "        ", "bias", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros_initializer", "(", ")", "(", "shape", "=", "[", "output_dims", "]", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ",", "name", "=", "'bias'", ")", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "x", ",", "bias", ")", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "        ", "if", "bn", ":", "\n", "            ", "x", "=", "batch_norm", "(", "x", ",", "is_training", "=", "is_training", ",", "bn_decay", "=", "bn_decay", ")", "\n", "", "x", "=", "activation", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.tf_utils.batch_norm": [[23, 52], ["list", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.moments", "tensorflow.train.ExponentialMovingAverage", "tensorflow.cond", "tensorflow.cond", "tensorflow.nn.batch_normalization", "range", "tf.nn.batch_normalization.get_shape", "tensorflow.zeros_initializer", "tensorflow.ones_initializer", "tf.train.ExponentialMovingAverage.apply", "tensorflow.no_op", "tensorflow.control_dependencies", "len", "tensorflow.identity", "tensorflow.identity", "tf.train.ExponentialMovingAverage.average", "tf.train.ExponentialMovingAverage.average", "tf.nn.batch_normalization.get_shape"], "function", ["None"], ["", "def", "batch_norm", "(", "x", ",", "is_training", ",", "bn_decay", ")", ":", "\n", "    ", "input_dims", "=", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ".", "value", "\n", "moment_dims", "=", "list", "(", "range", "(", "len", "(", "x", ".", "get_shape", "(", ")", ")", "-", "1", ")", ")", "\n", "beta", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros_initializer", "(", ")", "(", "shape", "=", "[", "input_dims", "]", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ",", "name", "=", "'beta'", ")", "\n", "gamma", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "ones_initializer", "(", ")", "(", "shape", "=", "[", "input_dims", "]", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ",", "name", "=", "'gamma'", ")", "\n", "batch_mean", ",", "batch_var", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "moment_dims", ",", "name", "=", "'moments'", ")", "\n", "\n", "decay", "=", "bn_decay", "if", "bn_decay", "is", "not", "None", "else", "0.9", "\n", "ema", "=", "tf", ".", "train", ".", "ExponentialMovingAverage", "(", "decay", "=", "decay", ")", "\n", "# Operator that maintains moving averages of variables.", "\n", "ema_apply_op", "=", "tf", ".", "cond", "(", "\n", "is_training", ",", "\n", "lambda", ":", "ema", ".", "apply", "(", "[", "batch_mean", ",", "batch_var", "]", ")", ",", "\n", "lambda", ":", "tf", ".", "no_op", "(", ")", ")", "\n", "# Update moving average and return current batch's avg and var.", "\n", "def", "mean_var_with_update", "(", ")", ":", "\n", "        ", "with", "tf", ".", "control_dependencies", "(", "[", "ema_apply_op", "]", ")", ":", "\n", "            ", "return", "tf", ".", "identity", "(", "batch_mean", ")", ",", "tf", ".", "identity", "(", "batch_var", ")", "\n", "# ema.average returns the Variable holding the average of var.", "\n", "", "", "mean", ",", "var", "=", "tf", ".", "cond", "(", "\n", "is_training", ",", "\n", "mean_var_with_update", ",", "\n", "lambda", ":", "(", "ema", ".", "average", "(", "batch_mean", ")", ",", "ema", ".", "average", "(", "batch_var", ")", ")", ")", "\n", "x", "=", "tf", ".", "nn", ".", "batch_normalization", "(", "x", ",", "mean", ",", "var", ",", "beta", ",", "gamma", ",", "1e-3", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.tf_utils.dropout": [[53, 59], ["tensorflow.cond", "tensorflow.nn.dropout"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.dropout"], ["", "def", "dropout", "(", "x", ",", "drop", ",", "is_training", ")", ":", "\n", "    ", "x", "=", "tf", ".", "cond", "(", "\n", "is_training", ",", "\n", "lambda", ":", "tf", ".", "nn", ".", "dropout", "(", "x", ",", "rate", "=", "drop", ")", ",", "\n", "lambda", ":", "x", ")", "\n", "return", "x", "\n", "", ""]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.placeholder": [[4, 14], ["tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.placeholder", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.placeholder", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.placeholder", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.placeholder"], ["def", "placeholder", "(", "P", ",", "Q", ",", "N", ")", ":", "\n", "    ", "X", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "\n", "shape", "=", "(", "None", ",", "P", ",", "N", ")", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'X'", ")", "\n", "TE", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "\n", "shape", "=", "(", "None", ",", "P", "+", "Q", ",", "2", ")", ",", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'TE'", ")", "\n", "label", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "\n", "shape", "=", "(", "None", ",", "Q", ",", "N", ")", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'label'", ")", "\n", "is_training", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "\n", "shape", "=", "(", ")", ",", "dtype", "=", "tf", ".", "bool", ",", "name", "=", "'is_training'", ")", "\n", "return", "X", ",", "TE", ",", "label", ",", "is_training", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.FC": [[15, 31], ["isinstance", "zip", "isinstance", "type", "tf_utils.conv2d", "list", "list", "tf_utils.dropout"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.conv2d", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.dropout"], ["", "def", "FC", "(", "x", ",", "units", ",", "activations", ",", "bn", ",", "bn_decay", ",", "is_training", ",", "use_bias", "=", "True", ",", "drop", "=", "None", ")", ":", "\n", "    ", "if", "isinstance", "(", "units", ",", "int", ")", ":", "\n", "        ", "units", "=", "[", "units", "]", "\n", "activations", "=", "[", "activations", "]", "\n", "", "elif", "isinstance", "(", "units", ",", "tuple", ")", ":", "\n", "        ", "units", "=", "list", "(", "units", ")", "\n", "activations", "=", "list", "(", "activations", ")", "\n", "", "assert", "type", "(", "units", ")", "==", "list", "\n", "for", "num_unit", ",", "activation", "in", "zip", "(", "units", ",", "activations", ")", ":", "\n", "        ", "if", "drop", "is", "not", "None", ":", "\n", "            ", "x", "=", "tf_utils", ".", "dropout", "(", "x", ",", "drop", "=", "drop", ",", "is_training", "=", "is_training", ")", "\n", "", "x", "=", "tf_utils", ".", "conv2d", "(", "\n", "x", ",", "output_dims", "=", "num_unit", ",", "kernel_size", "=", "[", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "1", "]", ",", "\n", "padding", "=", "'VALID'", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.STEmbedding": [[32, 55], ["tensorflow.expand_dims", "model.FC", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.concat", "tensorflow.expand_dims", "model.FC", "tensorflow.add", "tensorflow.expand_dims"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["", "def", "STEmbedding", "(", "SE", ",", "TE", ",", "T", ",", "D", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    spatio-temporal embedding\n    SE:     [N, D]\n    TE:     [batch_size, P + Q, 2] (dayofweek, timeofday)\n    T:      num of time steps in one day\n    D:      output dims\n    retrun: [batch_size, P + Q, N, D]\n    '''", "\n", "# spatial embedding", "\n", "SE", "=", "tf", ".", "expand_dims", "(", "tf", ".", "expand_dims", "(", "SE", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "SE", "=", "FC", "(", "\n", "SE", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# temporal embedding", "\n", "dayofweek", "=", "tf", ".", "one_hot", "(", "TE", "[", "...", ",", "0", "]", ",", "depth", "=", "7", ")", "\n", "timeofday", "=", "tf", ".", "one_hot", "(", "TE", "[", "...", ",", "1", "]", ",", "depth", "=", "T", ")", "\n", "TE", "=", "tf", ".", "concat", "(", "(", "dayofweek", ",", "timeofday", ")", ",", "axis", "=", "-", "1", ")", "\n", "TE", "=", "tf", ".", "expand_dims", "(", "TE", ",", "axis", "=", "2", ")", "\n", "TE", "=", "FC", "(", "\n", "TE", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "tf", ".", "add", "(", "SE", ",", "TE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.spatialAttention": [[56, 92], ["tensorflow.concat", "model.FC", "model.FC", "model.FC", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.concat", "model.FC", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.split"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["", "def", "spatialAttention", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    spatial attention mechanism\n    X:      [batch_size, num_step, N, D]\n    STE:    [batch_size, num_step, N, D]\n    K:      number of attention heads\n    d:      dimension of each attention outputs\n    return: [batch_size, num_step, N, D]\n    '''", "\n", "D", "=", "K", "*", "d", "\n", "X", "=", "tf", ".", "concat", "(", "(", "X", ",", "STE", ")", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, num_step, N, K * d]", "\n", "query", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "key", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "value", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# [K * batch_size, num_step, N, d]", "\n", "query", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "query", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "key", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "key", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "value", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "value", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "# [K * batch_size, num_step, N, N]", "\n", "attention", "=", "tf", ".", "matmul", "(", "query", ",", "key", ",", "transpose_b", "=", "True", ")", "\n", "attention", "/=", "(", "d", "**", "0.5", ")", "\n", "attention", "=", "tf", ".", "nn", ".", "softmax", "(", "attention", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, num_step, N, D]", "\n", "X", "=", "tf", ".", "matmul", "(", "attention", ",", "value", ")", "\n", "X", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "X", ",", "K", ",", "axis", "=", "0", ")", ",", "axis", "=", "-", "1", ")", "\n", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.temporalAttention": [[93, 149], ["tensorflow.concat", "model.FC", "model.FC", "model.FC", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.concat", "model.FC", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.ones", "tensorflow.linalg.LinearOperatorLowerTriangular().to_dense", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.cast", "tensorflow.compat.v2.where", "tensorflow.split", "tensorflow.shape", "tensorflow.expand_dims", "FC.get_shape", "FC.get_shape", "tensorflow.linalg.LinearOperatorLowerTriangular"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["", "def", "temporalAttention", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ",", "mask", "=", "True", ")", ":", "\n", "    ", "'''\n    temporal attention mechanism\n    X:      [batch_size, num_step, N, D]\n    STE:    [batch_size, num_step, N, D]\n    K:      number of attention heads\n    d:      dimension of each attention outputs\n    return: [batch_size, num_step, N, D]\n    '''", "\n", "D", "=", "K", "*", "d", "\n", "X", "=", "tf", ".", "concat", "(", "(", "X", ",", "STE", ")", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, num_step, N, K * d]", "\n", "query", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "key", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "value", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# [K * batch_size, num_step, N, d]", "\n", "query", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "query", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "key", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "key", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "value", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "value", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "# query: [K * batch_size, N, num_step, d]", "\n", "# key:   [K * batch_size, N, d, num_step]", "\n", "# value: [K * batch_size, N, num_step, d]", "\n", "query", "=", "tf", ".", "transpose", "(", "query", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "key", "=", "tf", ".", "transpose", "(", "key", ",", "perm", "=", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "value", "=", "tf", ".", "transpose", "(", "value", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "# [K * batch_size, N, num_step, num_step]", "\n", "attention", "=", "tf", ".", "matmul", "(", "query", ",", "key", ")", "\n", "attention", "/=", "(", "d", "**", "0.5", ")", "\n", "# mask attention score", "\n", "if", "mask", ":", "\n", "        ", "batch_size", "=", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "num_step", "=", "X", ".", "get_shape", "(", ")", "[", "1", "]", ".", "value", "\n", "N", "=", "X", ".", "get_shape", "(", ")", "[", "2", "]", ".", "value", "\n", "mask", "=", "tf", ".", "ones", "(", "shape", "=", "(", "num_step", ",", "num_step", ")", ")", "\n", "mask", "=", "tf", ".", "linalg", ".", "LinearOperatorLowerTriangular", "(", "mask", ")", ".", "to_dense", "(", ")", "\n", "mask", "=", "tf", ".", "expand_dims", "(", "tf", ".", "expand_dims", "(", "mask", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "mask", "=", "tf", ".", "tile", "(", "mask", ",", "multiples", "=", "(", "K", "*", "batch_size", ",", "N", ",", "1", ",", "1", ")", ")", "\n", "mask", "=", "tf", ".", "cast", "(", "mask", ",", "dtype", "=", "tf", ".", "bool", ")", "\n", "attention", "=", "tf", ".", "compat", ".", "v2", ".", "where", "(", "\n", "condition", "=", "mask", ",", "x", "=", "attention", ",", "y", "=", "-", "2", "**", "15", "+", "1", ")", "\n", "# softmax   ", "\n", "", "attention", "=", "tf", ".", "nn", ".", "softmax", "(", "attention", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, num_step, N, D]", "\n", "X", "=", "tf", ".", "matmul", "(", "attention", ",", "value", ")", "\n", "X", "=", "tf", ".", "transpose", "(", "X", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "X", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "X", ",", "K", ",", "axis", "=", "0", ")", ",", "axis", "=", "-", "1", ")", "\n", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.gatedFusion": [[150, 172], ["model.FC", "model.FC", "tensorflow.nn.sigmoid", "tensorflow.add", "model.FC", "tensorflow.add", "tensorflow.multiply", "tensorflow.multiply"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["", "def", "gatedFusion", "(", "HS", ",", "HT", ",", "D", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    gated fusion\n    HS:     [batch_size, num_step, N, D]\n    HT:     [batch_size, num_step, N, D]\n    D:      output dims\n    return: [batch_size, num_step, N, D]\n    '''", "\n", "XS", "=", "FC", "(", "\n", "HS", ",", "units", "=", "D", ",", "activations", "=", "None", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "\n", "is_training", "=", "is_training", ",", "use_bias", "=", "False", ")", "\n", "XT", "=", "FC", "(", "\n", "HT", ",", "units", "=", "D", ",", "activations", "=", "None", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "\n", "is_training", "=", "is_training", ",", "use_bias", "=", "True", ")", "\n", "z", "=", "tf", ".", "nn", ".", "sigmoid", "(", "tf", ".", "add", "(", "XS", ",", "XT", ")", ")", "\n", "H", "=", "tf", ".", "add", "(", "tf", ".", "multiply", "(", "z", ",", "HS", ")", ",", "tf", ".", "multiply", "(", "1", "-", "z", ",", "HT", ")", ")", "\n", "H", "=", "FC", "(", "\n", "H", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "H", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.STAttBlock": [[173, 178], ["model.spatialAttention", "model.temporalAttention", "model.gatedFusion", "tensorflow.add"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.spatialAttention", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.temporalAttention", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.gatedFusion"], ["", "def", "STAttBlock", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ",", "mask", "=", "True", ")", ":", "\n", "    ", "HS", "=", "spatialAttention", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "HT", "=", "temporalAttention", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ",", "mask", "=", "mask", ")", "\n", "H", "=", "gatedFusion", "(", "HS", ",", "HT", ",", "K", "*", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "return", "tf", ".", "add", "(", "X", ",", "H", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.transformAttention": [[179, 226], ["model.FC", "model.FC", "model.FC", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.concat", "model.FC", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.split"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["", "def", "transformAttention", "(", "X", ",", "STE_P", ",", "STE_Q", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    transform attention mechanism\n    X:      [batch_size, P, N, D]\n    STE_P:  [batch_size, P, N, D]\n    STE_Q:  [batch_size, Q, N, D]\n    K:      number of attention heads\n    d:      dimension of each attention outputs\n    return: [batch_size, Q, N, D]\n    '''", "\n", "D", "=", "K", "*", "d", "\n", "# query: [batch_size, Q, N, K * d]", "\n", "# key:   [batch_size, P, N, K * d]", "\n", "# value: [batch_size, P, N, K * d]", "\n", "query", "=", "FC", "(", "\n", "STE_Q", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "key", "=", "FC", "(", "\n", "STE_P", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "value", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# query: [K * batch_size, Q, N, d]", "\n", "# key:   [K * batch_size, P, N, d]", "\n", "# value: [K * batch_size, P, N, d]", "\n", "query", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "query", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "key", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "key", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "value", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "value", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "# query: [K * batch_size, N, Q, d]", "\n", "# key:   [K * batch_size, N, d, P]", "\n", "# value: [K * batch_size, N, P, d]", "\n", "query", "=", "tf", ".", "transpose", "(", "query", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "key", "=", "tf", ".", "transpose", "(", "key", ",", "perm", "=", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "value", "=", "tf", ".", "transpose", "(", "value", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "# [K * batch_size, N, Q, P]", "\n", "attention", "=", "tf", ".", "matmul", "(", "query", ",", "key", ")", "\n", "attention", "/=", "(", "d", "**", "0.5", ")", "\n", "attention", "=", "tf", ".", "nn", ".", "softmax", "(", "attention", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, Q, N, D]", "\n", "X", "=", "tf", ".", "matmul", "(", "attention", ",", "value", ")", "\n", "X", "=", "tf", ".", "transpose", "(", "X", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "X", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "X", ",", "K", ",", "axis", "=", "0", ")", ",", "axis", "=", "-", "1", ")", "\n", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.GMAN": [[227, 266], ["tensorflow.expand_dims", "model.FC", "model.STEmbedding", "range", "model.transformAttention", "range", "model.FC", "tensorflow.squeeze", "model.STAttBlock", "model.STAttBlock"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.STEmbedding", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.transformAttention", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.STAttBlock", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.STAttBlock"], ["", "def", "GMAN", "(", "X", ",", "TE", ",", "SE", ",", "P", ",", "Q", ",", "T", ",", "L", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    GMAN\n    X\uff1a       [batch_size, P, N]\n    TE\uff1a      [batch_size, P + Q, 2] (time-of-day, day-of-week)\n    SE\uff1a      [N, K * d]\n    P\uff1a       number of history steps\n    Q\uff1a       number of prediction steps\n    T\uff1a       one day is divided into T steps\n    L\uff1a       number of STAtt blocks in the encoder/decoder\n    K\uff1a       number of attention heads\n    d\uff1a       dimension of each attention head outputs\n    return\uff1a  [batch_size, Q, N]\n    '''", "\n", "D", "=", "K", "*", "d", "\n", "# input", "\n", "X", "=", "tf", ".", "expand_dims", "(", "X", ",", "axis", "=", "-", "1", ")", "\n", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# STE", "\n", "STE", "=", "STEmbedding", "(", "SE", ",", "TE", ",", "T", ",", "D", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "STE_P", "=", "STE", "[", ":", ",", ":", "P", "]", "\n", "STE_Q", "=", "STE", "[", ":", ",", "P", ":", "]", "\n", "# encoder", "\n", "for", "_", "in", "range", "(", "L", ")", ":", "\n", "        ", "X", "=", "STAttBlock", "(", "X", ",", "STE_P", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "# transAtt", "\n", "", "X", "=", "transformAttention", "(", "\n", "X", ",", "STE_P", ",", "STE_Q", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "# decoder", "\n", "for", "_", "in", "range", "(", "L", ")", ":", "\n", "        ", "X", "=", "STAttBlock", "(", "X", ",", "STE_Q", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "# output", "\n", "", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "1", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ",", "\n", "use_bias", "=", "True", ",", "drop", "=", "0.1", ")", "\n", "return", "tf", ".", "squeeze", "(", "X", ",", "axis", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.model.mae_loss": [[267, 279], ["tensorflow.not_equal", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.compat.v2.where", "tensorflow.abs", "tensorflow.compat.v2.where", "tensorflow.reduce_mean", "tensorflow.subtract", "tensorflow.math.is_nan", "tensorflow.math.is_nan"], "function", ["None"], ["", "def", "mae_loss", "(", "pred", ",", "label", ")", ":", "\n", "    ", "mask", "=", "tf", ".", "not_equal", "(", "label", ",", "0", ")", "\n", "mask", "=", "tf", ".", "cast", "(", "mask", ",", "tf", ".", "float32", ")", "\n", "mask", "/=", "tf", ".", "reduce_mean", "(", "mask", ")", "\n", "mask", "=", "tf", ".", "compat", ".", "v2", ".", "where", "(", "\n", "condition", "=", "tf", ".", "math", ".", "is_nan", "(", "mask", ")", ",", "x", "=", "0.", ",", "y", "=", "mask", ")", "\n", "loss", "=", "tf", ".", "abs", "(", "tf", ".", "subtract", "(", "pred", ",", "label", ")", ")", "\n", "loss", "*=", "mask", "\n", "loss", "=", "tf", ".", "compat", ".", "v2", ".", "where", "(", "\n", "condition", "=", "tf", ".", "math", ".", "is_nan", "(", "loss", ")", ",", "x", "=", "0.", ",", "y", "=", "loss", ")", "\n", "loss", "=", "tf", ".", "reduce_mean", "(", "loss", ")", "\n", "return", "loss", "\n", "", ""]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.utils.log_string": [[5, 9], ["log.write", "log.flush", "print"], "function", ["None"], ["def", "log_string", "(", "log", ",", "string", ")", ":", "\n", "    ", "log", ".", "write", "(", "string", "+", "'\\n'", ")", "\n", "log", ".", "flush", "(", ")", "\n", "print", "(", "string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.utils.metric": [[11, 26], ["numpy.errstate", "numpy.not_equal", "mask.astype.astype", "numpy.mean", "numpy.abs().astype", "numpy.square", "numpy.divide", "numpy.nan_to_num", "numpy.mean", "numpy.nan_to_num", "numpy.sqrt", "numpy.nan_to_num", "numpy.mean", "numpy.mean", "numpy.abs", "numpy.subtract"], "function", ["None"], ["", "def", "metric", "(", "pred", ",", "label", ")", ":", "\n", "    ", "with", "np", ".", "errstate", "(", "divide", "=", "'ignore'", ",", "invalid", "=", "'ignore'", ")", ":", "\n", "        ", "mask", "=", "np", ".", "not_equal", "(", "label", ",", "0", ")", "\n", "mask", "=", "mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "mask", "/=", "np", ".", "mean", "(", "mask", ")", "\n", "mae", "=", "np", ".", "abs", "(", "np", ".", "subtract", "(", "pred", ",", "label", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "rmse", "=", "np", ".", "square", "(", "mae", ")", "\n", "mape", "=", "np", ".", "divide", "(", "mae", ",", "label", ")", "\n", "mae", "=", "np", ".", "nan_to_num", "(", "mae", "*", "mask", ")", "\n", "mae", "=", "np", ".", "mean", "(", "mae", ")", "\n", "rmse", "=", "np", ".", "nan_to_num", "(", "rmse", "*", "mask", ")", "\n", "rmse", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "rmse", ")", ")", "\n", "mape", "=", "np", ".", "nan_to_num", "(", "mape", "*", "mask", ")", "\n", "mape", "=", "np", ".", "mean", "(", "mape", ")", "\n", "", "return", "mae", ",", "rmse", ",", "mape", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.utils.seq2instance": [[27, 36], ["numpy.zeros", "numpy.zeros", "range"], "function", ["None"], ["", "def", "seq2instance", "(", "data", ",", "P", ",", "Q", ")", ":", "\n", "    ", "num_step", ",", "dims", "=", "data", ".", "shape", "\n", "num_sample", "=", "num_step", "-", "P", "-", "Q", "+", "1", "\n", "x", "=", "np", ".", "zeros", "(", "shape", "=", "(", "num_sample", ",", "P", ",", "dims", ")", ")", "\n", "y", "=", "np", ".", "zeros", "(", "shape", "=", "(", "num_sample", ",", "Q", ",", "dims", ")", ")", "\n", "for", "i", "in", "range", "(", "num_sample", ")", ":", "\n", "        ", "x", "[", "i", "]", "=", "data", "[", "i", ":", "i", "+", "P", "]", "\n", "y", "[", "i", "]", "=", "data", "[", "i", "+", "P", ":", "i", "+", "P", "+", "Q", "]", "\n", "", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.METR.utils.loadData": [[37, 91], ["pandas.read_hdf", "round", "round", "utils.seq2instance", "utils.seq2instance", "utils.seq2instance", "open", "open.readlines", "lines[].split", "numpy.zeros", "numpy.reshape", "numpy.reshape", "numpy.concatenate", "utils.seq2instance", "numpy.concatenate().astype", "utils.seq2instance", "numpy.concatenate().astype", "utils.seq2instance", "numpy.concatenate().astype", "numpy.mean", "numpy.std", "int", "int", "line.split", "int", "np.concatenate.freq.delta.total_seconds", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance"], ["", "def", "loadData", "(", "args", ")", ":", "\n", "# Traffic", "\n", "    ", "df", "=", "pd", ".", "read_hdf", "(", "args", ".", "traffic_file", ")", "\n", "Traffic", "=", "df", ".", "values", "\n", "# train/val/test ", "\n", "num_step", "=", "df", ".", "shape", "[", "0", "]", "\n", "train_steps", "=", "round", "(", "args", ".", "train_ratio", "*", "num_step", ")", "\n", "test_steps", "=", "round", "(", "args", ".", "test_ratio", "*", "num_step", ")", "\n", "val_steps", "=", "num_step", "-", "train_steps", "-", "test_steps", "\n", "train", "=", "Traffic", "[", ":", "train_steps", "]", "\n", "val", "=", "Traffic", "[", "train_steps", ":", "train_steps", "+", "val_steps", "]", "\n", "test", "=", "Traffic", "[", "-", "test_steps", ":", "]", "\n", "# X, Y ", "\n", "trainX", ",", "trainY", "=", "seq2instance", "(", "train", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "valX", ",", "valY", "=", "seq2instance", "(", "val", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "testX", ",", "testY", "=", "seq2instance", "(", "test", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "# normalization", "\n", "mean", ",", "std", "=", "np", ".", "mean", "(", "trainX", ")", ",", "np", ".", "std", "(", "trainX", ")", "\n", "trainX", "=", "(", "trainX", "-", "mean", ")", "/", "std", "\n", "valX", "=", "(", "valX", "-", "mean", ")", "/", "std", "\n", "testX", "=", "(", "testX", "-", "mean", ")", "/", "std", "\n", "\n", "# spatial embedding ", "\n", "f", "=", "open", "(", "args", ".", "SE_file", ",", "mode", "=", "'r'", ")", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "temp", "=", "lines", "[", "0", "]", ".", "split", "(", "' '", ")", "\n", "N", ",", "dims", "=", "int", "(", "temp", "[", "0", "]", ")", ",", "int", "(", "temp", "[", "1", "]", ")", "\n", "SE", "=", "np", ".", "zeros", "(", "shape", "=", "(", "N", ",", "dims", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "line", "in", "lines", "[", "1", ":", "]", ":", "\n", "        ", "temp", "=", "line", ".", "split", "(", "' '", ")", "\n", "index", "=", "int", "(", "temp", "[", "0", "]", ")", "\n", "SE", "[", "index", "]", "=", "temp", "[", "1", ":", "]", "\n", "\n", "# temporal embedding ", "\n", "", "Time", "=", "df", ".", "index", "\n", "dayofweek", "=", "np", ".", "reshape", "(", "Time", ".", "weekday", ",", "newshape", "=", "(", "-", "1", ",", "1", ")", ")", "\n", "timeofday", "=", "(", "Time", ".", "hour", "*", "3600", "+", "Time", ".", "minute", "*", "60", "+", "Time", ".", "second", ")", "//", "Time", ".", "freq", ".", "delta", ".", "total_seconds", "(", ")", "\n", "timeofday", "=", "np", ".", "reshape", "(", "timeofday", ",", "newshape", "=", "(", "-", "1", ",", "1", ")", ")", "\n", "Time", "=", "np", ".", "concatenate", "(", "(", "dayofweek", ",", "timeofday", ")", ",", "axis", "=", "-", "1", ")", "\n", "# train/val/test", "\n", "train", "=", "Time", "[", ":", "train_steps", "]", "\n", "val", "=", "Time", "[", "train_steps", ":", "train_steps", "+", "val_steps", "]", "\n", "test", "=", "Time", "[", "-", "test_steps", ":", "]", "\n", "# shape = (num_sample, P + Q, 2)", "\n", "trainTE", "=", "seq2instance", "(", "train", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "trainTE", "=", "np", ".", "concatenate", "(", "trainTE", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "valTE", "=", "seq2instance", "(", "val", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "valTE", "=", "np", ".", "concatenate", "(", "valTE", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "testTE", "=", "seq2instance", "(", "test", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "testTE", "=", "np", ".", "concatenate", "(", "testTE", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "return", "(", "trainX", ",", "trainTE", ",", "trainY", ",", "valX", ",", "valTE", ",", "valY", ",", "testX", ",", "testTE", ",", "testY", ",", "\n", "SE", ",", "mean", ",", "std", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.Graph.__init__": [[12, 17], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "nx_G", ",", "is_directed", ",", "p", ",", "q", ")", ":", "\n", "\t\t", "self", ".", "G", "=", "nx_G", "\n", "self", ".", "is_directed", "=", "is_directed", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "q", "=", "q", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.Graph.node2vec_walk": [[18, 43], ["len", "sorted", "G.neighbors", "len", "len", "walk.append", "walk.append", "node2vec.alias_draw", "node2vec.alias_draw"], "methods", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.alias_draw", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.alias_draw"], ["", "def", "node2vec_walk", "(", "self", ",", "walk_length", ",", "start_node", ")", ":", "\n", "\t\t", "'''\n\t\tSimulate a random walk starting from start node.\n\t\t'''", "\n", "G", "=", "self", ".", "G", "\n", "alias_nodes", "=", "self", ".", "alias_nodes", "\n", "alias_edges", "=", "self", ".", "alias_edges", "\n", "\n", "walk", "=", "[", "start_node", "]", "\n", "\n", "while", "len", "(", "walk", ")", "<", "walk_length", ":", "\n", "\t\t\t", "cur", "=", "walk", "[", "-", "1", "]", "\n", "cur_nbrs", "=", "sorted", "(", "G", ".", "neighbors", "(", "cur", ")", ")", "\n", "if", "len", "(", "cur_nbrs", ")", ">", "0", ":", "\n", "\t\t\t\t", "if", "len", "(", "walk", ")", "==", "1", ":", "\n", "\t\t\t\t\t", "walk", ".", "append", "(", "cur_nbrs", "[", "alias_draw", "(", "alias_nodes", "[", "cur", "]", "[", "0", "]", ",", "alias_nodes", "[", "cur", "]", "[", "1", "]", ")", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "prev", "=", "walk", "[", "-", "2", "]", "\n", "next", "=", "cur_nbrs", "[", "alias_draw", "(", "alias_edges", "[", "(", "prev", ",", "cur", ")", "]", "[", "0", "]", ",", "\n", "alias_edges", "[", "(", "prev", ",", "cur", ")", "]", "[", "1", "]", ")", "]", "\n", "walk", ".", "append", "(", "next", ")", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "break", "\n", "\n", "", "", "return", "walk", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.Graph.simulate_walks": [[44, 59], ["list", "print", "range", "G.nodes", "print", "random.shuffle", "str", "str", "walks.append", "node2vec.Graph.node2vec_walk"], "methods", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.Graph.node2vec_walk"], ["", "def", "simulate_walks", "(", "self", ",", "num_walks", ",", "walk_length", ")", ":", "\n", "\t\t", "'''\n\t\tRepeatedly simulate random walks from each node.\n\t\t'''", "\n", "G", "=", "self", ".", "G", "\n", "walks", "=", "[", "]", "\n", "nodes", "=", "list", "(", "G", ".", "nodes", "(", ")", ")", "\n", "print", "(", "'Walk iteration:'", ")", "\n", "for", "walk_iter", "in", "range", "(", "num_walks", ")", ":", "\n", "\t\t\t", "print", "(", "str", "(", "walk_iter", "+", "1", ")", ",", "'/'", ",", "str", "(", "num_walks", ")", ")", "\n", "random", ".", "shuffle", "(", "nodes", ")", "\n", "for", "node", "in", "nodes", ":", "\n", "\t\t\t\t", "walks", ".", "append", "(", "self", ".", "node2vec_walk", "(", "walk_length", "=", "walk_length", ",", "start_node", "=", "node", ")", ")", "\n", "\n", "", "", "return", "walks", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.Graph.get_alias_edge": [[60, 80], ["sorted", "sum", "node2vec.alias_setup", "G.neighbors", "unnormalized_probs.append", "G.has_edge", "float", "unnormalized_probs.append", "unnormalized_probs.append"], "methods", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.alias_setup"], ["", "def", "get_alias_edge", "(", "self", ",", "src", ",", "dst", ")", ":", "\n", "\t\t", "'''\n\t\tGet the alias edge setup lists for a given edge.\n\t\t'''", "\n", "G", "=", "self", ".", "G", "\n", "p", "=", "self", ".", "p", "\n", "q", "=", "self", ".", "q", "\n", "\n", "unnormalized_probs", "=", "[", "]", "\n", "for", "dst_nbr", "in", "sorted", "(", "G", ".", "neighbors", "(", "dst", ")", ")", ":", "\n", "\t\t\t", "if", "dst_nbr", "==", "src", ":", "\n", "\t\t\t\t", "unnormalized_probs", ".", "append", "(", "G", "[", "dst", "]", "[", "dst_nbr", "]", "[", "'weight'", "]", "/", "p", ")", "\n", "", "elif", "G", ".", "has_edge", "(", "dst_nbr", ",", "src", ")", ":", "\n", "\t\t\t\t", "unnormalized_probs", ".", "append", "(", "G", "[", "dst", "]", "[", "dst_nbr", "]", "[", "'weight'", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "unnormalized_probs", ".", "append", "(", "G", "[", "dst", "]", "[", "dst_nbr", "]", "[", "'weight'", "]", "/", "q", ")", "\n", "", "", "norm_const", "=", "sum", "(", "unnormalized_probs", ")", "\n", "normalized_probs", "=", "[", "float", "(", "u_prob", ")", "/", "norm_const", "for", "u_prob", "in", "unnormalized_probs", "]", "\n", "\n", "return", "alias_setup", "(", "normalized_probs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.Graph.preprocess_transition_probs": [[81, 110], ["G.nodes", "sum", "node2vec.alias_setup", "G.edges", "G.edges", "node2vec.Graph.get_alias_edge", "node2vec.Graph.get_alias_edge", "node2vec.Graph.get_alias_edge", "sorted", "float", "G.neighbors"], "methods", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.alias_setup", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.Graph.get_alias_edge", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.Graph.get_alias_edge", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.Graph.get_alias_edge"], ["", "def", "preprocess_transition_probs", "(", "self", ")", ":", "\n", "\t\t", "'''\n\t\tPreprocessing of transition probabilities for guiding the random walks.\n\t\t'''", "\n", "G", "=", "self", ".", "G", "\n", "is_directed", "=", "self", ".", "is_directed", "\n", "\n", "alias_nodes", "=", "{", "}", "\n", "for", "node", "in", "G", ".", "nodes", "(", ")", ":", "\n", "\t\t\t", "unnormalized_probs", "=", "[", "G", "[", "node", "]", "[", "nbr", "]", "[", "'weight'", "]", "for", "nbr", "in", "sorted", "(", "G", ".", "neighbors", "(", "node", ")", ")", "]", "\n", "norm_const", "=", "sum", "(", "unnormalized_probs", ")", "\n", "normalized_probs", "=", "[", "float", "(", "u_prob", ")", "/", "norm_const", "for", "u_prob", "in", "unnormalized_probs", "]", "\n", "alias_nodes", "[", "node", "]", "=", "alias_setup", "(", "normalized_probs", ")", "\n", "\n", "", "alias_edges", "=", "{", "}", "\n", "triads", "=", "{", "}", "\n", "\n", "if", "is_directed", ":", "\n", "\t\t\t", "for", "edge", "in", "G", ".", "edges", "(", ")", ":", "\n", "\t\t\t\t", "alias_edges", "[", "edge", "]", "=", "self", ".", "get_alias_edge", "(", "edge", "[", "0", "]", ",", "edge", "[", "1", "]", ")", "\n", "", "", "else", ":", "\n", "\t\t\t", "for", "edge", "in", "G", ".", "edges", "(", ")", ":", "\n", "\t\t\t\t", "alias_edges", "[", "edge", "]", "=", "self", ".", "get_alias_edge", "(", "edge", "[", "0", "]", ",", "edge", "[", "1", "]", ")", "\n", "alias_edges", "[", "(", "edge", "[", "1", "]", ",", "edge", "[", "0", "]", ")", "]", "=", "self", ".", "get_alias_edge", "(", "edge", "[", "1", "]", ",", "edge", "[", "0", "]", ")", "\n", "\n", "", "", "self", ".", "alias_nodes", "=", "alias_nodes", "\n", "self", ".", "alias_edges", "=", "alias_edges", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.alias_setup": [[112, 143], ["len", "numpy.zeros", "numpy.zeros", "enumerate", "smaller.pop", "larger.pop", "smaller.append", "larger.append", "len", "len", "smaller.append", "larger.append"], "function", ["None"], ["", "", "def", "alias_setup", "(", "probs", ")", ":", "\n", "\t", "'''\n\tCompute utility lists for non-uniform sampling from discrete distributions.\n\tRefer to https://hips.seas.harvard.edu/blog/2013/03/03/the-alias-method-efficient-sampling-with-many-discrete-outcomes/\n\tfor details\n\t'''", "\n", "K", "=", "len", "(", "probs", ")", "\n", "q", "=", "np", ".", "zeros", "(", "K", ")", "\n", "J", "=", "np", ".", "zeros", "(", "K", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n", "smaller", "=", "[", "]", "\n", "larger", "=", "[", "]", "\n", "for", "kk", ",", "prob", "in", "enumerate", "(", "probs", ")", ":", "\n", "\t    ", "q", "[", "kk", "]", "=", "K", "*", "prob", "\n", "if", "q", "[", "kk", "]", "<", "1.0", ":", "\n", "\t        ", "smaller", ".", "append", "(", "kk", ")", "\n", "", "else", ":", "\n", "\t        ", "larger", ".", "append", "(", "kk", ")", "\n", "\n", "", "", "while", "len", "(", "smaller", ")", ">", "0", "and", "len", "(", "larger", ")", ">", "0", ":", "\n", "\t    ", "small", "=", "smaller", ".", "pop", "(", ")", "\n", "large", "=", "larger", ".", "pop", "(", ")", "\n", "\n", "J", "[", "small", "]", "=", "large", "\n", "q", "[", "large", "]", "=", "q", "[", "large", "]", "+", "q", "[", "small", "]", "-", "1.0", "\n", "if", "q", "[", "large", "]", "<", "1.0", ":", "\n", "\t        ", "smaller", ".", "append", "(", "large", ")", "\n", "", "else", ":", "\n", "\t        ", "larger", ".", "append", "(", "large", ")", "\n", "\n", "", "", "return", "J", ",", "q", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.node2vec.alias_draw": [[144, 155], ["len", "int", "numpy.floor", "numpy.random.rand", "numpy.random.rand"], "function", ["None"], ["", "def", "alias_draw", "(", "J", ",", "q", ")", ":", "\n", "\t", "'''\n\tDraw sample from a non-uniform discrete distribution using alias sampling.\n\t'''", "\n", "K", "=", "len", "(", "J", ")", "\n", "\n", "kk", "=", "int", "(", "np", ".", "floor", "(", "np", ".", "random", ".", "rand", "(", ")", "*", "K", ")", ")", "\n", "if", "np", ".", "random", ".", "rand", "(", ")", "<", "q", "[", "kk", "]", ":", "\n", "\t    ", "return", "kk", "\n", "", "else", ":", "\n", "\t    ", "return", "J", "[", "kk", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.generateSE.read_graph": [[17, 23], ["networkx.read_edgelist", "networkx.DiGraph"], "function", ["None"], ["def", "read_graph", "(", "edgelist", ")", ":", "\n", "    ", "G", "=", "nx", ".", "read_edgelist", "(", "\n", "edgelist", ",", "nodetype", "=", "int", ",", "data", "=", "(", "(", "'weight'", ",", "float", ")", ",", ")", ",", "\n", "create_using", "=", "nx", ".", "DiGraph", "(", ")", ")", "\n", "\n", "return", "G", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.node2vec.generateSE.learn_embeddings": [[24, 32], ["gensim.models.Word2Vec", "gensim.models.Word2Vec.wv.save_word2vec_format", "list", "map"], "function", ["None"], ["", "def", "learn_embeddings", "(", "walks", ",", "dimensions", ",", "output_file", ")", ":", "\n", "    ", "walks", "=", "[", "list", "(", "map", "(", "str", ",", "walk", ")", ")", "for", "walk", "in", "walks", "]", "\n", "model", "=", "Word2Vec", "(", "\n", "walks", ",", "size", "=", "dimensions", ",", "window", "=", "10", ",", "min_count", "=", "0", ",", "sg", "=", "1", ",", "\n", "workers", "=", "8", ",", "iter", "=", "iter", ")", "\n", "model", ".", "wv", ".", "save_word2vec_format", "(", "output_file", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.conv2d": [[3, 22], ["tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.Variable", "tensorflow.nn.bias_add", "activation", "batch_norm.get_shape", "tensorflow.glorot_uniform_initializer", "tf_utils.batch_norm", "tensorflow.zeros_initializer"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.conv2d", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.batch_norm"], ["def", "conv2d", "(", "x", ",", "output_dims", ",", "kernel_size", ",", "stride", "=", "[", "1", ",", "1", "]", ",", "\n", "padding", "=", "'SAME'", ",", "use_bias", "=", "True", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "False", ",", "bn_decay", "=", "None", ",", "is_training", "=", "None", ")", ":", "\n", "    ", "input_dims", "=", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ".", "value", "\n", "kernel_shape", "=", "kernel_size", "+", "[", "input_dims", ",", "output_dims", "]", "\n", "kernel", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "glorot_uniform_initializer", "(", ")", "(", "shape", "=", "kernel_shape", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ",", "name", "=", "'kernel'", ")", "\n", "x", "=", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "kernel", ",", "[", "1", "]", "+", "stride", "+", "[", "1", "]", ",", "padding", "=", "padding", ")", "\n", "if", "use_bias", ":", "\n", "        ", "bias", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros_initializer", "(", ")", "(", "shape", "=", "[", "output_dims", "]", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ",", "name", "=", "'bias'", ")", "\n", "x", "=", "tf", ".", "nn", ".", "bias_add", "(", "x", ",", "bias", ")", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "        ", "if", "bn", ":", "\n", "            ", "x", "=", "batch_norm", "(", "x", ",", "is_training", "=", "is_training", ",", "bn_decay", "=", "bn_decay", ")", "\n", "", "x", "=", "activation", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.batch_norm": [[23, 52], ["list", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.moments", "tensorflow.train.ExponentialMovingAverage", "tensorflow.cond", "tensorflow.cond", "tensorflow.nn.batch_normalization", "range", "tf.nn.batch_normalization.get_shape", "tensorflow.zeros_initializer", "tensorflow.ones_initializer", "tf.train.ExponentialMovingAverage.apply", "tensorflow.no_op", "tensorflow.control_dependencies", "len", "tensorflow.identity", "tensorflow.identity", "tf.train.ExponentialMovingAverage.average", "tf.train.ExponentialMovingAverage.average", "tf.nn.batch_normalization.get_shape"], "function", ["None"], ["", "def", "batch_norm", "(", "x", ",", "is_training", ",", "bn_decay", ")", ":", "\n", "    ", "input_dims", "=", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ".", "value", "\n", "moment_dims", "=", "list", "(", "range", "(", "len", "(", "x", ".", "get_shape", "(", ")", ")", "-", "1", ")", ")", "\n", "beta", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "zeros_initializer", "(", ")", "(", "shape", "=", "[", "input_dims", "]", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ",", "name", "=", "'beta'", ")", "\n", "gamma", "=", "tf", ".", "Variable", "(", "\n", "tf", ".", "ones_initializer", "(", ")", "(", "shape", "=", "[", "input_dims", "]", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ",", "name", "=", "'gamma'", ")", "\n", "batch_mean", ",", "batch_var", "=", "tf", ".", "nn", ".", "moments", "(", "x", ",", "moment_dims", ",", "name", "=", "'moments'", ")", "\n", "\n", "decay", "=", "bn_decay", "if", "bn_decay", "is", "not", "None", "else", "0.9", "\n", "ema", "=", "tf", ".", "train", ".", "ExponentialMovingAverage", "(", "decay", "=", "decay", ")", "\n", "# Operator that maintains moving averages of variables.", "\n", "ema_apply_op", "=", "tf", ".", "cond", "(", "\n", "is_training", ",", "\n", "lambda", ":", "ema", ".", "apply", "(", "[", "batch_mean", ",", "batch_var", "]", ")", ",", "\n", "lambda", ":", "tf", ".", "no_op", "(", ")", ")", "\n", "# Update moving average and return current batch's avg and var.", "\n", "def", "mean_var_with_update", "(", ")", ":", "\n", "        ", "with", "tf", ".", "control_dependencies", "(", "[", "ema_apply_op", "]", ")", ":", "\n", "            ", "return", "tf", ".", "identity", "(", "batch_mean", ")", ",", "tf", ".", "identity", "(", "batch_var", ")", "\n", "# ema.average returns the Variable holding the average of var.", "\n", "", "", "mean", ",", "var", "=", "tf", ".", "cond", "(", "\n", "is_training", ",", "\n", "mean_var_with_update", ",", "\n", "lambda", ":", "(", "ema", ".", "average", "(", "batch_mean", ")", ",", "ema", ".", "average", "(", "batch_var", ")", ")", ")", "\n", "x", "=", "tf", ".", "nn", ".", "batch_normalization", "(", "x", ",", "mean", ",", "var", ",", "beta", ",", "gamma", ",", "1e-3", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.dropout": [[53, 59], ["tensorflow.cond", "tensorflow.nn.dropout"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.dropout"], ["", "def", "dropout", "(", "x", ",", "drop", ",", "is_training", ")", ":", "\n", "    ", "x", "=", "tf", ".", "cond", "(", "\n", "is_training", ",", "\n", "lambda", ":", "tf", ".", "nn", ".", "dropout", "(", "x", ",", "rate", "=", "drop", ")", ",", "\n", "lambda", ":", "x", ")", "\n", "return", "x", "\n", "", ""]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.placeholder": [[4, 10], ["tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.placeholder", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.placeholder", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.placeholder", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.placeholder"], ["def", "placeholder", "(", "P", ",", "Q", ",", "N", ")", ":", "\n", "    ", "X", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "\n", "shape", "=", "(", "None", ",", "P", ",", "N", ")", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'X'", ")", "\n", "TE", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "\n", "shape", "=", "(", "None", ",", "P", "+", "Q", ",", "2", ")", ",", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'TE'", ")", "\n", "label", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "\n", "shape", "=", "(", "None", ",", "Q", ",", "N", ")", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'label'", ")", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC": [[11, 25], ["isinstance", "zip", "isinstance", "type", "tf_utils.conv2d", "list", "list"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.tf_utils.conv2d"], ["is_training", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "\n", "shape", "=", "(", ")", ",", "dtype", "=", "tf", ".", "bool", ",", "name", "=", "'is_training'", ")", "\n", "return", "X", ",", "TE", ",", "label", ",", "is_training", "\n", "\n", "", "def", "FC", "(", "x", ",", "units", ",", "activations", ",", "bn", ",", "bn_decay", ",", "is_training", ",", "use_bias", "=", "True", ",", "drop", "=", "None", ")", ":", "\n", "    ", "if", "isinstance", "(", "units", ",", "int", ")", ":", "\n", "        ", "units", "=", "[", "units", "]", "\n", "activations", "=", "[", "activations", "]", "\n", "", "elif", "isinstance", "(", "units", ",", "tuple", ")", ":", "\n", "        ", "units", "=", "list", "(", "units", ")", "\n", "activations", "=", "list", "(", "activations", ")", "\n", "", "assert", "type", "(", "units", ")", "==", "list", "\n", "for", "num_unit", ",", "activation", "in", "zip", "(", "units", ",", "activations", ")", ":", "\n", "        ", "if", "drop", "is", "not", "None", ":", "\n", "            ", "x", "=", "tf_utils", ".", "dropout", "(", "x", ",", "drop", "=", "drop", ",", "is_training", "=", "is_training", ")", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.STEmbedding": [[26, 49], ["tensorflow.expand_dims", "model.FC", "tensorflow.one_hot", "tensorflow.one_hot", "tensorflow.concat", "tensorflow.expand_dims", "model.FC", "tensorflow.add", "tensorflow.expand_dims"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["", "x", "=", "tf_utils", ".", "conv2d", "(", "\n", "x", ",", "output_dims", "=", "num_unit", ",", "kernel_size", "=", "[", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "1", "]", ",", "\n", "padding", "=", "'VALID'", ",", "use_bias", "=", "use_bias", ",", "activation", "=", "activation", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "", "return", "x", "\n", "\n", "", "def", "STEmbedding", "(", "SE", ",", "TE", ",", "T", ",", "D", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    spatio-temporal embedding\n    SE:     [N, D]\n    TE:     [batch_size, P + Q, 2] (dayofweek, timeofday)\n    T:      num of time steps in one day\n    D:      output dims\n    retrun: [batch_size, P + Q, N, D]\n    '''", "\n", "# spatial embedding", "\n", "SE", "=", "tf", ".", "expand_dims", "(", "tf", ".", "expand_dims", "(", "SE", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "SE", "=", "FC", "(", "\n", "SE", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# temporal embedding", "\n", "dayofweek", "=", "tf", ".", "one_hot", "(", "TE", "[", "...", ",", "0", "]", ",", "depth", "=", "7", ")", "\n", "timeofday", "=", "tf", ".", "one_hot", "(", "TE", "[", "...", ",", "1", "]", ",", "depth", "=", "T", ")", "\n", "TE", "=", "tf", ".", "concat", "(", "(", "dayofweek", ",", "timeofday", ")", ",", "axis", "=", "-", "1", ")", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.spatialAttention": [[50, 86], ["tensorflow.concat", "model.FC", "model.FC", "model.FC", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.concat", "model.FC", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.split"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["TE", "=", "tf", ".", "expand_dims", "(", "TE", ",", "axis", "=", "2", ")", "\n", "TE", "=", "FC", "(", "\n", "TE", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "tf", ".", "add", "(", "SE", ",", "TE", ")", "\n", "\n", "", "def", "spatialAttention", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    spatial attention mechanism\n    X:      [batch_size, num_step, N, D]\n    STE:    [batch_size, num_step, N, D]\n    K:      number of attention heads\n    d:      dimension of each attention outputs\n    return: [batch_size, num_step, N, D]\n    '''", "\n", "D", "=", "K", "*", "d", "\n", "X", "=", "tf", ".", "concat", "(", "(", "X", ",", "STE", ")", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, num_step, N, K * d]", "\n", "query", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "key", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "value", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# [K * batch_size, num_step, N, d]", "\n", "query", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "query", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "key", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "key", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "value", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "value", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "# [K * batch_size, num_step, N, N]", "\n", "attention", "=", "tf", ".", "matmul", "(", "query", ",", "key", ",", "transpose_b", "=", "True", ")", "\n", "attention", "/=", "(", "d", "**", "0.5", ")", "\n", "attention", "=", "tf", ".", "nn", ".", "softmax", "(", "attention", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, num_step, N, D]", "\n", "X", "=", "tf", ".", "matmul", "(", "attention", ",", "value", ")", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.temporalAttention": [[87, 143], ["tensorflow.concat", "model.FC", "model.FC", "model.FC", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.concat", "model.FC", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.ones", "tensorflow.linalg.LinearOperatorLowerTriangular().to_dense", "tensorflow.expand_dims", "tensorflow.tile", "tensorflow.cast", "tensorflow.compat.v2.where", "tensorflow.split", "tensorflow.shape", "tensorflow.expand_dims", "FC.get_shape", "FC.get_shape", "tensorflow.linalg.LinearOperatorLowerTriangular"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["X", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "X", ",", "K", ",", "axis", "=", "0", ")", ",", "axis", "=", "-", "1", ")", "\n", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "X", "\n", "\n", "", "def", "temporalAttention", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ",", "mask", "=", "True", ")", ":", "\n", "    ", "'''\n    temporal attention mechanism\n    X:      [batch_size, num_step, N, D]\n    STE:    [batch_size, num_step, N, D]\n    K:      number of attention heads\n    d:      dimension of each attention outputs\n    return: [batch_size, num_step, N, D]\n    '''", "\n", "D", "=", "K", "*", "d", "\n", "X", "=", "tf", ".", "concat", "(", "(", "X", ",", "STE", ")", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, num_step, N, K * d]", "\n", "query", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "key", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "value", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# [K * batch_size, num_step, N, d]", "\n", "query", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "query", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "key", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "key", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "value", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "value", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "# query: [K * batch_size, N, num_step, d]", "\n", "# key:   [K * batch_size, N, d, num_step]", "\n", "# value: [K * batch_size, N, num_step, d]", "\n", "query", "=", "tf", ".", "transpose", "(", "query", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "key", "=", "tf", ".", "transpose", "(", "key", ",", "perm", "=", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "value", "=", "tf", ".", "transpose", "(", "value", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "# [K * batch_size, N, num_step, num_step]", "\n", "attention", "=", "tf", ".", "matmul", "(", "query", ",", "key", ")", "\n", "attention", "/=", "(", "d", "**", "0.5", ")", "\n", "# mask attention score", "\n", "if", "mask", ":", "\n", "        ", "batch_size", "=", "tf", ".", "shape", "(", "X", ")", "[", "0", "]", "\n", "num_step", "=", "X", ".", "get_shape", "(", ")", "[", "1", "]", ".", "value", "\n", "N", "=", "X", ".", "get_shape", "(", ")", "[", "2", "]", ".", "value", "\n", "mask", "=", "tf", ".", "ones", "(", "shape", "=", "(", "num_step", ",", "num_step", ")", ")", "\n", "mask", "=", "tf", ".", "linalg", ".", "LinearOperatorLowerTriangular", "(", "mask", ")", ".", "to_dense", "(", ")", "\n", "mask", "=", "tf", ".", "expand_dims", "(", "tf", ".", "expand_dims", "(", "mask", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "mask", "=", "tf", ".", "tile", "(", "mask", ",", "multiples", "=", "(", "K", "*", "batch_size", ",", "N", ",", "1", ",", "1", ")", ")", "\n", "mask", "=", "tf", ".", "cast", "(", "mask", ",", "dtype", "=", "tf", ".", "bool", ")", "\n", "attention", "=", "tf", ".", "compat", ".", "v2", ".", "where", "(", "\n", "condition", "=", "mask", ",", "x", "=", "attention", ",", "y", "=", "-", "2", "**", "15", "+", "1", ")", "\n", "# softmax   ", "\n", "", "attention", "=", "tf", ".", "nn", ".", "softmax", "(", "attention", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, num_step, N, D]", "\n", "X", "=", "tf", ".", "matmul", "(", "attention", ",", "value", ")", "\n", "X", "=", "tf", ".", "transpose", "(", "X", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.gatedFusion": [[144, 166], ["model.FC", "model.FC", "tensorflow.nn.sigmoid", "tensorflow.add", "model.FC", "tensorflow.add", "tensorflow.multiply", "tensorflow.multiply"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["X", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "X", ",", "K", ",", "axis", "=", "0", ")", ",", "axis", "=", "-", "1", ")", "\n", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "X", "\n", "\n", "", "def", "gatedFusion", "(", "HS", ",", "HT", ",", "D", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    gated fusion\n    HS:     [batch_size, num_step, N, D]\n    HT:     [batch_size, num_step, N, D]\n    D:      output dims\n    return: [batch_size, num_step, N, D]\n    '''", "\n", "XS", "=", "FC", "(", "\n", "HS", ",", "units", "=", "D", ",", "activations", "=", "None", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "\n", "is_training", "=", "is_training", ",", "use_bias", "=", "False", ")", "\n", "XT", "=", "FC", "(", "\n", "HT", ",", "units", "=", "D", ",", "activations", "=", "None", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "\n", "is_training", "=", "is_training", ",", "use_bias", "=", "True", ")", "\n", "z", "=", "tf", ".", "nn", ".", "sigmoid", "(", "tf", ".", "add", "(", "XS", ",", "XT", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.STAttBlock": [[167, 172], ["model.spatialAttention", "model.temporalAttention", "model.gatedFusion", "tensorflow.add"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.spatialAttention", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.temporalAttention", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.gatedFusion"], ["H", "=", "tf", ".", "add", "(", "tf", ".", "multiply", "(", "z", ",", "HS", ")", ",", "tf", ".", "multiply", "(", "1", "-", "z", ",", "HT", ")", ")", "\n", "H", "=", "FC", "(", "\n", "H", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "H", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.transformAttention": [[173, 220], ["model.FC", "model.FC", "model.FC", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.matmul", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.transpose", "tensorflow.concat", "model.FC", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.split"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC"], ["", "def", "STAttBlock", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ",", "mask", "=", "True", ")", ":", "\n", "    ", "HS", "=", "spatialAttention", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "HT", "=", "temporalAttention", "(", "X", ",", "STE", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ",", "mask", "=", "mask", ")", "\n", "H", "=", "gatedFusion", "(", "HS", ",", "HT", ",", "K", "*", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "return", "tf", ".", "add", "(", "X", ",", "H", ")", "\n", "\n", "", "def", "transformAttention", "(", "X", ",", "STE_P", ",", "STE_Q", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    transform attention mechanism\n    X:      [batch_size, P, N, D]\n    STE_P:  [batch_size, P, N, D]\n    STE_Q:  [batch_size, Q, N, D]\n    K:      number of attention heads\n    d:      dimension of each attention outputs\n    return: [batch_size, Q, N, D]\n    '''", "\n", "D", "=", "K", "*", "d", "\n", "# query: [batch_size, Q, N, K * d]", "\n", "# key:   [batch_size, P, N, K * d]", "\n", "# value: [batch_size, P, N, K * d]", "\n", "query", "=", "FC", "(", "\n", "STE_Q", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "key", "=", "FC", "(", "\n", "STE_P", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "value", "=", "FC", "(", "\n", "X", ",", "units", "=", "D", ",", "activations", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# query: [K * batch_size, Q, N, d]", "\n", "# key:   [K * batch_size, P, N, d]", "\n", "# value: [K * batch_size, P, N, d]", "\n", "query", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "query", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "key", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "key", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "value", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "value", ",", "K", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", "\n", "# query: [K * batch_size, N, Q, d]", "\n", "# key:   [K * batch_size, N, d, P]", "\n", "# value: [K * batch_size, N, P, d]", "\n", "query", "=", "tf", ".", "transpose", "(", "query", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "key", "=", "tf", ".", "transpose", "(", "key", ",", "perm", "=", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "value", "=", "tf", ".", "transpose", "(", "value", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "# [K * batch_size, N, Q, P]", "\n", "attention", "=", "tf", ".", "matmul", "(", "query", ",", "key", ")", "\n", "attention", "/=", "(", "d", "**", "0.5", ")", "\n", "attention", "=", "tf", ".", "nn", ".", "softmax", "(", "attention", ",", "axis", "=", "-", "1", ")", "\n", "# [batch_size, Q, N, D]", "\n", "X", "=", "tf", ".", "matmul", "(", "attention", ",", "value", ")", "\n", "X", "=", "tf", ".", "transpose", "(", "X", ",", "perm", "=", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.GMAN": [[221, 259], ["tensorflow.expand_dims", "model.FC", "model.STEmbedding", "range", "model.transformAttention", "range", "model.FC", "tensorflow.squeeze", "model.STAttBlock", "model.STAttBlock"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.STEmbedding", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.transformAttention", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.FC", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.STAttBlock", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.STAttBlock"], ["X", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "X", ",", "K", ",", "axis", "=", "0", ")", ",", "axis", "=", "-", "1", ")", "\n", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "return", "X", "\n", "\n", "", "def", "GMAN", "(", "X", ",", "TE", ",", "SE", ",", "P", ",", "Q", ",", "T", ",", "L", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", ":", "\n", "    ", "'''\n    GMAN\n    X\uff1a       [batch_size, P, N]\n    TE\uff1a      [batch_size, P + Q, 2] (time-of-day, day-of-week)\n    SE\uff1a      [N, K * d]\n    P\uff1a       number of history steps\n    Q\uff1a       number of prediction steps\n    T\uff1a       one day is divided into T steps\n    L\uff1a       number of STAtt blocks in the encoder/decoder\n    K\uff1a       number of attention heads\n    d\uff1a       dimension of each attention head outputs\n    return\uff1a  [batch_size, Q, N]\n    '''", "\n", "D", "=", "K", "*", "d", "\n", "# input", "\n", "X", "=", "tf", ".", "expand_dims", "(", "X", ",", "axis", "=", "-", "1", ")", "\n", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "D", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ")", "\n", "# STE", "\n", "STE", "=", "STEmbedding", "(", "SE", ",", "TE", ",", "T", ",", "D", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "STE_P", "=", "STE", "[", ":", ",", ":", "P", "]", "\n", "STE_Q", "=", "STE", "[", ":", ",", "P", ":", "]", "\n", "# encoder", "\n", "for", "_", "in", "range", "(", "L", ")", ":", "\n", "        ", "X", "=", "STAttBlock", "(", "X", ",", "STE_P", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "# transAtt", "\n", "", "X", "=", "transformAttention", "(", "\n", "X", ",", "STE_P", ",", "STE_Q", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n", "# decoder", "\n", "for", "_", "in", "range", "(", "L", ")", ":", "\n", "        ", "X", "=", "STAttBlock", "(", "X", ",", "STE_Q", ",", "K", ",", "d", ",", "bn", ",", "bn_decay", ",", "is_training", ")", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.model.mae_loss": [[260, 272], ["tensorflow.not_equal", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.compat.v2.where", "tensorflow.abs", "tensorflow.compat.v2.where", "tensorflow.reduce_mean", "tensorflow.subtract", "tensorflow.math.is_nan", "tensorflow.math.is_nan"], "function", ["None"], ["# output", "\n", "", "X", "=", "FC", "(", "\n", "X", ",", "units", "=", "[", "D", ",", "1", "]", ",", "activations", "=", "[", "tf", ".", "nn", ".", "relu", ",", "None", "]", ",", "\n", "bn", "=", "bn", ",", "bn_decay", "=", "bn_decay", ",", "is_training", "=", "is_training", ",", "\n", "use_bias", "=", "True", ",", "drop", "=", "0.1", ")", "\n", "return", "tf", ".", "squeeze", "(", "X", ",", "axis", "=", "3", ")", "\n", "\n", "", "def", "mae_loss", "(", "pred", ",", "label", ")", ":", "\n", "    ", "mask", "=", "tf", ".", "not_equal", "(", "label", ",", "0", ")", "\n", "mask", "=", "tf", ".", "cast", "(", "mask", ",", "tf", ".", "float32", ")", "\n", "mask", "/=", "tf", ".", "reduce_mean", "(", "mask", ")", "\n", "mask", "=", "tf", ".", "compat", ".", "v2", ".", "where", "(", "\n", "condition", "=", "tf", ".", "math", ".", "is_nan", "(", "mask", ")", ",", "x", "=", "0.", ",", "y", "=", "mask", ")", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.log_string": [[5, 9], ["log.write", "log.flush", "print"], "function", ["None"], ["def", "log_string", "(", "log", ",", "string", ")", ":", "\n", "    ", "log", ".", "write", "(", "string", "+", "'\\n'", ")", "\n", "log", ".", "flush", "(", ")", "\n", "print", "(", "string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.metric": [[11, 26], ["numpy.errstate", "numpy.not_equal", "mask.astype.astype", "numpy.mean", "numpy.abs().astype", "numpy.square", "numpy.divide", "numpy.nan_to_num", "numpy.mean", "numpy.nan_to_num", "numpy.sqrt", "numpy.nan_to_num", "numpy.mean", "numpy.mean", "numpy.abs", "numpy.subtract"], "function", ["None"], ["", "def", "metric", "(", "pred", ",", "label", ")", ":", "\n", "    ", "with", "np", ".", "errstate", "(", "divide", "=", "'ignore'", ",", "invalid", "=", "'ignore'", ")", ":", "\n", "        ", "mask", "=", "np", ".", "not_equal", "(", "label", ",", "0", ")", "\n", "mask", "=", "mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "mask", "/=", "np", ".", "mean", "(", "mask", ")", "\n", "mae", "=", "np", ".", "abs", "(", "np", ".", "subtract", "(", "pred", ",", "label", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "rmse", "=", "np", ".", "square", "(", "mae", ")", "\n", "mape", "=", "np", ".", "divide", "(", "mae", ",", "label", ")", "\n", "mae", "=", "np", ".", "nan_to_num", "(", "mae", "*", "mask", ")", "\n", "mae", "=", "np", ".", "mean", "(", "mae", ")", "\n", "rmse", "=", "np", ".", "nan_to_num", "(", "rmse", "*", "mask", ")", "\n", "rmse", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "rmse", ")", ")", "\n", "mape", "=", "np", ".", "nan_to_num", "(", "mape", "*", "mask", ")", "\n", "mape", "=", "np", ".", "mean", "(", "mape", ")", "\n", "", "return", "mae", ",", "rmse", ",", "mape", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance": [[27, 36], ["numpy.zeros", "numpy.zeros", "range"], "function", ["None"], ["", "def", "seq2instance", "(", "data", ",", "P", ",", "Q", ")", ":", "\n", "    ", "num_step", ",", "dims", "=", "data", ".", "shape", "\n", "num_sample", "=", "num_step", "-", "P", "-", "Q", "+", "1", "\n", "x", "=", "np", ".", "zeros", "(", "shape", "=", "(", "num_sample", ",", "P", ",", "dims", ")", ")", "\n", "y", "=", "np", ".", "zeros", "(", "shape", "=", "(", "num_sample", ",", "Q", ",", "dims", ")", ")", "\n", "for", "i", "in", "range", "(", "num_sample", ")", ":", "\n", "        ", "x", "[", "i", "]", "=", "data", "[", "i", ":", "i", "+", "P", "]", "\n", "y", "[", "i", "]", "=", "data", "[", "i", "+", "P", ":", "i", "+", "P", "+", "Q", "]", "\n", "", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.loadData": [[37, 91], ["pandas.read_hdf", "round", "round", "utils.seq2instance", "utils.seq2instance", "utils.seq2instance", "open", "open.readlines", "lines[].split", "numpy.zeros", "numpy.reshape", "numpy.reshape", "numpy.concatenate", "utils.seq2instance", "numpy.concatenate().astype", "utils.seq2instance", "numpy.concatenate().astype", "utils.seq2instance", "numpy.concatenate().astype", "numpy.mean", "numpy.std", "int", "int", "line.split", "int", "np.concatenate.freq.delta.total_seconds", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance", "home.repos.pwc.inspect_result.zhengchuanpan_GMAN.PeMS.utils.seq2instance"], ["", "def", "loadData", "(", "args", ")", ":", "\n", "# Traffic", "\n", "    ", "df", "=", "pd", ".", "read_hdf", "(", "args", ".", "traffic_file", ")", "\n", "Traffic", "=", "df", ".", "values", "\n", "# train/val/test ", "\n", "num_step", "=", "df", ".", "shape", "[", "0", "]", "\n", "train_steps", "=", "round", "(", "args", ".", "train_ratio", "*", "num_step", ")", "\n", "test_steps", "=", "round", "(", "args", ".", "test_ratio", "*", "num_step", ")", "\n", "val_steps", "=", "num_step", "-", "train_steps", "-", "test_steps", "\n", "train", "=", "Traffic", "[", ":", "train_steps", "]", "\n", "val", "=", "Traffic", "[", "train_steps", ":", "train_steps", "+", "val_steps", "]", "\n", "test", "=", "Traffic", "[", "-", "test_steps", ":", "]", "\n", "# X, Y ", "\n", "trainX", ",", "trainY", "=", "seq2instance", "(", "train", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "valX", ",", "valY", "=", "seq2instance", "(", "val", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "testX", ",", "testY", "=", "seq2instance", "(", "test", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "# normalization", "\n", "mean", ",", "std", "=", "np", ".", "mean", "(", "trainX", ")", ",", "np", ".", "std", "(", "trainX", ")", "\n", "trainX", "=", "(", "trainX", "-", "mean", ")", "/", "std", "\n", "valX", "=", "(", "valX", "-", "mean", ")", "/", "std", "\n", "testX", "=", "(", "testX", "-", "mean", ")", "/", "std", "\n", "\n", "# spatial embedding ", "\n", "f", "=", "open", "(", "args", ".", "SE_file", ",", "mode", "=", "'r'", ")", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "temp", "=", "lines", "[", "0", "]", ".", "split", "(", "' '", ")", "\n", "N", ",", "dims", "=", "int", "(", "temp", "[", "0", "]", ")", ",", "int", "(", "temp", "[", "1", "]", ")", "\n", "SE", "=", "np", ".", "zeros", "(", "shape", "=", "(", "N", ",", "dims", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "line", "in", "lines", "[", "1", ":", "]", ":", "\n", "        ", "temp", "=", "line", ".", "split", "(", "' '", ")", "\n", "index", "=", "int", "(", "temp", "[", "0", "]", ")", "\n", "SE", "[", "index", "]", "=", "temp", "[", "1", ":", "]", "\n", "\n", "# temporal embedding ", "\n", "", "Time", "=", "df", ".", "index", "\n", "dayofweek", "=", "np", ".", "reshape", "(", "Time", ".", "weekday", ",", "newshape", "=", "(", "-", "1", ",", "1", ")", ")", "\n", "timeofday", "=", "(", "Time", ".", "hour", "*", "3600", "+", "Time", ".", "minute", "*", "60", "+", "Time", ".", "second", ")", "//", "Time", ".", "freq", ".", "delta", ".", "total_seconds", "(", ")", "\n", "timeofday", "=", "np", ".", "reshape", "(", "timeofday", ",", "newshape", "=", "(", "-", "1", ",", "1", ")", ")", "\n", "Time", "=", "np", ".", "concatenate", "(", "(", "dayofweek", ",", "timeofday", ")", ",", "axis", "=", "-", "1", ")", "\n", "# train/val/test", "\n", "train", "=", "Time", "[", ":", "train_steps", "]", "\n", "val", "=", "Time", "[", "train_steps", ":", "train_steps", "+", "val_steps", "]", "\n", "test", "=", "Time", "[", "-", "test_steps", ":", "]", "\n", "# shape = (num_sample, P + Q, 2)", "\n", "trainTE", "=", "seq2instance", "(", "train", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "trainTE", "=", "np", ".", "concatenate", "(", "trainTE", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "valTE", "=", "seq2instance", "(", "val", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "valTE", "=", "np", ".", "concatenate", "(", "valTE", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "testTE", "=", "seq2instance", "(", "test", ",", "args", ".", "P", ",", "args", ".", "Q", ")", "\n", "testTE", "=", "np", ".", "concatenate", "(", "testTE", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "return", "(", "trainX", ",", "trainTE", ",", "trainY", ",", "valX", ",", "valTE", ",", "valY", ",", "testX", ",", "testTE", ",", "testY", ",", "\n", "SE", ",", "mean", ",", "std", ")", "\n", "", ""]]}