{"home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.generate_random_split.gen_scannet_split": [[17, 53], ["scannet.model_util_scannet.ScannetDatasetConfig", "os.path.join", "len", "numpy.zeros", "int", "os.path.join", "enumerate", "list", "print", "open", "f.read().splitlines", "numpy.load", "numpy.random.choice", "numpy.sum", "numpy.where", "list", "numpy.sum", "list", "set", "set", "len", "len", "f.read", "os.path.join", "set", "open", "numpy.array", "os.path.join", "f.write"], "function", ["None"], ["def", "gen_scannet_split", "(", "labeled_ratio", ",", "count", ")", ":", "\n", "    ", "DC", "=", "ScannetDatasetConfig", "(", ")", "\n", "split_set", "=", "'train'", "\n", "split_filenames", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data'", ",", "\n", "'scannetv2_{}.txt'", ".", "format", "(", "split_set", ")", ")", "\n", "with", "open", "(", "split_filenames", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "scan_names", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "# remove unavailiable scans", "\n", "", "num_scans", "=", "len", "(", "scan_names", ")", "\n", "scan2label", "=", "np", ".", "zeros", "(", "(", "num_scans", ",", "DC", ".", "num_class", ")", ")", "\n", "num_labeled_scans", "=", "int", "(", "labeled_ratio", "*", "num_scans", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'scannet/scannet_train_detection_data'", ")", "\n", "for", "i", ",", "scan_name", "in", "enumerate", "(", "scan_names", ")", ":", "\n", "        ", "instance_bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "\n", "class_ind", "=", "[", "DC", ".", "nyu40id2class", "[", "x", "]", "for", "x", "in", "instance_bboxes", "[", ":", ",", "-", "1", "]", "]", "\n", "if", "class_ind", "!=", "[", "]", ":", "\n", "            ", "unique_class_ind", "=", "list", "(", "set", "(", "class_ind", ")", ")", "\n", "", "else", ":", "\n", "            ", "continue", "\n", "", "for", "j", "in", "unique_class_ind", ":", "\n", "            ", "scan2label", "[", "i", ",", "j", "]", "=", "1", "\n", "\n", "", "", "while", "True", ":", "\n", "        ", "choices", "=", "np", ".", "random", ".", "choice", "(", "num_scans", ",", "num_labeled_scans", ",", "replace", "=", "False", ")", "\n", "class_distr", "=", "np", ".", "sum", "(", "scan2label", "[", "choices", "]", ",", "axis", "=", "0", ")", "\n", "class_mask", "=", "np", ".", "where", "(", "class_distr", ">", "0", ",", "1", ",", "0", ")", "\n", "if", "np", ".", "sum", "(", "class_mask", ")", "==", "DC", ".", "num_class", ":", "\n", "            ", "labeled_scan_names", "=", "list", "(", "np", ".", "array", "(", "scan_names", ")", "[", "choices", "]", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data/scannetv2_train_{}_{}.txt'", ".", "format", "(", "labeled_ratio", ",", "count", ")", ")", ",", "\n", "'w'", ")", "as", "f", ":", "\n", "                ", "for", "scan_name", "in", "labeled_scan_names", ":", "\n", "                    ", "f", ".", "write", "(", "scan_name", "+", "'\\n'", ")", "\n", "", "", "break", "\n", "\n", "", "", "unlabeled_scan_names", "=", "list", "(", "set", "(", "scan_names", ")", "-", "set", "(", "labeled_scan_names", ")", ")", "\n", "print", "(", "'\\tSelected {} labeled scans, remained {} unlabeled scans'", ".", "format", "(", "len", "(", "labeled_scan_names", ")", ",", "len", "(", "unlabeled_scan_names", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.generate_random_split.gen_sunrgbd_split": [[55, 86], ["sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig", "os.path.join", "os.path.join", "sorted", "len", "int", "numpy.zeros", "enumerate", "list", "print", "list", "numpy.load", "numpy.random.choice", "numpy.sum", "numpy.where", "set", "len", "numpy.unique", "numpy.sum", "list", "set", "set", "len", "len", "os.path.join", "open", "numpy.array", "os.path.join", "f.write", "os.path.basename", "os.listdir", "int"], "function", ["None"], ["", "def", "gen_sunrgbd_split", "(", "labeled_ratio", ",", "count", ")", ":", "\n", "    ", "DC", "=", "SunrgbdDatasetConfig", "(", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_pc_bbox_votes_50k_v1_%s'", "%", "(", "'train'", ")", ")", "\n", "raw_data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_trainval'", ")", "\n", "scan_names", "=", "sorted", "(", "list", "(", "set", "(", "[", "os", ".", "path", ".", "basename", "(", "x", ")", "[", "0", ":", "6", "]", "for", "x", "in", "os", ".", "listdir", "(", "data_path", ")", "]", ")", ")", ")", "\n", "num_scans", "=", "len", "(", "scan_names", ")", "\n", "num_labeled_scans", "=", "int", "(", "labeled_ratio", "*", "num_scans", ")", "\n", "scan2label", "=", "np", ".", "zeros", "(", "(", "num_scans", ",", "DC", ".", "num_class", ")", ")", "\n", "for", "i", ",", "scan_name", "in", "enumerate", "(", "scan_names", ")", ":", "\n", "        ", "bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "# K,8", "\n", "class_ind", "=", "bboxes", "[", ":", ",", "-", "1", "]", "\n", "if", "len", "(", "class_ind", ")", "!=", "0", ":", "\n", "            ", "unique_class_ind", "=", "np", ".", "unique", "(", "class_ind", ")", "\n", "", "else", ":", "\n", "            ", "continue", "\n", "", "for", "j", "in", "unique_class_ind", ":", "\n", "            ", "scan2label", "[", "i", ",", "int", "(", "j", ")", "]", "=", "1", "\n", "\n", "", "", "while", "True", ":", "\n", "        ", "choices", "=", "np", ".", "random", ".", "choice", "(", "num_scans", ",", "num_labeled_scans", ",", "replace", "=", "False", ")", "\n", "class_distr", "=", "np", ".", "sum", "(", "scan2label", "[", "choices", "]", ",", "axis", "=", "0", ")", "\n", "class_mask", "=", "np", ".", "where", "(", "class_distr", ">", "0", ",", "1", ",", "0", ")", "\n", "if", "np", ".", "sum", "(", "class_mask", ")", "==", "DC", ".", "num_class", ":", "\n", "            ", "labeled_scan_names", "=", "list", "(", "np", ".", "array", "(", "scan_names", ")", "[", "choices", "]", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "raw_data_path", ",", "'sunrgbd_v1_train_{}_{}.txt'", ".", "format", "(", "labeled_ratio", ",", "count", ")", ")", ",", "'w'", ")", "as", "f", ":", "\n", "                ", "for", "scan_name", "in", "labeled_scan_names", ":", "\n", "                    ", "f", ".", "write", "(", "scan_name", "+", "'\\n'", ")", "\n", "", "", "break", "\n", "\n", "", "", "unlabeled_scan_names", "=", "list", "(", "set", "(", "scan_names", ")", "-", "set", "(", "labeled_scan_names", ")", ")", "\n", "print", "(", "'Selected {} labeled scans, remained {} unlabeled scans'", ".", "format", "(", "len", "(", "labeled_scan_names", ")", ",", "len", "(", "unlabeled_scan_names", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.log_string": [[97, 101], ["LOG_FOUT.write", "LOG_FOUT.flush", "print"], "function", ["None"], ["", "def", "log_string", "(", "out_str", ")", ":", "\n", "    ", "LOG_FOUT", ".", "write", "(", "out_str", "+", "'\\n'", ")", "\n", "LOG_FOUT", ".", "flush", "(", ")", "\n", "print", "(", "out_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.my_worker_init_fn": [[103, 105], ["numpy.random.seed", "numpy.random.get_state"], "function", ["None"], ["", "def", "my_worker_init_fn", "(", "worker_id", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "np", ".", "random", ".", "get_state", "(", ")", "[", "1", "]", "[", "0", "]", "+", "worker_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.create_model": [[165, 179], ["models.votenet_iou_branch.VoteNet", "models.votenet_iou_branch.VoteNet.parameters", "param.detach_"], "function", ["None"], ["def", "create_model", "(", "ema", "=", "False", ")", ":", "\n", "    ", "model", "=", "VoteNet", "(", "num_class", "=", "DATASET_CONFIG", ".", "num_class", ",", "\n", "num_heading_bin", "=", "DATASET_CONFIG", ".", "num_heading_bin", ",", "\n", "num_size_cluster", "=", "DATASET_CONFIG", ".", "num_size_cluster", ",", "\n", "mean_size_arr", "=", "DATASET_CONFIG", ".", "mean_size_arr", ",", "\n", "dataset_config", "=", "DATASET_CONFIG", ",", "\n", "num_proposal", "=", "FLAGS", ".", "num_target", ",", "\n", "input_feature_dim", "=", "num_input_channel", ",", "\n", "vote_factor", "=", "FLAGS", ".", "vote_factor", ",", "\n", "sampling", "=", "FLAGS", ".", "cluster_sampling", ")", "\n", "if", "ema", ":", "\n", "        ", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "detach_", "(", ")", "\n", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.get_current_lr": [[242, 249], ["enumerate"], "function", ["None"], ["", "def", "get_current_lr", "(", "epoch", ")", ":", "\n", "# stairstep update", "\n", "    ", "lr", "=", "BASE_LEARNING_RATE", "\n", "for", "i", ",", "lr_decay_epoch", "in", "enumerate", "(", "LR_DECAY_STEPS", ")", ":", "\n", "        ", "if", "epoch", ">=", "lr_decay_epoch", ":", "\n", "            ", "lr", "*=", "LR_DECAY_RATES", "[", "i", "]", "\n", "", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.adjust_learning_rate": [[251, 255], ["train.get_current_lr"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.get_current_lr"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "lr", "=", "get_current_lr", "(", "epoch", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.update_ema_variables": [[285, 290], ["min", "zip", "ema_model.parameters", "model.parameters", "ema_param.data.mul_().add_", "ema_param.data.mul_"], "function", ["None"], ["def", "update_ema_variables", "(", "model", ",", "ema_model", ",", "alpha", ",", "global_step", ")", ":", "\n", "# Use the true average until the exponential average is more correct", "\n", "    ", "alpha", "=", "min", "(", "1", "-", "1", "/", "(", "global_step", "+", "1", ")", ",", "alpha", ")", "\n", "for", "ema_param", ",", "param", "in", "zip", "(", "ema_model", ".", "parameters", "(", ")", ",", "model", ".", "parameters", "(", ")", ")", ":", "\n", "        ", "ema_param", ".", "data", ".", "mul_", "(", "alpha", ")", ".", "add_", "(", "1", "-", "alpha", ",", "param", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.tb_name": [[292, 303], ["None"], "function", ["None"], ["", "", "def", "tb_name", "(", "key", ")", ":", "\n", "    ", "if", "'loss'", "in", "key", ":", "\n", "        ", "return", "'loss/'", "+", "key", "\n", "", "elif", "'acc'", "in", "key", ":", "\n", "        ", "return", "'acc/'", "+", "key", "\n", "", "elif", "'ratio'", "in", "key", ":", "\n", "        ", "return", "'ratio/'", "+", "key", "\n", "", "elif", "'value'", "in", "key", ":", "\n", "        ", "return", "'value/'", "+", "key", "\n", "", "else", ":", "\n", "        ", "return", "'other/'", "+", "key", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.train_one_epoch": [[305, 372], ["train.adjust_learning_rate", "bnm_scheduler.step", "detector.train", "ema_detector.train", "iter", "enumerate", "optimizer.zero_grad", "detector.forward_with_pred_jitter", "train_labeled_criterion", "train_unlabeled_criterion", "loss.backward", "optimizer.step", "train.update_ema_variables", "next", "batch_data_label[].to", "torch.no_grad", "torch.no_grad", "ema_detector.forward_with_pred_jitter", "train.log_string", "TRAIN_VISUALIZER.log_scalars", "sorted", "iter", "next", "type", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "end_points[].item", "stat_dict.keys", "train.log_string", "train.tb_name", "len"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.adjust_learning_rate", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.train", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.train", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.zero_grad", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_with_pred_jitter", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.update_ema_variables", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_with_pred_jitter", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_scalars", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.tb_name"], ["", "", "def", "train_one_epoch", "(", "global_step", ")", ":", "\n", "    ", "stat_dict", "=", "{", "}", "# collect statistics", "\n", "adjust_learning_rate", "(", "optimizer", ",", "EPOCH_CNT", ")", "\n", "bnm_scheduler", ".", "step", "(", ")", "# decay BN momentum", "\n", "detector", ".", "train", "(", ")", "# set model to training mode", "\n", "ema_detector", ".", "train", "(", ")", "\n", "\n", "unlabeled_dataloader_iterator", "=", "iter", "(", "UNLABELED_DATALOADER", ")", "\n", "\n", "for", "batch_idx", ",", "batch_data_label", "in", "enumerate", "(", "LABELED_DATALOADER", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "batch_data_unlabeled", "=", "next", "(", "unlabeled_dataloader_iterator", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "unlabeled_dataloader_iterator", "=", "iter", "(", "UNLABELED_DATALOADER", ")", "\n", "batch_data_unlabeled", "=", "next", "(", "unlabeled_dataloader_iterator", ")", "\n", "\n", "", "for", "key", "in", "batch_data_unlabeled", ":", "\n", "            ", "if", "type", "(", "batch_data_unlabeled", "[", "key", "]", ")", "==", "list", ":", "\n", "                ", "batch_data_label", "[", "key", "]", "=", "torch", ".", "cat", "(", "[", "batch_data_label", "[", "key", "]", "]", "+", "batch_data_unlabeled", "[", "key", "]", ",", "dim", "=", "0", ")", "#.to(device)", "\n", "", "else", ":", "\n", "                ", "batch_data_label", "[", "key", "]", "=", "torch", ".", "cat", "(", "(", "batch_data_label", "[", "key", "]", ",", "batch_data_unlabeled", "[", "key", "]", ")", ",", "dim", "=", "0", ")", "#.to(device)", "\n", "\n", "", "", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "batch_data_label", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", ".", "to", "(", "device", ")", "\n", "\n", "", "inputs", "=", "{", "'point_clouds'", ":", "batch_data_label", "[", "'point_clouds'", "]", "}", "\n", "ema_inputs", "=", "{", "'point_clouds'", ":", "batch_data_label", "[", "'ema_point_clouds'", "]", "}", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "ema_end_points", "=", "ema_detector", ".", "forward_with_pred_jitter", "(", "ema_inputs", ")", "\n", "\n", "", "end_points", "=", "detector", ".", "forward_with_pred_jitter", "(", "inputs", ")", "\n", "\n", "# Compute loss and gradients, update parameters.", "\n", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "assert", "(", "key", "not", "in", "end_points", ")", "\n", "end_points", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", "\n", "\n", "", "detection_loss", ",", "end_points", "=", "train_labeled_criterion", "(", "end_points", ",", "DATASET_CONFIG", ",", "CONFIG_DICT", ")", "\n", "\n", "unlabeled_loss", ",", "end_points", "=", "train_unlabeled_criterion", "(", "end_points", ",", "ema_end_points", ",", "DATASET_CONFIG", ",", "CONFIG_DICT", ")", "\n", "\n", "loss", "=", "detection_loss", "+", "unlabeled_loss", "*", "FLAGS", ".", "unlabeled_loss_weight", "\n", "end_points", "[", "'loss'", "]", "=", "loss", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "optimizer", ".", "step", "(", ")", "\n", "global_step", "+=", "1", "\n", "update_ema_variables", "(", "detector", ",", "ema_detector", ",", "FLAGS", ".", "ema_decay", ",", "global_step", ")", "\n", "\n", "# Accumulate statistics and print out", "\n", "for", "key", "in", "end_points", ":", "\n", "            ", "if", "'loss'", "in", "key", "or", "'acc'", "in", "key", "or", "'ratio'", "in", "key", "or", "'value'", "in", "key", ":", "\n", "                ", "if", "key", "not", "in", "stat_dict", ":", "stat_dict", "[", "key", "]", "=", "0", "\n", "stat_dict", "[", "key", "]", "+=", "end_points", "[", "key", "]", ".", "item", "(", ")", "\n", "\n", "", "", "batch_interval", "=", "FLAGS", ".", "print_interval", "\n", "if", "(", "batch_idx", "+", "1", ")", "%", "batch_interval", "==", "0", ":", "\n", "            ", "log_string", "(", "' ---- batch: %03d ----'", "%", "(", "batch_idx", "+", "1", ")", ")", "\n", "TRAIN_VISUALIZER", ".", "log_scalars", "(", "{", "tb_name", "(", "key", ")", ":", "stat_dict", "[", "key", "]", "/", "batch_interval", "for", "key", "in", "stat_dict", "}", ",", "\n", "(", "EPOCH_CNT", "*", "len", "(", "LABELED_DATALOADER", ")", "+", "batch_idx", ")", "*", "BATCH_SIZE", ")", "\n", "for", "key", "in", "sorted", "(", "stat_dict", ".", "keys", "(", ")", ")", ":", "\n", "                ", "log_string", "(", "'mean %s: %f'", "%", "(", "key", ",", "stat_dict", "[", "key", "]", "/", "batch_interval", ")", ")", "\n", "stat_dict", "[", "key", "]", "=", "0", "\n", "\n", "", "", "", "return", "global_step", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.evaluate_one_epoch": [[378, 429], ["detector.eval", "enumerate", "TEST_VISUALIZER.log_scalars", "sorted", "enumerate", "models.ap_helper.APCalculator", "test_detector_criterion", "models.ap_helper.parse_groundtruths", "models.ap_helper.parse_predictions", "stat_dict.keys", "train.log_string", "print", "ap_calculator.compute_metrics", "TEST_VISUALIZER.log_scalars", "map.append", "float", "batch_data_label[].to", "torch.no_grad", "torch.no_grad", "detector", "ap_calculator.step", "train.tb_name", "train.log_string", "end_points[].item", "float", "len", "len", "float", "str"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_scalars", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.parse_groundtruths", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.parse_predictions", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.APCalculator.compute_metrics", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_scalars", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.tb_name", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string"], ["def", "evaluate_one_epoch", "(", ")", ":", "\n", "    ", "stat_dict", "=", "{", "}", "# collect statistics", "\n", "ap_calculator_list", "=", "[", "APCalculator", "(", "iou_thresh", ",", "DATASET_CONFIG", ".", "class2type", ")", "\n", "for", "iou_thresh", "in", "AP_IOU_THRESHOLDS", "]", "\n", "detector", ".", "eval", "(", ")", "# set model to eval mode (for bn and dp)", "\n", "for", "batch_idx", ",", "batch_data_label", "in", "enumerate", "(", "TEST_DATALOADER", ")", ":", "\n", "        ", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "batch_data_label", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", ".", "to", "(", "device", ")", "\n", "\n", "# Forward pass", "\n", "", "inputs", "=", "{", "'point_clouds'", ":", "batch_data_label", "[", "'point_clouds'", "]", "}", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "end_points", "=", "detector", "(", "inputs", ")", "\n", "\n", "# Compute loss", "\n", "", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "assert", "(", "key", "not", "in", "end_points", ")", "\n", "end_points", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", "\n", "", "loss", ",", "end_points", "=", "test_detector_criterion", "(", "end_points", ",", "DATASET_CONFIG", ")", "\n", "\n", "batch_gt_map_cls", "=", "parse_groundtruths", "(", "end_points", ",", "CONFIG_DICT", ")", "\n", "batch_pred_map_cls", "=", "parse_predictions", "(", "end_points", ",", "CONFIG_DICT", ")", "\n", "\n", "# Accumulate statistics and print out", "\n", "for", "key", "in", "end_points", ":", "\n", "            ", "if", "'loss'", "in", "key", "or", "'acc'", "in", "key", "or", "'ratio'", "in", "key", "or", "'value'", "in", "key", ":", "\n", "                ", "if", "key", "not", "in", "stat_dict", ":", "stat_dict", "[", "key", "]", "=", "0", "\n", "stat_dict", "[", "key", "]", "+=", "end_points", "[", "key", "]", ".", "item", "(", ")", "\n", "\n", "", "", "for", "ap_calculator", "in", "ap_calculator_list", ":", "\n", "            ", "ap_calculator", ".", "step", "(", "batch_pred_map_cls", ",", "batch_gt_map_cls", ")", "\n", "\n", "# Log statistics", "\n", "", "", "TEST_VISUALIZER", ".", "log_scalars", "(", "{", "tb_name", "(", "key", ")", ":", "stat_dict", "[", "key", "]", "/", "float", "(", "batch_idx", "+", "1", ")", "for", "key", "in", "stat_dict", "}", ",", "\n", "(", "EPOCH_CNT", "+", "1", ")", "*", "len", "(", "LABELED_DATALOADER", ")", "*", "BATCH_SIZE", ")", "\n", "for", "key", "in", "sorted", "(", "stat_dict", ".", "keys", "(", ")", ")", ":", "\n", "        ", "log_string", "(", "'eval mean %s: %f'", "%", "(", "key", ",", "stat_dict", "[", "key", "]", "/", "(", "float", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n", "# Evaluate average precision", "\n", "", "map", "=", "[", "]", "\n", "for", "i", ",", "ap_calculator", "in", "enumerate", "(", "ap_calculator_list", ")", ":", "\n", "        ", "print", "(", "'-'", "*", "10", ",", "'iou_thresh: %f'", "%", "(", "AP_IOU_THRESHOLDS", "[", "i", "]", ")", ",", "'-'", "*", "10", ")", "\n", "metrics_dict", "=", "ap_calculator", ".", "compute_metrics", "(", ")", "\n", "for", "key", "in", "metrics_dict", ":", "\n", "            ", "log_string", "(", "'eval %s: %f'", "%", "(", "key", ",", "metrics_dict", "[", "key", "]", ")", ")", "\n", "", "TEST_VISUALIZER", ".", "log_scalars", "(", "{", "'metrics_'", "+", "str", "(", "AP_IOU_THRESHOLDS", "[", "i", "]", ")", "+", "'/'", "+", "key", ":", "metrics_dict", "[", "key", "]", "for", "key", "in", "metrics_dict", "if", "key", "in", "[", "'mAP'", ",", "'AR'", "]", "}", ",", "\n", "(", "EPOCH_CNT", "+", "1", ")", "*", "len", "(", "LABELED_DATALOADER", ")", "*", "BATCH_SIZE", ")", "\n", "map", ".", "append", "(", "metrics_dict", "[", "'mAP'", "]", ")", "\n", "\n", "", "mean_loss", "=", "stat_dict", "[", "'detection_loss'", "]", "/", "float", "(", "batch_idx", "+", "1", ")", "\n", "return", "mean_loss", ",", "map", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.evaluate_with_opt": [[431, 536], ["detector.eval", "enumerate", "TEST_VISUALIZER.log_scalars", "sorted", "enumerate", "models.ap_helper.APCalculator", "optimizer.zero_grad", "detector", "torch.argmax", "torch.argmax", "end_points[].argmax", "iou.clone", "torch.gather().squeeze().contiguous().view", "torch.gather().squeeze().contiguous().view", "torch.gather().squeeze().contiguous().view.backward", "torch.ones().cuda", "torch.ones().cuda", "detector.keys", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.index_select", "torch.index_select", "size_base.view.view", "optimizer.zero_grad", "test_detector_criterion", "models.ap_helper.parse_predictions", "models.ap_helper.parse_groundtruths", "stat_dict.keys", "train.log_string", "print", "ap_calculator.compute_metrics", "TEST_VISUALIZER.log_scalars", "map.append", "float", "batch_data_label[].to", "torch.ones().cuda", "torch.ones().cuda", "end_points[].detach", "heading.detach", "optimizer.zero_grad", "detector.forward_onlyiou_faster", "torch.gather().squeeze().contiguous().view", "torch.gather().squeeze().contiguous().view", "torch.gather().squeeze().contiguous().view.backward", "torch.argmax.view", "ap_calculator.step", "train.tb_name", "train.log_string", "torch.gather().squeeze().contiguous", "torch.gather().squeeze().contiguous", "torch.ones", "torch.ones", "center.detach", "size.detach", "torch.ones().cuda", "torch.ones().cuda", "torch.from_numpy", "torch.from_numpy", "end_points[].item", "float", "len", "torch.ones", "torch.ones", "torch.gather().squeeze().contiguous", "torch.gather().squeeze().contiguous", "torch.from_numpy().cuda.astype", "len", "torch.gather().squeeze", "torch.gather().squeeze", "torch.ones", "torch.ones", "float", "torch.gather().squeeze", "torch.gather().squeeze", "str", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "end_points[].argmax.unsqueeze().detach", "end_points[].argmax.unsqueeze().detach", "end_points[].argmax.unsqueeze", "end_points[].argmax.unsqueeze"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_scalars", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.zero_grad", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.zero_grad", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.parse_predictions", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.parse_groundtruths", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.APCalculator.compute_metrics", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_scalars", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.zero_grad", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_onlyiou_faster", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.tb_name", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string"], ["", "def", "evaluate_with_opt", "(", ")", ":", "\n", "    ", "stat_dict", "=", "{", "}", "# collect statistics", "\n", "ap_calculator_list", "=", "[", "APCalculator", "(", "iou_thresh", ",", "DATASET_CONFIG", ".", "class2type", ")", "for", "iou_thresh", "in", "AP_IOU_THRESHOLDS", "]", "\n", "\n", "detector", ".", "eval", "(", ")", "# set model to eval mode (for bn and dp)", "\n", "for", "batch_idx", ",", "batch_data_label", "in", "enumerate", "(", "TEST_DATALOADER", ")", ":", "\n", "        ", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "batch_data_label", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", ".", "to", "(", "device", ")", "\n", "\n", "# Forward pass", "\n", "", "inputs", "=", "{", "'point_clouds'", ":", "batch_data_label", "[", "'point_clouds'", "]", "}", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "end_points", "=", "detector", "(", "inputs", ",", "iou_opt", "=", "True", ")", "\n", "center", "=", "end_points", "[", "'center'", "]", "\n", "size_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'size_scores'", "]", ",", "dim", "=", "-", "1", ")", "\n", "sem_cls", "=", "end_points", "[", "'sem_cls_scores'", "]", ".", "argmax", "(", "-", "1", ")", "\n", "size", "=", "end_points", "[", "'size'", "]", "\n", "heading", "=", "end_points", "[", "'heading'", "]", "\n", "iou", "=", "end_points", "[", "'iou_scores'", "]", "\n", "origin_iou", "=", "iou", ".", "clone", "(", ")", "\n", "iou_gathered", "=", "torch", ".", "gather", "(", "iou", ",", "dim", "=", "2", ",", "index", "=", "sem_cls", ".", "unsqueeze", "(", "-", "1", ")", ".", "detach", "(", ")", ")", ".", "squeeze", "(", "-", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "iou_gathered", ".", "backward", "(", "torch", ".", "ones", "(", "iou_gathered", ".", "shape", ")", ".", "cuda", "(", ")", ")", "\n", "# max_iou = iou_gathered.view(center.shape[:2])", "\n", "center_grad", "=", "center", ".", "grad", "\n", "size_grad", "=", "size", ".", "grad", "\n", "mask", "=", "torch", ".", "ones", "(", "center", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "count", "=", "0", "\n", "\n", "for", "k", "in", "end_points", ".", "keys", "(", ")", ":", "\n", "            ", "end_points", "[", "k", "]", "=", "end_points", "[", "k", "]", ".", "detach", "(", ")", "\n", "", "while", "True", ":", "\n", "            ", "center_", "=", "center", ".", "detach", "(", ")", "+", "FLAGS", ".", "opt_rate", "*", "center_grad", "*", "mask", "\n", "size_", "=", "size", ".", "detach", "(", ")", "+", "FLAGS", ".", "opt_rate", "*", "size_grad", "*", "mask", "\n", "heading_", "=", "heading", ".", "detach", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "center_", ".", "requires_grad", "=", "True", "\n", "size_", ".", "requires_grad", "=", "True", "\n", "end_points_", "=", "detector", ".", "forward_onlyiou_faster", "(", "end_points", ",", "center_", ",", "size_", ",", "heading_", ")", "\n", "iou", "=", "end_points_", "[", "'iou_scores'", "]", "\n", "iou_gathered", "=", "torch", ".", "gather", "(", "iou", ",", "dim", "=", "2", ",", "index", "=", "sem_cls", ".", "unsqueeze", "(", "-", "1", ")", ".", "detach", "(", ")", ")", ".", "squeeze", "(", "-", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "iou_gathered", ".", "backward", "(", "torch", ".", "ones", "(", "iou_gathered", ".", "shape", ")", ".", "cuda", "(", ")", ")", "\n", "center_grad", "=", "center_", ".", "grad", "\n", "size_grad", "=", "size_", ".", "grad", "\n", "# cur_iou = iou_gathered.view(center.shape[:2])", "\n", "# mask[cur_iou < max_iou - 0.1] = 0", "\n", "# mask[torch.abs(cur_iou - max_iou) < 0.001] = 0", "\n", "# print(mask.sum().float() /mask.view(-1).shape[-1])", "\n", "count", "+=", "1", "\n", "if", "count", ">", "FLAGS", ".", "opt_step", ":", "\n", "                ", "break", "\n", "", "center", "=", "center_", "\n", "size", "=", "size_", "\n", "\n", "", "end_points", "[", "'center'", "]", "=", "center_", "\n", "B", ",", "K", "=", "size_class", ".", "shape", "[", ":", "2", "]", "\n", "mean_size_arr", "=", "DATASET_CONFIG", ".", "mean_size_arr", "\n", "mean_size_arr", "=", "torch", ".", "from_numpy", "(", "mean_size_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", "# (num_size_cluster,3)", "\n", "size_base", "=", "torch", ".", "index_select", "(", "mean_size_arr", ",", "0", ",", "size_class", ".", "view", "(", "-", "1", ")", ")", "\n", "size_base", "=", "size_base", ".", "view", "(", "B", ",", "K", ",", "3", ")", "\n", "end_points", "[", "'size_residuals'", "]", "=", "(", "size_", "*", "2", "-", "size_base", ")", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "DATASET_CONFIG", ".", "num_size_cluster", ",", "-", "1", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# if FLAGS.first_nms:", "\n", "#     end_points['iou_scores'] = origin_iou", "\n", "\n", "# Compute loss", "\n", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "assert", "(", "key", "not", "in", "end_points", ")", "\n", "end_points", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", "\n", "", "loss", ",", "end_points", "=", "test_detector_criterion", "(", "end_points", ",", "DATASET_CONFIG", ")", "\n", "\n", "batch_pred_map_cls", "=", "parse_predictions", "(", "end_points", ",", "CONFIG_DICT", ")", "\n", "batch_gt_map_cls", "=", "parse_groundtruths", "(", "end_points", ",", "CONFIG_DICT", ")", "\n", "\n", "# Accumulate statistics and print out", "\n", "for", "key", "in", "end_points", ":", "\n", "            ", "if", "'loss'", "in", "key", "or", "'acc'", "in", "key", "or", "'ratio'", "in", "key", "or", "'value'", "in", "key", ":", "\n", "                ", "if", "key", "not", "in", "stat_dict", ":", "stat_dict", "[", "key", "]", "=", "0", "\n", "stat_dict", "[", "key", "]", "+=", "end_points", "[", "key", "]", ".", "item", "(", ")", "\n", "\n", "# ap_calculator.step(batch_pred_map_cls, batch_gt_map_cls)", "\n", "", "", "for", "ap_calculator", "in", "ap_calculator_list", ":", "\n", "            ", "ap_calculator", ".", "step", "(", "batch_pred_map_cls", ",", "batch_gt_map_cls", ")", "\n", "\n", "# Log statistics", "\n", "", "", "TEST_VISUALIZER", ".", "log_scalars", "(", "{", "tb_name", "(", "key", ")", ":", "stat_dict", "[", "key", "]", "/", "float", "(", "batch_idx", "+", "1", ")", "for", "key", "in", "stat_dict", "}", ",", "\n", "(", "EPOCH_CNT", "+", "1", ")", "*", "len", "(", "LABELED_DATALOADER", ")", "*", "BATCH_SIZE", ")", "\n", "for", "key", "in", "sorted", "(", "stat_dict", ".", "keys", "(", ")", ")", ":", "\n", "        ", "log_string", "(", "'eval mean %s: %f'", "%", "(", "key", ",", "stat_dict", "[", "key", "]", "/", "(", "float", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n", "# Evaluate average precision", "\n", "", "map", "=", "[", "]", "\n", "for", "i", ",", "ap_calculator", "in", "enumerate", "(", "ap_calculator_list", ")", ":", "\n", "        ", "print", "(", "'-'", "*", "10", ",", "'iou_thresh: %f'", "%", "(", "AP_IOU_THRESHOLDS", "[", "i", "]", ")", ",", "'-'", "*", "10", ")", "\n", "metrics_dict", "=", "ap_calculator", ".", "compute_metrics", "(", ")", "\n", "for", "key", "in", "metrics_dict", ":", "\n", "            ", "log_string", "(", "'eval %s: %f'", "%", "(", "key", ",", "metrics_dict", "[", "key", "]", ")", ")", "\n", "", "TEST_VISUALIZER", ".", "log_scalars", "(", "{", "'metrics_'", "+", "str", "(", "AP_IOU_THRESHOLDS", "[", "i", "]", ")", "+", "'/'", "+", "key", ":", "metrics_dict", "[", "key", "]", "for", "key", "in", "metrics_dict", "if", "key", "in", "[", "'mAP'", ",", "'AR'", "]", "}", ",", "\n", "(", "EPOCH_CNT", "+", "1", ")", "*", "len", "(", "LABELED_DATALOADER", ")", "*", "BATCH_SIZE", ")", "\n", "map", ".", "append", "(", "metrics_dict", "[", "'mAP'", "]", ")", "\n", "\n", "", "mean_loss", "=", "stat_dict", "[", "'detection_loss'", "]", "/", "float", "(", "batch_idx", "+", "1", ")", "\n", "return", "mean_loss", ",", "map", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.train": [[537, 612], ["range", "numpy.random.seed", "sys.exit", "train.log_string", "train.log_string", "train.log_string", "train.log_string", "train.log_string", "numpy.random.seed", "train.train_one_epoch", "torch.save", "torch.save", "train.evaluate_with_opt", "train.evaluate_one_epoch", "str", "train.evaluate_one_epoch", "optimizer.state_dict", "detector.module.state_dict", "ema_detector.module.state_dict", "os.path.join", "torch.save", "torch.save", "PERFORMANCE_FOUT.write", "PERFORMANCE_FOUT.flush", "train.get_current_lr", "bnm_scheduler.lmbd", "datetime.datetime.now", "detector.state_dict", "ema_detector.state_dict", "optimizer.state_dict", "detector.module.state_dict", "ema_detector.module.state_dict", "os.path.join", "torch.save", "torch.save", "detector.state_dict", "ema_detector.state_dict", "optimizer.state_dict", "detector.module.state_dict", "ema_detector.module.state_dict", "os.path.join", "detector.state_dict", "ema_detector.state_dict", "str", "BEST_MAP[].item", "str", "BEST_MAP[].item", "str"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.train_one_epoch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.train.evaluate_with_opt", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.evaluate_one_epoch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.evaluate_one_epoch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.get_current_lr"], ["", "def", "train", "(", ")", ":", "\n", "    ", "global", "EPOCH_CNT", "\n", "global", "start_epoch", "\n", "global_step", "=", "0", "\n", "loss", "=", "0", "\n", "EPOCH_CNT", "=", "0", "\n", "global", "BEST_MAP", "\n", "if", "FLAGS", ".", "eval", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", ")", "\n", "if", "FLAGS", ".", "opt_step", ">", "0", ":", "\n", "            ", "evaluate_with_opt", "(", ")", "\n", "", "else", ":", "\n", "            ", "evaluate_one_epoch", "(", ")", "\n", "", "sys", ".", "exit", "(", "0", ")", "\n", "", "start_from", "=", "0", "\n", "if", "FLAGS", ".", "resume", ":", "\n", "        ", "start_from", "=", "start_epoch", "\n", "", "for", "epoch", "in", "range", "(", "start_from", ",", "MAX_EPOCH", ")", ":", "\n", "        ", "EPOCH_CNT", "=", "epoch", "\n", "log_string", "(", "'\\n**** EPOCH %03d, STEP %d ****'", "%", "(", "epoch", ",", "global_step", ")", ")", "\n", "log_string", "(", "\"Current epoch: %d, obj threshold = %.3f & cls threshold = %.3f\"", "%", "(", "epoch", ",", "CONFIG_DICT", "[", "'obj_threshold'", "]", ",", "CONFIG_DICT", "[", "'cls_threshold'", "]", ")", ")", "\n", "log_string", "(", "'Current learning rate: %f'", "%", "(", "get_current_lr", "(", "epoch", ")", ")", ")", "\n", "log_string", "(", "'Current BN decay momentum: %f'", "%", "(", "bnm_scheduler", ".", "lmbd", "(", "bnm_scheduler", ".", "last_epoch", ")", ")", ")", "\n", "log_string", "(", "str", "(", "datetime", ".", "now", "(", ")", ")", ")", "\n", "\n", "# in numpy 1.18.5 this actually sets `np.random.get_state()[1][0]` to default value", "\n", "# so the test data is consistent as the initial seed is the same", "\n", "np", ".", "random", ".", "seed", "(", ")", "\n", "global_step", "=", "train_one_epoch", "(", "global_step", ")", "\n", "map", "=", "0.0", "\n", "if", "EPOCH_CNT", ">", "0", "and", "EPOCH_CNT", "%", "FLAGS", ".", "eval_interval", "==", "0", ":", "\n", "            ", "loss", ",", "map", "=", "evaluate_one_epoch", "(", ")", "\n", "# save checkpoint", "\n", "", "save_dict", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "# after training one epoch, the start_epoch should be epoch+1", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'loss'", ":", "loss", "\n", "}", "\n", "try", ":", "# with nn.DataParallel() the net is added as a submodule of DataParallel", "\n", "            ", "save_dict", "[", "'model_state_dict'", "]", "=", "detector", ".", "module", ".", "state_dict", "(", ")", "\n", "save_dict", "[", "'ema_model_state_dict'", "]", "=", "ema_detector", ".", "module", ".", "state_dict", "(", ")", "\n", "", "except", ":", "\n", "            ", "save_dict", "[", "'model_state_dict'", "]", "=", "detector", ".", "state_dict", "(", ")", "\n", "save_dict", "[", "'ema_model_state_dict'", "]", "=", "ema_detector", ".", "state_dict", "(", ")", "\n", "", "torch", ".", "save", "(", "save_dict", ",", "os", ".", "path", ".", "join", "(", "LOG_DIR", ",", "'checkpoint.tar'", ")", ")", "\n", "\n", "if", "EPOCH_CNT", "%", "FLAGS", ".", "save_interval", "==", "0", ":", "\n", "            ", "save_dict", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "# after training one epoch, the start_epoch should be epoch+1", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'loss'", ":", "loss", "\n", "}", "\n", "try", ":", "# with nn.DataParallel() the net is added as a submodule of DataParallel", "\n", "                ", "save_dict", "[", "'model_state_dict'", "]", "=", "detector", ".", "module", ".", "state_dict", "(", ")", "\n", "save_dict", "[", "'ema_model_state_dict'", "]", "=", "ema_detector", ".", "module", ".", "state_dict", "(", ")", "\n", "", "except", ":", "\n", "                ", "save_dict", "[", "'model_state_dict'", "]", "=", "detector", ".", "state_dict", "(", ")", "\n", "save_dict", "[", "'ema_model_state_dict'", "]", "=", "ema_detector", ".", "state_dict", "(", ")", "\n", "", "torch", ".", "save", "(", "save_dict", ",", "os", ".", "path", ".", "join", "(", "LOG_DIR", ",", "'checkpoint_%d.tar'", "%", "EPOCH_CNT", ")", ")", "\n", "\n", "", "if", "EPOCH_CNT", ">", "0", "and", "EPOCH_CNT", "%", "FLAGS", ".", "eval_interval", "==", "0", ":", "\n", "            ", "if", "map", "[", "0", "]", "+", "map", "[", "1", "]", ">", "BEST_MAP", "[", "0", "]", "+", "BEST_MAP", "[", "1", "]", ":", "\n", "                ", "BEST_MAP", "=", "map", "\n", "save_dict", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "# after training one epoch, the start_epoch should be epoch+1", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'loss'", ":", "loss", "\n", "}", "\n", "try", ":", "# with nn.DataParallel() the net is added as a submodule of DataParallel", "\n", "                    ", "save_dict", "[", "'model_state_dict'", "]", "=", "detector", ".", "module", ".", "state_dict", "(", ")", "\n", "save_dict", "[", "'ema_model_state_dict'", "]", "=", "ema_detector", ".", "module", ".", "state_dict", "(", ")", "\n", "", "except", ":", "\n", "                    ", "save_dict", "[", "'model_state_dict'", "]", "=", "detector", ".", "state_dict", "(", ")", "\n", "save_dict", "[", "'ema_model_state_dict'", "]", "=", "ema_detector", ".", "state_dict", "(", ")", "\n", "", "torch", ".", "save", "(", "save_dict", ",", "os", ".", "path", ".", "join", "(", "LOG_DIR", ",", "'best_checkpoint_sum.tar'", ")", ")", "\n", "", "PERFORMANCE_FOUT", ".", "write", "(", "'epoch: '", "+", "str", "(", "EPOCH_CNT", ")", "+", "'\\n'", "+", "'best: '", "+", "str", "(", "BEST_MAP", "[", "0", "]", ".", "item", "(", ")", ")", "+", "', '", "+", "str", "(", "BEST_MAP", "[", "1", "]", ".", "item", "(", ")", ")", "+", "'\\n'", ")", "\n", "PERFORMANCE_FOUT", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string": [[114, 118], ["LOG_FOUT.write", "LOG_FOUT.flush", "print"], "function", ["None"], ["def", "log_string", "(", "out_str", ")", ":", "\n", "    ", "LOG_FOUT", ".", "write", "(", "out_str", "+", "'\\n'", ")", "\n", "LOG_FOUT", ".", "flush", "(", ")", "\n", "print", "(", "out_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.my_worker_init_fn": [[124, 126], ["numpy.random.seed", "numpy.random.get_state"], "function", ["None"], ["def", "my_worker_init_fn", "(", "worker_id", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "np", ".", "random", ".", "get_state", "(", ")", "[", "1", "]", "[", "0", "]", "+", "worker_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.get_current_lr": [[210, 216], ["enumerate"], "function", ["None"], ["", "def", "get_current_lr", "(", "epoch", ")", ":", "\n", "    ", "lr", "=", "BASE_LEARNING_RATE", "\n", "for", "i", ",", "lr_decay_epoch", "in", "enumerate", "(", "LR_DECAY_STEPS", ")", ":", "\n", "        ", "if", "epoch", ">=", "lr_decay_epoch", ":", "\n", "            ", "lr", "*=", "LR_DECAY_RATES", "[", "i", "]", "\n", "", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.adjust_learning_rate": [[218, 222], ["pretrain.get_current_lr"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.get_current_lr"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "lr", "=", "get_current_lr", "(", "epoch", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.tb_name": [[241, 250], ["None"], "function", ["None"], ["def", "tb_name", "(", "key", ")", ":", "\n", "    ", "if", "'loss'", "in", "key", ":", "\n", "        ", "return", "'loss/'", "+", "key", "\n", "", "elif", "'acc'", "in", "key", ":", "\n", "        ", "return", "'acc/'", "+", "key", "\n", "", "elif", "'ratio'", "in", "key", ":", "\n", "        ", "return", "'ratio/'", "+", "key", "\n", "", "else", ":", "\n", "        ", "return", "'other/'", "+", "key", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.evaluate_one_epoch": [[252, 308], ["net.eval", "enumerate", "TEST_VISUALIZER.log_scalars", "sorted", "enumerate", "ap_helper.APCalculator", "models.loss_helper_labeled.get_labeled_loss", "ap_helper.parse_predictions", "ap_helper.parse_groundtruths", "stat_dict.keys", "pretrain.log_string", "print", "ap_calculator.compute_metrics", "TEST_VISUALIZER.log_scalars", "map.append", "float", "batch_data_label[].to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "net", "ap_calculator.step", "models.dump_helper.dump_results", "pretrain.tb_name", "pretrain.log_string", "end_points[].item", "float", "len", "len", "float", "str"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_scalars", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_labeled.get_labeled_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.parse_predictions", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.parse_groundtruths", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.APCalculator.compute_metrics", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_scalars", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.dump_helper.dump_results", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.tb_name", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string"], ["", "", "def", "evaluate_one_epoch", "(", ")", ":", "\n", "    ", "stat_dict", "=", "{", "}", "# collect statistics", "\n", "ap_calculator_list", "=", "[", "APCalculator", "(", "iou_thresh", ",", "DATASET_CONFIG", ".", "class2type", ")", "for", "iou_thresh", "in", "AP_IOU_THRESHOLDS", "]", "\n", "net", ".", "eval", "(", ")", "# set model to eval mode (for bn and dp)", "\n", "for", "batch_idx", ",", "batch_data_label", "in", "enumerate", "(", "TEST_DATALOADER", ")", ":", "\n", "        ", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "batch_data_label", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", ".", "to", "(", "device", ")", "\n", "\n", "# Forward pass", "\n", "", "inputs", "=", "{", "'point_clouds'", ":", "batch_data_label", "[", "'point_clouds'", "]", "}", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "end_points", "=", "net", "(", "inputs", ")", "\n", "\n", "# Compute loss", "\n", "", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "assert", "(", "key", "not", "in", "end_points", ")", "\n", "end_points", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", "\n", "", "loss", ",", "end_points", "=", "get_labeled_loss", "(", "end_points", ",", "DATASET_CONFIG", ",", "CONFIG_DICT", ")", "\n", "\n", "# Accumulate statistics and print out", "\n", "for", "key", "in", "end_points", ":", "\n", "            ", "if", "'loss'", "in", "key", "or", "'acc'", "in", "key", "or", "'ratio'", "in", "key", ":", "\n", "                ", "if", "key", "not", "in", "stat_dict", ":", "stat_dict", "[", "key", "]", "=", "0", "\n", "stat_dict", "[", "key", "]", "+=", "end_points", "[", "key", "]", ".", "item", "(", ")", "\n", "\n", "", "", "batch_pred_map_cls", "=", "parse_predictions", "(", "end_points", ",", "CONFIG_DICT", ")", "\n", "batch_gt_map_cls", "=", "parse_groundtruths", "(", "end_points", ",", "CONFIG_DICT", ")", "\n", "for", "ap_calculator", "in", "ap_calculator_list", ":", "\n", "            ", "ap_calculator", ".", "step", "(", "batch_pred_map_cls", ",", "batch_gt_map_cls", ")", "\n", "\n", "# Dump evaluation results for visualization", "\n", "", "if", "FLAGS", ".", "dump_results", "and", "batch_idx", "==", "0", "and", "EPOCH_CNT", "%", "10", "==", "0", ":", "\n", "            ", "dump_results", "(", "end_points", ",", "DUMP_DIR", ",", "DATASET_CONFIG", ")", "\n", "\n", "# Log statistics", "\n", "", "", "TEST_VISUALIZER", ".", "log_scalars", "(", "{", "tb_name", "(", "key", ")", ":", "stat_dict", "[", "key", "]", "/", "float", "(", "batch_idx", "+", "1", ")", "for", "key", "in", "stat_dict", "}", ",", "\n", "(", "EPOCH_CNT", "+", "1", ")", "*", "len", "(", "TRAIN_DATALOADER", ")", "*", "BATCH_SIZE", ")", "\n", "for", "key", "in", "sorted", "(", "stat_dict", ".", "keys", "(", ")", ")", ":", "\n", "        ", "log_string", "(", "'eval mean %s: %f'", "%", "(", "key", ",", "stat_dict", "[", "key", "]", "/", "(", "float", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n", "", "map", "=", "[", "]", "\n", "# Evaluate average precision", "\n", "for", "i", ",", "ap_calculator", "in", "enumerate", "(", "ap_calculator_list", ")", ":", "\n", "        ", "print", "(", "'-'", "*", "10", ",", "'iou_thresh: %f'", "%", "(", "AP_IOU_THRESHOLDS", "[", "i", "]", ")", ",", "'-'", "*", "10", ")", "\n", "metrics_dict", "=", "ap_calculator", ".", "compute_metrics", "(", ")", "\n", "for", "key", "in", "metrics_dict", ":", "\n", "            ", "log_string", "(", "'eval %s: %f'", "%", "(", "key", ",", "metrics_dict", "[", "key", "]", ")", ")", "\n", "", "TEST_VISUALIZER", ".", "log_scalars", "(", "\n", "{", "'metrics_'", "+", "str", "(", "AP_IOU_THRESHOLDS", "[", "i", "]", ")", "+", "'/'", "+", "key", ":", "metrics_dict", "[", "key", "]", "for", "key", "in", "metrics_dict", "if", "\n", "key", "in", "[", "'mAP'", ",", "'AR'", "]", "}", ",", "\n", "(", "EPOCH_CNT", "+", "1", ")", "*", "len", "(", "TRAIN_DATALOADER", ")", "*", "BATCH_SIZE", ")", "\n", "map", ".", "append", "(", "metrics_dict", "[", "'mAP'", "]", ")", "\n", "\n", "", "mean_loss", "=", "stat_dict", "[", "'loss'", "]", "/", "float", "(", "batch_idx", "+", "1", ")", "\n", "return", "mean_loss", ",", "map", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.train_one_epoch": [[310, 348], ["pretrain.adjust_learning_rate", "bnm_scheduler.step", "net.train", "enumerate", "optimizer.zero_grad", "net.forward_with_pred_jitter", "models.loss_helper_labeled.get_labeled_loss", "loss.backward", "optimizer.step", "batch_data_label[].to", "pretrain.log_string", "TRAIN_VISUALIZER.log_scalars", "sorted", "end_points[].item", "stat_dict.keys", "pretrain.log_string", "pretrain.tb_name", "len"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.adjust_learning_rate", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.train", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.zero_grad", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_with_pred_jitter", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_labeled.get_labeled_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_scalars", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.tb_name"], ["", "def", "train_one_epoch", "(", ")", ":", "\n", "    ", "stat_dict", "=", "{", "}", "# collect statistics", "\n", "adjust_learning_rate", "(", "optimizer", ",", "EPOCH_CNT", ")", "\n", "bnm_scheduler", ".", "step", "(", ")", "# decay BN momentum", "\n", "net", ".", "train", "(", ")", "# set model to training mode", "\n", "\n", "for", "batch_idx", ",", "batch_data_label", "in", "enumerate", "(", "TRAIN_DATALOADER", ")", ":", "\n", "        ", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "batch_data_label", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", ".", "to", "(", "device", ")", "\n", "\n", "# Forward pass", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "inputs", "=", "{", "'point_clouds'", ":", "batch_data_label", "[", "'point_clouds'", "]", "}", "\n", "end_points", "=", "net", ".", "forward_with_pred_jitter", "(", "inputs", ")", "\n", "\n", "# Compute loss and gradients, update parameters.", "\n", "for", "key", "in", "batch_data_label", ":", "\n", "            ", "assert", "(", "key", "not", "in", "end_points", ")", "\n", "end_points", "[", "key", "]", "=", "batch_data_label", "[", "key", "]", "\n", "\n", "", "loss", ",", "end_points", "=", "get_labeled_loss", "(", "end_points", ",", "DATASET_CONFIG", ",", "CONFIG_DICT", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Accumulate statistics and print out", "\n", "for", "key", "in", "end_points", ":", "\n", "            ", "if", "'loss'", "in", "key", "or", "'acc'", "in", "key", "or", "'ratio'", "in", "key", ":", "\n", "                ", "if", "key", "not", "in", "stat_dict", ":", "stat_dict", "[", "key", "]", "=", "0", "\n", "stat_dict", "[", "key", "]", "+=", "end_points", "[", "key", "]", ".", "item", "(", ")", "\n", "\n", "", "", "batch_interval", "=", "FLAGS", ".", "print_interval", "\n", "if", "(", "batch_idx", "+", "1", ")", "%", "batch_interval", "==", "0", ":", "\n", "            ", "log_string", "(", "' ---- batch: %03d ----'", "%", "(", "batch_idx", "+", "1", ")", ")", "\n", "TRAIN_VISUALIZER", ".", "log_scalars", "(", "{", "tb_name", "(", "key", ")", ":", "stat_dict", "[", "key", "]", "/", "batch_interval", "for", "key", "in", "stat_dict", "}", ",", "\n", "(", "EPOCH_CNT", "*", "len", "(", "TRAIN_DATALOADER", ")", "+", "batch_idx", ")", "*", "BATCH_SIZE", ")", "\n", "for", "key", "in", "sorted", "(", "stat_dict", ".", "keys", "(", ")", ")", ":", "\n", "                ", "log_string", "(", "'mean %s: %f'", "%", "(", "key", ",", "stat_dict", "[", "key", "]", "/", "batch_interval", ")", ")", "\n", "stat_dict", "[", "key", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.train": [[353, 407], ["range", "pretrain.log_string", "pretrain.log_string", "pretrain.log_string", "pretrain.log_string", "numpy.random.seed", "pretrain.train_one_epoch", "torch.save", "torch.save", "torch.save", "str", "pretrain.evaluate_one_epoch", "PERFORMANCE_FOUT.write", "PERFORMANCE_FOUT.flush", "optimizer.state_dict", "net.module.state_dict", "os.path.join", "torch.save", "torch.save", "torch.save", "pretrain.get_current_lr", "bnm_scheduler.lmbd", "datetime.datetime.now", "torch.save", "torch.save", "torch.save", "net.state_dict", "optimizer.state_dict", "net.module.state_dict", "os.path.join", "optimizer.state_dict", "net.module.state_dict", "os.path.join", "net.state_dict", "net.state_dict", "str", "BEST_MAP[].item", "str", "BEST_MAP[].item", "str"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.log_string", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.train_one_epoch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.evaluate_one_epoch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.get_current_lr"], ["def", "train", "(", "start_epoch", ")", ":", "\n", "    ", "global", "EPOCH_CNT", "\n", "loss", "=", "0", "\n", "global", "BEST_MAP", "\n", "EPOCH_CNT", "=", "0", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "MAX_EPOCH", ")", ":", "\n", "        ", "EPOCH_CNT", "=", "epoch", "\n", "log_string", "(", "'**** EPOCH %03d ****'", "%", "(", "epoch", ")", ")", "\n", "log_string", "(", "'Current learning rate: %f'", "%", "(", "get_current_lr", "(", "epoch", ")", ")", ")", "\n", "log_string", "(", "'Current BN decay momentum: %f'", "%", "(", "bnm_scheduler", ".", "lmbd", "(", "bnm_scheduler", ".", "last_epoch", ")", ")", ")", "\n", "log_string", "(", "str", "(", "datetime", ".", "now", "(", ")", ")", ")", "\n", "\n", "# in numpy 1.18.5 this actually sets `np.random.get_state()[1][0]` to default value", "\n", "# so the test data is consistent as the initial seed is the same", "\n", "np", ".", "random", ".", "seed", "(", ")", "\n", "train_one_epoch", "(", ")", "\n", "if", "EPOCH_CNT", "%", "FLAGS", ".", "eval_interval", "==", "0", "and", "EPOCH_CNT", ">", "0", ":", "\n", "            ", "loss", ",", "map", "=", "evaluate_one_epoch", "(", ")", "\n", "if", "map", "[", "0", "]", "+", "map", "[", "1", "]", ">", "BEST_MAP", "[", "0", "]", "+", "BEST_MAP", "[", "1", "]", ":", "\n", "                ", "BEST_MAP", "=", "map", "\n", "save_dict", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "# after training one epoch, the start_epoch should be epoch+1", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'loss'", ":", "loss", "\n", "}", "\n", "try", ":", "# with nn.DataParallel() the net is added as a submodule of DataParallel", "\n", "                    ", "save_dict", "[", "'model_state_dict'", "]", "=", "net", ".", "module", ".", "state_dict", "(", ")", "\n", "", "except", ":", "\n", "                    ", "save_dict", "[", "'model_state_dict'", "]", "=", "net", ".", "state_dict", "(", ")", "\n", "", "torch", ".", "save", "(", "save_dict", ",", "os", ".", "path", ".", "join", "(", "LOG_DIR", ",", "'best_checkpoint_sum.tar'", ")", ")", "\n", "", "PERFORMANCE_FOUT", ".", "write", "(", "'epoch: '", "+", "str", "(", "EPOCH_CNT", ")", "+", "'\\n'", "+", "'best: '", "+", "str", "(", "BEST_MAP", "[", "0", "]", ".", "item", "(", ")", ")", "+", "', '", "+", "str", "(", "BEST_MAP", "[", "1", "]", ".", "item", "(", ")", ")", "+", "'\\n'", ")", "\n", "PERFORMANCE_FOUT", ".", "flush", "(", ")", "\n", "# Save checkpoint", "\n", "", "save_dict", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "# after training one epoch, the start_epoch should be epoch+1", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'loss'", ":", "loss", ",", "\n", "}", "\n", "try", ":", "# with nn.DataParallel() the net is added as a submodule of DataParallel", "\n", "            ", "save_dict", "[", "'model_state_dict'", "]", "=", "net", ".", "module", ".", "state_dict", "(", ")", "\n", "", "except", ":", "\n", "            ", "save_dict", "[", "'model_state_dict'", "]", "=", "net", ".", "state_dict", "(", ")", "\n", "", "torch", ".", "save", "(", "save_dict", ",", "os", ".", "path", ".", "join", "(", "LOG_DIR", ",", "'checkpoint.tar'", ")", ")", "\n", "\n", "if", "EPOCH_CNT", "%", "FLAGS", ".", "save_interval", "==", "0", ":", "\n", "# Save checkpoint", "\n", "            ", "save_dict", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "# after training one epoch, the start_epoch should be epoch+1", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'loss'", ":", "loss", ",", "\n", "}", "\n", "try", ":", "# with nn.DataParallel() the net is added as a submodule of DataParallel", "\n", "                ", "save_dict", "[", "'model_state_dict'", "]", "=", "net", ".", "module", ".", "state_dict", "(", ")", "\n", "", "except", ":", "\n", "                ", "save_dict", "[", "'model_state_dict'", "]", "=", "net", ".", "state_dict", "(", ")", "\n", "", "torch", ".", "save", "(", "save_dict", ",", "os", ".", "path", ".", "join", "(", "LOG_DIR", ",", "'checkpoint_%d.tar'", "%", "EPOCH_CNT", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.nms_2d": [[20, 50], ["numpy.argsort", "pick.append", "range", "numpy.delete", "max", "max", "min", "min", "print", "suppress.append"], "function", ["None"], ["def", "nms_2d", "(", "boxes", ",", "overlap_threshold", ")", ":", "\n", "    ", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "2", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "score", "=", "boxes", "[", ":", ",", "4", "]", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "\n", "I", "=", "np", ".", "argsort", "(", "score", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "suppress", "=", "[", "last", "-", "1", "]", "\n", "for", "pos", "in", "range", "(", "last", "-", "1", ")", ":", "\n", "            ", "j", "=", "I", "[", "pos", "]", "\n", "xx1", "=", "max", "(", "x1", "[", "i", "]", ",", "x1", "[", "j", "]", ")", "\n", "yy1", "=", "max", "(", "y1", "[", "i", "]", ",", "y1", "[", "j", "]", ")", "\n", "xx2", "=", "min", "(", "x2", "[", "i", "]", ",", "x2", "[", "j", "]", ")", "\n", "yy2", "=", "min", "(", "y2", "[", "i", "]", ",", "y2", "[", "j", "]", ")", "\n", "w", "=", "xx2", "-", "xx1", "\n", "h", "=", "yy2", "-", "yy1", "\n", "if", "(", "w", ">", "0", "and", "h", ">", "0", ")", ":", "\n", "                ", "o", "=", "w", "*", "h", "/", "area", "[", "j", "]", "\n", "print", "(", "'Overlap is'", ",", "o", ")", "\n", "if", "(", "o", ">", "overlap_threshold", ")", ":", "\n", "                    ", "suppress", ".", "append", "(", "pos", ")", "\n", "", "", "", "I", "=", "np", ".", "delete", "(", "I", ",", "suppress", ")", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.nms_2d_faster": [[52, 84], ["numpy.argsort", "pick.append", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.delete", "numpy.concatenate", "numpy.where"], "function", ["None"], ["", "def", "nms_2d_faster", "(", "boxes", ",", "overlap_threshold", ",", "old_type", "=", "False", ")", ":", "\n", "    ", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "2", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "score", "=", "boxes", "[", ":", ",", "4", "]", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "\n", "I", "=", "np", ".", "argsort", "(", "score", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "\n", "w", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "\n", "if", "old_type", ":", "\n", "            ", "o", "=", "(", "w", "*", "h", ")", "/", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "", "else", ":", "\n", "            ", "inter", "=", "w", "*", "h", "\n", "o", "=", "inter", "/", "(", "area", "[", "i", "]", "+", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "-", "inter", ")", "\n", "\n", "", "I", "=", "np", ".", "delete", "(", "I", ",", "np", ".", "concatenate", "(", "(", "[", "last", "-", "1", "]", ",", "np", ".", "where", "(", "o", ">", "overlap_threshold", ")", "[", "0", "]", ")", ")", ")", "\n", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.nms_3d_faster": [[86, 123], ["numpy.argsort", "pick.append", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.delete", "numpy.concatenate", "numpy.where"], "function", ["None"], ["", "def", "nms_3d_faster", "(", "boxes", ",", "overlap_threshold", ",", "old_type", "=", "False", ")", ":", "\n", "    ", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "z1", "=", "boxes", "[", ":", ",", "2", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "4", "]", "\n", "z2", "=", "boxes", "[", ":", ",", "5", "]", "\n", "score", "=", "boxes", "[", ":", ",", "6", "]", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "*", "(", "z2", "-", "z1", ")", "\n", "\n", "I", "=", "np", ".", "argsort", "(", "score", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz1", "=", "np", ".", "maximum", "(", "z1", "[", "i", "]", ",", "z1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz2", "=", "np", ".", "minimum", "(", "z2", "[", "i", "]", ",", "z2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "\n", "l", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "w", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0", ",", "zz2", "-", "zz1", ")", "\n", "\n", "if", "old_type", ":", "\n", "            ", "o", "=", "(", "l", "*", "w", "*", "h", ")", "/", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "", "else", ":", "\n", "            ", "inter", "=", "l", "*", "w", "*", "h", "\n", "o", "=", "inter", "/", "(", "area", "[", "i", "]", "+", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "-", "inter", ")", "\n", "\n", "", "I", "=", "np", ".", "delete", "(", "I", ",", "np", ".", "concatenate", "(", "(", "[", "last", "-", "1", "]", ",", "np", ".", "where", "(", "o", ">", "overlap_threshold", ")", "[", "0", "]", ")", ")", ")", "\n", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.nms_3d_faster_samecls": [[125, 166], ["numpy.argsort", "pick.append", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.delete", "numpy.concatenate", "numpy.where"], "function", ["None"], ["", "def", "nms_3d_faster_samecls", "(", "boxes", ",", "overlap_threshold", ",", "old_type", "=", "False", ")", ":", "\n", "    ", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "z1", "=", "boxes", "[", ":", ",", "2", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "4", "]", "\n", "z2", "=", "boxes", "[", ":", ",", "5", "]", "\n", "score", "=", "boxes", "[", ":", ",", "6", "]", "\n", "cls", "=", "boxes", "[", ":", ",", "7", "]", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "*", "(", "z2", "-", "z1", ")", "\n", "\n", "I", "=", "np", ".", "argsort", "(", "score", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz1", "=", "np", ".", "maximum", "(", "z1", "[", "i", "]", ",", "z1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz2", "=", "np", ".", "minimum", "(", "z2", "[", "i", "]", ",", "z2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "cls1", "=", "cls", "[", "i", "]", "\n", "cls2", "=", "cls", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "\n", "l", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "w", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0", ",", "zz2", "-", "zz1", ")", "\n", "\n", "if", "old_type", ":", "\n", "            ", "o", "=", "(", "l", "*", "w", "*", "h", ")", "/", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "", "else", ":", "\n", "            ", "inter", "=", "l", "*", "w", "*", "h", "\n", "o", "=", "inter", "/", "(", "area", "[", "i", "]", "+", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "-", "inter", ")", "\n", "", "o", "=", "o", "*", "(", "cls1", "==", "cls2", ")", "\n", "\n", "I", "=", "np", ".", "delete", "(", "I", ",", "np", ".", "concatenate", "(", "(", "[", "last", "-", "1", "]", ",", "np", ".", "where", "(", "o", ">", "overlap_threshold", ")", "[", "0", "]", ")", ")", ")", "\n", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.lhs_3d_faster_samecls": [[168, 215], ["numpy.argsort", "pick.append", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "len", "range", "numpy.delete", "numpy.where", "pick.append", "numpy.concatenate"], "function", ["None"], ["", "def", "lhs_3d_faster_samecls", "(", "boxes", ",", "overlap_threshold", ",", "old_type", "=", "False", ")", ":", "\n", "    ", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "z1", "=", "boxes", "[", ":", ",", "2", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "4", "]", "\n", "z2", "=", "boxes", "[", ":", ",", "5", "]", "\n", "score", "=", "boxes", "[", ":", ",", "6", "]", "\n", "cls", "=", "boxes", "[", ":", ",", "7", "]", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "*", "(", "z2", "-", "z1", ")", "+", "1e-8", "\n", "\n", "I", "=", "np", ".", "argsort", "(", "score", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz1", "=", "np", ".", "maximum", "(", "z1", "[", "i", "]", ",", "z1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz2", "=", "np", ".", "minimum", "(", "z2", "[", "i", "]", ",", "z2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "cls1", "=", "cls", "[", "i", "]", "\n", "cls2", "=", "cls", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "\n", "l", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "w", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0", ",", "zz2", "-", "zz1", ")", "\n", "\n", "if", "old_type", ":", "\n", "            ", "o", "=", "(", "l", "*", "w", "*", "h", ")", "/", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "", "else", ":", "\n", "            ", "inter", "=", "l", "*", "w", "*", "h", "\n", "o", "=", "inter", "/", "(", "area", "[", "i", "]", "+", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "-", "inter", ")", "\n", "", "o", "=", "o", "*", "(", "cls1", "==", "cls2", ")", "\n", "\n", "inds", "=", "np", ".", "where", "(", "o", ">", "overlap_threshold", ")", "[", "0", "]", "\n", "len_inds", "=", "len", "(", "inds", ")", "\n", "\n", "for", "count", "in", "range", "(", "(", "len_inds", ")", "//", "2", ")", ":", "\n", "            ", "pick", ".", "append", "(", "I", "[", "inds", "[", "len_inds", "-", "count", "-", "1", "]", "]", ")", "\n", "\n", "", "I", "=", "np", ".", "delete", "(", "I", ",", "np", ".", "concatenate", "(", "(", "[", "last", "-", "1", "]", ",", "inds", ")", ")", ")", "\n", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.nms_crnr_dist": [[217, 233], ["numpy.argsort", "pick.append", "numpy.delete", "scores.append", "numpy.concatenate", "pc_util.bbox_corner_dist_measure", "numpy.where", "numpy.array"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.bbox_corner_dist_measure"], ["", "def", "nms_crnr_dist", "(", "boxes", ",", "conf", ",", "overlap_threshold", ")", ":", "\n", "\n", "    ", "I", "=", "np", ".", "argsort", "(", "conf", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "\n", "scores", "=", "[", "]", "\n", "for", "ind", "in", "I", "[", ":", "-", "1", "]", ":", "\n", "            ", "scores", ".", "append", "(", "bbox_corner_dist_measure", "(", "boxes", "[", "i", ",", ":", "]", ",", "boxes", "[", "ind", ",", ":", "]", ")", ")", "\n", "\n", "", "I", "=", "np", ".", "delete", "(", "I", ",", "np", ".", "concatenate", "(", "(", "[", "last", "-", "1", "]", ",", "np", ".", "where", "(", "np", ".", "array", "(", "scores", ")", ">", "overlap_threshold", ")", "[", "0", "]", ")", ")", ")", "\n", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling": [[35, 44], ["numpy.random.choice"], "function", ["None"], ["def", "random_sampling", "(", "pc", ",", "num_sample", ",", "replace", "=", "None", ",", "return_choices", "=", "False", ")", ":", "\n", "    ", "\"\"\" Input is NxC, output is num_samplexC\n    \"\"\"", "\n", "if", "replace", "is", "None", ":", "replace", "=", "(", "pc", ".", "shape", "[", "0", "]", "<", "num_sample", ")", "\n", "choices", "=", "np", ".", "random", ".", "choice", "(", "pc", ".", "shape", "[", "0", "]", ",", "num_sample", ",", "replace", "=", "replace", ")", "\n", "if", "return_choices", ":", "\n", "        ", "return", "pc", "[", "choices", "]", ",", "choices", "\n", "", "else", ":", "\n", "        ", "return", "pc", "[", "choices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_volume_batch": [[49, 64], ["range", "pc_util.point_cloud_to_volume", "numpy.vstack", "numpy.concatenate", "numpy.squeeze", "vol_list.append", "vol_list.append", "point_cloud_to_volume.flatten", "numpy.expand_dims", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_volume"], ["", "", "def", "point_cloud_to_volume_batch", "(", "point_clouds", ",", "vsize", "=", "12", ",", "radius", "=", "1.0", ",", "flatten", "=", "True", ")", ":", "\n", "    ", "\"\"\" Input is BxNx3 batch of point cloud\n        Output is Bx(vsize^3)\n    \"\"\"", "\n", "vol_list", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "point_clouds", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "vol", "=", "point_cloud_to_volume", "(", "np", ".", "squeeze", "(", "point_clouds", "[", "b", ",", ":", ",", ":", "]", ")", ",", "vsize", ",", "radius", ")", "\n", "if", "flatten", ":", "\n", "            ", "vol_list", ".", "append", "(", "vol", ".", "flatten", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "vol_list", ".", "append", "(", "np", ".", "expand_dims", "(", "np", ".", "expand_dims", "(", "vol", ",", "-", "1", ")", ",", "0", ")", ")", "\n", "", "", "if", "flatten", ":", "\n", "        ", "return", "np", ".", "vstack", "(", "vol_list", ")", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "concatenate", "(", "vol_list", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_volume": [[66, 77], ["numpy.zeros", "locations.astype.astype", "float"], "function", ["None"], ["", "", "def", "point_cloud_to_volume", "(", "points", ",", "vsize", ",", "radius", "=", "1.0", ")", ":", "\n", "    ", "\"\"\" input is Nx3 points.\n        output is vsize*vsize*vsize\n        assumes points are in range [-radius, radius]\n    \"\"\"", "\n", "vol", "=", "np", ".", "zeros", "(", "(", "vsize", ",", "vsize", ",", "vsize", ")", ")", "\n", "voxel", "=", "2", "*", "radius", "/", "float", "(", "vsize", ")", "\n", "locations", "=", "(", "points", "+", "radius", ")", "/", "voxel", "\n", "locations", "=", "locations", ".", "astype", "(", "int", ")", "\n", "vol", "[", "locations", "[", ":", ",", "0", "]", ",", "locations", "[", ":", ",", "1", "]", ",", "locations", "[", ":", ",", "2", "]", "]", "=", "1.0", "\n", "return", "vol", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.volume_to_point_cloud": [[78, 94], ["range", "numpy.vstack", "range", "len", "numpy.zeros", "range", "np.vstack.append", "numpy.array"], "function", ["None"], ["", "def", "volume_to_point_cloud", "(", "vol", ")", ":", "\n", "    ", "\"\"\" vol is occupancy grid (value = 0 or 1) of size vsize*vsize*vsize\n        return Nx3 numpy array.\n    \"\"\"", "\n", "vsize", "=", "vol", ".", "shape", "[", "0", "]", "\n", "assert", "(", "vol", ".", "shape", "[", "1", "]", "==", "vsize", "and", "vol", ".", "shape", "[", "1", "]", "==", "vsize", ")", "\n", "points", "=", "[", "]", "\n", "for", "a", "in", "range", "(", "vsize", ")", ":", "\n", "        ", "for", "b", "in", "range", "(", "vsize", ")", ":", "\n", "            ", "for", "c", "in", "range", "(", "vsize", ")", ":", "\n", "                ", "if", "vol", "[", "a", ",", "b", ",", "c", "]", "==", "1", ":", "\n", "                    ", "points", ".", "append", "(", "np", ".", "array", "(", "[", "a", ",", "b", ",", "c", "]", ")", ")", "\n", "", "", "", "", "if", "len", "(", "points", ")", "==", "0", ":", "\n", "        ", "return", "np", ".", "zeros", "(", "(", "0", ",", "3", ")", ")", "\n", "", "points", "=", "np", ".", "vstack", "(", "points", ")", "\n", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_volume_v2_batch": [[95, 105], ["range", "numpy.concatenate", "pc_util.point_cloud_to_volume_v2", "vol_list.append", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_volume_v2"], ["", "def", "point_cloud_to_volume_v2_batch", "(", "point_clouds", ",", "vsize", "=", "12", ",", "radius", "=", "1.0", ",", "num_sample", "=", "128", ")", ":", "\n", "    ", "\"\"\" Input is BxNx3 a batch of point cloud\n        Output is BxVxVxVxnum_samplex3\n        Added on Feb 19\n    \"\"\"", "\n", "vol_list", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "point_clouds", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "vol", "=", "point_cloud_to_volume_v2", "(", "point_clouds", "[", "b", ",", ":", ",", ":", "]", ",", "vsize", ",", "radius", ",", "num_sample", ")", "\n", "vol_list", ".", "append", "(", "np", ".", "expand_dims", "(", "vol", ",", "0", ")", ")", "\n", "", "return", "np", ".", "concatenate", "(", "vol_list", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_volume_v2": [[106, 143], ["numpy.zeros", "locations.astype.astype", "range", "range", "float", "tuple", "loc2pc[].append", "range", "range", "numpy.zeros", "numpy.vstack", "pc_util.random_sampling", "numpy.lib.pad", "numpy.array"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling"], ["", "def", "point_cloud_to_volume_v2", "(", "points", ",", "vsize", ",", "radius", "=", "1.0", ",", "num_sample", "=", "128", ")", ":", "\n", "    ", "\"\"\" input is Nx3 points\n        output is vsize*vsize*vsize*num_sample*3\n        assumes points are in range [-radius, radius]\n        samples num_sample points in each voxel, if there are less than\n        num_sample points, replicate the points\n        Added on Feb 19\n    \"\"\"", "\n", "vol", "=", "np", ".", "zeros", "(", "(", "vsize", ",", "vsize", ",", "vsize", ",", "num_sample", ",", "3", ")", ")", "\n", "voxel", "=", "2", "*", "radius", "/", "float", "(", "vsize", ")", "\n", "locations", "=", "(", "points", "+", "radius", ")", "/", "voxel", "\n", "locations", "=", "locations", ".", "astype", "(", "int", ")", "\n", "loc2pc", "=", "{", "}", "\n", "for", "n", "in", "range", "(", "points", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "loc", "=", "tuple", "(", "locations", "[", "n", ",", ":", "]", ")", "\n", "if", "loc", "not", "in", "loc2pc", ":", "\n", "            ", "loc2pc", "[", "loc", "]", "=", "[", "]", "\n", "", "loc2pc", "[", "loc", "]", ".", "append", "(", "points", "[", "n", ",", ":", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "vsize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "vsize", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "vsize", ")", ":", "\n", "                ", "if", "(", "i", ",", "j", ",", "k", ")", "not", "in", "loc2pc", ":", "\n", "                    ", "vol", "[", "i", ",", "j", ",", "k", ",", ":", ",", ":", "]", "=", "np", ".", "zeros", "(", "(", "num_sample", ",", "3", ")", ")", "\n", "", "else", ":", "\n", "                    ", "pc", "=", "loc2pc", "[", "(", "i", ",", "j", ",", "k", ")", "]", "# a list of (3,) arrays", "\n", "pc", "=", "np", ".", "vstack", "(", "pc", ")", "# kx3", "\n", "# Sample/pad to num_sample points", "\n", "if", "pc", ".", "shape", "[", "0", "]", ">", "num_sample", ":", "\n", "                        ", "pc", "=", "random_sampling", "(", "pc", ",", "num_sample", ",", "False", ")", "\n", "", "elif", "pc", ".", "shape", "[", "0", "]", "<", "num_sample", ":", "\n", "                        ", "pc", "=", "np", ".", "lib", ".", "pad", "(", "pc", ",", "(", "(", "0", ",", "num_sample", "-", "pc", ".", "shape", "[", "0", "]", ")", ",", "(", "0", ",", "0", ")", ")", ",", "'edge'", ")", "\n", "# Normalize", "\n", "", "pc_center", "=", "(", "np", ".", "array", "(", "[", "i", ",", "j", ",", "k", "]", ")", "+", "0.5", ")", "*", "voxel", "-", "radius", "\n", "pc", "=", "(", "pc", "-", "pc_center", ")", "/", "voxel", "# shift and scale", "\n", "vol", "[", "i", ",", "j", ",", "k", ",", ":", ",", ":", "]", "=", "pc", "\n", "", "", "", "", "return", "vol", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_image_batch": [[144, 154], ["range", "numpy.concatenate", "pc_util.point_cloud_to_image", "img_list.append", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_image"], ["", "def", "point_cloud_to_image_batch", "(", "point_clouds", ",", "imgsize", ",", "radius", "=", "1.0", ",", "num_sample", "=", "128", ")", ":", "\n", "    ", "\"\"\" Input is BxNx3 a batch of point cloud\n        Output is BxIxIxnum_samplex3\n        Added on Feb 19\n    \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "point_clouds", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "img", "=", "point_cloud_to_image", "(", "point_clouds", "[", "b", ",", ":", ",", ":", "]", ",", "imgsize", ",", "radius", ",", "num_sample", ")", "\n", "img_list", ".", "append", "(", "np", ".", "expand_dims", "(", "img", ",", "0", ")", ")", "\n", "", "return", "np", ".", "concatenate", "(", "img_list", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_image": [[156, 189], ["numpy.zeros", "locations.astype.astype", "range", "range", "float", "tuple", "loc2pc[].append", "range", "numpy.zeros", "numpy.vstack", "pc_util.random_sampling", "numpy.lib.pad", "numpy.array"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling"], ["", "def", "point_cloud_to_image", "(", "points", ",", "imgsize", ",", "radius", "=", "1.0", ",", "num_sample", "=", "128", ")", ":", "\n", "    ", "\"\"\" input is Nx3 points\n        output is imgsize*imgsize*num_sample*3\n        assumes points are in range [-radius, radius]\n        samples num_sample points in each pixel, if there are less than\n        num_sample points, replicate the points\n        Added on Feb 19\n    \"\"\"", "\n", "img", "=", "np", ".", "zeros", "(", "(", "imgsize", ",", "imgsize", ",", "num_sample", ",", "3", ")", ")", "\n", "pixel", "=", "2", "*", "radius", "/", "float", "(", "imgsize", ")", "\n", "locations", "=", "(", "points", "[", ":", ",", "0", ":", "2", "]", "+", "radius", ")", "/", "pixel", "# Nx2", "\n", "locations", "=", "locations", ".", "astype", "(", "int", ")", "\n", "loc2pc", "=", "{", "}", "\n", "for", "n", "in", "range", "(", "points", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "loc", "=", "tuple", "(", "locations", "[", "n", ",", ":", "]", ")", "\n", "if", "loc", "not", "in", "loc2pc", ":", "\n", "            ", "loc2pc", "[", "loc", "]", "=", "[", "]", "\n", "", "loc2pc", "[", "loc", "]", ".", "append", "(", "points", "[", "n", ",", ":", "]", ")", "\n", "", "for", "i", "in", "range", "(", "imgsize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "imgsize", ")", ":", "\n", "            ", "if", "(", "i", ",", "j", ")", "not", "in", "loc2pc", ":", "\n", "                ", "img", "[", "i", ",", "j", ",", ":", ",", ":", "]", "=", "np", ".", "zeros", "(", "(", "num_sample", ",", "3", ")", ")", "\n", "", "else", ":", "\n", "                ", "pc", "=", "loc2pc", "[", "(", "i", ",", "j", ")", "]", "\n", "pc", "=", "np", ".", "vstack", "(", "pc", ")", "\n", "if", "pc", ".", "shape", "[", "0", "]", ">", "num_sample", ":", "\n", "                    ", "pc", "=", "random_sampling", "(", "pc", ",", "num_sample", ",", "False", ")", "\n", "", "elif", "pc", ".", "shape", "[", "0", "]", "<", "num_sample", ":", "\n", "                    ", "pc", "=", "np", ".", "lib", ".", "pad", "(", "pc", ",", "(", "(", "0", ",", "num_sample", "-", "pc", ".", "shape", "[", "0", "]", ")", ",", "(", "0", ",", "0", ")", ")", ",", "'edge'", ")", "\n", "", "pc_center", "=", "(", "np", ".", "array", "(", "[", "i", ",", "j", "]", ")", "+", "0.5", ")", "*", "pixel", "-", "radius", "\n", "pc", "[", ":", ",", "0", ":", "2", "]", "=", "(", "pc", "[", ":", ",", "0", ":", "2", "]", "-", "pc_center", ")", "/", "pixel", "\n", "img", "[", "i", ",", "j", ",", ":", ",", ":", "]", "=", "pc", "\n", "", "", "", "return", "img", "\n", "# ----------------------------------------", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.read_ply": [[193, 199], ["PlyData.read", "numpy.array"], "function", ["None"], ["", "def", "read_ply", "(", "filename", ")", ":", "\n", "    ", "\"\"\" read XYZ point cloud from filename PLY file \"\"\"", "\n", "plydata", "=", "PlyData", ".", "read", "(", "filename", ")", "\n", "pc", "=", "plydata", "[", "'vertex'", "]", ".", "data", "\n", "pc_array", "=", "np", ".", "array", "(", "[", "[", "x", ",", "y", ",", "z", "]", "for", "x", ",", "y", ",", "z", "in", "pc", "]", ")", "\n", "return", "pc_array", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply": [[201, 207], ["numpy.array", "PlyElement.describe", "PlyData().write", "range", "PlyData"], "function", ["None"], ["", "def", "write_ply", "(", "points", ",", "filename", ",", "text", "=", "True", ")", ":", "\n", "    ", "\"\"\" input: Nx3, write points to filename as PLY format. \"\"\"", "\n", "points", "=", "[", "(", "points", "[", "i", ",", "0", "]", ",", "points", "[", "i", ",", "1", "]", ",", "points", "[", "i", ",", "2", "]", ")", "for", "i", "in", "range", "(", "points", ".", "shape", "[", "0", "]", ")", "]", "\n", "vertex", "=", "np", ".", "array", "(", "points", ",", "dtype", "=", "[", "(", "'x'", ",", "'f4'", ")", ",", "(", "'y'", ",", "'f4'", ")", ",", "(", "'z'", ",", "'f4'", ")", "]", ")", "\n", "el", "=", "PlyElement", ".", "describe", "(", "vertex", ",", "'vertex'", ",", "comments", "=", "[", "'vertices'", "]", ")", "\n", "PlyData", "(", "[", "el", "]", ",", "text", "=", "text", ")", ".", "write", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply_color": [[208, 228], ["labels.astype.astype", "range", "numpy.array", "PlyElement.describe", "PlyData().write", "colormap", "np.array.append", "numpy.max", "numpy.max", "range", "int", "PlyData", "float"], "function", ["None"], ["", "def", "write_ply_color", "(", "points", ",", "labels", ",", "filename", ",", "num_classes", "=", "None", ",", "colormap", "=", "pyplot", ".", "cm", ".", "jet", ")", ":", "\n", "    ", "\"\"\" Color (N,3) points with labels (N) within range 0 ~ num_classes-1 as OBJ file \"\"\"", "\n", "labels", "=", "labels", ".", "astype", "(", "int", ")", "\n", "N", "=", "points", ".", "shape", "[", "0", "]", "\n", "if", "num_classes", "is", "None", ":", "\n", "        ", "num_classes", "=", "np", ".", "max", "(", "labels", ")", "+", "1", "\n", "", "else", ":", "\n", "        ", "assert", "(", "num_classes", ">", "np", ".", "max", "(", "labels", ")", ")", "\n", "\n", "", "vertex", "=", "[", "]", "\n", "#colors = [pyplot.cm.jet(i/float(num_classes)) for i in range(num_classes)]    ", "\n", "colors", "=", "[", "colormap", "(", "i", "/", "float", "(", "num_classes", ")", ")", "for", "i", "in", "range", "(", "num_classes", ")", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "c", "=", "colors", "[", "labels", "[", "i", "]", "]", "\n", "c", "=", "[", "int", "(", "x", "*", "255", ")", "for", "x", "in", "c", "]", "\n", "vertex", ".", "append", "(", "(", "points", "[", "i", ",", "0", "]", ",", "points", "[", "i", ",", "1", "]", ",", "points", "[", "i", ",", "2", "]", ",", "c", "[", "0", "]", ",", "c", "[", "1", "]", ",", "c", "[", "2", "]", ")", ")", "\n", "", "vertex", "=", "np", ".", "array", "(", "vertex", ",", "dtype", "=", "[", "(", "'x'", ",", "'f4'", ")", ",", "(", "'y'", ",", "'f4'", ")", ",", "(", "'z'", ",", "'f4'", ")", ",", "(", "'red'", ",", "'u1'", ")", ",", "(", "'green'", ",", "'u1'", ")", ",", "(", "'blue'", ",", "'u1'", ")", "]", ")", "\n", "\n", "el", "=", "PlyElement", ".", "describe", "(", "vertex", ",", "'vertex'", ",", "comments", "=", "[", "'vertices'", "]", ")", "\n", "PlyData", "(", "[", "el", "]", ",", "text", "=", "True", ")", ".", "write", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply_rgb": [[229, 238], ["colors.astype.astype", "open", "range", "open.close", "open.write"], "function", ["None"], ["", "def", "write_ply_rgb", "(", "points", ",", "colors", ",", "out_filename", ",", "num_classes", "=", "None", ")", ":", "\n", "    ", "\"\"\" Color (N,3) points with RGB colors (N,3) within range [0,255] as OBJ file \"\"\"", "\n", "colors", "=", "colors", ".", "astype", "(", "int", ")", "\n", "N", "=", "points", ".", "shape", "[", "0", "]", "\n", "fout", "=", "open", "(", "out_filename", ",", "'w'", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "c", "=", "colors", "[", "i", ",", ":", "]", "\n", "fout", ".", "write", "(", "'v %f %f %f %d %d %d\\n'", "%", "(", "points", "[", "i", ",", "0", "]", ",", "points", "[", "i", ",", "1", "]", ",", "points", "[", "i", ",", "2", "]", ",", "c", "[", "0", "]", ",", "c", "[", "1", "]", ",", "c", "[", "2", "]", ")", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.pyplot_draw_point_cloud": [[243, 252], ["plt.figure", "plt.figure.add_subplot", "fig.add_subplot.scatter", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_ylabel", "fig.add_subplot.set_zlabel"], "function", ["None"], ["", "def", "pyplot_draw_point_cloud", "(", "points", ",", "output_filename", ")", ":", "\n", "    ", "\"\"\" points is a Nx3 numpy array \"\"\"", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ",", "projection", "=", "'3d'", ")", "\n", "ax", ".", "scatter", "(", "points", "[", ":", ",", "0", "]", ",", "points", "[", ":", ",", "1", "]", ",", "points", "[", ":", ",", "2", "]", ")", "\n", "ax", ".", "set_xlabel", "(", "'x'", ")", "\n", "ax", ".", "set_ylabel", "(", "'y'", ")", "\n", "ax", ".", "set_zlabel", "(", "'z'", ")", "\n", "#savefig(output_filename)", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.pyplot_draw_volume": [[254, 260], ["pc_util.volume_to_point_cloud", "pc_util.pyplot_draw_point_cloud"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.volume_to_point_cloud", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.pyplot_draw_point_cloud"], ["", "def", "pyplot_draw_volume", "(", "vol", ",", "output_filename", ")", ":", "\n", "    ", "\"\"\" vol is of size vsize*vsize*vsize\n        output an image to output_filename\n    \"\"\"", "\n", "points", "=", "volume_to_point_cloud", "(", "vol", ")", "\n", "pyplot_draw_point_cloud", "(", "points", ",", "output_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.rotate_point_cloud": [[264, 276], ["points.mean", "numpy.array", "numpy.dot", "numpy.sin", "numpy.cos", "numpy.random.uniform"], "function", ["None"], ["", "def", "rotate_point_cloud", "(", "points", ",", "rotation_matrix", "=", "None", ")", ":", "\n", "    ", "\"\"\" Input: (n,3), Output: (n,3) \"\"\"", "\n", "# Rotate in-place around Z axis.", "\n", "if", "rotation_matrix", "is", "None", ":", "\n", "        ", "rotation_angle", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "2", "*", "np", ".", "pi", "\n", "sinval", ",", "cosval", "=", "np", ".", "sin", "(", "rotation_angle", ")", ",", "np", ".", "cos", "(", "rotation_angle", ")", "\n", "rotation_matrix", "=", "np", ".", "array", "(", "[", "[", "cosval", ",", "sinval", ",", "0", "]", ",", "\n", "[", "-", "sinval", ",", "cosval", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "", "ctr", "=", "points", ".", "mean", "(", "axis", "=", "0", ")", "\n", "rotated_data", "=", "np", ".", "dot", "(", "points", "-", "ctr", ",", "rotation_matrix", ")", "+", "ctr", "\n", "return", "rotated_data", ",", "rotation_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.rotate_pc_along_y": [[277, 286], ["numpy.cos", "numpy.sin", "numpy.array", "numpy.dot", "numpy.transpose"], "function", ["None"], ["", "def", "rotate_pc_along_y", "(", "pc", ",", "rot_angle", ")", ":", "\n", "    ", "''' Input ps is NxC points with first 3 channels as XYZ\n        z is facing forward, x is left ward, y is downward\n    '''", "\n", "cosval", "=", "np", ".", "cos", "(", "rot_angle", ")", "\n", "sinval", "=", "np", ".", "sin", "(", "rot_angle", ")", "\n", "rotmat", "=", "np", ".", "array", "(", "[", "[", "cosval", ",", "-", "sinval", "]", ",", "[", "sinval", ",", "cosval", "]", "]", ")", "\n", "pc", "[", ":", ",", "[", "0", ",", "2", "]", "]", "=", "np", ".", "dot", "(", "pc", "[", ":", ",", "[", "0", ",", "2", "]", "]", ",", "np", ".", "transpose", "(", "rotmat", ")", ")", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.roty": [[287, 294], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "roty", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "0", ",", "s", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "-", "s", ",", "0", ",", "c", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.roty_batch": [[295, 310], ["numpy.zeros", "numpy.cos", "numpy.sin", "tuple", "list"], "function", ["None"], ["", "def", "roty_batch", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\n    t: (x1,x2,...xn)\n    return: (x1,x2,...,xn,3,3)\n    \"\"\"", "\n", "input_shape", "=", "t", ".", "shape", "\n", "output", "=", "np", ".", "zeros", "(", "tuple", "(", "list", "(", "input_shape", ")", "+", "[", "3", ",", "3", "]", ")", ")", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "output", "[", "...", ",", "0", ",", "0", "]", "=", "c", "\n", "output", "[", "...", ",", "0", ",", "2", "]", "=", "s", "\n", "output", "[", "...", ",", "1", ",", "1", "]", "=", "1", "\n", "output", "[", "...", ",", "2", ",", "0", "]", "=", "-", "s", "\n", "output", "[", "...", ",", "2", ",", "2", "]", "=", "c", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.rotz": [[311, 318], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "rotz", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the z-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "-", "s", ",", "0", "]", ",", "\n", "[", "s", ",", "c", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.bbox_corner_dist_measure": [[323, 344], ["range", "max", "print", "sum", "numpy.linalg.norm().sum", "numpy.linalg.norm", "range", "range", "numpy.linalg.norm"], "function", ["None"], ["", "def", "bbox_corner_dist_measure", "(", "crnr1", ",", "crnr2", ")", ":", "\n", "    ", "\"\"\" compute distance between box corners to replace iou\n    Args:\n        crnr1, crnr2: Nx3 points of box corners in camera axis (y points down)\n        output is a scalar between 0 and 1        \n    \"\"\"", "\n", "\n", "dist", "=", "sys", ".", "maxsize", "\n", "for", "y", "in", "range", "(", "4", ")", ":", "\n", "        ", "rows", "=", "(", "[", "(", "x", "+", "y", ")", "%", "4", "for", "x", "in", "range", "(", "4", ")", "]", "+", "[", "4", "+", "(", "x", "+", "y", ")", "%", "4", "for", "x", "in", "range", "(", "4", ")", "]", ")", "\n", "d_", "=", "np", ".", "linalg", ".", "norm", "(", "crnr2", "[", "rows", ",", ":", "]", "-", "crnr1", ",", "axis", "=", "1", ")", ".", "sum", "(", ")", "/", "8.0", "\n", "if", "d_", "<", "dist", ":", "\n", "            ", "dist", "=", "d_", "\n", "\n", "", "", "u", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "x", "[", "0", ",", ":", "]", "-", "x", "[", "6", ",", ":", "]", ")", "for", "x", "in", "[", "crnr1", ",", "crnr2", "]", "]", ")", "/", "2.0", "\n", "\n", "measure", "=", "max", "(", "1.0", "-", "dist", "/", "u", ",", "0", ")", "\n", "print", "(", "measure", ")", "\n", "\n", "\n", "return", "measure", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.point_cloud_to_bbox": [[346, 357], ["numpy.concatenate", "len", "points.min", "points.max"], "function", ["None"], ["", "def", "point_cloud_to_bbox", "(", "points", ")", ":", "\n", "    ", "\"\"\" Extract the axis aligned box from a pcl or batch of pcls\n    Args:\n        points: Nx3 points or BxNx3\n        output is 6 dim: xyz pos of center and 3 lengths        \n    \"\"\"", "\n", "which_dim", "=", "len", "(", "points", ".", "shape", ")", "-", "2", "# first dim if a single cloud and second if batch", "\n", "mn", ",", "mx", "=", "points", ".", "min", "(", "which_dim", ")", ",", "points", ".", "max", "(", "which_dim", ")", "\n", "lengths", "=", "mx", "-", "mn", "\n", "cntr", "=", "0.5", "*", "(", "mn", "+", "mx", ")", "\n", "return", "np", ".", "concatenate", "(", "[", "cntr", ",", "lengths", "]", ",", "axis", "=", "which_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_bbox": [[358, 388], ["trimesh.scene.Scene", "trimesh.util.concatenate", "trimesh.io.export.export_mesh", "numpy.eye", "trimesh.creation.box", "trimesh.scene.Scene.add_geometry", "trimesh.scene.Scene.dump", "pc_util.write_bbox.convert_box_to_trimesh_fmt"], "function", ["None"], ["", "def", "write_bbox", "(", "scene_bbox", ",", "out_filename", ")", ":", "\n", "    ", "\"\"\"Export scene bbox to meshes\n    Args:\n        scene_bbox: (N x 6 numpy array): xyz pos of center and 3 lengths\n        out_filename: (string) filename\n\n    Note:\n        To visualize the boxes in MeshLab.\n        1. Select the objects (the boxes)\n        2. Filters -> Polygon and Quad Mesh -> Turn into Quad-Dominant Mesh\n        3. Select Wireframe view.\n    \"\"\"", "\n", "def", "convert_box_to_trimesh_fmt", "(", "box", ")", ":", "\n", "        ", "ctr", "=", "box", "[", ":", "3", "]", "\n", "lengths", "=", "box", "[", "3", ":", "]", "\n", "trns", "=", "np", ".", "eye", "(", "4", ")", "\n", "trns", "[", "0", ":", "3", ",", "3", "]", "=", "ctr", "\n", "trns", "[", "3", ",", "3", "]", "=", "1.0", "\n", "box_trimesh_fmt", "=", "trimesh", ".", "creation", ".", "box", "(", "lengths", ",", "trns", ")", "\n", "return", "box_trimesh_fmt", "\n", "\n", "", "scene", "=", "trimesh", ".", "scene", ".", "Scene", "(", ")", "\n", "for", "box", "in", "scene_bbox", ":", "\n", "        ", "scene", ".", "add_geometry", "(", "convert_box_to_trimesh_fmt", "(", "box", ")", ")", "\n", "\n", "", "mesh_list", "=", "trimesh", ".", "util", ".", "concatenate", "(", "scene", ".", "dump", "(", ")", ")", "\n", "# save to ply file    ", "\n", "trimesh", ".", "io", ".", "export", ".", "export_mesh", "(", "mesh_list", ",", "out_filename", ",", "file_type", "=", "'ply'", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox": [[389, 426], ["trimesh.scene.Scene", "trimesh.util.concatenate", "trimesh.io.export.export_mesh", "numpy.zeros", "numpy.cos", "numpy.sin", "numpy.array", "numpy.eye", "pc_util.write_oriented_bbox.heading2rotmat"], "function", ["None"], ["", "def", "write_oriented_bbox", "(", "scene_bbox", ",", "out_filename", ")", ":", "\n", "    ", "\"\"\"Export oriented (around Z axis) scene bbox to meshes\n    Args:\n        scene_bbox: (N x 7 numpy array): xyz pos of center and 3 lengths (dx,dy,dz)\n            and heading angle around Z axis.\n            Y forward, X right, Z upward. heading angle of positive X is 0,\n            heading angle of positive Y is 90 degrees.\n        out_filename: (string) filename\n    \"\"\"", "\n", "def", "heading2rotmat", "(", "heading_angle", ")", ":", "\n", "        ", "pass", "\n", "rotmat", "=", "np", ".", "zeros", "(", "(", "3", ",", "3", ")", ")", "\n", "rotmat", "[", "2", ",", "2", "]", "=", "1", "\n", "cosval", "=", "np", ".", "cos", "(", "heading_angle", ")", "\n", "sinval", "=", "np", ".", "sin", "(", "heading_angle", ")", "\n", "rotmat", "[", "0", ":", "2", ",", "0", ":", "2", "]", "=", "np", ".", "array", "(", "[", "[", "cosval", ",", "-", "sinval", "]", ",", "[", "sinval", ",", "cosval", "]", "]", ")", "\n", "return", "rotmat", "\n", "\n", "", "def", "convert_oriented_box_to_trimesh_fmt", "(", "box", ")", ":", "\n", "        ", "ctr", "=", "box", "[", ":", "3", "]", "\n", "lengths", "=", "box", "[", "3", ":", "6", "]", "\n", "trns", "=", "np", ".", "eye", "(", "4", ")", "\n", "trns", "[", "0", ":", "3", ",", "3", "]", "=", "ctr", "\n", "trns", "[", "3", ",", "3", "]", "=", "1.0", "\n", "trns", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "heading2rotmat", "(", "box", "[", "6", "]", ")", "\n", "box_trimesh_fmt", "=", "trimesh", ".", "creation", ".", "box", "(", "lengths", ",", "trns", ")", "\n", "return", "box_trimesh_fmt", "\n", "\n", "", "scene", "=", "trimesh", ".", "scene", ".", "Scene", "(", ")", "\n", "for", "box", "in", "scene_bbox", ":", "\n", "        ", "scene", ".", "add_geometry", "(", "convert_oriented_box_to_trimesh_fmt", "(", "box", ")", ")", "\n", "\n", "", "mesh_list", "=", "trimesh", ".", "util", ".", "concatenate", "(", "scene", ".", "dump", "(", ")", ")", "\n", "# save to ply file    ", "\n", "trimesh", ".", "io", ".", "export", ".", "export_mesh", "(", "mesh_list", ",", "out_filename", ",", "file_type", "=", "'ply'", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox_camera_coord": [[427, 465], ["trimesh.scene.Scene", "trimesh.util.concatenate", "trimesh.io.export.export_mesh", "numpy.zeros", "numpy.cos", "numpy.sin", "numpy.array", "numpy.array", "numpy.eye", "pc_util.write_oriented_bbox.heading2rotmat"], "function", ["None"], ["", "def", "write_oriented_bbox_camera_coord", "(", "scene_bbox", ",", "out_filename", ")", ":", "\n", "    ", "\"\"\"Export oriented (around Y axis) scene bbox to meshes\n    Args:\n        scene_bbox: (N x 7 numpy array): xyz pos of center and 3 lengths (dx,dy,dz)\n            and heading angle around Y axis.\n            Z forward, X rightward, Y downward. heading angle of positive X is 0,\n            heading angle of negative Z is 90 degrees.\n        out_filename: (string) filename\n    \"\"\"", "\n", "def", "heading2rotmat", "(", "heading_angle", ")", ":", "\n", "        ", "pass", "\n", "rotmat", "=", "np", ".", "zeros", "(", "(", "3", ",", "3", ")", ")", "\n", "rotmat", "[", "1", ",", "1", "]", "=", "1", "\n", "cosval", "=", "np", ".", "cos", "(", "heading_angle", ")", "\n", "sinval", "=", "np", ".", "sin", "(", "heading_angle", ")", "\n", "rotmat", "[", "0", ",", ":", "]", "=", "np", ".", "array", "(", "[", "cosval", ",", "0", ",", "sinval", "]", ")", "\n", "rotmat", "[", "2", ",", ":", "]", "=", "np", ".", "array", "(", "[", "-", "sinval", ",", "0", ",", "cosval", "]", ")", "\n", "return", "rotmat", "\n", "\n", "", "def", "convert_oriented_box_to_trimesh_fmt", "(", "box", ")", ":", "\n", "        ", "ctr", "=", "box", "[", ":", "3", "]", "\n", "lengths", "=", "box", "[", "3", ":", "6", "]", "\n", "trns", "=", "np", ".", "eye", "(", "4", ")", "\n", "trns", "[", "0", ":", "3", ",", "3", "]", "=", "ctr", "\n", "trns", "[", "3", ",", "3", "]", "=", "1.0", "\n", "trns", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "heading2rotmat", "(", "box", "[", "6", "]", ")", "\n", "box_trimesh_fmt", "=", "trimesh", ".", "creation", ".", "box", "(", "lengths", ",", "trns", ")", "\n", "return", "box_trimesh_fmt", "\n", "\n", "", "scene", "=", "trimesh", ".", "scene", ".", "Scene", "(", ")", "\n", "for", "box", "in", "scene_bbox", ":", "\n", "        ", "scene", ".", "add_geometry", "(", "convert_oriented_box_to_trimesh_fmt", "(", "box", ")", ")", "\n", "\n", "", "mesh_list", "=", "trimesh", ".", "util", ".", "concatenate", "(", "scene", ".", "dump", "(", ")", ")", "\n", "# save to ply file    ", "\n", "trimesh", ".", "io", ".", "export", ".", "export_mesh", "(", "mesh_list", ",", "out_filename", ",", "file_type", "=", "'ply'", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_lines_as_cylinders": [[466, 485], ["trimesh.scene.Scene", "trimesh.util.concatenate", "trimesh.io.export.export_mesh", "trimesh.geometry.align_vectors", "numpy.sqrt", "trimesh.scene.Scene.add_geometry", "trimesh.scene.Scene.dump", "numpy.dot", "trimesh.creation.cylinder"], "function", ["None"], ["", "def", "write_lines_as_cylinders", "(", "pcl", ",", "filename", ",", "rad", "=", "0.005", ",", "res", "=", "64", ")", ":", "\n", "    ", "\"\"\"Create lines represented as cylinders connecting pairs of 3D points\n    Args:\n        pcl: (N x 2 x 3 numpy array): N pairs of xyz pos             \n        filename: (string) filename for the output mesh (ply) file\n        rad: radius for the cylinder\n        res: number of sections used to create the cylinder\n    \"\"\"", "\n", "scene", "=", "trimesh", ".", "scene", ".", "Scene", "(", ")", "\n", "for", "src", ",", "tgt", "in", "pcl", ":", "\n", "# compute line", "\n", "        ", "vec", "=", "tgt", "-", "src", "\n", "M", "=", "trimesh", ".", "geometry", ".", "align_vectors", "(", "[", "0", ",", "0", ",", "1", "]", ",", "vec", ",", "False", ")", "\n", "vec", "=", "tgt", "-", "src", "# compute again since align_vectors modifies vec in-place!", "\n", "M", "[", ":", "3", ",", "3", "]", "=", "0.5", "*", "src", "+", "0.5", "*", "tgt", "\n", "height", "=", "np", ".", "sqrt", "(", "np", ".", "dot", "(", "vec", ",", "vec", ")", ")", "\n", "scene", ".", "add_geometry", "(", "trimesh", ".", "creation", ".", "cylinder", "(", "radius", "=", "rad", ",", "height", "=", "height", ",", "sections", "=", "res", ",", "transform", "=", "M", ")", ")", "\n", "", "mesh_list", "=", "trimesh", ".", "util", ".", "concatenate", "(", "scene", ".", "dump", "(", ")", ")", "\n", "trimesh", ".", "io", ".", "export", ".", "export_mesh", "(", "mesh_list", ",", "f'{filename}.ply'", ",", "file_type", "=", "'ply'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.metric_util.multi_scene_precision_recall": [[27, 55], ["range", "torch.is_tensor", "torch.is_tensor", "numpy.ones", "numpy.ones", "metric_util.single_scene_precision_recall", "metric_util.precision_recall"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.metric_util.single_scene_precision_recall", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.metric_util.precision_recall"], ["def", "multi_scene_precision_recall", "(", "labels", ",", "pred", ",", "iou_thresh", ",", "conf_thresh", ",", "label_mask", ",", "pred_mask", "=", "None", ")", ":", "\n", "    ", "'''\n    Args:\n        labels: (B, N, 6)\n        pred: (B, M, 6)\n        iou_thresh: scalar\n        conf_thresh: scalar\n        label_mask: (B, N,) with values in 0 or 1 to indicate which GT boxes to consider.\n        pred_mask: (B, M,) with values in 0 or 1 to indicate which PRED boxes to consider.\n    Returns:\n        TP,FP,FN,Precision,Recall\n    '''", "\n", "# Make sure the masks are not Torch tensor, otherwise the mask==1 returns uint8 array instead", "\n", "# of True/False array as in numpy", "\n", "assert", "(", "not", "torch", ".", "is_tensor", "(", "label_mask", ")", ")", "\n", "assert", "(", "not", "torch", ".", "is_tensor", "(", "pred_mask", ")", ")", "\n", "TP", ",", "FP", ",", "FN", "=", "0", ",", "0", ",", "0", "\n", "if", "label_mask", "is", "None", ":", "label_mask", "=", "np", ".", "ones", "(", "(", "labels", ".", "shape", "[", "0", "]", ",", "labels", ".", "shape", "[", "1", "]", ")", ")", "\n", "if", "pred_mask", "is", "None", ":", "pred_mask", "=", "np", ".", "ones", "(", "(", "pred", ".", "shape", "[", "0", "]", ",", "pred", ".", "shape", "[", "1", "]", ")", ")", "\n", "for", "batch_idx", "in", "range", "(", "labels", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "TP_i", ",", "FP_i", ",", "FN_i", "=", "single_scene_precision_recall", "(", "labels", "[", "batch_idx", ",", "label_mask", "[", "batch_idx", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "pred", "[", "batch_idx", ",", "pred_mask", "[", "batch_idx", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "iou_thresh", ",", "conf_thresh", ")", "\n", "TP", "+=", "TP_i", "\n", "FP", "+=", "FP_i", "\n", "FN", "+=", "FN_i", "\n", "\n", "", "return", "TP", ",", "FP", ",", "FN", ",", "precision_recall", "(", "TP", ",", "FP", ",", "FN", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.metric_util.single_scene_precision_recall": [[57, 93], ["numpy.zeros", "range", "good_match_arr.any().sum", "range", "good_match_arr.any().sum", "metric_util.calc_iou", "good_match_arr.any", "good_match_arr.any", "numpy.where"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.metric_util.calc_iou"], ["", "def", "single_scene_precision_recall", "(", "labels", ",", "pred", ",", "iou_thresh", ",", "conf_thresh", ")", ":", "\n", "    ", "\"\"\"Compute P and R for predicted bounding boxes. Ignores classes!\n    Args:\n        labels: (N x bbox) ground-truth bounding boxes (6 dims) \n        pred: (M x (bbox + conf)) predicted bboxes with confidence and maybe classification\n    Returns:\n        TP, FP, FN\n    \"\"\"", "\n", "\n", "\n", "# for each pred box with high conf (C), compute IoU with all gt boxes. ", "\n", "# TP = number of times IoU > th ; FP = C - TP ", "\n", "# FN - number of scene objects without good match", "\n", "\n", "gt_bboxes", "=", "labels", "[", ":", ",", ":", "6", "]", "\n", "\n", "num_scene_bboxes", "=", "gt_bboxes", ".", "shape", "[", "0", "]", "\n", "conf", "=", "pred", "[", ":", ",", "6", "]", "\n", "\n", "conf_pred_bbox", "=", "pred", "[", "np", ".", "where", "(", "conf", ">", "conf_thresh", ")", "[", "0", "]", ",", ":", "6", "]", "\n", "num_conf_pred_bboxes", "=", "conf_pred_bbox", ".", "shape", "[", "0", "]", "\n", "\n", "# init an array to keep iou between generated and scene bboxes", "\n", "iou_arr", "=", "np", ".", "zeros", "(", "[", "num_conf_pred_bboxes", ",", "num_scene_bboxes", "]", ")", "\n", "for", "g_idx", "in", "range", "(", "num_conf_pred_bboxes", ")", ":", "\n", "        ", "for", "s_idx", "in", "range", "(", "num_scene_bboxes", ")", ":", "\n", "            ", "iou_arr", "[", "g_idx", ",", "s_idx", "]", "=", "calc_iou", "(", "conf_pred_bbox", "[", "g_idx", ",", ":", "]", ",", "gt_bboxes", "[", "s_idx", ",", ":", "]", ")", "\n", "\n", "\n", "", "", "good_match_arr", "=", "(", "iou_arr", ">=", "iou_thresh", ")", "\n", "\n", "TP", "=", "good_match_arr", ".", "any", "(", "axis", "=", "1", ")", ".", "sum", "(", ")", "\n", "FP", "=", "num_conf_pred_bboxes", "-", "TP", "\n", "FN", "=", "num_scene_bboxes", "-", "good_match_arr", ".", "any", "(", "axis", "=", "0", ")", ".", "sum", "(", ")", "\n", "\n", "return", "TP", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.metric_util.precision_recall": [[95, 99], ["None"], "function", ["None"], ["", "def", "precision_recall", "(", "TP", ",", "FP", ",", "FN", ")", ":", "\n", "    ", "Prec", "=", "1.0", "*", "TP", "/", "(", "TP", "+", "FP", ")", "if", "TP", "+", "FP", ">", "0", "else", "0", "\n", "Rec", "=", "1.0", "*", "TP", "/", "(", "TP", "+", "FN", ")", "\n", "return", "Prec", ",", "Rec", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.metric_util.calc_iou": [[101, 124], ["numpy.array().min", "numpy.array().max", "box_a[].prod", "box_b[].prod", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "calc_iou", "(", "box_a", ",", "box_b", ")", ":", "\n", "    ", "\"\"\"Computes IoU of two axis aligned bboxes.\n    Args:\n        box_a, box_b: 6D of center and lengths        \n    Returns:\n        iou\n    \"\"\"", "\n", "\n", "max_a", "=", "box_a", "[", "0", ":", "3", "]", "+", "box_a", "[", "3", ":", "6", "]", "/", "2", "\n", "max_b", "=", "box_b", "[", "0", ":", "3", "]", "+", "box_b", "[", "3", ":", "6", "]", "/", "2", "\n", "min_max", "=", "np", ".", "array", "(", "[", "max_a", ",", "max_b", "]", ")", ".", "min", "(", "0", ")", "\n", "\n", "min_a", "=", "box_a", "[", "0", ":", "3", "]", "-", "box_a", "[", "3", ":", "6", "]", "/", "2", "\n", "min_b", "=", "box_b", "[", "0", ":", "3", "]", "-", "box_b", "[", "3", ":", "6", "]", "/", "2", "\n", "max_min", "=", "np", ".", "array", "(", "[", "min_a", ",", "min_b", "]", ")", ".", "max", "(", "0", ")", "\n", "if", "not", "(", "(", "min_max", ">", "max_min", ")", ".", "all", "(", ")", ")", ":", "\n", "        ", "return", "0.0", "\n", "\n", "", "intersection", "=", "(", "min_max", "-", "max_min", ")", ".", "prod", "(", ")", "\n", "vol_a", "=", "box_a", "[", "3", ":", "6", "]", ".", "prod", "(", ")", "\n", "vol_b", "=", "box_b", "[", "3", ":", "6", "]", ".", "prod", "(", ")", "\n", "union", "=", "vol_a", "+", "vol_b", "-", "intersection", "\n", "return", "1.0", "*", "intersection", "/", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_logger.Logger.__init__": [[19, 22], ["tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "log_dir", ")", ":", "\n", "        ", "\"\"\"Create a summary writer logging to log_dir.\"\"\"", "\n", "self", ".", "writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_logger.Logger.scalar_summary": [[23, 27], ["tensorflow.Summary", "tensorflow.Summary", "tf_logger.Logger.writer.add_summary", "tensorflow.Summary.Value", "tensorflow.Summary.Value"], "methods", ["None"], ["", "def", "scalar_summary", "(", "self", ",", "tag", ",", "value", ",", "step", ")", ":", "\n", "        ", "\"\"\"Log a scalar variable.\"\"\"", "\n", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "tag", ",", "simple_value", "=", "value", ")", "]", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_logger.Logger.image_summary": [[28, 50], ["enumerate", "tensorflow.Summary", "tensorflow.Summary", "tf_logger.Logger.writer.add_summary", "scipy.misc.toimage().save", "tensorflow.Summary.Image", "tensorflow.Summary.Image", "img_summaries.append", "StringIO", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "BytesIO", "scipy.misc.toimage", "BytesIO.getvalue"], "methods", ["None"], ["", "def", "image_summary", "(", "self", ",", "tag", ",", "images", ",", "step", ")", ":", "\n", "        ", "\"\"\"Log a list of images.\"\"\"", "\n", "\n", "img_summaries", "=", "[", "]", "\n", "for", "i", ",", "img", "in", "enumerate", "(", "images", ")", ":", "\n", "# Write the image to a string", "\n", "            ", "try", ":", "\n", "                ", "s", "=", "StringIO", "(", ")", "\n", "", "except", ":", "\n", "                ", "s", "=", "BytesIO", "(", ")", "\n", "", "scipy", ".", "misc", ".", "toimage", "(", "img", ")", ".", "save", "(", "s", ",", "format", "=", "\"png\"", ")", "\n", "\n", "# Create an Image object", "\n", "img_sum", "=", "tf", ".", "Summary", ".", "Image", "(", "encoded_image_string", "=", "s", ".", "getvalue", "(", ")", ",", "\n", "height", "=", "img", ".", "shape", "[", "0", "]", ",", "\n", "width", "=", "img", ".", "shape", "[", "1", "]", ")", "\n", "# Create a Summary value", "\n", "img_summaries", ".", "append", "(", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'%s/%d'", "%", "(", "tag", ",", "i", ")", ",", "image", "=", "img_sum", ")", ")", "\n", "\n", "# Create and write Summary", "\n", "", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "img_summaries", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_logger.Logger.histo_summary": [[51, 78], ["numpy.histogram", "tensorflow.HistogramProto", "tensorflow.HistogramProto", "float", "float", "int", "float", "float", "tensorflow.Summary", "tensorflow.Summary", "tf_logger.Logger.writer.add_summary", "tf_logger.Logger.writer.flush", "numpy.min", "numpy.max", "numpy.prod", "numpy.sum", "numpy.sum", "tensorflow.HistogramProto.bucket_limit.append", "tensorflow.HistogramProto.bucket.append", "tensorflow.Summary.Value", "tensorflow.Summary.Value"], "methods", ["None"], ["", "def", "histo_summary", "(", "self", ",", "tag", ",", "values", ",", "step", ",", "bins", "=", "1000", ")", ":", "\n", "        ", "\"\"\"Log a histogram of the tensor of values.\"\"\"", "\n", "\n", "# Create a histogram using numpy", "\n", "counts", ",", "bin_edges", "=", "np", ".", "histogram", "(", "values", ",", "bins", "=", "bins", ")", "\n", "\n", "# Fill the fields of the histogram proto", "\n", "hist", "=", "tf", ".", "HistogramProto", "(", ")", "\n", "hist", ".", "min", "=", "float", "(", "np", ".", "min", "(", "values", ")", ")", "\n", "hist", ".", "max", "=", "float", "(", "np", ".", "max", "(", "values", ")", ")", "\n", "hist", ".", "num", "=", "int", "(", "np", ".", "prod", "(", "values", ".", "shape", ")", ")", "\n", "hist", ".", "sum", "=", "float", "(", "np", ".", "sum", "(", "values", ")", ")", "\n", "hist", ".", "sum_squares", "=", "float", "(", "np", ".", "sum", "(", "values", "**", "2", ")", ")", "\n", "\n", "# Drop the start of the first bin", "\n", "bin_edges", "=", "bin_edges", "[", "1", ":", "]", "\n", "\n", "# Add bin edges and counts", "\n", "for", "edge", "in", "bin_edges", ":", "\n", "            ", "hist", ".", "bucket_limit", ".", "append", "(", "edge", ")", "\n", "", "for", "c", "in", "counts", ":", "\n", "            ", "hist", ".", "bucket", ".", "append", "(", "c", ")", "\n", "\n", "# Create and write Summary", "\n", "", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "tag", ",", "histo", "=", "hist", ")", "]", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "self", ".", "writer", ".", "flush", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.polygon_clip": [[23, 70], ["box_util.polygon_clip.inside"], "function", ["None"], ["", "def", "polygon_clip", "(", "subjectPolygon", ",", "clipPolygon", ")", ":", "\n", "   ", "\"\"\" Clip a polygon with another polygon.\n\n   Ref: https://rosettacode.org/wiki/Sutherland-Hodgman_polygon_clipping#Python\n\n   Args:\n     subjectPolygon: a list of (x,y) 2d points, any polygon.\n     clipPolygon: a list of (x,y) 2d points, has to be *convex*\n   Note:\n     **points have to be counter-clockwise ordered**\n\n   Return:\n     a list of (x,y) vertex point for the intersection polygon.\n   \"\"\"", "\n", "def", "inside", "(", "p", ")", ":", "\n", "      ", "return", "(", "cp2", "[", "0", "]", "-", "cp1", "[", "0", "]", ")", "*", "(", "p", "[", "1", "]", "-", "cp1", "[", "1", "]", ")", ">", "(", "cp2", "[", "1", "]", "-", "cp1", "[", "1", "]", ")", "*", "(", "p", "[", "0", "]", "-", "cp1", "[", "0", "]", ")", "\n", "\n", "", "def", "computeIntersection", "(", ")", ":", "\n", "      ", "dc", "=", "[", "cp1", "[", "0", "]", "-", "cp2", "[", "0", "]", ",", "cp1", "[", "1", "]", "-", "cp2", "[", "1", "]", "]", "\n", "dp", "=", "[", "s", "[", "0", "]", "-", "e", "[", "0", "]", ",", "s", "[", "1", "]", "-", "e", "[", "1", "]", "]", "\n", "n1", "=", "cp1", "[", "0", "]", "*", "cp2", "[", "1", "]", "-", "cp1", "[", "1", "]", "*", "cp2", "[", "0", "]", "\n", "n2", "=", "s", "[", "0", "]", "*", "e", "[", "1", "]", "-", "s", "[", "1", "]", "*", "e", "[", "0", "]", "\n", "n3", "=", "1.0", "/", "(", "dc", "[", "0", "]", "*", "dp", "[", "1", "]", "-", "dc", "[", "1", "]", "*", "dp", "[", "0", "]", ")", "\n", "return", "[", "(", "n1", "*", "dp", "[", "0", "]", "-", "n2", "*", "dc", "[", "0", "]", ")", "*", "n3", ",", "(", "n1", "*", "dp", "[", "1", "]", "-", "n2", "*", "dc", "[", "1", "]", ")", "*", "n3", "]", "\n", "\n", "", "outputList", "=", "subjectPolygon", "\n", "cp1", "=", "clipPolygon", "[", "-", "1", "]", "\n", "\n", "for", "clipVertex", "in", "clipPolygon", ":", "\n", "      ", "cp2", "=", "clipVertex", "\n", "inputList", "=", "outputList", "\n", "outputList", "=", "[", "]", "\n", "s", "=", "inputList", "[", "-", "1", "]", "\n", "\n", "for", "subjectVertex", "in", "inputList", ":", "\n", "         ", "e", "=", "subjectVertex", "\n", "if", "inside", "(", "e", ")", ":", "\n", "            ", "if", "not", "inside", "(", "s", ")", ":", "\n", "               ", "outputList", ".", "append", "(", "computeIntersection", "(", ")", ")", "\n", "", "outputList", ".", "append", "(", "e", ")", "\n", "", "elif", "inside", "(", "s", ")", ":", "\n", "            ", "outputList", ".", "append", "(", "computeIntersection", "(", ")", ")", "\n", "", "s", "=", "e", "\n", "", "cp1", "=", "cp2", "\n", "if", "len", "(", "outputList", ")", "==", "0", ":", "\n", "          ", "return", "None", "\n", "", "", "return", "(", "outputList", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.poly_area": [[72, 75], ["numpy.abs", "numpy.dot", "numpy.dot", "numpy.roll", "numpy.roll"], "function", ["None"], ["", "def", "poly_area", "(", "x", ",", "y", ")", ":", "\n", "    ", "\"\"\" Ref: http://stackoverflow.com/questions/24467972/calculate-area-of-polygon-given-x-y-coordinates \"\"\"", "\n", "return", "0.5", "*", "np", ".", "abs", "(", "np", ".", "dot", "(", "x", ",", "np", ".", "roll", "(", "y", ",", "1", ")", ")", "-", "np", ".", "dot", "(", "y", ",", "np", ".", "roll", "(", "x", ",", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.convex_hull_intersection": [[77, 88], ["box_util.polygon_clip", "scipy.spatial.ConvexHull"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.polygon_clip"], ["", "def", "convex_hull_intersection", "(", "p1", ",", "p2", ")", ":", "\n", "    ", "\"\"\" Compute area of two convex hull's intersection area.\n        p1,p2 are a list of (x,y) tuples of hull vertices.\n        return a list of (x,y) for the intersection and its volume\n    \"\"\"", "\n", "inter_p", "=", "polygon_clip", "(", "p1", ",", "p2", ")", "\n", "if", "inter_p", "is", "not", "None", ":", "\n", "        ", "hull_inter", "=", "ConvexHull", "(", "inter_p", ")", "\n", "return", "inter_p", ",", "hull_inter", ".", "volume", "\n", "", "else", ":", "\n", "        ", "return", "None", ",", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_vol": [[90, 96], ["numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "", "def", "box3d_vol", "(", "corners", ")", ":", "\n", "    ", "''' corners: (8,3) no assumption on axis direction '''", "\n", "a", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "corners", "[", "0", ",", ":", "]", "-", "corners", "[", "1", ",", ":", "]", ")", "**", "2", ")", ")", "\n", "b", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "corners", "[", "1", ",", ":", "]", "-", "corners", "[", "2", ",", ":", "]", ")", "**", "2", ")", ")", "\n", "c", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "corners", "[", "0", ",", ":", "]", "-", "corners", "[", "4", ",", ":", "]", ")", "**", "2", ")", ")", "\n", "return", "a", "*", "b", "*", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_vol_batch": [[98, 104], ["numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["", "def", "box3d_vol_batch", "(", "corners", ")", ":", "\n", "    ", "''' corners: (n,8,3) no assumption on axis direction '''", "\n", "l", "=", "np", ".", "sqrt", "(", "np", ".", "linalg", ".", "norm", "(", "corners", "[", ":", ",", "1", ",", ":", "]", "-", "corners", "[", ":", ",", "2", ",", ":", "]", ",", "axis", "=", "1", ")", ")", "\n", "w", "=", "np", ".", "sqrt", "(", "np", ".", "linalg", ".", "norm", "(", "corners", "[", ":", ",", "0", ",", ":", "]", "-", "corners", "[", ":", ",", "1", ",", ":", "]", ",", "axis", "=", "1", ")", ")", "\n", "h", "=", "np", ".", "sqrt", "(", "np", ".", "linalg", ".", "norm", "(", "corners", "[", ":", ",", "0", ",", ":", "]", "-", "corners", "[", ":", ",", "4", ",", ":", "]", ",", "axis", "=", "1", ")", ")", "\n", "return", "l", "*", "w", "*", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.is_clockwise": [[106, 110], ["numpy.dot", "numpy.dot", "numpy.roll", "numpy.roll"], "function", ["None"], ["", "def", "is_clockwise", "(", "p", ")", ":", "\n", "    ", "x", "=", "p", "[", ":", ",", "0", "]", "\n", "y", "=", "p", "[", ":", ",", "1", "]", "\n", "return", "np", ".", "dot", "(", "x", ",", "np", ".", "roll", "(", "y", ",", "1", ")", ")", "-", "np", ".", "dot", "(", "y", ",", "np", ".", "roll", "(", "x", ",", "1", ")", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou": [[112, 138], ["box_util.poly_area", "box_util.poly_area", "box_util.convex_hull_intersection", "min", "max", "box_util.box3d_vol", "box_util.box3d_vol", "max", "range", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.poly_area", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.poly_area", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.convex_hull_intersection", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_vol", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_vol"], ["", "def", "box3d_iou", "(", "corners1", ",", "corners2", ")", ":", "\n", "    ", "''' Compute 3D bounding box IoU.\n\n    Input:\n        corners1: numpy array (8,3), assume up direction is negative Y\n        corners2: numpy array (8,3), assume up direction is negative Y\n    Output:\n        iou: 3D bounding box IoU\n        iou_2d: bird's eye view 2D bounding box IoU\n\n    todo (rqi): add more description on corner points' orders.\n    '''", "\n", "# corner points are in counter clockwise order", "\n", "rect1", "=", "[", "(", "corners1", "[", "i", ",", "0", "]", ",", "corners1", "[", "i", ",", "2", "]", ")", "for", "i", "in", "range", "(", "3", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "rect2", "=", "[", "(", "corners2", "[", "i", ",", "0", "]", ",", "corners2", "[", "i", ",", "2", "]", ")", "for", "i", "in", "range", "(", "3", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "area1", "=", "poly_area", "(", "np", ".", "array", "(", "rect1", ")", "[", ":", ",", "0", "]", ",", "np", ".", "array", "(", "rect1", ")", "[", ":", ",", "1", "]", ")", "\n", "area2", "=", "poly_area", "(", "np", ".", "array", "(", "rect2", ")", "[", ":", ",", "0", "]", ",", "np", ".", "array", "(", "rect2", ")", "[", ":", ",", "1", "]", ")", "\n", "inter", ",", "inter_area", "=", "convex_hull_intersection", "(", "rect1", ",", "rect2", ")", "\n", "iou_2d", "=", "inter_area", "/", "(", "area1", "+", "area2", "-", "inter_area", ")", "\n", "ymax", "=", "min", "(", "corners1", "[", "0", ",", "1", "]", ",", "corners2", "[", "0", ",", "1", "]", ")", "\n", "ymin", "=", "max", "(", "corners1", "[", "4", ",", "1", "]", ",", "corners2", "[", "4", ",", "1", "]", ")", "\n", "inter_vol", "=", "inter_area", "*", "max", "(", "0.0", ",", "ymax", "-", "ymin", ")", "\n", "vol1", "=", "box3d_vol", "(", "corners1", ")", "\n", "vol2", "=", "box3d_vol", "(", "corners2", ")", "\n", "iou", "=", "inter_vol", "/", "(", "vol1", "+", "vol2", "-", "inter_vol", ")", "\n", "return", "iou", ",", "iou_2d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou_batch_gpu": [[140, 150], ["boxes_iou3d_gpu"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu"], ["", "def", "box3d_iou_batch_gpu", "(", "bbox1", ",", "bbox2", ")", ":", "\n", "    ", "\"\"\" CUDA version compute 3D non-axis-aligned bounding box IoU.\n    Input:\n        bbox1: torch tensor, (x,y,z,dx,dy,dz,heading) this heading = -heading of Votenet\n        bbox2: torch tensor, (x,y,z,dx,dy,dz,heading)\n    Output:\n        iou: 3D bounding box IoU\n        iou_2d: bird's eye view 2D bounding box IoU\n    \"\"\"", "\n", "return", "boxes_iou3d_gpu", "(", "bbox1", ",", "bbox2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.boxes3d_iou_batch": [[152, 187], ["box_util.box3d_vol_batch", "box_util.box3d_vol_batch", "numpy.zeros", "range", "numpy.where", "numpy.where", "numpy.where", "numpy.zeros", "range", "range", "box_util.convex_hull_intersection", "range"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_vol_batch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_vol_batch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.convex_hull_intersection"], ["", "def", "boxes3d_iou_batch", "(", "batch_corners1", ",", "batch_corners2", ")", ":", "\n", "    ", "'''\n    Input:\n        batch_corners1: numpy array (n,8,3), assume up direction is negative Y\n        batch_corners2: numpy array (m,8,3), assume up direction is negative Y\n    Output:\n        batch_iou: 3D bounding box IoU (n,m)\n    '''", "\n", "n", "=", "batch_corners1", ".", "shape", "[", "0", "]", "\n", "m", "=", "batch_corners2", ".", "shape", "[", "1", "]", "#suppose m < n", "\n", "\n", "vol_batch1", "=", "box3d_vol_batch", "(", "batch_corners1", ")", "#n", "\n", "vol_batch2", "=", "box3d_vol_batch", "(", "batch_corners2", ")", "#m", "\n", "\n", "y_max_batch1", "=", "batch_corners1", "[", ":", ",", "0", ",", "1", "]", "#n", "\n", "y_min_batch1", "=", "batch_corners1", "[", ":", ",", "4", ",", "1", "]", "#n", "\n", "y_max_batch2", "=", "batch_corners2", "[", ":", ",", "0", ",", "1", "]", "#m", "\n", "y_min_batch2", "=", "batch_corners2", "[", ":", ",", "4", ",", "1", "]", "#m", "\n", "\n", "batch_iou", "=", "np", ".", "zeros", "(", "(", "n", ",", "m", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "        ", "rect2", "=", "[", "(", "batch_corners2", "[", "i", ",", "k", ",", "0", "]", ",", "batch_corners2", "[", "i", ",", "k", ",", "2", "]", ")", "for", "k", "in", "range", "(", "3", ",", "-", "1", ",", "-", "1", ")", "]", "#[((0,0),(0,2)),..., ((3,0),(3,2))]", "\n", "vol2", "=", "vol_batch2", "[", "i", "]", "\n", "\n", "y_max", "=", "np", ".", "where", "(", "y_max_batch1", "-", "y_max_batch2", "[", "i", "]", "<", "0", ",", "y_max_batch1", ",", "y_max_batch2", "[", "i", "]", ")", "#n", "\n", "y_min", "=", "np", ".", "where", "(", "y_min_batch1", "-", "y_min_batch2", "[", "i", "]", ">", "0", ",", "y_min_batch1", ",", "y_min_batch2", "[", "i", "]", ")", "#n", "\n", "inter_y", "=", "np", ".", "where", "(", "y_max", "-", "y_min", "<", "0.", ",", "0.", ",", "y_max", "-", "y_min", ")", "#n", "\n", "inter_area", "=", "np", ".", "zeros", "(", "(", "n", ")", ",", "dtype", "=", "np", ".", "float32", ")", "#n", "\n", "for", "j", "in", "range", "(", "n", ")", ":", "\n", "            ", "rect1", "=", "[", "(", "batch_corners1", "[", "j", ",", "k", ",", "0", "]", ",", "batch_corners1", "[", "j", ",", "k", ",", "2", "]", ")", "for", "k", "in", "range", "(", "3", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "inter_area", "[", "j", "]", "=", "convex_hull_intersection", "(", "rect1", ",", "rect2", ")", "[", "1", "]", "\n", "", "inter_vol", "=", "inter_y", "*", "inter_area", "#n", "\n", "batch_iou", "[", ":", ",", "i", "]", "=", "inter_vol", "/", "(", "vol_batch1", "+", "vol2", "-", "inter_vol", ")", "\n", "\n", "", "return", "batch_iou", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.get_iou": [[189, 238], ["max", "max", "min", "min", "float"], "function", ["None"], ["", "def", "get_iou", "(", "bb1", ",", "bb2", ")", ":", "\n", "    ", "\"\"\"\n    Calculate the Intersection over Union (IoU) of two 2D bounding boxes.\n\n    Parameters\n    ----------\n    bb1 : dict\n        Keys: {'x1', 'x2', 'y1', 'y2'}\n        The (x1, y1) position is at the top left corner,\n        the (x2, y2) position is at the bottom right corner\n    bb2 : dict\n        Keys: {'x1', 'x2', 'y1', 'y2'}\n        The (x, y) position is at the top left corner,\n        the (x2, y2) position is at the bottom right corner\n\n    Returns\n    -------\n    float\n        in [0, 1]\n    \"\"\"", "\n", "assert", "bb1", "[", "'x1'", "]", "<", "bb1", "[", "'x2'", "]", "\n", "assert", "bb1", "[", "'y1'", "]", "<", "bb1", "[", "'y2'", "]", "\n", "assert", "bb2", "[", "'x1'", "]", "<", "bb2", "[", "'x2'", "]", "\n", "assert", "bb2", "[", "'y1'", "]", "<", "bb2", "[", "'y2'", "]", "\n", "\n", "# determine the coordinates of the intersection rectangle", "\n", "x_left", "=", "max", "(", "bb1", "[", "'x1'", "]", ",", "bb2", "[", "'x1'", "]", ")", "\n", "y_top", "=", "max", "(", "bb1", "[", "'y1'", "]", ",", "bb2", "[", "'y1'", "]", ")", "\n", "x_right", "=", "min", "(", "bb1", "[", "'x2'", "]", ",", "bb2", "[", "'x2'", "]", ")", "\n", "y_bottom", "=", "min", "(", "bb1", "[", "'y2'", "]", ",", "bb2", "[", "'y2'", "]", ")", "\n", "\n", "if", "x_right", "<", "x_left", "or", "y_bottom", "<", "y_top", ":", "\n", "        ", "return", "0.0", "\n", "\n", "# The intersection of two axis-aligned bounding boxes is always an", "\n", "# axis-aligned bounding box", "\n", "", "intersection_area", "=", "(", "x_right", "-", "x_left", ")", "*", "(", "y_bottom", "-", "y_top", ")", "\n", "\n", "# compute the area of both AABBs", "\n", "bb1_area", "=", "(", "bb1", "[", "'x2'", "]", "-", "bb1", "[", "'x1'", "]", ")", "*", "(", "bb1", "[", "'y2'", "]", "-", "bb1", "[", "'y1'", "]", ")", "\n", "bb2_area", "=", "(", "bb2", "[", "'x2'", "]", "-", "bb2", "[", "'x1'", "]", ")", "*", "(", "bb2", "[", "'y2'", "]", "-", "bb2", "[", "'y1'", "]", ")", "\n", "\n", "# compute the intersection over union by taking the intersection", "\n", "# area and dividing it by the sum of prediction + ground-truth", "\n", "# areas - the interesection area", "\n", "iou", "=", "intersection_area", "/", "float", "(", "bb1_area", "+", "bb2_area", "-", "intersection_area", ")", "\n", "assert", "iou", ">=", "0.0", "\n", "assert", "iou", "<=", "1.0", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box2d_iou": [[240, 251], ["box_util.get_iou"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.get_iou"], ["", "def", "box2d_iou", "(", "box1", ",", "box2", ")", ":", "\n", "    ", "''' Compute 2D bounding box IoU.\n\n    Input:\n        box1: tuple of (xmin,ymin,xmax,ymax)\n        box2: tuple of (xmin,ymin,xmax,ymax)\n    Output:\n        iou: 2D IoU scalar\n    '''", "\n", "return", "get_iou", "(", "{", "'x1'", ":", "box1", "[", "0", "]", ",", "'y1'", ":", "box1", "[", "1", "]", ",", "'x2'", ":", "box1", "[", "2", "]", ",", "'y2'", ":", "box1", "[", "3", "]", "}", ",", "{", "'x1'", ":", "box2", "[", "0", "]", ",", "'y1'", ":", "box2", "[", "1", "]", ",", "'x2'", ":", "box2", "[", "2", "]", ",", "'y2'", ":", "box2", "[", "3", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.rotz": [[256, 264], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "rotz", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the Z-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "R", "=", "np", ".", "array", "(", "[", "[", "c", ",", "-", "s", ",", "0", "]", ",", "\n", "[", "s", ",", "c", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "return", "R", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.roty": [[266, 273], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "roty", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "0", ",", "s", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "-", "s", ",", "0", ",", "c", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.roty_batch": [[275, 290], ["numpy.zeros", "numpy.cos", "numpy.sin", "tuple", "list"], "function", ["None"], ["", "def", "roty_batch", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\n    t: (x1,x2,...xn)\n    return: (x1,x2,...,xn,3,3)\n    \"\"\"", "\n", "input_shape", "=", "t", ".", "shape", "\n", "output", "=", "np", ".", "zeros", "(", "tuple", "(", "list", "(", "input_shape", ")", "+", "[", "3", ",", "3", "]", ")", ")", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "output", "[", "...", ",", "0", ",", "0", "]", "=", "c", "\n", "output", "[", "...", ",", "0", ",", "2", "]", "=", "s", "\n", "output", "[", "...", ",", "1", ",", "1", "]", "=", "1", "\n", "output", "[", "...", ",", "2", ",", "0", "]", "=", "-", "s", "\n", "output", "[", "...", ",", "2", ",", "2", "]", "=", "c", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.rot_gpu": [[292, 307], ["torch.zeros().cuda", "torch.cos", "torch.sin", "torch.zeros", "tuple", "list"], "function", ["None"], ["", "def", "rot_gpu", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the upright axis.\n    t: (x1,x2,...xn)\n    return: (x1,x2,...,xn,3,3)\n    \"\"\"", "\n", "input_shape", "=", "t", ".", "shape", "\n", "output", "=", "torch", ".", "zeros", "(", "tuple", "(", "list", "(", "input_shape", ")", "+", "[", "3", ",", "3", "]", ")", ")", ".", "cuda", "(", ")", "\n", "c", "=", "torch", ".", "cos", "(", "t", ")", "\n", "s", "=", "torch", ".", "sin", "(", "t", ")", "\n", "output", "[", "...", ",", "0", ",", "0", "]", "=", "c", "\n", "output", "[", "...", ",", "0", ",", "1", "]", "=", "s", "\n", "output", "[", "...", ",", "2", ",", "2", "]", "=", "1", "\n", "output", "[", "...", ",", "1", ",", "0", "]", "=", "-", "s", "\n", "output", "[", "...", ",", "1", ",", "1", "]", "=", "c", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.get_3d_box_depth": [[309, 333], ["box_util.rotz", "numpy.dot", "numpy.transpose", "numpy.vstack"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz"], ["", "def", "get_3d_box_depth", "(", "box_size", ",", "heading_angle", ",", "center", ")", ":", "\n", "    ", "''' box_size is array(l,w,h), heading_angle is radius clockwise from pos x axis, center is xyz of box center\n        output (8,3) array for 3D box cornders\n        Similar to utils/compute_orientation_3d\n            6 -------- 5\n           /|         /|\n          7 -------- 4 .\n          | |        | |\n          . 2 -------- 1\n          |/         |/\n          3 -------- 0\n\n    '''", "\n", "R", "=", "rotz", "(", "heading_angle", ")", "\n", "l", ",", "w", ",", "h", "=", "box_size", "\n", "x_corners", "=", "[", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", ",", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", "]", ";", "\n", "y_corners", "=", "[", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", ",", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", "]", ";", "\n", "z_corners", "=", "[", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", "]", ";", "\n", "corners_3d", "=", "np", ".", "dot", "(", "R", ",", "np", ".", "vstack", "(", "[", "x_corners", ",", "y_corners", ",", "z_corners", "]", ")", ")", "\n", "corners_3d", "[", "0", ",", ":", "]", "=", "corners_3d", "[", "0", ",", ":", "]", "+", "center", "[", "0", "]", "\n", "corners_3d", "[", "1", ",", ":", "]", "=", "corners_3d", "[", "1", ",", ":", "]", "+", "center", "[", "1", "]", "\n", "corners_3d", "[", "2", ",", ":", "]", "=", "corners_3d", "[", "2", ",", ":", "]", "+", "center", "[", "2", "]", "\n", "corners_3d", "=", "np", ".", "transpose", "(", "corners_3d", ")", "\n", "return", "corners_3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.get_3d_box": [[335, 359], ["box_util.roty", "numpy.dot", "numpy.transpose", "numpy.vstack"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.roty"], ["", "def", "get_3d_box", "(", "box_size", ",", "heading_angle", ",", "center", ")", ":", "\n", "    ", "''' box_size is array(l,w,h), heading_angle is radius clockwise from pos x axis, center is xyz of box center\n        output (8,3) array for 3D box cornders\n        Similar to utils/compute_orientation_3d\n            6 -------- 5\n           /|         /|\n          7 -------- 4 .\n          | |        | |\n          . 2 -------- 1\n          |/         |/\n          3 -------- 0\n\n    '''", "\n", "R", "=", "roty", "(", "heading_angle", ")", "\n", "l", ",", "w", ",", "h", "=", "box_size", "\n", "x_corners", "=", "[", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", ",", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", "]", ";", "\n", "y_corners", "=", "[", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", "]", ";", "\n", "z_corners", "=", "[", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", ",", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", "]", ";", "\n", "corners_3d", "=", "np", ".", "dot", "(", "R", ",", "np", ".", "vstack", "(", "[", "x_corners", ",", "y_corners", ",", "z_corners", "]", ")", ")", "\n", "corners_3d", "[", "0", ",", ":", "]", "=", "corners_3d", "[", "0", ",", ":", "]", "+", "center", "[", "0", "]", ";", "\n", "corners_3d", "[", "1", ",", ":", "]", "=", "corners_3d", "[", "1", ",", ":", "]", "+", "center", "[", "1", "]", ";", "\n", "corners_3d", "[", "2", ",", ":", "]", "=", "corners_3d", "[", "2", ",", ":", "]", "+", "center", "[", "2", "]", ";", "\n", "corners_3d", "=", "np", ".", "transpose", "(", "corners_3d", ")", "\n", "return", "corners_3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.get_3d_box_batch": [[361, 382], ["box_util.roty_batch", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.zeros", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.matmul", "numpy.expand_dims", "tuple", "len", "numpy.transpose", "range", "len", "tuple", "list", "len"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.roty_batch"], ["", "def", "get_3d_box_batch", "(", "box_size", ",", "heading_angle", ",", "center", ")", ":", "\n", "    ", "''' box_size: [x1,x2,...,xn,3]\n        heading_angle: [x1,x2,...,xn]\n        center: [x1,x2,...,xn,3]\n    Return:\n        [x1,x3,...,xn,8,3]\n    '''", "\n", "input_shape", "=", "heading_angle", ".", "shape", "\n", "R", "=", "roty_batch", "(", "heading_angle", ")", "\n", "l", "=", "np", ".", "expand_dims", "(", "box_size", "[", "...", ",", "0", "]", ",", "-", "1", ")", "# [x1,...,xn,1]", "\n", "w", "=", "np", ".", "expand_dims", "(", "box_size", "[", "...", ",", "1", "]", ",", "-", "1", ")", "\n", "h", "=", "np", ".", "expand_dims", "(", "box_size", "[", "...", ",", "2", "]", ",", "-", "1", ")", "\n", "corners_3d", "=", "np", ".", "zeros", "(", "tuple", "(", "list", "(", "input_shape", ")", "+", "[", "8", ",", "3", "]", ")", ")", "\n", "corners_3d", "[", "...", ",", ":", ",", "0", "]", "=", "np", ".", "concatenate", "(", "(", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", ",", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", ")", ",", "-", "1", ")", "\n", "corners_3d", "[", "...", ",", ":", ",", "1", "]", "=", "np", ".", "concatenate", "(", "(", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ")", ",", "-", "1", ")", "\n", "corners_3d", "[", "...", ",", ":", ",", "2", "]", "=", "np", ".", "concatenate", "(", "(", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", ",", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", ")", ",", "-", "1", ")", "\n", "tlist", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "input_shape", ")", ")", "]", "\n", "tlist", "+=", "[", "len", "(", "input_shape", ")", "+", "1", ",", "len", "(", "input_shape", ")", "]", "\n", "corners_3d", "=", "np", ".", "matmul", "(", "corners_3d", ",", "np", ".", "transpose", "(", "R", ",", "tuple", "(", "tlist", ")", ")", ")", "\n", "corners_3d", "+=", "np", ".", "expand_dims", "(", "center", ",", "-", "2", ")", "\n", "return", "corners_3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou_batch": [[384, 411], ["numpy.max", "numpy.max", "numpy.min", "numpy.min", "numpy.stack().max", "numpy.stack().min", "numpy.max", "np.max.prod", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.zeros"], "function", ["None"], ["", "def", "box3d_iou_batch", "(", "corners1", ",", "corners2", ")", ":", "\n", "    ", "''' Compute 3D bounding box IoU.\n\n    Input:\n        corners1: numpy array (8,3), assume up direction is negative Y\n        corners2: numpy array (8,3), assume up direction is negative Y\n    Output:\n        iou: 3D bounding box IoU\n        iou_2d: bird's eye view 2D bounding box IoU\n\n    TODO for simplicity this is aligned IoU\n    '''", "\n", "# corner points are in counter clockwise order", "\n", "max_a", "=", "np", ".", "max", "(", "corners1", ",", "axis", "=", "2", ")", "\n", "max_b", "=", "np", ".", "max", "(", "corners2", ",", "axis", "=", "2", ")", "\n", "min_a", "=", "np", ".", "min", "(", "corners1", ",", "axis", "=", "2", ")", "\n", "min_b", "=", "np", ".", "min", "(", "corners2", ",", "axis", "=", "2", ")", "\n", "\n", "max_min", "=", "np", ".", "stack", "(", "[", "min_a", ",", "min_b", "]", ",", "axis", "=", "2", ")", ".", "max", "(", "2", ")", "\n", "min_max", "=", "np", ".", "stack", "(", "[", "max_a", ",", "max_b", "]", ",", "axis", "=", "2", ")", ".", "min", "(", "2", ")", "\n", "vol_a", "=", "(", "max_a", "-", "min_a", ")", ".", "prod", "(", "axis", "=", "2", ")", "\n", "vol_b", "=", "(", "max_b", "-", "min_b", ")", ".", "prod", "(", "axis", "=", "2", ")", "\n", "diff", "=", "np", ".", "max", "(", "np", ".", "stack", "(", "[", "min_max", "-", "max_min", ",", "np", ".", "zeros", "(", "min_max", ".", "shape", ")", "]", ",", "axis", "=", "2", ")", ",", "axis", "=", "2", ")", "\n", "intersection", "=", "diff", ".", "prod", "(", "axis", "=", "2", ")", "\n", "# print(intersection.shape)", "\n", "union", "=", "vol_a", "+", "vol_b", "-", "intersection", "\n", "return", "1.0", "*", "intersection", "/", "(", "union", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou_gpu_axis_aligned": [[413, 440], ["diff.prod", "torch.max", "torch.max", "torch.min", "torch.min", "torch.stack().max", "torch.stack().min", "torch.max", "torch.stack", "torch.stack", "torch.stack", "torch.zeros().cuda", "torch.zeros"], "function", ["None"], ["", "def", "box3d_iou_gpu_axis_aligned", "(", "corners1", ",", "corners2", ")", ":", "\n", "    ", "''' Compute 3D bounding box IoU. Torch code that can be back propagated\n\n    Input:\n        corners1: numpy array (8,3), assume up direction is negative Y\n        corners2: numpy array (8,3), assume up direction is negative Y\n    Output:\n        iou: 3D bounding box IoU\n        iou_2d: bird's eye view 2D bounding box IoU\n\n    TODO for simplicity this is aligned IoU\n    '''", "\n", "# corner points are in counter clockwise order", "\n", "max_a", "=", "torch", ".", "max", "(", "corners1", ",", "dim", "=", "2", ")", "[", "0", "]", "\n", "max_b", "=", "torch", ".", "max", "(", "corners2", ",", "dim", "=", "2", ")", "[", "0", "]", "\n", "min_a", "=", "torch", ".", "min", "(", "corners1", ",", "dim", "=", "2", ")", "[", "0", "]", "\n", "min_b", "=", "torch", ".", "min", "(", "corners2", ",", "dim", "=", "2", ")", "[", "0", "]", "\n", "\n", "max_min", "=", "torch", ".", "stack", "(", "[", "min_a", ",", "min_b", "]", ",", "dim", "=", "2", ")", ".", "max", "(", "2", ")", "[", "0", "]", "\n", "min_max", "=", "torch", ".", "stack", "(", "[", "max_a", ",", "max_b", "]", ",", "dim", "=", "2", ")", ".", "min", "(", "2", ")", "[", "0", "]", "\n", "vol_a", "=", "(", "max_a", "-", "min_a", ")", ".", "prod", "(", "dim", "=", "2", ")", "\n", "vol_b", "=", "(", "max_b", "-", "min_b", ")", ".", "prod", "(", "dim", "=", "2", ")", "\n", "diff", "=", "torch", ".", "max", "(", "torch", ".", "stack", "(", "[", "min_max", "-", "max_min", ",", "torch", ".", "zeros", "(", "min_max", ".", "shape", ")", ".", "cuda", "(", ")", "]", ",", "dim", "=", "2", ")", ",", "dim", "=", "2", ")", "[", "0", "]", "\n", "intersection", "=", "diff", ".", "prod", "(", "dim", "=", "2", ")", "\n", "# print(intersection.shape)", "\n", "union", "=", "vol_a", "+", "vol_b", "-", "intersection", "\n", "return", "1.0", "*", "intersection", "/", "(", "union", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.corners3d_to_parameter": [[442, 470], ["numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.arccos", "numpy.zeros", "numpy.array", "numpy.array", "corners_3d.max", "corners_3d.min"], "function", ["None"], ["", "def", "corners3d_to_parameter", "(", "corners_3d", ")", ":", "\n", "    ", "'''represent 8 corner points as box parameters (center, size, heading_angle)\n            6 -------- 5\n           /|         /|\n          7 -------- 4 .\n          | |        | |\n          . 2 -------- 1\n          |/         |/\n          3 -------- 0\n    :param corners_3d: (8,3) array for 3D box corners in upright camera frame\n    :return: parameterized box: (7,) numpy array in depth frame\n         box_size is array(l,w,h), heading_angle is radius clockwise from pos x axis, center is xyz of box center\n    '''", "\n", "center", "=", "0.5", "*", "(", "corners_3d", ".", "max", "(", "0", ")", "+", "corners_3d", ".", "min", "(", "0", ")", ")", "\n", "x_side", "=", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "3", "]", "\n", "y_side", "=", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "4", "]", "\n", "z_side", "=", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "1", "]", "\n", "l", "=", "np", ".", "linalg", ".", "norm", "(", "x_side", ")", "\n", "w", "=", "np", ".", "linalg", ".", "norm", "(", "z_side", ")", "\n", "h", "=", "np", ".", "linalg", ".", "norm", "(", "y_side", ")", "\n", "heading_angle", "=", "np", ".", "arccos", "(", "x_side", "[", "0", "]", "/", "l", ")", "\n", "\n", "box_params", "=", "np", ".", "zeros", "(", "(", "7", ")", ")", "\n", "box_params", "[", "0", ":", "3", "]", "=", "np", ".", "array", "(", "[", "center", "[", "0", "]", ",", "center", "[", "2", "]", ",", "-", "center", "[", "1", "]", "]", ")", "\n", "box_params", "[", "3", ":", "6", "]", "=", "np", ".", "array", "(", "[", "l", ",", "w", ",", "h", "]", ")", "\n", "box_params", "[", "6", "]", "=", "heading_angle", "\n", "\n", "return", "box_params", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.check_valid_corners3d": [[472, 522], ["numpy.vstack", "numpy.vstack", "numpy.vstack", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.vstack().transpose", "numpy.assert_almost_equal", "print", "numpy.assert_almost_equal", "numpy.assert_almost_equal", "numpy.assert_almost_equal", "numpy.assert_almost_equal", "numpy.assert_almost_equal", "numpy.assert_almost_equal", "numpy.assert_almost_equal", "numpy.assert_almost_equal", "numpy.assert_almost_equal", "numpy.vstack", "numpy.array", "print"], "function", ["None"], ["", "def", "check_valid_corners3d", "(", "corners_3d", ")", ":", "\n", "    ", "''' check if a predicted corners3d is a valid cube\n            6 -------- 5\n           /|         /|\n          7 -------- 4 .\n          | |        | |\n          . 2 -------- 1\n          |/         |/\n          3 -------- 0\n    :param corners_3d: (8,3) array for 3D box corners in upright camera frame\n    :return: bool\n    '''", "\n", "x_lines", "=", "np", ".", "vstack", "(", "(", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "3", "]", ",", "corners_3d", "[", "1", "]", "-", "corners_3d", "[", "2", "]", ",", "\n", "corners_3d", "[", "4", "]", "-", "corners_3d", "[", "7", "]", ",", "corners_3d", "[", "5", "]", "-", "corners_3d", "[", "6", "]", ")", ")", "#(4,3)", "\n", "y_lines", "=", "np", ".", "vstack", "(", "(", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "4", "]", ",", "corners_3d", "[", "1", "]", "-", "corners_3d", "[", "5", "]", ",", "\n", "corners_3d", "[", "3", "]", "-", "corners_3d", "[", "7", "]", ",", "corners_3d", "[", "2", "]", "-", "corners_3d", "[", "6", "]", ")", ")", "#(4,3)", "\n", "z_lines", "=", "np", ".", "vstack", "(", "(", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "1", "]", ",", "corners_3d", "[", "4", "]", "-", "corners_3d", "[", "5", "]", ",", "\n", "corners_3d", "[", "3", "]", "-", "corners_3d", "[", "2", "]", ",", "corners_3d", "[", "7", "]", "-", "corners_3d", "[", "6", "]", ")", ")", "#(4,3)", "\n", "\n", "x_lines_length", "=", "np", ".", "linalg", ".", "norm", "(", "x_lines", ",", "axis", "=", "1", ")", "\n", "y_lines_length", "=", "np", ".", "linalg", ".", "norm", "(", "y_lines", ",", "axis", "=", "1", ")", "\n", "z_lines_length", "=", "np", ".", "linalg", ".", "norm", "(", "z_lines", ",", "axis", "=", "1", ")", "\n", "\n", "lines_length", "=", "np", ".", "vstack", "(", "(", "x_lines_length", ",", "y_lines_length", ",", "z_lines_length", ")", ")", ".", "transpose", "(", ")", "#(4,3)", "\n", "\n", "try", ":", "\n", "        ", "npt", ".", "assert_almost_equal", "(", "lines_length", "[", "0", "]", ",", "np", ".", "array", "(", "[", "0.", ",", "0.", ",", "0.", "]", ")", ",", "decimal", "=", "1", ")", "\n", "print", "(", "'\\t\\tWarning: this length of box [{0}] is almost zero...'", ".", "format", "(", "lines_length", "[", "0", "]", ")", ")", "\n", "return", "False", "\n", "", "except", ":", "\n", "        ", "pass", "\n", "\n", "", "try", ":", "\n", "        ", "npt", ".", "assert_almost_equal", "(", "lines_length", "[", "0", "]", ",", "lines_length", "[", "1", "]", ",", "decimal", "=", "2", ")", "\n", "npt", ".", "assert_almost_equal", "(", "lines_length", "[", "0", "]", ",", "lines_length", "[", "2", "]", ",", "decimal", "=", "2", ")", "\n", "npt", ".", "assert_almost_equal", "(", "lines_length", "[", "0", "]", ",", "lines_length", "[", "3", "]", ",", "decimal", "=", "2", ")", "\n", "npt", ".", "assert_almost_equal", "(", "lines_length", "[", "1", "]", ",", "lines_length", "[", "2", "]", ",", "decimal", "=", "2", ")", "\n", "npt", ".", "assert_almost_equal", "(", "lines_length", "[", "1", "]", ",", "lines_length", "[", "3", "]", ",", "decimal", "=", "2", ")", "\n", "npt", ".", "assert_almost_equal", "(", "lines_length", "[", "2", "]", ",", "lines_length", "[", "3", "]", ",", "decimal", "=", "2", ")", "\n", "\n", "# in case it is a parallelepiped, check the three lines in one corner perpendicular with each other", "\n", "npt", ".", "assert_almost_equal", "(", "(", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "4", "]", ")", "@", "(", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "1", "]", ")", ",", "0", ",", "decimal", "=", "1", ")", "\n", "npt", ".", "assert_almost_equal", "(", "(", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "4", "]", ")", "@", "(", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "3", "]", ")", ",", "0", ",", "decimal", "=", "1", ")", "\n", "npt", ".", "assert_almost_equal", "(", "(", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "1", "]", ")", "@", "(", "corners_3d", "[", "0", "]", "-", "corners_3d", "[", "3", "]", ")", ",", "0", ",", "decimal", "=", "1", ")", "\n", "\n", "return", "True", "\n", "\n", "", "except", ":", "\n", "        ", "print", "(", "'\\t\\tWarning: this box is not a valid cube...'", ")", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.__init__": [[16, 25], ["tf_logger.Logger", "os.path.join", "os.path.join", "open", "time.strftime", "log_file.write"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "log_dir", ",", "name", "=", "'train'", ")", ":", "\n", "# self.opt = opt", "\n", "#self.logger = tf_logger.Logger(os.path.join(opt.logging_dir, opt.name))", "\n", "#self.log_name = os.path.join(opt.checkpoint_dir, opt.name, 'loss_log.txt')", "\n", "        ", "self", ".", "logger", "=", "tf_logger", ".", "Logger", "(", "os", ".", "path", ".", "join", "(", "log_dir", ",", "name", ")", ")", "\n", "self", ".", "log_name", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'tf_visualizer_log.txt'", ")", "\n", "with", "open", "(", "self", ".", "log_name", ",", "\"a\"", ")", "as", "log_file", ":", "\n", "            ", "now", "=", "time", ".", "strftime", "(", "\"%c\"", ")", "\n", "log_file", ".", "write", "(", "'================ Training Loss (%s) ================\\n'", "%", "now", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_images": [[27, 31], ["visuals.items", "tf_visualizer.Visualizer.logger.image_summary"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_logger.Logger.image_summary"], ["", "", "def", "log_images", "(", "self", ",", "visuals", ",", "step", ")", ":", "\n", "            ", "for", "label", ",", "image_numpy", "in", "visuals", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "logger", ".", "image_summary", "(", "\n", "label", ",", "[", "image_numpy", "]", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.log_scalars": [[33, 36], ["scalars.items", "tf_visualizer.Visualizer.logger.scalar_summary"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_logger.Logger.scalar_summary"], ["", "", "def", "log_scalars", "(", "self", ",", "scalars", ",", "step", ")", ":", "\n", "        ", "for", "label", ",", "val", "in", "scalars", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "logger", ".", "scalar_summary", "(", "label", ",", "val", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.plot_current_points": [[38, 40], ["None"], "methods", ["None"], ["", "", "def", "plot_current_points", "(", "self", ",", "points", ",", "disp_offset", "=", "10", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.tf_visualizer.Visualizer.print_current_scalars": [[42, 50], ["scalars.items", "print", "open", "log_file.write"], "methods", ["None"], ["", "def", "print_current_scalars", "(", "self", ",", "epoch", ",", "i", ",", "scalars", ")", ":", "\n", "        ", "message", "=", "'(epoch: %d, iters: %d) '", "%", "(", "epoch", ",", "i", ")", "\n", "for", "k", ",", "v", "in", "scalars", ".", "items", "(", ")", ":", "\n", "            ", "message", "+=", "'%s: %.3f '", "%", "(", "k", ",", "v", ")", "\n", "\n", "", "print", "(", "message", ")", "\n", "with", "open", "(", "self", ".", "log_name", ",", "\"a\"", ")", "as", "log_file", ":", "\n", "            ", "log_file", ".", "write", "(", "'%s\\n'", "%", "message", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss": [[16, 34], ["torch.abs", "torch.abs", "torch.clamp", "torch.clamp"], "function", ["None"], ["def", "huber_loss", "(", "error", ",", "delta", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        error: Torch tensor (d1,d2,...,dk)\n    Returns:\n        loss: Torch tensor (d1,d2,...,dk)\n\n    x = error = pred - gt or dist(pred,gt)\n    0.5 * |x|^2                 if |x|<=d\n    0.5 * d^2 + d * (|x|-d)     if |x|>d\n    Ref: https://github.com/charlesq34/frustum-pointnets/blob/master/models/model_util.py\n    \"\"\"", "\n", "abs_error", "=", "torch", ".", "abs", "(", "error", ")", "\n", "#quadratic = torch.min(abs_error, torch.FloatTensor([delta]))", "\n", "quadratic", "=", "torch", ".", "clamp", "(", "abs_error", ",", "max", "=", "delta", ")", "\n", "linear", "=", "(", "abs_error", "-", "quadratic", ")", "\n", "loss", "=", "0.5", "*", "quadratic", "**", "2", "+", "delta", "*", "linear", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance": [[35, 63], ["pc1.unsqueeze().expand", "pc2.unsqueeze().expand", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sum", "torch.sum", "pc1.unsqueeze", "pc2.unsqueeze", "nn_distance.huber_loss", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss"], ["", "def", "nn_distance", "(", "pc1", ",", "pc2", ",", "l1smooth", "=", "False", ",", "delta", "=", "1.0", ",", "l1", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        pc1: (B,N,C) torch tensor\n        pc2: (B,M,C) torch tensor\n        l1smooth: bool, whether to use l1smooth loss\n        delta: scalar, the delta used in l1smooth loss\n    Output:\n        dist1: (B,N) torch float32 tensor\n        idx1: (B,N) torch int64 tensor\n        dist2: (B,M) torch float32 tensor\n        idx2: (B,M) torch int64 tensor\n    \"\"\"", "\n", "N", "=", "pc1", ".", "shape", "[", "1", "]", "\n", "M", "=", "pc2", ".", "shape", "[", "1", "]", "\n", "pc1_expand_tile", "=", "pc1", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "M", ",", "-", "1", ")", "\n", "pc2_expand_tile", "=", "pc2", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "N", ",", "-", "1", ",", "-", "1", ")", "\n", "pc_diff", "=", "pc1_expand_tile", "-", "pc2_expand_tile", "\n", "\n", "if", "l1smooth", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "huber_loss", "(", "pc_diff", ",", "delta", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "elif", "l1", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "pc_diff", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "else", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "pc_diff", "**", "2", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "dist1", ",", "idx1", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "2", ")", "# (B,N)", "\n", "dist2", ",", "idx2", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "1", ")", "# (B,M)", "\n", "return", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance_exclude_self": [[65, 100], ["pc1.unsqueeze().expand", "pc2.unsqueeze().expand", "torch.eye().cuda().unsqueeze().unsqueeze().expand().bool", "torch.eye().cuda().unsqueeze().unsqueeze().expand().bool", "pc2_expand_tile.contiguous().view.contiguous().view", "pc2_expand_tile.contiguous().view.contiguous().view", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sum", "torch.sum", "pc1.unsqueeze", "pc2.unsqueeze", "torch.eye().cuda().unsqueeze().unsqueeze().expand", "torch.eye().cuda().unsqueeze().unsqueeze().expand", "pc2_expand_tile.contiguous().view.contiguous", "torch.eye().cuda().unsqueeze().unsqueeze().expand().bool.view", "pc2_expand_tile.contiguous().view.contiguous", "nn_distance.huber_loss", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.eye().cuda().unsqueeze().unsqueeze", "torch.eye().cuda().unsqueeze().unsqueeze", "torch.eye().cuda().unsqueeze", "torch.eye().cuda().unsqueeze", "torch.eye().cuda", "torch.eye().cuda", "torch.eye", "torch.eye"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss"], ["", "def", "nn_distance_exclude_self", "(", "pc1", ",", "pc2", ",", "l1smooth", "=", "False", ",", "delta", "=", "1.0", ",", "l1", "=", "False", ")", ":", "\n", "    ", "\"\"\" Distance is calculated only if pc1 != pc2 (for nearest neighbour distance between a set of points and itself)\n    Input:\n        pc1: (B,N,C) torch tensor\n        pc2: (B,M,C) torch tensor\n        l1smooth: bool, whether to use l1smooth loss\n        delta: scalar, the delta used in l1smooth loss\n    Output:\n        dist1: (B,N) torch float32 tensor\n        idx1: (B,N) torch int64 tensor\n        dist2: (B,M) torch float32 tensor\n        idx2: (B,M) torch int64 tensor\n    \"\"\"", "\n", "N", "=", "pc1", ".", "shape", "[", "1", "]", "\n", "M", "=", "pc2", ".", "shape", "[", "1", "]", "\n", "B", "=", "pc1", ".", "shape", "[", "0", "]", "\n", "assert", "M", "==", "N", "\n", "pc1_expand_tile", "=", "pc1", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "M", ",", "-", "1", ")", "\n", "pc2_expand_tile", "=", "pc2", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "N", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "diagonal_inds", "=", "torch", ".", "eye", "(", "N", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "B", ",", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "\n", "pc2_expand_tile", "=", "pc2_expand_tile", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", "\n", "pc2_expand_tile", "[", "diagonal_inds", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", "]", "=", "-", "1000", "\n", "pc2_expand_tile", "=", "pc2_expand_tile", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ",", "N", ",", "3", ")", "\n", "pc_diff", "=", "pc1_expand_tile", "-", "pc2_expand_tile", "\n", "\n", "if", "l1smooth", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "huber_loss", "(", "pc_diff", ",", "delta", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "elif", "l1", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "pc_diff", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "else", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "pc_diff", "**", "2", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "dist1", ",", "idx1", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "2", ")", "# (B,N)", "\n", "dist2", ",", "idx2", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "1", ")", "# (B,M)", "\n", "return", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance_exclude_self_with_cls": [[102, 142], ["pc1.unsqueeze().expand", "pc2.unsqueeze().expand", "torch.eye().cuda().unsqueeze().unsqueeze().expand().bool", "torch.eye().cuda().unsqueeze().unsqueeze().expand().bool", "pc2_expand_tile.contiguous().view.contiguous().view", "pc2_expand_tile.contiguous().view.contiguous().view", "cls1.unsqueeze().expand", "cls2.unsqueeze().expand", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sum", "torch.sum", "pc1.unsqueeze", "pc2.unsqueeze", "torch.eye().cuda().unsqueeze().unsqueeze().expand", "torch.eye().cuda().unsqueeze().unsqueeze().expand", "pc2_expand_tile.contiguous().view.contiguous", "torch.eye().cuda().unsqueeze().unsqueeze().expand().bool.view", "pc2_expand_tile.contiguous().view.contiguous", "cls1.unsqueeze", "cls2.unsqueeze", "nn_distance.huber_loss", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.eye().cuda().unsqueeze().unsqueeze", "torch.eye().cuda().unsqueeze().unsqueeze", "torch.eye().cuda().unsqueeze", "torch.eye().cuda().unsqueeze", "torch.eye().cuda", "torch.eye().cuda", "torch.eye", "torch.eye"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss"], ["", "def", "nn_distance_exclude_self_with_cls", "(", "pc1", ",", "pc2", ",", "cls1", ",", "cls2", ",", "l1smooth", "=", "False", ",", "delta", "=", "1.0", ",", "l1", "=", "False", ")", ":", "\n", "    ", "\"\"\" Distance is calculated only if pc1 != pc2 (for nearest neighbour distance between a set of points and itself)\n    Input:\n        pc1: (B,N,C) torch tensor\n        pc2: (B,M,C) torch tensor\n        l1smooth: bool, whether to use l1smooth loss\n        delta: scalar, the delta used in l1smooth loss\n    Output:\n        dist1: (B,N) torch float32 tensor\n        idx1: (B,N) torch int64 tensor\n        dist2: (B,M) torch float32 tensor\n        idx2: (B,M) torch int64 tensor\n    \"\"\"", "\n", "N", "=", "pc1", ".", "shape", "[", "1", "]", "\n", "M", "=", "pc2", ".", "shape", "[", "1", "]", "\n", "B", "=", "pc1", ".", "shape", "[", "0", "]", "\n", "assert", "M", "==", "N", "\n", "pc1_expand_tile", "=", "pc1", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "M", ",", "-", "1", ")", "\n", "pc2_expand_tile", "=", "pc2", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "N", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "diagonal_inds", "=", "torch", ".", "eye", "(", "N", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "B", ",", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "\n", "pc2_expand_tile", "=", "pc2_expand_tile", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", "\n", "pc2_expand_tile", "[", "diagonal_inds", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", "]", "=", "-", "1000", "\n", "pc2_expand_tile", "=", "pc2_expand_tile", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ",", "N", ",", "3", ")", "\n", "pc_diff", "=", "pc1_expand_tile", "-", "pc2_expand_tile", "\n", "\n", "cls1_expand_tile", "=", "cls1", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "M", ")", "\n", "cls2_expand_tile", "=", "cls2", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "N", ",", "-", "1", ")", "\n", "cls_mask", "=", "(", "cls1_expand_tile", "!=", "cls2_expand_tile", ")", ".", "int", "(", ")", "*", "1000", "\n", "\n", "if", "l1smooth", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "huber_loss", "(", "pc_diff", ",", "delta", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "elif", "l1", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "pc_diff", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "else", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "pc_diff", "**", "2", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "pc_dist", "=", "pc_dist", "+", "cls_mask", "\n", "dist1", ",", "idx1", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "2", ")", "# (B,N)", "\n", "dist2", ",", "idx2", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "1", ")", "# (B,M)", "\n", "return", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance_withcls": [[144, 179], ["pc1.unsqueeze().expand", "pc2.unsqueeze().expand", "cls1.unsqueeze().expand", "cls2.unsqueeze().expand", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sum", "torch.sum", "pc1.unsqueeze", "pc2.unsqueeze", "cls1.unsqueeze", "cls2.unsqueeze", "nn_distance.huber_loss", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss"], ["", "def", "nn_distance_withcls", "(", "pc1", ",", "pc2", ",", "cls1", ",", "cls2", ",", "l1smooth", "=", "False", ",", "delta", "=", "1.0", ",", "l1", "=", "False", ")", ":", "\n", "    ", "\"\"\" Distance is normally calculated only if cls1 == cls2\n    Input:\n        pc1: (B,N,C) torch tensor\n        pc2: (B,M,C) torch tensor\n        cls1: (B,N) torch tensor\n        cls2: (B,M) torch tensor\n        l1smooth: bool, whether to use l1smooth loss\n        delta: scalar, the delta used in l1smooth loss\n    Output:\n        dist1: (B,N) torch float32 tensor\n        idx1: (B,N) torch int64 tensor\n        dist2: (B,M) torch float32 tensor\n        idx2: (B,M) torch int64 tensor\n    \"\"\"", "\n", "N", "=", "pc1", ".", "shape", "[", "1", "]", "\n", "M", "=", "pc2", ".", "shape", "[", "1", "]", "\n", "pc1_expand_tile", "=", "pc1", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "M", ",", "-", "1", ")", "\n", "pc2_expand_tile", "=", "pc2", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "N", ",", "-", "1", ",", "-", "1", ")", "\n", "pc_diff", "=", "pc1_expand_tile", "-", "pc2_expand_tile", "\n", "cls1_expand_tile", "=", "cls1", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "M", ")", "\n", "cls2_expand_tile", "=", "cls2", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "N", ",", "-", "1", ")", "\n", "cls_mask", "=", "(", "cls1_expand_tile", "!=", "cls2_expand_tile", ")", ".", "int", "(", ")", "*", "1000", "\n", "\n", "if", "l1smooth", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "huber_loss", "(", "pc_diff", ",", "delta", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "elif", "l1", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "pc_diff", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "else", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "pc_diff", "**", "2", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "\n", "", "pc_dist", "=", "pc_dist", "+", "cls_mask", "\n", "dist1", ",", "idx1", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "2", ")", "# (B,N)", "\n", "dist2", ",", "idx2", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "1", ")", "# (B,M)", "\n", "return", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance_inbox": [[181, 217], ["pc1.unsqueeze().expand", "seed.unsqueeze().expand", "pc2.unsqueeze().expand", "half_size.unsqueeze().expand", "torch.min", "torch.min", "torch.min", "torch.min", "torch.logical_or().int", "torch.logical_or().int", "torch.sum", "torch.sum", "pc1.unsqueeze", "seed.unsqueeze", "pc2.unsqueeze", "half_size.unsqueeze", "nn_distance.huber_loss", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.logical_or", "torch.logical_or", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss"], ["", "def", "nn_distance_inbox", "(", "pc1", ",", "seed", ",", "pc2", ",", "half_size", ",", "l1smooth", "=", "False", ",", "delta", "=", "1.0", ",", "l1", "=", "False", ")", ":", "\n", "    ", "\"\"\" This is for unsupervised vote loss calculation\n    Input:\n        pc1: (B,N,C) torch tensor\n        pc2: (B,M,C) torch tensor\n        half_size: (B,M,3) torch tensor\n        l1smooth: bool, whether to use l1smooth loss\n        delta: scalar, the delta used in l1smooth loss\n    Output:\n        dist1: (B,N) torch float32 tensor\n        idx1: (B,N) torch int64 tensor\n        dist2: (B,M) torch float32 tensor\n        idx2: (B,M) torch int64 tensor\n    \"\"\"", "\n", "N", "=", "pc1", ".", "shape", "[", "1", "]", "\n", "M", "=", "pc2", ".", "shape", "[", "1", "]", "\n", "pc1_expand_tile", "=", "pc1", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "M", ",", "-", "1", ")", "\n", "seed_expand_tile", "=", "seed", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "M", ",", "-", "1", ")", "\n", "pc2_expand_tile", "=", "pc2", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "N", ",", "-", "1", ",", "-", "1", ")", "\n", "pc_diff", "=", "pc1_expand_tile", "-", "pc2_expand_tile", "\n", "half_size_expand_tile", "=", "half_size", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "N", ",", "-", "1", ",", "-", "1", ")", "\n", "lower", "=", "pc2_expand_tile", "-", "half_size_expand_tile", "\n", "higher", "=", "pc2_expand_tile", "+", "half_size_expand_tile", "\n", "in_box_mask", "=", "torch", ".", "logical_or", "(", "(", "lower", ">", "seed_expand_tile", ")", ".", "any", "(", "dim", "=", "3", ")", ",", "(", "higher", "<", "seed_expand_tile", ")", ".", "any", "(", "dim", "=", "3", ")", ")", ".", "int", "(", ")", "*", "1000", "\n", "\n", "if", "l1smooth", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "huber_loss", "(", "pc_diff", ",", "delta", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "elif", "l1", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "pc_diff", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "else", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "pc_diff", "**", "2", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "\n", "", "pc_dist", "=", "pc_dist", "+", "in_box_mask", "\n", "dist1", ",", "idx1", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "2", ")", "# (B,N)", "\n", "dist2", ",", "idx2", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "1", ")", "# (B,M)", "\n", "return", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.demo_nn_distance": [[219, 247], ["numpy.random.seed", "numpy.random.random", "numpy.random.random", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "nn_distance.nn_distance", "print", "print", "numpy.zeros", "range", "print", "print", "print", "nn_distance.nn_distance", "print", "print", "numpy.zeros", "range", "print", "np.random.random.astype", "np.random.random.astype", "range", "range", "numpy.sum", "numpy.abs", "numpy.minimum", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance"], ["", "def", "demo_nn_distance", "(", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "pc1arr", "=", "np", ".", "random", ".", "random", "(", "(", "1", ",", "5", ",", "3", ")", ")", "\n", "pc2arr", "=", "np", ".", "random", ".", "random", "(", "(", "1", ",", "6", ",", "3", ")", ")", "\n", "pc1", "=", "torch", ".", "from_numpy", "(", "pc1arr", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "pc2", "=", "torch", ".", "from_numpy", "(", "pc2arr", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "=", "nn_distance", "(", "pc1", ",", "pc2", ")", "\n", "print", "(", "dist1", ")", "\n", "print", "(", "idx1", ")", "\n", "dist", "=", "np", ".", "zeros", "(", "(", "5", ",", "6", ")", ")", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "6", ")", ":", "\n", "            ", "dist", "[", "i", ",", "j", "]", "=", "np", ".", "sum", "(", "(", "pc1arr", "[", "0", ",", "i", ",", ":", "]", "-", "pc2arr", "[", "0", ",", "j", ",", ":", "]", ")", "**", "2", ")", "\n", "", "", "print", "(", "dist", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'L1smooth dists:'", ")", "\n", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "=", "nn_distance", "(", "pc1", ",", "pc2", ",", "True", ")", "\n", "print", "(", "dist1", ")", "\n", "print", "(", "idx1", ")", "\n", "dist", "=", "np", ".", "zeros", "(", "(", "5", ",", "6", ")", ")", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "6", ")", ":", "\n", "            ", "error", "=", "np", ".", "abs", "(", "pc1arr", "[", "0", ",", "i", ",", ":", "]", "-", "pc2arr", "[", "0", ",", "j", ",", ":", "]", ")", "\n", "quad", "=", "np", ".", "minimum", "(", "error", ",", "1.0", ")", "\n", "linear", "=", "error", "-", "quad", "\n", "loss", "=", "0.5", "*", "quad", "**", "2", "+", "1.0", "*", "linear", "\n", "dist", "[", "i", ",", "j", "]", "=", "np", ".", "sum", "(", "loss", ")", "\n", "", "", "print", "(", "dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.voc_ap": [[29, 62], ["numpy.arange", "numpy.concatenate", "numpy.concatenate", "range", "numpy.sum", "numpy.maximum", "numpy.where", "numpy.sum", "numpy.max"], "function", ["None"], ["def", "voc_ap", "(", "rec", ",", "prec", ",", "classname", ",", "ovthresh", ",", "use_07_metric", "=", "False", ")", ":", "\n", "    ", "\"\"\" ap = voc_ap(rec, prec, [use_07_metric])\n    Compute VOC AP given precision and recall.\n    If use_07_metric is true, uses the\n    VOC 07 11 point method (default:False).\n    \"\"\"", "\n", "if", "use_07_metric", ":", "\n", "# 11 point metric", "\n", "        ", "ap", "=", "0.", "\n", "for", "t", "in", "np", ".", "arange", "(", "0.", ",", "1.1", ",", "0.1", ")", ":", "\n", "            ", "if", "np", ".", "sum", "(", "rec", ">=", "t", ")", "==", "0", ":", "\n", "                ", "p", "=", "0", "\n", "", "else", ":", "\n", "                ", "p", "=", "np", ".", "max", "(", "prec", "[", "rec", ">=", "t", "]", ")", "\n", "", "ap", "=", "ap", "+", "p", "/", "11.", "\n", "", "", "else", ":", "\n", "# correct AP calculation", "\n", "# first append sentinel values at the end", "\n", "        ", "mrec", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "rec", ",", "[", "1.", "]", ")", ")", "\n", "mpre", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "prec", ",", "[", "0.", "]", ")", ")", "\n", "\n", "# compute the precision envelope", "\n", "for", "i", "in", "range", "(", "mpre", ".", "size", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "mpre", "[", "i", "-", "1", "]", "=", "np", ".", "maximum", "(", "mpre", "[", "i", "-", "1", "]", ",", "mpre", "[", "i", "]", ")", "\n", "\n", "# to calculate area under PR curve, look for points", "\n", "# where X axis (recall) changes value", "\n", "", "i", "=", "np", ".", "where", "(", "mrec", "[", "1", ":", "]", "!=", "mrec", "[", ":", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "# and sum (\\Delta recall) * prec", "\n", "ap", "=", "np", ".", "sum", "(", "(", "mrec", "[", "i", "+", "1", "]", "-", "mrec", "[", "i", "]", ")", "*", "mpre", "[", "i", "+", "1", "]", ")", "\n", "\n", "", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.get_iou": [[67, 74], ["metric_util.calc_iou"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.metric_util.calc_iou"], ["def", "get_iou", "(", "bb1", ",", "bb2", ")", ":", "\n", "    ", "\"\"\" Compute IoU of two bounding boxes.\n        ** Define your bod IoU function HERE **\n    \"\"\"", "\n", "#pass", "\n", "iou3d", "=", "calc_iou", "(", "bb1", ",", "bb2", ")", "\n", "return", "iou3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.get_iou_obb": [[76, 79], ["box_util.box3d_iou"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou"], ["def", "get_iou_obb", "(", "bb1", ",", "bb2", ")", ":", "\n", "    ", "iou3d", ",", "iou2d", "=", "box3d_iou", "(", "bb1", ",", "bb2", ")", "\n", "return", "iou3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.get_iou_main": [[80, 82], ["get_iou_func"], "function", ["None"], ["", "def", "get_iou_main", "(", "get_iou_func", ",", "args", ")", ":", "\n", "    ", "return", "get_iou_func", "(", "*", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.eval_det_cls": [[83, 167], ["gt.keys", "pred.keys", "pred.keys", "numpy.array", "numpy.array", "numpy.argsort", "numpy.sort", "len", "numpy.zeros", "numpy.zeros", "range", "numpy.cumsum", "numpy.cumsum", "eval_det.voc_ap", "numpy.array", "len", "BB[].astype", "R[].astype", "float", "numpy.maximum", "len", "image_ids.append", "np.array.append", "np.array.append", "range", "numpy.array", "eval_det.get_iou_main", "numpy.finfo"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.voc_ap", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.get_iou_main"], ["", "def", "eval_det_cls", "(", "pred", ",", "gt", ",", "classname", ",", "ovthresh", "=", "0.25", ",", "use_07_metric", "=", "False", ",", "get_iou_func", "=", "get_iou", ")", ":", "\n", "    ", "\"\"\" Generic functions to compute precision/recall for object detection\n        for a single class.\n        Input:\n            pred: map of {img_id: [(bbox, score)]} where bbox is numpy array\n            gt: map of {img_id: [bbox]}\n            ovthresh: scalar, iou threshold\n            use_07_metric: bool, if True use VOC07 11 point method\n        Output:\n            rec: numpy array of length nd\n            prec: numpy array of length nd\n            ap: scalar, average precision\n    \"\"\"", "\n", "\n", "# construct gt objects", "\n", "class_recs", "=", "{", "}", "# {img_id: {'bbox': bbox list, 'det': matched list}}", "\n", "npos", "=", "0", "\n", "for", "img_id", "in", "gt", ".", "keys", "(", ")", ":", "\n", "        ", "bbox", "=", "np", ".", "array", "(", "gt", "[", "img_id", "]", ")", "\n", "det", "=", "[", "False", "]", "*", "len", "(", "bbox", ")", "\n", "npos", "+=", "len", "(", "bbox", ")", "\n", "class_recs", "[", "img_id", "]", "=", "{", "'bbox'", ":", "bbox", ",", "'det'", ":", "det", "}", "\n", "# pad empty list to all other imgids", "\n", "", "for", "img_id", "in", "pred", ".", "keys", "(", ")", ":", "\n", "        ", "if", "img_id", "not", "in", "gt", ":", "\n", "            ", "class_recs", "[", "img_id", "]", "=", "{", "'bbox'", ":", "np", ".", "array", "(", "[", "]", ")", ",", "'det'", ":", "[", "]", "}", "\n", "\n", "# construct dets", "\n", "", "", "image_ids", "=", "[", "]", "\n", "confidence", "=", "[", "]", "\n", "BB", "=", "[", "]", "\n", "for", "img_id", "in", "pred", ".", "keys", "(", ")", ":", "\n", "        ", "for", "box", ",", "score", "in", "pred", "[", "img_id", "]", ":", "\n", "            ", "image_ids", ".", "append", "(", "img_id", ")", "\n", "confidence", ".", "append", "(", "score", ")", "\n", "BB", ".", "append", "(", "box", ")", "\n", "", "", "confidence", "=", "np", ".", "array", "(", "confidence", ")", "\n", "BB", "=", "np", ".", "array", "(", "BB", ")", "# (nd,4 or 8,3 or 6)", "\n", "\n", "# sort by confidence", "\n", "sorted_ind", "=", "np", ".", "argsort", "(", "-", "confidence", ")", "\n", "sorted_scores", "=", "np", ".", "sort", "(", "-", "confidence", ")", "\n", "BB", "=", "BB", "[", "sorted_ind", ",", "...", "]", "\n", "image_ids", "=", "[", "image_ids", "[", "x", "]", "for", "x", "in", "sorted_ind", "]", "\n", "\n", "# go down dets and mark TPs and FPs", "\n", "nd", "=", "len", "(", "image_ids", ")", "\n", "tp", "=", "np", ".", "zeros", "(", "nd", ")", "\n", "fp", "=", "np", ".", "zeros", "(", "nd", ")", "\n", "for", "d", "in", "range", "(", "nd", ")", ":", "\n", "        ", "R", "=", "class_recs", "[", "image_ids", "[", "d", "]", "]", "\n", "bb", "=", "BB", "[", "d", ",", "...", "]", ".", "astype", "(", "float", ")", "\n", "ovmax", "=", "-", "np", ".", "inf", "\n", "BBGT", "=", "R", "[", "'bbox'", "]", ".", "astype", "(", "float", ")", "\n", "\n", "if", "BBGT", ".", "size", ">", "0", ":", "\n", "# compute overlaps", "\n", "            ", "for", "j", "in", "range", "(", "BBGT", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "iou", "=", "get_iou_main", "(", "get_iou_func", ",", "(", "bb", ",", "BBGT", "[", "j", ",", "...", "]", ")", ")", "\n", "if", "iou", ">", "ovmax", ":", "\n", "                    ", "ovmax", "=", "iou", "\n", "jmax", "=", "j", "\n", "\n", "#print d, ovmax", "\n", "", "", "", "if", "ovmax", ">", "ovthresh", ":", "\n", "            ", "if", "not", "R", "[", "'det'", "]", "[", "jmax", "]", ":", "\n", "                ", "tp", "[", "d", "]", "=", "1.", "\n", "R", "[", "'det'", "]", "[", "jmax", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "fp", "[", "d", "]", "=", "1.", "\n", "", "", "else", ":", "\n", "            ", "fp", "[", "d", "]", "=", "1.", "\n", "\n", "# compute precision recall", "\n", "", "", "fp", "=", "np", ".", "cumsum", "(", "fp", ")", "\n", "tp", "=", "np", ".", "cumsum", "(", "tp", ")", "\n", "rec", "=", "tp", "/", "float", "(", "npos", ")", "\n", "#print('NPOS: ', npos)", "\n", "# avoid divide by zero in case the first detection matches a difficult", "\n", "# ground truth", "\n", "prec", "=", "tp", "/", "np", ".", "maximum", "(", "tp", "+", "fp", ",", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", "\n", "ap", "=", "voc_ap", "(", "rec", ",", "prec", ",", "classname", ",", "ovthresh", ",", "use_07_metric", ")", "\n", "\n", "return", "rec", ",", "prec", ",", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.eval_det_cls_wrapper": [[168, 172], ["eval_det.eval_det_cls"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.eval_det_cls"], ["", "def", "eval_det_cls_wrapper", "(", "arguments", ")", ":", "\n", "    ", "pred", ",", "gt", ",", "classname", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", "=", "arguments", "\n", "rec", ",", "prec", ",", "ap", "=", "eval_det_cls", "(", "pred", ",", "gt", ",", "classname", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", ")", "\n", "return", "(", "rec", ",", "prec", ",", "ap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.eval_det": [[173, 213], ["pred_all.keys", "gt_all.keys", "gt.keys", "print", "eval_det.eval_det_cls", "print", "[].append", "[].append"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.eval_det_cls"], ["", "def", "eval_det", "(", "pred_all", ",", "gt_all", ",", "ovthresh", "=", "0.25", ",", "use_07_metric", "=", "False", ",", "get_iou_func", "=", "get_iou", ")", ":", "\n", "    ", "\"\"\" Generic functions to compute precision/recall for object detection\n        for multiple classes.\n        Input:\n            pred_all: map of {img_id: [(classname, bbox, score)]}\n            gt_all: map of {img_id: [(classname, bbox)]}\n            ovthresh: scalar, iou threshold\n            use_07_metric: bool, if true use VOC07 11 point method\n        Output:\n            rec: {classname: rec}\n            prec: {classname: prec_all}\n            ap: {classname: scalar}\n    \"\"\"", "\n", "pred", "=", "{", "}", "# map {classname: pred}", "\n", "gt", "=", "{", "}", "# map {classname: gt}", "\n", "for", "img_id", "in", "pred_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", ",", "score", "in", "pred_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "pred", ":", "pred", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "pred", "[", "classname", "]", ":", "\n", "                ", "pred", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "pred", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "(", "bbox", ",", "score", ")", ")", "\n", "", "", "for", "img_id", "in", "gt_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", "in", "gt_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "gt", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "bbox", ")", "\n", "\n", "", "", "rec", "=", "{", "}", "\n", "prec", "=", "{", "}", "\n", "ap", "=", "{", "}", "\n", "for", "classname", "in", "gt", ".", "keys", "(", ")", ":", "\n", "        ", "print", "(", "'Computing AP for class: '", ",", "classname", ")", "\n", "rec", "[", "classname", "]", ",", "prec", "[", "classname", "]", ",", "ap", "[", "classname", "]", "=", "eval_det_cls", "(", "pred", "[", "classname", "]", ",", "gt", "[", "classname", "]", ",", "classname", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", ")", "\n", "print", "(", "classname", ",", "ap", "[", "classname", "]", ")", "\n", "\n", "", "return", "rec", ",", "prec", ",", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.eval_det_multiprocessing": [[215, 262], ["pred_all.keys", "gt_all.keys", "multiprocessing.Pool", "multiprocessing.Pool.map", "multiprocessing.Pool.close", "enumerate", "scannet.model_util_scannet.ScannetDatasetConfig", "gt.keys", "[].append", "[].append", "gt.keys"], "function", ["None"], ["def", "eval_det_multiprocessing", "(", "pred_all", ",", "gt_all", ",", "ovthresh", "=", "0.25", ",", "use_07_metric", "=", "False", ",", "get_iou_func", "=", "get_iou", ")", ":", "\n", "    ", "\"\"\" Generic functions to compute precision/recall for object detection\n        for multiple classes.\n        Input:\n            pred_all: map of {img_id: [(classname, bbox, score)]}\n            gt_all: map of {img_id: [(classname, bbox)]}\n            ovthresh: scalar, iou threshold\n            use_07_metric: bool, if true use VOC07 11 point method\n        Output:\n            rec: {classname: rec}\n            prec: {classname: prec_all}\n            ap: {classname: scalar}\n    \"\"\"", "\n", "pred", "=", "{", "}", "# map {classname: pred}", "\n", "gt", "=", "{", "}", "# map {classname: gt}", "\n", "for", "img_id", "in", "pred_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", ",", "score", "in", "pred_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "pred", ":", "pred", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "pred", "[", "classname", "]", ":", "\n", "                ", "pred", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "pred", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "(", "bbox", ",", "score", ")", ")", "\n", "", "", "for", "img_id", "in", "gt_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", "in", "gt_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "gt", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "bbox", ")", "\n", "\n", "", "", "rec", "=", "{", "}", "\n", "prec", "=", "{", "}", "\n", "ap", "=", "{", "}", "\n", "p", "=", "Pool", "(", "processes", "=", "10", ")", "\n", "class2type_map", "=", "ScannetDatasetConfig", "(", ")", ".", "class2type", "\n", "ret_values", "=", "p", ".", "map", "(", "eval_det_cls_wrapper", ",", "[", "(", "pred", "[", "classname", "]", ",", "gt", "[", "classname", "]", ",", "class2type_map", "[", "classname", "]", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", ")", "for", "classname", "in", "gt", ".", "keys", "(", ")", "if", "classname", "in", "pred", "]", ")", "\n", "p", ".", "close", "(", ")", "\n", "for", "i", ",", "classname", "in", "enumerate", "(", "gt", ".", "keys", "(", ")", ")", ":", "\n", "        ", "if", "classname", "in", "pred", ":", "\n", "            ", "rec", "[", "classname", "]", ",", "prec", "[", "classname", "]", ",", "ap", "[", "classname", "]", "=", "ret_values", "[", "i", "]", "\n", "", "else", ":", "\n", "            ", "rec", "[", "classname", "]", "=", "0", "\n", "prec", "[", "classname", "]", "=", "0", "\n", "ap", "[", "classname", "]", "=", "0", "\n", "\n", "", "", "return", "rec", ",", "prec", ",", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.ResidualCoder.__init__": [[6, 12], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "code_size", "=", "7", ",", "encode_angle_by_sincos", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "code_size", "=", "code_size", "\n", "self", ".", "encode_angle_by_sincos", "=", "encode_angle_by_sincos", "\n", "if", "self", ".", "encode_angle_by_sincos", ":", "\n", "            ", "self", ".", "code_size", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.ResidualCoder.encode_torch": [[13, 44], ["torch.clamp_min", "torch.clamp_min", "torch.split", "torch.split", "torch.sqrt", "torch.log", "torch.log", "torch.log", "torch.cat", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "zip"], "methods", ["None"], ["", "", "def", "encode_torch", "(", "self", ",", "boxes", ",", "anchors", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            boxes: (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n            anchors: (N, 7 + C) [x, y, z, dx, dy, dz, heading or *[cos, sin], ...]\n\n        Returns:\n\n        \"\"\"", "\n", "anchors", "[", ":", ",", "3", ":", "6", "]", "=", "torch", ".", "clamp_min", "(", "anchors", "[", ":", ",", "3", ":", "6", "]", ",", "min", "=", "1e-5", ")", "\n", "boxes", "[", ":", ",", "3", ":", "6", "]", "=", "torch", ".", "clamp_min", "(", "boxes", "[", ":", ",", "3", ":", "6", "]", ",", "min", "=", "1e-5", ")", "\n", "\n", "xa", ",", "ya", ",", "za", ",", "dxa", ",", "dya", ",", "dza", ",", "ra", ",", "*", "cas", "=", "torch", ".", "split", "(", "anchors", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "xg", ",", "yg", ",", "zg", ",", "dxg", ",", "dyg", ",", "dzg", ",", "rg", ",", "*", "cgs", "=", "torch", ".", "split", "(", "boxes", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "\n", "diagonal", "=", "torch", ".", "sqrt", "(", "dxa", "**", "2", "+", "dya", "**", "2", ")", "\n", "xt", "=", "(", "xg", "-", "xa", ")", "/", "diagonal", "\n", "yt", "=", "(", "yg", "-", "ya", ")", "/", "diagonal", "\n", "zt", "=", "(", "zg", "-", "za", ")", "/", "dza", "\n", "dxt", "=", "torch", ".", "log", "(", "dxg", "/", "dxa", ")", "\n", "dyt", "=", "torch", ".", "log", "(", "dyg", "/", "dya", ")", "\n", "dzt", "=", "torch", ".", "log", "(", "dzg", "/", "dza", ")", "\n", "if", "self", ".", "encode_angle_by_sincos", ":", "\n", "            ", "rt_cos", "=", "torch", ".", "cos", "(", "rg", ")", "-", "torch", ".", "cos", "(", "ra", ")", "\n", "rt_sin", "=", "torch", ".", "sin", "(", "rg", ")", "-", "torch", ".", "sin", "(", "ra", ")", "\n", "rts", "=", "[", "rt_cos", ",", "rt_sin", "]", "\n", "", "else", ":", "\n", "            ", "rts", "=", "[", "rg", "-", "ra", "]", "\n", "\n", "", "cts", "=", "[", "g", "-", "a", "for", "g", ",", "a", "in", "zip", "(", "cgs", ",", "cas", ")", "]", "\n", "return", "torch", ".", "cat", "(", "[", "xt", ",", "yt", ",", "zt", ",", "dxt", ",", "dyt", ",", "dzt", ",", "*", "rts", ",", "*", "cts", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.ResidualCoder.decode_torch": [[45, 78], ["torch.split", "torch.sqrt", "torch.cat", "torch.split", "torch.split", "torch.exp", "torch.exp", "torch.exp", "torch.atan2", "torch.cos", "torch.sin", "zip"], "methods", ["None"], ["", "def", "decode_torch", "(", "self", ",", "box_encodings", ",", "anchors", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            box_encodings: (B, N, 7 + C) or (N, 7 + C) [x, y, z, dx, dy, dz, heading or *[cos, sin], ...]\n            anchors: (B, N, 7 + C) or (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n\n        Returns:\n\n        \"\"\"", "\n", "xa", ",", "ya", ",", "za", ",", "dxa", ",", "dya", ",", "dza", ",", "ra", ",", "*", "cas", "=", "torch", ".", "split", "(", "anchors", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "if", "not", "self", ".", "encode_angle_by_sincos", ":", "\n", "            ", "xt", ",", "yt", ",", "zt", ",", "dxt", ",", "dyt", ",", "dzt", ",", "rt", ",", "*", "cts", "=", "torch", ".", "split", "(", "box_encodings", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "xt", ",", "yt", ",", "zt", ",", "dxt", ",", "dyt", ",", "dzt", ",", "cost", ",", "sint", ",", "*", "cts", "=", "torch", ".", "split", "(", "box_encodings", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "diagonal", "=", "torch", ".", "sqrt", "(", "dxa", "**", "2", "+", "dya", "**", "2", ")", "\n", "xg", "=", "xt", "*", "diagonal", "+", "xa", "\n", "yg", "=", "yt", "*", "diagonal", "+", "ya", "\n", "zg", "=", "zt", "*", "dza", "+", "za", "\n", "\n", "dxg", "=", "torch", ".", "exp", "(", "dxt", ")", "*", "dxa", "\n", "dyg", "=", "torch", ".", "exp", "(", "dyt", ")", "*", "dya", "\n", "dzg", "=", "torch", ".", "exp", "(", "dzt", ")", "*", "dza", "\n", "\n", "if", "self", ".", "encode_angle_by_sincos", ":", "\n", "            ", "rg_cos", "=", "cost", "+", "torch", ".", "cos", "(", "ra", ")", "\n", "rg_sin", "=", "sint", "+", "torch", ".", "sin", "(", "ra", ")", "\n", "rg", "=", "torch", ".", "atan2", "(", "rg_sin", ",", "rg_cos", ")", "\n", "", "else", ":", "\n", "            ", "rg", "=", "rt", "+", "ra", "\n", "\n", "", "cgs", "=", "[", "t", "+", "a", "for", "t", ",", "a", "in", "zip", "(", "cts", ",", "cas", ")", "]", "\n", "return", "torch", ".", "cat", "(", "[", "xg", ",", "yg", ",", "zg", ",", "dxg", ",", "dyg", ",", "dzg", ",", "rg", ",", "*", "cgs", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PreviousResidualDecoder.__init__": [[81, 84], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "code_size", "=", "7", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "code_size", "=", "code_size", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PreviousResidualDecoder.decode_torch": [[85, 110], ["torch.split", "torch.split", "torch.sqrt", "torch.cat", "torch.exp", "torch.exp", "torch.exp", "zip"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "decode_torch", "(", "box_encodings", ",", "anchors", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            box_encodings:  (B, N, 7 + ?) x, y, z, w, l, h, r, custom values\n            anchors: (B, N, 7 + C) or (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n\n        Returns:\n\n        \"\"\"", "\n", "xa", ",", "ya", ",", "za", ",", "dxa", ",", "dya", ",", "dza", ",", "ra", ",", "*", "cas", "=", "torch", ".", "split", "(", "anchors", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "xt", ",", "yt", ",", "zt", ",", "wt", ",", "lt", ",", "ht", ",", "rt", ",", "*", "cts", "=", "torch", ".", "split", "(", "box_encodings", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "\n", "diagonal", "=", "torch", ".", "sqrt", "(", "dxa", "**", "2", "+", "dya", "**", "2", ")", "\n", "xg", "=", "xt", "*", "diagonal", "+", "xa", "\n", "yg", "=", "yt", "*", "diagonal", "+", "ya", "\n", "zg", "=", "zt", "*", "dza", "+", "za", "\n", "\n", "dxg", "=", "torch", ".", "exp", "(", "lt", ")", "*", "dxa", "\n", "dyg", "=", "torch", ".", "exp", "(", "wt", ")", "*", "dya", "\n", "dzg", "=", "torch", ".", "exp", "(", "ht", ")", "*", "dza", "\n", "rg", "=", "rt", "+", "ra", "\n", "\n", "cgs", "=", "[", "t", "+", "a", "for", "t", ",", "a", "in", "zip", "(", "cts", ",", "cas", ")", "]", "\n", "return", "torch", ".", "cat", "(", "[", "xg", ",", "yg", ",", "zg", ",", "dxg", ",", "dyg", ",", "dzg", ",", "rg", ",", "*", "cgs", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PreviousResidualRoIDecoder.__init__": [[113, 116], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "code_size", "=", "7", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "code_size", "=", "code_size", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PreviousResidualRoIDecoder.decode_torch": [[117, 142], ["torch.split", "torch.split", "torch.sqrt", "torch.cat", "torch.exp", "torch.exp", "torch.exp", "zip"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "decode_torch", "(", "box_encodings", ",", "anchors", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            box_encodings:  (B, N, 7 + ?) x, y, z, w, l, h, r, custom values\n            anchors: (B, N, 7 + C) or (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n\n        Returns:\n\n        \"\"\"", "\n", "xa", ",", "ya", ",", "za", ",", "dxa", ",", "dya", ",", "dza", ",", "ra", ",", "*", "cas", "=", "torch", ".", "split", "(", "anchors", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "xt", ",", "yt", ",", "zt", ",", "wt", ",", "lt", ",", "ht", ",", "rt", ",", "*", "cts", "=", "torch", ".", "split", "(", "box_encodings", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "\n", "diagonal", "=", "torch", ".", "sqrt", "(", "dxa", "**", "2", "+", "dya", "**", "2", ")", "\n", "xg", "=", "xt", "*", "diagonal", "+", "xa", "\n", "yg", "=", "yt", "*", "diagonal", "+", "ya", "\n", "zg", "=", "zt", "*", "dza", "+", "za", "\n", "\n", "dxg", "=", "torch", ".", "exp", "(", "lt", ")", "*", "dxa", "\n", "dyg", "=", "torch", ".", "exp", "(", "wt", ")", "*", "dya", "\n", "dzg", "=", "torch", ".", "exp", "(", "ht", ")", "*", "dza", "\n", "rg", "=", "ra", "-", "rt", "\n", "\n", "cgs", "=", "[", "t", "+", "a", "for", "t", ",", "a", "in", "zip", "(", "cts", ",", "cas", ")", "]", "\n", "return", "torch", ".", "cat", "(", "[", "xg", ",", "yg", ",", "zg", ",", "dxg", ",", "dyg", ",", "dzg", ",", "rg", ",", "*", "cgs", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.__init__": [[145, 152], ["object.__init__", "torch.from_numpy().cuda().float", "box_coder_utils.PointResidualCoder.mean_size.min", "torch.from_numpy().cuda", "torch.from_numpy", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "code_size", "=", "8", ",", "use_mean_size", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "code_size", "=", "code_size", "\n", "self", ".", "use_mean_size", "=", "use_mean_size", "\n", "if", "self", ".", "use_mean_size", ":", "\n", "            ", "self", ".", "mean_size", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "kwargs", "[", "'mean_size'", "]", ")", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "assert", "self", ".", "mean_size", ".", "min", "(", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.encode_torch": [[153, 188], ["torch.clamp_min", "torch.split", "torch.split", "torch.cat", "torch.split", "torch.sqrt", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "gt_classes.max", "torch.cos", "torch.sin"], "methods", ["None"], ["", "", "def", "encode_torch", "(", "self", ",", "gt_boxes", ",", "points", ",", "gt_classes", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            gt_boxes: (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n            points: (N, 3) [x, y, z]\n            gt_classes: (N) [1, num_classes]\n        Returns:\n            box_coding: (N, 8 + C)\n        \"\"\"", "\n", "gt_boxes", "[", ":", ",", "3", ":", "6", "]", "=", "torch", ".", "clamp_min", "(", "gt_boxes", "[", ":", ",", "3", ":", "6", "]", ",", "min", "=", "1e-5", ")", "\n", "\n", "xg", ",", "yg", ",", "zg", ",", "dxg", ",", "dyg", ",", "dzg", ",", "rg", ",", "*", "cgs", "=", "torch", ".", "split", "(", "gt_boxes", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "xa", ",", "ya", ",", "za", "=", "torch", ".", "split", "(", "points", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "\n", "if", "self", ".", "use_mean_size", ":", "\n", "            ", "assert", "gt_classes", ".", "max", "(", ")", "<=", "self", ".", "mean_size", ".", "shape", "[", "0", "]", "\n", "point_anchor_size", "=", "self", ".", "mean_size", "[", "gt_classes", "-", "1", "]", "\n", "dxa", ",", "dya", ",", "dza", "=", "torch", ".", "split", "(", "point_anchor_size", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "diagonal", "=", "torch", ".", "sqrt", "(", "dxa", "**", "2", "+", "dya", "**", "2", ")", "\n", "xt", "=", "(", "xg", "-", "xa", ")", "/", "diagonal", "\n", "yt", "=", "(", "yg", "-", "ya", ")", "/", "diagonal", "\n", "zt", "=", "(", "zg", "-", "za", ")", "/", "dza", "\n", "dxt", "=", "torch", ".", "log", "(", "dxg", "/", "dxa", ")", "\n", "dyt", "=", "torch", ".", "log", "(", "dyg", "/", "dya", ")", "\n", "dzt", "=", "torch", ".", "log", "(", "dzg", "/", "dza", ")", "\n", "", "else", ":", "\n", "            ", "xt", "=", "(", "xg", "-", "xa", ")", "\n", "yt", "=", "(", "yg", "-", "ya", ")", "\n", "zt", "=", "(", "zg", "-", "za", ")", "\n", "dxt", "=", "torch", ".", "log", "(", "dxg", ")", "\n", "dyt", "=", "torch", ".", "log", "(", "dyg", ")", "\n", "dzt", "=", "torch", ".", "log", "(", "dzg", ")", "\n", "\n", "", "cts", "=", "[", "g", "for", "g", "in", "cgs", "]", "\n", "return", "torch", ".", "cat", "(", "[", "xt", ",", "yt", ",", "zt", ",", "dxt", ",", "dyt", ",", "dzt", ",", "torch", ".", "cos", "(", "rg", ")", ",", "torch", ".", "sin", "(", "rg", ")", ",", "*", "cts", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.decode_torch": [[189, 223], ["torch.split", "torch.split", "torch.atan2", "torch.cat", "torch.split", "torch.sqrt", "torch.split", "pred_classes.max", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["None"], ["", "def", "decode_torch", "(", "self", ",", "box_encodings", ",", "points", ",", "pred_classes", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            box_encodings: (N, 8 + C) [x, y, z, dx, dy, dz, cos, sin, ...]\n            points: [x, y, z]\n            pred_classes: (N) [1, num_classes]\n        Returns:\n\n        \"\"\"", "\n", "xt", ",", "yt", ",", "zt", ",", "dxt", ",", "dyt", ",", "dzt", ",", "cost", ",", "sint", ",", "*", "cts", "=", "torch", ".", "split", "(", "box_encodings", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "xa", ",", "ya", ",", "za", "=", "torch", ".", "split", "(", "points", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "\n", "if", "self", ".", "use_mean_size", ":", "\n", "            ", "assert", "pred_classes", ".", "max", "(", ")", "<=", "self", ".", "mean_size", ".", "shape", "[", "0", "]", "\n", "point_anchor_size", "=", "self", ".", "mean_size", "[", "pred_classes", "-", "1", "]", "\n", "dxa", ",", "dya", ",", "dza", "=", "torch", ".", "split", "(", "point_anchor_size", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "diagonal", "=", "torch", ".", "sqrt", "(", "dxa", "**", "2", "+", "dya", "**", "2", ")", "\n", "xg", "=", "xt", "*", "diagonal", "+", "xa", "\n", "yg", "=", "yt", "*", "diagonal", "+", "ya", "\n", "zg", "=", "zt", "*", "dza", "+", "za", "\n", "\n", "dxg", "=", "torch", ".", "exp", "(", "dxt", ")", "*", "dxa", "\n", "dyg", "=", "torch", ".", "exp", "(", "dyt", ")", "*", "dya", "\n", "dzg", "=", "torch", ".", "exp", "(", "dzt", ")", "*", "dza", "\n", "", "else", ":", "\n", "            ", "xg", "=", "xt", "+", "xa", "\n", "yg", "=", "yt", "+", "ya", "\n", "zg", "=", "zt", "+", "za", "\n", "dxg", ",", "dyg", ",", "dzg", "=", "torch", ".", "split", "(", "torch", ".", "exp", "(", "box_encodings", "[", "...", ",", "3", ":", "6", "]", ")", ",", "1", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "rg", "=", "torch", ".", "atan2", "(", "sint", ",", "cost", ")", "\n", "\n", "cgs", "=", "[", "t", "for", "t", "in", "cts", "]", "\n", "return", "torch", ".", "cat", "(", "[", "xg", ",", "yg", ",", "zg", ",", "dxg", ",", "dyg", ",", "dzg", ",", "rg", ",", "*", "cgs", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.Object3d.__init__": [[19, 37], ["line.strip().split", "object3d_kitti.cls_type_to_id", "float", "float", "float", "numpy.array", "float", "float", "float", "numpy.array", "numpy.linalg.norm", "float", "object3d_kitti.Object3d.get_kitti_obj_level", "float", "line.strip", "float", "float", "float", "float", "float", "float", "float", "line.strip().split.__len__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.cls_type_to_id", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.Object3d.get_kitti_obj_level", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["    ", "def", "__init__", "(", "self", ",", "line", ")", ":", "\n", "        ", "label", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "\n", "self", ".", "src", "=", "line", "\n", "self", ".", "cls_type", "=", "label", "[", "0", "]", "\n", "self", ".", "cls_id", "=", "cls_type_to_id", "(", "self", ".", "cls_type", ")", "\n", "self", ".", "truncation", "=", "float", "(", "label", "[", "1", "]", ")", "\n", "self", ".", "occlusion", "=", "float", "(", "label", "[", "2", "]", ")", "# 0:fully visible 1:partly occluded 2:largely occluded 3:unknown", "\n", "self", ".", "alpha", "=", "float", "(", "label", "[", "3", "]", ")", "\n", "self", ".", "box2d", "=", "np", ".", "array", "(", "(", "float", "(", "label", "[", "4", "]", ")", ",", "float", "(", "label", "[", "5", "]", ")", ",", "float", "(", "label", "[", "6", "]", ")", ",", "float", "(", "label", "[", "7", "]", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "h", "=", "float", "(", "label", "[", "8", "]", ")", "\n", "self", ".", "w", "=", "float", "(", "label", "[", "9", "]", ")", "\n", "self", ".", "l", "=", "float", "(", "label", "[", "10", "]", ")", "\n", "self", ".", "loc", "=", "np", ".", "array", "(", "(", "float", "(", "label", "[", "11", "]", ")", ",", "float", "(", "label", "[", "12", "]", ")", ",", "float", "(", "label", "[", "13", "]", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "dis_to_cam", "=", "np", ".", "linalg", ".", "norm", "(", "self", ".", "loc", ")", "\n", "self", ".", "ry", "=", "float", "(", "label", "[", "14", "]", ")", "\n", "self", ".", "score", "=", "float", "(", "label", "[", "15", "]", ")", "if", "label", ".", "__len__", "(", ")", "==", "16", "else", "-", "1.0", "\n", "self", ".", "level_str", "=", "None", "\n", "self", ".", "level", "=", "self", ".", "get_kitti_obj_level", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.Object3d.get_kitti_obj_level": [[38, 53], ["float", "float"], "methods", ["None"], ["", "def", "get_kitti_obj_level", "(", "self", ")", ":", "\n", "        ", "height", "=", "float", "(", "self", ".", "box2d", "[", "3", "]", ")", "-", "float", "(", "self", ".", "box2d", "[", "1", "]", ")", "+", "1", "\n", "\n", "if", "height", ">=", "40", "and", "self", ".", "truncation", "<=", "0.15", "and", "self", ".", "occlusion", "<=", "0", ":", "\n", "            ", "self", ".", "level_str", "=", "'Easy'", "\n", "return", "0", "# Easy", "\n", "", "elif", "height", ">=", "25", "and", "self", ".", "truncation", "<=", "0.3", "and", "self", ".", "occlusion", "<=", "1", ":", "\n", "            ", "self", ".", "level_str", "=", "'Moderate'", "\n", "return", "1", "# Moderate", "\n", "", "elif", "height", ">=", "25", "and", "self", ".", "truncation", "<=", "0.5", "and", "self", ".", "occlusion", "<=", "2", ":", "\n", "            ", "self", ".", "level_str", "=", "'Hard'", "\n", "return", "2", "# Hard", "\n", "", "else", ":", "\n", "            ", "self", ".", "level_str", "=", "'UnKnown'", "\n", "return", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.Object3d.generate_corners3d": [[54, 71], ["numpy.array", "numpy.vstack", "numpy.dot", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "methods", ["None"], ["", "", "def", "generate_corners3d", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        generate corners3d representation for this object\n        :return corners_3d: (8, 3) corners of box3d in camera coord\n        \"\"\"", "\n", "l", ",", "h", ",", "w", "=", "self", ".", "l", ",", "self", ".", "h", ",", "self", ".", "w", "\n", "x_corners", "=", "[", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", ",", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", "]", "\n", "y_corners", "=", "[", "0", ",", "0", ",", "0", ",", "0", ",", "-", "h", ",", "-", "h", ",", "-", "h", ",", "-", "h", "]", "\n", "z_corners", "=", "[", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", ",", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", "]", "\n", "\n", "R", "=", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "self", ".", "ry", ")", ",", "0", ",", "np", ".", "sin", "(", "self", ".", "ry", ")", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "-", "np", ".", "sin", "(", "self", ".", "ry", ")", ",", "0", ",", "np", ".", "cos", "(", "self", ".", "ry", ")", "]", "]", ")", "\n", "corners3d", "=", "np", ".", "vstack", "(", "[", "x_corners", ",", "y_corners", ",", "z_corners", "]", ")", "# (3, 8)", "\n", "corners3d", "=", "np", ".", "dot", "(", "R", ",", "corners3d", ")", ".", "T", "\n", "corners3d", "=", "corners3d", "+", "self", ".", "loc", "\n", "return", "corners3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.Object3d.to_str": [[72, 77], ["None"], "methods", ["None"], ["", "def", "to_str", "(", "self", ")", ":", "\n", "        ", "print_str", "=", "'%s %.3f %.3f %.3f box2d: %s hwl: [%.3f %.3f %.3f] pos: %s ry: %.3f'", "%", "(", "self", ".", "cls_type", ",", "self", ".", "truncation", ",", "self", ".", "occlusion", ",", "self", ".", "alpha", ",", "self", ".", "box2d", ",", "self", ".", "h", ",", "self", ".", "w", ",", "self", ".", "l", ",", "\n", "self", ".", "loc", ",", "self", ".", "ry", ")", "\n", "return", "print_str", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.Object3d.to_kitti_format": [[78, 84], ["int"], "methods", ["None"], ["", "def", "to_kitti_format", "(", "self", ")", ":", "\n", "        ", "kitti_str", "=", "'%s %.2f %d %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f'", "%", "(", "self", ".", "cls_type", ",", "self", ".", "truncation", ",", "int", "(", "self", ".", "occlusion", ")", ",", "self", ".", "alpha", ",", "self", ".", "box2d", "[", "0", "]", ",", "self", ".", "box2d", "[", "1", "]", ",", "\n", "self", ".", "box2d", "[", "2", "]", ",", "self", ".", "box2d", "[", "3", "]", ",", "self", ".", "h", ",", "self", ".", "w", ",", "self", ".", "l", ",", "self", ".", "loc", "[", "0", "]", ",", "self", ".", "loc", "[", "1", "]", ",", "self", ".", "loc", "[", "2", "]", ",", "\n", "self", ".", "ry", ")", "\n", "return", "kitti_str", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.get_objects_from_label": [[4, 9], ["open", "f.readlines", "object3d_kitti.Object3d"], "function", ["None"], ["def", "get_objects_from_label", "(", "label_file", ")", ":", "\n", "    ", "with", "open", "(", "label_file", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "", "objects", "=", "[", "Object3d", "(", "line", ")", "for", "line", "in", "lines", "]", "\n", "return", "objects", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.cls_type_to_id": [[11, 16], ["type_to_id.keys"], "function", ["None"], ["", "def", "cls_type_to_id", "(", "cls_type", ")", ":", "\n", "    ", "type_to_id", "=", "{", "'Car'", ":", "1", ",", "'Pedestrian'", ":", "2", ",", "'Cyclist'", ":", "3", ",", "'Van'", ":", "4", "}", "\n", "if", "cls_type", "not", "in", "type_to_id", ".", "keys", "(", ")", ":", "\n", "        ", "return", "-", "1", "\n", "", "return", "type_to_id", "[", "cls_type", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.check_numpy_to_torch": [[14, 18], ["isinstance", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["def", "check_numpy_to_torch", "(", "x", ")", ":", "\n", "    ", "if", "isinstance", "(", "x", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "return", "torch", ".", "from_numpy", "(", "x", ")", ".", "float", "(", ")", ",", "True", "\n", "", "return", "x", ",", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.limit_period": [[20, 24], ["common_utils.check_numpy_to_torch", "ans.numpy", "torch.floor", "torch.floor", "torch.floor"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch"], ["", "def", "limit_period", "(", "val", ",", "offset", "=", "0.5", ",", "period", "=", "np", ".", "pi", ")", ":", "\n", "    ", "val", ",", "is_numpy", "=", "check_numpy_to_torch", "(", "val", ")", "\n", "ans", "=", "val", "-", "torch", ".", "floor", "(", "val", "/", "period", "+", "offset", ")", "*", "period", "\n", "return", "ans", ".", "numpy", "(", ")", "if", "is_numpy", "else", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.drop_info_with_name": [[26, 32], ["info.keys", "enumerate"], "function", ["None"], ["", "def", "drop_info_with_name", "(", "info", ",", "name", ")", ":", "\n", "    ", "ret_info", "=", "{", "}", "\n", "keep_indices", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "info", "[", "'name'", "]", ")", "if", "x", "!=", "name", "]", "\n", "for", "key", "in", "info", ".", "keys", "(", ")", ":", "\n", "        ", "ret_info", "[", "key", "]", "=", "info", "[", "key", "]", "[", "keep_indices", "]", "\n", "", "return", "ret_info", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.rotate_points_along_z": [[34, 57], ["common_utils.check_numpy_to_torch", "common_utils.check_numpy_to_torch", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "angle.new_zeros", "angle.new_ones", "torch.stack().view().float", "torch.stack().view().float", "torch.stack().view().float", "torch.matmul", "torch.matmul", "torch.matmul", "torch.cat", "torch.cat", "torch.cat", "torch.cat.numpy", "torch.stack().view", "torch.stack().view", "torch.stack().view", "torch.stack", "torch.stack", "torch.stack"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch"], ["", "def", "rotate_points_along_z", "(", "points", ",", "angle", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        points: (B, N, 3 + C)\n        angle: (B), angle along z-axis, angle increases x ==> y\n    Returns:\n\n    \"\"\"", "\n", "points", ",", "is_numpy", "=", "check_numpy_to_torch", "(", "points", ")", "\n", "angle", ",", "_", "=", "check_numpy_to_torch", "(", "angle", ")", "\n", "\n", "cosa", "=", "torch", ".", "cos", "(", "angle", ")", "\n", "sina", "=", "torch", ".", "sin", "(", "angle", ")", "\n", "zeros", "=", "angle", ".", "new_zeros", "(", "points", ".", "shape", "[", "0", "]", ")", "\n", "ones", "=", "angle", ".", "new_ones", "(", "points", ".", "shape", "[", "0", "]", ")", "\n", "rot_matrix", "=", "torch", ".", "stack", "(", "(", "\n", "cosa", ",", "sina", ",", "zeros", ",", "\n", "-", "sina", ",", "cosa", ",", "zeros", ",", "\n", "zeros", ",", "zeros", ",", "ones", "\n", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", ".", "float", "(", ")", "\n", "points_rot", "=", "torch", ".", "matmul", "(", "points", "[", ":", ",", ":", ",", "0", ":", "3", "]", ",", "rot_matrix", ")", "\n", "points_rot", "=", "torch", ".", "cat", "(", "(", "points_rot", ",", "points", "[", ":", ",", ":", ",", "3", ":", "]", ")", ",", "dim", "=", "-", "1", ")", "\n", "return", "points_rot", ".", "numpy", "(", ")", "if", "is_numpy", "else", "points_rot", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.mask_points_by_range": [[59, 63], ["None"], "function", ["None"], ["", "def", "mask_points_by_range", "(", "points", ",", "limit_range", ")", ":", "\n", "    ", "mask", "=", "(", "points", "[", ":", ",", "0", "]", ">=", "limit_range", "[", "0", "]", ")", "&", "(", "points", "[", ":", ",", "0", "]", "<=", "limit_range", "[", "3", "]", ")", "&", "(", "points", "[", ":", ",", "1", "]", ">=", "limit_range", "[", "1", "]", ")", "&", "(", "points", "[", ":", ",", "1", "]", "<=", "limit_range", "[", "4", "]", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.get_voxel_centers": [[65, 82], ["voxel_coords[].float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "get_voxel_centers", "(", "voxel_coords", ",", "downsample_times", ",", "voxel_size", ",", "point_cloud_range", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        voxel_coords: (N, 3)\n        downsample_times:\n        voxel_size:\n        point_cloud_range:\n\n    Returns:\n\n    \"\"\"", "\n", "assert", "voxel_coords", ".", "shape", "[", "1", "]", "==", "3", "\n", "voxel_centers", "=", "voxel_coords", "[", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", ".", "float", "(", ")", "# (xyz)", "\n", "voxel_size", "=", "torch", ".", "tensor", "(", "voxel_size", ",", "device", "=", "voxel_centers", ".", "device", ")", ".", "float", "(", ")", "*", "downsample_times", "\n", "pc_range", "=", "torch", ".", "tensor", "(", "point_cloud_range", "[", "0", ":", "3", "]", ",", "device", "=", "voxel_centers", ".", "device", ")", ".", "float", "(", ")", "\n", "voxel_centers", "=", "(", "voxel_centers", "+", "0.5", ")", "*", "voxel_size", "+", "pc_range", "\n", "return", "voxel_centers", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.create_logger": [[84, 98], ["logging.getLogger", "logging.getLogger.setLevel", "logging.Formatter", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler"], "function", ["None"], ["", "def", "create_logger", "(", "log_file", "=", "None", ",", "rank", "=", "0", ",", "log_level", "=", "logging", ".", "INFO", ")", ":", "\n", "    ", "logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "logger", ".", "setLevel", "(", "log_level", "if", "rank", "==", "0", "else", "'ERROR'", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s  %(levelname)5s  %(message)s'", ")", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console", ".", "setLevel", "(", "log_level", "if", "rank", "==", "0", "else", "'ERROR'", ")", "\n", "console", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "console", ")", "\n", "if", "log_file", "is", "not", "None", ":", "\n", "        ", "file_handler", "=", "logging", ".", "FileHandler", "(", "filename", "=", "log_file", ")", "\n", "file_handler", ".", "setLevel", "(", "log_level", "if", "rank", "==", "0", "else", "'ERROR'", ")", "\n", "file_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "file_handler", ")", "\n", "", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.set_random_seed": [[100, 106], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed"], "function", ["None"], ["", "def", "set_random_seed", "(", "seed", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.keep_arrays_by_name": [[108, 112], ["numpy.array", "enumerate"], "function", ["None"], ["", "def", "keep_arrays_by_name", "(", "gt_names", ",", "used_classes", ")", ":", "\n", "    ", "inds", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "gt_names", ")", "if", "x", "in", "used_classes", "]", "\n", "inds", "=", "np", ".", "array", "(", "inds", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "return", "inds", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.init_dist_slurm": [[114, 139], ["int", "int", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "subprocess.getoutput", "str", "str", "str", "torch.init_process_group", "torch.get_world_size", "torch.get_rank"], "function", ["None"], ["", "def", "init_dist_slurm", "(", "tcp_port", ",", "local_rank", ",", "backend", "=", "'nccl'", ")", ":", "\n", "    ", "\"\"\"\n    modified from https://github.com/open-mmlab/mmdetection\n    Args:\n        tcp_port:\n        backend:\n\n    Returns:\n\n    \"\"\"", "\n", "proc_id", "=", "int", "(", "os", ".", "environ", "[", "'SLURM_PROCID'", "]", ")", "\n", "ntasks", "=", "int", "(", "os", ".", "environ", "[", "'SLURM_NTASKS'", "]", ")", "\n", "node_list", "=", "os", ".", "environ", "[", "'SLURM_NODELIST'", "]", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "proc_id", "%", "num_gpus", ")", "\n", "addr", "=", "subprocess", ".", "getoutput", "(", "'scontrol show hostname {} | head -n1'", ".", "format", "(", "node_list", ")", ")", "\n", "os", ".", "environ", "[", "'MASTER_PORT'", "]", "=", "str", "(", "tcp_port", ")", "\n", "os", ".", "environ", "[", "'MASTER_ADDR'", "]", "=", "addr", "\n", "os", ".", "environ", "[", "'WORLD_SIZE'", "]", "=", "str", "(", "ntasks", ")", "\n", "os", ".", "environ", "[", "'RANK'", "]", "=", "str", "(", "proc_id", ")", "\n", "dist", ".", "init_process_group", "(", "backend", "=", "backend", ")", "\n", "\n", "total_gpus", "=", "dist", ".", "get_world_size", "(", ")", "\n", "rank", "=", "dist", ".", "get_rank", "(", ")", "\n", "return", "total_gpus", ",", "rank", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.init_dist_pytorch": [[141, 155], ["torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.init_process_group", "torch.get_rank", "torch.get_start_method", "torch.set_start_method"], "function", ["None"], ["", "def", "init_dist_pytorch", "(", "tcp_port", ",", "local_rank", ",", "backend", "=", "'nccl'", ")", ":", "\n", "    ", "if", "mp", ".", "get_start_method", "(", "allow_none", "=", "True", ")", "is", "None", ":", "\n", "        ", "mp", ".", "set_start_method", "(", "'spawn'", ")", "\n", "\n", "", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "local_rank", "%", "num_gpus", ")", "\n", "dist", ".", "init_process_group", "(", "\n", "backend", "=", "backend", ",", "\n", "init_method", "=", "'tcp://127.0.0.1:%d'", "%", "tcp_port", ",", "\n", "rank", "=", "local_rank", ",", "\n", "world_size", "=", "num_gpus", "\n", ")", "\n", "rank", "=", "dist", ".", "get_rank", "(", ")", "\n", "return", "num_gpus", ",", "rank", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.get_dist_info": [[157, 172], ["torch.is_available", "torch.get_rank", "torch.get_world_size", "torch.is_initialized"], "function", ["None"], ["", "def", "get_dist_info", "(", ")", ":", "\n", "    ", "if", "torch", ".", "__version__", "<", "'1.0'", ":", "\n", "        ", "initialized", "=", "dist", ".", "_initialized", "\n", "", "else", ":", "\n", "        ", "if", "dist", ".", "is_available", "(", ")", ":", "\n", "            ", "initialized", "=", "dist", ".", "is_initialized", "(", ")", "\n", "", "else", ":", "\n", "            ", "initialized", "=", "False", "\n", "", "", "if", "initialized", ":", "\n", "        ", "rank", "=", "dist", ".", "get_rank", "(", ")", "\n", "world_size", "=", "dist", ".", "get_world_size", "(", ")", "\n", "", "else", ":", "\n", "        ", "rank", "=", "0", "\n", "world_size", "=", "1", "\n", "", "return", "rank", ",", "world_size", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.merge_results_dist": [[174, 196], ["common_utils.get_dist_info", "os.makedirs", "torch.barrier", "pickle.dump", "torch.barrier", "range", "zip", "shutil.rmtree", "open", "os.path.join", "part_list.append", "ordered_results.extend", "os.path.join", "pickle.load", "list", "open"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.get_dist_info"], ["", "def", "merge_results_dist", "(", "result_part", ",", "size", ",", "tmpdir", ")", ":", "\n", "    ", "rank", ",", "world_size", "=", "get_dist_info", "(", ")", "\n", "os", ".", "makedirs", "(", "tmpdir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "dist", ".", "barrier", "(", ")", "\n", "pickle", ".", "dump", "(", "result_part", ",", "open", "(", "os", ".", "path", ".", "join", "(", "tmpdir", ",", "'result_part_{}.pkl'", ".", "format", "(", "rank", ")", ")", ",", "'wb'", ")", ")", "\n", "dist", ".", "barrier", "(", ")", "\n", "\n", "if", "rank", "!=", "0", ":", "\n", "        ", "return", "None", "\n", "\n", "", "part_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "world_size", ")", ":", "\n", "        ", "part_file", "=", "os", ".", "path", ".", "join", "(", "tmpdir", ",", "'result_part_{}.pkl'", ".", "format", "(", "i", ")", ")", "\n", "part_list", ".", "append", "(", "pickle", ".", "load", "(", "open", "(", "part_file", ",", "'rb'", ")", ")", ")", "\n", "\n", "", "ordered_results", "=", "[", "]", "\n", "for", "res", "in", "zip", "(", "*", "part_list", ")", ":", "\n", "        ", "ordered_results", ".", "extend", "(", "list", "(", "res", ")", ")", "\n", "", "ordered_results", "=", "ordered_results", "[", ":", "size", "]", "\n", "shutil", ".", "rmtree", "(", "tmpdir", ")", "\n", "return", "ordered_results", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.in_hull": [[10, 25], ["isinstance", "scipy.spatial.Delaunay", "scipy.spatial.Delaunay.find_simplex", "print", "numpy.zeros", "str"], "function", ["None"], ["def", "in_hull", "(", "p", ",", "hull", ")", ":", "\n", "    ", "\"\"\"\n    :param p: (N, K) test points\n    :param hull: (M, K) M corners of a box\n    :return (N) bool\n    \"\"\"", "\n", "try", ":", "\n", "        ", "if", "not", "isinstance", "(", "hull", ",", "Delaunay", ")", ":", "\n", "            ", "hull", "=", "Delaunay", "(", "hull", ")", "\n", "", "flag", "=", "hull", ".", "find_simplex", "(", "p", ")", ">=", "0", "\n", "", "except", "scipy", ".", "spatial", ".", "qhull", ".", "QhullError", ":", "\n", "        ", "print", "(", "'Warning: not a hull %s'", "%", "str", "(", "hull", ")", ")", "\n", "flag", "=", "np", ".", "zeros", "(", "p", ".", "shape", "[", "0", "]", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "\n", "", "return", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes_to_corners_3d": [[27, 53], ["common_utils.check_numpy_to_torch", "common_utils.rotate_points_along_z().view", "boxes3d.new_tensor", "boxes3d[].repeat", "common_utils.rotate_points_along_z().view.numpy", "common_utils.rotate_points_along_z", "common_utils.rotate_points_along_z().view.view"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z"], ["", "def", "boxes_to_corners_3d", "(", "boxes3d", ")", ":", "\n", "    ", "\"\"\"\n        7 -------- 4\n       /|         /|\n      6 -------- 5 .\n      | |        | |\n      . 3 -------- 0\n      |/         |/\n      2 -------- 1\n    Args:\n        boxes3d:  (N, 7) [x, y, z, dx, dy, dz, heading], (x, y, z) is the box center\n\n    Returns:\n    \"\"\"", "\n", "boxes3d", ",", "is_numpy", "=", "common_utils", ".", "check_numpy_to_torch", "(", "boxes3d", ")", "\n", "\n", "template", "=", "boxes3d", ".", "new_tensor", "(", "(", "\n", "[", "1", ",", "1", ",", "-", "1", "]", ",", "[", "1", ",", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "1", ",", "-", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "1", "]", ",", "[", "1", ",", "-", "1", ",", "1", "]", ",", "[", "-", "1", ",", "-", "1", ",", "1", "]", ",", "[", "-", "1", ",", "1", ",", "1", "]", ",", "\n", ")", ")", "/", "2", "\n", "\n", "corners3d", "=", "boxes3d", "[", ":", ",", "None", ",", "3", ":", "6", "]", ".", "repeat", "(", "1", ",", "8", ",", "1", ")", "*", "template", "[", "None", ",", ":", ",", ":", "]", "\n", "corners3d", "=", "common_utils", ".", "rotate_points_along_z", "(", "corners3d", ".", "view", "(", "-", "1", ",", "8", ",", "3", ")", ",", "boxes3d", "[", ":", ",", "6", "]", ")", ".", "view", "(", "-", "1", ",", "8", ",", "3", ")", "\n", "corners3d", "+=", "boxes3d", "[", ":", ",", "None", ",", "0", ":", "3", "]", "\n", "\n", "return", "corners3d", ".", "numpy", "(", ")", "if", "is_numpy", "else", "corners3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.mask_boxes_outside_range_numpy": [[55, 72], ["box_utils.boxes_to_corners_3d", "mask.sum"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.boxes_to_corners_3d"], ["", "def", "mask_boxes_outside_range_numpy", "(", "boxes", ",", "limit_range", ",", "min_num_corners", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes: (N, 7) [x, y, z, dx, dy, dz, heading, ...], (x, y, z) is the box center\n        limit_range: [minx, miny, minz, maxx, maxy, maxz]\n        min_num_corners:\n\n    Returns:\n\n    \"\"\"", "\n", "if", "boxes", ".", "shape", "[", "1", "]", ">", "7", ":", "\n", "        ", "boxes", "=", "boxes", "[", ":", ",", "0", ":", "7", "]", "\n", "", "corners", "=", "boxes_to_corners_3d", "(", "boxes", ")", "# (N, 8, 3)", "\n", "mask", "=", "(", "(", "corners", ">=", "limit_range", "[", "0", ":", "3", "]", ")", "&", "(", "corners", "<=", "limit_range", "[", "3", ":", "6", "]", ")", ")", ".", "all", "(", "axis", "=", "2", ")", "\n", "mask", "=", "mask", ".", "sum", "(", "axis", "=", "1", ")", ">=", "min_num_corners", "# (N)", "\n", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.remove_points_in_boxes3d": [[74, 89], ["common_utils.check_numpy_to_torch", "common_utils.check_numpy_to_torch", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_cpu", "points.numpy", "roiaware_pool3d_utils.points_in_boxes_cpu.sum"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_cpu"], ["", "def", "remove_points_in_boxes3d", "(", "points", ",", "boxes3d", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        points: (num_points, 3 + C)\n        boxes3d: (N, 7) [x, y, z, dx, dy, dz, heading], (x, y, z) is the box center, each box DO NOT overlaps\n\n    Returns:\n\n    \"\"\"", "\n", "boxes3d", ",", "is_numpy", "=", "common_utils", ".", "check_numpy_to_torch", "(", "boxes3d", ")", "\n", "points", ",", "is_numpy", "=", "common_utils", ".", "check_numpy_to_torch", "(", "points", ")", "\n", "point_masks", "=", "roiaware_pool3d_utils", ".", "points_in_boxes_cpu", "(", "points", "[", ":", ",", "0", ":", "3", "]", ",", "boxes3d", ")", "\n", "points", "=", "points", "[", "point_masks", ".", "sum", "(", "dim", "=", "0", ")", "==", "0", "]", "\n", "\n", "return", "points", ".", "numpy", "(", ")", "if", "is_numpy", "else", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_kitti_camera_to_lidar": [[91, 106], ["calib.rect_to_lidar", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.rect_to_lidar"], ["", "def", "boxes3d_kitti_camera_to_lidar", "(", "boxes3d_camera", ",", "calib", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes3d_camera: (N, 7) [x, y, z, l, h, w, r] in rect camera coords\n        calib:\n\n    Returns:\n        boxes3d_lidar: [x, y, z, dx, dy, dz, heading], (x, y, z) is the box center\n\n    \"\"\"", "\n", "xyz_camera", "=", "boxes3d_camera", "[", ":", ",", "0", ":", "3", "]", "\n", "l", ",", "h", ",", "w", ",", "r", "=", "boxes3d_camera", "[", ":", ",", "3", ":", "4", "]", ",", "boxes3d_camera", "[", ":", ",", "4", ":", "5", "]", ",", "boxes3d_camera", "[", ":", ",", "5", ":", "6", "]", ",", "boxes3d_camera", "[", ":", ",", "6", ":", "7", "]", "\n", "xyz_lidar", "=", "calib", ".", "rect_to_lidar", "(", "xyz_camera", ")", "\n", "xyz_lidar", "[", ":", ",", "2", "]", "+=", "h", "[", ":", ",", "0", "]", "/", "2", "\n", "return", "np", ".", "concatenate", "(", "[", "xyz_lidar", ",", "l", ",", "w", ",", "h", ",", "-", "(", "r", "+", "np", ".", "pi", "/", "2", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_kitti_fakelidar_to_lidar": [[108, 120], ["numpy.concatenate"], "function", ["None"], ["", "def", "boxes3d_kitti_fakelidar_to_lidar", "(", "boxes3d_lidar", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes3d_fakelidar: (N, 7) [x, y, z, w, l, h, r] in old LiDAR coordinates, z is bottom center\n\n    Returns:\n        boxes3d_lidar: [x, y, z, dx, dy, dz, heading], (x, y, z) is the box center\n\n    \"\"\"", "\n", "w", ",", "l", ",", "h", ",", "r", "=", "boxes3d_lidar", "[", ":", ",", "3", ":", "4", "]", ",", "boxes3d_lidar", "[", ":", ",", "4", ":", "5", "]", ",", "boxes3d_lidar", "[", ":", ",", "5", ":", "6", "]", ",", "boxes3d_lidar", "[", ":", ",", "6", ":", "7", "]", "\n", "boxes3d_lidar", "[", ":", ",", "2", "]", "+=", "h", "[", ":", ",", "0", "]", "/", "2", "\n", "return", "np", ".", "concatenate", "(", "[", "boxes3d_lidar", "[", ":", ",", "0", ":", "3", "]", ",", "l", ",", "w", ",", "h", ",", "-", "(", "r", "+", "np", ".", "pi", "/", "2", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_kitti_lidar_to_fakelidar": [[122, 134], ["numpy.concatenate"], "function", ["None"], ["", "def", "boxes3d_kitti_lidar_to_fakelidar", "(", "boxes3d_lidar", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes3d_lidar: (N, 7) [x, y, z, dx, dy, dz, heading], (x, y, z) is the box center\n\n    Returns:\n        boxes3d_fakelidar: [x, y, z, w, l, h, r] in old LiDAR coordinates, z is bottom center\n\n    \"\"\"", "\n", "dx", ",", "dy", ",", "dz", ",", "heading", "=", "boxes3d_lidar", "[", ":", ",", "3", ":", "4", "]", ",", "boxes3d_lidar", "[", ":", ",", "4", ":", "5", "]", ",", "boxes3d_lidar", "[", ":", ",", "5", ":", "6", "]", ",", "boxes3d_lidar", "[", ":", ",", "6", ":", "7", "]", "\n", "boxes3d_lidar", "[", ":", ",", "2", "]", "-=", "dz", "[", ":", ",", "0", "]", "/", "2", "\n", "return", "np", ".", "concatenate", "(", "[", "boxes3d_lidar", "[", ":", ",", "0", ":", "3", "]", ",", "dy", ",", "dx", ",", "dz", ",", "-", "heading", "-", "np", ".", "pi", "/", "2", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.enlarge_box3d": [[136, 150], ["common_utils.check_numpy_to_torch", "boxes3d.clone", "boxes3d.new_tensor"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch"], ["", "def", "enlarge_box3d", "(", "boxes3d", ",", "extra_width", "=", "(", "0", ",", "0", ",", "0", ")", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes3d: [x, y, z, dx, dy, dz, heading], (x, y, z) is the box center\n        extra_width: [extra_x, extra_y, extra_z]\n\n    Returns:\n\n    \"\"\"", "\n", "boxes3d", ",", "is_numpy", "=", "common_utils", ".", "check_numpy_to_torch", "(", "boxes3d", ")", "\n", "large_boxes3d", "=", "boxes3d", ".", "clone", "(", ")", "\n", "\n", "large_boxes3d", "[", ":", ",", "3", ":", "6", "]", "+=", "boxes3d", ".", "new_tensor", "(", "extra_width", ")", "[", "None", ",", ":", "]", "\n", "return", "large_boxes3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_lidar_to_kitti_camera": [[152, 167], ["calib.lidar_to_rect", "numpy.concatenate", "h.reshape"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.lidar_to_rect"], ["", "def", "boxes3d_lidar_to_kitti_camera", "(", "boxes3d_lidar", ",", "calib", ")", ":", "\n", "    ", "\"\"\"\n    :param boxes3d_lidar: (N, 7) [x, y, z, dx, dy, dz, heading], (x, y, z) is the box center\n    :param calib:\n    :return:\n        boxes3d_camera: (N, 7) [x, y, z, l, h, w, r] in rect camera coords\n    \"\"\"", "\n", "xyz_lidar", "=", "boxes3d_lidar", "[", ":", ",", "0", ":", "3", "]", "\n", "l", ",", "w", ",", "h", ",", "r", "=", "boxes3d_lidar", "[", ":", ",", "3", ":", "4", "]", ",", "boxes3d_lidar", "[", ":", ",", "4", ":", "5", "]", ",", "boxes3d_lidar", "[", ":", ",", "5", ":", "6", "]", ",", "boxes3d_lidar", "[", ":", ",", "6", ":", "7", "]", "\n", "\n", "xyz_lidar", "[", ":", ",", "2", "]", "-=", "h", ".", "reshape", "(", "-", "1", ")", "/", "2", "\n", "xyz_cam", "=", "calib", ".", "lidar_to_rect", "(", "xyz_lidar", ")", "\n", "# xyz_cam[:, 1] += h.reshape(-1) / 2", "\n", "r", "=", "-", "r", "-", "np", ".", "pi", "/", "2", "\n", "return", "np", ".", "concatenate", "(", "[", "xyz_cam", ",", "l", ",", "h", ",", "w", ",", "r", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_to_corners3d_kitti_camera": [[169, 213], ["numpy.array", "numpy.transpose", "numpy.concatenate", "numpy.matmul", "numpy.concatenate", "np.concatenate.astype", "numpy.array", "numpy.array", "numpy.zeros", "numpy.zeros", "numpy.ones", "x_loc.reshape", "x_corners.reshape", "y_loc.reshape", "np.zeros.reshape", "z_loc.reshape", "z_corners.reshape", "h.reshape().repeat", "numpy.array", "x_corners.reshape", "np.zeros.reshape", "z_corners.reshape", "x.reshape", "y.reshape", "z.reshape", "numpy.cos", "numpy.sin", "numpy.cos", "h.reshape", "numpy.sin"], "function", ["None"], ["", "def", "boxes3d_to_corners3d_kitti_camera", "(", "boxes3d", ",", "bottom_center", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    :param boxes3d: (N, 7) [x, y, z, l, h, w, ry] in camera coords, see the definition of ry in KITTI dataset\n    :param bottom_center: whether y is on the bottom center of object\n    :return: corners3d: (N, 8, 3)\n        7 -------- 4\n       /|         /|\n      6 -------- 5 .\n      | |        | |\n      . 3 -------- 0\n      |/         |/\n      2 -------- 1\n    \"\"\"", "\n", "boxes_num", "=", "boxes3d", ".", "shape", "[", "0", "]", "\n", "l", ",", "h", ",", "w", "=", "boxes3d", "[", ":", ",", "3", "]", ",", "boxes3d", "[", ":", ",", "4", "]", ",", "boxes3d", "[", ":", ",", "5", "]", "\n", "x_corners", "=", "np", ".", "array", "(", "[", "l", "/", "2.", ",", "l", "/", "2.", ",", "-", "l", "/", "2.", ",", "-", "l", "/", "2.", ",", "l", "/", "2.", ",", "l", "/", "2.", ",", "-", "l", "/", "2.", ",", "-", "l", "/", "2", "]", ",", "dtype", "=", "np", ".", "float32", ")", ".", "T", "\n", "z_corners", "=", "np", ".", "array", "(", "[", "w", "/", "2.", ",", "-", "w", "/", "2.", ",", "-", "w", "/", "2.", ",", "w", "/", "2.", ",", "w", "/", "2.", ",", "-", "w", "/", "2.", ",", "-", "w", "/", "2.", ",", "w", "/", "2.", "]", ",", "dtype", "=", "np", ".", "float32", ")", ".", "T", "\n", "if", "bottom_center", ":", "\n", "        ", "y_corners", "=", "np", ".", "zeros", "(", "(", "boxes_num", ",", "8", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "y_corners", "[", ":", ",", "4", ":", "8", "]", "=", "-", "h", ".", "reshape", "(", "boxes_num", ",", "1", ")", ".", "repeat", "(", "4", ",", "axis", "=", "1", ")", "# (N, 8)", "\n", "", "else", ":", "\n", "        ", "y_corners", "=", "np", ".", "array", "(", "[", "h", "/", "2.", ",", "h", "/", "2.", ",", "h", "/", "2.", ",", "h", "/", "2.", ",", "-", "h", "/", "2.", ",", "-", "h", "/", "2.", ",", "-", "h", "/", "2.", ",", "-", "h", "/", "2.", "]", ",", "dtype", "=", "np", ".", "float32", ")", ".", "T", "\n", "\n", "", "ry", "=", "boxes3d", "[", ":", ",", "6", "]", "\n", "zeros", ",", "ones", "=", "np", ".", "zeros", "(", "ry", ".", "size", ",", "dtype", "=", "np", ".", "float32", ")", ",", "np", ".", "ones", "(", "ry", ".", "size", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "rot_list", "=", "np", ".", "array", "(", "[", "[", "np", ".", "cos", "(", "ry", ")", ",", "zeros", ",", "-", "np", ".", "sin", "(", "ry", ")", "]", ",", "\n", "[", "zeros", ",", "ones", ",", "zeros", "]", ",", "\n", "[", "np", ".", "sin", "(", "ry", ")", ",", "zeros", ",", "np", ".", "cos", "(", "ry", ")", "]", "]", ")", "# (3, 3, N)", "\n", "R_list", "=", "np", ".", "transpose", "(", "rot_list", ",", "(", "2", ",", "0", ",", "1", ")", ")", "# (N, 3, 3)", "\n", "\n", "temp_corners", "=", "np", ".", "concatenate", "(", "(", "x_corners", ".", "reshape", "(", "-", "1", ",", "8", ",", "1", ")", ",", "y_corners", ".", "reshape", "(", "-", "1", ",", "8", ",", "1", ")", ",", "\n", "z_corners", ".", "reshape", "(", "-", "1", ",", "8", ",", "1", ")", ")", ",", "axis", "=", "2", ")", "# (N, 8, 3)", "\n", "rotated_corners", "=", "np", ".", "matmul", "(", "temp_corners", ",", "R_list", ")", "# (N, 8, 3)", "\n", "x_corners", ",", "y_corners", ",", "z_corners", "=", "rotated_corners", "[", ":", ",", ":", ",", "0", "]", ",", "rotated_corners", "[", ":", ",", ":", ",", "1", "]", ",", "rotated_corners", "[", ":", ",", ":", ",", "2", "]", "\n", "\n", "x_loc", ",", "y_loc", ",", "z_loc", "=", "boxes3d", "[", ":", ",", "0", "]", ",", "boxes3d", "[", ":", ",", "1", "]", ",", "boxes3d", "[", ":", ",", "2", "]", "\n", "\n", "x", "=", "x_loc", ".", "reshape", "(", "-", "1", ",", "1", ")", "+", "x_corners", ".", "reshape", "(", "-", "1", ",", "8", ")", "\n", "y", "=", "y_loc", ".", "reshape", "(", "-", "1", ",", "1", ")", "+", "y_corners", ".", "reshape", "(", "-", "1", ",", "8", ")", "\n", "z", "=", "z_loc", ".", "reshape", "(", "-", "1", ",", "1", ")", "+", "z_corners", ".", "reshape", "(", "-", "1", ",", "8", ")", "\n", "\n", "corners", "=", "np", ".", "concatenate", "(", "(", "x", ".", "reshape", "(", "-", "1", ",", "8", ",", "1", ")", ",", "y", ".", "reshape", "(", "-", "1", ",", "8", ",", "1", ")", ",", "z", ".", "reshape", "(", "-", "1", ",", "8", ",", "1", ")", ")", ",", "axis", "=", "2", ")", "\n", "\n", "return", "corners", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_kitti_camera_to_imageboxes": [[215, 236], ["box_utils.boxes3d_to_corners3d_kitti_camera", "calib.rect_to_img", "pts_img.reshape", "numpy.min", "numpy.max", "numpy.concatenate", "boxes3d_to_corners3d_kitti_camera.reshape", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_to_corners3d_kitti_camera", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.rect_to_img"], ["", "def", "boxes3d_kitti_camera_to_imageboxes", "(", "boxes3d", ",", "calib", ",", "image_shape", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    :param boxes3d: (N, 7) [x, y, z, l, h, w, r] in rect camera coords\n    :param calib:\n    :return:\n        box_2d_preds: (N, 4) [x1, y1, x2, y2]\n    \"\"\"", "\n", "corners3d", "=", "boxes3d_to_corners3d_kitti_camera", "(", "boxes3d", ")", "\n", "pts_img", ",", "_", "=", "calib", ".", "rect_to_img", "(", "corners3d", ".", "reshape", "(", "-", "1", ",", "3", ")", ")", "\n", "corners_in_image", "=", "pts_img", ".", "reshape", "(", "-", "1", ",", "8", ",", "2", ")", "\n", "\n", "min_uv", "=", "np", ".", "min", "(", "corners_in_image", ",", "axis", "=", "1", ")", "# (N, 2)", "\n", "max_uv", "=", "np", ".", "max", "(", "corners_in_image", ",", "axis", "=", "1", ")", "# (N, 2)", "\n", "boxes2d_image", "=", "np", ".", "concatenate", "(", "[", "min_uv", ",", "max_uv", "]", ",", "axis", "=", "1", ")", "\n", "if", "image_shape", "is", "not", "None", ":", "\n", "        ", "boxes2d_image", "[", ":", ",", "0", "]", "=", "np", ".", "clip", "(", "boxes2d_image", "[", ":", ",", "0", "]", ",", "a_min", "=", "0", ",", "a_max", "=", "image_shape", "[", "1", "]", "-", "1", ")", "\n", "boxes2d_image", "[", ":", ",", "1", "]", "=", "np", ".", "clip", "(", "boxes2d_image", "[", ":", ",", "1", "]", ",", "a_min", "=", "0", ",", "a_max", "=", "image_shape", "[", "0", "]", "-", "1", ")", "\n", "boxes2d_image", "[", ":", ",", "2", "]", "=", "np", ".", "clip", "(", "boxes2d_image", "[", ":", ",", "2", "]", ",", "a_min", "=", "0", ",", "a_max", "=", "image_shape", "[", "1", "]", "-", "1", ")", "\n", "boxes2d_image", "[", ":", ",", "3", "]", "=", "np", ".", "clip", "(", "boxes2d_image", "[", ":", ",", "3", "]", ",", "a_min", "=", "0", ",", "a_max", "=", "image_shape", "[", "0", "]", "-", "1", ")", "\n", "\n", "", "return", "boxes2d_image", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes_iou_normal": [[238, 259], ["torch.max", "torch.min", "torch.max", "torch.min", "torch.clamp_min", "torch.clamp_min", "torch.clamp_min"], "function", ["None"], ["", "def", "boxes_iou_normal", "(", "boxes_a", ",", "boxes_b", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes_a: (N, 4) [x1, y1, x2, y2]\n        boxes_b: (M, 4) [x1, y1, x2, y2]\n\n    Returns:\n\n    \"\"\"", "\n", "assert", "boxes_a", ".", "shape", "[", "1", "]", "==", "boxes_b", ".", "shape", "[", "1", "]", "==", "4", "\n", "x_min", "=", "torch", ".", "max", "(", "boxes_a", "[", ":", ",", "0", ",", "None", "]", ",", "boxes_b", "[", "None", ",", ":", ",", "0", "]", ")", "\n", "x_max", "=", "torch", ".", "min", "(", "boxes_a", "[", ":", ",", "2", ",", "None", "]", ",", "boxes_b", "[", "None", ",", ":", ",", "2", "]", ")", "\n", "y_min", "=", "torch", ".", "max", "(", "boxes_a", "[", ":", ",", "1", ",", "None", "]", ",", "boxes_b", "[", "None", ",", ":", ",", "1", "]", ")", "\n", "y_max", "=", "torch", ".", "min", "(", "boxes_a", "[", ":", ",", "3", ",", "None", "]", ",", "boxes_b", "[", "None", ",", ":", ",", "3", "]", ")", "\n", "x_len", "=", "torch", ".", "clamp_min", "(", "x_max", "-", "x_min", ",", "min", "=", "0", ")", "\n", "y_len", "=", "torch", ".", "clamp_min", "(", "y_max", "-", "y_min", ",", "min", "=", "0", ")", "\n", "area_a", "=", "(", "boxes_a", "[", ":", ",", "2", "]", "-", "boxes_a", "[", ":", ",", "0", "]", ")", "*", "(", "boxes_a", "[", ":", ",", "3", "]", "-", "boxes_a", "[", ":", ",", "1", "]", ")", "\n", "area_b", "=", "(", "boxes_b", "[", ":", ",", "2", "]", "-", "boxes_b", "[", ":", ",", "0", "]", ")", "*", "(", "boxes_b", "[", ":", ",", "3", "]", "-", "boxes_b", "[", ":", ",", "1", "]", ")", "\n", "a_intersect_b", "=", "x_len", "*", "y_len", "\n", "iou", "=", "a_intersect_b", "/", "torch", ".", "clamp_min", "(", "area_a", "[", ":", ",", "None", "]", "+", "area_b", "[", "None", ",", ":", "]", "-", "a_intersect_b", ",", "min", "=", "1e-6", ")", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_lidar_to_aligned_bev_boxes": [[261, 273], ["common_utils.limit_period().abs", "torch.where", "torch.cat", "common_utils.limit_period"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.limit_period"], ["", "def", "boxes3d_lidar_to_aligned_bev_boxes", "(", "boxes3d", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes3d: (N, 7 + C) [x, y, z, dx, dy, dz, heading] in lidar coordinate\n\n    Returns:\n        aligned_bev_boxes: (N, 4) [x1, y1, x2, y2] in the above lidar coordinate\n    \"\"\"", "\n", "rot_angle", "=", "common_utils", ".", "limit_period", "(", "boxes3d", "[", ":", ",", "6", "]", ",", "offset", "=", "0.5", ",", "period", "=", "np", ".", "pi", ")", ".", "abs", "(", ")", "\n", "choose_dims", "=", "torch", ".", "where", "(", "rot_angle", "[", ":", ",", "None", "]", "<", "np", ".", "pi", "/", "4", ",", "boxes3d", "[", ":", ",", "[", "3", ",", "4", "]", "]", ",", "boxes3d", "[", ":", ",", "[", "4", ",", "3", "]", "]", ")", "\n", "aligned_bev_boxes", "=", "torch", ".", "cat", "(", "(", "boxes3d", "[", ":", ",", "0", ":", "2", "]", "-", "choose_dims", "/", "2", ",", "boxes3d", "[", ":", ",", "0", ":", "2", "]", "+", "choose_dims", "/", "2", ")", ",", "dim", "=", "1", ")", "\n", "return", "aligned_bev_boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_nearest_bev_iou": [[275, 288], ["box_utils.boxes3d_lidar_to_aligned_bev_boxes", "box_utils.boxes3d_lidar_to_aligned_bev_boxes", "box_utils.boxes_iou_normal"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_lidar_to_aligned_bev_boxes", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_lidar_to_aligned_bev_boxes", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes_iou_normal"], ["", "def", "boxes3d_nearest_bev_iou", "(", "boxes_a", ",", "boxes_b", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes_a: (N, 7) [x, y, z, dx, dy, dz, heading]\n        boxes_b: (N, 7) [x, y, z, dx, dy, dz, heading]\n\n    Returns:\n\n    \"\"\"", "\n", "boxes_bev_a", "=", "boxes3d_lidar_to_aligned_bev_boxes", "(", "boxes_a", ")", "\n", "boxes_bev_b", "=", "boxes3d_lidar_to_aligned_bev_boxes", "(", "boxes_b", ")", "\n", "\n", "return", "boxes_iou_normal", "(", "boxes_bev_a", ",", "boxes_bev_b", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.__init__": [[24, 41], ["isinstance", "calibration_kitti.get_calib_from_file"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.get_calib_from_file"], ["    ", "def", "__init__", "(", "self", ",", "calib_file", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "calib_file", ",", "dict", ")", ":", "\n", "            ", "calib", "=", "get_calib_from_file", "(", "calib_file", ")", "\n", "", "else", ":", "\n", "            ", "calib", "=", "calib_file", "\n", "\n", "", "self", ".", "P2", "=", "calib", "[", "'P2'", "]", "# 3 x 4", "\n", "self", ".", "R0", "=", "calib", "[", "'R0'", "]", "# 3 x 3", "\n", "self", ".", "V2C", "=", "calib", "[", "'Tr_velo2cam'", "]", "# 3 x 4", "\n", "\n", "# Camera intrinsics and extrinsics", "\n", "self", ".", "cu", "=", "self", ".", "P2", "[", "0", ",", "2", "]", "\n", "self", ".", "cv", "=", "self", ".", "P2", "[", "1", ",", "2", "]", "\n", "self", ".", "fu", "=", "self", ".", "P2", "[", "0", ",", "0", "]", "\n", "self", ".", "fv", "=", "self", ".", "P2", "[", "1", ",", "1", "]", "\n", "self", ".", "tx", "=", "self", ".", "P2", "[", "0", ",", "3", "]", "/", "(", "-", "self", ".", "fu", ")", "\n", "self", ".", "ty", "=", "self", ".", "P2", "[", "1", ",", "3", "]", "/", "(", "-", "self", ".", "fv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.cart_to_hom": [[42, 49], ["numpy.hstack", "numpy.ones"], "methods", ["None"], ["", "def", "cart_to_hom", "(", "self", ",", "pts", ")", ":", "\n", "        ", "\"\"\"\n        :param pts: (N, 3 or 2)\n        :return pts_hom: (N, 4 or 3)\n        \"\"\"", "\n", "pts_hom", "=", "np", ".", "hstack", "(", "(", "pts", ",", "np", ".", "ones", "(", "(", "pts", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", ")", ")", "\n", "return", "pts_hom", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.rect_to_lidar": [[50, 64], ["calibration_kitti.Calibration.cart_to_hom", "numpy.hstack", "numpy.vstack", "numpy.vstack", "numpy.dot", "numpy.linalg.inv", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.cart_to_hom"], ["", "def", "rect_to_lidar", "(", "self", ",", "pts_rect", ")", ":", "\n", "        ", "\"\"\"\n        :param pts_lidar: (N, 3)\n        :return pts_rect: (N, 3)\n        \"\"\"", "\n", "pts_rect_hom", "=", "self", ".", "cart_to_hom", "(", "pts_rect", ")", "# (N, 4)", "\n", "R0_ext", "=", "np", ".", "hstack", "(", "(", "self", ".", "R0", ",", "np", ".", "zeros", "(", "(", "3", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", ")", ")", "# (3, 4)", "\n", "R0_ext", "=", "np", ".", "vstack", "(", "(", "R0_ext", ",", "np", ".", "zeros", "(", "(", "1", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", ")", ")", "# (4, 4)", "\n", "R0_ext", "[", "3", ",", "3", "]", "=", "1", "\n", "V2C_ext", "=", "np", ".", "vstack", "(", "(", "self", ".", "V2C", ",", "np", ".", "zeros", "(", "(", "1", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", ")", ")", "# (4, 4)", "\n", "V2C_ext", "[", "3", ",", "3", "]", "=", "1", "\n", "\n", "pts_lidar", "=", "np", ".", "dot", "(", "pts_rect_hom", ",", "np", ".", "linalg", ".", "inv", "(", "np", ".", "dot", "(", "R0_ext", ",", "V2C_ext", ")", ".", "T", ")", ")", "\n", "return", "pts_lidar", "[", ":", ",", "0", ":", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.lidar_to_rect": [[65, 74], ["calibration_kitti.Calibration.cart_to_hom", "numpy.dot", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.cart_to_hom"], ["", "def", "lidar_to_rect", "(", "self", ",", "pts_lidar", ")", ":", "\n", "        ", "\"\"\"\n        :param pts_lidar: (N, 3)\n        :return pts_rect: (N, 3)\n        \"\"\"", "\n", "pts_lidar_hom", "=", "self", ".", "cart_to_hom", "(", "pts_lidar", ")", "\n", "pts_rect", "=", "np", ".", "dot", "(", "pts_lidar_hom", ",", "np", ".", "dot", "(", "self", ".", "V2C", ".", "T", ",", "self", ".", "R0", ".", "T", ")", ")", "\n", "# pts_rect = reduce(np.dot, (pts_lidar_hom, self.V2C.T, self.R0.T))", "\n", "return", "pts_rect", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.rect_to_img": [[75, 85], ["calibration_kitti.Calibration.cart_to_hom", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.cart_to_hom"], ["", "def", "rect_to_img", "(", "self", ",", "pts_rect", ")", ":", "\n", "        ", "\"\"\"\n        :param pts_rect: (N, 3)\n        :return pts_img: (N, 2)\n        \"\"\"", "\n", "pts_rect_hom", "=", "self", ".", "cart_to_hom", "(", "pts_rect", ")", "\n", "pts_2d_hom", "=", "np", ".", "dot", "(", "pts_rect_hom", ",", "self", ".", "P2", ".", "T", ")", "\n", "pts_img", "=", "(", "pts_2d_hom", "[", ":", ",", "0", ":", "2", "]", ".", "T", "/", "pts_rect_hom", "[", ":", ",", "2", "]", ")", ".", "T", "# (N, 2)", "\n", "pts_rect_depth", "=", "pts_2d_hom", "[", ":", ",", "2", "]", "-", "self", ".", "P2", ".", "T", "[", "3", ",", "2", "]", "# depth in rect camera coord", "\n", "return", "pts_img", ",", "pts_rect_depth", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.lidar_to_img": [[86, 94], ["calibration_kitti.Calibration.lidar_to_rect", "calibration_kitti.Calibration.rect_to_img"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.lidar_to_rect", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.rect_to_img"], ["", "def", "lidar_to_img", "(", "self", ",", "pts_lidar", ")", ":", "\n", "        ", "\"\"\"\n        :param pts_lidar: (N, 3)\n        :return pts_img: (N, 2)\n        \"\"\"", "\n", "pts_rect", "=", "self", ".", "lidar_to_rect", "(", "pts_lidar", ")", "\n", "pts_img", ",", "pts_depth", "=", "self", ".", "rect_to_img", "(", "pts_rect", ")", "\n", "return", "pts_img", ",", "pts_depth", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.img_to_rect": [[95, 106], ["numpy.concatenate", "x.reshape", "y.reshape", "depth_rect.reshape"], "methods", ["None"], ["", "def", "img_to_rect", "(", "self", ",", "u", ",", "v", ",", "depth_rect", ")", ":", "\n", "        ", "\"\"\"\n        :param u: (N)\n        :param v: (N)\n        :param depth_rect: (N)\n        :return:\n        \"\"\"", "\n", "x", "=", "(", "(", "u", "-", "self", ".", "cu", ")", "*", "depth_rect", ")", "/", "self", ".", "fu", "+", "self", ".", "tx", "\n", "y", "=", "(", "(", "v", "-", "self", ".", "cv", ")", "*", "depth_rect", ")", "/", "self", ".", "fv", "+", "self", ".", "ty", "\n", "pts_rect", "=", "np", ".", "concatenate", "(", "(", "x", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "y", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "depth_rect", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ",", "axis", "=", "1", ")", "\n", "return", "pts_rect", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.corners3d_to_img_boxes": [[107, 126], ["numpy.concatenate", "numpy.matmul", "numpy.concatenate", "numpy.concatenate", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.ones", "x1.reshape", "y1.reshape", "x2.reshape", "y2.reshape", "x.reshape", "y.reshape"], "methods", ["None"], ["", "def", "corners3d_to_img_boxes", "(", "self", ",", "corners3d", ")", ":", "\n", "        ", "\"\"\"\n        :param corners3d: (N, 8, 3) corners in rect coordinate\n        :return: boxes: (None, 4) [x1, y1, x2, y2] in rgb coordinate\n        :return: boxes_corner: (None, 8) [xi, yi] in rgb coordinate\n        \"\"\"", "\n", "sample_num", "=", "corners3d", ".", "shape", "[", "0", "]", "\n", "corners3d_hom", "=", "np", ".", "concatenate", "(", "(", "corners3d", ",", "np", ".", "ones", "(", "(", "sample_num", ",", "8", ",", "1", ")", ")", ")", ",", "axis", "=", "2", ")", "# (N, 8, 4)", "\n", "\n", "img_pts", "=", "np", ".", "matmul", "(", "corners3d_hom", ",", "self", ".", "P2", ".", "T", ")", "# (N, 8, 3)", "\n", "\n", "x", ",", "y", "=", "img_pts", "[", ":", ",", ":", ",", "0", "]", "/", "img_pts", "[", ":", ",", ":", ",", "2", "]", ",", "img_pts", "[", ":", ",", ":", ",", "1", "]", "/", "img_pts", "[", ":", ",", ":", ",", "2", "]", "\n", "x1", ",", "y1", "=", "np", ".", "min", "(", "x", ",", "axis", "=", "1", ")", ",", "np", ".", "min", "(", "y", ",", "axis", "=", "1", ")", "\n", "x2", ",", "y2", "=", "np", ".", "max", "(", "x", ",", "axis", "=", "1", ")", ",", "np", ".", "max", "(", "y", ",", "axis", "=", "1", ")", "\n", "\n", "boxes", "=", "np", ".", "concatenate", "(", "(", "x1", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "y1", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "x2", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "y2", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ",", "axis", "=", "1", ")", "\n", "boxes_corner", "=", "np", ".", "concatenate", "(", "(", "x", ".", "reshape", "(", "-", "1", ",", "8", ",", "1", ")", ",", "y", ".", "reshape", "(", "-", "1", ",", "8", ",", "1", ")", ")", ",", "axis", "=", "2", ")", "\n", "\n", "return", "boxes", ",", "boxes_corner", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.get_calib_from_file": [[4, 21], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "open", "f.readlines", "lines[].strip().split", "lines[].strip().split", "lines[].strip().split", "lines[].strip().split", "np.array.reshape", "np.array.reshape", "np.array.reshape", "np.array.reshape", "lines[].strip", "lines[].strip", "lines[].strip", "lines[].strip"], "function", ["None"], ["def", "get_calib_from_file", "(", "calib_file", ")", ":", "\n", "    ", "with", "open", "(", "calib_file", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "\n", "", "obj", "=", "lines", "[", "2", "]", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "1", ":", "]", "\n", "P2", "=", "np", ".", "array", "(", "obj", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "obj", "=", "lines", "[", "3", "]", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "1", ":", "]", "\n", "P3", "=", "np", ".", "array", "(", "obj", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "obj", "=", "lines", "[", "4", "]", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "1", ":", "]", "\n", "R0", "=", "np", ".", "array", "(", "obj", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "obj", "=", "lines", "[", "5", "]", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "[", "1", ":", "]", "\n", "Tr_velo_to_cam", "=", "np", ".", "array", "(", "obj", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "return", "{", "'P2'", ":", "P2", ".", "reshape", "(", "3", ",", "4", ")", ",", "\n", "'P3'", ":", "P3", ".", "reshape", "(", "3", ",", "4", ")", ",", "\n", "'R0'", ":", "R0", ".", "reshape", "(", "3", ",", "3", ")", ",", "\n", "'Tr_velo2cam'", ":", "Tr_velo_to_cam", ".", "reshape", "(", "3", ",", "4", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.SigmoidFocalClassificationLoss.__init__": [[14, 23], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "gamma", ":", "float", "=", "2.0", ",", "alpha", ":", "float", "=", "0.25", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            gamma: Weighting parameter to balance loss for hard and easy examples.\n            alpha: Weighting parameter to balance loss for positive and negative examples.\n        \"\"\"", "\n", "super", "(", "SigmoidFocalClassificationLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "gamma", "=", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.SigmoidFocalClassificationLoss.sigmoid_cross_entropy_with_logits": [[24, 43], ["torch.log1p", "torch.log1p", "torch.log1p", "torch.log1p", "torch.log1p", "torch.log1p", "torch.log1p", "torch.log1p", "torch.log1p", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "sigmoid_cross_entropy_with_logits", "(", "input", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "\"\"\" PyTorch Implementation for tf.nn.sigmoid_cross_entropy_with_logits:\n            max(x, 0) - x * z + log(1 + exp(-abs(x))) in\n            https://www.tensorflow.org/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits\n\n        Args:\n            input: (B, #anchors, #classes) float tensor.\n                Predicted logits for each class\n            target: (B, #anchors, #classes) float tensor.\n                One-hot encoded classification targets\n\n        Returns:\n            loss: (B, #anchors, #classes) float tensor.\n                Sigmoid cross entropy loss without reduction\n        \"\"\"", "\n", "loss", "=", "torch", ".", "clamp", "(", "input", ",", "min", "=", "0", ")", "-", "input", "*", "target", "+", "torch", ".", "log1p", "(", "torch", ".", "exp", "(", "-", "torch", ".", "abs", "(", "input", ")", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.SigmoidFocalClassificationLoss.forward": [[44, 73], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "loss_utils.SigmoidFocalClassificationLoss.sigmoid_cross_entropy_with_logits", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "weights.unsqueeze.unsqueeze.unsqueeze", "weights.unsqueeze.unsqueeze.shape.__len__", "loss.shape.__len__", "weights.unsqueeze.unsqueeze.shape.__len__", "weights.unsqueeze.unsqueeze.shape.__len__", "target.shape.__len__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.SigmoidFocalClassificationLoss.sigmoid_cross_entropy_with_logits", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "def", "forward", "(", "self", ",", "input", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ",", "weights", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            input: (B, #anchors, #classes) float tensor.\n                Predicted logits for each class\n            target: (B, #anchors, #classes) float tensor.\n                One-hot encoded classification targets\n            weights: (B, #anchors) float tensor.\n                Anchor-wise weights.\n\n        Returns:\n            weighted_loss: (B, #anchors, #classes) float tensor after weighting.\n        \"\"\"", "\n", "pred_sigmoid", "=", "torch", ".", "sigmoid", "(", "input", ")", "\n", "alpha_weight", "=", "target", "*", "self", ".", "alpha", "+", "(", "1", "-", "target", ")", "*", "(", "1", "-", "self", ".", "alpha", ")", "\n", "pt", "=", "target", "*", "(", "1.0", "-", "pred_sigmoid", ")", "+", "(", "1.0", "-", "target", ")", "*", "pred_sigmoid", "\n", "focal_weight", "=", "alpha_weight", "*", "torch", ".", "pow", "(", "pt", ",", "self", ".", "gamma", ")", "\n", "\n", "bce_loss", "=", "self", ".", "sigmoid_cross_entropy_with_logits", "(", "input", ",", "target", ")", "\n", "\n", "loss", "=", "focal_weight", "*", "bce_loss", "\n", "\n", "if", "weights", ".", "shape", ".", "__len__", "(", ")", "==", "2", "or", "(", "weights", ".", "shape", ".", "__len__", "(", ")", "==", "1", "and", "target", ".", "shape", ".", "__len__", "(", ")", "==", "2", ")", ":", "\n", "            ", "weights", "=", "weights", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "", "assert", "weights", ".", "shape", ".", "__len__", "(", ")", "==", "loss", ".", "shape", ".", "__len__", "(", ")", "\n", "\n", "return", "loss", "*", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.WeightedSmoothL1Loss.__init__": [[84, 98], ["torch.Module.__init__", "numpy.array", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "beta", ":", "float", "=", "1.0", "/", "9.0", ",", "code_weights", ":", "list", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            beta: Scalar float.\n                L1 to L2 change point.\n                For beta values < 1e-5, L1 loss is computed.\n            code_weights: (#codes) float list if not None.\n                Code-wise weights.\n        \"\"\"", "\n", "super", "(", "WeightedSmoothL1Loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "beta", "=", "beta", "\n", "if", "code_weights", "is", "not", "None", ":", "\n", "            ", "self", ".", "code_weights", "=", "np", ".", "array", "(", "code_weights", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "code_weights", "=", "torch", ".", "from_numpy", "(", "self", ".", "code_weights", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.WeightedSmoothL1Loss.smooth_l1_loss": [[99, 108], ["torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "smooth_l1_loss", "(", "diff", ",", "beta", ")", ":", "\n", "        ", "if", "beta", "<", "1e-5", ":", "\n", "            ", "loss", "=", "torch", ".", "abs", "(", "diff", ")", "\n", "", "else", ":", "\n", "            ", "n", "=", "torch", ".", "abs", "(", "diff", ")", "\n", "loss", "=", "torch", ".", "where", "(", "n", "<", "beta", ",", "0.5", "*", "n", "**", "2", "/", "beta", ",", "n", "-", "0.5", "*", "beta", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.WeightedSmoothL1Loss.forward": [[109, 137], ["torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "loss_utils.WeightedSmoothL1Loss.smooth_l1_loss", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "loss_utils.WeightedSmoothL1Loss.code_weights.view", "weights.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.WeightedSmoothL1Loss.smooth_l1_loss"], ["", "def", "forward", "(", "self", ",", "input", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ",", "weights", ":", "torch", ".", "Tensor", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            input: (B, #anchors, #codes) float tensor.\n                Ecoded predicted locations of objects.\n            target: (B, #anchors, #codes) float tensor.\n                Regression targets.\n            weights: (B, #anchors) float tensor if not None.\n\n        Returns:\n            loss: (B, #anchors) float tensor.\n                Weighted smooth l1 loss without reduction.\n        \"\"\"", "\n", "target", "=", "torch", ".", "where", "(", "torch", ".", "isnan", "(", "target", ")", ",", "input", ",", "target", ")", "# ignore nan targets", "\n", "\n", "diff", "=", "input", "-", "target", "\n", "# code-wise weighting", "\n", "if", "self", ".", "code_weights", "is", "not", "None", ":", "\n", "            ", "diff", "=", "diff", "*", "self", ".", "code_weights", ".", "view", "(", "1", ",", "1", ",", "-", "1", ")", "\n", "\n", "", "loss", "=", "self", ".", "smooth_l1_loss", "(", "diff", ",", "self", ".", "beta", ")", "\n", "\n", "# anchor-wise weighting", "\n", "if", "weights", "is", "not", "None", ":", "\n", "            ", "assert", "weights", ".", "shape", "[", "0", "]", "==", "loss", ".", "shape", "[", "0", "]", "and", "weights", ".", "shape", "[", "1", "]", "==", "loss", ".", "shape", "[", "1", "]", "\n", "loss", "=", "loss", "*", "weights", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.WeightedL1Loss.__init__": [[140, 150], ["torch.Module.__init__", "numpy.array", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "code_weights", ":", "list", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            code_weights: (#codes) float list if not None.\n                Code-wise weights.\n        \"\"\"", "\n", "super", "(", "WeightedL1Loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "code_weights", "is", "not", "None", ":", "\n", "            ", "self", ".", "code_weights", "=", "np", ".", "array", "(", "code_weights", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "code_weights", "=", "torch", ".", "from_numpy", "(", "self", ".", "code_weights", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.WeightedL1Loss.forward": [[151, 179], ["torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "loss_utils.WeightedL1Loss.code_weights.view", "weights.unsqueeze"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ",", "weights", ":", "torch", ".", "Tensor", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            input: (B, #anchors, #codes) float tensor.\n                Ecoded predicted locations of objects.\n            target: (B, #anchors, #codes) float tensor.\n                Regression targets.\n            weights: (B, #anchors) float tensor if not None.\n\n        Returns:\n            loss: (B, #anchors) float tensor.\n                Weighted smooth l1 loss without reduction.\n        \"\"\"", "\n", "target", "=", "torch", ".", "where", "(", "torch", ".", "isnan", "(", "target", ")", ",", "input", ",", "target", ")", "# ignore nan targets", "\n", "\n", "diff", "=", "input", "-", "target", "\n", "# code-wise weighting", "\n", "if", "self", ".", "code_weights", "is", "not", "None", ":", "\n", "            ", "diff", "=", "diff", "*", "self", ".", "code_weights", ".", "view", "(", "1", ",", "1", ",", "-", "1", ")", "\n", "\n", "", "loss", "=", "torch", ".", "abs", "(", "diff", ")", "\n", "\n", "# anchor-wise weighting", "\n", "if", "weights", "is", "not", "None", ":", "\n", "            ", "assert", "weights", ".", "shape", "[", "0", "]", "==", "loss", ".", "shape", "[", "0", "]", "and", "weights", ".", "shape", "[", "1", "]", "==", "loss", ".", "shape", "[", "1", "]", "\n", "loss", "=", "loss", "*", "weights", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.WeightedCrossEntropyLoss.__init__": [[186, 188], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "WeightedCrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.WeightedCrossEntropyLoss.forward": [[189, 207], ["input.permute.permute.permute", "target.argmax.argmax.argmax", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ",", "weights", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            input: (B, #anchors, #classes) float tensor.\n                Predited logits for each class.\n            target: (B, #anchors, #classes) float tensor.\n                One-hot classification targets.\n            weights: (B, #anchors) float tensor.\n                Anchor-wise weights.\n\n        Returns:\n            loss: (B, #anchors) float tensor.\n                Weighted cross entropy loss without reduction\n        \"\"\"", "\n", "input", "=", "input", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "target", "=", "target", ".", "argmax", "(", "dim", "=", "-", "1", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "input", ",", "target", ",", "reduction", "=", "'none'", ")", "*", "weights", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.get_corner_loss_lidar": [[209, 233], ["box_utils.boxes_to_corners_3d", "box_utils.boxes_to_corners_3d", "gt_bbox3d.clone", "box_utils.boxes_to_corners_3d", "torch.min", "torch.min", "torch.min", "loss_utils.WeightedSmoothL1Loss.smooth_l1_loss", "WeightedSmoothL1Loss.smooth_l1_loss.mean", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.boxes_to_corners_3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.boxes_to_corners_3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.boxes_to_corners_3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.WeightedSmoothL1Loss.smooth_l1_loss"], ["", "", "def", "get_corner_loss_lidar", "(", "pred_bbox3d", ":", "torch", ".", "Tensor", ",", "gt_bbox3d", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        pred_bbox3d: (N, 7) float Tensor.\n        gt_bbox3d: (N, 7) float Tensor.\n\n    Returns:\n        corner_loss: (N) float Tensor.\n    \"\"\"", "\n", "assert", "pred_bbox3d", ".", "shape", "[", "0", "]", "==", "gt_bbox3d", ".", "shape", "[", "0", "]", "\n", "\n", "pred_box_corners", "=", "box_utils", ".", "boxes_to_corners_3d", "(", "pred_bbox3d", ")", "\n", "gt_box_corners", "=", "box_utils", ".", "boxes_to_corners_3d", "(", "gt_bbox3d", ")", "\n", "\n", "gt_bbox3d_flip", "=", "gt_bbox3d", ".", "clone", "(", ")", "\n", "gt_bbox3d_flip", "[", ":", ",", "6", "]", "+=", "np", ".", "pi", "\n", "gt_box_corners_flip", "=", "box_utils", ".", "boxes_to_corners_3d", "(", "gt_bbox3d_flip", ")", "\n", "# (N, 8)", "\n", "corner_dist", "=", "torch", ".", "min", "(", "torch", ".", "norm", "(", "pred_box_corners", "-", "gt_box_corners", ",", "dim", "=", "2", ")", ",", "\n", "torch", ".", "norm", "(", "pred_box_corners", "-", "gt_box_corners_flip", ",", "dim", "=", "2", ")", ")", "\n", "# (N, 8)", "\n", "corner_loss", "=", "WeightedSmoothL1Loss", ".", "smooth_l1_loss", "(", "corner_dist", ",", "beta", "=", "1.0", ")", "\n", "\n", "return", "corner_loss", ".", "mean", "(", "dim", "=", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.batch_load_scannet_data.export_one_scan": [[49, 80], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "load_scannet_data.export", "numpy.logical_not", "len", "print", "numpy.in1d", "print", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.in1d", "numpy.unique", "numpy.random.choice"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.load_scannet_data.export"], ["def", "export_one_scan", "(", "scan_name", ",", "output_filename_prefix", ")", ":", "\n", "    ", "mesh_file", "=", "os", ".", "path", ".", "join", "(", "SCANNET_DIR", ",", "scan_name", ",", "scan_name", "+", "'_vh_clean_2.ply'", ")", "\n", "agg_file", "=", "os", ".", "path", ".", "join", "(", "SCANNET_DIR", ",", "scan_name", ",", "scan_name", "+", "'.aggregation.json'", ")", "\n", "seg_file", "=", "os", ".", "path", ".", "join", "(", "SCANNET_DIR", ",", "scan_name", ",", "scan_name", "+", "'_vh_clean_2.0.010000.segs.json'", ")", "\n", "meta_file", "=", "os", ".", "path", ".", "join", "(", "SCANNET_DIR", ",", "scan_name", ",", "scan_name", "+", "'.txt'", ")", "# includes axisAlignment info for the train set scans.   ", "\n", "mesh_vertices", ",", "semantic_labels", ",", "instance_labels", ",", "instance_bboxes", ",", "instance2semantic", "=", "export", "(", "mesh_file", ",", "agg_file", ",", "seg_file", ",", "meta_file", ",", "LABEL_MAP_FILE", ",", "None", ")", "\n", "\n", "mask", "=", "np", ".", "logical_not", "(", "np", ".", "in1d", "(", "semantic_labels", ",", "DONOTCARE_CLASS_IDS", ")", ")", "\n", "mesh_vertices", "=", "mesh_vertices", "[", "mask", ",", ":", "]", "\n", "semantic_labels", "=", "semantic_labels", "[", "mask", "]", "\n", "instance_labels", "=", "instance_labels", "[", "mask", "]", "\n", "\n", "num_instances", "=", "len", "(", "np", ".", "unique", "(", "instance_labels", ")", ")", "\n", "print", "(", "'Num of instances: '", ",", "num_instances", ")", "\n", "\n", "bbox_mask", "=", "np", ".", "in1d", "(", "instance_bboxes", "[", ":", ",", "-", "1", "]", ",", "OBJ_CLASS_IDS", ")", "\n", "instance_bboxes", "=", "instance_bboxes", "[", "bbox_mask", ",", ":", "]", "\n", "print", "(", "'Num of care instances: '", ",", "instance_bboxes", ".", "shape", "[", "0", "]", ")", "\n", "\n", "N", "=", "mesh_vertices", ".", "shape", "[", "0", "]", "\n", "if", "N", ">", "MAX_NUM_POINT", ":", "\n", "        ", "choices", "=", "np", ".", "random", ".", "choice", "(", "N", ",", "MAX_NUM_POINT", ",", "replace", "=", "False", ")", "\n", "mesh_vertices", "=", "mesh_vertices", "[", "choices", ",", ":", "]", "\n", "semantic_labels", "=", "semantic_labels", "[", "choices", "]", "\n", "instance_labels", "=", "instance_labels", "[", "choices", "]", "\n", "\n", "", "np", ".", "save", "(", "output_filename_prefix", "+", "'_vert.npy'", ",", "mesh_vertices", ")", "\n", "np", ".", "save", "(", "output_filename_prefix", "+", "'_sem_label.npy'", ",", "semantic_labels", ")", "\n", "np", ".", "save", "(", "output_filename_prefix", "+", "'_ins_label.npy'", ",", "instance_labels", ")", "\n", "np", ".", "save", "(", "output_filename_prefix", "+", "'_bbox.npy'", ",", "instance_bboxes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.batch_load_scannet_data.batch_export": [[81, 100], ["os.path.exists", "print", "os.mkdir", "print", "print", "print", "os.path.join", "os.path.isfile", "print", "datetime.datetime.now", "print", "print", "batch_load_scannet_data.export_one_scan", "print"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.batch_load_scannet_data.export_one_scan"], ["", "def", "batch_export", "(", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "OUTPUT_FOLDER", ")", ":", "\n", "        ", "print", "(", "'Creating new data folder: {}'", ".", "format", "(", "OUTPUT_FOLDER", ")", ")", "\n", "os", ".", "mkdir", "(", "OUTPUT_FOLDER", ")", "\n", "\n", "", "for", "scan_name", "in", "TRAIN_SCAN_NAMES", ":", "\n", "        ", "print", "(", "'-'", "*", "20", "+", "'begin'", ")", "\n", "print", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ")", "\n", "print", "(", "scan_name", ")", "\n", "output_filename_prefix", "=", "os", ".", "path", ".", "join", "(", "OUTPUT_FOLDER", ",", "scan_name", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "output_filename_prefix", "+", "'_vert.npy'", ")", ":", "\n", "            ", "print", "(", "'File already exists. skipping.'", ")", "\n", "print", "(", "'-'", "*", "20", "+", "'done'", ")", "\n", "continue", "\n", "", "try", ":", "\n", "            ", "export_one_scan", "(", "scan_name", ",", "output_filename_prefix", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Failed export scan: %s'", "%", "(", "scan_name", ")", ")", "\n", "", "print", "(", "'-'", "*", "20", "+", "'done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_ssl_dataset.ScannetSSLLabeledDataset.__init__": [[26, 43], ["print", "os.path.join", "print", "print", "print", "exit", "x.strip", "open().readlines", "len", "open", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "labeled_sample_list", "=", "None", ",", "num_points", "=", "20000", ",", "use_color", "=", "False", ",", "use_height", "=", "False", ",", "augment", "=", "False", ")", ":", "\n", "\n", "        ", "print", "(", "'--------- Scannet Labeled Dataset Initialization ---------'", ")", "\n", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'scannet_train_detection_data'", ")", "\n", "if", "labeled_sample_list", "is", "not", "None", ":", "\n", "            ", "self", ".", "scan_names", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data'", ",", "labeled_sample_list", ")", ")", ".", "readlines", "(", ")", "]", "\n", "print", "(", "'\\tGet {} labeled scans'", ".", "format", "(", "len", "(", "self", ".", "scan_names", ")", ")", ")", "\n", "print", "(", "'first 3 scans'", ",", "self", ".", "scan_names", "[", ":", "3", "]", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown labeled sample list: %s. Exiting...'", "%", "labeled_sample_list", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "use_color", "=", "use_color", "\n", "self", ".", "use_height", "=", "use_height", "\n", "self", ".", "augment", "=", "augment", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_ssl_dataset.ScannetSSLLabeledDataset.__len__": [[44, 46], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "scan_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_ssl_dataset.ScannetSSLLabeledDataset.__getitem__": [[47, 185], ["numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "utils.random_sampling", "utils.random_sampling", "numpy.identity", "numpy.ones", "numpy.zeros", "numpy.zeros", "numpy.unique", "numpy.tile", "point_cloud.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.tile.astype", "numpy.zeros.astype", "numpy.array().astype", "numpy.array().astype", "numpy.zeros", "list", "numpy.zeros.astype", "utils.random_sampling.astype", "numpy.array().astype", "numpy.array().astype", "utils.rotz.astype", "numpy.array().astype", "numpy.array().astype", "numpy.percentile", "numpy.concatenate", "utils.rotz", "numpy.dot", "scannet.model_util_scannet.rotate_aligned_boxes", "numpy.expand_dims", "scannet.model_util_scannet.rotate_aligned_boxes.astype", "set", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.random.random", "numpy.random.random", "numpy.transpose", "numpy.tile", "numpy.where", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.expand_dims", "numpy.random.random", "numpy.where", "int", "numpy.random.random", "x.min", "x.max"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.rotate_aligned_boxes"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Returns a dict with following keys:\n            point_clouds: (N,3+C)\n            center_label: (MAX_NUM_OBJ,3) for GT box center XYZ\n            sem_cls_label: (MAX_NUM_OBJ,) semantic class index\n            angle_class_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_HEADING_BIN-1\n            angle_residual_label: (MAX_NUM_OBJ,)\n            size_classe_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_SIZE_CLUSTER\n            size_residual_label: (MAX_NUM_OBJ,3)\n            box_label_mask: (MAX_NUM_OBJ) as 0/1 with 1 indicating a unique box\n            point_votes: (N,3) with votes XYZ\n            point_votes_mask: (N,) with 0/1 with 1 indicating the point is in one of the object's OBB.\n            scan_idx: int scan index in scan_names list\n        \"\"\"", "\n", "\n", "scan_name", "=", "self", ".", "scan_names", "[", "idx", "]", "\n", "mesh_vertices", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_vert.npy'", ")", "\n", "instance_labels", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_ins_label.npy'", ")", "\n", "semantic_labels", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_sem_label.npy'", ")", "\n", "instance_bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "\n", "\n", "if", "not", "self", ".", "use_color", ":", "\n", "            ", "raw_point_cloud", "=", "mesh_vertices", "[", ":", ",", "0", ":", "3", "]", "# do not use color for now", "\n", "", "else", ":", "\n", "            ", "raw_point_cloud", "=", "mesh_vertices", "[", ":", ",", "0", ":", "6", "]", "\n", "raw_point_cloud", "[", ":", ",", "3", ":", "]", "=", "(", "raw_point_cloud", "[", ":", ",", "3", ":", "]", "-", "MEAN_COLOR_RGB", ")", "/", "256.0", "\n", "\n", "", "if", "self", ".", "use_height", ":", "\n", "            ", "floor_height", "=", "np", ".", "percentile", "(", "raw_point_cloud", "[", ":", ",", "2", "]", ",", "0.99", ")", "\n", "height", "=", "raw_point_cloud", "[", ":", ",", "2", "]", "-", "floor_height", "\n", "raw_point_cloud", "=", "np", ".", "concatenate", "(", "[", "raw_point_cloud", ",", "np", ".", "expand_dims", "(", "height", ",", "1", ")", "]", ",", "1", ")", "\n", "\n", "# ------------------------------- LABELS ------------------------------", "\n", "", "target_bboxes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "6", ")", ")", "\n", "target_bboxes_mask", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "angle_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "angle_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "target_bboxes_semcls", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "\n", "point_cloud", ",", "choices", "=", "pc_util", ".", "random_sampling", "(", "raw_point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "True", ")", "\n", "ema_point_cloud", "=", "pc_util", ".", "random_sampling", "(", "raw_point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "False", ")", "\n", "instance_labels", "=", "instance_labels", "[", "choices", "]", "\n", "semantic_labels", "=", "semantic_labels", "[", "choices", "]", "\n", "\n", "target_bboxes_mask", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "1", "\n", "target_bboxes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "instance_bboxes", "[", ":", ",", "0", ":", "6", "]", "\n", "\n", "# ------------------------------- DATA AUGMENTATION ------------------------------", "\n", "flip_x_axis", "=", "0", "\n", "flip_y_axis", "=", "0", "\n", "rot_mat", "=", "np", ".", "identity", "(", "3", ")", "\n", "scale_ratio", "=", "np", ".", "ones", "(", "(", "1", ",", "3", ")", ")", "\n", "if", "self", ".", "augment", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the YZ plane", "\n", "                ", "flip_x_axis", "=", "1", "\n", "point_cloud", "[", ":", ",", "0", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "0", "]", "\n", "target_bboxes", "[", ":", ",", "0", "]", "=", "-", "1", "*", "target_bboxes", "[", ":", ",", "0", "]", "\n", "\n", "", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the XZ plane", "\n", "                ", "flip_y_axis", "=", "1", "\n", "point_cloud", "[", ":", ",", "1", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "1", "]", "\n", "target_bboxes", "[", ":", ",", "1", "]", "=", "-", "1", "*", "target_bboxes", "[", ":", ",", "1", "]", "\n", "\n", "# Rotation along up-axis/Z-axis", "\n", "", "rot_angle", "=", "(", "np", ".", "random", ".", "random", "(", ")", "*", "np", ".", "pi", "/", "18", ")", "-", "np", ".", "pi", "/", "36", "# -5 ~ +5 degree", "\n", "rot_mat", "=", "pc_util", ".", "rotz", "(", "rot_angle", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "target_bboxes", "=", "rotate_aligned_boxes", "(", "target_bboxes", ",", "rot_mat", ")", "\n", "\n", "# Augment point cloud scale: 0.85x-1.15x", "\n", "scale_ratio", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.3", "+", "0.85", "\n", "scale_ratio", "=", "np", ".", "expand_dims", "(", "np", ".", "tile", "(", "scale_ratio", ",", "3", ")", ",", "0", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "target_bboxes", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "target_bboxes", "[", ":", ",", "3", ":", "6", "]", "*=", "scale_ratio", "\n", "if", "self", ".", "use_height", ":", "\n", "                ", "point_cloud", "[", ":", ",", "-", "1", "]", "*=", "scale_ratio", "[", "0", ",", "0", "]", "\n", "\n", "# compute votes *AFTER* augmentation", "\n", "# generate votes", "\n", "# Note: since there's no map between bbox instance labels and", "\n", "# pc instance_labels (it had been filtered", "\n", "# in the data preparation step) we'll compute the instance bbox", "\n", "# from the points sharing the same instance label.", "\n", "", "", "point_votes", "=", "np", ".", "zeros", "(", "[", "self", ".", "num_points", ",", "3", "]", ")", "\n", "point_votes_mask", "=", "np", ".", "zeros", "(", "self", ".", "num_points", ")", "\n", "for", "i_instance", "in", "np", ".", "unique", "(", "instance_labels", ")", ":", "\n", "# find all points belong to that instance", "\n", "            ", "ind", "=", "np", ".", "where", "(", "instance_labels", "==", "i_instance", ")", "[", "0", "]", "\n", "# find the semantic label", "\n", "if", "semantic_labels", "[", "ind", "[", "0", "]", "]", "in", "DC", ".", "nyu40ids", ":", "\n", "                ", "x", "=", "point_cloud", "[", "ind", ",", ":", "3", "]", "\n", "center", "=", "0.5", "*", "(", "x", ".", "min", "(", "0", ")", "+", "x", ".", "max", "(", "0", ")", ")", "\n", "point_votes", "[", "ind", ",", ":", "]", "=", "center", "-", "x", "\n", "point_votes_mask", "[", "ind", "]", "=", "1.0", "\n", "", "", "point_votes", "=", "np", ".", "tile", "(", "point_votes", ",", "(", "1", ",", "3", ")", ")", "# make 3 votes identical", "\n", "\n", "class_ind", "=", "[", "np", ".", "where", "(", "DC", ".", "nyu40ids", "==", "x", ")", "[", "0", "]", "[", "0", "]", "for", "x", "in", "instance_bboxes", "[", ":", ",", "-", "1", "]", "]", "\n", "# NOTE: set size class as semantic class. Consider use size2class.", "\n", "size_classes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "class_ind", "\n", "size_residuals", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "target_bboxes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", "3", ":", "6", "]", "-", "DC", ".", "mean_size_arr", "[", "class_ind", ",", ":", "]", "\n", "\n", "target_bboxes_semcls", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "class_ind", "\n", "\n", "ret_dict", "=", "{", "}", "\n", "ret_dict", "[", "'point_clouds'", "]", "=", "point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'center_label'", "]", "=", "target_bboxes", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", "0", ":", "3", "]", "\n", "ret_dict", "[", "'heading_class_label'", "]", "=", "angle_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'heading_residual_label'", "]", "=", "angle_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'size_class_label'", "]", "=", "size_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'size_residual_label'", "]", "=", "size_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'sem_cls_label'", "]", "=", "target_bboxes_semcls", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'box_label_mask'", "]", "=", "target_bboxes_mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label'", "]", "=", "point_votes", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label_mask'", "]", "=", "point_votes_mask", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'scan_idx'", "]", "=", "np", ".", "array", "(", "idx", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'supervised_mask'", "]", "=", "np", ".", "array", "(", "1", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "scene_label", "=", "np", ".", "zeros", "(", "DC", ".", "num_class", ")", "\n", "unique_class_ind", "=", "list", "(", "set", "(", "class_ind", ")", ")", "\n", "for", "ind", "in", "unique_class_ind", ":", "\n", "            ", "scene_label", "[", "int", "(", "ind", ")", "]", "=", "1", "\n", "", "ret_dict", "[", "'scene_label'", "]", "=", "scene_label", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "ret_dict", "[", "'ema_point_clouds'", "]", "=", "ema_point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'flip_x_axis'", "]", "=", "np", ".", "array", "(", "flip_x_axis", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'flip_y_axis'", "]", "=", "np", ".", "array", "(", "flip_y_axis", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'rot_mat'", "]", "=", "rot_mat", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'rot_angle'", "]", "=", "np", ".", "array", "(", "rot_angle", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'scale'", "]", "=", "np", ".", "array", "(", "scale_ratio", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_ssl_dataset.ScannetSSLUnlabeledDataset.__init__": [[188, 220], ["print", "os.path.join", "list", "os.path.join", "scannet_ssl_dataset.ScannetSSLUnlabeledDataset.scan_names.sort", "set", "open", "f.read().splitlines", "print", "print", "exit", "print", "x.strip", "len", "len", "list", "f.read", "open().readlines", "len", "len", "os.path.basename", "os.listdir", "x.startswith", "set", "set", "open", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "labeled_sample_list", "=", "None", ",", "num_points", "=", "20000", ",", "use_color", "=", "False", ",", "\n", "use_height", "=", "False", ",", "augment", "=", "True", ",", "load_labels", "=", "False", ")", ":", "\n", "        ", "print", "(", "'----------------Scannet Unlabeled Dataset Initialization----------------'", ")", "\n", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'scannet_train_detection_data'", ")", "\n", "all_scan_names", "=", "list", "(", "set", "(", "[", "os", ".", "path", ".", "basename", "(", "x", ")", "[", "0", ":", "12", "]", "for", "x", "in", "os", ".", "listdir", "(", "self", ".", "data_path", ")", "if", "x", ".", "startswith", "(", "'scene'", ")", "]", ")", ")", "\n", "split_filenames", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data/scannetv2_train.txt'", ")", "\n", "with", "open", "(", "split_filenames", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "train_scan_names", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "# remove unavailiable scans", "\n", "", "train_scan_names", "=", "[", "sname", "for", "sname", "in", "train_scan_names", "if", "sname", "in", "all_scan_names", "]", "\n", "\n", "if", "labeled_sample_list", "is", "not", "None", ":", "\n", "            ", "labeled_scan_names", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data'", ",", "labeled_sample_list", ")", ")", ".", "readlines", "(", ")", "]", "\n", "if", "len", "(", "train_scan_names", ")", "==", "len", "(", "labeled_scan_names", ")", ":", "\n", "                ", "self", ".", "scan_names", "=", "train_scan_names", "\n", "", "else", ":", "\n", "                ", "self", ".", "scan_names", "=", "list", "(", "set", "(", "train_scan_names", ")", "-", "set", "(", "labeled_scan_names", ")", ")", "\n", "", "print", "(", "'\\tGet {} unlabeled scans out of {}'", ".", "format", "(", "len", "(", "self", ".", "scan_names", ")", ",", "len", "(", "train_scan_names", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'\\tUnknown labeled sample list: %s. Exiting...'", "%", "labeled_sample_list", ")", "\n", "exit", "(", "-", "1", ")", "\n", "", "self", ".", "scan_names", ".", "sort", "(", ")", "\n", "\n", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "use_color", "=", "use_color", "\n", "self", ".", "use_height", "=", "use_height", "\n", "self", ".", "augment", "=", "augment", "\n", "self", ".", "load_labels", "=", "load_labels", "\n", "if", "load_labels", ":", "\n", "            ", "print", "(", "'Warning! Loading labels for analysis'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_ssl_dataset.ScannetSSLUnlabeledDataset.__len__": [[221, 223], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "scan_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_ssl_dataset.ScannetSSLUnlabeledDataset.__getitem__": [[224, 321], ["numpy.load", "numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "utils.random_sampling", "utils.random_sampling.astype", "utils.random_sampling", "numpy.identity", "numpy.ones", "point_cloud.astype", "numpy.array().astype", "numpy.array().astype", "utils.rotz.astype", "numpy.array().astype", "numpy.array().astype", "numpy.array().astype", "numpy.array().astype", "numpy.percentile", "numpy.concatenate", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "utils.rotz", "numpy.dot", "numpy.expand_dims", "os.path.join", "os.path.join", "numpy.zeros.astype", "numpy.random.random", "numpy.random.random", "numpy.transpose", "numpy.tile", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.expand_dims", "numpy.where", "numpy.random.random", "numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Returns a dict with following keys:\n            point_clouds: (N,3+C)\n            scan_idx: int scan index in scan_names list\n        \"\"\"", "\n", "scan_name", "=", "self", ".", "scan_names", "[", "idx", "]", "\n", "mesh_vertices", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_vert.npy'", ")", "\n", "# instance_labels = np.load(os.path.join(self.data_path, scan_name) + '_ins_label.npy')", "\n", "# semantic_labels = np.load(os.path.join(self.data_path, scan_name) + '_sem_label.npy')", "\n", "instance_bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "\n", "\n", "if", "not", "self", ".", "use_color", ":", "\n", "            ", "raw_point_cloud", "=", "mesh_vertices", "[", ":", ",", "0", ":", "3", "]", "# do not use color for now", "\n", "", "else", ":", "\n", "            ", "raw_point_cloud", "=", "mesh_vertices", "[", ":", ",", "0", ":", "6", "]", "\n", "raw_point_cloud", "[", ":", ",", "3", ":", "]", "=", "(", "raw_point_cloud", "[", ":", ",", "3", ":", "]", "-", "MEAN_COLOR_RGB", ")", "/", "256.0", "\n", "\n", "", "if", "self", ".", "use_height", ":", "\n", "            ", "floor_height", "=", "np", ".", "percentile", "(", "raw_point_cloud", "[", ":", ",", "2", "]", ",", "0.99", ")", "\n", "height", "=", "raw_point_cloud", "[", ":", ",", "2", "]", "-", "floor_height", "\n", "raw_point_cloud", "=", "np", ".", "concatenate", "(", "[", "raw_point_cloud", ",", "np", ".", "expand_dims", "(", "height", ",", "1", ")", "]", ",", "1", ")", "\n", "\n", "", "target_bboxes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "6", ")", ")", "\n", "target_bboxes_mask", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "angle_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "angle_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "target_bboxes_semcls", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "\n", "ret_dict", "=", "{", "}", "\n", "ema_point_cloud", "=", "pc_util", ".", "random_sampling", "(", "raw_point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "False", ")", "\n", "ret_dict", "[", "'ema_point_clouds'", "]", "=", "ema_point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "# instance_labels = instance_labels[choices]", "\n", "# semantic_labels = semantic_labels[choices]", "\n", "\n", "target_bboxes_mask", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "1", "\n", "target_bboxes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "instance_bboxes", "[", ":", ",", "0", ":", "6", "]", "\n", "class_ind", "=", "[", "np", ".", "where", "(", "DC", ".", "nyu40ids", "==", "x", ")", "[", "0", "]", "[", "0", "]", "for", "x", "in", "instance_bboxes", "[", ":", ",", "-", "1", "]", "]", "\n", "# NOTE: set size class as semantic class. Consider use size2class.", "\n", "size_classes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "class_ind", "\n", "size_residuals", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "target_bboxes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", "3", ":", "6", "]", "-", "DC", ".", "mean_size_arr", "[", "class_ind", ",", ":", "]", "\n", "\n", "target_bboxes_semcls", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "class_ind", "\n", "\n", "if", "self", ".", "load_labels", ":", "\n", "            ", "ret_dict", "[", "'center_label'", "]", "=", "target_bboxes", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", "0", ":", "3", "]", "\n", "ret_dict", "[", "'box_label_mask'", "]", "=", "target_bboxes_mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'heading_class_label'", "]", "=", "angle_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'heading_residual_label'", "]", "=", "angle_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'size_class_label'", "]", "=", "size_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'size_residual_label'", "]", "=", "size_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'sem_cls_label'", "]", "=", "target_bboxes_semcls", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "", "point_cloud", ",", "choices", "=", "pc_util", ".", "random_sampling", "(", "raw_point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "True", ")", "\n", "# ------------------------------- DATA AUGMENTATION ------------------------------", "\n", "flip_x_axis", "=", "0", "\n", "flip_y_axis", "=", "0", "\n", "rot_mat", "=", "np", ".", "identity", "(", "3", ")", "\n", "scale_ratio", "=", "np", ".", "ones", "(", "(", "1", ",", "3", ")", ")", "\n", "rot_angle", "=", "0", "\n", "if", "self", ".", "augment", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the YZ plane", "\n", "                ", "flip_x_axis", "=", "1", "\n", "point_cloud", "[", ":", ",", "0", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "0", "]", "\n", "\n", "", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the XZ plane", "\n", "                ", "flip_y_axis", "=", "1", "\n", "point_cloud", "[", ":", ",", "1", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "1", "]", "\n", "\n", "# Rotation along up-axis/Z-axis", "\n", "", "rot_angle", "=", "(", "np", ".", "random", ".", "random", "(", ")", "*", "np", ".", "pi", "/", "18", ")", "-", "np", ".", "pi", "/", "36", "# -5 ~ +5 degree", "\n", "rot_mat", "=", "pc_util", ".", "rotz", "(", "rot_angle", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "\n", "# Augment point cloud scale: 0.85x-1.15x", "\n", "scale_ratio", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.3", "+", "0.85", "\n", "scale_ratio", "=", "np", ".", "expand_dims", "(", "np", ".", "tile", "(", "scale_ratio", ",", "3", ")", ",", "0", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "if", "self", ".", "use_height", ":", "\n", "                ", "point_cloud", "[", ":", ",", "-", "1", "]", "*=", "scale_ratio", "[", "0", ",", "0", "]", "\n", "\n", "", "", "ret_dict", "[", "'point_clouds'", "]", "=", "point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'flip_x_axis'", "]", "=", "np", ".", "array", "(", "flip_x_axis", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'flip_y_axis'", "]", "=", "np", ".", "array", "(", "flip_y_axis", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'rot_mat'", "]", "=", "rot_mat", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'rot_angle'", "]", "=", "np", ".", "array", "(", "rot_angle", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'scale'", "]", "=", "np", ".", "array", "(", "scale_ratio", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'scan_idx'", "]", "=", "np", ".", "array", "(", "idx", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'supervised_mask'", "]", "=", "np", ".", "array", "(", "0", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "return", "ret_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.ScannetDatasetConfig.__init__": [[20, 36], ["numpy.array", "range", "torch.from_numpy().cuda().float", "numpy.load", "enumerate", "os.path.join", "torch.from_numpy().cuda", "list", "torch.from_numpy"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "18", "\n", "self", ".", "num_heading_bin", "=", "1", "\n", "self", ".", "num_size_cluster", "=", "18", "\n", "\n", "self", ".", "type2class", "=", "{", "'cabinet'", ":", "0", ",", "'bed'", ":", "1", ",", "'chair'", ":", "2", ",", "'sofa'", ":", "3", ",", "'table'", ":", "4", ",", "'door'", ":", "5", ",", "\n", "'window'", ":", "6", ",", "'bookshelf'", ":", "7", ",", "'picture'", ":", "8", ",", "'counter'", ":", "9", ",", "'desk'", ":", "10", ",", "'curtain'", ":", "11", ",", "\n", "'refrigerator'", ":", "12", ",", "'showercurtrain'", ":", "13", ",", "'toilet'", ":", "14", ",", "'sink'", ":", "15", ",", "'bathtub'", ":", "16", ",", "'garbagebin'", ":", "17", "}", "\n", "self", ".", "class2type", "=", "{", "self", ".", "type2class", "[", "t", "]", ":", "t", "for", "t", "in", "self", ".", "type2class", "}", "\n", "self", ".", "nyu40ids", "=", "np", ".", "array", "(", "[", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "14", ",", "16", ",", "24", ",", "28", ",", "33", ",", "34", ",", "36", ",", "39", "]", ")", "\n", "self", ".", "nyu40id2class", "=", "{", "nyu40id", ":", "i", "for", "i", ",", "nyu40id", "in", "enumerate", "(", "list", "(", "self", ".", "nyu40ids", ")", ")", "}", "\n", "self", ".", "mean_size_arr", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data/scannet_means.npz'", ")", ")", "[", "'arr_0'", "]", "\n", "self", ".", "type_mean_size", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "self", ".", "num_size_cluster", ")", ":", "\n", "            ", "self", ".", "type_mean_size", "[", "self", ".", "class2type", "[", "i", "]", "]", "=", "self", ".", "mean_size_arr", "[", "i", ",", ":", "]", "\n", "", "self", ".", "mean_size_arr_gpu", "=", "torch", ".", "from_numpy", "(", "self", ".", "mean_size_arr", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.ScannetDatasetConfig.angle2class": [[37, 49], ["None"], "methods", ["None"], ["", "def", "angle2class", "(", "self", ",", "angle", ")", ":", "\n", "        ", "''' Convert continuous angle to discrete class\n            [optinal] also small regression number from  \n            class center angle to current angle.\n           \n            angle is from 0-2pi (or -pi~pi), class center at 0, 1*(2pi/N), 2*(2pi/N) ...  (N-1)*(2pi/N)\n            return is class of int32 of 0,1,...,N-1 and a number such that\n                class*(2pi/N) + number = angle\n\n            NOT USED.\n        '''", "\n", "assert", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.ScannetDatasetConfig.class2angle_gpu": [[50, 55], ["torch.zeros().cuda", "torch.zeros"], "methods", ["None"], ["", "def", "class2angle_gpu", "(", "self", ",", "pred_cls", ",", "residual", ",", "to_label_format", "=", "True", ")", ":", "\n", "        ", "''' Inverse function to angle2class.\n\n        As ScanNet only has axis-alined boxes so angles are always 0. '''", "\n", "return", "torch", ".", "zeros", "(", "pred_cls", ".", "shape", ")", ".", "cuda", "(", ")", "# 0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.ScannetDatasetConfig.class2size_gpu": [[56, 59], ["None"], "methods", ["None"], ["", "def", "class2size_gpu", "(", "self", ",", "pred_cls", ",", "residual", ")", ":", "\n", "        ", "''' Inverse function to size2class '''", "\n", "return", "self", ".", "mean_size_arr_gpu", "[", "pred_cls", ",", ":", "]", "+", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.ScannetDatasetConfig.class2angle": [[60, 65], ["numpy.zeros"], "methods", ["None"], ["", "def", "class2angle", "(", "self", ",", "pred_cls", ",", "residual", ",", "to_label_format", "=", "True", ")", ":", "\n", "        ", "''' Inverse function to angle2class.\n        \n        As ScanNet only has axis-alined boxes so angles are always 0. '''", "\n", "return", "np", ".", "zeros", "(", "pred_cls", ".", "shape", ")", "# 0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.ScannetDatasetConfig.size2class": [[66, 71], ["None"], "methods", ["None"], ["", "def", "size2class", "(", "self", ",", "size", ",", "type_name", ")", ":", "\n", "        ", "''' Convert 3D box size (l,w,h) to size class and size residual '''", "\n", "size_class", "=", "self", ".", "type2class", "[", "type_name", "]", "\n", "size_residual", "=", "size", "-", "self", ".", "type_mean_size", "[", "type_name", "]", "\n", "return", "size_class", ",", "size_residual", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.ScannetDatasetConfig.class2size": [[72, 75], ["None"], "methods", ["None"], ["", "def", "class2size", "(", "self", ",", "pred_cls", ",", "residual", ")", ":", "\n", "        ", "''' Inverse function to size2class '''", "\n", "return", "self", ".", "mean_size_arr", "[", "pred_cls", ",", ":", "]", "+", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.ScannetDatasetConfig.param2obb": [[76, 84], ["model_util_scannet.ScannetDatasetConfig.class2angle", "model_util_scannet.ScannetDatasetConfig.class2size", "numpy.zeros", "int"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size"], ["", "def", "param2obb", "(", "self", ",", "center", ",", "heading_class", ",", "heading_residual", ",", "size_class", ",", "size_residual", ")", ":", "\n", "        ", "heading_angle", "=", "self", ".", "class2angle", "(", "heading_class", ",", "heading_residual", ")", "\n", "box_size", "=", "self", ".", "class2size", "(", "int", "(", "size_class", ")", ",", "size_residual", ")", "\n", "obb", "=", "np", ".", "zeros", "(", "(", "7", ",", ")", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "center", "\n", "obb", "[", "3", ":", "6", "]", "=", "box_size", "\n", "obb", "[", "6", "]", "=", "heading_angle", "*", "-", "1", "\n", "return", "obb", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.rotate_aligned_boxes": [[85, 107], ["numpy.dot", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.stack", "numpy.concatenate", "numpy.transpose", "numpy.zeros", "numpy.dot", "numpy.max", "numpy.max", "numpy.transpose"], "function", ["None"], ["", "", "def", "rotate_aligned_boxes", "(", "input_boxes", ",", "rot_mat", ")", ":", "\n", "    ", "centers", ",", "lengths", "=", "input_boxes", "[", ":", ",", "0", ":", "3", "]", ",", "input_boxes", "[", ":", ",", "3", ":", "6", "]", "\n", "new_centers", "=", "np", ".", "dot", "(", "centers", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "\n", "dx", ",", "dy", "=", "lengths", "[", ":", ",", "0", "]", "/", "2.0", ",", "lengths", "[", ":", ",", "1", "]", "/", "2.0", "\n", "new_x", "=", "np", ".", "zeros", "(", "(", "dx", ".", "shape", "[", "0", "]", ",", "4", ")", ")", "\n", "new_y", "=", "np", ".", "zeros", "(", "(", "dx", ".", "shape", "[", "0", "]", ",", "4", ")", ")", "\n", "\n", "for", "i", ",", "crnr", "in", "enumerate", "(", "[", "(", "-", "1", ",", "-", "1", ")", ",", "(", "1", ",", "-", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "-", "1", ",", "1", ")", "]", ")", ":", "\n", "        ", "crnrs", "=", "np", ".", "zeros", "(", "(", "dx", ".", "shape", "[", "0", "]", ",", "3", ")", ")", "\n", "crnrs", "[", ":", ",", "0", "]", "=", "crnr", "[", "0", "]", "*", "dx", "\n", "crnrs", "[", ":", ",", "1", "]", "=", "crnr", "[", "1", "]", "*", "dy", "\n", "crnrs", "=", "np", ".", "dot", "(", "crnrs", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "new_x", "[", ":", ",", "i", "]", "=", "crnrs", "[", ":", ",", "0", "]", "\n", "new_y", "[", ":", ",", "i", "]", "=", "crnrs", "[", ":", ",", "1", "]", "\n", "\n", "\n", "", "new_dx", "=", "2.0", "*", "np", ".", "max", "(", "new_x", ",", "1", ")", "\n", "new_dy", "=", "2.0", "*", "np", ".", "max", "(", "new_y", ",", "1", ")", "\n", "new_lengths", "=", "np", ".", "stack", "(", "(", "new_dx", ",", "new_dy", ",", "lengths", "[", ":", ",", "2", "]", ")", ",", "axis", "=", "1", ")", "\n", "\n", "return", "np", ".", "concatenate", "(", "[", "new_centers", ",", "new_lengths", "]", ",", "axis", "=", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.load_scannet_data.read_aggregation": [[26, 43], ["os.path.isfile", "open", "json.load", "len", "range", "label_to_segs[].extend"], "function", ["None"], ["def", "read_aggregation", "(", "filename", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "object_id_to_segs", "=", "{", "}", "\n", "label_to_segs", "=", "{", "}", "\n", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "num_objects", "=", "len", "(", "data", "[", "'segGroups'", "]", ")", "\n", "for", "i", "in", "range", "(", "num_objects", ")", ":", "\n", "            ", "object_id", "=", "data", "[", "'segGroups'", "]", "[", "i", "]", "[", "'objectId'", "]", "+", "1", "# instance ids should be 1-indexed", "\n", "label", "=", "data", "[", "'segGroups'", "]", "[", "i", "]", "[", "'label'", "]", "\n", "segs", "=", "data", "[", "'segGroups'", "]", "[", "i", "]", "[", "'segments'", "]", "\n", "object_id_to_segs", "[", "object_id", "]", "=", "segs", "\n", "if", "label", "in", "label_to_segs", ":", "\n", "                ", "label_to_segs", "[", "label", "]", ".", "extend", "(", "segs", ")", "\n", "", "else", ":", "\n", "                ", "label_to_segs", "[", "label", "]", "=", "segs", "\n", "", "", "", "return", "object_id_to_segs", ",", "label_to_segs", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.load_scannet_data.read_segmentation": [[45, 58], ["os.path.isfile", "open", "json.load", "len", "range", "seg_to_verts[].append"], "function", ["None"], ["", "def", "read_segmentation", "(", "filename", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "seg_to_verts", "=", "{", "}", "\n", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "num_verts", "=", "len", "(", "data", "[", "'segIndices'", "]", ")", "\n", "for", "i", "in", "range", "(", "num_verts", ")", ":", "\n", "            ", "seg_id", "=", "data", "[", "'segIndices'", "]", "[", "i", "]", "\n", "if", "seg_id", "in", "seg_to_verts", ":", "\n", "                ", "seg_to_verts", "[", "seg_id", "]", ".", "append", "(", "i", ")", "\n", "", "else", ":", "\n", "                ", "seg_to_verts", "[", "seg_id", "]", "=", "[", "i", "]", "\n", "", "", "", "return", "seg_to_verts", ",", "num_verts", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.load_scannet_data.export": [[60, 130], ["scannet_utils.read_label_mapping", "scannet_utils.read_mesh_vertices_rgb", "open().readlines", "np.array().reshape", "np.ones", "np.dot", "load_scannet_data.read_aggregation", "load_scannet_data.read_segmentation", "np.zeros", "label_to_segs.items", "np.zeros", "len", "object_id_to_segs.items", "np.zeros", "np.array().reshape.transpose", "np.unique", "np.min", "np.min", "np.min", "np.max", "np.max", "np.max", "np.array", "np.save", "np.save", "np.save", "np.save", "open", "np.array", "list", "len", "float", "object_id_to_segs.keys", "line.rstrip().strip().split", "line.rstrip().strip", "line.rstrip"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_utils.read_label_mapping", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_utils.read_mesh_vertices_rgb", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.load_scannet_data.read_aggregation", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.load_scannet_data.read_segmentation"], ["", "def", "export", "(", "mesh_file", ",", "agg_file", ",", "seg_file", ",", "meta_file", ",", "label_map_file", ",", "output_file", "=", "None", ")", ":", "\n", "    ", "\"\"\" points are XYZ RGB (RGB in 0-255),\n    semantic label as nyu40 ids,\n    instance label as 1-#instance,\n    box as (cx,cy,cz,dx,dy,dz,semantic_label)\n    \"\"\"", "\n", "label_map", "=", "scannet_utils", ".", "read_label_mapping", "(", "label_map_file", ",", "\n", "label_from", "=", "'raw_category'", ",", "label_to", "=", "'nyu40id'", ")", "\n", "mesh_vertices", "=", "scannet_utils", ".", "read_mesh_vertices_rgb", "(", "mesh_file", ")", "\n", "\n", "# Load scene axis alignment matrix", "\n", "lines", "=", "open", "(", "meta_file", ")", ".", "readlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "if", "'axisAlignment'", "in", "line", ":", "\n", "            ", "axis_align_matrix", "=", "[", "float", "(", "x", ")", "for", "x", "in", "line", ".", "rstrip", "(", ")", ".", "strip", "(", "'axisAlignment = '", ")", ".", "split", "(", "' '", ")", "]", "\n", "break", "\n", "", "", "axis_align_matrix", "=", "np", ".", "array", "(", "axis_align_matrix", ")", ".", "reshape", "(", "(", "4", ",", "4", ")", ")", "\n", "pts", "=", "np", ".", "ones", "(", "(", "mesh_vertices", ".", "shape", "[", "0", "]", ",", "4", ")", ")", "\n", "pts", "[", ":", ",", "0", ":", "3", "]", "=", "mesh_vertices", "[", ":", ",", "0", ":", "3", "]", "\n", "pts", "=", "np", ".", "dot", "(", "pts", ",", "axis_align_matrix", ".", "transpose", "(", ")", ")", "# Nx4", "\n", "mesh_vertices", "[", ":", ",", "0", ":", "3", "]", "=", "pts", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "# Load semantic and instance labels", "\n", "object_id_to_segs", ",", "label_to_segs", "=", "read_aggregation", "(", "agg_file", ")", "\n", "seg_to_verts", ",", "num_verts", "=", "read_segmentation", "(", "seg_file", ")", "\n", "label_ids", "=", "np", ".", "zeros", "(", "shape", "=", "(", "num_verts", ")", ",", "dtype", "=", "np", ".", "uint32", ")", "# 0: unannotated", "\n", "object_id_to_label_id", "=", "{", "}", "\n", "for", "label", ",", "segs", "in", "label_to_segs", ".", "items", "(", ")", ":", "\n", "        ", "label_id", "=", "label_map", "[", "label", "]", "\n", "for", "seg", "in", "segs", ":", "\n", "            ", "verts", "=", "seg_to_verts", "[", "seg", "]", "\n", "label_ids", "[", "verts", "]", "=", "label_id", "\n", "", "", "instance_ids", "=", "np", ".", "zeros", "(", "shape", "=", "(", "num_verts", ")", ",", "dtype", "=", "np", ".", "uint32", ")", "# 0: unannotated", "\n", "num_instances", "=", "len", "(", "np", ".", "unique", "(", "list", "(", "object_id_to_segs", ".", "keys", "(", ")", ")", ")", ")", "\n", "for", "object_id", ",", "segs", "in", "object_id_to_segs", ".", "items", "(", ")", ":", "\n", "        ", "for", "seg", "in", "segs", ":", "\n", "            ", "verts", "=", "seg_to_verts", "[", "seg", "]", "\n", "instance_ids", "[", "verts", "]", "=", "object_id", "\n", "if", "object_id", "not", "in", "object_id_to_label_id", ":", "\n", "                ", "object_id_to_label_id", "[", "object_id", "]", "=", "label_ids", "[", "verts", "]", "[", "0", "]", "\n", "", "", "", "instance_bboxes", "=", "np", ".", "zeros", "(", "(", "num_instances", ",", "7", ")", ")", "\n", "for", "obj_id", "in", "object_id_to_segs", ":", "\n", "        ", "label_id", "=", "object_id_to_label_id", "[", "obj_id", "]", "\n", "obj_pc", "=", "mesh_vertices", "[", "instance_ids", "==", "obj_id", ",", "0", ":", "3", "]", "\n", "if", "len", "(", "obj_pc", ")", "==", "0", ":", "continue", "\n", "# Compute axis aligned box", "\n", "# An axis aligned bounding box is parameterized by", "\n", "# (cx,cy,cz) and (dx,dy,dz) and label id", "\n", "# where (cx,cy,cz) is the center point of the box,", "\n", "# dx is the x-axis length of the box.", "\n", "xmin", "=", "np", ".", "min", "(", "obj_pc", "[", ":", ",", "0", "]", ")", "\n", "ymin", "=", "np", ".", "min", "(", "obj_pc", "[", ":", ",", "1", "]", ")", "\n", "zmin", "=", "np", ".", "min", "(", "obj_pc", "[", ":", ",", "2", "]", ")", "\n", "xmax", "=", "np", ".", "max", "(", "obj_pc", "[", ":", ",", "0", "]", ")", "\n", "ymax", "=", "np", ".", "max", "(", "obj_pc", "[", ":", ",", "1", "]", ")", "\n", "zmax", "=", "np", ".", "max", "(", "obj_pc", "[", ":", ",", "2", "]", ")", "\n", "bbox", "=", "np", ".", "array", "(", "[", "(", "xmin", "+", "xmax", ")", "/", "2", ",", "(", "ymin", "+", "ymax", ")", "/", "2", ",", "(", "zmin", "+", "zmax", ")", "/", "2", ",", "\n", "xmax", "-", "xmin", ",", "ymax", "-", "ymin", ",", "zmax", "-", "zmin", ",", "label_id", "]", ")", "\n", "# NOTE: this assumes obj_id is in 1,2,3,.,,,.NUM_INSTANCES", "\n", "instance_bboxes", "[", "obj_id", "-", "1", ",", ":", "]", "=", "bbox", "\n", "\n", "", "if", "output_file", "is", "not", "None", ":", "\n", "        ", "np", ".", "save", "(", "output_file", "+", "'_vert.npy'", ",", "mesh_vertices", ")", "\n", "np", ".", "save", "(", "output_file", "+", "'_sem_label.npy'", ",", "label_ids", ")", "\n", "np", ".", "save", "(", "output_file", "+", "'_ins_label.npy'", ",", "instance_ids", ")", "\n", "np", ".", "save", "(", "output_file", "+", "'_bbox.npy'", ",", "instance_bboxes", ")", "\n", "\n", "", "return", "mesh_vertices", ",", "label_ids", ",", "instance_ids", ",", "instance_bboxes", ",", "object_id_to_label_id", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.load_scannet_data.main": [[131, 144], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "load_scannet_data.export", "os.path.split"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.load_scannet_data.export"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--scan_path'", ",", "required", "=", "True", ",", "help", "=", "'path to scannet scene (e.g., data/ScanNet/v2/scene0000_00'", ")", "\n", "parser", ".", "add_argument", "(", "'--output_file'", ",", "required", "=", "True", ",", "help", "=", "'output file'", ")", "\n", "parser", ".", "add_argument", "(", "'--label_map_file'", ",", "required", "=", "True", ",", "help", "=", "'path to scannetv2-labels.combined.tsv'", ")", "\n", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "scan_name", "=", "os", ".", "path", ".", "split", "(", "opt", ".", "scan_path", ")", "[", "-", "1", "]", "\n", "mesh_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "scan_path", ",", "scan_name", "+", "'_vh_clean_2.ply'", ")", "\n", "agg_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "scan_path", ",", "scan_name", "+", "'.aggregation.json'", ")", "\n", "seg_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "scan_path", ",", "scan_name", "+", "'_vh_clean_2.0.010000.segs.json'", ")", "\n", "meta_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "scan_path", ",", "scan_name", "+", "'.txt'", ")", "# includes axisAlignment info for the train set scans.", "\n", "export", "(", "mesh_file", ",", "agg_file", ",", "seg_file", ",", "meta_file", ",", "opt", ".", "label_map_file", ",", "opt", ".", "output_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.get_release_scans": [[41, 48], ["urlopen", "scan_line.decode().rstrip", "scans.append", "scan_line.decode"], "function", ["None"], ["def", "get_release_scans", "(", "release_file", ")", ":", "\n", "    ", "scan_lines", "=", "urlopen", "(", "release_file", ")", "\n", "scans", "=", "[", "]", "\n", "for", "scan_line", "in", "scan_lines", ":", "\n", "        ", "scan_id", "=", "scan_line", ".", "decode", "(", "'utf8'", ")", ".", "rstrip", "(", "'\\n'", ")", "\n", "scans", ".", "append", "(", "scan_id", ")", "\n", "", "return", "scans", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_release": [[50, 58], ["print", "print", "len", "os.path.join", "download-scannet.download_scan"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_scan"], ["", "def", "download_release", "(", "release_scans", ",", "out_dir", ",", "file_types", ",", "use_v1_sens", ")", ":", "\n", "    ", "if", "len", "(", "release_scans", ")", "==", "0", ":", "\n", "        ", "return", "\n", "", "print", "(", "'Downloading ScanNet '", "+", "RELEASE_NAME", "+", "' release to '", "+", "out_dir", "+", "'...'", ")", "\n", "for", "scan_id", "in", "release_scans", ":", "\n", "        ", "scan_out_dir", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "scan_id", ")", "\n", "download_scan", "(", "scan_id", ",", "scan_out_dir", ",", "file_types", ",", "use_v1_sens", ")", "\n", "", "print", "(", "'Downloaded ScanNet '", "+", "RELEASE_NAME", "+", "' release.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_file": [[60, 74], ["os.path.dirname", "os.path.isdir", "os.makedirs", "os.path.isfile", "print", "tempfile.mkstemp", "os.fdopen", "os.fdopen.close", "urllib.request.urlretrieve", "os.rename", "print"], "function", ["None"], ["", "def", "download_file", "(", "url", ",", "out_file", ")", ":", "\n", "    ", "out_dir", "=", "os", ".", "path", ".", "dirname", "(", "out_file", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "out_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "out_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isfile", "(", "out_file", ")", ":", "\n", "        ", "print", "(", "'\\t'", "+", "url", "+", "' > '", "+", "out_file", ")", "\n", "fh", ",", "out_file_tmp", "=", "tempfile", ".", "mkstemp", "(", "dir", "=", "out_dir", ")", "\n", "f", "=", "os", ".", "fdopen", "(", "fh", ",", "'w'", ")", "\n", "f", ".", "close", "(", ")", "\n", "urllib", ".", "request", ".", "urlretrieve", "(", "url", ",", "out_file_tmp", ")", "\n", "#urllib.urlretrieve(url, out_file_tmp)", "\n", "os", ".", "rename", "(", "out_file_tmp", ",", "out_file", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'WARNING: skipping download of existing file '", "+", "out_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_scan": [[75, 88], ["print", "print", "os.path.isdir", "os.makedirs", "download-scannet.download_file", "FAILED_DOWNLOAD.append"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_file"], ["", "", "def", "download_scan", "(", "scan_id", ",", "out_dir", ",", "file_types", ",", "use_v1_sens", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "print", "(", "'Downloading ScanNet '", "+", "RELEASE_NAME", "+", "' scan '", "+", "scan_id", "+", "' ...'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "out_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "out_dir", ")", "\n", "", "for", "ft", "in", "file_types", ":", "\n", "            ", "v1_sens", "=", "use_v1_sens", "and", "ft", "==", "'.sens'", "\n", "url", "=", "BASE_URL", "+", "RELEASE", "+", "'/'", "+", "scan_id", "+", "'/'", "+", "scan_id", "+", "ft", "if", "not", "v1_sens", "else", "BASE_URL", "+", "RELEASES", "[", "V1_IDX", "]", "+", "'/'", "+", "scan_id", "+", "'/'", "+", "scan_id", "+", "ft", "\n", "out_file", "=", "out_dir", "+", "'/'", "+", "scan_id", "+", "ft", "\n", "download_file", "(", "url", ",", "out_file", ")", "\n", "", "print", "(", "'Downloaded scan '", "+", "scan_id", ")", "\n", "", "except", ":", "\n", "        ", "FAILED_DOWNLOAD", ".", "append", "(", "scan_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_task_data": [[90, 105], ["print", "print", "os.path.join", "os.path.dirname", "download-scannet.download_file", "os.path.isdir", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_file"], ["", "", "def", "download_task_data", "(", "out_dir", ")", ":", "\n", "    ", "print", "(", "'Downloading ScanNet v1 task data...'", ")", "\n", "files", "=", "[", "\n", "LABEL_MAP_FILES", "[", "V1_IDX", "]", ",", "'obj_classification/data.zip'", ",", "\n", "'obj_classification/trained_models.zip'", ",", "'voxel_labeling/data.zip'", ",", "\n", "'voxel_labeling/trained_models.zip'", "\n", "]", "\n", "for", "file", "in", "files", ":", "\n", "        ", "url", "=", "BASE_URL", "+", "RELEASES_TASKS", "[", "V1_IDX", "]", "+", "'/'", "+", "file", "\n", "localpath", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "file", ")", "\n", "localdir", "=", "os", ".", "path", ".", "dirname", "(", "localpath", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "localdir", ")", ":", "\n", "          ", "os", ".", "makedirs", "(", "localdir", ")", "\n", "", "download_file", "(", "url", ",", "localpath", ")", "\n", "", "print", "(", "'Downloaded task data.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_label_map": [[107, 118], ["print", "print", "os.path.join", "os.path.dirname", "download-scannet.download_file", "os.path.isdir", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_file"], ["", "def", "download_label_map", "(", "out_dir", ")", ":", "\n", "    ", "print", "(", "'Downloading ScanNet '", "+", "RELEASE_NAME", "+", "' label mapping file...'", ")", "\n", "files", "=", "[", "LABEL_MAP_FILE", "]", "\n", "for", "file", "in", "files", ":", "\n", "        ", "url", "=", "BASE_URL", "+", "RELEASE_TASKS", "+", "'/'", "+", "file", "\n", "localpath", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "file", ")", "\n", "localdir", "=", "os", ".", "path", ".", "dirname", "(", "localpath", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "localdir", ")", ":", "\n", "          ", "os", ".", "makedirs", "(", "localdir", ")", "\n", "", "download_file", "(", "url", ",", "localpath", ")", "\n", "", "print", "(", "'Downloaded ScanNet '", "+", "RELEASE_NAME", "+", "' label mapping file.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.main": [[120, 219], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "print", "print", "print", "print", "input", "download-scannet.get_release_scans", "download-scannet.get_release_scans", "os.path.join", "os.path.join", "os.path.join", "download-scannet.download_task_data", "download-scannet.download_label_map", "print", "file_types_test.append", "print", "download-scannet.download_file", "print", "os.path.join", "os.path.join", "print", "download-scannet.download_file", "print", "os.path.join", "os.path.join", "print", "print", "print", "input", "download-scannet.download_release", "print", "print", "print", "download-scannet.download_scan", "len", "len", "print", "print", "print", "input", "download-scannet.download_label_map", "download-scannet.download_release", "download-scannet.download_file", "os.path.join", "os.path.join", "print", "input", "input.strip().lower", "file_types.remove", "os.path.join", "os.path.join", "input.strip().lower", "scan_file_types.remove", "input.strip", "input.strip"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.get_release_scans", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.get_release_scans", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_task_data", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_label_map", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_release", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_scan", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_label_map", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_release", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.download-scannet.download_file"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Downloads ScanNet public data release.'", ")", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--out_dir'", ",", "required", "=", "True", ",", "help", "=", "'directory in which to download'", ")", "\n", "parser", ".", "add_argument", "(", "'--task_data'", ",", "action", "=", "'store_true'", ",", "help", "=", "'download task data (v1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--label_map'", ",", "action", "=", "'store_true'", ",", "help", "=", "'download label map file'", ")", "\n", "parser", ".", "add_argument", "(", "'--v1'", ",", "action", "=", "'store_true'", ",", "help", "=", "'download ScanNet v1 instead of v2'", ")", "\n", "parser", ".", "add_argument", "(", "'--id'", ",", "help", "=", "'specific scan id to download'", ")", "\n", "parser", ".", "add_argument", "(", "'--preprocessed_frames'", ",", "action", "=", "'store_true'", ",", "help", "=", "'download preprocessed subset of ScanNet frames ('", "+", "PREPROCESSED_FRAMES_FILE", "[", "1", "]", "+", "')'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_frames_2d'", ",", "action", "=", "'store_true'", ",", "help", "=", "'download 2D test frames ('", "+", "TEST_FRAMES_FILE", "[", "1", "]", "+", "'; also included with whole dataset download)'", ")", "\n", "parser", ".", "add_argument", "(", "'--types'", ",", "nargs", "=", "'+'", ",", "help", "=", "'specific file type to download (.aggregation.json, .sens, .txt, _vh_clean.ply, _vh_clean_2.0.010000.segs.json, _vh_clean_2.ply, _vh_clean.segs.json, _vh_clean.aggregation.json, _vh_clean_2.labels.ply, _2d-instance.zip, _2d-instance-filt.zip, _2d-label.zip, _2d-label-filt.zip)'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "print", "(", "'By pressing any key to continue you confirm that you have agreed to the ScanNet terms of use as described at:'", ")", "\n", "print", "(", "TOS_URL", ")", "\n", "print", "(", "'***'", ")", "\n", "print", "(", "'Press any key to continue, or CTRL-C to exit.'", ")", "\n", "key", "=", "input", "(", "''", ")", "\n", "\n", "if", "args", ".", "v1", ":", "\n", "        ", "global", "RELEASE", "\n", "global", "RELEASE_TASKS", "\n", "global", "RELEASE_NAME", "\n", "global", "LABEL_MAP_FILE", "\n", "RELEASE", "=", "RELEASES", "[", "V1_IDX", "]", "\n", "RELEASE_TASKS", "=", "RELEASES_TASKS", "[", "V1_IDX", "]", "\n", "RELEASE_NAME", "=", "RELEASES_NAMES", "[", "V1_IDX", "]", "\n", "LABEL_MAP_FILE", "=", "LABEL_MAP_FILES", "[", "V1_IDX", "]", "\n", "\n", "", "release_file", "=", "BASE_URL", "+", "RELEASE", "+", "'.txt'", "\n", "release_scans", "=", "get_release_scans", "(", "release_file", ")", "\n", "file_types", "=", "FILETYPES", ";", "\n", "release_test_file", "=", "BASE_URL", "+", "RELEASE", "+", "'_test.txt'", "\n", "release_test_scans", "=", "get_release_scans", "(", "release_test_file", ")", "\n", "file_types_test", "=", "FILETYPES_TEST", ";", "\n", "out_dir_scans", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_dir", ",", "'scans'", ")", "\n", "out_dir_test_scans", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_dir", ",", "'scans_test'", ")", "\n", "out_dir_tasks", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_dir", ",", "'tasks'", ")", "\n", "\n", "if", "args", ".", "types", ":", "# download file type", "\n", "        ", "file_types", "=", "args", ".", "types", "\n", "for", "file_type", "in", "file_types", ":", "\n", "            ", "if", "file_type", "not", "in", "FILETYPES", ":", "\n", "                ", "print", "(", "'ERROR: Invalid file type: '", "+", "file_type", ")", "\n", "return", "\n", "", "", "file_types_test", "=", "[", "]", "\n", "for", "file_type", "in", "file_types", ":", "\n", "            ", "if", "file_type", "not", "in", "FILETYPES_TEST", ":", "\n", "                ", "file_types_test", ".", "append", "(", "file_type", ")", "\n", "", "", "", "if", "args", ".", "task_data", ":", "# download task data", "\n", "        ", "download_task_data", "(", "out_dir_tasks", ")", "\n", "", "elif", "args", ".", "label_map", ":", "# download label map file", "\n", "        ", "download_label_map", "(", "args", ".", "out_dir", ")", "\n", "", "elif", "args", ".", "preprocessed_frames", ":", "# download preprocessed scannet_frames_25k.zip file", "\n", "        ", "if", "args", ".", "v1", ":", "\n", "            ", "print", "(", "'ERROR: Preprocessed frames only available for ScanNet v2'", ")", "\n", "", "print", "(", "'You are downloading the preprocessed subset of frames '", "+", "PREPROCESSED_FRAMES_FILE", "[", "0", "]", "+", "' which requires '", "+", "PREPROCESSED_FRAMES_FILE", "[", "1", "]", "+", "' of space.'", ")", "\n", "download_file", "(", "os", ".", "path", ".", "join", "(", "BASE_URL", ",", "RELEASE_TASKS", ",", "PREPROCESSED_FRAMES_FILE", "[", "0", "]", ")", ",", "os", ".", "path", ".", "join", "(", "out_dir_tasks", ",", "PREPROCESSED_FRAMES_FILE", "[", "0", "]", ")", ")", "\n", "", "elif", "args", ".", "test_frames_2d", ":", "# download test scannet_frames_test.zip file", "\n", "        ", "if", "args", ".", "v1", ":", "\n", "            ", "print", "(", "'ERROR: 2D test frames only available for ScanNet v2'", ")", "\n", "", "print", "(", "'You are downloading the 2D test set '", "+", "TEST_FRAMES_FILE", "[", "0", "]", "+", "' which requires '", "+", "TEST_FRAMES_FILE", "[", "1", "]", "+", "' of space.'", ")", "\n", "download_file", "(", "os", ".", "path", ".", "join", "(", "BASE_URL", ",", "RELEASE_TASKS", ",", "TEST_FRAMES_FILE", "[", "0", "]", ")", ",", "os", ".", "path", ".", "join", "(", "out_dir_tasks", ",", "TEST_FRAMES_FILE", "[", "0", "]", ")", ")", "\n", "", "elif", "args", ".", "id", ":", "# download single scan", "\n", "        ", "scan_id", "=", "args", ".", "id", "\n", "is_test_scan", "=", "scan_id", "in", "release_test_scans", "\n", "if", "scan_id", "not", "in", "release_scans", "and", "(", "not", "is_test_scan", "or", "args", ".", "v1", ")", ":", "\n", "            ", "print", "(", "'ERROR: Invalid scan id: '", "+", "scan_id", ")", "\n", "", "else", ":", "\n", "            ", "out_dir", "=", "os", ".", "path", ".", "join", "(", "out_dir_scans", ",", "scan_id", ")", "if", "not", "is_test_scan", "else", "os", ".", "path", ".", "join", "(", "out_dir_test_scans", ",", "scan_id", ")", "\n", "scan_file_types", "=", "file_types", "if", "not", "is_test_scan", "else", "file_types_test", "\n", "use_v1_sens", "=", "not", "is_test_scan", "\n", "if", "not", "is_test_scan", "and", "not", "args", ".", "v1", "and", "'.sens'", "in", "scan_file_types", ":", "\n", "                ", "print", "(", "'Note: ScanNet v2 uses the same .sens files as ScanNet v1: Press \\'n\\' to exclude downloading .sens files for each scan'", ")", "\n", "key", "=", "input", "(", "''", ")", "\n", "if", "key", ".", "strip", "(", ")", ".", "lower", "(", ")", "==", "'n'", ":", "\n", "                    ", "scan_file_types", ".", "remove", "(", "'.sens'", ")", "\n", "", "", "download_scan", "(", "scan_id", ",", "out_dir", ",", "scan_file_types", ",", "use_v1_sens", ")", "\n", "", "", "else", ":", "# download entire release", "\n", "        ", "if", "len", "(", "file_types", ")", "==", "len", "(", "FILETYPES", ")", ":", "\n", "            ", "print", "(", "'WARNING: You are downloading the entire ScanNet '", "+", "RELEASE_NAME", "+", "' release which requires '", "+", "RELEASE_SIZE", "+", "' of space.'", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'WARNING: You are downloading all ScanNet '", "+", "RELEASE_NAME", "+", "' scans of type '", "+", "file_types", "[", "0", "]", ")", "\n", "", "print", "(", "'Note that existing scan directories will be skipped. Delete partially downloaded directories to re-download.'", ")", "\n", "print", "(", "'***'", ")", "\n", "print", "(", "'Press any key to continue, or CTRL-C to exit.'", ")", "\n", "key", "=", "input", "(", "''", ")", "\n", "if", "not", "args", ".", "v1", "and", "'.sens'", "in", "file_types", ":", "\n", "            ", "print", "(", "'Note: ScanNet v2 uses the same .sens files as ScanNet v1: Press \\'n\\' to exclude downloading .sens files for each scan'", ")", "\n", "key", "=", "input", "(", "''", ")", "\n", "if", "key", ".", "strip", "(", ")", ".", "lower", "(", ")", "==", "'n'", ":", "\n", "                ", "file_types", ".", "remove", "(", "'.sens'", ")", "\n", "", "", "download_release", "(", "release_scans", ",", "out_dir_scans", ",", "file_types", ",", "use_v1_sens", "=", "True", ")", "\n", "if", "not", "args", ".", "v1", ":", "\n", "            ", "download_label_map", "(", "args", ".", "out_dir", ")", "\n", "download_release", "(", "release_test_scans", ",", "out_dir_test_scans", ",", "file_types_test", ",", "use_v1_sens", "=", "False", ")", "\n", "download_file", "(", "os", ".", "path", ".", "join", "(", "BASE_URL", ",", "RELEASE_TASKS", ",", "TEST_FRAMES_FILE", "[", "0", "]", ")", ",", "os", ".", "path", ".", "join", "(", "out_dir_tasks", ",", "TEST_FRAMES_FILE", "[", "0", "]", ")", ")", "\n", "\n", "", "print", "(", "\"FAILED DOWNLOADING\"", ")", "\n", "print", "(", "FAILED_DOWNLOAD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_utils.represents_int": [[25, 32], ["int"], "function", ["None"], ["", "def", "represents_int", "(", "s", ")", ":", "\n", "    ", "''' if string s represents an int. '''", "\n", "try", ":", "\n", "        ", "int", "(", "s", ")", "\n", "return", "True", "\n", "", "except", "ValueError", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_utils.read_label_mapping": [[34, 44], ["os.path.isfile", "dict", "scannet_utils.represents_int", "open", "csv.DictReader", "int", "list", "int", "dict.keys", "dict.items"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_utils.represents_int"], ["", "", "def", "read_label_mapping", "(", "filename", ",", "label_from", "=", "'raw_category'", ",", "label_to", "=", "'nyu40id'", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "mapping", "=", "dict", "(", ")", "\n", "with", "open", "(", "filename", ")", "as", "csvfile", ":", "\n", "        ", "reader", "=", "csv", ".", "DictReader", "(", "csvfile", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "row", "in", "reader", ":", "\n", "            ", "mapping", "[", "row", "[", "label_from", "]", "]", "=", "int", "(", "row", "[", "label_to", "]", ")", "\n", "", "", "if", "represents_int", "(", "list", "(", "mapping", ".", "keys", "(", ")", ")", "[", "0", "]", ")", ":", "\n", "        ", "mapping", "=", "{", "int", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "mapping", ".", "items", "(", ")", "}", "\n", "", "return", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_utils.read_mesh_vertices": [[45, 57], ["os.path.isfile", "open", "PlyData.read", "np.zeros"], "function", ["None"], ["", "def", "read_mesh_vertices", "(", "filename", ")", ":", "\n", "    ", "\"\"\" read XYZ for each vertex.\n    \"\"\"", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "plydata", "=", "PlyData", ".", "read", "(", "f", ")", "\n", "num_verts", "=", "plydata", "[", "'vertex'", "]", ".", "count", "\n", "vertices", "=", "np", ".", "zeros", "(", "shape", "=", "[", "num_verts", ",", "3", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vertices", "[", ":", ",", "0", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'x'", "]", "\n", "vertices", "[", ":", ",", "1", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'y'", "]", "\n", "vertices", "[", ":", ",", "2", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'z'", "]", "\n", "", "return", "vertices", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_utils.read_mesh_vertices_rgb": [[58, 74], ["os.path.isfile", "open", "PlyData.read", "np.zeros"], "function", ["None"], ["", "def", "read_mesh_vertices_rgb", "(", "filename", ")", ":", "\n", "    ", "\"\"\" read XYZ RGB for each vertex.\n    Note: RGB values are in 0-255\n    \"\"\"", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "plydata", "=", "PlyData", ".", "read", "(", "f", ")", "\n", "num_verts", "=", "plydata", "[", "'vertex'", "]", ".", "count", "\n", "vertices", "=", "np", ".", "zeros", "(", "shape", "=", "[", "num_verts", ",", "6", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vertices", "[", ":", ",", "0", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'x'", "]", "\n", "vertices", "[", ":", ",", "1", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'y'", "]", "\n", "vertices", "[", ":", ",", "2", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'z'", "]", "\n", "vertices", "[", ":", ",", "3", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'red'", "]", "\n", "vertices", "[", ":", ",", "4", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'green'", "]", "\n", "vertices", "[", ":", ",", "5", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'blue'", "]", "\n", "", "return", "vertices", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_detection_dataset.ScannetDetectionDataset.__init__": [[33, 81], ["print", "os.path.join", "list", "os.path.join", "set", "os.path.join", "len", "print", "len", "print", "scannet_detection_dataset.ScannetDetectionDataset.get_labeled_samples", "open", "f.read().splitlines", "list", "print", "print", "exit", "os.path.basename", "os.listdir", "x.startswith", "len", "x.strip", "f.read", "open().readlines", "set", "set", "len", "open", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.get_labeled_samples"], ["    ", "def", "__init__", "(", "self", ",", "split_set", "=", "'train'", ",", "labeled_ratio", "=", "0.1", ",", "labeled_sample_list", "=", "None", ",", "num_points", "=", "20000", ",", "\n", "use_color", "=", "False", ",", "use_height", "=", "False", ",", "augment", "=", "False", ",", "remove_obj", "=", "False", ",", "test_transductive", "=", "False", ")", ":", "\n", "\n", "        ", "print", "(", "'--------- DetectionDataset '", ",", "split_set", ",", "' Initialization ---------'", ")", "\n", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'scannet_train_detection_data'", ")", "\n", "all_scan_names", "=", "list", "(", "set", "(", "[", "os", ".", "path", ".", "basename", "(", "x", ")", "[", "0", ":", "12", "]", "for", "x", "in", "os", ".", "listdir", "(", "self", ".", "data_path", ")", "if", "x", ".", "startswith", "(", "'scene'", ")", "]", ")", ")", "\n", "if", "split_set", "==", "'all'", ":", "\n", "            ", "self", ".", "scan_names", "=", "all_scan_names", "\n", "", "elif", "split_set", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "split_filenames", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data'", ",", "\n", "'scannetv2_{}.txt'", ".", "format", "(", "split_set", ")", ")", "\n", "with", "open", "(", "split_filenames", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "scan_names", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "# remove unavailiable scans", "\n", "", "num_scans", "=", "len", "(", "self", ".", "scan_names", ")", "\n", "self", ".", "scan_names", "=", "[", "sname", "for", "sname", "in", "self", ".", "scan_names", "if", "sname", "in", "all_scan_names", "]", "\n", "print", "(", "'\\tkept {} scans out of {}'", ".", "format", "(", "len", "(", "self", ".", "scan_names", ")", ",", "num_scans", ")", ")", "\n", "num_scans", "=", "len", "(", "self", ".", "scan_names", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'\\tillegal split name'", ")", "\n", "return", "\n", "\n", "", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "use_color", "=", "use_color", "\n", "self", ".", "use_height", "=", "use_height", "\n", "self", ".", "augment", "=", "augment", "\n", "self", ".", "remove_obj", "=", "remove_obj", "\n", "\n", "# added", "\n", "self", ".", "raw_data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data'", ")", "\n", "\n", "# construct labeled and unlabeled samples for training", "\n", "if", "split_set", "==", "'train'", ":", "\n", "            ", "if", "test_transductive", ":", "\n", "                ", "if", "labeled_sample_list", "is", "not", "None", ":", "\n", "                    ", "labeled_scan_names", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "labeled_sample_list", ")", ")", ".", "readlines", "(", ")", "]", "\n", "self", ".", "scan_names", "=", "list", "(", "set", "(", "self", ".", "scan_names", ")", "-", "set", "(", "labeled_scan_names", ")", ")", "\n", "print", "(", "'\\tGet {} unlabeled scans for transductive learning'", ".", "format", "(", "len", "(", "self", ".", "scan_names", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "'Unknown labeled sample list: %s. Exiting...'", "%", "labeled_sample_list", ")", "\n", "exit", "(", "-", "1", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "labeled_ratio", "=", "labeled_ratio", "\n", "self", ".", "labeled_sample_list", "=", "labeled_sample_list", "\n", "self", ".", "get_labeled_samples", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_detection_dataset.ScannetDetectionDataset.__len__": [[82, 84], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "scan_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_detection_dataset.ScannetDetectionDataset.__getitem__": [[85, 224], ["numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "pc_util.random_sampling", "numpy.zeros", "numpy.zeros", "numpy.unique", "numpy.tile", "numpy.concatenate.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.tile.astype", "numpy.zeros.astype", "numpy.array().astype", "numpy.array().astype", "numpy.zeros", "list", "numpy.zeros.astype", "numpy.percentile", "numpy.concatenate", "pc_util.rotz", "numpy.dot", "model_util_scannet.rotate_aligned_boxes", "numpy.expand_dims", "model_util_scannet.rotate_aligned_boxes.astype", "set", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "random.choice", "numpy.delete", "numpy.delete", "numpy.delete", "numpy.delete", "numpy.random.random", "numpy.random.random", "numpy.transpose", "numpy.tile", "numpy.where", "numpy.array", "numpy.array", "numpy.random.random", "list", "numpy.where", "numpy.expand_dims", "numpy.random.random", "numpy.where", "int", "range", "numpy.random.random", "x.min", "x.max"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.model_util_scannet.rotate_aligned_boxes"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Returns a dict with following keys:\n            point_clouds: (N,3+C)\n            center_label: (MAX_NUM_OBJ,3) for GT box center XYZ\n            sem_cls_label: (MAX_NUM_OBJ,) semantic class index\n            angle_class_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_HEADING_BIN-1\n            angle_residual_label: (MAX_NUM_OBJ,)\n            size_classe_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_SIZE_CLUSTER\n            size_residual_label: (MAX_NUM_OBJ,3)\n            box_label_mask: (MAX_NUM_OBJ) as 0/1 with 1 indicating a unique box\n            point_votes: (N,3) with votes XYZ\n            point_votes_mask: (N,) with 0/1 with 1 indicating the point is in one of the object's OBB.\n            scan_idx: int scan index in scan_names list\n            pcl_color: unused\n        \"\"\"", "\n", "\n", "scan_name", "=", "self", ".", "scan_names", "[", "idx", "]", "\n", "mesh_vertices", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_vert.npy'", ")", "\n", "instance_labels", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_ins_label.npy'", ")", "\n", "semantic_labels", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_sem_label.npy'", ")", "\n", "instance_bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "\n", "\n", "if", "self", ".", "remove_obj", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", "and", "instance_bboxes", ".", "shape", "[", "0", "]", ">=", "3", ":", "\n", "#random remove an object", "\n", "                ", "removed_box_ind", "=", "random", ".", "choice", "(", "list", "(", "range", "(", "0", ",", "instance_bboxes", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "# NOTE: this assumes obj_id is in 1,2,3,.,,,.NUM_INSTANCES", "\n", "removed_obj_ind", "=", "removed_box_ind", "+", "1", "\n", "removed_verts_inds", "=", "np", ".", "where", "(", "instance_labels", "==", "removed_obj_ind", ")", "[", "0", "]", "\n", "\n", "instance_bboxes", "=", "np", ".", "delete", "(", "instance_bboxes", ",", "removed_box_ind", ",", "axis", "=", "0", ")", "\n", "mesh_vertices", "=", "np", ".", "delete", "(", "mesh_vertices", ",", "removed_verts_inds", ",", "axis", "=", "0", ")", "\n", "instance_labels", "=", "np", ".", "delete", "(", "instance_labels", ",", "removed_verts_inds", ",", "axis", "=", "0", ")", "\n", "semantic_labels", "=", "np", ".", "delete", "(", "semantic_labels", ",", "removed_verts_inds", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "if", "not", "self", ".", "use_color", ":", "\n", "            ", "point_cloud", "=", "mesh_vertices", "[", ":", ",", "0", ":", "3", "]", "# do not use color for now", "\n", "pcl_color", "=", "mesh_vertices", "[", ":", ",", "3", ":", "6", "]", "\n", "", "else", ":", "\n", "            ", "point_cloud", "=", "mesh_vertices", "[", ":", ",", "0", ":", "6", "]", "\n", "point_cloud", "[", ":", ",", "3", ":", "]", "=", "(", "point_cloud", "[", ":", ",", "3", ":", "]", "-", "MEAN_COLOR_RGB", ")", "/", "256.0", "\n", "\n", "", "if", "self", ".", "use_height", ":", "\n", "            ", "floor_height", "=", "np", ".", "percentile", "(", "point_cloud", "[", ":", ",", "2", "]", ",", "0.99", ")", "\n", "height", "=", "point_cloud", "[", ":", ",", "2", "]", "-", "floor_height", "\n", "point_cloud", "=", "np", ".", "concatenate", "(", "[", "point_cloud", ",", "np", ".", "expand_dims", "(", "height", ",", "1", ")", "]", ",", "1", ")", "\n", "\n", "# ------------------------------- LABELS ------------------------------        ", "\n", "", "target_bboxes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "6", ")", ")", "\n", "target_bboxes_mask", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "angle_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "angle_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "target_bboxes_semcls", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "point_cloud", ",", "choices", "=", "pc_util", ".", "random_sampling", "(", "point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "True", ")", "\n", "\n", "instance_labels", "=", "instance_labels", "[", "choices", "]", "\n", "semantic_labels", "=", "semantic_labels", "[", "choices", "]", "\n", "pcl_color", "=", "pcl_color", "[", "choices", "]", "\n", "\n", "target_bboxes_mask", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "1", "\n", "target_bboxes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "instance_bboxes", "[", ":", ",", "0", ":", "6", "]", "\n", "\n", "# ------------------------------- DATA AUGMENTATION ------------------------------        ", "\n", "if", "self", ".", "augment", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the YZ plane", "\n", "                ", "point_cloud", "[", ":", ",", "0", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "0", "]", "\n", "target_bboxes", "[", ":", ",", "0", "]", "=", "-", "1", "*", "target_bboxes", "[", ":", ",", "0", "]", "\n", "\n", "", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the XZ plane", "\n", "                ", "point_cloud", "[", ":", ",", "1", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "1", "]", "\n", "target_bboxes", "[", ":", ",", "1", "]", "=", "-", "1", "*", "target_bboxes", "[", ":", ",", "1", "]", "\n", "\n", "# Rotation along up-axis/Z-axis", "\n", "", "rot_angle", "=", "(", "np", ".", "random", ".", "random", "(", ")", "*", "np", ".", "pi", "/", "18", ")", "-", "np", ".", "pi", "/", "36", "# -5 ~ +5 degree", "\n", "rot_mat", "=", "pc_util", ".", "rotz", "(", "rot_angle", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "target_bboxes", "=", "rotate_aligned_boxes", "(", "target_bboxes", ",", "rot_mat", ")", "\n", "\n", "scale_ratio", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.3", "+", "0.85", "\n", "scale_ratio", "=", "np", ".", "expand_dims", "(", "np", ".", "tile", "(", "scale_ratio", ",", "3", ")", ",", "0", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "target_bboxes", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "target_bboxes", "[", ":", ",", "3", ":", "6", "]", "*=", "scale_ratio", "\n", "if", "self", ".", "use_height", ":", "\n", "                ", "point_cloud", "[", ":", ",", "-", "1", "]", "*=", "scale_ratio", "[", "0", ",", "0", "]", "\n", "\n", "# compute votes *AFTER* augmentation", "\n", "# generate votes", "\n", "# Note: since there's no map between bbox instance labels and", "\n", "# pc instance_labels (it had been filtered ", "\n", "# in the data preparation step) we'll compute the instance bbox", "\n", "# from the points sharing the same instance label. ", "\n", "", "", "point_votes", "=", "np", ".", "zeros", "(", "[", "self", ".", "num_points", ",", "3", "]", ")", "\n", "point_votes_mask", "=", "np", ".", "zeros", "(", "self", ".", "num_points", ")", "\n", "for", "i_instance", "in", "np", ".", "unique", "(", "instance_labels", ")", ":", "\n", "# find all points belong to that instance", "\n", "            ", "ind", "=", "np", ".", "where", "(", "instance_labels", "==", "i_instance", ")", "[", "0", "]", "\n", "# find the semantic label            ", "\n", "if", "semantic_labels", "[", "ind", "[", "0", "]", "]", "in", "DC", ".", "nyu40ids", ":", "\n", "                ", "x", "=", "point_cloud", "[", "ind", ",", ":", "3", "]", "\n", "center", "=", "0.5", "*", "(", "x", ".", "min", "(", "0", ")", "+", "x", ".", "max", "(", "0", ")", ")", "\n", "point_votes", "[", "ind", ",", ":", "]", "=", "center", "-", "x", "\n", "point_votes_mask", "[", "ind", "]", "=", "1.0", "\n", "", "", "point_votes", "=", "np", ".", "tile", "(", "point_votes", ",", "(", "1", ",", "3", ")", ")", "# make 3 votes identical ", "\n", "\n", "class_ind", "=", "[", "np", ".", "where", "(", "DC", ".", "nyu40ids", "==", "x", ")", "[", "0", "]", "[", "0", "]", "for", "x", "in", "instance_bboxes", "[", ":", ",", "-", "1", "]", "]", "\n", "# NOTE: set size class as semantic class. Consider use size2class.", "\n", "size_classes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "class_ind", "\n", "size_residuals", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "target_bboxes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", "3", ":", "6", "]", "-", "DC", ".", "mean_size_arr", "[", "class_ind", ",", ":", "]", "\n", "\n", "target_bboxes_semcls", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "class_ind", "\n", "\n", "ret_dict", "=", "{", "}", "\n", "ret_dict", "[", "'point_clouds'", "]", "=", "point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'center_label'", "]", "=", "target_bboxes", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", "0", ":", "3", "]", "\n", "ret_dict", "[", "'heading_class_label'", "]", "=", "angle_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'heading_residual_label'", "]", "=", "angle_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'size_class_label'", "]", "=", "size_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'size_residual_label'", "]", "=", "size_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'sem_cls_label'", "]", "=", "target_bboxes_semcls", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'box_label_mask'", "]", "=", "target_bboxes_mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label'", "]", "=", "point_votes", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label_mask'", "]", "=", "point_votes_mask", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'scan_idx'", "]", "=", "np", ".", "array", "(", "idx", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'pcl_color'", "]", "=", "pcl_color", "\n", "ret_dict", "[", "'supervised_mask'", "]", "=", "np", ".", "array", "(", "1", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "scene_label", "=", "np", ".", "zeros", "(", "DC", ".", "num_class", ")", "\n", "unique_class_ind", "=", "list", "(", "set", "(", "class_ind", ")", ")", "\n", "for", "ind", "in", "unique_class_ind", ":", "\n", "            ", "scene_label", "[", "int", "(", "ind", ")", "]", "=", "1", "\n", "", "ret_dict", "[", "'scene_label'", "]", "=", "scene_label", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_detection_dataset.ScannetDetectionDataset.get_labeled_samples": [[226, 259], ["list", "print", "print", "len", "int", "numpy.zeros", "enumerate", "x.strip", "numpy.load", "numpy.random.choice", "numpy.sum", "numpy.where", "set", "set", "len", "len", "open().readlines", "list", "numpy.sum", "list", "os.path.join", "set", "open", "open", "numpy.array", "os.path.join", "f.write", "os.path.join"], "methods", ["None"], ["", "def", "get_labeled_samples", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "labeled_sample_list", "is", "not", "None", ":", "\n", "            ", "labeled_scan_names", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data'", ",", "self", ".", "labeled_sample_list", ")", ")", ".", "readlines", "(", ")", "]", "\n", "", "else", ":", "\n", "# randomly select scan names w.r.t labeled_ratio", "\n", "            ", "num_scans", "=", "len", "(", "self", ".", "scan_names", ")", "\n", "num_labeled_scans", "=", "int", "(", "self", ".", "labeled_ratio", "*", "num_scans", ")", "\n", "scan2label", "=", "np", ".", "zeros", "(", "(", "num_scans", ",", "DC", ".", "num_class", ")", ")", "\n", "for", "i", ",", "scan_name", "in", "enumerate", "(", "self", ".", "scan_names", ")", ":", "\n", "                ", "instance_bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "\n", "class_ind", "=", "[", "DC", ".", "nyu40id2class", "[", "x", "]", "for", "x", "in", "instance_bboxes", "[", ":", ",", "-", "1", "]", "]", "\n", "if", "class_ind", "!=", "[", "]", ":", "\n", "                    ", "unique_class_ind", "=", "list", "(", "set", "(", "class_ind", ")", ")", "\n", "", "else", ":", "continue", "\n", "for", "j", "in", "unique_class_ind", ":", "\n", "                    ", "scan2label", "[", "i", ",", "j", "]", "=", "1", "\n", "\n", "", "", "while", "True", ":", "\n", "                ", "choices", "=", "np", ".", "random", ".", "choice", "(", "num_scans", ",", "num_labeled_scans", ",", "replace", "=", "False", ")", "\n", "class_distr", "=", "np", ".", "sum", "(", "scan2label", "[", "choices", "]", ",", "axis", "=", "0", ")", "\n", "class_mask", "=", "np", ".", "where", "(", "class_distr", ">", "0", ",", "1", ",", "0", ")", "\n", "if", "np", ".", "sum", "(", "class_mask", ")", "==", "DC", ".", "num_class", ":", "\n", "                    ", "labeled_scan_names", "=", "list", "(", "np", ".", "array", "(", "self", ".", "scan_names", ")", "[", "choices", "]", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data/scannetv2_train_{}.txt'", ".", "format", "(", "self", ".", "labeled_ratio", ")", ")", ",", "'w'", ")", "as", "f", ":", "\n", "                        ", "for", "scan_name", "in", "labeled_scan_names", ":", "\n", "                            ", "f", ".", "write", "(", "scan_name", "+", "'\\n'", ")", "\n", "", "", "break", "\n", "\n", "", "", "", "unlabeled_scan_names", "=", "list", "(", "set", "(", "self", ".", "scan_names", ")", "-", "set", "(", "labeled_scan_names", ")", ")", "\n", "print", "(", "'\\tSelected {} labeled scans, remained {} unlabeled scans'", ".", "format", "(", "len", "(", "labeled_scan_names", ")", ",", "len", "(", "unlabeled_scan_names", ")", ")", ")", "\n", "self", ".", "scan_names", "=", "labeled_scan_names", "\n", "print", "(", "'first 3 scans'", ",", "self", ".", "scan_names", "[", ":", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_detection_dataset.viz_votes": [[262, 271], ["pc_util.write_ply", "pc_util.write_ply"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply"], ["", "", "def", "viz_votes", "(", "pc", ",", "point_votes", ",", "point_votes_mask", ",", "name", "=", "''", ")", ":", "\n", "    ", "\"\"\" Visualize point votes and point votes mask labels\n    pc: (N,3 or 6), point_votes: (N,9), point_votes_mask: (N,)\n    \"\"\"", "\n", "inds", "=", "(", "point_votes_mask", "==", "1", ")", "\n", "pc_obj", "=", "pc", "[", "inds", ",", "0", ":", "3", "]", "\n", "pc_obj_voted1", "=", "pc_obj", "+", "point_votes", "[", "inds", ",", "0", ":", "3", "]", "\n", "pc_util", ".", "write_ply", "(", "pc_obj", ",", "'pc_obj{}.ply'", ".", "format", "(", "name", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_obj_voted1", ",", "'pc_obj_voted1{}.ply'", ".", "format", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.scannet.scannet_detection_dataset.viz_obb": [[272, 297], ["range", "pc_util.write_oriented_bbox", "pc_util.write_ply", "numpy.zeros", "print", "oriented_boxes.append"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply"], ["", "def", "viz_obb", "(", "pc", ",", "label", ",", "mask", ",", "angle_classes", ",", "angle_residuals", ",", "\n", "size_classes", ",", "size_residuals", ",", "name", "=", "''", ")", ":", "\n", "    ", "\"\"\" Visualize oriented bounding box ground truth\n    pc: (N,3)\n    label: (K,3)  K == MAX_NUM_OBJ\n    mask: (K,)\n    angle_classes: (K,)\n    angle_residuals: (K,)\n    size_classes: (K,)\n    size_residuals: (K,3)\n    \"\"\"", "\n", "oriented_boxes", "=", "[", "]", "\n", "K", "=", "label", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "        ", "if", "mask", "[", "i", "]", "==", "0", ":", "continue", "\n", "obb", "=", "np", ".", "zeros", "(", "7", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "label", "[", "i", ",", "0", ":", "3", "]", "\n", "heading_angle", "=", "0", "# hard code to 0", "\n", "box_size", "=", "DC", ".", "mean_size_arr", "[", "size_classes", "[", "i", "]", ",", ":", "]", "+", "size_residuals", "[", "i", ",", ":", "]", "\n", "obb", "[", "3", ":", "6", "]", "=", "box_size", "\n", "obb", "[", "6", "]", "=", "-", "1", "*", "heading_angle", "\n", "print", "(", "obb", ")", "\n", "oriented_boxes", ".", "append", "(", "obb", ")", "\n", "", "pc_util", ".", "write_oriented_bbox", "(", "oriented_boxes", ",", "'gt_obbs{}.ply'", ".", "format", "(", "name", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "label", "[", "mask", "==", "1", ",", ":", "]", ",", "'gt_centroids{}.ply'", ".", "format", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.__init__": [[33, 54], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "print", "exit"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "root_dir", ",", "split", "=", "'training'", ",", "use_v1", "=", "False", ")", ":", "\n", "        ", "self", ".", "root_dir", "=", "root_dir", "\n", "self", ".", "split", "=", "split", "\n", "assert", "(", "self", ".", "split", "==", "'training'", ")", "\n", "self", ".", "split_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ")", "\n", "\n", "if", "split", "==", "'training'", ":", "\n", "            ", "self", ".", "num_samples", "=", "10335", "\n", "", "elif", "split", "==", "'testing'", ":", "\n", "            ", "self", ".", "num_samples", "=", "2860", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown split: %s'", "%", "(", "split", ")", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "self", ".", "image_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'image'", ")", "\n", "self", ".", "calib_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'calib'", ")", "\n", "self", ".", "depth_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'depth'", ")", "\n", "if", "use_v1", ":", "\n", "            ", "self", ".", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'label_v1'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'label'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.__len__": [[55, 57], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_image": [[58, 61], ["os.path.join", "sunrgbd_utils.load_image"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.load_image"], ["", "def", "get_image", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "'%06d.jpg'", "%", "(", "idx", ")", ")", "\n", "return", "sunrgbd_utils", ".", "load_image", "(", "img_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_depth": [[62, 65], ["os.path.join", "sunrgbd_utils.load_depth_points_mat"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.load_depth_points_mat"], ["", "def", "get_depth", "(", "self", ",", "idx", ")", ":", "\n", "        ", "depth_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "depth_dir", ",", "'%06d.mat'", "%", "(", "idx", ")", ")", "\n", "return", "sunrgbd_utils", ".", "load_depth_points_mat", "(", "depth_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_calibration": [[66, 69], ["os.path.join", "sunrgbd_utils.SUNRGBD_Calibration"], "methods", ["None"], ["", "def", "get_calibration", "(", "self", ",", "idx", ")", ":", "\n", "        ", "calib_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "calib_dir", ",", "'%06d.txt'", "%", "(", "idx", ")", ")", "\n", "return", "sunrgbd_utils", ".", "SUNRGBD_Calibration", "(", "calib_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_label_objects": [[70, 73], ["os.path.join", "sunrgbd_utils.read_sunrgbd_label"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.read_sunrgbd_label"], ["", "def", "get_label_objects", "(", "self", ",", "idx", ")", ":", "\n", "        ", "label_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_dir", ",", "'%06d.txt'", "%", "(", "idx", ")", ")", "\n", "return", "sunrgbd_utils", ".", "read_sunrgbd_label", "(", "label_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.data_viz": [[74, 170], ["os.path.join", "sunrgbd_data.sunrgbd_object", "numpy.array", "numpy.random.seed", "numpy.random.shuffle", "range", "range", "len", "print", "sunrgbd_data.sunrgbd_object.get_depth", "print", "sunrgbd_data.sunrgbd_object.get_calibration", "sunrgbd.get_calibration.project_upright_depth_to_image", "print", "print", "plt.cm.get_cmap", "sunrgbd_data.sunrgbd_object.get_image", "cv2.cvtColor", "range", "PIL.Image.fromarray().save", "sunrgbd_data.sunrgbd_object.get_label_objects", "print", "sunrgbd_data.sunrgbd_object.get_image", "cv2.cvtColor", "enumerate", "PIL.Image.fromarray().save", "numpy.concatenate", "numpy.concatenate", "print", "print", "pc_util.write_ply", "pc_util.write_ply", "print", "print", "print", "input", "cv2.circle", "os.path.exists", "os.mkdir", "os.path.join", "cv2.rectangle", "cv2.putText", "os.path.join", "pc_util.random_sampling", "pc_util.write_ply_rgb", "numpy.zeros", "print", "np.vstack.append", "len", "numpy.vstack", "pc_util.write_oriented_bbox", "print", "sunrgbd_utils.compute_box_3d", "sunrgbd_utils.compute_orientation_3d", "print", "box3d.append", "ori3d.append", "os.path.join", "os.path.join", "len", "numpy.array", "PIL.Image.fromarray", "PIL.Image.fromarray", "os.path.join", "numpy.array", "tuple", "os.path.join", "int", "int", "tuple", "int", "int", "int", "int", "max", "max", "plt.cm.get_cmap.", "int", "numpy.round", "numpy.round", "int", "int", "range"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_depth", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_calibration", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_image", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_image", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_label_objects", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_image", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply_rgb", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.compute_box_3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.compute_orientation_3d"], ["", "", "def", "data_viz", "(", "data_dir", ",", "dump_dir", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'data_viz_dump'", ")", ")", ":", "\n", "    ", "''' Examine and visualize SUN RGB-D data. '''", "\n", "sunrgbd", "=", "sunrgbd_object", "(", "data_dir", ")", "\n", "idxs", "=", "np", ".", "array", "(", "range", "(", "1", ",", "len", "(", "sunrgbd", ")", "+", "1", ")", ")", "\n", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "sunrgbd", ")", ")", ":", "\n", "        ", "data_idx", "=", "idxs", "[", "idx", "]", "\n", "print", "(", "'-'", "*", "10", ",", "'data index: '", ",", "data_idx", ")", "\n", "pc", "=", "sunrgbd", ".", "get_depth", "(", "data_idx", ")", "\n", "print", "(", "'Point cloud shape:'", ",", "pc", ".", "shape", ")", "\n", "\n", "# Project points to image", "\n", "calib", "=", "sunrgbd", ".", "get_calibration", "(", "data_idx", ")", "\n", "uv", ",", "d", "=", "calib", ".", "project_upright_depth_to_image", "(", "pc", "[", ":", ",", "0", ":", "3", "]", ")", "\n", "print", "(", "'Point UV:'", ",", "uv", ")", "\n", "print", "(", "'Point depth:'", ",", "d", ")", "\n", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "cmap", "=", "plt", ".", "cm", ".", "get_cmap", "(", "'hsv'", ",", "256", ")", "\n", "cmap", "=", "np", ".", "array", "(", "[", "cmap", "(", "i", ")", "for", "i", "in", "range", "(", "256", ")", "]", ")", "[", ":", ",", ":", "3", "]", "*", "255", "\n", "\n", "img", "=", "sunrgbd", ".", "get_image", "(", "data_idx", ")", "\n", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "for", "i", "in", "range", "(", "uv", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "depth", "=", "d", "[", "i", "]", "\n", "color", "=", "cmap", "[", "int", "(", "120.0", "/", "depth", ")", ",", ":", "]", "\n", "cv2", ".", "circle", "(", "img", ",", "(", "int", "(", "np", ".", "round", "(", "uv", "[", "i", ",", "0", "]", ")", ")", ",", "int", "(", "np", ".", "round", "(", "uv", "[", "i", ",", "1", "]", ")", ")", ")", ",", "2", ",", "\n", "color", "=", "tuple", "(", "color", ")", ",", "thickness", "=", "-", "1", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "dump_dir", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "dump_dir", ")", "\n", "", "Image", ".", "fromarray", "(", "img", ")", ".", "save", "(", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'img_depth.jpg'", ")", ")", "\n", "\n", "# Load box labels", "\n", "objects", "=", "sunrgbd", ".", "get_label_objects", "(", "data_idx", ")", "\n", "print", "(", "'Objects:'", ",", "objects", ")", "\n", "\n", "# Draw 2D boxes on image", "\n", "img", "=", "sunrgbd", ".", "get_image", "(", "data_idx", ")", "\n", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "for", "i", ",", "obj", "in", "enumerate", "(", "objects", ")", ":", "\n", "            ", "cv2", ".", "rectangle", "(", "img", ",", "(", "int", "(", "obj", ".", "xmin", ")", ",", "int", "(", "obj", ".", "ymin", ")", ")", ",", "\n", "(", "int", "(", "obj", ".", "xmax", ")", ",", "int", "(", "obj", ".", "ymax", ")", ")", ",", "(", "0", ",", "255", ",", "0", ")", ",", "2", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "'%d %s'", "%", "(", "i", ",", "obj", ".", "classname", ")", ",", "(", "max", "(", "int", "(", "obj", ".", "xmin", ")", ",", "15", ")", ",", "\n", "max", "(", "int", "(", "obj", ".", "ymin", ")", ",", "15", ")", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "0.8", ",", "\n", "(", "255", ",", "0", ",", "0", ")", ",", "2", ")", "\n", "", "Image", ".", "fromarray", "(", "img", ")", ".", "save", "(", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'img_box2d.jpg'", ")", ")", "\n", "\n", "# Dump OBJ files for the colored point cloud ", "\n", "for", "num_point", "in", "[", "10000", ",", "20000", ",", "40000", ",", "80000", "]", ":", "\n", "            ", "sampled_pcrgb", "=", "pc_util", ".", "random_sampling", "(", "pc", ",", "num_point", ")", "\n", "pc_util", ".", "write_ply_rgb", "(", "sampled_pcrgb", "[", ":", ",", "0", ":", "3", "]", ",", "\n", "(", "sampled_pcrgb", "[", ":", ",", "3", ":", "]", "*", "256", ")", ".", "astype", "(", "np", ".", "int8", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'pcrgb_%dk.obj'", "%", "(", "num_point", "//", "1000", ")", ")", ")", "\n", "# Dump OBJ files for 3D bounding boxes", "\n", "# l,w,h correspond to dx,dy,dz", "\n", "# heading angle is from +X rotating towards -Y", "\n", "# (+X is degree, -Y is 90 degrees)", "\n", "", "oriented_boxes", "=", "[", "]", "\n", "for", "obj", "in", "objects", ":", "\n", "            ", "obb", "=", "np", ".", "zeros", "(", "(", "7", ")", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "obj", ".", "centroid", "\n", "# Some conversion to map with default setting of w,l,h", "\n", "# and angle in box dumping", "\n", "obb", "[", "3", ":", "6", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", "]", ")", "*", "2", "\n", "obb", "[", "6", "]", "=", "-", "1", "*", "obj", ".", "heading_angle", "\n", "print", "(", "'Object cls, heading, l, w, h:'", ",", "obj", ".", "classname", ",", "obj", ".", "heading_angle", ",", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", ")", "\n", "oriented_boxes", ".", "append", "(", "obb", ")", "\n", "", "if", "len", "(", "oriented_boxes", ")", ">", "0", ":", "\n", "            ", "oriented_boxes", "=", "np", ".", "vstack", "(", "tuple", "(", "oriented_boxes", ")", ")", "\n", "pc_util", ".", "write_oriented_bbox", "(", "oriented_boxes", ",", "\n", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'obbs.ply'", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'-'", "*", "30", ")", "\n", "continue", "\n", "\n", "# Draw 3D boxes on depth points", "\n", "", "box3d", "=", "[", "]", "\n", "ori3d", "=", "[", "]", "\n", "for", "obj", "in", "objects", ":", "\n", "            ", "corners_3d_image", ",", "corners_3d", "=", "sunrgbd_utils", ".", "compute_box_3d", "(", "obj", ",", "calib", ")", "\n", "ori_3d_image", ",", "ori_3d", "=", "sunrgbd_utils", ".", "compute_orientation_3d", "(", "obj", ",", "calib", ")", "\n", "print", "(", "'Corners 3D: '", ",", "corners_3d", ")", "\n", "box3d", ".", "append", "(", "corners_3d", ")", "\n", "ori3d", ".", "append", "(", "ori_3d", ")", "\n", "", "pc_box3d", "=", "np", ".", "concatenate", "(", "box3d", ",", "0", ")", "\n", "pc_ori3d", "=", "np", ".", "concatenate", "(", "ori3d", ",", "0", ")", "\n", "print", "(", "pc_box3d", ".", "shape", ")", "\n", "print", "(", "pc_ori3d", ".", "shape", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_box3d", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'box3d_corners.ply'", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_ori3d", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'box3d_ori.ply'", ")", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'Point clouds and bounding boxes saved to PLY files under %s'", "%", "(", "dump_dir", ")", ")", "\n", "print", "(", "'Type anything to continue to the next sample...'", ")", "\n", "input", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.extract_sunrgbd_data": [[171, 262], ["sunrgbd_data.sunrgbd_object", "int", "os.path.exists", "os.mkdir", "print", "sunrgbd_data.sunrgbd_object.get_label_objects", "sunrgbd_data.sunrgbd_object.get_depth", "pc_util.random_sampling", "numpy.savez_compressed", "numpy.save", "line.rstrip", "open", "numpy.zeros", "numpy.array", "object_list.append", "len", "numpy.zeros", "numpy.vstack", "os.path.join", "os.path.join", "numpy.zeros", "numpy.zeros().astype", "numpy.arange", "numpy.savez_compressed", "os.path.join", "len", "len", "numpy.zeros", "sunrgbd_utils.my_compute_box_3d", "sunrgbd_utils.extract_pc_in_box3d", "range", "numpy.minimum", "numpy.array", "numpy.expand_dims", "len", "print", "int", "int"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_label_objects", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_depth", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.my_compute_box_3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.extract_pc_in_box3d"], ["", "", "def", "extract_sunrgbd_data", "(", "idx_filename", ",", "split", ",", "output_folder", ",", "num_point", "=", "20000", ",", "\n", "type_whitelist", "=", "DEFAULT_TYPE_WHITELIST", ",", "\n", "save_votes", "=", "False", ",", "use_v1", "=", "False", ",", "skip_empty_scene", "=", "True", ")", ":", "\n", "    ", "\"\"\" Extract scene point clouds and \n    bounding boxes (centroids, box sizes, heading angles, semantic classes).\n    Dumped point clouds and boxes are in upright depth coord.\n\n    Args:\n        idx_filename: a TXT file where each line is an int number (index)\n        split: training or testing\n        save_votes: whether to compute and save Ground truth votes.\n        use_v1: use the SUN RGB-D V1 data\n        skip_empty_scene: if True, skip scenes that contain no object (no objet in whitelist)\n\n    Dumps:\n        <id>_pc.npz of (N,6) where N is for number of subsampled points and 6 is\n            for XYZ and RGB (in 0~1) in upright depth coord\n        <id>_bbox.npy of (K,8) where K is the number of objects, 8 is for\n            centroids (cx,cy,cz), dimension (l,w,h), heanding_angle and semantic_class\n        <id>_votes.npz of (N,10) with 0/1 indicating whether the point belongs to an object,\n            then three sets of GT votes for up to three objects. If the point is only in one\n            object's OBB, then the three GT votes are the same.\n    \"\"\"", "\n", "dataset", "=", "sunrgbd_object", "(", "'./sunrgbd_trainval'", ",", "split", ",", "use_v1", "=", "use_v1", ")", "\n", "data_idx_list", "=", "[", "int", "(", "line", ".", "rstrip", "(", ")", ")", "for", "line", "in", "open", "(", "idx_filename", ")", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "output_folder", ")", "\n", "\n", "", "for", "data_idx", "in", "data_idx_list", ":", "\n", "        ", "print", "(", "'------------- '", ",", "data_idx", ")", "\n", "objects", "=", "dataset", ".", "get_label_objects", "(", "data_idx", ")", "\n", "\n", "# Skip scenes with 0 object", "\n", "if", "skip_empty_scene", "and", "(", "len", "(", "objects", ")", "==", "0", "or", "len", "(", "[", "obj", "for", "obj", "in", "objects", "if", "obj", ".", "classname", "in", "type_whitelist", "]", ")", "==", "0", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "object_list", "=", "[", "]", "\n", "for", "obj", "in", "objects", ":", "\n", "            ", "if", "obj", ".", "classname", "not", "in", "type_whitelist", ":", "continue", "\n", "obb", "=", "np", ".", "zeros", "(", "(", "8", ")", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "obj", ".", "centroid", "\n", "# Note that compared with that in data_viz, we do not time 2 to l,w.h", "\n", "# neither do we flip the heading angle", "\n", "obb", "[", "3", ":", "6", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", "]", ")", "\n", "obb", "[", "6", "]", "=", "obj", ".", "heading_angle", "\n", "obb", "[", "7", "]", "=", "sunrgbd_utils", ".", "type2class", "[", "obj", ".", "classname", "]", "\n", "object_list", ".", "append", "(", "obb", ")", "\n", "", "if", "len", "(", "object_list", ")", "==", "0", ":", "\n", "            ", "obbs", "=", "np", ".", "zeros", "(", "(", "0", ",", "8", ")", ")", "\n", "", "else", ":", "\n", "            ", "obbs", "=", "np", ".", "vstack", "(", "object_list", ")", "# (K,8)", "\n", "\n", "", "pc_upright_depth", "=", "dataset", ".", "get_depth", "(", "data_idx", ")", "\n", "pc_upright_depth_subsampled", "=", "pc_util", ".", "random_sampling", "(", "pc_upright_depth", ",", "num_point", ")", "\n", "\n", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'%06d_pc.npz'", "%", "(", "data_idx", ")", ")", ",", "\n", "pc", "=", "pc_upright_depth_subsampled", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'%06d_bbox.npy'", "%", "(", "data_idx", ")", ")", ",", "obbs", ")", "\n", "\n", "if", "save_votes", ":", "\n", "            ", "N", "=", "pc_upright_depth_subsampled", ".", "shape", "[", "0", "]", "\n", "point_votes", "=", "np", ".", "zeros", "(", "(", "N", ",", "10", ")", ")", "# 3 votes and 1 vote mask ", "\n", "point_vote_idx", "=", "np", ".", "zeros", "(", "(", "N", ")", ")", ".", "astype", "(", "np", ".", "int32", ")", "# in the range of [0,2]", "\n", "indices", "=", "np", ".", "arange", "(", "N", ")", "\n", "for", "obj", "in", "objects", ":", "\n", "                ", "if", "obj", ".", "classname", "not", "in", "type_whitelist", ":", "continue", "\n", "try", ":", "\n", "# Find all points in this object's OBB", "\n", "                    ", "box3d_pts_3d", "=", "sunrgbd_utils", ".", "my_compute_box_3d", "(", "obj", ".", "centroid", ",", "\n", "np", ".", "array", "(", "[", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", "]", ")", ",", "obj", ".", "heading_angle", ")", "\n", "pc_in_box3d", ",", "inds", "=", "sunrgbd_utils", ".", "extract_pc_in_box3d", "(", "pc_upright_depth_subsampled", ",", "box3d_pts_3d", ")", "\n", "# Assign first dimension to indicate it is in an object box", "\n", "point_votes", "[", "inds", ",", "0", "]", "=", "1", "\n", "# Add the votes (all 0 if the point is not in any object's OBB)", "\n", "votes", "=", "np", ".", "expand_dims", "(", "obj", ".", "centroid", ",", "0", ")", "-", "pc_in_box3d", "[", ":", ",", "0", ":", "3", "]", "\n", "sparse_inds", "=", "indices", "[", "inds", "]", "# turn dense True,False inds to sparse number-wise inds", "\n", "for", "i", "in", "range", "(", "len", "(", "sparse_inds", ")", ")", ":", "\n", "                        ", "j", "=", "sparse_inds", "[", "i", "]", "\n", "point_votes", "[", "j", ",", "int", "(", "point_vote_idx", "[", "j", "]", "*", "3", "+", "1", ")", ":", "int", "(", "(", "point_vote_idx", "[", "j", "]", "+", "1", ")", "*", "3", "+", "1", ")", "]", "=", "votes", "[", "i", ",", ":", "]", "\n", "# Populate votes with the fisrt vote", "\n", "if", "point_vote_idx", "[", "j", "]", "==", "0", ":", "\n", "                            ", "point_votes", "[", "j", ",", "4", ":", "7", "]", "=", "votes", "[", "i", ",", ":", "]", "\n", "point_votes", "[", "j", ",", "7", ":", "10", "]", "=", "votes", "[", "i", ",", ":", "]", "\n", "", "", "point_vote_idx", "[", "inds", "]", "=", "np", ".", "minimum", "(", "2", ",", "point_vote_idx", "[", "inds", "]", "+", "1", ")", "\n", "", "except", ":", "\n", "                    ", "print", "(", "'ERROR ----'", ",", "data_idx", ",", "obj", ".", "classname", ")", "\n", "", "", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'%06d_votes.npz'", "%", "(", "data_idx", ")", ")", ",", "\n", "point_votes", "=", "point_votes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.get_box3d_dim_statistics": [[264, 305], ["sunrgbd_data.sunrgbd_object", "numpy.vstack", "sorted", "int", "print", "sunrgbd_data.sunrgbd_object.get_calibration", "sunrgbd_data.sunrgbd_object.get_label_objects", "range", "set", "range", "numpy.median", "print", "line.rstrip", "open", "len", "dimension_list.append", "type_list.append", "ry_list.append", "open", "pickle.dump", "pickle.dump", "pickle.dump", "len", "numpy.arctan2", "numpy.array", "box3d_list.append"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_calibration", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_data.sunrgbd_object.get_label_objects"], ["", "", "", "def", "get_box3d_dim_statistics", "(", "idx_filename", ",", "\n", "type_whitelist", "=", "DEFAULT_TYPE_WHITELIST", ",", "\n", "save_path", "=", "None", ")", ":", "\n", "    ", "\"\"\" Collect 3D bounding box statistics.\n    Used for computing mean box sizes. \"\"\"", "\n", "dataset", "=", "sunrgbd_object", "(", "'./sunrgbd_trainval'", ")", "\n", "dimension_list", "=", "[", "]", "\n", "type_list", "=", "[", "]", "\n", "ry_list", "=", "[", "]", "\n", "data_idx_list", "=", "[", "int", "(", "line", ".", "rstrip", "(", ")", ")", "for", "line", "in", "open", "(", "idx_filename", ")", "]", "\n", "for", "data_idx", "in", "data_idx_list", ":", "\n", "        ", "print", "(", "'------------- '", ",", "data_idx", ")", "\n", "calib", "=", "dataset", ".", "get_calibration", "(", "data_idx", ")", "# 3 by 4 matrix", "\n", "objects", "=", "dataset", ".", "get_label_objects", "(", "data_idx", ")", "\n", "for", "obj_idx", "in", "range", "(", "len", "(", "objects", ")", ")", ":", "\n", "            ", "obj", "=", "objects", "[", "obj_idx", "]", "\n", "if", "obj", ".", "classname", "not", "in", "type_whitelist", ":", "continue", "\n", "heading_angle", "=", "-", "1", "*", "np", ".", "arctan2", "(", "obj", ".", "orientation", "[", "1", "]", ",", "obj", ".", "orientation", "[", "0", "]", ")", "\n", "dimension_list", ".", "append", "(", "np", ".", "array", "(", "[", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", "]", ")", ")", "\n", "type_list", ".", "append", "(", "obj", ".", "classname", ")", "\n", "ry_list", ".", "append", "(", "heading_angle", ")", "\n", "\n", "", "", "import", "cPickle", "as", "pickle", "\n", "if", "save_path", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "save_path", ",", "'wb'", ")", "as", "fp", ":", "\n", "            ", "pickle", ".", "dump", "(", "type_list", ",", "fp", ")", "\n", "pickle", ".", "dump", "(", "dimension_list", ",", "fp", ")", "\n", "pickle", ".", "dump", "(", "ry_list", ",", "fp", ")", "\n", "\n", "# Get average box size for different catgories", "\n", "", "", "box3d_pts", "=", "np", ".", "vstack", "(", "dimension_list", ")", "\n", "for", "class_type", "in", "sorted", "(", "set", "(", "type_list", ")", ")", ":", "\n", "        ", "cnt", "=", "0", "\n", "box3d_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dimension_list", ")", ")", ":", "\n", "            ", "if", "type_list", "[", "i", "]", "==", "class_type", ":", "\n", "                ", "cnt", "+=", "1", "\n", "box3d_list", ".", "append", "(", "dimension_list", "[", "i", "]", ")", "\n", "", "", "median_box3d", "=", "np", ".", "median", "(", "box3d_list", ",", "0", ")", "\n", "print", "(", "\"\\'%s\\': np.array([%f,%f,%f]),\"", "%", "(", "class_type", ",", "median_box3d", "[", "0", "]", "*", "2", ",", "median_box3d", "[", "1", "]", "*", "2", ",", "median_box3d", "[", "2", "]", "*", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.__init__": [[20, 44], ["numpy.zeros", "range", "torch.from_numpy().cuda().float", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "torch.from_numpy().cuda", "torch.from_numpy"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "10", "\n", "self", ".", "num_heading_bin", "=", "12", "\n", "self", ".", "num_size_cluster", "=", "10", "\n", "\n", "self", ".", "type2class", "=", "{", "'bed'", ":", "0", ",", "'table'", ":", "1", ",", "'sofa'", ":", "2", ",", "'chair'", ":", "3", ",", "'toilet'", ":", "4", ",", "'desk'", ":", "5", ",", "'dresser'", ":", "6", ",", "'night_stand'", ":", "7", ",", "'bookshelf'", ":", "8", ",", "'bathtub'", ":", "9", "}", "\n", "self", ".", "class2type", "=", "{", "self", ".", "type2class", "[", "t", "]", ":", "t", "for", "t", "in", "self", ".", "type2class", "}", "\n", "self", ".", "type2onehotclass", "=", "{", "'bed'", ":", "0", ",", "'table'", ":", "1", ",", "'sofa'", ":", "2", ",", "'chair'", ":", "3", ",", "'toilet'", ":", "4", ",", "'desk'", ":", "5", ",", "'dresser'", ":", "6", ",", "'night_stand'", ":", "7", ",", "'bookshelf'", ":", "8", ",", "'bathtub'", ":", "9", "}", "\n", "self", ".", "type_mean_size", "=", "{", "'bathtub'", ":", "np", ".", "array", "(", "[", "0.765840", ",", "1.398258", ",", "0.472728", "]", ")", ",", "\n", "'bed'", ":", "np", ".", "array", "(", "[", "2.114256", ",", "1.620300", ",", "0.927272", "]", ")", ",", "\n", "'bookshelf'", ":", "np", ".", "array", "(", "[", "0.404671", ",", "1.071108", ",", "1.688889", "]", ")", ",", "\n", "'chair'", ":", "np", ".", "array", "(", "[", "0.591958", ",", "0.552978", ",", "0.827272", "]", ")", ",", "\n", "'desk'", ":", "np", ".", "array", "(", "[", "0.695190", ",", "1.346299", ",", "0.736364", "]", ")", ",", "\n", "'dresser'", ":", "np", ".", "array", "(", "[", "0.528526", ",", "1.002642", ",", "1.172878", "]", ")", ",", "\n", "'night_stand'", ":", "np", ".", "array", "(", "[", "0.500618", ",", "0.632163", ",", "0.683424", "]", ")", ",", "\n", "'sofa'", ":", "np", ".", "array", "(", "[", "0.923508", ",", "1.867419", ",", "0.845495", "]", ")", ",", "\n", "'table'", ":", "np", ".", "array", "(", "[", "0.791118", ",", "1.279516", ",", "0.718182", "]", ")", ",", "\n", "'toilet'", ":", "np", ".", "array", "(", "[", "0.699104", ",", "0.454178", ",", "0.756250", "]", ")", "}", "\n", "\n", "self", ".", "mean_size_arr", "=", "np", ".", "zeros", "(", "(", "self", ".", "num_size_cluster", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_size_cluster", ")", ":", "\n", "            ", "self", ".", "mean_size_arr", "[", "i", ",", ":", "]", "=", "self", ".", "type_mean_size", "[", "self", ".", "class2type", "[", "i", "]", "]", "\n", "\n", "", "self", ".", "mean_size_arr_gpu", "=", "torch", ".", "from_numpy", "(", "self", ".", "mean_size_arr", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "# self.pi_gpu = torch.FloatTensor([np.pi]).cuda()", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size_gpu": [[46, 49], ["None"], "methods", ["None"], ["", "def", "class2size_gpu", "(", "self", ",", "pred_cls", ",", "residual", ")", ":", "\n", "        ", "''' Inverse function to size2class '''", "\n", "return", "self", ".", "mean_size_arr_gpu", "[", "pred_cls", ",", ":", "]", "+", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle_gpu": [[50, 61], ["float"], "methods", ["None"], ["", "def", "class2angle_gpu", "(", "self", ",", "pred_cls", ",", "residual", ",", "to_label_format", "=", "True", ")", ":", "\n", "        ", "''' Inverse function to angle2class '''", "\n", "num_class", "=", "self", ".", "num_heading_bin", "\n", "angle_per_class", "=", "2", "*", "np", ".", "pi", "/", "float", "(", "num_class", ")", "\n", "angle_center", "=", "pred_cls", "*", "angle_per_class", "\n", "angle", "=", "angle_center", "+", "residual", "\n", "# if to_label_format and angle>np.pi:", "\n", "#     angle = angle - 2*np.pi", "\n", "if", "to_label_format", ":", "\n", "            ", "angle", "=", "angle", "-", "2", "*", "np", ".", "pi", "*", "(", "angle", ">", "np", ".", "pi", ")", "\n", "", "return", "angle", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.angle2class_gpu": [[62, 79], ["float"], "methods", ["None"], ["", "def", "angle2class_gpu", "(", "self", ",", "angle", ")", ":", "\n", "        ", "''' Convert continuous angle to discrete class\n            [optinal] also small regression number from\n            class center angle to current angle.\n\n            angle is from 0-2pi (or -pi~pi), class center at 0, 1*(2pi/N), 2*(2pi/N) ...  (N-1)*(2pi/N)\n            return is class of int32 of 0,1,...,N-1 and a number such that\n                class*(2pi/N) + number = angle\n        '''", "\n", "num_class", "=", "self", ".", "num_heading_bin", "\n", "angle", "=", "angle", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "# assert (angle >= 0 and angle <= 2 * np.pi)", "\n", "angle_per_class", "=", "2", "*", "np", ".", "pi", "/", "float", "(", "num_class", ")", "\n", "shifted_angle", "=", "(", "angle", "+", "angle_per_class", "/", "2", ")", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "class_id", "=", "(", "shifted_angle", "/", "angle_per_class", ")", ".", "int", "(", ")", "\n", "residual_angle", "=", "shifted_angle", "-", "(", "class_id", "*", "angle_per_class", "+", "angle_per_class", "/", "2", ")", "\n", "return", "class_id", ",", "residual_angle", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.size2class": [[80, 85], ["None"], "methods", ["None"], ["", "def", "size2class", "(", "self", ",", "size", ",", "type_name", ")", ":", "\n", "        ", "''' Convert 3D box size (l,w,h) to size class and size residual '''", "\n", "size_class", "=", "self", ".", "type2class", "[", "type_name", "]", "\n", "size_residual", "=", "size", "-", "self", ".", "type_mean_size", "[", "type_name", "]", "\n", "return", "size_class", ",", "size_residual", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size": [[86, 91], ["None"], "methods", ["None"], ["", "def", "class2size", "(", "self", ",", "pred_cls", ",", "residual", ")", ":", "\n", "        ", "''' Inverse function to size2class '''", "\n", "# mean_size = self.type_mean_size[self.class2type[pred_cls]]", "\n", "# return mean_size + residual", "\n", "return", "self", ".", "mean_size_arr", "[", "pred_cls", ",", ":", "]", "+", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.angle2class": [[92, 109], ["int", "float"], "methods", ["None"], ["", "def", "angle2class", "(", "self", ",", "angle", ")", ":", "\n", "        ", "''' Convert continuous angle to discrete class\n            [optinal] also small regression number from  \n            class center angle to current angle.\n           \n            angle is from 0-2pi (or -pi~pi), class center at 0, 1*(2pi/N), 2*(2pi/N) ...  (N-1)*(2pi/N)\n            return is class of int32 of 0,1,...,N-1 and a number such that\n                class*(2pi/N) + number = angle\n        '''", "\n", "num_class", "=", "self", ".", "num_heading_bin", "\n", "angle", "=", "angle", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "assert", "(", "angle", ">=", "0", "and", "angle", "<=", "2", "*", "np", ".", "pi", ")", "\n", "angle_per_class", "=", "2", "*", "np", ".", "pi", "/", "float", "(", "num_class", ")", "\n", "shifted_angle", "=", "(", "angle", "+", "angle_per_class", "/", "2", ")", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "class_id", "=", "int", "(", "shifted_angle", "/", "angle_per_class", ")", "\n", "residual_angle", "=", "shifted_angle", "-", "(", "class_id", "*", "angle_per_class", "+", "angle_per_class", "/", "2", ")", "\n", "return", "class_id", ",", "residual_angle", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle": [[110, 121], ["float"], "methods", ["None"], ["", "def", "class2angle", "(", "self", ",", "pred_cls", ",", "residual", ",", "to_label_format", "=", "True", ")", ":", "\n", "        ", "''' Inverse function to angle2class '''", "\n", "num_class", "=", "self", ".", "num_heading_bin", "\n", "angle_per_class", "=", "2", "*", "np", ".", "pi", "/", "float", "(", "num_class", ")", "\n", "angle_center", "=", "pred_cls", "*", "angle_per_class", "\n", "angle", "=", "angle_center", "+", "residual", "\n", "# if to_label_format and angle>np.pi:", "\n", "#     angle = angle - 2*np.pi", "\n", "if", "to_label_format", ":", "\n", "            ", "angle", "=", "angle", "-", "2", "*", "np", ".", "pi", "*", "(", "angle", ">", "np", ".", "pi", ")", "\n", "", "return", "angle", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.param2obb": [[122, 130], ["model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "model_util_sunrgbd.SunrgbdDatasetConfig.class2size", "numpy.zeros", "int"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size"], ["", "def", "param2obb", "(", "self", ",", "center", ",", "heading_class", ",", "heading_residual", ",", "size_class", ",", "size_residual", ")", ":", "\n", "        ", "heading_angle", "=", "self", ".", "class2angle", "(", "heading_class", ",", "heading_residual", ")", "\n", "box_size", "=", "self", ".", "class2size", "(", "int", "(", "size_class", ")", ",", "size_residual", ")", "\n", "obb", "=", "np", ".", "zeros", "(", "(", "7", ",", ")", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "center", "\n", "obb", "[", "3", ":", "6", "]", "=", "box_size", "\n", "obb", "[", "6", "]", "=", "heading_angle", "*", "-", "1", "\n", "return", "obb", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_ssl_dataset.SunrgbdSSLLabeledDataset.__init__": [[28, 49], ["print", "os.path.join", "os.path.join", "print", "print", "exit", "x.strip", "open().readlines", "len", "open", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "labeled_sample_list", "=", "None", ",", "num_points", "=", "20000", ",", "use_color", "=", "False", ",", "use_height", "=", "False", ",", "use_v1", "=", "False", ",", "\n", "augment", "=", "False", ")", ":", "\n", "\n", "        ", "print", "(", "'--------- Sunrgbd Labeled Dataset Initialization ---------'", ")", "\n", "if", "use_v1", ":", "\n", "            ", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_pc_bbox_votes_50k_v1_train'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_pc_bbox_votes_50k_v2_train'", ")", "\n", "\n", "", "if", "labeled_sample_list", "is", "not", "None", ":", "\n", "            ", "self", ".", "scan_names", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_trainval'", ",", "labeled_sample_list", ")", ")", ".", "readlines", "(", ")", "]", "\n", "print", "(", "'\\tGet {} labeled scans'", ".", "format", "(", "len", "(", "self", ".", "scan_names", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown labeled sample list: %s. Exiting...'", "%", "labeled_sample_list", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "use_color", "=", "use_color", "\n", "self", ".", "use_height", "=", "use_height", "\n", "self", ".", "augment", "=", "augment", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_ssl_dataset.SunrgbdSSLLabeledDataset.__len__": [[50, 52], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "scan_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_ssl_dataset.SunrgbdSSLLabeledDataset.__getitem__": [[53, 182], ["numpy.load", "pc_util.random_sampling", "numpy.identity", "numpy.ones", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "pc_util.random_sampling", "numpy.concatenate.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "point_votes.astype", "point_votes_mask.astype", "numpy.array().astype", "numpy.array().astype", "pc_util.random_sampling.astype", "numpy.array().astype", "numpy.array().astype", "sunrgbd_utils.rotz.astype", "numpy.array().astype", "numpy.array().astype", "numpy.load", "numpy.load", "numpy.percentile", "numpy.concatenate", "sunrgbd_utils.rotz", "numpy.zeros_like", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.expand_dims", "DC.angle2class", "DC.size2class", "numpy.zeros.astype", "os.path.join", "numpy.random.random", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.tile", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "os.path.join", "os.path.join", "numpy.expand_dims", "numpy.random.random", "numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.angle2class", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.size2class"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n         Returns a dict with following keys:\n             point_clouds: (N,3+C)\n             center_label: (MAX_NUM_OBJ,3) for GT box center XYZ\n             heading_class_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_HEADING_BIN-1\n             heading_residual_label: (MAX_NUM_OBJ,)\n             size_classe_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_SIZE_CLUSTER\n             size_residual_label: (MAX_NUM_OBJ,3)\n             sem_cls_label: (MAX_NUM_OBJ,) semantic class index\n             box_label_mask: (MAX_NUM_OBJ) as 0/1 with 1 indicating a unique box\n             vote_label: (N,9) with votes XYZ (3 votes: X1Y1Z1, X2Y2Z2, X3Y3Z3)\n                 if there is only one vote than X1==X2==X3 etc.\n             vote_label_mask: (N,) with 0/1 with 1 indicating the point\n                 is in one of the object's OBB.\n             scan_idx: int scan index in scan_names list\n         \"\"\"", "\n", "scan_name", "=", "self", ".", "scan_names", "[", "idx", "]", "\n", "point_cloud", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_pc.npz'", ")", "[", "'pc'", "]", "# Nx6", "\n", "bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "# K,8", "\n", "point_votes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_votes.npz'", ")", "[", "'point_votes'", "]", "# Nx10", "\n", "\n", "if", "not", "self", ".", "use_color", ":", "\n", "            ", "point_cloud", "=", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "", "else", ":", "\n", "            ", "point_cloud", "=", "point_cloud", "[", ":", ",", "0", ":", "6", "]", "\n", "point_cloud", "[", ":", ",", "3", ":", "]", "=", "(", "point_cloud", "[", ":", ",", "3", ":", "]", "-", "MEAN_COLOR_RGB", ")", "\n", "\n", "", "if", "self", ".", "use_height", ":", "\n", "            ", "floor_height", "=", "np", ".", "percentile", "(", "point_cloud", "[", ":", ",", "2", "]", ",", "0.99", ")", "\n", "height", "=", "point_cloud", "[", ":", ",", "2", "]", "-", "floor_height", "\n", "point_cloud", "=", "np", ".", "concatenate", "(", "[", "point_cloud", ",", "np", ".", "expand_dims", "(", "height", ",", "1", ")", "]", ",", "1", ")", "# (N,4) or (N,7)", "\n", "\n", "", "ema_point_cloud", "=", "pc_util", ".", "random_sampling", "(", "point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "False", ")", "\n", "\n", "# ------------------------------- DATA AUGMENTATION ------------------------------", "\n", "flip_x_axis", "=", "0", "\n", "flip_y_axis", "=", "0", "\n", "rot_mat", "=", "np", ".", "identity", "(", "3", ")", "\n", "scale_ratio", "=", "np", ".", "ones", "(", "(", "1", ",", "3", ")", ")", "\n", "if", "self", ".", "augment", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the YZ plane", "\n", "                ", "flip_x_axis", "=", "1", "\n", "point_cloud", "[", ":", ",", "0", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "0", "]", "\n", "bboxes", "[", ":", ",", "0", "]", "=", "-", "1", "*", "bboxes", "[", ":", ",", "0", "]", "\n", "bboxes", "[", ":", ",", "6", "]", "=", "np", ".", "pi", "-", "bboxes", "[", ":", ",", "6", "]", "\n", "point_votes", "[", ":", ",", "[", "1", ",", "4", ",", "7", "]", "]", "=", "-", "1", "*", "point_votes", "[", ":", ",", "[", "1", ",", "4", ",", "7", "]", "]", "\n", "\n", "# Rotation along up-axis/Z-axis", "\n", "", "rot_angle", "=", "(", "np", ".", "random", ".", "random", "(", ")", "*", "np", ".", "pi", "/", "3", ")", "-", "np", ".", "pi", "/", "6", "# -30 ~ +30 degree", "\n", "rot_mat", "=", "sunrgbd_utils", ".", "rotz", "(", "rot_angle", ")", "\n", "\n", "point_votes_end", "=", "np", ".", "zeros_like", "(", "point_votes", ")", "\n", "point_votes_end", "[", ":", ",", "1", ":", "4", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "+", "point_votes", "[", ":", ",", "1", ":", "4", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "point_votes_end", "[", ":", ",", "4", ":", "7", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "+", "point_votes", "[", ":", ",", "4", ":", "7", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "point_votes_end", "[", ":", ",", "7", ":", "10", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "+", "point_votes", "[", ":", ",", "7", ":", "10", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "bboxes", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "bboxes", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "bboxes", "[", ":", ",", "6", "]", "-=", "rot_angle", "\n", "point_votes", "[", ":", ",", "1", ":", "4", "]", "=", "point_votes_end", "[", ":", ",", "1", ":", "4", "]", "-", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "point_votes", "[", ":", ",", "4", ":", "7", "]", "=", "point_votes_end", "[", ":", ",", "4", ":", "7", "]", "-", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "point_votes", "[", ":", ",", "7", ":", "10", "]", "=", "point_votes_end", "[", ":", ",", "7", ":", "10", "]", "-", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "# Augment point cloud scale: 0.85x-1.15x", "\n", "scale_ratio", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.3", "+", "0.85", "\n", "scale_ratio", "=", "np", ".", "expand_dims", "(", "np", ".", "tile", "(", "scale_ratio", ",", "3", ")", ",", "0", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "bboxes", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "bboxes", "[", ":", ",", "3", ":", "6", "]", "*=", "scale_ratio", "\n", "point_votes", "[", ":", ",", "1", ":", "4", "]", "*=", "scale_ratio", "\n", "point_votes", "[", ":", ",", "4", ":", "7", "]", "*=", "scale_ratio", "\n", "point_votes", "[", ":", ",", "7", ":", "10", "]", "*=", "scale_ratio", "\n", "if", "self", ".", "use_height", ":", "\n", "                ", "point_cloud", "[", ":", ",", "-", "1", "]", "*=", "scale_ratio", "[", "0", ",", "0", "]", "\n", "\n", "# ------------------------------- LABELS ------------------------------", "\n", "", "", "target_bboxes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "6", ")", ")", "\n", "target_bboxes_mask", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "angle_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "angle_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "target_bboxes_semcls", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "\n", "target_bboxes_mask", "[", "0", ":", "bboxes", ".", "shape", "[", "0", "]", "]", "=", "1", "\n", "target_bboxes", "[", "0", ":", "bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "bboxes", "[", ":", ",", "0", ":", "6", "]", "\n", "\n", "for", "i", "in", "range", "(", "bboxes", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "bbox", "=", "bboxes", "[", "i", "]", "\n", "semantic_class", "=", "bbox", "[", "7", "]", "\n", "angle_class", ",", "angle_residual", "=", "DC", ".", "angle2class", "(", "bbox", "[", "6", "]", ")", "\n", "# NOTE: The mean size stored in size2class is of full length of box edges,", "\n", "# while in sunrgbd_data.py data dumping we dumped *half* length l,w,h.. so have to time it by 2 here", "\n", "box3d_size", "=", "bbox", "[", "3", ":", "6", "]", "*", "2", "\n", "size_class", ",", "size_residual", "=", "DC", ".", "size2class", "(", "box3d_size", ",", "DC", ".", "class2type", "[", "semantic_class", "]", ")", "\n", "angle_classes", "[", "i", "]", "=", "angle_class", "\n", "angle_residuals", "[", "i", "]", "=", "angle_residual", "\n", "size_classes", "[", "i", "]", "=", "size_class", "\n", "size_residuals", "[", "i", "]", "=", "size_residual", "\n", "target_bboxes_semcls", "[", "i", "]", "=", "semantic_class", "\n", "\n", "", "point_cloud", ",", "choices", "=", "pc_util", ".", "random_sampling", "(", "point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "True", ")", "\n", "point_votes_mask", "=", "point_votes", "[", "choices", ",", "0", "]", "\n", "point_votes", "=", "point_votes", "[", "choices", ",", "1", ":", "]", "\n", "\n", "ret_dict", "=", "{", "}", "\n", "ret_dict", "[", "'point_clouds'", "]", "=", "point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'center_label'", "]", "=", "target_bboxes", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", "0", ":", "3", "]", "\n", "ret_dict", "[", "'heading_class_label'", "]", "=", "angle_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'heading_residual_label'", "]", "=", "angle_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'size_class_label'", "]", "=", "size_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'size_residual_label'", "]", "=", "size_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'sem_cls_label'", "]", "=", "target_bboxes_semcls", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'box_label_mask'", "]", "=", "target_bboxes_mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label'", "]", "=", "point_votes", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label_mask'", "]", "=", "point_votes_mask", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'scan_idx'", "]", "=", "np", ".", "array", "(", "idx", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "ret_dict", "[", "'supervised_mask'", "]", "=", "np", ".", "array", "(", "1", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'ema_point_clouds'", "]", "=", "ema_point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'flip_x_axis'", "]", "=", "np", ".", "array", "(", "flip_x_axis", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'flip_y_axis'", "]", "=", "np", ".", "array", "(", "flip_y_axis", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'rot_mat'", "]", "=", "rot_mat", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'rot_angle'", "]", "=", "np", ".", "array", "(", "rot_angle", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'scale'", "]", "=", "np", ".", "array", "(", "scale_ratio", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_ssl_dataset.SunrgbdSSLUnlabeledDataset.__init__": [[185, 217], ["print", "sorted", "os.path.join", "os.path.join", "list", "print", "print", "exit", "print", "set", "x.strip", "len", "len", "list", "open().readlines", "len", "len", "set", "set", "os.path.basename", "os.listdir", "open", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "labeled_sample_list", "=", "None", ",", "num_points", "=", "20000", ",", "use_color", "=", "False", ",", "use_height", "=", "False", ",", "use_v1", "=", "False", ",", "\n", "aug_num", "=", "1", ",", "scan_idx_list", "=", "None", ",", "load_labels", "=", "None", ",", "augment", "=", "True", ")", ":", "\n", "        ", "print", "(", "'----------------Sunrgbd Unlabeled Dataset Initialization----------------'", ")", "\n", "if", "use_v1", ":", "\n", "            ", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_pc_bbox_votes_50k_v1_train'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_pc_bbox_votes_50k_v2_train'", ")", "\n", "\n", "", "train_scan_names", "=", "sorted", "(", "list", "(", "set", "(", "[", "os", ".", "path", ".", "basename", "(", "x", ")", "[", "0", ":", "6", "]", "for", "x", "in", "os", ".", "listdir", "(", "self", ".", "data_path", ")", "]", ")", ")", ")", "\n", "if", "scan_idx_list", "is", "not", "None", ":", "\n", "            ", "train_scan_names", "=", "[", "self", ".", "scan_names", "[", "i", "]", "for", "i", "in", "scan_idx_list", "]", "\n", "\n", "", "if", "labeled_sample_list", "is", "not", "None", ":", "\n", "            ", "labeled_scan_names", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_trainval'", ",", "labeled_sample_list", ")", ")", ".", "readlines", "(", ")", "]", "\n", "if", "len", "(", "train_scan_names", ")", "==", "len", "(", "labeled_scan_names", ")", ":", "\n", "                ", "self", ".", "scan_names", "=", "train_scan_names", "\n", "", "else", ":", "\n", "                ", "self", ".", "scan_names", "=", "list", "(", "set", "(", "train_scan_names", ")", "-", "set", "(", "labeled_scan_names", ")", ")", "\n", "", "print", "(", "'\\tGet {} unlabeled scans out of {}'", ".", "format", "(", "len", "(", "self", ".", "scan_names", ")", ",", "len", "(", "train_scan_names", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'\\tUnknown labeled sample list: %s. Exiting...'", "%", "labeled_sample_list", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "use_color", "=", "use_color", "\n", "self", ".", "use_height", "=", "use_height", "\n", "self", ".", "aug_num", "=", "aug_num", "\n", "self", ".", "load_labels", "=", "load_labels", "\n", "self", ".", "augment", "=", "augment", "\n", "if", "load_labels", ":", "\n", "            ", "print", "(", "'Warning! Loading labels for analysis'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_ssl_dataset.SunrgbdSSLUnlabeledDataset.__len__": [[218, 220], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "scan_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_ssl_dataset.SunrgbdSSLUnlabeledDataset.__getitem__": [[221, 313], ["pc_util.random_sampling", "pc_util.random_sampling.astype", "numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "pc_util.random_sampling", "numpy.identity", "numpy.ones", "point_cloud.astype", "numpy.array().astype", "numpy.array().astype", "pc_util.rotz.astype", "numpy.array().astype", "numpy.array().astype", "numpy.array().astype", "numpy.array().astype", "numpy.load", "numpy.percentile", "numpy.concatenate", "DC.angle2class", "DC.size2class", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "pc_util.rotz", "numpy.dot", "numpy.expand_dims", "os.path.join", "numpy.zeros.astype", "numpy.random.random", "numpy.transpose", "numpy.tile", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "os.path.join", "numpy.expand_dims", "numpy.random.random", "numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.angle2class", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.size2class", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Returns a dict with following keys:\n            point_clouds: (N,3+C)\n            scan_idx: int scan index in scan_names list\n        \"\"\"", "\n", "scan_name", "=", "self", ".", "scan_names", "[", "idx", "]", "\n", "mesh_vertices", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_pc.npz'", ")", "[", "'pc'", "]", "# Nx6", "\n", "\n", "if", "not", "self", ".", "use_color", ":", "\n", "            ", "raw_point_cloud", "=", "mesh_vertices", "[", ":", ",", "0", ":", "3", "]", "# do not use color for now", "\n", "", "else", ":", "\n", "            ", "raw_point_cloud", "=", "mesh_vertices", "[", ":", ",", "0", ":", "6", "]", "\n", "raw_point_cloud", "[", ":", ",", "3", ":", "]", "=", "(", "raw_point_cloud", "[", ":", ",", "3", ":", "]", "-", "MEAN_COLOR_RGB", ")", "/", "256.0", "\n", "\n", "", "if", "self", ".", "use_height", ":", "\n", "            ", "floor_height", "=", "np", ".", "percentile", "(", "raw_point_cloud", "[", ":", ",", "2", "]", ",", "0.99", ")", "\n", "height", "=", "raw_point_cloud", "[", ":", ",", "2", "]", "-", "floor_height", "\n", "raw_point_cloud", "=", "np", ".", "concatenate", "(", "[", "raw_point_cloud", ",", "np", ".", "expand_dims", "(", "height", ",", "1", ")", "]", ",", "1", ")", "\n", "\n", "", "ret_dict", "=", "{", "}", "\n", "ema_point_cloud", "=", "pc_util", ".", "random_sampling", "(", "raw_point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "False", ")", "\n", "ret_dict", "[", "'ema_point_clouds'", "]", "=", "ema_point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "# K,8", "\n", "target_bboxes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "6", ")", ")", "\n", "target_bboxes_mask", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "angle_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "angle_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "target_bboxes_semcls", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "\n", "target_bboxes_mask", "[", "0", ":", "bboxes", ".", "shape", "[", "0", "]", "]", "=", "1", "\n", "target_bboxes", "[", "0", ":", "bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "bboxes", "[", ":", ",", "0", ":", "6", "]", "\n", "\n", "for", "i", "in", "range", "(", "bboxes", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "bbox", "=", "bboxes", "[", "i", "]", "\n", "semantic_class", "=", "bbox", "[", "7", "]", "\n", "angle_class", ",", "angle_residual", "=", "DC", ".", "angle2class", "(", "bbox", "[", "6", "]", ")", "\n", "# NOTE: The mean size stored in size2class is of full length of box edges,", "\n", "# while in sunrgbd_data.py data dumping we dumped *half* length l,w,h.. so have to time it by 2 here", "\n", "box3d_size", "=", "bbox", "[", "3", ":", "6", "]", "*", "2", "\n", "size_class", ",", "size_residual", "=", "DC", ".", "size2class", "(", "box3d_size", ",", "DC", ".", "class2type", "[", "semantic_class", "]", ")", "\n", "angle_classes", "[", "i", "]", "=", "angle_class", "\n", "angle_residuals", "[", "i", "]", "=", "angle_residual", "\n", "size_classes", "[", "i", "]", "=", "size_class", "\n", "size_residuals", "[", "i", "]", "=", "size_residual", "\n", "target_bboxes_semcls", "[", "i", "]", "=", "semantic_class", "\n", "\n", "", "if", "self", ".", "load_labels", ":", "\n", "            ", "ret_dict", "[", "'center_label'", "]", "=", "target_bboxes", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", "0", ":", "3", "]", "\n", "ret_dict", "[", "'heading_class_label'", "]", "=", "angle_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'heading_residual_label'", "]", "=", "angle_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'size_class_label'", "]", "=", "size_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'size_residual_label'", "]", "=", "size_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'sem_cls_label'", "]", "=", "target_bboxes_semcls", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'box_label_mask'", "]", "=", "target_bboxes_mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "", "point_cloud", ",", "choices", "=", "pc_util", ".", "random_sampling", "(", "raw_point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "True", ")", "\n", "flip_x_axis", "=", "0", "\n", "flip_y_axis", "=", "0", "\n", "rot_angle", "=", "0", "\n", "rot_mat", "=", "np", ".", "identity", "(", "3", ")", "\n", "scale_ratio", "=", "np", ".", "ones", "(", "(", "1", ",", "3", ")", ")", "\n", "if", "self", ".", "augment", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the YZ plane", "\n", "                ", "flip_x_axis", "=", "1", "\n", "point_cloud", "[", ":", ",", "0", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "0", "]", "\n", "\n", "# Rotation along up-axis/Z-axis", "\n", "", "rot_angle", "=", "(", "np", ".", "random", ".", "random", "(", ")", "*", "np", ".", "pi", "/", "3", ")", "-", "np", ".", "pi", "/", "6", "# -30 ~ +30 degree", "\n", "rot_mat", "=", "pc_util", ".", "rotz", "(", "rot_angle", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "\n", "# Augment point cloud scale: 0.85x-1.15x", "\n", "scale_ratio", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.3", "+", "0.85", "\n", "scale_ratio", "=", "np", ".", "expand_dims", "(", "np", ".", "tile", "(", "scale_ratio", ",", "3", ")", ",", "0", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "if", "self", ".", "use_height", ":", "\n", "                ", "point_cloud", "[", ":", ",", "-", "1", "]", "*=", "scale_ratio", "[", "0", ",", "0", "]", "\n", "\n", "", "", "ret_dict", "[", "'point_clouds'", "]", "=", "point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'flip_x_axis'", "]", "=", "np", ".", "array", "(", "flip_x_axis", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'flip_y_axis'", "]", "=", "np", ".", "array", "(", "flip_y_axis", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'rot_mat'", "]", "=", "rot_mat", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'rot_angle'", "]", "=", "np", ".", "array", "(", "rot_angle", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'scale'", "]", "=", "np", ".", "array", "(", "scale_ratio", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'scan_idx'", "]", "=", "np", ".", "array", "(", "idx", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'supervised_mask'", "]", "=", "np", ".", "array", "(", "0", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "return", "ret_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.__init__": [[44, 82], ["os.path.join", "sorted", "os.path.join", "os.path.join", "list", "set", "sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.get_labeled_samples", "list", "print", "print", "exit", "x.strip", "os.path.basename", "os.listdir", "open().readlines", "set", "set", "len", "open", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.get_labeled_samples"], ["    ", "def", "__init__", "(", "self", ",", "split_set", "=", "'train'", ",", "labeled_ratio", "=", "0.1", ",", "labeled_sample_list", "=", "None", ",", "\n", "num_points", "=", "20000", ",", "use_color", "=", "False", ",", "use_height", "=", "False", ",", "use_v1", "=", "False", ",", "\n", "augment", "=", "False", ",", "scan_idx_list", "=", "None", ",", "test_transductive", "=", "False", ")", ":", "\n", "\n", "        ", "assert", "(", "num_points", "<=", "50000", ")", "\n", "self", ".", "use_v1", "=", "use_v1", "\n", "if", "use_v1", ":", "\n", "            ", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "\n", "'sunrgbd/sunrgbd_pc_bbox_votes_50k_v1_%s'", "%", "(", "split_set", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "\n", "'sunrgbd/sunrgbd_pc_bbox_votes_50k_v2_%s'", "%", "(", "split_set", ")", ")", "\n", "\n", "", "self", ".", "raw_data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_trainval'", ")", "\n", "self", ".", "scan_names", "=", "sorted", "(", "list", "(", "set", "(", "[", "os", ".", "path", ".", "basename", "(", "x", ")", "[", "0", ":", "6", "]", "for", "x", "in", "os", ".", "listdir", "(", "self", ".", "data_path", ")", "]", ")", ")", ")", "\n", "if", "scan_idx_list", "is", "not", "None", ":", "\n", "            ", "self", ".", "scan_names", "=", "[", "self", ".", "scan_names", "[", "i", "]", "for", "i", "in", "scan_idx_list", "]", "\n", "", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "augment", "=", "augment", "\n", "self", ".", "use_color", "=", "use_color", "\n", "self", ".", "use_height", "=", "use_height", "\n", "\n", "# construct labeled and unlabeled samples for training", "\n", "if", "split_set", "==", "'train'", ":", "\n", "            ", "if", "test_transductive", ":", "\n", "                ", "if", "labeled_sample_list", "is", "not", "None", ":", "\n", "                    ", "labeled_scan_names", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "labeled_sample_list", ")", ")", ".", "readlines", "(", ")", "]", "\n", "self", ".", "scan_names", "=", "list", "(", "set", "(", "self", ".", "scan_names", ")", "-", "set", "(", "labeled_scan_names", ")", ")", "\n", "print", "(", "'\\tGet {} unlabeled scans for transductive learning'", ".", "format", "(", "len", "(", "self", ".", "scan_names", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "'Unknown labeled sample list: %s. Exiting...'", "%", "labeled_sample_list", ")", "\n", "exit", "(", "-", "1", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "labeled_ratio", "=", "labeled_ratio", "\n", "self", ".", "labeled_sample_list", "=", "labeled_sample_list", "\n", "self", ".", "get_labeled_samples", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.get_labeled_samples": [[83, 115], ["list", "print", "len", "int", "numpy.zeros", "enumerate", "x.strip", "numpy.load", "numpy.random.choice", "numpy.sum", "numpy.where", "set", "set", "len", "len", "open().readlines", "len", "numpy.unique", "numpy.sum", "list", "os.path.join", "open", "open", "numpy.array", "os.path.join", "f.write", "os.path.join", "int"], "methods", ["None"], ["", "", "", "def", "get_labeled_samples", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "labeled_sample_list", "is", "not", "None", ":", "\n", "            ", "labeled_scan_names", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "self", ".", "labeled_sample_list", ")", ")", ".", "readlines", "(", ")", "]", "\n", "", "else", ":", "\n", "# randomly select scan names w.r.t labeled_ratio", "\n", "            ", "num_scans", "=", "len", "(", "self", ".", "scan_names", ")", "\n", "num_labeled_scans", "=", "int", "(", "self", ".", "labeled_ratio", "*", "num_scans", ")", "\n", "scan2label", "=", "np", ".", "zeros", "(", "(", "num_scans", ",", "DC", ".", "num_class", ")", ")", "\n", "for", "i", ",", "scan_name", "in", "enumerate", "(", "self", ".", "scan_names", ")", ":", "\n", "                ", "bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "# K,8", "\n", "class_ind", "=", "bboxes", "[", ":", ",", "-", "1", "]", "\n", "if", "len", "(", "class_ind", ")", "!=", "0", ":", "\n", "                    ", "unique_class_ind", "=", "np", ".", "unique", "(", "class_ind", ")", "\n", "", "else", ":", "continue", "\n", "for", "j", "in", "unique_class_ind", ":", "\n", "                    ", "scan2label", "[", "i", ",", "int", "(", "j", ")", "]", "=", "1", "\n", "\n", "", "", "while", "True", ":", "\n", "                ", "choices", "=", "np", ".", "random", ".", "choice", "(", "num_scans", ",", "num_labeled_scans", ",", "replace", "=", "False", ")", "\n", "class_distr", "=", "np", ".", "sum", "(", "scan2label", "[", "choices", "]", ",", "axis", "=", "0", ")", "\n", "class_mask", "=", "np", ".", "where", "(", "class_distr", ">", "0", ",", "1", ",", "0", ")", "\n", "if", "np", ".", "sum", "(", "class_mask", ")", "==", "DC", ".", "num_class", ":", "\n", "                    ", "labeled_scan_names", "=", "list", "(", "np", ".", "array", "(", "self", ".", "scan_names", ")", "[", "choices", "]", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "raw_data_path", ",", "'sunrgbd_v1_train_{}.txt'", ".", "format", "(", "self", ".", "labeled_ratio", ")", ")", ",", "'w'", ")", "as", "f", ":", "\n", "                        ", "for", "scan_name", "in", "labeled_scan_names", ":", "\n", "                            ", "f", ".", "write", "(", "scan_name", "+", "'\\n'", ")", "\n", "", "", "break", "\n", "\n", "", "", "", "unlabeled_scan_names", "=", "list", "(", "set", "(", "self", ".", "scan_names", ")", "-", "set", "(", "labeled_scan_names", ")", ")", "\n", "print", "(", "'Selected {} labeled scans, remained {} unlabeled scans'", ".", "format", "(", "len", "(", "labeled_scan_names", ")", ",", "len", "(", "unlabeled_scan_names", ")", ")", ")", "\n", "self", ".", "scan_names", "=", "labeled_scan_names", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.__len__": [[116, 118], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "scan_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.__getitem__": [[119, 247], ["numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "pc_util.random_sampling", "numpy.concatenate.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "point_votes.astype", "point_votes_mask.astype", "numpy.array().astype", "numpy.array().astype", "numpy.load", "numpy.load", "numpy.percentile", "numpy.concatenate", "sunrgbd_utils.rotz", "numpy.zeros_like", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.expand_dims", "DC.angle2class", "DC.size2class", "numpy.zeros.astype", "os.path.join", "numpy.random.random", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.expand_dims", "numpy.clip", "numpy.expand_dims", "numpy.tile", "numpy.array", "numpy.array", "os.path.join", "os.path.join", "numpy.expand_dims", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.angle2class", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.size2class"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Returns a dict with following keys:\n            point_clouds: (N,3+C)\n            center_label: (MAX_NUM_OBJ,3) for GT box center XYZ\n            heading_class_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_HEADING_BIN-1\n            heading_residual_label: (MAX_NUM_OBJ,)\n            size_classe_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_SIZE_CLUSTER\n            size_residual_label: (MAX_NUM_OBJ,3)\n            sem_cls_label: (MAX_NUM_OBJ,) semantic class index\n            box_label_mask: (MAX_NUM_OBJ) as 0/1 with 1 indicating a unique box\n            vote_label: (N,9) with votes XYZ (3 votes: X1Y1Z1, X2Y2Z2, X3Y3Z3)\n                if there is only one vote than X1==X2==X3 etc.\n            vote_label_mask: (N,) with 0/1 with 1 indicating the point\n                is in one of the object's OBB.\n            scan_idx: int scan index in scan_names list\n            max_gt_bboxes: unused\n        \"\"\"", "\n", "scan_name", "=", "self", ".", "scan_names", "[", "idx", "]", "\n", "point_cloud", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_pc.npz'", ")", "[", "'pc'", "]", "# Nx6", "\n", "bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "# K,8", "\n", "point_votes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_votes.npz'", ")", "[", "'point_votes'", "]", "# Nx10", "\n", "\n", "if", "not", "self", ".", "use_color", ":", "\n", "            ", "point_cloud", "=", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "", "else", ":", "\n", "            ", "point_cloud", "=", "point_cloud", "[", ":", ",", "0", ":", "6", "]", "\n", "point_cloud", "[", ":", ",", "3", ":", "]", "=", "(", "point_cloud", "[", ":", ",", "3", ":", "]", "-", "MEAN_COLOR_RGB", ")", "\n", "\n", "", "if", "self", ".", "use_height", ":", "\n", "            ", "floor_height", "=", "np", ".", "percentile", "(", "point_cloud", "[", ":", ",", "2", "]", ",", "0.99", ")", "\n", "height", "=", "point_cloud", "[", ":", ",", "2", "]", "-", "floor_height", "\n", "point_cloud", "=", "np", ".", "concatenate", "(", "[", "point_cloud", ",", "np", ".", "expand_dims", "(", "height", ",", "1", ")", "]", ",", "1", ")", "# (N,4) or (N,7)", "\n", "\n", "# ------------------------------- DATA AUGMENTATION ------------------------------", "\n", "", "if", "self", ".", "augment", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the YZ plane", "\n", "                ", "point_cloud", "[", ":", ",", "0", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "0", "]", "\n", "bboxes", "[", ":", ",", "0", "]", "=", "-", "1", "*", "bboxes", "[", ":", ",", "0", "]", "\n", "bboxes", "[", ":", ",", "6", "]", "=", "np", ".", "pi", "-", "bboxes", "[", ":", ",", "6", "]", "\n", "point_votes", "[", ":", ",", "[", "1", ",", "4", ",", "7", "]", "]", "=", "-", "1", "*", "point_votes", "[", ":", ",", "[", "1", ",", "4", ",", "7", "]", "]", "\n", "\n", "\n", "# Rotation along up-axis/Z-axis", "\n", "", "rot_angle", "=", "(", "np", ".", "random", ".", "random", "(", ")", "*", "np", ".", "pi", "/", "3", ")", "-", "np", ".", "pi", "/", "6", "# -30 ~ +30 degree", "\n", "rot_mat", "=", "sunrgbd_utils", ".", "rotz", "(", "rot_angle", ")", "\n", "\n", "point_votes_end", "=", "np", ".", "zeros_like", "(", "point_votes", ")", "\n", "point_votes_end", "[", ":", ",", "1", ":", "4", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "+", "point_votes", "[", ":", ",", "1", ":", "4", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "point_votes_end", "[", ":", ",", "4", ":", "7", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "+", "point_votes", "[", ":", ",", "4", ":", "7", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "point_votes_end", "[", ":", ",", "7", ":", "10", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "+", "point_votes", "[", ":", ",", "7", ":", "10", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "bboxes", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "bboxes", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "bboxes", "[", ":", ",", "6", "]", "-=", "rot_angle", "\n", "point_votes", "[", ":", ",", "1", ":", "4", "]", "=", "point_votes_end", "[", ":", ",", "1", ":", "4", "]", "-", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "point_votes", "[", ":", ",", "4", ":", "7", "]", "=", "point_votes_end", "[", ":", ",", "4", ":", "7", "]", "-", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "point_votes", "[", ":", ",", "7", ":", "10", "]", "=", "point_votes_end", "[", ":", ",", "7", ":", "10", "]", "-", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "# Augment RGB color", "\n", "if", "self", ".", "use_color", ":", "\n", "                ", "rgb_color", "=", "point_cloud", "[", ":", ",", "3", ":", "6", "]", "+", "MEAN_COLOR_RGB", "\n", "rgb_color", "*=", "(", "1", "+", "0.4", "*", "np", ".", "random", ".", "random", "(", "3", ")", "-", "0.2", ")", "# brightness change for each channel", "\n", "rgb_color", "+=", "(", "0.1", "*", "np", ".", "random", ".", "random", "(", "3", ")", "-", "0.05", ")", "# color shift for each channel", "\n", "rgb_color", "+=", "np", ".", "expand_dims", "(", "(", "0.05", "*", "np", ".", "random", ".", "random", "(", "point_cloud", ".", "shape", "[", "0", "]", ")", "-", "0.025", ")", ",", "-", "1", ")", "# jittering on each pixel", "\n", "rgb_color", "=", "np", ".", "clip", "(", "rgb_color", ",", "0", ",", "1", ")", "\n", "# randomly drop out 30% of the points' colors", "\n", "rgb_color", "*=", "np", ".", "expand_dims", "(", "np", ".", "random", ".", "random", "(", "point_cloud", ".", "shape", "[", "0", "]", ")", ">", "0.3", ",", "-", "1", ")", "\n", "point_cloud", "[", ":", ",", "3", ":", "6", "]", "=", "rgb_color", "-", "MEAN_COLOR_RGB", "\n", "\n", "# Augment point cloud scale: 0.85x-1.15x", "\n", "", "scale_ratio", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.3", "+", "0.85", "\n", "scale_ratio", "=", "np", ".", "expand_dims", "(", "np", ".", "tile", "(", "scale_ratio", ",", "3", ")", ",", "0", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "bboxes", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "bboxes", "[", ":", ",", "3", ":", "6", "]", "*=", "scale_ratio", "\n", "point_votes", "[", ":", ",", "1", ":", "4", "]", "*=", "scale_ratio", "\n", "point_votes", "[", ":", ",", "4", ":", "7", "]", "*=", "scale_ratio", "\n", "point_votes", "[", ":", ",", "7", ":", "10", "]", "*=", "scale_ratio", "\n", "if", "self", ".", "use_height", ":", "\n", "                ", "point_cloud", "[", ":", ",", "-", "1", "]", "*=", "scale_ratio", "[", "0", ",", "0", "]", "\n", "\n", "# ------------------------------- LABELS ------------------------------", "\n", "", "", "target_bboxes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "6", ")", ")", "\n", "target_bboxes_mask", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "angle_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "angle_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "target_bboxes_semcls", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "\n", "target_bboxes_mask", "[", "0", ":", "bboxes", ".", "shape", "[", "0", "]", "]", "=", "1", "\n", "target_bboxes", "[", "0", ":", "bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "bboxes", "[", ":", ",", "0", ":", "6", "]", "\n", "\n", "for", "i", "in", "range", "(", "bboxes", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "bbox", "=", "bboxes", "[", "i", "]", "\n", "semantic_class", "=", "bbox", "[", "7", "]", "\n", "angle_class", ",", "angle_residual", "=", "DC", ".", "angle2class", "(", "bbox", "[", "6", "]", ")", "\n", "# NOTE: The mean size stored in size2class is of full length of box edges,", "\n", "# while in sunrgbd_data.py data dumping we dumped *half* length l,w,h.. so have to time it by 2 here", "\n", "box3d_size", "=", "bbox", "[", "3", ":", "6", "]", "*", "2", "\n", "size_class", ",", "size_residual", "=", "DC", ".", "size2class", "(", "box3d_size", ",", "DC", ".", "class2type", "[", "semantic_class", "]", ")", "\n", "angle_classes", "[", "i", "]", "=", "angle_class", "\n", "angle_residuals", "[", "i", "]", "=", "angle_residual", "\n", "size_classes", "[", "i", "]", "=", "size_class", "\n", "size_residuals", "[", "i", "]", "=", "size_residual", "\n", "target_bboxes_semcls", "[", "i", "]", "=", "semantic_class", "\n", "\n", "", "point_cloud", ",", "choices", "=", "pc_util", ".", "random_sampling", "(", "point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "True", ")", "\n", "point_votes_mask", "=", "point_votes", "[", "choices", ",", "0", "]", "\n", "point_votes", "=", "point_votes", "[", "choices", ",", "1", ":", "]", "\n", "\n", "ret_dict", "=", "{", "}", "\n", "ret_dict", "[", "'point_clouds'", "]", "=", "point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'center_label'", "]", "=", "target_bboxes", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", "0", ":", "3", "]", "\n", "ret_dict", "[", "'heading_class_label'", "]", "=", "angle_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'heading_residual_label'", "]", "=", "angle_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'size_class_label'", "]", "=", "size_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'size_residual_label'", "]", "=", "size_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'sem_cls_label'", "]", "=", "target_bboxes_semcls", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'box_label_mask'", "]", "=", "target_bboxes_mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label'", "]", "=", "point_votes", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label_mask'", "]", "=", "point_votes_mask", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'scan_idx'", "]", "=", "np", ".", "array", "(", "idx", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'supervised_mask'", "]", "=", "np", ".", "array", "(", "1", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_detection_dataset.viz_votes": [[248, 261], ["pc_util.write_ply", "pc_util.write_ply", "pc_util.write_ply", "pc_util.write_ply"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply"], ["", "", "def", "viz_votes", "(", "pc", ",", "point_votes", ",", "point_votes_mask", ")", ":", "\n", "    ", "\"\"\" Visualize point votes and point votes mask labels\n    pc: (N,3 or 6), point_votes: (N,9), point_votes_mask: (N,)\n    \"\"\"", "\n", "inds", "=", "(", "point_votes_mask", "==", "1", ")", "\n", "pc_obj", "=", "pc", "[", "inds", ",", "0", ":", "3", "]", "\n", "pc_obj_voted1", "=", "pc_obj", "+", "point_votes", "[", "inds", ",", "0", ":", "3", "]", "\n", "pc_obj_voted2", "=", "pc_obj", "+", "point_votes", "[", "inds", ",", "3", ":", "6", "]", "\n", "pc_obj_voted3", "=", "pc_obj", "+", "point_votes", "[", "inds", ",", "6", ":", "9", "]", "\n", "pc_util", ".", "write_ply", "(", "pc_obj", ",", "'pc_obj.ply'", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_obj_voted1", ",", "'pc_obj_voted1.ply'", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_obj_voted2", ",", "'pc_obj_voted2.ply'", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_obj_voted3", ",", "'pc_obj_voted3.ply'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_detection_dataset.viz_obb": [[262, 287], ["range", "pc_util.write_oriented_bbox", "pc_util.write_ply", "numpy.zeros", "DC.class2angle", "DC.class2size", "print", "oriented_boxes.append"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size"], ["", "def", "viz_obb", "(", "pc", ",", "label", ",", "mask", ",", "angle_classes", ",", "angle_residuals", ",", "\n", "size_classes", ",", "size_residuals", ")", ":", "\n", "    ", "\"\"\" Visualize oriented bounding box ground truth\n    pc: (N,3)\n    label: (K,3)  K == MAX_NUM_OBJ\n    mask: (K,)\n    angle_classes: (K,)\n    angle_residuals: (K,)\n    size_classes: (K,)\n    size_residuals: (K,3)\n    \"\"\"", "\n", "oriented_boxes", "=", "[", "]", "\n", "K", "=", "label", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "        ", "if", "mask", "[", "i", "]", "==", "0", ":", "continue", "\n", "obb", "=", "np", ".", "zeros", "(", "7", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "label", "[", "i", ",", "0", ":", "3", "]", "\n", "heading_angle", "=", "DC", ".", "class2angle", "(", "angle_classes", "[", "i", "]", ",", "angle_residuals", "[", "i", "]", ")", "\n", "box_size", "=", "DC", ".", "class2size", "(", "size_classes", "[", "i", "]", ",", "size_residuals", "[", "i", "]", ")", "\n", "obb", "[", "3", ":", "6", "]", "=", "box_size", "\n", "obb", "[", "6", "]", "=", "-", "1", "*", "heading_angle", "\n", "print", "(", "obb", ")", "\n", "oriented_boxes", ".", "append", "(", "obb", ")", "\n", "", "pc_util", ".", "write_oriented_bbox", "(", "oriented_boxes", ",", "'gt_obbs.ply'", ")", "\n", "pc_util", ".", "write_ply", "(", "label", "[", "mask", "==", "1", ",", ":", "]", ",", "'gt_centroids.ply'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_detection_dataset.get_sem_cls_statistics": [[288, 304], ["sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset", "range", "print", "len", "print"], "function", ["None"], ["", "def", "get_sem_cls_statistics", "(", ")", ":", "\n", "    ", "\"\"\" Compute number of objects for each semantic class \"\"\"", "\n", "d", "=", "SunrgbdDetectionVotesDataset", "(", "use_height", "=", "True", ",", "use_color", "=", "True", ",", "use_v1", "=", "True", ",", "augment", "=", "True", ")", "\n", "sem_cls_cnt", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "d", ")", ")", ":", "\n", "        ", "if", "i", "%", "10", "==", "0", ":", "print", "(", "i", ")", "\n", "sample", "=", "d", "[", "i", "]", "\n", "pc", "=", "sample", "[", "'point_clouds'", "]", "\n", "sem_cls", "=", "sample", "[", "'sem_cls_label'", "]", "\n", "mask", "=", "sample", "[", "'box_label_mask'", "]", "\n", "for", "j", "in", "sem_cls", ":", "\n", "            ", "if", "mask", "[", "j", "]", "==", "0", ":", "continue", "\n", "if", "sem_cls", "[", "j", "]", "not", "in", "sem_cls_cnt", ":", "\n", "                ", "sem_cls_cnt", "[", "sem_cls", "[", "j", "]", "]", "=", "0", "\n", "", "sem_cls_cnt", "[", "sem_cls", "[", "j", "]", "]", "+=", "1", "\n", "", "", "print", "(", "sem_cls_cnt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNObject3d.__init__": [[42, 60], ["line.split", "numpy.array", "numpy.array", "numpy.array", "numpy.zeros", "float", "numpy.arctan2"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "line", ")", ":", "\n", "        ", "data", "=", "line", ".", "split", "(", "' '", ")", "\n", "data", "[", "1", ":", "]", "=", "[", "float", "(", "x", ")", "for", "x", "in", "data", "[", "1", ":", "]", "]", "\n", "self", ".", "classname", "=", "data", "[", "0", "]", "\n", "self", ".", "xmin", "=", "data", "[", "1", "]", "\n", "self", ".", "ymin", "=", "data", "[", "2", "]", "\n", "self", ".", "xmax", "=", "data", "[", "1", "]", "+", "data", "[", "3", "]", "\n", "self", ".", "ymax", "=", "data", "[", "2", "]", "+", "data", "[", "4", "]", "\n", "self", ".", "box2d", "=", "np", ".", "array", "(", "[", "self", ".", "xmin", ",", "self", ".", "ymin", ",", "self", ".", "xmax", ",", "self", ".", "ymax", "]", ")", "\n", "self", ".", "centroid", "=", "np", ".", "array", "(", "[", "data", "[", "5", "]", ",", "data", "[", "6", "]", ",", "data", "[", "7", "]", "]", ")", "\n", "self", ".", "unused_dimension", "=", "np", ".", "array", "(", "[", "data", "[", "8", "]", ",", "data", "[", "9", "]", ",", "data", "[", "10", "]", "]", ")", "\n", "self", ".", "w", "=", "data", "[", "8", "]", "\n", "self", ".", "l", "=", "data", "[", "9", "]", "\n", "self", ".", "h", "=", "data", "[", "10", "]", "\n", "self", ".", "orientation", "=", "np", ".", "zeros", "(", "(", "3", ",", ")", ")", "\n", "self", ".", "orientation", "[", "0", "]", "=", "data", "[", "11", "]", "\n", "self", ".", "orientation", "[", "1", "]", "=", "data", "[", "12", "]", "\n", "self", ".", "heading_angle", "=", "-", "1", "*", "np", ".", "arctan2", "(", "self", ".", "orientation", "[", "1", "]", ",", "self", ".", "orientation", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.__init__": [[90, 100], ["numpy.array", "numpy.reshape", "numpy.array", "numpy.reshape", "line.rstrip", "open", "float", "float", "lines[].split", "lines[].split"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "calib_filepath", ")", ":", "\n", "        ", "lines", "=", "[", "line", ".", "rstrip", "(", ")", "for", "line", "in", "open", "(", "calib_filepath", ")", "]", "\n", "Rtilt", "=", "np", ".", "array", "(", "[", "float", "(", "x", ")", "for", "x", "in", "lines", "[", "0", "]", ".", "split", "(", "' '", ")", "]", ")", "\n", "self", ".", "Rtilt", "=", "np", ".", "reshape", "(", "Rtilt", ",", "(", "3", ",", "3", ")", ",", "order", "=", "'F'", ")", "\n", "K", "=", "np", ".", "array", "(", "[", "float", "(", "x", ")", "for", "x", "in", "lines", "[", "1", "]", ".", "split", "(", "' '", ")", "]", ")", "\n", "self", ".", "K", "=", "np", ".", "reshape", "(", "K", ",", "(", "3", ",", "3", ")", ",", "order", "=", "'F'", ")", "\n", "self", ".", "f_u", "=", "self", ".", "K", "[", "0", ",", "0", "]", "\n", "self", ".", "f_v", "=", "self", ".", "K", "[", "1", ",", "1", "]", "\n", "self", ".", "c_u", "=", "self", ".", "K", "[", "0", ",", "2", "]", "\n", "self", ".", "c_v", "=", "self", ".", "K", "[", "1", ",", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_camera": [[101, 108], ["numpy.dot", "sunrgbd_utils.flip_axis_to_camera", "numpy.transpose", "numpy.transpose", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_camera"], ["", "def", "project_upright_depth_to_camera", "(", "self", ",", "pc", ")", ":", "\n", "        ", "''' project point cloud from depth coord to camera coordinate\n            Input: (N,3) Output: (N,3)\n        '''", "\n", "# Project upright depth to depth coordinate", "\n", "pc2", "=", "np", ".", "dot", "(", "np", ".", "transpose", "(", "self", ".", "Rtilt", ")", ",", "np", ".", "transpose", "(", "pc", "[", ":", ",", "0", ":", "3", "]", ")", ")", "# (3,n)", "\n", "return", "flip_axis_to_camera", "(", "np", ".", "transpose", "(", "pc2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_image": [[109, 116], ["sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_camera", "numpy.dot", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_camera"], ["", "def", "project_upright_depth_to_image", "(", "self", ",", "pc", ")", ":", "\n", "        ", "''' Input: (N,3) Output: (N,2) UV and (N,) depth '''", "\n", "pc2", "=", "self", ".", "project_upright_depth_to_camera", "(", "pc", ")", "\n", "uv", "=", "np", ".", "dot", "(", "pc2", ",", "np", ".", "transpose", "(", "self", ".", "K", ")", ")", "# (n,3)", "\n", "uv", "[", ":", ",", "0", "]", "/=", "uv", "[", ":", ",", "2", "]", "\n", "uv", "[", ":", ",", "1", "]", "/=", "uv", "[", ":", ",", "2", "]", "\n", "return", "uv", "[", ":", ",", "0", ":", "2", "]", ",", "pc2", "[", ":", ",", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_upright_camera": [[117, 119], ["sunrgbd_utils.flip_axis_to_camera"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_camera"], ["", "def", "project_upright_depth_to_upright_camera", "(", "self", ",", "pc", ")", ":", "\n", "        ", "return", "flip_axis_to_camera", "(", "pc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_camera_to_upright_depth": [[120, 122], ["sunrgbd_utils.flip_axis_to_depth"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_depth"], ["", "def", "project_upright_camera_to_upright_depth", "(", "self", ",", "pc", ")", ":", "\n", "        ", "return", "flip_axis_to_depth", "(", "pc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_image_to_camera": [[123, 132], ["numpy.zeros"], "methods", ["None"], ["", "def", "project_image_to_camera", "(", "self", ",", "uv_depth", ")", ":", "\n", "        ", "n", "=", "uv_depth", ".", "shape", "[", "0", "]", "\n", "x", "=", "(", "(", "uv_depth", "[", ":", ",", "0", "]", "-", "self", ".", "c_u", ")", "*", "uv_depth", "[", ":", ",", "2", "]", ")", "/", "self", ".", "f_u", "\n", "y", "=", "(", "(", "uv_depth", "[", ":", ",", "1", "]", "-", "self", ".", "c_v", ")", "*", "uv_depth", "[", ":", ",", "2", "]", ")", "/", "self", ".", "f_v", "\n", "pts_3d_camera", "=", "np", ".", "zeros", "(", "(", "n", ",", "3", ")", ")", "\n", "pts_3d_camera", "[", ":", ",", "0", "]", "=", "x", "\n", "pts_3d_camera", "[", ":", ",", "1", "]", "=", "y", "\n", "pts_3d_camera", "[", ":", ",", "2", "]", "=", "uv_depth", "[", ":", ",", "2", "]", "\n", "return", "pts_3d_camera", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_image_to_upright_camerea": [[133, 138], ["sunrgbd_utils.SUNRGBD_Calibration.project_image_to_camera", "sunrgbd_utils.flip_axis_to_depth", "numpy.transpose", "sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_upright_camera", "numpy.dot", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_image_to_camera", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_depth", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_upright_camera"], ["", "def", "project_image_to_upright_camerea", "(", "self", ",", "uv_depth", ")", ":", "\n", "        ", "pts_3d_camera", "=", "self", ".", "project_image_to_camera", "(", "uv_depth", ")", "\n", "pts_3d_depth", "=", "flip_axis_to_depth", "(", "pts_3d_camera", ")", "\n", "pts_3d_upright_depth", "=", "np", ".", "transpose", "(", "np", ".", "dot", "(", "self", ".", "Rtilt", ",", "np", ".", "transpose", "(", "pts_3d_depth", ")", ")", ")", "\n", "return", "self", ".", "project_upright_depth_to_upright_camera", "(", "pts_3d_upright_depth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.flip_axis_to_camera": [[25, 33], ["numpy.copy"], "function", ["None"], ["def", "flip_axis_to_camera", "(", "pc", ")", ":", "\n", "    ", "''' Flip X-right,Y-forward,Z-up to X-right,Y-down,Z-forward\n        Input and output are both (N,3) array\n    '''", "\n", "pc2", "=", "np", ".", "copy", "(", "pc", ")", "\n", "pc2", "[", ":", ",", "[", "0", ",", "1", ",", "2", "]", "]", "=", "pc2", "[", ":", ",", "[", "0", ",", "2", ",", "1", "]", "]", "# cam X,Y,Z = depth X,-Z,Y", "\n", "pc2", "[", ":", ",", "1", "]", "*=", "-", "1", "\n", "return", "pc2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.flip_axis_to_depth": [[34, 39], ["numpy.copy"], "function", ["None"], ["", "def", "flip_axis_to_depth", "(", "pc", ")", ":", "\n", "    ", "pc2", "=", "np", ".", "copy", "(", "pc", ")", "\n", "pc2", "[", ":", ",", "[", "0", ",", "1", ",", "2", "]", "]", "=", "pc2", "[", ":", ",", "[", "0", ",", "2", ",", "1", "]", "]", "# depth X,Y,Z = cam X,Z,-Y", "\n", "pc2", "[", ":", ",", "2", "]", "*=", "-", "1", "\n", "return", "pc2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotx": [[141, 148], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "", "def", "rotx", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the x-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "1", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "c", ",", "-", "s", "]", ",", "\n", "[", "0", ",", "s", ",", "c", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.roty": [[150, 157], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "roty", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "0", ",", "s", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "-", "s", ",", "0", ",", "c", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz": [[159, 166], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "rotz", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the z-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "-", "s", ",", "0", "]", ",", "\n", "[", "s", ",", "c", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.transform_from_rot_trans": [[168, 173], ["R.reshape.reshape", "t.reshape.reshape", "numpy.vstack", "numpy.hstack"], "function", ["None"], ["", "def", "transform_from_rot_trans", "(", "R", ",", "t", ")", ":", "\n", "    ", "\"\"\"Transforation matrix from rotation matrix and translation vector.\"\"\"", "\n", "R", "=", "R", ".", "reshape", "(", "3", ",", "3", ")", "\n", "t", "=", "t", ".", "reshape", "(", "3", ",", "1", ")", "\n", "return", "np", ".", "vstack", "(", "(", "np", ".", "hstack", "(", "[", "R", ",", "t", "]", ")", ",", "[", "0", ",", "0", ",", "0", ",", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.inverse_rigid_trans": [[175, 183], ["numpy.zeros_like", "numpy.transpose", "numpy.dot", "numpy.transpose"], "function", ["None"], ["", "def", "inverse_rigid_trans", "(", "Tr", ")", ":", "\n", "    ", "\"\"\"Inverse a rigid body transform matrix (3x4 as [R|t])\n        [R'|-R't; 0|1]\n    \"\"\"", "\n", "inv_Tr", "=", "np", ".", "zeros_like", "(", "Tr", ")", "# 3x4", "\n", "inv_Tr", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "np", ".", "transpose", "(", "Tr", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", "\n", "inv_Tr", "[", "0", ":", "3", ",", "3", "]", "=", "np", ".", "dot", "(", "-", "np", ".", "transpose", "(", "Tr", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", ",", "Tr", "[", "0", ":", "3", ",", "3", "]", ")", "\n", "return", "inv_Tr", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.read_sunrgbd_label": [[184, 188], ["line.rstrip", "sunrgbd_utils.SUNObject3d", "open"], "function", ["None"], ["", "def", "read_sunrgbd_label", "(", "label_filename", ")", ":", "\n", "    ", "lines", "=", "[", "line", ".", "rstrip", "(", ")", "for", "line", "in", "open", "(", "label_filename", ")", "]", "\n", "objects", "=", "[", "SUNObject3d", "(", "line", ")", "for", "line", "in", "lines", "]", "\n", "return", "objects", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.load_image": [[189, 191], ["cv2.imread"], "function", ["None"], ["", "def", "load_image", "(", "img_filename", ")", ":", "\n", "    ", "return", "cv2", ".", "imread", "(", "img_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.load_depth_points": [[192, 195], ["numpy.loadtxt"], "function", ["None"], ["", "def", "load_depth_points", "(", "depth_filename", ")", ":", "\n", "    ", "depth", "=", "np", ".", "loadtxt", "(", "depth_filename", ")", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.load_depth_points_mat": [[196, 199], ["scipy.loadmat"], "function", ["None"], ["", "def", "load_depth_points_mat", "(", "depth_filename", ")", ":", "\n", "    ", "depth", "=", "sio", ".", "loadmat", "(", "depth_filename", ")", "[", "'instance'", "]", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.random_shift_box2d": [[200, 214], ["numpy.array", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random"], "function", ["None"], ["", "def", "random_shift_box2d", "(", "box2d", ",", "shift_ratio", "=", "0.1", ")", ":", "\n", "    ", "''' Randomly shift box center, randomly scale width and height \n    '''", "\n", "r", "=", "shift_ratio", "\n", "xmin", ",", "ymin", ",", "xmax", ",", "ymax", "=", "box2d", "\n", "h", "=", "ymax", "-", "ymin", "\n", "w", "=", "xmax", "-", "xmin", "\n", "cx", "=", "(", "xmin", "+", "xmax", ")", "/", "2.0", "\n", "cy", "=", "(", "ymin", "+", "ymax", ")", "/", "2.0", "\n", "cx2", "=", "cx", "+", "w", "*", "r", "*", "(", "np", ".", "random", ".", "random", "(", ")", "*", "2", "-", "1", ")", "\n", "cy2", "=", "cy", "+", "h", "*", "r", "*", "(", "np", ".", "random", ".", "random", "(", ")", "*", "2", "-", "1", ")", "\n", "h2", "=", "h", "*", "(", "1", "+", "np", ".", "random", ".", "random", "(", ")", "*", "2", "*", "r", "-", "r", ")", "# 0.9 to 1.1", "\n", "w2", "=", "w", "*", "(", "1", "+", "np", ".", "random", ".", "random", "(", ")", "*", "2", "*", "r", "-", "r", ")", "# 0.9 to 1.1", "\n", "return", "np", ".", "array", "(", "[", "cx2", "-", "w2", "/", "2.0", ",", "cy2", "-", "h2", "/", "2.0", ",", "cx2", "+", "w2", "/", "2.0", ",", "cy2", "+", "h2", "/", "2.0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.in_hull": [[215, 220], ["isinstance", "Delaunay", "Delaunay.find_simplex"], "function", ["None"], ["", "def", "in_hull", "(", "p", ",", "hull", ")", ":", "\n", "    ", "from", "scipy", ".", "spatial", "import", "Delaunay", "\n", "if", "not", "isinstance", "(", "hull", ",", "Delaunay", ")", ":", "\n", "        ", "hull", "=", "Delaunay", "(", "hull", ")", "\n", "", "return", "hull", ".", "find_simplex", "(", "p", ")", ">=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.extract_pc_in_box3d": [[221, 225], ["sunrgbd_utils.in_hull"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.in_hull"], ["", "def", "extract_pc_in_box3d", "(", "pc", ",", "box3d", ")", ":", "\n", "    ", "''' pc: (N,3), box3d: (8,3) '''", "\n", "box3d_roi_inds", "=", "in_hull", "(", "pc", "[", ":", ",", "0", ":", "3", "]", ",", "box3d", ")", "\n", "return", "pc", "[", "box3d_roi_inds", ",", ":", "]", ",", "box3d_roi_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.my_compute_box_3d": [[227, 238], ["sunrgbd_utils.rotz", "numpy.dot", "numpy.transpose", "numpy.vstack"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz"], ["", "def", "my_compute_box_3d", "(", "center", ",", "size", ",", "heading_angle", ")", ":", "\n", "    ", "R", "=", "rotz", "(", "-", "1", "*", "heading_angle", ")", "\n", "l", ",", "w", ",", "h", "=", "size", "\n", "x_corners", "=", "[", "-", "l", ",", "l", ",", "l", ",", "-", "l", ",", "-", "l", ",", "l", ",", "l", ",", "-", "l", "]", "\n", "y_corners", "=", "[", "w", ",", "w", ",", "-", "w", ",", "-", "w", ",", "w", ",", "w", ",", "-", "w", ",", "-", "w", "]", "\n", "z_corners", "=", "[", "h", ",", "h", ",", "h", ",", "h", ",", "-", "h", ",", "-", "h", ",", "-", "h", ",", "-", "h", "]", "\n", "corners_3d", "=", "np", ".", "dot", "(", "R", ",", "np", ".", "vstack", "(", "[", "x_corners", ",", "y_corners", ",", "z_corners", "]", ")", ")", "\n", "corners_3d", "[", "0", ",", ":", "]", "+=", "center", "[", "0", "]", "\n", "corners_3d", "[", "1", ",", ":", "]", "+=", "center", "[", "1", "]", "\n", "corners_3d", "[", "2", ",", ":", "]", "+=", "center", "[", "2", "]", "\n", "return", "np", ".", "transpose", "(", "corners_3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.compute_box_3d": [[240, 272], ["sunrgbd_utils.rotz", "numpy.dot", "calib.project_upright_depth_to_image", "numpy.vstack", "numpy.transpose", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.rotz", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_image"], ["", "def", "compute_box_3d", "(", "obj", ",", "calib", ")", ":", "\n", "    ", "''' Takes an object and a projection matrix (P) and projects the 3d\n        bounding box into the image plane.\n        Returns:\n            corners_2d: (8,2) array in image coord.\n            corners_3d: (8,3) array in in upright depth coord.\n    '''", "\n", "center", "=", "obj", ".", "centroid", "\n", "\n", "# compute rotational matrix around yaw axis", "\n", "R", "=", "rotz", "(", "-", "1", "*", "obj", ".", "heading_angle", ")", "\n", "#b,a,c = dimension", "\n", "#print R, a,b,c", "\n", "\n", "# 3d bounding box dimensions", "\n", "l", "=", "obj", ".", "l", "# along heading arrow", "\n", "w", "=", "obj", ".", "w", "# perpendicular to heading arrow", "\n", "h", "=", "obj", ".", "h", "\n", "\n", "# rotate and translate 3d bounding box", "\n", "x_corners", "=", "[", "-", "l", ",", "l", ",", "l", ",", "-", "l", ",", "-", "l", ",", "l", ",", "l", ",", "-", "l", "]", "\n", "y_corners", "=", "[", "w", ",", "w", ",", "-", "w", ",", "-", "w", ",", "w", ",", "w", ",", "-", "w", ",", "-", "w", "]", "\n", "z_corners", "=", "[", "h", ",", "h", ",", "h", ",", "h", ",", "-", "h", ",", "-", "h", ",", "-", "h", ",", "-", "h", "]", "\n", "corners_3d", "=", "np", ".", "dot", "(", "R", ",", "np", ".", "vstack", "(", "[", "x_corners", ",", "y_corners", ",", "z_corners", "]", ")", ")", "\n", "corners_3d", "[", "0", ",", ":", "]", "+=", "center", "[", "0", "]", "\n", "corners_3d", "[", "1", ",", ":", "]", "+=", "center", "[", "1", "]", "\n", "corners_3d", "[", "2", ",", ":", "]", "+=", "center", "[", "2", "]", "\n", "\n", "# project the 3d bounding box into the image plane", "\n", "corners_2d", ",", "_", "=", "calib", ".", "project_upright_depth_to_image", "(", "np", ".", "transpose", "(", "corners_3d", ")", ")", "\n", "#print 'corners_2d: ', corners_2d", "\n", "return", "corners_2d", ",", "np", ".", "transpose", "(", "corners_3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.compute_orientation_3d": [[273, 292], ["numpy.array", "calib.project_upright_depth_to_image", "numpy.transpose", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_image"], ["", "def", "compute_orientation_3d", "(", "obj", ",", "calib", ")", ":", "\n", "    ", "''' Takes an object and a projection matrix (P) and projects the 3d\n        object orientation vector into the image plane.\n        Returns:\n            orientation_2d: (2,2) array in image coord.\n            orientation_3d: (2,3) array in depth coord.\n    '''", "\n", "\n", "# orientation in object coordinate system", "\n", "ori", "=", "obj", ".", "orientation", "\n", "orientation_3d", "=", "np", ".", "array", "(", "[", "[", "0", ",", "ori", "[", "0", "]", "]", ",", "[", "0", ",", "ori", "[", "1", "]", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "center", "=", "obj", ".", "centroid", "\n", "orientation_3d", "[", "0", ",", ":", "]", "=", "orientation_3d", "[", "0", ",", ":", "]", "+", "center", "[", "0", "]", "\n", "orientation_3d", "[", "1", ",", ":", "]", "=", "orientation_3d", "[", "1", ",", ":", "]", "+", "center", "[", "1", "]", "\n", "orientation_3d", "[", "2", ",", ":", "]", "=", "orientation_3d", "[", "2", ",", ":", "]", "+", "center", "[", "2", "]", "\n", "\n", "# project orientation into the image plane", "\n", "orientation_2d", ",", "_", "=", "calib", ".", "project_upright_depth_to_image", "(", "np", ".", "transpose", "(", "orientation_3d", ")", ")", "\n", "return", "orientation_2d", ",", "np", ".", "transpose", "(", "orientation_3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.draw_projected_box3d": [[293, 316], ["qs.astype.astype", "range", "cv2.line", "cv2.line", "cv2.line"], "function", ["None"], ["", "def", "draw_projected_box3d", "(", "image", ",", "qs", ",", "color", "=", "(", "255", ",", "255", ",", "255", ")", ",", "thickness", "=", "2", ")", ":", "\n", "    ", "''' Draw 3d bounding box in image\n        qs: (8,2) array of vertices for the 3d box in following order:\n            1 -------- 0\n           /|         /|\n          2 -------- 3 .\n          | |        | |\n          . 5 -------- 4\n          |/         |/\n          6 -------- 7\n    '''", "\n", "qs", "=", "qs", ".", "astype", "(", "np", ".", "int32", ")", "\n", "for", "k", "in", "range", "(", "0", ",", "4", ")", ":", "\n", "#http://docs.enthought.com/mayavi/mayavi/auto/mlab_helper_functions.html", "\n", "       ", "i", ",", "j", "=", "k", ",", "(", "k", "+", "1", ")", "%", "4", "\n", "cv2", ".", "line", "(", "image", ",", "(", "qs", "[", "i", ",", "0", "]", ",", "qs", "[", "i", ",", "1", "]", ")", ",", "(", "qs", "[", "j", ",", "0", "]", ",", "qs", "[", "j", ",", "1", "]", ")", ",", "color", ",", "thickness", ",", "cv2", ".", "CV_AA", ")", "# use LINE_AA for opencv3", "\n", "\n", "i", ",", "j", "=", "k", "+", "4", ",", "(", "k", "+", "1", ")", "%", "4", "+", "4", "\n", "cv2", ".", "line", "(", "image", ",", "(", "qs", "[", "i", ",", "0", "]", ",", "qs", "[", "i", ",", "1", "]", ")", ",", "(", "qs", "[", "j", ",", "0", "]", ",", "qs", "[", "j", ",", "1", "]", ")", ",", "color", ",", "thickness", ",", "cv2", ".", "CV_AA", ")", "\n", "\n", "i", ",", "j", "=", "k", ",", "k", "+", "4", "\n", "cv2", ".", "line", "(", "image", ",", "(", "qs", "[", "i", ",", "0", "]", ",", "qs", "[", "i", ",", "1", "]", ")", ",", "(", "qs", "[", "j", ",", "0", "]", ",", "qs", "[", "j", ",", "1", "]", ")", ",", "color", ",", "thickness", ",", "cv2", ".", "CV_AA", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.draw_boxes3d_in_point_cloud": [[318, 352], ["len", "range", "range", "mayavi.mlab.text3d", "mayavi.mlab.plot3d", "mayavi.mlab.plot3d", "mayavi.mlab.plot3d"], "function", ["None"], ["", "def", "draw_boxes3d_in_point_cloud", "(", "gt_boxes3d", ",", "fig", ",", "color", "=", "(", "1", ",", "1", ",", "1", ")", ",", "line_width", "=", "1", ",", "draw_text", "=", "True", ",", "text_scale", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "color_list", "=", "None", ")", ":", "\n", "    ", "''' Draw 3D bounding boxes\n    Args:\n        gt_boxes3d: numpy array (n,8,3) for XYZs of the box corners\n        fig: mayavi figure handler\n        color: RGB value tuple in range (0,1), box line color\n        line_width: box line width\n        draw_text: boolean, if true, write box indices beside boxes\n        text_scale: three number tuple\n        color_list: a list of RGB tuple, if not None, overwrite color.\n    Returns:\n        fig: updated fig\n    '''", "\n", "num", "=", "len", "(", "gt_boxes3d", ")", "\n", "for", "n", "in", "range", "(", "num", ")", ":", "\n", "        ", "b", "=", "gt_boxes3d", "[", "n", "]", "\n", "if", "color_list", "is", "not", "None", ":", "\n", "            ", "color", "=", "color_list", "[", "n", "]", "\n", "", "if", "draw_text", ":", "mlab", ".", "text3d", "(", "b", "[", "4", ",", "0", "]", ",", "b", "[", "4", ",", "1", "]", ",", "b", "[", "4", ",", "2", "]", ",", "'%d'", "%", "n", ",", "scale", "=", "text_scale", ",", "color", "=", "color", ",", "figure", "=", "fig", ")", "\n", "for", "k", "in", "range", "(", "0", ",", "4", ")", ":", "\n", "# http://docs.enthought.com/mayavi/mayavi/auto/mlab_helper_functions.html", "\n", "            ", "i", ",", "j", "=", "k", ",", "(", "k", "+", "1", ")", "%", "4", "\n", "mlab", ".", "plot3d", "(", "[", "b", "[", "i", ",", "0", "]", ",", "b", "[", "j", ",", "0", "]", "]", ",", "[", "b", "[", "i", ",", "1", "]", ",", "b", "[", "j", ",", "1", "]", "]", ",", "[", "b", "[", "i", ",", "2", "]", ",", "b", "[", "j", ",", "2", "]", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "None", ",", "\n", "line_width", "=", "line_width", ",", "figure", "=", "fig", ")", "\n", "\n", "i", ",", "j", "=", "k", "+", "4", ",", "(", "k", "+", "1", ")", "%", "4", "+", "4", "\n", "mlab", ".", "plot3d", "(", "[", "b", "[", "i", ",", "0", "]", ",", "b", "[", "j", ",", "0", "]", "]", ",", "[", "b", "[", "i", ",", "1", "]", ",", "b", "[", "j", ",", "1", "]", "]", ",", "[", "b", "[", "i", ",", "2", "]", ",", "b", "[", "j", ",", "2", "]", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "None", ",", "\n", "line_width", "=", "line_width", ",", "figure", "=", "fig", ")", "\n", "\n", "i", ",", "j", "=", "k", ",", "k", "+", "4", "\n", "mlab", ".", "plot3d", "(", "[", "b", "[", "i", ",", "0", "]", ",", "b", "[", "j", ",", "0", "]", "]", ",", "[", "b", "[", "i", ",", "1", "]", ",", "b", "[", "j", ",", "1", "]", "]", ",", "[", "b", "[", "i", ",", "2", "]", ",", "b", "[", "j", ",", "2", "]", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "None", ",", "\n", "line_width", "=", "line_width", ",", "figure", "=", "fig", ")", "\n", "", "", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.save_zipped_pickle": [[357, 360], ["gzip.open", "pickle.dump"], "function", ["None"], ["def", "save_zipped_pickle", "(", "obj", ",", "filename", ",", "protocol", "=", "-", "1", ")", ":", "\n", "    ", "with", "gzip", ".", "open", "(", "filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "obj", ",", "f", ",", "protocol", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.load_zipped_pickle": [[361, 365], ["gzip.open", "pickle.load"], "function", ["None"], ["", "", "def", "load_zipped_pickle", "(", "filename", ")", ":", "\n", "    ", "with", "gzip", ".", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "loaded_object", "=", "pickle", ".", "load", "(", "f", ")", "\n", "return", "loaded_object", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.OpenPCDet.setup.get_git_commit_number": [[8, 15], ["subprocess.run", "os.path.exists", "subprocess.run.stdout.decode"], "function", ["None"], ["def", "get_git_commit_number", "(", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "'.git'", ")", ":", "\n", "        ", "return", "'0000000'", "\n", "\n", "", "cmd_out", "=", "subprocess", ".", "run", "(", "[", "'git'", ",", "'rev-parse'", ",", "'HEAD'", "]", ",", "stdout", "=", "subprocess", ".", "PIPE", ")", "\n", "git_commit_number", "=", "cmd_out", ".", "stdout", ".", "decode", "(", "'utf-8'", ")", "[", ":", "7", "]", "\n", "return", "git_commit_number", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.OpenPCDet.setup.make_cuda_ext": [[17, 23], ["torch.utils.cpp_extension.CUDAExtension", "os.path.join", "module.split"], "function", ["None"], ["", "def", "make_cuda_ext", "(", "name", ",", "module", ",", "sources", ")", ":", "\n", "    ", "cuda_ext", "=", "CUDAExtension", "(", "\n", "name", "=", "'%s.%s'", "%", "(", "module", ",", "name", ")", ",", "\n", "sources", "=", "[", "os", ".", "path", ".", "join", "(", "*", "module", ".", "split", "(", "'.'", ")", ",", "src", ")", "for", "src", "in", "sources", "]", "\n", ")", "\n", "return", "cuda_ext", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.OpenPCDet.setup.write_version_to_file": [[25, 28], ["open", "print"], "function", ["None"], ["", "def", "write_version_to_file", "(", "version", ",", "target_file", ")", ":", "\n", "    ", "with", "open", "(", "target_file", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "print", "(", "'__version__ = \"%s\"'", "%", "version", ",", "file", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.demo.DemoDataset.__init__": [[17, 35], ["pcdet.datasets.DatasetTemplate.__init__", "data_file_list.sort", "demo.DemoDataset.root_path.is_dir", "glob.glob", "str"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", ",", "class_names", ",", "training", "=", "True", ",", "root_path", "=", "None", ",", "logger", "=", "None", ",", "ext", "=", "'.bin'", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            root_path:\n            dataset_cfg:\n            class_names:\n            training:\n            logger:\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "dataset_cfg", "=", "dataset_cfg", ",", "class_names", "=", "class_names", ",", "training", "=", "training", ",", "root_path", "=", "root_path", ",", "logger", "=", "logger", "\n", ")", "\n", "self", ".", "root_path", "=", "root_path", "\n", "self", ".", "ext", "=", "ext", "\n", "data_file_list", "=", "glob", ".", "glob", "(", "str", "(", "root_path", "/", "f'*{self.ext}'", ")", ")", "if", "self", ".", "root_path", ".", "is_dir", "(", ")", "else", "[", "self", ".", "root_path", "]", "\n", "\n", "data_file_list", ".", "sort", "(", ")", "\n", "self", ".", "sample_file_list", "=", "data_file_list", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.demo.DemoDataset.__len__": [[36, 38], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "sample_file_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.demo.DemoDataset.__getitem__": [[39, 54], ["demo.DemoDataset.prepare_data", "numpy.fromfile().reshape", "numpy.load", "numpy.fromfile"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.prepare_data"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "ext", "==", "'.bin'", ":", "\n", "            ", "points", "=", "np", ".", "fromfile", "(", "self", ".", "sample_file_list", "[", "index", "]", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "", "elif", "self", ".", "ext", "==", "'.npy'", ":", "\n", "            ", "points", "=", "np", ".", "load", "(", "self", ".", "sample_file_list", "[", "index", "]", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "input_dict", "=", "{", "\n", "'points'", ":", "points", ",", "\n", "'frame_id'", ":", "index", ",", "\n", "}", "\n", "\n", "data_dict", "=", "self", ".", "prepare_data", "(", "data_dict", "=", "input_dict", ")", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.demo.parse_config": [[56, 70], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pcdet.config.cfg_from_yaml_file"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.cfg_from_yaml_file"], ["", "", "def", "parse_config", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'arg parser'", ")", "\n", "parser", ".", "add_argument", "(", "'--cfg_file'", ",", "type", "=", "str", ",", "default", "=", "'cfgs/kitti_models/second.yaml'", ",", "\n", "help", "=", "'specify the config for demo'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_path'", ",", "type", "=", "str", ",", "default", "=", "'demo_data'", ",", "\n", "help", "=", "'specify the point cloud data file or directory'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'specify the pretrained model'", ")", "\n", "parser", ".", "add_argument", "(", "'--ext'", ",", "type", "=", "str", ",", "default", "=", "'.bin'", ",", "help", "=", "'specify the extension of your point cloud data file'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "cfg_from_yaml_file", "(", "args", ".", "cfg_file", ",", "cfg", ")", "\n", "\n", "return", "args", ",", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.demo.main": [[72, 100], ["demo.parse_config", "pcdet.utils.common_utils.create_logger", "common_utils.create_logger.info", "demo.DemoDataset", "common_utils.create_logger.info", "pcdet.models.build_network", "pcdet.models.build_network.load_params_from_file", "pcdet.models.build_network.cuda", "pcdet.models.build_network.eval", "common_utils.create_logger.info", "torch.no_grad", "enumerate", "pathlib.Path", "len", "common_utils.create_logger.info", "DemoDataset.collate_batch", "pcdet.models.load_data_to_gpu", "pcdet.models.build_network.forward", "visual_utils.visualize_utils.draw_scenes", "mayavi.show", "len"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.parse_config", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.create_logger", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.build_network", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.load_params_from_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.collate_batch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.load_data_to_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_scenes"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", ",", "cfg", "=", "parse_config", "(", ")", "\n", "logger", "=", "common_utils", ".", "create_logger", "(", ")", "\n", "logger", ".", "info", "(", "'-----------------Quick Demo of OpenPCDet-------------------------'", ")", "\n", "demo_dataset", "=", "DemoDataset", "(", "\n", "dataset_cfg", "=", "cfg", ".", "DATA_CONFIG", ",", "class_names", "=", "cfg", ".", "CLASS_NAMES", ",", "training", "=", "False", ",", "\n", "root_path", "=", "Path", "(", "args", ".", "data_path", ")", ",", "ext", "=", "args", ".", "ext", ",", "logger", "=", "logger", "\n", ")", "\n", "logger", ".", "info", "(", "f'Total number of samples: \\t{len(demo_dataset)}'", ")", "\n", "\n", "model", "=", "build_network", "(", "model_cfg", "=", "cfg", ".", "MODEL", ",", "num_class", "=", "len", "(", "cfg", ".", "CLASS_NAMES", ")", ",", "dataset", "=", "demo_dataset", ")", "\n", "model", ".", "load_params_from_file", "(", "filename", "=", "args", ".", "ckpt", ",", "logger", "=", "logger", ",", "to_cpu", "=", "True", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "idx", ",", "data_dict", "in", "enumerate", "(", "demo_dataset", ")", ":", "\n", "            ", "logger", ".", "info", "(", "f'Visualized sample index: \\t{idx + 1}'", ")", "\n", "data_dict", "=", "demo_dataset", ".", "collate_batch", "(", "[", "data_dict", "]", ")", "\n", "load_data_to_gpu", "(", "data_dict", ")", "\n", "pred_dicts", ",", "_", "=", "model", ".", "forward", "(", "data_dict", ")", "\n", "\n", "V", ".", "draw_scenes", "(", "\n", "points", "=", "data_dict", "[", "'points'", "]", "[", ":", ",", "1", ":", "]", ",", "ref_boxes", "=", "pred_dicts", "[", "0", "]", "[", "'pred_boxes'", "]", ",", "\n", "ref_scores", "=", "pred_dicts", "[", "0", "]", "[", "'pred_scores'", "]", ",", "ref_labels", "=", "pred_dicts", "[", "0", "]", "[", "'pred_labels'", "]", "\n", ")", "\n", "mlab", ".", "show", "(", "stop", "=", "True", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "'Demo done.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.train.parse_config": [[21, 56], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pcdet.config.cfg_from_yaml_file", "pathlib.Path", "pcdet.config.cfg_from_list", "parser.parse_args.cfg_file.split"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.cfg_from_yaml_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.cfg_from_list"], ["sys", ".", "path", ".", "append", "(", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'utils'", ")", ")", "\n", "sys", ".", "path", ".", "append", "(", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'pointnet2'", ")", ")", "\n", "sys", ".", "path", ".", "append", "(", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'models'", ")", ")", "\n", "from", "pointnet2", ".", "pytorch_utils", "import", "BNMomentumScheduler", "\n", "from", "utils", ".", "tf_visualizer", "import", "Visualizer", "as", "TfVisualizer", "\n", "from", "models", ".", "ap_helper", "import", "APCalculator", ",", "parse_predictions", ",", "parse_groundtruths", "\n", "from", "models", ".", "loss_helper_labeled", "import", "get_labeled_loss", "\n", "from", "models", ".", "loss_helper_unlabeled", "import", "get_unlabeled_loss", "\n", "from", "models", ".", "loss_helper", "import", "get_loss", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "default", "=", "'votenet'", ",", "help", "=", "'Model file name.'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "'scannet'", ",", "help", "=", "'Dataset name. sunrgbd or scannet.'", ")", "\n", "parser", ".", "add_argument", "(", "'--labeled_sample_list'", ",", "default", "=", "'scannetv2_train.txt'", ",", "\n", "help", "=", "'Labeled sample list from a certain percentage of training [static]'", ")", "\n", "parser", ".", "add_argument", "(", "'--detector_checkpoint'", ",", "default", "=", "'none'", ")", "\n", "parser", ".", "add_argument", "(", "'--log_dir'", ",", "default", "=", "'./temp'", ",", "help", "=", "'Dump dir to save model checkpoint'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_point'", ",", "type", "=", "int", ",", "default", "=", "40000", ",", "help", "=", "'Point Number'", ")", "\n", "parser", ".", "add_argument", "(", "'--no_height'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Do NOT use height signal in Votenet input.'", ")", "\n", "parser", ".", "add_argument", "(", "'--use_color'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Use RGB color in Votenet input.'", ")", "\n", "parser", ".", "add_argument", "(", "'--use_sunrgbd_v2'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Use V2 box labels for SUN RGB-D dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_target'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'Proposal number'", ")", "\n", "parser", ".", "add_argument", "(", "'--vote_factor'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'Vote factor'", ")", "\n", "parser", ".", "add_argument", "(", "'--cluster_sampling'", ",", "default", "=", "'seed_fps'", ",", "\n", "help", "=", "'Sampling strategy for vote clusters: vote_fps, seed_fps, random'", ")", "\n", "parser", ".", "add_argument", "(", "'--ap_iou_thresh'", ",", "type", "=", "float", ",", "default", "=", "0.25", ",", "help", "=", "'AP IoU threshold'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_epoch'", ",", "type", "=", "int", ",", "default", "=", "1001", ",", "help", "=", "'Epoch to run'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "default", "=", "'4,8'", ",", "help", "=", "'Batch Size during training, labeled + unlabeled'", ")", "\n", "parser", ".", "add_argument", "(", "'--learning_rate'", ",", "type", "=", "float", ",", "default", "=", "0.002", ",", "help", "=", "'Initial learning rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_decay'", ",", "type", "=", "float", ",", "default", "=", "0", ",", "help", "=", "'Optimization L2 weight decay'", ")", "\n", "parser", ".", "add_argument", "(", "'--bn_decay_step'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "help", "=", "'Period of BN decay (in epochs)'", ")", "\n", "parser", ".", "add_argument", "(", "'--bn_decay_rate'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "'Decay rate for BN decay'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_decay_steps'", ",", "default", "=", "'400, 600, 800, 900'", ",", "\n", "help", "=", "'When to decay the learning rate (in epochs)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_decay_rates'", ",", "default", "=", "'0.3, 0.3, 0.1, 0.1'", ",", "\n", "help", "=", "'Decay rates for lr decay'", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.train.main": [[58, 195], ["train.parse_config", "output_dir.mkdir", "ckpt_dir.mkdir", "pcdet.utils.common_utils.create_logger", "common_utils.create_logger.info", "common_utils.create_logger.info", "vars().items", "pcdet.config.log_config_to_file", "pcdet.datasets.build_dataloader", "pcdet.models.build_network", "nn.parallel.DistributedDataParallel.cuda", "train_utils.optimization.build_optimizer", "nn.parallel.DistributedDataParallel.train", "common_utils.create_logger.info", "train_utils.optimization.build_scheduler", "common_utils.create_logger.info", "train_utils.train_utils.train_model", "common_utils.create_logger.info", "common_utils.create_logger.info", "pcdet.datasets.build_dataloader", "eval_output_dir.mkdir", "max", "test.repeat_eval_ckpt", "common_utils.create_logger.info", "pcdet.utils.common_utils.set_random_seed", "common_utils.create_logger.info", "common_utils.create_logger.info", "os.system", "tensorboardX.SummaryWriter", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "nn.parallel.DistributedDataParallel.load_params_from_file", "nn.parallel.DistributedDataParallel.load_params_with_optimizer", "glob.glob", "torch.parallel.DistributedDataParallel", "getattr", "datetime.datetime.now().strftime", "os.environ.keys", "vars", "len", "str", "len", "glob.glob.sort", "nn.parallel.DistributedDataParallel.load_params_with_optimizer", "len", "pcdet.models.model_fn_decorator", "str", "datetime.datetime.now", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.parse_config", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.create_logger", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.log_config_to_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.__init__.build_dataloader", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.build_network", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.__init__.build_optimizer", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.train", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.__init__.build_scheduler", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.train_model", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.__init__.build_dataloader", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.repeat_eval_ckpt", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.set_random_seed", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.load_params_from_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.load_params_with_optimizer", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.load_params_with_optimizer", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.model_fn_decorator"], ["help", "=", "'ema variable decay rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--unlabeled_loss_weight'", ",", "type", "=", "float", ",", "default", "=", "2.0", ",", "metavar", "=", "'WEIGHT'", ",", "\n", "help", "=", "'use unlabeled loss with given weight'", ")", "\n", "parser", ".", "add_argument", "(", "'--use_iou_for_nms'", ",", "action", "=", "'store_true'", ",", "help", "=", "'whether use iou to guide test-time nms'", ")", "\n", "parser", ".", "add_argument", "(", "'--print_interval'", ",", "type", "=", "int", ",", "default", "=", "25", ",", "help", "=", "'batch interval to print loss'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_interval'", ",", "type", "=", "int", ",", "default", "=", "25", ",", "help", "=", "'epoch interval to evaluate model'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_interval'", ",", "type", "=", "int", ",", "default", "=", "200", ",", "help", "=", "'epoch interval to save model'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "action", "=", "'store_true'", ",", "help", "=", "'resume training instead of just loading a pre-train model'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--conf_thresh'", ",", "type", "=", "float", ",", "default", "=", "0.05", ")", "\n", "parser", ".", "add_argument", "(", "'--view_stats'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--opt_rate'", ",", "type", "=", "float", ",", "default", "=", "5e-4", ",", "help", "=", "'Optimization rate for eval with opt'", ")", "\n", "parser", ".", "add_argument", "(", "'--opt_step'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'Optimization step for eval with opt'", ")", "\n", "FLAGS", "=", "parser", ".", "parse_args", "(", ")", "\n", "print", "(", "FLAGS", ")", "\n", "\n", "# ------------------------------------------------------------------------- GLOBAL CONFIG BEG", "\n", "print", "(", "'\\n************************** GLOBAL CONFIG BEG **************************'", ")", "\n", "batch_size_list", "=", "[", "int", "(", "x", ")", "for", "x", "in", "FLAGS", ".", "batch_size", ".", "split", "(", "','", ")", "]", "\n", "BATCH_SIZE", "=", "batch_size_list", "[", "0", "]", "+", "batch_size_list", "[", "1", "]", "\n", "NUM_POINT", "=", "FLAGS", ".", "num_point", "\n", "MAX_EPOCH", "=", "FLAGS", ".", "max_epoch", "\n", "BASE_LEARNING_RATE", "=", "FLAGS", ".", "learning_rate", "\n", "BN_DECAY_STEP", "=", "FLAGS", ".", "bn_decay_step", "\n", "BN_DECAY_RATE", "=", "FLAGS", ".", "bn_decay_rate", "\n", "LR_DECAY_STEPS", "=", "[", "int", "(", "x", ")", "for", "x", "in", "FLAGS", ".", "lr_decay_steps", ".", "split", "(", "','", ")", "]", "\n", "LR_DECAY_RATES", "=", "[", "float", "(", "x", ")", "for", "x", "in", "FLAGS", ".", "lr_decay_rates", ".", "split", "(", "','", ")", "]", "\n", "assert", "(", "len", "(", "LR_DECAY_STEPS", ")", "==", "len", "(", "LR_DECAY_RATES", ")", ")", "\n", "\n", "LOG_DIR", "=", "FLAGS", ".", "log_dir", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "LOG_DIR", ")", ":", "\n", "    ", "os", ".", "mkdir", "(", "LOG_DIR", ")", "\n", "\n", "", "LOG_FOUT", "=", "open", "(", "os", ".", "path", ".", "join", "(", "LOG_DIR", ",", "'log_train.txt'", ")", ",", "'a'", ")", "\n", "LOG_FOUT", ".", "write", "(", "str", "(", "FLAGS", ")", "+", "'\\n'", ")", "\n", "if", "not", "FLAGS", ".", "eval", ":", "\n", "    ", "PERFORMANCE_FOUT", "=", "open", "(", "os", ".", "path", ".", "join", "(", "LOG_DIR", ",", "'best.txt'", ")", ",", "'w'", ")", "\n", "\n", "\n", "", "def", "log_string", "(", "out_str", ")", ":", "\n", "    ", "LOG_FOUT", ".", "write", "(", "out_str", "+", "'\\n'", ")", "\n", "LOG_FOUT", ".", "flush", "(", ")", "\n", "print", "(", "out_str", ")", "\n", "\n", "\n", "", "def", "my_worker_init_fn", "(", "worker_id", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "np", ".", "random", ".", "get_state", "(", ")", "[", "1", "]", "[", "0", "]", "+", "worker_id", ")", "\n", "\n", "\n", "# Init datasets and dataloaders", "\n", "", "if", "FLAGS", ".", "dataset", "==", "'sunrgbd'", ":", "\n", "    ", "sys", ".", "path", ".", "append", "(", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd'", ")", ")", "\n", "from", "sunrgbd", ".", "sunrgbd_detection_dataset", "import", "SunrgbdDetectionVotesDataset", "\n", "from", "sunrgbd", ".", "sunrgbd_ssl_dataset", "import", "SunrgbdSSLLabeledDataset", ",", "SunrgbdSSLUnlabeledDataset", "\n", "from", "sunrgbd", ".", "model_util_sunrgbd", "import", "SunrgbdDatasetConfig", "\n", "DATASET_CONFIG", "=", "SunrgbdDatasetConfig", "(", ")", "\n", "LABELED_DATASET", "=", "SunrgbdSSLLabeledDataset", "(", "labeled_sample_list", "=", "FLAGS", ".", "labeled_sample_list", ",", "\n", "num_points", "=", "NUM_POINT", ",", "\n", "augment", "=", "True", ",", "\n", "use_color", "=", "FLAGS", ".", "use_color", ",", "\n", "use_height", "=", "(", "not", "FLAGS", ".", "no_height", ")", ",", "\n", "use_v1", "=", "(", "not", "FLAGS", ".", "use_sunrgbd_v2", ")", ")", "\n", "UNLABELED_DATASET", "=", "SunrgbdSSLUnlabeledDataset", "(", "labeled_sample_list", "=", "FLAGS", ".", "labeled_sample_list", ",", "\n", "num_points", "=", "NUM_POINT", ",", "\n", "use_color", "=", "FLAGS", ".", "use_color", ",", "\n", "use_height", "=", "(", "not", "FLAGS", ".", "no_height", ")", ",", "\n", "use_v1", "=", "(", "not", "FLAGS", ".", "use_sunrgbd_v2", ")", ",", "\n", "load_labels", "=", "FLAGS", ".", "view_stats", ",", "\n", "augment", "=", "True", ")", "\n", "TEST_DATASET", "=", "SunrgbdDetectionVotesDataset", "(", "'val'", ",", "\n", "num_points", "=", "NUM_POINT", ",", "augment", "=", "False", ",", "\n", "use_color", "=", "FLAGS", ".", "use_color", ",", "use_height", "=", "(", "not", "FLAGS", ".", "no_height", ")", ",", "\n", "use_v1", "=", "(", "not", "FLAGS", ".", "use_sunrgbd_v2", ")", ")", "\n", "", "elif", "FLAGS", ".", "dataset", "==", "'scannet'", ":", "\n", "    ", "sys", ".", "path", ".", "append", "(", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet'", ")", ")", "\n", "from", "scannet", ".", "scannet_detection_dataset", "import", "ScannetDetectionDataset", "\n", "from", "scannet", ".", "scannet_ssl_dataset", "import", "ScannetSSLLabeledDataset", ",", "ScannetSSLUnlabeledDataset", "\n", "from", "scannet", ".", "model_util_scannet", "import", "ScannetDatasetConfig", "\n", "DATASET_CONFIG", "=", "ScannetDatasetConfig", "(", ")", "\n", "LABELED_DATASET", "=", "ScannetSSLLabeledDataset", "(", "labeled_sample_list", "=", "FLAGS", ".", "labeled_sample_list", ",", "\n", "num_points", "=", "NUM_POINT", ",", "\n", "augment", "=", "True", ",", "\n", "use_color", "=", "FLAGS", ".", "use_color", ",", "\n", "use_height", "=", "(", "not", "FLAGS", ".", "no_height", ")", ")", "\n", "UNLABELED_DATASET", "=", "ScannetSSLUnlabeledDataset", "(", "labeled_sample_list", "=", "FLAGS", ".", "labeled_sample_list", ",", "\n", "num_points", "=", "NUM_POINT", ",", "\n", "use_color", "=", "FLAGS", ".", "use_color", ",", "\n", "use_height", "=", "(", "not", "FLAGS", ".", "no_height", ")", ",", "\n", "load_labels", "=", "FLAGS", ".", "view_stats", ",", "\n", "augment", "=", "True", ")", "\n", "TEST_DATASET", "=", "ScannetDetectionDataset", "(", "'val'", ",", "\n", "num_points", "=", "NUM_POINT", ",", "augment", "=", "False", ",", "\n", "use_color", "=", "FLAGS", ".", "use_color", ",", "use_height", "=", "(", "not", "FLAGS", ".", "no_height", ")", ")", "\n", "", "else", ":", "\n", "    ", "print", "(", "'Unknown dataset %s. Exiting...'", "%", "(", "FLAGS", ".", "dataset", ")", ")", "\n", "exit", "(", "-", "1", ")", "\n", "", "log_string", "(", "'Dataset sizes: labeled-{0}; unlabeled-{1}; VALID-{2}'", ".", "format", "(", "len", "(", "LABELED_DATASET", ")", ",", "\n", "len", "(", "UNLABELED_DATASET", ")", ",", "len", "(", "TEST_DATASET", ")", ")", ")", "\n", "\n", "LABELED_DATALOADER", "=", "DataLoader", "(", "LABELED_DATASET", ",", "batch_size", "=", "batch_size_list", "[", "0", "]", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "batch_size_list", "[", "0", "]", ",", "worker_init_fn", "=", "my_worker_init_fn", ")", "\n", "UNLABELED_DATALOADER", "=", "DataLoader", "(", "UNLABELED_DATASET", ",", "batch_size", "=", "batch_size_list", "[", "1", "]", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "batch_size_list", "[", "1", "]", "//", "2", ",", "worker_init_fn", "=", "my_worker_init_fn", ")", "\n", "TEST_DATALOADER", "=", "DataLoader", "(", "TEST_DATASET", ",", "batch_size", "=", "8", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "4", ",", "worker_init_fn", "=", "my_worker_init_fn", ")", "\n", "\n", "\n", "def", "create_model", "(", "ema", "=", "False", ")", ":", "\n", "    ", "model", "=", "VoteNet", "(", "num_class", "=", "DATASET_CONFIG", ".", "num_class", ",", "\n", "num_heading_bin", "=", "DATASET_CONFIG", ".", "num_heading_bin", ",", "\n", "num_size_cluster", "=", "DATASET_CONFIG", ".", "num_size_cluster", ",", "\n", "mean_size_arr", "=", "DATASET_CONFIG", ".", "mean_size_arr", ",", "\n", "dataset_config", "=", "DATASET_CONFIG", ",", "\n", "num_proposal", "=", "FLAGS", ".", "num_target", ",", "\n", "input_feature_dim", "=", "num_input_channel", ",", "\n", "vote_factor", "=", "FLAGS", ".", "vote_factor", ",", "\n", "sampling", "=", "FLAGS", ".", "cluster_sampling", ")", "\n", "if", "ema", ":", "\n", "        ", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "detach_", "(", ")", "\n", "", "", "return", "model", "\n", "\n", "\n", "", "num_input_channel", "=", "int", "(", "FLAGS", ".", "use_color", ")", "*", "3", "+", "int", "(", "not", "FLAGS", ".", "no_height", ")", "*", "1", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "detector", "=", "create_model", "(", ")", "\n", "ema_detector", "=", "create_model", "(", "ema", "=", "True", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "device_count", "(", ")", ">", "1", ":", "\n", "    ", "log_string", "(", "\"Let's use %d GPUs!\"", "%", "(", "torch", ".", "cuda", ".", "device_count", "(", ")", ")", ")", "\n", "# dim = 0 [30, xxx] -> [10, ...], [10, ...], [10, ...] on 3 GPUs", "\n", "detector", "=", "nn", ".", "DataParallel", "(", "detector", ")", "\n", "ema_detector", "=", "nn", ".", "DataParallel", "(", "ema_detector", ")", "\n", "\n", "", "detector", ".", "to", "(", "device", ")", "\n", "ema_detector", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.parse_config": [[20, 53], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pcdet.config.cfg_from_yaml_file", "numpy.random.seed", "pathlib.Path", "pcdet.config.cfg_from_list", "parser.parse_args.cfg_file.split"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.cfg_from_yaml_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.cfg_from_list"], ["def", "parse_config", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'arg parser'", ")", "\n", "parser", ".", "add_argument", "(", "'--cfg_file'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'specify the config for training'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "None", ",", "required", "=", "False", ",", "help", "=", "'batch size for training'", ")", "\n", "parser", ".", "add_argument", "(", "'--workers'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "help", "=", "'number of workers for dataloader'", ")", "\n", "parser", ".", "add_argument", "(", "'--extra_tag'", ",", "type", "=", "str", ",", "default", "=", "'default'", ",", "help", "=", "'extra tag for this experiment'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'checkpoint to start from'", ")", "\n", "parser", ".", "add_argument", "(", "'--launcher'", ",", "choices", "=", "[", "'none'", ",", "'pytorch'", ",", "'slurm'", "]", ",", "default", "=", "'none'", ")", "\n", "parser", ".", "add_argument", "(", "'--tcp_port'", ",", "type", "=", "int", ",", "default", "=", "18888", ",", "help", "=", "'tcp port for distrbuted training'", ")", "\n", "parser", ".", "add_argument", "(", "'--local_rank'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'local rank for distributed training'", ")", "\n", "parser", ".", "add_argument", "(", "'--set'", ",", "dest", "=", "'set_cfgs'", ",", "default", "=", "None", ",", "nargs", "=", "argparse", ".", "REMAINDER", ",", "\n", "help", "=", "'set extra config keys if needed'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--max_waiting_mins'", ",", "type", "=", "int", ",", "default", "=", "30", ",", "help", "=", "'max waiting minutes'", ")", "\n", "parser", ".", "add_argument", "(", "'--start_epoch'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_tag'", ",", "type", "=", "str", ",", "default", "=", "'default'", ",", "help", "=", "'eval tag for this experiment'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_all'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'whether to evaluate all checkpoints'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt_dir'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "help", "=", "'specify a ckpt directory to be evaluated if needed'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_to_file'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "''", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "cfg_from_yaml_file", "(", "args", ".", "cfg_file", ",", "cfg", ")", "\n", "cfg", ".", "TAG", "=", "Path", "(", "args", ".", "cfg_file", ")", ".", "stem", "\n", "cfg", ".", "EXP_GROUP_PATH", "=", "'/'", ".", "join", "(", "args", ".", "cfg_file", ".", "split", "(", "'/'", ")", "[", "1", ":", "-", "1", "]", ")", "# remove 'cfgs' and 'xxxx.yaml'", "\n", "\n", "np", ".", "random", ".", "seed", "(", "1024", ")", "\n", "\n", "if", "args", ".", "set_cfgs", "is", "not", "None", ":", "\n", "        ", "cfg_from_list", "(", "args", ".", "set_cfgs", ",", "cfg", ")", "\n", "\n", "", "return", "args", ",", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.eval_single_ckpt": [[55, 64], ["model.load_params_from_file", "model.cuda", "eval_utils.eval_utils.eval_one_epoch"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.load_params_from_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.eval_utils.eval_utils.eval_one_epoch"], ["", "def", "eval_single_ckpt", "(", "model", ",", "test_loader", ",", "args", ",", "eval_output_dir", ",", "logger", ",", "epoch_id", ",", "dist_test", "=", "False", ")", ":", "\n", "# load checkpoint", "\n", "    ", "model", ".", "load_params_from_file", "(", "filename", "=", "args", ".", "ckpt", ",", "logger", "=", "logger", ",", "to_cpu", "=", "dist_test", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "# start evaluation", "\n", "eval_utils", ".", "eval_one_epoch", "(", "\n", "cfg", ",", "model", ",", "test_loader", ",", "epoch_id", ",", "logger", ",", "dist_test", "=", "dist_test", ",", "\n", "result_dir", "=", "eval_output_dir", ",", "save_to_file", "=", "args", ".", "save_to_file", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.get_no_evaluated_ckpt": [[67, 83], ["glob.glob", "glob.glob.sort", "os.path.join", "float", "re.findall", "x.strip", "open().readlines", "re.findall.__len__", "float", "int", "open", "float"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "def", "get_no_evaluated_ckpt", "(", "ckpt_dir", ",", "ckpt_record_file", ",", "args", ")", ":", "\n", "    ", "ckpt_list", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ckpt_dir", ",", "'*checkpoint_epoch_*.pth'", ")", ")", "\n", "ckpt_list", ".", "sort", "(", "key", "=", "os", ".", "path", ".", "getmtime", ")", "\n", "evaluated_ckpt_list", "=", "[", "float", "(", "x", ".", "strip", "(", ")", ")", "for", "x", "in", "open", "(", "ckpt_record_file", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "\n", "\n", "for", "cur_ckpt", "in", "ckpt_list", ":", "\n", "        ", "num_list", "=", "re", ".", "findall", "(", "'checkpoint_epoch_(.*).pth'", ",", "cur_ckpt", ")", "\n", "if", "num_list", ".", "__len__", "(", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "\n", "", "epoch_id", "=", "num_list", "[", "-", "1", "]", "\n", "if", "'optim'", "in", "epoch_id", ":", "\n", "            ", "continue", "\n", "", "if", "float", "(", "epoch_id", ")", "not", "in", "evaluated_ckpt_list", "and", "int", "(", "float", "(", "epoch_id", ")", ")", ">=", "args", ".", "start_epoch", ":", "\n", "            ", "return", "epoch_id", ",", "cur_ckpt", "\n", "", "", "return", "-", "1", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.repeat_eval_ckpt": [[85, 132], ["open", "tensorboardX.SummaryWriter", "test.get_no_evaluated_ckpt", "model.load_params_from_file", "model.cuda", "eval_utils.eval_utils.eval_one_epoch", "logger.info", "time.sleep", "eval_utils.eval_one_epoch.items", "open", "print", "str", "int", "print", "tensorboardX.SummaryWriter.add_scalar", "float"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.get_no_evaluated_ckpt", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.load_params_from_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.eval_utils.eval_utils.eval_one_epoch"], ["", "def", "repeat_eval_ckpt", "(", "model", ",", "test_loader", ",", "args", ",", "eval_output_dir", ",", "logger", ",", "ckpt_dir", ",", "dist_test", "=", "False", ")", ":", "\n", "# evaluated ckpt record", "\n", "    ", "ckpt_record_file", "=", "eval_output_dir", "/", "(", "'eval_list_%s.txt'", "%", "cfg", ".", "DATA_CONFIG", ".", "DATA_SPLIT", "[", "'test'", "]", ")", "\n", "with", "open", "(", "ckpt_record_file", ",", "'a'", ")", ":", "\n", "        ", "pass", "\n", "\n", "# tensorboard log", "\n", "", "if", "cfg", ".", "LOCAL_RANK", "==", "0", ":", "\n", "        ", "tb_log", "=", "SummaryWriter", "(", "log_dir", "=", "str", "(", "eval_output_dir", "/", "(", "'tensorboard_%s'", "%", "cfg", ".", "DATA_CONFIG", ".", "DATA_SPLIT", "[", "'test'", "]", ")", ")", ")", "\n", "", "total_time", "=", "0", "\n", "first_eval", "=", "True", "\n", "\n", "while", "True", ":", "\n", "# check whether there is checkpoint which is not evaluated", "\n", "        ", "cur_epoch_id", ",", "cur_ckpt", "=", "get_no_evaluated_ckpt", "(", "ckpt_dir", ",", "ckpt_record_file", ",", "args", ")", "\n", "if", "cur_epoch_id", "==", "-", "1", "or", "int", "(", "float", "(", "cur_epoch_id", ")", ")", "<", "args", ".", "start_epoch", ":", "\n", "            ", "wait_second", "=", "30", "\n", "if", "cfg", ".", "LOCAL_RANK", "==", "0", ":", "\n", "                ", "print", "(", "'Wait %s seconds for next check (progress: %.1f / %d minutes): %s \\r'", "\n", "%", "(", "wait_second", ",", "total_time", "*", "1.0", "/", "60", ",", "args", ".", "max_waiting_mins", ",", "ckpt_dir", ")", ",", "end", "=", "''", ",", "flush", "=", "True", ")", "\n", "", "time", ".", "sleep", "(", "wait_second", ")", "\n", "total_time", "+=", "30", "\n", "if", "total_time", ">", "args", ".", "max_waiting_mins", "*", "60", "and", "(", "first_eval", "is", "False", ")", ":", "\n", "                ", "break", "\n", "", "continue", "\n", "\n", "", "total_time", "=", "0", "\n", "first_eval", "=", "False", "\n", "\n", "model", ".", "load_params_from_file", "(", "filename", "=", "cur_ckpt", ",", "logger", "=", "logger", ",", "to_cpu", "=", "dist_test", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "# start evaluation", "\n", "cur_result_dir", "=", "eval_output_dir", "/", "(", "'epoch_%s'", "%", "cur_epoch_id", ")", "/", "cfg", ".", "DATA_CONFIG", ".", "DATA_SPLIT", "[", "'test'", "]", "\n", "tb_dict", "=", "eval_utils", ".", "eval_one_epoch", "(", "\n", "cfg", ",", "model", ",", "test_loader", ",", "cur_epoch_id", ",", "logger", ",", "dist_test", "=", "dist_test", ",", "\n", "result_dir", "=", "cur_result_dir", ",", "save_to_file", "=", "args", ".", "save_to_file", "\n", ")", "\n", "\n", "if", "cfg", ".", "LOCAL_RANK", "==", "0", ":", "\n", "            ", "for", "key", ",", "val", "in", "tb_dict", ".", "items", "(", ")", ":", "\n", "                ", "tb_log", ".", "add_scalar", "(", "key", ",", "val", ",", "cur_epoch_id", ")", "\n", "\n", "# record this epoch which has been evaluated", "\n", "", "", "with", "open", "(", "ckpt_record_file", ",", "'a'", ")", "as", "f", ":", "\n", "            ", "print", "(", "'%s'", "%", "cur_epoch_id", ",", "file", "=", "f", ")", "\n", "", "logger", ".", "info", "(", "'Epoch %s has been evaluated'", "%", "cur_epoch_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.main": [[134, 196], ["test.parse_config", "output_dir.mkdir", "eval_output_dir.mkdir", "pcdet.utils.common_utils.create_logger", "common_utils.create_logger.info", "common_utils.create_logger.info", "vars().items", "pcdet.config.log_config_to_file", "pcdet.datasets.build_dataloader", "pcdet.models.build_network", "common_utils.create_logger.info", "common_utils.create_logger.info", "torch.no_grad", "getattr", "re.findall", "datetime.datetime.now().strftime", "os.environ.keys", "vars", "len", "test.repeat_eval_ckpt", "test.eval_single_ckpt", "num_list.__len__", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.parse_config", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.create_logger", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.log_config_to_file", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.__init__.build_dataloader", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.build_network", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.repeat_eval_ckpt", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.eval_single_ckpt", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "args", ",", "cfg", "=", "parse_config", "(", ")", "\n", "if", "args", ".", "launcher", "==", "'none'", ":", "\n", "        ", "dist_test", "=", "False", "\n", "total_gpus", "=", "1", "\n", "", "else", ":", "\n", "        ", "total_gpus", ",", "cfg", ".", "LOCAL_RANK", "=", "getattr", "(", "common_utils", ",", "'init_dist_%s'", "%", "args", ".", "launcher", ")", "(", "\n", "args", ".", "tcp_port", ",", "args", ".", "local_rank", ",", "backend", "=", "'nccl'", "\n", ")", "\n", "dist_test", "=", "True", "\n", "\n", "", "if", "args", ".", "batch_size", "is", "None", ":", "\n", "        ", "args", ".", "batch_size", "=", "cfg", ".", "OPTIMIZATION", ".", "BATCH_SIZE_PER_GPU", "\n", "", "else", ":", "\n", "        ", "assert", "args", ".", "batch_size", "%", "total_gpus", "==", "0", ",", "'Batch size should match the number of gpus'", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "//", "total_gpus", "\n", "\n", "", "output_dir", "=", "cfg", ".", "ROOT_DIR", "/", "'output'", "/", "cfg", ".", "EXP_GROUP_PATH", "/", "cfg", ".", "TAG", "/", "args", ".", "extra_tag", "\n", "output_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "eval_output_dir", "=", "output_dir", "/", "'eval'", "\n", "\n", "if", "not", "args", ".", "eval_all", ":", "\n", "        ", "num_list", "=", "re", ".", "findall", "(", "r'\\d+'", ",", "args", ".", "ckpt", ")", "if", "args", ".", "ckpt", "is", "not", "None", "else", "[", "]", "\n", "epoch_id", "=", "num_list", "[", "-", "1", "]", "if", "num_list", ".", "__len__", "(", ")", ">", "0", "else", "'no_number'", "\n", "eval_output_dir", "=", "eval_output_dir", "/", "(", "'epoch_%s'", "%", "epoch_id", ")", "/", "cfg", ".", "DATA_CONFIG", ".", "DATA_SPLIT", "[", "'test'", "]", "\n", "", "else", ":", "\n", "        ", "eval_output_dir", "=", "eval_output_dir", "/", "'eval_all_default'", "\n", "\n", "", "if", "args", ".", "eval_tag", "is", "not", "None", ":", "\n", "        ", "eval_output_dir", "=", "eval_output_dir", "/", "args", ".", "eval_tag", "\n", "\n", "", "eval_output_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "log_file", "=", "eval_output_dir", "/", "(", "'log_eval_%s.txt'", "%", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y%m%d-%H%M%S'", ")", ")", "\n", "logger", "=", "common_utils", ".", "create_logger", "(", "log_file", ",", "rank", "=", "cfg", ".", "LOCAL_RANK", ")", "\n", "\n", "# log to file", "\n", "logger", ".", "info", "(", "'**********************Start logging**********************'", ")", "\n", "gpu_list", "=", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "if", "'CUDA_VISIBLE_DEVICES'", "in", "os", ".", "environ", ".", "keys", "(", ")", "else", "'ALL'", "\n", "logger", ".", "info", "(", "'CUDA_VISIBLE_DEVICES=%s'", "%", "gpu_list", ")", "\n", "\n", "if", "dist_test", ":", "\n", "        ", "logger", ".", "info", "(", "'total_batch_size: %d'", "%", "(", "total_gpus", "*", "args", ".", "batch_size", ")", ")", "\n", "", "for", "key", ",", "val", "in", "vars", "(", "args", ")", ".", "items", "(", ")", ":", "\n", "        ", "logger", ".", "info", "(", "'{:16} {}'", ".", "format", "(", "key", ",", "val", ")", ")", "\n", "", "log_config_to_file", "(", "cfg", ",", "logger", "=", "logger", ")", "\n", "\n", "ckpt_dir", "=", "args", ".", "ckpt_dir", "if", "args", ".", "ckpt_dir", "is", "not", "None", "else", "output_dir", "/", "'ckpt'", "\n", "\n", "test_set", ",", "test_loader", ",", "sampler", "=", "build_dataloader", "(", "\n", "dataset_cfg", "=", "cfg", ".", "DATA_CONFIG", ",", "\n", "class_names", "=", "cfg", ".", "CLASS_NAMES", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "dist", "=", "dist_test", ",", "workers", "=", "args", ".", "workers", ",", "logger", "=", "logger", ",", "training", "=", "False", "\n", ")", "\n", "\n", "model", "=", "build_network", "(", "model_cfg", "=", "cfg", ".", "MODEL", ",", "num_class", "=", "len", "(", "cfg", ".", "CLASS_NAMES", ")", ",", "dataset", "=", "test_set", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "if", "args", ".", "eval_all", ":", "\n", "            ", "repeat_eval_ckpt", "(", "model", ",", "test_loader", ",", "args", ",", "eval_output_dir", ",", "logger", ",", "ckpt_dir", ",", "dist_test", "=", "dist_test", ")", "\n", "", "else", ":", "\n", "            ", "eval_single_ckpt", "(", "model", ",", "test_loader", ",", "args", ",", "eval_output_dir", ",", "logger", ",", "epoch_id", ",", "dist_test", "=", "dist_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.train_one_epoch": [[9, 62], ["range", "len", "iter", "tqdm.tqdm", "lr_scheduler.step", "model.train", "optimizer.zero_grad", "model_func", "loss.backward", "torch.nn.utils.clip_grad_norm_", "optimizer.step", "disp_dict.update", "tqdm.tqdm.close", "next", "float", "tb_log.add_scalar", "model.parameters", "tqdm.tqdm.update", "tqdm.tqdm.set_postfix", "tbar.set_postfix", "tbar.refresh", "iter", "next", "print", "loss.item", "dict", "tb_log.add_scalar", "tb_log.add_scalar", "tb_dict.items", "tb_log.add_scalar"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.None.pretrain.train", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.zero_grad", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step"], ["def", "train_one_epoch", "(", "model", ",", "optimizer", ",", "train_loader", ",", "model_func", ",", "lr_scheduler", ",", "accumulated_iter", ",", "optim_cfg", ",", "\n", "rank", ",", "tbar", ",", "total_it_each_epoch", ",", "dataloader_iter", ",", "tb_log", "=", "None", ",", "leave_pbar", "=", "False", ")", ":", "\n", "    ", "if", "total_it_each_epoch", "==", "len", "(", "train_loader", ")", ":", "\n", "        ", "dataloader_iter", "=", "iter", "(", "train_loader", ")", "\n", "\n", "", "if", "rank", "==", "0", ":", "\n", "        ", "pbar", "=", "tqdm", ".", "tqdm", "(", "total", "=", "total_it_each_epoch", ",", "leave", "=", "leave_pbar", ",", "desc", "=", "'train'", ",", "dynamic_ncols", "=", "True", ")", "\n", "\n", "", "for", "cur_it", "in", "range", "(", "total_it_each_epoch", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "batch", "=", "next", "(", "dataloader_iter", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "dataloader_iter", "=", "iter", "(", "train_loader", ")", "\n", "batch", "=", "next", "(", "dataloader_iter", ")", "\n", "print", "(", "'new iters'", ")", "\n", "\n", "", "lr_scheduler", ".", "step", "(", "accumulated_iter", ")", "\n", "\n", "try", ":", "\n", "            ", "cur_lr", "=", "float", "(", "optimizer", ".", "lr", ")", "\n", "", "except", ":", "\n", "            ", "cur_lr", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "\n", "", "if", "tb_log", "is", "not", "None", ":", "\n", "            ", "tb_log", ".", "add_scalar", "(", "'meta_data/learning_rate'", ",", "cur_lr", ",", "accumulated_iter", ")", "\n", "\n", "", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "loss", ",", "tb_dict", ",", "disp_dict", "=", "model_func", "(", "model", ",", "batch", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "clip_grad_norm_", "(", "model", ".", "parameters", "(", ")", ",", "optim_cfg", ".", "GRAD_NORM_CLIP", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "accumulated_iter", "+=", "1", "\n", "disp_dict", ".", "update", "(", "{", "'loss'", ":", "loss", ".", "item", "(", ")", ",", "'lr'", ":", "cur_lr", "}", ")", "\n", "\n", "# log to console and tensorboard", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "pbar", ".", "update", "(", ")", "\n", "pbar", ".", "set_postfix", "(", "dict", "(", "total_it", "=", "accumulated_iter", ")", ")", "\n", "tbar", ".", "set_postfix", "(", "disp_dict", ")", "\n", "tbar", ".", "refresh", "(", ")", "\n", "\n", "if", "tb_log", "is", "not", "None", ":", "\n", "                ", "tb_log", ".", "add_scalar", "(", "'train/loss'", ",", "loss", ",", "accumulated_iter", ")", "\n", "tb_log", ".", "add_scalar", "(", "'meta_data/learning_rate'", ",", "cur_lr", ",", "accumulated_iter", ")", "\n", "for", "key", ",", "val", "in", "tb_dict", ".", "items", "(", ")", ":", "\n", "                    ", "tb_log", ".", "add_scalar", "(", "'train/'", "+", "key", ",", "val", ",", "accumulated_iter", ")", "\n", "", "", "", "", "if", "rank", "==", "0", ":", "\n", "        ", "pbar", ".", "close", "(", ")", "\n", "", "return", "accumulated_iter", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.train_model": [[64, 110], ["tqdm.trange", "len", "iter", "hasattr", "train_loader.dataset.merge_all_iters_to_one_epoch", "train_utils.train_one_epoch", "len", "max", "train_sampler.set_epoch", "glob.glob", "glob.glob.sort", "train_utils.save_checkpoint", "str", "glob.glob.__len__", "range", "train_utils.checkpoint_state", "os.remove", "len"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.merge_all_iters_to_one_epoch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.train_one_epoch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.save_checkpoint", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.checkpoint_state"], ["", "def", "train_model", "(", "model", ",", "optimizer", ",", "train_loader", ",", "model_func", ",", "lr_scheduler", ",", "optim_cfg", ",", "\n", "start_epoch", ",", "total_epochs", ",", "start_iter", ",", "rank", ",", "tb_log", ",", "ckpt_save_dir", ",", "train_sampler", "=", "None", ",", "\n", "lr_warmup_scheduler", "=", "None", ",", "ckpt_save_interval", "=", "1", ",", "max_ckpt_save_num", "=", "50", ",", "\n", "merge_all_iters_to_one_epoch", "=", "False", ")", ":", "\n", "    ", "accumulated_iter", "=", "start_iter", "\n", "with", "tqdm", ".", "trange", "(", "start_epoch", ",", "total_epochs", ",", "desc", "=", "'epochs'", ",", "dynamic_ncols", "=", "True", ",", "leave", "=", "(", "rank", "==", "0", ")", ")", "as", "tbar", ":", "\n", "        ", "total_it_each_epoch", "=", "len", "(", "train_loader", ")", "\n", "if", "merge_all_iters_to_one_epoch", ":", "\n", "            ", "assert", "hasattr", "(", "train_loader", ".", "dataset", ",", "'merge_all_iters_to_one_epoch'", ")", "\n", "train_loader", ".", "dataset", ".", "merge_all_iters_to_one_epoch", "(", "merge", "=", "True", ",", "epochs", "=", "total_epochs", ")", "\n", "total_it_each_epoch", "=", "len", "(", "train_loader", ")", "//", "max", "(", "total_epochs", ",", "1", ")", "\n", "\n", "", "dataloader_iter", "=", "iter", "(", "train_loader", ")", "\n", "for", "cur_epoch", "in", "tbar", ":", "\n", "            ", "if", "train_sampler", "is", "not", "None", ":", "\n", "                ", "train_sampler", ".", "set_epoch", "(", "cur_epoch", ")", "\n", "\n", "# train one epoch", "\n", "", "if", "lr_warmup_scheduler", "is", "not", "None", "and", "cur_epoch", "<", "optim_cfg", ".", "WARMUP_EPOCH", ":", "\n", "                ", "cur_scheduler", "=", "lr_warmup_scheduler", "\n", "", "else", ":", "\n", "                ", "cur_scheduler", "=", "lr_scheduler", "\n", "", "accumulated_iter", "=", "train_one_epoch", "(", "\n", "model", ",", "optimizer", ",", "train_loader", ",", "model_func", ",", "\n", "lr_scheduler", "=", "cur_scheduler", ",", "\n", "accumulated_iter", "=", "accumulated_iter", ",", "optim_cfg", "=", "optim_cfg", ",", "\n", "rank", "=", "rank", ",", "tbar", "=", "tbar", ",", "tb_log", "=", "tb_log", ",", "\n", "leave_pbar", "=", "(", "cur_epoch", "+", "1", "==", "total_epochs", ")", ",", "\n", "total_it_each_epoch", "=", "total_it_each_epoch", ",", "\n", "dataloader_iter", "=", "dataloader_iter", "\n", ")", "\n", "\n", "# save trained model", "\n", "trained_epoch", "=", "cur_epoch", "+", "1", "\n", "if", "trained_epoch", "%", "ckpt_save_interval", "==", "0", "and", "rank", "==", "0", ":", "\n", "\n", "                ", "ckpt_list", "=", "glob", ".", "glob", "(", "str", "(", "ckpt_save_dir", "/", "'checkpoint_epoch_*.pth'", ")", ")", "\n", "ckpt_list", ".", "sort", "(", "key", "=", "os", ".", "path", ".", "getmtime", ")", "\n", "\n", "if", "ckpt_list", ".", "__len__", "(", ")", ">=", "max_ckpt_save_num", ":", "\n", "                    ", "for", "cur_file_idx", "in", "range", "(", "0", ",", "len", "(", "ckpt_list", ")", "-", "max_ckpt_save_num", "+", "1", ")", ":", "\n", "                        ", "os", ".", "remove", "(", "ckpt_list", "[", "cur_file_idx", "]", ")", "\n", "\n", "", "", "ckpt_name", "=", "ckpt_save_dir", "/", "(", "'checkpoint_epoch_%d'", "%", "trained_epoch", ")", "\n", "save_checkpoint", "(", "\n", "checkpoint_state", "(", "model", ",", "optimizer", ",", "trained_epoch", ",", "accumulated_iter", ")", ",", "filename", "=", "ckpt_name", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.model_state_to_cpu": [[113, 118], ["model_state.items", "type", "val.cpu"], "function", ["None"], ["", "", "", "", "def", "model_state_to_cpu", "(", "model_state", ")", ":", "\n", "    ", "model_state_cpu", "=", "type", "(", "model_state", ")", "(", ")", "# ordered dict", "\n", "for", "key", ",", "val", "in", "model_state", ".", "items", "(", ")", ":", "\n", "        ", "model_state_cpu", "[", "key", "]", "=", "val", ".", "cpu", "(", ")", "\n", "", "return", "model_state_cpu", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.checkpoint_state": [[120, 137], ["optimizer.state_dict", "isinstance", "train_utils.model_state_to_cpu", "model.state_dict", "model.module.state_dict"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.model_state_to_cpu"], ["", "def", "checkpoint_state", "(", "model", "=", "None", ",", "optimizer", "=", "None", ",", "epoch", "=", "None", ",", "it", "=", "None", ")", ":", "\n", "    ", "optim_state", "=", "optimizer", ".", "state_dict", "(", ")", "if", "optimizer", "is", "not", "None", "else", "None", "\n", "if", "model", "is", "not", "None", ":", "\n", "        ", "if", "isinstance", "(", "model", ",", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", ")", ":", "\n", "            ", "model_state", "=", "model_state_to_cpu", "(", "model", ".", "module", ".", "state_dict", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "model_state", "=", "model", ".", "state_dict", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "model_state", "=", "None", "\n", "\n", "", "try", ":", "\n", "        ", "import", "pcdet", "\n", "version", "=", "'pcdet+'", "+", "pcdet", ".", "__version__", "\n", "", "except", ":", "\n", "        ", "version", "=", "'none'", "\n", "\n", "", "return", "{", "'epoch'", ":", "epoch", ",", "'it'", ":", "it", ",", "'model_state'", ":", "model_state", ",", "'optimizer_state'", ":", "optim_state", ",", "'version'", ":", "version", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.train_utils.train_utils.save_checkpoint": [[139, 148], ["torch.save", "state.pop", "torch.save"], "function", ["None"], ["", "def", "save_checkpoint", "(", "state", ",", "filename", "=", "'checkpoint'", ")", ":", "\n", "    ", "if", "False", "and", "'optimizer_state'", "in", "state", ":", "\n", "        ", "optimizer_state", "=", "state", "[", "'optimizer_state'", "]", "\n", "state", ".", "pop", "(", "'optimizer_state'", ",", "None", ")", "\n", "optimizer_filename", "=", "'{}_optim.pth'", ".", "format", "(", "filename", ")", "\n", "torch", ".", "save", "(", "{", "'optimizer_state'", ":", "optimizer_state", "}", ",", "optimizer_filename", ")", "\n", "\n", "", "filename", "=", "'{}.pth'", ".", "format", "(", "filename", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.__init__.build_optimizer": [[11, 37], ["torch.Adam", "model.parameters", "torch.SGD", "model.parameters", "functools.partial", "fastai_optim.OptimWrapper.create", "list", "len", "get_layer_groups", "m.children", "__init__.build_optimizer.children"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.FastAIMixedOptim.create"], ["def", "build_optimizer", "(", "model", ",", "optim_cfg", ")", ":", "\n", "    ", "if", "optim_cfg", ".", "OPTIMIZER", "==", "'adam'", ":", "\n", "        ", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "optim_cfg", ".", "LR", ",", "weight_decay", "=", "optim_cfg", ".", "WEIGHT_DECAY", ")", "\n", "", "elif", "optim_cfg", ".", "OPTIMIZER", "==", "'sgd'", ":", "\n", "        ", "optimizer", "=", "optim", ".", "SGD", "(", "\n", "model", ".", "parameters", "(", ")", ",", "lr", "=", "optim_cfg", ".", "LR", ",", "weight_decay", "=", "optim_cfg", ".", "WEIGHT_DECAY", ",", "\n", "momentum", "=", "optim_cfg", ".", "MOMENTUM", "\n", ")", "\n", "", "elif", "optim_cfg", ".", "OPTIMIZER", "==", "'adam_onecycle'", ":", "\n", "        ", "def", "children", "(", "m", ":", "nn", ".", "Module", ")", ":", "\n", "            ", "return", "list", "(", "m", ".", "children", "(", ")", ")", "\n", "\n", "", "def", "num_children", "(", "m", ":", "nn", ".", "Module", ")", "->", "int", ":", "\n", "            ", "return", "len", "(", "children", "(", "m", ")", ")", "\n", "\n", "", "flatten_model", "=", "lambda", "m", ":", "sum", "(", "map", "(", "flatten_model", ",", "m", ".", "children", "(", ")", ")", ",", "[", "]", ")", "if", "num_children", "(", "m", ")", "else", "[", "m", "]", "\n", "get_layer_groups", "=", "lambda", "m", ":", "[", "nn", ".", "Sequential", "(", "*", "flatten_model", "(", "m", ")", ")", "]", "\n", "\n", "optimizer_func", "=", "partial", "(", "optim", ".", "Adam", ",", "betas", "=", "(", "0.9", ",", "0.99", ")", ")", "\n", "optimizer", "=", "OptimWrapper", ".", "create", "(", "\n", "optimizer_func", ",", "3e-3", ",", "get_layer_groups", "(", "model", ")", ",", "wd", "=", "optim_cfg", ".", "WEIGHT_DECAY", ",", "true_wd", "=", "True", ",", "bn_wd", "=", "True", "\n", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.__init__.build_scheduler": [[39, 64], ["max", "learning_schedules_fastai.OneCycle", "torch.LambdaLR", "list", "learning_schedules_fastai.CosineWarmupLR", "len"], "function", ["None"], ["", "def", "build_scheduler", "(", "optimizer", ",", "total_iters_each_epoch", ",", "total_epochs", ",", "last_epoch", ",", "optim_cfg", ")", ":", "\n", "    ", "decay_steps", "=", "[", "x", "*", "total_iters_each_epoch", "for", "x", "in", "optim_cfg", ".", "DECAY_STEP_LIST", "]", "\n", "def", "lr_lbmd", "(", "cur_epoch", ")", ":", "\n", "        ", "cur_decay", "=", "1", "\n", "for", "decay_step", "in", "decay_steps", ":", "\n", "            ", "if", "cur_epoch", ">=", "decay_step", ":", "\n", "                ", "cur_decay", "=", "cur_decay", "*", "optim_cfg", ".", "LR_DECAY", "\n", "", "", "return", "max", "(", "cur_decay", ",", "optim_cfg", ".", "LR_CLIP", "/", "optim_cfg", ".", "LR", ")", "\n", "\n", "", "lr_warmup_scheduler", "=", "None", "\n", "total_steps", "=", "total_iters_each_epoch", "*", "total_epochs", "\n", "if", "optim_cfg", ".", "OPTIMIZER", "==", "'adam_onecycle'", ":", "\n", "        ", "lr_scheduler", "=", "OneCycle", "(", "\n", "optimizer", ",", "total_steps", ",", "optim_cfg", ".", "LR", ",", "list", "(", "optim_cfg", ".", "MOMS", ")", ",", "optim_cfg", ".", "DIV_FACTOR", ",", "optim_cfg", ".", "PCT_START", "\n", ")", "\n", "", "else", ":", "\n", "        ", "lr_scheduler", "=", "lr_sched", ".", "LambdaLR", "(", "optimizer", ",", "lr_lbmd", ",", "last_epoch", "=", "last_epoch", ")", "\n", "\n", "if", "optim_cfg", ".", "LR_WARMUP", ":", "\n", "            ", "lr_warmup_scheduler", "=", "CosineWarmupLR", "(", "\n", "optimizer", ",", "T_max", "=", "optim_cfg", ".", "WARMUP_EPOCH", "*", "len", "(", "total_iters_each_epoch", ")", ",", "\n", "eta_min", "=", "optim_cfg", ".", "LR", "/", "optim_cfg", ".", "DIV_FACTOR", "\n", ")", "\n", "\n", "", "", "return", "lr_scheduler", ",", "lr_warmup_scheduler", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.__init__": [[104, 110], ["list", "fastai_optim.OptimWrapper.opt_keys.remove", "fastai_optim.OptimWrapper.read_defaults", "fastai_optim.OptimWrapper.opt.param_groups[].keys"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.read_defaults"], ["def", "__init__", "(", "self", ",", "opt", ",", "wd", ",", "true_wd", ":", "bool", "=", "False", ",", "bn_wd", ":", "bool", "=", "True", ")", ":", "\n", "        ", "self", ".", "opt", ",", "self", ".", "true_wd", ",", "self", ".", "bn_wd", "=", "opt", ",", "true_wd", ",", "bn_wd", "\n", "self", ".", "opt_keys", "=", "list", "(", "self", ".", "opt", ".", "param_groups", "[", "0", "]", ".", "keys", "(", ")", ")", "\n", "self", ".", "opt_keys", ".", "remove", "(", "'params'", ")", "\n", "self", ".", "read_defaults", "(", ")", "\n", "self", ".", "wd", "=", "wd", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.create": [[111, 120], ["fastai_optim.split_bn_bias", "opt_func", "cls", "fastai_optim.listify", "fastai_optim.trainable_params"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.split_bn_bias", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.trainable_params"], ["", "@", "classmethod", "\n", "def", "create", "(", "cls", ",", "opt_func", ",", "lr", ",", "\n", "layer_groups", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"Create an `optim.Optimizer` from `opt_func` with `lr`. Set lr on `layer_groups`.\"", "\n", "split_groups", "=", "split_bn_bias", "(", "layer_groups", ")", "\n", "opt", "=", "opt_func", "(", "[", "{", "'params'", ":", "trainable_params", "(", "l", ")", ",", "'lr'", ":", "0", "}", "for", "l", "in", "split_groups", "]", ")", "\n", "opt", "=", "cls", "(", "opt", ",", "**", "kwargs", ")", "\n", "opt", ".", "lr", ",", "opt", ".", "opt_func", "=", "listify", "(", "lr", ",", "layer_groups", ")", ",", "opt_func", "\n", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.new": [[121, 127], ["getattr", "fastai_optim.split_bn_bias", "getattr.", "fastai_optim.OptimWrapper.create", "fastai_optim.trainable_params"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.split_bn_bias", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.FastAIMixedOptim.create", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.trainable_params"], ["", "def", "new", "(", "self", ",", "layer_groups", ")", ":", "\n", "        ", "\"Create a new `OptimWrapper` from `self` with another `layer_groups` but the same hyper-parameters.\"", "\n", "opt_func", "=", "getattr", "(", "self", ",", "'opt_func'", ",", "self", ".", "opt", ".", "__class__", ")", "\n", "split_groups", "=", "split_bn_bias", "(", "layer_groups", ")", "\n", "opt", "=", "opt_func", "(", "[", "{", "'params'", ":", "trainable_params", "(", "l", ")", ",", "'lr'", ":", "0", "}", "for", "l", "in", "split_groups", "]", ")", "\n", "return", "self", ".", "create", "(", "opt_func", ",", "self", ".", "lr", ",", "layer_groups", ",", "wd", "=", "self", ".", "wd", ",", "true_wd", "=", "self", ".", "true_wd", ",", "bn_wd", "=", "self", ".", "bn_wd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.__repr__": [[128, 130], ["repr"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f'OptimWrapper over {repr(self.opt)}.\\nTrue weight decay: {self.true_wd}'", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.step": [[132, 150], ["fastai_optim.OptimWrapper.opt.step", "zip", "fastai_optim.OptimWrapper.set_val", "fastai_optim.listify", "p.data.mul_", "p.data.mul_"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.set_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify"], ["", "def", "step", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"Set weight decay and step optimizer.\"", "\n", "# weight decay outside of optimizer step (AdamW)", "\n", "if", "self", ".", "true_wd", ":", "\n", "            ", "for", "lr", ",", "wd", ",", "pg1", ",", "pg2", "in", "zip", "(", "self", ".", "_lr", ",", "self", ".", "_wd", ",", "self", ".", "opt", ".", "param_groups", "[", ":", ":", "2", "]", ",", "self", ".", "opt", ".", "param_groups", "[", "1", ":", ":", "2", "]", ")", ":", "\n", "                ", "for", "p", "in", "pg1", "[", "'params'", "]", ":", "\n", "# When some parameters are fixed:  Shaoshuai Shi", "\n", "                    ", "if", "p", ".", "requires_grad", "is", "False", ":", "\n", "                        ", "continue", "\n", "", "p", ".", "data", ".", "mul_", "(", "1", "-", "wd", "*", "lr", ")", "\n", "", "if", "self", ".", "bn_wd", ":", "\n", "                    ", "for", "p", "in", "pg2", "[", "'params'", "]", ":", "\n", "# When some parameters are fixed:  Shaoshuai Shi", "\n", "                        ", "if", "p", ".", "requires_grad", "is", "False", ":", "\n", "                            ", "continue", "\n", "", "p", ".", "data", ".", "mul_", "(", "1", "-", "wd", "*", "lr", ")", "\n", "", "", "", "self", ".", "set_val", "(", "'weight_decay'", ",", "listify", "(", "0", ",", "self", ".", "_wd", ")", ")", "\n", "", "self", ".", "opt", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.zero_grad": [[151, 154], ["fastai_optim.OptimWrapper.opt.zero_grad"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.zero_grad"], ["", "def", "zero_grad", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"Clear optimizer gradients.\"", "\n", "self", ".", "opt", ".", "zero_grad", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.__getattr__": [[156, 158], ["getattr"], "methods", ["None"], ["", "def", "__getattr__", "(", "self", ",", "k", ":", "str", ")", ":", "\n", "        ", "return", "getattr", "(", "self", ".", "opt", ",", "k", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.clear": [[159, 164], ["fastai_optim.OptimWrapper.state_dict", "fastai_optim.OptimWrapper.load_state_dict"], "methods", ["None"], ["", "def", "clear", "(", "self", ")", ":", "\n", "        ", "\"Reset the state of the inner optimizer.\"", "\n", "sd", "=", "self", ".", "state_dict", "(", ")", "\n", "sd", "[", "'state'", "]", "=", "{", "}", "\n", "self", ".", "load_state_dict", "(", "sd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.lr": [[170, 173], ["fastai_optim.OptimWrapper.set_val", "fastai_optim.listify"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.set_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify"], ["", "@", "lr", ".", "setter", "\n", "def", "lr", "(", "self", ",", "val", ":", "float", ")", "->", "None", ":", "\n", "        ", "self", ".", "_lr", "=", "self", ".", "set_val", "(", "'lr'", ",", "listify", "(", "val", ",", "self", ".", "_lr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.mom": [[178, 185], ["fastai_optim.listify", "fastai_optim.OptimWrapper.set_val", "fastai_optim.listify", "fastai_optim.OptimWrapper.set_val", "fastai_optim.listify"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.set_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.set_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify"], ["", "@", "mom", ".", "setter", "\n", "def", "mom", "(", "self", ",", "val", ":", "float", ")", "->", "None", ":", "\n", "        ", "if", "'momentum'", "in", "self", ".", "opt_keys", ":", "\n", "            ", "self", ".", "set_val", "(", "'momentum'", ",", "listify", "(", "val", ",", "self", ".", "_mom", ")", ")", "\n", "", "elif", "'betas'", "in", "self", ".", "opt_keys", ":", "\n", "            ", "self", ".", "set_val", "(", "'betas'", ",", "(", "listify", "(", "val", ",", "self", ".", "_mom", ")", ",", "self", ".", "_beta", ")", ")", "\n", "", "self", ".", "_mom", "=", "listify", "(", "val", ",", "self", ".", "_mom", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.beta": [[190, 199], ["fastai_optim.listify", "fastai_optim.OptimWrapper.set_val", "fastai_optim.OptimWrapper.set_val", "fastai_optim.listify", "fastai_optim.listify"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.set_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.set_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify"], ["", "@", "beta", ".", "setter", "\n", "def", "beta", "(", "self", ",", "val", ":", "float", ")", "->", "None", ":", "\n", "        ", "\"Set beta (or alpha as makes sense for given optimizer).\"", "\n", "if", "val", "is", "None", ":", "return", "\n", "if", "'betas'", "in", "self", ".", "opt_keys", ":", "\n", "            ", "self", ".", "set_val", "(", "'betas'", ",", "(", "self", ".", "_mom", ",", "listify", "(", "val", ",", "self", ".", "_beta", ")", ")", ")", "\n", "", "elif", "'alpha'", "in", "self", ".", "opt_keys", ":", "\n", "            ", "self", ".", "set_val", "(", "'alpha'", ",", "listify", "(", "val", ",", "self", ".", "_beta", ")", ")", "\n", "", "self", ".", "_beta", "=", "listify", "(", "val", ",", "self", ".", "_beta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.wd": [[204, 209], ["fastai_optim.listify", "fastai_optim.OptimWrapper.set_val", "fastai_optim.listify"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.set_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify"], ["", "@", "wd", ".", "setter", "\n", "def", "wd", "(", "self", ",", "val", ":", "float", ")", "->", "None", ":", "\n", "        ", "\"Set weight decay.\"", "\n", "if", "not", "self", ".", "true_wd", ":", "self", ".", "set_val", "(", "'weight_decay'", ",", "listify", "(", "val", ",", "self", ".", "_wd", ")", ",", "bn_groups", "=", "self", ".", "bn_wd", ")", "\n", "self", ".", "_wd", "=", "listify", "(", "val", ",", "self", ".", "_wd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.read_defaults": [[211, 219], ["fastai_optim.OptimWrapper.read_val", "fastai_optim.OptimWrapper.read_val", "fastai_optim.OptimWrapper.read_val", "fastai_optim.OptimWrapper.read_val", "fastai_optim.OptimWrapper.read_val"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.read_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.read_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.read_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.read_val", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.read_val"], ["", "def", "read_defaults", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"Read the values inside the optimizer for the hyper-parameters.\"", "\n", "self", ".", "_beta", "=", "None", "\n", "if", "'lr'", "in", "self", ".", "opt_keys", ":", "self", ".", "_lr", "=", "self", ".", "read_val", "(", "'lr'", ")", "\n", "if", "'momentum'", "in", "self", ".", "opt_keys", ":", "self", ".", "_mom", "=", "self", ".", "read_val", "(", "'momentum'", ")", "\n", "if", "'alpha'", "in", "self", ".", "opt_keys", ":", "self", ".", "_beta", "=", "self", ".", "read_val", "(", "'alpha'", ")", "\n", "if", "'betas'", "in", "self", ".", "opt_keys", ":", "self", ".", "_mom", ",", "self", ".", "_beta", "=", "self", ".", "read_val", "(", "'betas'", ")", "\n", "if", "'weight_decay'", "in", "self", ".", "opt_keys", ":", "self", ".", "_wd", "=", "self", ".", "read_val", "(", "'weight_decay'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.set_val": [[220, 227], ["fastai_optim.is_tuple", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.is_tuple"], ["", "def", "set_val", "(", "self", ",", "key", ":", "str", ",", "val", ",", "bn_groups", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"Set `val` inside the optimizer dictionary at `key`.\"", "\n", "if", "is_tuple", "(", "val", ")", ":", "val", "=", "[", "(", "v1", ",", "v2", ")", "for", "v1", ",", "v2", "in", "zip", "(", "*", "val", ")", "]", "\n", "for", "v", ",", "pg1", ",", "pg2", "in", "zip", "(", "val", ",", "self", ".", "opt", ".", "param_groups", "[", ":", ":", "2", "]", ",", "self", ".", "opt", ".", "param_groups", "[", "1", ":", ":", "2", "]", ")", ":", "\n", "            ", "pg1", "[", "key", "]", "=", "v", "\n", "if", "bn_groups", ":", "pg2", "[", "key", "]", "=", "v", "\n", "", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.read_val": [[228, 233], ["fastai_optim.is_tuple"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.is_tuple"], ["", "def", "read_val", "(", "self", ",", "key", ":", "str", ")", ":", "\n", "        ", "\"Read a hyperparameter `key` in the optimizer dictionary.\"", "\n", "val", "=", "[", "pg", "[", "key", "]", "for", "pg", "in", "self", ".", "opt", ".", "param_groups", "[", ":", ":", "2", "]", "]", "\n", "if", "is_tuple", "(", "val", "[", "0", "]", ")", ":", "val", "=", "[", "o", "[", "0", "]", "for", "o", "in", "val", "]", ",", "[", "o", "[", "1", "]", "for", "o", "in", "val", "]", "\n", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.FastAIMixedOptim.create": [[236, 253], ["fastai_optim.OptimWrapper.create", "fastai_optim.get_master", "opt_func", "range", "zip"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.FastAIMixedOptim.create", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.get_master"], ["    ", "@", "classmethod", "\n", "def", "create", "(", "cls", ",", "opt_func", ",", "lr", ",", "\n", "layer_groups", ",", "model", ",", "flat_master", "=", "False", ",", "loss_scale", "=", "512.0", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"Create an `optim.Optimizer` from `opt_func` with `lr`. Set lr on `layer_groups`.\"", "\n", "opt", "=", "OptimWrapper", ".", "create", "(", "opt_func", ",", "lr", ",", "layer_groups", ",", "**", "kwargs", ")", "\n", "opt", ".", "model_params", ",", "opt", ".", "master_params", "=", "get_master", "(", "layer_groups", ",", "flat_master", ")", "\n", "opt", ".", "flat_master", "=", "flat_master", "\n", "opt", ".", "loss_scale", "=", "loss_scale", "\n", "opt", ".", "model", "=", "model", "\n", "# Changes the optimizer so that the optimization step is done in FP32.", "\n", "# opt = self.learn.opt", "\n", "mom", ",", "wd", ",", "beta", "=", "opt", ".", "mom", ",", "opt", ".", "wd", ",", "opt", ".", "beta", "\n", "lrs", "=", "[", "lr", "for", "lr", "in", "opt", ".", "_lr", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "opt_params", "=", "[", "{", "'params'", ":", "mp", ",", "'lr'", ":", "lr", "}", "for", "mp", ",", "lr", "in", "zip", "(", "opt", ".", "master_params", ",", "lrs", ")", "]", "\n", "opt", ".", "opt", "=", "opt_func", "(", "opt_params", ")", "\n", "opt", ".", "mom", ",", "opt", ".", "wd", ",", "opt", ".", "beta", "=", "mom", ",", "wd", ",", "beta", "\n", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.FastAIMixedOptim.step": [[254, 262], ["fastai_optim.model_g2master_g", "fastai_optim.OptimWrapper.step", "fastai_optim.FastAIMixedOptim.model.zero_grad", "fastai_optim.master2model", "param.grad.div_"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.model_g2master_g", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.zero_grad", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.master2model"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "model_g2master_g", "(", "self", ".", "model_params", ",", "self", ".", "master_params", ",", "self", ".", "flat_master", ")", "\n", "for", "group", "in", "self", ".", "master_params", ":", "\n", "            ", "for", "param", "in", "group", ":", "param", ".", "grad", ".", "div_", "(", "self", ".", "loss_scale", ")", "\n", "", "super", "(", "FastAIMixedOptim", ",", "self", ")", ".", "step", "(", ")", "\n", "self", ".", "model", ".", "zero_grad", "(", ")", "\n", "# Update the params from master to model.", "\n", "master2model", "(", "self", ".", "model_params", ",", "self", ".", "master_params", ",", "self", ".", "flat_master", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.split_bn_bias": [[13, 25], ["l.children", "isinstance", "torch.nn.Sequential", "torch.nn.Sequential", "l2.append", "l1.append"], "function", ["None"], ["def", "split_bn_bias", "(", "layer_groups", ")", ":", "\n", "    ", "\"Split the layers in `layer_groups` into batchnorm (`bn_types`) and non-batchnorm groups.\"", "\n", "split_groups", "=", "[", "]", "\n", "for", "l", "in", "layer_groups", ":", "\n", "        ", "l1", ",", "l2", "=", "[", "]", ",", "[", "]", "\n", "for", "c", "in", "l", ".", "children", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "c", ",", "bn_types", ")", ":", "\n", "                ", "l2", ".", "append", "(", "c", ")", "\n", "", "else", ":", "\n", "                ", "l1", ".", "append", "(", "c", ")", "\n", "", "", "split_groups", "+=", "[", "nn", ".", "Sequential", "(", "*", "l1", ")", ",", "nn", ".", "Sequential", "(", "*", "l2", ")", "]", "\n", "", "return", "split_groups", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.get_master": [[27, 47], ["fastai_optim.split_bn_bias", "lg.parameters", "len", "torch.nn.utils.parameters_to_vector", "torch.nn.Parameter", "master_params.append", "master_params.append", "param.clone().float().detach", "torch.nn.Parameter.new", "param.data.float", "param.clone().float", "torch.nn.Parameter.size", "param.clone"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.split_bn_bias", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.new"], ["", "def", "get_master", "(", "layer_groups", ",", "flat_master", ":", "bool", "=", "False", ")", ":", "\n", "    ", "\"Return two lists, one for the model parameters in FP16 and one for the master parameters in FP32.\"", "\n", "split_groups", "=", "split_bn_bias", "(", "layer_groups", ")", "\n", "model_params", "=", "[", "[", "param", "for", "param", "in", "lg", ".", "parameters", "(", ")", "if", "param", ".", "requires_grad", "]", "for", "lg", "in", "split_groups", "]", "\n", "if", "flat_master", ":", "\n", "        ", "master_params", "=", "[", "]", "\n", "for", "lg", "in", "model_params", ":", "\n", "            ", "if", "len", "(", "lg", ")", "!=", "0", ":", "\n", "                ", "mp", "=", "parameters_to_vector", "(", "[", "param", ".", "data", ".", "float", "(", ")", "for", "param", "in", "lg", "]", ")", "\n", "mp", "=", "torch", ".", "nn", ".", "Parameter", "(", "mp", ",", "requires_grad", "=", "True", ")", "\n", "if", "mp", ".", "grad", "is", "None", ":", "mp", ".", "grad", "=", "mp", ".", "new", "(", "*", "mp", ".", "size", "(", ")", ")", "\n", "master_params", ".", "append", "(", "[", "mp", "]", ")", "\n", "", "else", ":", "\n", "                ", "master_params", ".", "append", "(", "[", "]", ")", "\n", "", "", "return", "model_params", ",", "master_params", "\n", "", "else", ":", "\n", "        ", "master_params", "=", "[", "[", "param", ".", "clone", "(", ")", ".", "float", "(", ")", ".", "detach", "(", ")", "for", "param", "in", "lg", "]", "for", "lg", "in", "model_params", "]", "\n", "for", "mp", "in", "master_params", ":", "\n", "            ", "for", "param", "in", "mp", ":", "param", ".", "requires_grad", "=", "True", "\n", "", "return", "model_params", ",", "master_params", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.model_g2master_g": [[49, 63], ["zip", "zip", "zip", "len", "master_group[].grad.data.copy_", "torch.nn.utils.parameters_to_vector", "master.grad.data.copy_", "master.data.new", "p.grad.data.float", "master.data.size"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.OptimWrapper.new"], ["", "", "def", "model_g2master_g", "(", "model_params", ",", "master_params", ",", "flat_master", ":", "bool", "=", "False", ")", "->", "None", ":", "\n", "    ", "\"Copy the `model_params` gradients to `master_params` for the optimizer step.\"", "\n", "if", "flat_master", ":", "\n", "        ", "for", "model_group", ",", "master_group", "in", "zip", "(", "model_params", ",", "master_params", ")", ":", "\n", "            ", "if", "len", "(", "master_group", ")", "!=", "0", ":", "\n", "                ", "master_group", "[", "0", "]", ".", "grad", ".", "data", ".", "copy_", "(", "parameters_to_vector", "(", "[", "p", ".", "grad", ".", "data", ".", "float", "(", ")", "for", "p", "in", "model_group", "]", ")", ")", "\n", "", "", "", "else", ":", "\n", "        ", "for", "model_group", ",", "master_group", "in", "zip", "(", "model_params", ",", "master_params", ")", ":", "\n", "            ", "for", "model", ",", "master", "in", "zip", "(", "model_group", ",", "master_group", ")", ":", "\n", "                ", "if", "model", ".", "grad", "is", "not", "None", ":", "\n", "                    ", "if", "master", ".", "grad", "is", "None", ":", "master", ".", "grad", "=", "master", ".", "data", ".", "new", "(", "*", "master", ".", "data", ".", "size", "(", ")", ")", "\n", "master", ".", "grad", ".", "data", ".", "copy_", "(", "model", ".", "grad", ".", "data", ")", "\n", "", "else", ":", "\n", "                    ", "master", ".", "grad", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.master2model": [[65, 75], ["zip", "zip", "zip", "len", "zip", "model.data.copy_", "torch._utils._unflatten_dense_tensors", "model.data.copy_"], "function", ["None"], ["", "", "", "", "", "def", "master2model", "(", "model_params", ",", "master_params", ",", "flat_master", ":", "bool", "=", "False", ")", "->", "None", ":", "\n", "    ", "\"Copy `master_params` to `model_params`.\"", "\n", "if", "flat_master", ":", "\n", "        ", "for", "model_group", ",", "master_group", "in", "zip", "(", "model_params", ",", "master_params", ")", ":", "\n", "            ", "if", "len", "(", "model_group", ")", "!=", "0", ":", "\n", "                ", "for", "model", ",", "master", "in", "zip", "(", "model_group", ",", "_unflatten_dense_tensors", "(", "master_group", "[", "0", "]", ".", "data", ",", "model_group", ")", ")", ":", "\n", "                    ", "model", ".", "data", ".", "copy_", "(", "master", ")", "\n", "", "", "", "", "else", ":", "\n", "        ", "for", "model_group", ",", "master_group", "in", "zip", "(", "model_params", ",", "master_params", ")", ":", "\n", "            ", "for", "model", ",", "master", "in", "zip", "(", "model_group", ",", "master_group", ")", ":", "model", ".", "data", ".", "copy_", "(", "master", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.listify": [[77, 89], ["list", "isinstance", "len", "len", "type", "len", "len", "len", "isinstance"], "function", ["None"], ["", "", "", "def", "listify", "(", "p", "=", "None", ",", "q", "=", "None", ")", ":", "\n", "    ", "\"Make `p` listy and the same length as `q`.\"", "\n", "if", "p", "is", "None", ":", "\n", "        ", "p", "=", "[", "]", "\n", "", "elif", "isinstance", "(", "p", ",", "str", ")", ":", "\n", "        ", "p", "=", "[", "p", "]", "\n", "", "elif", "not", "isinstance", "(", "p", ",", "Iterable", ")", ":", "\n", "        ", "p", "=", "[", "p", "]", "\n", "", "n", "=", "q", "if", "type", "(", "q", ")", "==", "int", "else", "len", "(", "p", ")", "if", "q", "is", "None", "else", "len", "(", "q", ")", "\n", "if", "len", "(", "p", ")", "==", "1", ":", "p", "=", "p", "*", "n", "\n", "assert", "len", "(", "p", ")", "==", "n", ",", "f'List len mismatch ({len(p)} vs {n})'", "\n", "return", "list", "(", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.trainable_params": [[91, 95], ["filter", "m.parameters"], "function", ["None"], ["", "def", "trainable_params", "(", "m", ":", "nn", ".", "Module", ")", ":", "\n", "    ", "\"Return list of trainable params in `m`.\"", "\n", "res", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "m", ".", "parameters", "(", ")", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.fastai_optim.is_tuple": [[97, 98], ["isinstance"], "function", ["None"], ["", "def", "is_tuple", "(", "x", ")", "->", "bool", ":", "return", "isinstance", "(", "x", ",", "tuple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.learning_schedules_fastai.LRSchedulerStep.__init__": [[13, 43], ["enumerate", "enumerate", "isinstance", "isinstance", "len", "eval", "learning_schedules_fastai.LRSchedulerStep.lr_phases.append", "learning_schedules_fastai.LRSchedulerStep.lr_phases.append", "len", "eval", "learning_schedules_fastai.LRSchedulerStep.mom_phases.append", "learning_schedules_fastai.LRSchedulerStep.mom_phases.append", "len", "len", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "fai_optimizer", ":", "OptimWrapper", ",", "total_step", ",", "lr_phases", ",", "\n", "mom_phases", ")", ":", "\n", "# if not isinstance(fai_optimizer, OptimWrapper):", "\n", "#     raise TypeError('{} is not a fastai OptimWrapper'.format(", "\n", "#         type(fai_optimizer).__name__))", "\n", "        ", "self", ".", "optimizer", "=", "fai_optimizer", "\n", "self", ".", "total_step", "=", "total_step", "\n", "self", ".", "lr_phases", "=", "[", "]", "\n", "\n", "for", "i", ",", "(", "start", ",", "lambda_func", ")", "in", "enumerate", "(", "lr_phases", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "lr_phases", ")", "!=", "0", ":", "\n", "                ", "assert", "self", ".", "lr_phases", "[", "-", "1", "]", "[", "0", "]", "<", "start", "\n", "", "if", "isinstance", "(", "lambda_func", ",", "str", ")", ":", "\n", "                ", "lambda_func", "=", "eval", "(", "lambda_func", ")", "\n", "", "if", "i", "<", "len", "(", "lr_phases", ")", "-", "1", ":", "\n", "                ", "self", ".", "lr_phases", ".", "append", "(", "(", "int", "(", "start", "*", "total_step", ")", ",", "int", "(", "lr_phases", "[", "i", "+", "1", "]", "[", "0", "]", "*", "total_step", ")", ",", "lambda_func", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "lr_phases", ".", "append", "(", "(", "int", "(", "start", "*", "total_step", ")", ",", "total_step", ",", "lambda_func", ")", ")", "\n", "", "", "assert", "self", ".", "lr_phases", "[", "0", "]", "[", "0", "]", "==", "0", "\n", "self", ".", "mom_phases", "=", "[", "]", "\n", "for", "i", ",", "(", "start", ",", "lambda_func", ")", "in", "enumerate", "(", "mom_phases", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "mom_phases", ")", "!=", "0", ":", "\n", "                ", "assert", "self", ".", "mom_phases", "[", "-", "1", "]", "[", "0", "]", "<", "start", "\n", "", "if", "isinstance", "(", "lambda_func", ",", "str", ")", ":", "\n", "                ", "lambda_func", "=", "eval", "(", "lambda_func", ")", "\n", "", "if", "i", "<", "len", "(", "mom_phases", ")", "-", "1", ":", "\n", "                ", "self", ".", "mom_phases", ".", "append", "(", "(", "int", "(", "start", "*", "total_step", ")", ",", "int", "(", "mom_phases", "[", "i", "+", "1", "]", "[", "0", "]", "*", "total_step", ")", ",", "lambda_func", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "mom_phases", ".", "append", "(", "(", "int", "(", "start", "*", "total_step", ")", ",", "total_step", ",", "lambda_func", ")", ")", "\n", "", "", "assert", "self", ".", "mom_phases", "[", "0", "]", "[", "0", "]", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.learning_schedules_fastai.LRSchedulerStep.step": [[44, 51], ["func", "func"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "step", ")", ":", "\n", "        ", "for", "start", ",", "end", ",", "func", "in", "self", ".", "lr_phases", ":", "\n", "            ", "if", "step", ">=", "start", ":", "\n", "                ", "self", ".", "optimizer", ".", "lr", "=", "func", "(", "(", "step", "-", "start", ")", "/", "(", "end", "-", "start", ")", ")", "\n", "", "", "for", "start", ",", "end", ",", "func", "in", "self", ".", "mom_phases", ":", "\n", "            ", "if", "step", ">=", "start", ":", "\n", "                ", "self", ".", "optimizer", ".", "mom", "=", "func", "(", "(", "step", "-", "start", ")", "/", "(", "end", "-", "start", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.learning_schedules_fastai.OneCycle.__init__": [[61, 78], ["int", "learning_schedules_fastai.LRSchedulerStep.__init__", "functools.partial", "functools.partial", "functools.partial", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fai_optimizer", ",", "total_step", ",", "lr_max", ",", "moms", ",", "div_factor", ",", "\n", "pct_start", ")", ":", "\n", "        ", "self", ".", "lr_max", "=", "lr_max", "\n", "self", ".", "moms", "=", "moms", "\n", "self", ".", "div_factor", "=", "div_factor", "\n", "self", ".", "pct_start", "=", "pct_start", "\n", "a1", "=", "int", "(", "total_step", "*", "self", ".", "pct_start", ")", "\n", "a2", "=", "total_step", "-", "a1", "\n", "low_lr", "=", "self", ".", "lr_max", "/", "self", ".", "div_factor", "\n", "lr_phases", "=", "(", "(", "0", ",", "partial", "(", "annealing_cos", ",", "low_lr", ",", "self", ".", "lr_max", ")", ")", ",", "\n", "(", "self", ".", "pct_start", ",", "\n", "partial", "(", "annealing_cos", ",", "self", ".", "lr_max", ",", "low_lr", "/", "1e4", ")", ")", ")", "\n", "mom_phases", "=", "(", "(", "0", ",", "partial", "(", "annealing_cos", ",", "*", "self", ".", "moms", ")", ")", ",", "\n", "(", "self", ".", "pct_start", ",", "partial", "(", "annealing_cos", ",", "\n", "*", "self", ".", "moms", "[", ":", ":", "-", "1", "]", ")", ")", ")", "\n", "fai_optimizer", ".", "lr", ",", "fai_optimizer", ".", "mom", "=", "low_lr", ",", "self", ".", "moms", "[", "0", "]", "\n", "super", "(", ")", ".", "__init__", "(", "fai_optimizer", ",", "total_step", ",", "lr_phases", ",", "mom_phases", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.learning_schedules_fastai.CosineWarmupLR.__init__": [[81, 85], ["torch._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "T_max", ",", "eta_min", "=", "0", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "T_max", "=", "T_max", "\n", "self", ".", "eta_min", "=", "eta_min", "\n", "super", "(", "CosineWarmupLR", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.learning_schedules_fastai.CosineWarmupLR.get_lr": [[86, 90], ["math.cos"], "methods", ["None"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "eta_min", "+", "(", "base_lr", "-", "self", ".", "eta_min", ")", "*", "\n", "(", "1", "-", "math", ".", "cos", "(", "math", ".", "pi", "*", "self", ".", "last_epoch", "/", "self", ".", "T_max", ")", ")", "/", "2", "\n", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.learning_schedules_fastai.FakeOptim.__init__": [[93, 96], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "lr", "=", "0", "\n", "self", ".", "mom", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.optimization.learning_schedules_fastai.annealing_cos": [[53, 58], ["numpy.cos"], "function", ["None"], ["", "", "", "", "def", "annealing_cos", "(", "start", ",", "end", ",", "pct", ")", ":", "\n", "# print(pct, start, end)", "\n", "    ", "\"Cosine anneal from `start` to `end` as pct goes from 0.0 to 1.0.\"", "\n", "cos_out", "=", "np", ".", "cos", "(", "np", ".", "pi", "*", "pct", ")", "+", "1", "\n", "return", "end", "+", "(", "start", "-", "end", ")", "/", "2", "*", "cos_out", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch": [[13, 17], ["isinstance", "torch.from_numpy().float", "torch.from_numpy"], "function", ["None"], ["def", "check_numpy_to_torch", "(", "x", ")", ":", "\n", "    ", "if", "isinstance", "(", "x", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "return", "torch", ".", "from_numpy", "(", "x", ")", ".", "float", "(", ")", ",", "True", "\n", "", "return", "x", ",", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z": [[19, 42], ["visualize_utils.check_numpy_to_torch", "visualize_utils.check_numpy_to_torch", "torch.cos", "torch.sin", "angle.new_zeros", "angle.new_ones", "torch.stack().view().float", "torch.matmul", "torch.cat", "torch.cat.numpy", "torch.stack().view", "torch.stack"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch"], ["", "def", "rotate_points_along_z", "(", "points", ",", "angle", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        points: (B, N, 3 + C)\n        angle: (B), angle along z-axis, angle increases x ==> y\n    Returns:\n\n    \"\"\"", "\n", "points", ",", "is_numpy", "=", "check_numpy_to_torch", "(", "points", ")", "\n", "angle", ",", "_", "=", "check_numpy_to_torch", "(", "angle", ")", "\n", "\n", "cosa", "=", "torch", ".", "cos", "(", "angle", ")", "\n", "sina", "=", "torch", ".", "sin", "(", "angle", ")", "\n", "zeros", "=", "angle", ".", "new_zeros", "(", "points", ".", "shape", "[", "0", "]", ")", "\n", "ones", "=", "angle", ".", "new_ones", "(", "points", ".", "shape", "[", "0", "]", ")", "\n", "rot_matrix", "=", "torch", ".", "stack", "(", "(", "\n", "cosa", ",", "sina", ",", "zeros", ",", "\n", "-", "sina", ",", "cosa", ",", "zeros", ",", "\n", "zeros", ",", "zeros", ",", "ones", "\n", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", ".", "float", "(", ")", "\n", "points_rot", "=", "torch", ".", "matmul", "(", "points", "[", ":", ",", ":", ",", "0", ":", "3", "]", ",", "rot_matrix", ")", "\n", "points_rot", "=", "torch", ".", "cat", "(", "(", "points_rot", ",", "points", "[", ":", ",", ":", ",", "3", ":", "]", ")", ",", "dim", "=", "-", "1", ")", "\n", "return", "points_rot", ".", "numpy", "(", ")", "if", "is_numpy", "else", "points_rot", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.boxes_to_corners_3d": [[44, 70], ["visualize_utils.check_numpy_to_torch", "rotate_points_along_z().view", "boxes3d.new_tensor", "boxes3d[].repeat", "rotate_points_along_z().view.numpy", "visualize_utils.rotate_points_along_z", "rotate_points_along_z().view.view"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z"], ["", "def", "boxes_to_corners_3d", "(", "boxes3d", ")", ":", "\n", "    ", "\"\"\"\n        7 -------- 4\n       /|         /|\n      6 -------- 5 .\n      | |        | |\n      . 3 -------- 0\n      |/         |/\n      2 -------- 1\n    Args:\n        boxes3d:  (N, 7) [x, y, z, dx, dy, dz, heading], (x, y, z) is the box center\n\n    Returns:\n    \"\"\"", "\n", "boxes3d", ",", "is_numpy", "=", "check_numpy_to_torch", "(", "boxes3d", ")", "\n", "\n", "template", "=", "boxes3d", ".", "new_tensor", "(", "(", "\n", "[", "1", ",", "1", ",", "-", "1", "]", ",", "[", "1", ",", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "1", ",", "-", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "1", "]", ",", "[", "1", ",", "-", "1", ",", "1", "]", ",", "[", "-", "1", ",", "-", "1", ",", "1", "]", ",", "[", "-", "1", ",", "1", ",", "1", "]", ",", "\n", ")", ")", "/", "2", "\n", "\n", "corners3d", "=", "boxes3d", "[", ":", ",", "None", ",", "3", ":", "6", "]", ".", "repeat", "(", "1", ",", "8", ",", "1", ")", "*", "template", "[", "None", ",", ":", ",", ":", "]", "\n", "corners3d", "=", "rotate_points_along_z", "(", "corners3d", ".", "view", "(", "-", "1", ",", "8", ",", "3", ")", ",", "boxes3d", "[", ":", ",", "6", "]", ")", ".", "view", "(", "-", "1", ",", "8", ",", "3", ")", "\n", "corners3d", "+=", "boxes3d", "[", ":", ",", "None", ",", "0", ":", "3", "]", "\n", "\n", "return", "corners3d", ".", "numpy", "(", ")", "if", "is_numpy", "else", "corners3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.visualize_pts": [[72, 92], ["isinstance", "pts.cpu().numpy.cpu().numpy", "mayavi.figure", "mayavi.points3d", "mayavi.points3d", "mayavi.points3d", "mayavi.plot3d", "mayavi.plot3d", "mayavi.plot3d", "pts.cpu().numpy.cpu"], "function", ["None"], ["", "def", "visualize_pts", "(", "pts", ",", "fig", "=", "None", ",", "bgcolor", "=", "(", "0", ",", "0", ",", "0", ")", ",", "fgcolor", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", ",", "\n", "show_intensity", "=", "False", ",", "size", "=", "(", "600", ",", "600", ")", ",", "draw_origin", "=", "True", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "pts", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "pts", "=", "pts", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "fig", "is", "None", ":", "\n", "        ", "fig", "=", "mlab", ".", "figure", "(", "figure", "=", "None", ",", "bgcolor", "=", "bgcolor", ",", "fgcolor", "=", "fgcolor", ",", "engine", "=", "None", ",", "size", "=", "size", ")", "\n", "\n", "", "if", "show_intensity", ":", "\n", "        ", "G", "=", "mlab", ".", "points3d", "(", "pts", "[", ":", ",", "0", "]", ",", "pts", "[", ":", ",", "1", "]", ",", "pts", "[", ":", ",", "2", "]", ",", "pts", "[", ":", ",", "3", "]", ",", "mode", "=", "'point'", ",", "\n", "colormap", "=", "'gnuplot'", ",", "scale_factor", "=", "1", ",", "figure", "=", "fig", ")", "\n", "", "else", ":", "\n", "        ", "G", "=", "mlab", ".", "points3d", "(", "pts", "[", ":", ",", "0", "]", ",", "pts", "[", ":", ",", "1", "]", ",", "pts", "[", ":", ",", "2", "]", ",", "mode", "=", "'point'", ",", "\n", "colormap", "=", "'gnuplot'", ",", "scale_factor", "=", "1", ",", "figure", "=", "fig", ")", "\n", "", "if", "draw_origin", ":", "\n", "        ", "mlab", ".", "points3d", "(", "0", ",", "0", ",", "0", ",", "color", "=", "(", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'cube'", ",", "scale_factor", "=", "0.2", ")", "\n", "mlab", ".", "plot3d", "(", "[", "0", ",", "3", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "color", "=", "(", "0", ",", "0", ",", "1", ")", ",", "tube_radius", "=", "0.1", ")", "\n", "mlab", ".", "plot3d", "(", "[", "0", ",", "0", "]", ",", "[", "0", ",", "3", "]", ",", "[", "0", ",", "0", "]", ",", "color", "=", "(", "0", ",", "1", ",", "0", ")", ",", "tube_radius", "=", "0.1", ")", "\n", "mlab", ".", "plot3d", "(", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "3", "]", ",", "color", "=", "(", "1", ",", "0", ",", "0", ")", ",", "tube_radius", "=", "0.1", ")", "\n", "\n", "", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_sphere_pts": [[94, 124], ["isinstance", "mayavi.points3d", "mayavi.plot3d", "mayavi.plot3d", "mayavi.plot3d", "isinstance", "pts.cpu().numpy.cpu().numpy", "mayavi.figure", "isinstance", "numpy.zeros", "mayavi.points3d", "mayavi.points3d", "numpy.arange", "pts.cpu().numpy.cpu", "pts.cpu().numpy.__len__", "np.zeros.__len__"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "def", "draw_sphere_pts", "(", "pts", ",", "color", "=", "(", "0", ",", "1", ",", "0", ")", ",", "fig", "=", "None", ",", "bgcolor", "=", "(", "0", ",", "0", ",", "0", ")", ",", "scale_factor", "=", "0.2", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "pts", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "pts", "=", "pts", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "if", "fig", "is", "None", ":", "\n", "        ", "fig", "=", "mlab", ".", "figure", "(", "figure", "=", "None", ",", "bgcolor", "=", "bgcolor", ",", "fgcolor", "=", "None", ",", "engine", "=", "None", ",", "size", "=", "(", "600", ",", "600", ")", ")", "\n", "\n", "", "if", "isinstance", "(", "color", ",", "np", ".", "ndarray", ")", "and", "color", ".", "shape", "[", "0", "]", "==", "1", ":", "\n", "        ", "color", "=", "color", "[", "0", "]", "\n", "color", "=", "(", "color", "[", "0", "]", "/", "255.0", ",", "color", "[", "1", "]", "/", "255.0", ",", "color", "[", "2", "]", "/", "255.0", ")", "\n", "\n", "", "if", "isinstance", "(", "color", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "pts_color", "=", "np", ".", "zeros", "(", "(", "pts", ".", "__len__", "(", ")", ",", "4", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "pts_color", "[", ":", ",", "0", ":", "3", "]", "=", "color", "\n", "pts_color", "[", ":", ",", "3", "]", "=", "255", "\n", "G", "=", "mlab", ".", "points3d", "(", "pts", "[", ":", ",", "0", "]", ",", "pts", "[", ":", ",", "1", "]", ",", "pts", "[", ":", ",", "2", "]", ",", "np", ".", "arange", "(", "0", ",", "pts_color", ".", "__len__", "(", ")", ")", ",", "mode", "=", "'sphere'", ",", "\n", "scale_factor", "=", "scale_factor", ",", "figure", "=", "fig", ")", "\n", "G", ".", "glyph", ".", "color_mode", "=", "'color_by_scalar'", "\n", "G", ".", "glyph", ".", "scale_mode", "=", "'scale_by_vector'", "\n", "G", ".", "module_manager", ".", "scalar_lut_manager", ".", "lut", ".", "table", "=", "pts_color", "\n", "", "else", ":", "\n", "        ", "mlab", ".", "points3d", "(", "pts", "[", ":", ",", "0", "]", ",", "pts", "[", ":", ",", "1", "]", ",", "pts", "[", ":", ",", "2", "]", ",", "mode", "=", "'sphere'", ",", "color", "=", "color", ",", "\n", "colormap", "=", "'gnuplot'", ",", "scale_factor", "=", "scale_factor", ",", "figure", "=", "fig", ")", "\n", "\n", "", "mlab", ".", "points3d", "(", "0", ",", "0", ",", "0", ",", "color", "=", "(", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'cube'", ",", "scale_factor", "=", "0.2", ")", "\n", "mlab", ".", "plot3d", "(", "[", "0", ",", "3", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "color", "=", "(", "0", ",", "0", ",", "1", ")", ",", "line_width", "=", "3", ",", "tube_radius", "=", "None", ",", "figure", "=", "fig", ")", "\n", "mlab", ".", "plot3d", "(", "[", "0", ",", "0", "]", ",", "[", "0", ",", "3", "]", ",", "[", "0", ",", "0", "]", ",", "color", "=", "(", "0", ",", "1", ",", "0", ")", ",", "line_width", "=", "3", ",", "tube_radius", "=", "None", ",", "figure", "=", "fig", ")", "\n", "mlab", ".", "plot3d", "(", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "3", "]", ",", "color", "=", "(", "1", ",", "0", ",", "0", ")", ",", "line_width", "=", "3", ",", "tube_radius", "=", "None", ",", "figure", "=", "fig", ")", "\n", "\n", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_grid": [[126, 132], ["mayavi.plot3d", "mayavi.plot3d", "mayavi.plot3d", "mayavi.plot3d"], "function", ["None"], ["", "def", "draw_grid", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "fig", ",", "tube_radius", "=", "None", ",", "color", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", ":", "\n", "    ", "mlab", ".", "plot3d", "(", "[", "x1", ",", "x1", "]", ",", "[", "y1", ",", "y2", "]", ",", "[", "0", ",", "0", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "tube_radius", ",", "line_width", "=", "1", ",", "figure", "=", "fig", ")", "\n", "mlab", ".", "plot3d", "(", "[", "x2", ",", "x2", "]", ",", "[", "y1", ",", "y2", "]", ",", "[", "0", ",", "0", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "tube_radius", ",", "line_width", "=", "1", ",", "figure", "=", "fig", ")", "\n", "mlab", ".", "plot3d", "(", "[", "x1", ",", "x2", "]", ",", "[", "y1", ",", "y1", "]", ",", "[", "0", ",", "0", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "tube_radius", ",", "line_width", "=", "1", ",", "figure", "=", "fig", ")", "\n", "mlab", ".", "plot3d", "(", "[", "x1", ",", "x2", "]", ",", "[", "y2", ",", "y2", "]", ",", "[", "0", ",", "0", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "tube_radius", ",", "line_width", "=", "1", ",", "figure", "=", "fig", ")", "\n", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_multi_grid_range": [[134, 140], ["range", "range", "visualize_utils.draw_grid"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_grid"], ["", "def", "draw_multi_grid_range", "(", "fig", ",", "grid_size", "=", "20", ",", "bv_range", "=", "(", "-", "60", ",", "-", "60", ",", "60", ",", "60", ")", ")", ":", "\n", "    ", "for", "x", "in", "range", "(", "bv_range", "[", "0", "]", ",", "bv_range", "[", "2", "]", ",", "grid_size", ")", ":", "\n", "        ", "for", "y", "in", "range", "(", "bv_range", "[", "1", "]", ",", "bv_range", "[", "3", "]", ",", "grid_size", ")", ":", "\n", "            ", "fig", "=", "draw_grid", "(", "x", ",", "y", ",", "x", "+", "grid_size", ",", "y", "+", "grid_size", ",", "fig", ")", "\n", "\n", "", "", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_scenes": [[142, 171], ["visualize_utils.visualize_pts", "visualize_utils.draw_multi_grid_range", "mayavi.view", "isinstance", "points.cpu().numpy.cpu().numpy", "ref_boxes.cpu().numpy.cpu().numpy", "gt_boxes.cpu().numpy.cpu().numpy", "ref_scores.cpu().numpy.cpu().numpy", "ref_labels.cpu().numpy.cpu().numpy", "visualize_utils.boxes_to_corners_3d", "visualize_utils.draw_corners3d", "visualize_utils.boxes_to_corners_3d", "isinstance", "isinstance", "isinstance", "isinstance", "visualize_utils.draw_corners3d", "range", "points.cpu().numpy.cpu", "ref_boxes.cpu().numpy.cpu", "gt_boxes.cpu().numpy.cpu", "ref_scores.cpu().numpy.cpu", "ref_labels.cpu().numpy.cpu", "ref_labels.cpu().numpy.min", "tuple", "visualize_utils.draw_corners3d", "ref_labels.cpu().numpy.max", "len"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.visualize_pts", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_multi_grid_range", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.boxes_to_corners_3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_corners3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.boxes_to_corners_3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_corners3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_corners3d"], ["", "def", "draw_scenes", "(", "points", ",", "gt_boxes", "=", "None", ",", "ref_boxes", "=", "None", ",", "ref_scores", "=", "None", ",", "ref_labels", "=", "None", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "points", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "points", "=", "points", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "ref_boxes", "is", "not", "None", "and", "not", "isinstance", "(", "ref_boxes", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "ref_boxes", "=", "ref_boxes", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "gt_boxes", "is", "not", "None", "and", "not", "isinstance", "(", "gt_boxes", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "gt_boxes", "=", "gt_boxes", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "ref_scores", "is", "not", "None", "and", "not", "isinstance", "(", "ref_scores", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "ref_scores", "=", "ref_scores", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "ref_labels", "is", "not", "None", "and", "not", "isinstance", "(", "ref_labels", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "ref_labels", "=", "ref_labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "fig", "=", "visualize_pts", "(", "points", ")", "\n", "fig", "=", "draw_multi_grid_range", "(", "fig", ",", "bv_range", "=", "(", "0", ",", "-", "40", ",", "80", ",", "40", ")", ")", "\n", "if", "gt_boxes", "is", "not", "None", ":", "\n", "        ", "corners3d", "=", "boxes_to_corners_3d", "(", "gt_boxes", ")", "\n", "fig", "=", "draw_corners3d", "(", "corners3d", ",", "fig", "=", "fig", ",", "color", "=", "(", "0", ",", "0", ",", "1", ")", ",", "max_num", "=", "100", ")", "\n", "\n", "", "if", "ref_boxes", "is", "not", "None", ":", "\n", "        ", "ref_corners3d", "=", "boxes_to_corners_3d", "(", "ref_boxes", ")", "\n", "if", "ref_labels", "is", "None", ":", "\n", "            ", "fig", "=", "draw_corners3d", "(", "ref_corners3d", ",", "fig", "=", "fig", ",", "color", "=", "(", "0", ",", "1", ",", "0", ")", ",", "cls", "=", "ref_scores", ",", "max_num", "=", "100", ")", "\n", "", "else", ":", "\n", "            ", "for", "k", "in", "range", "(", "ref_labels", ".", "min", "(", ")", ",", "ref_labels", ".", "max", "(", ")", "+", "1", ")", ":", "\n", "                ", "cur_color", "=", "tuple", "(", "box_colormap", "[", "k", "%", "len", "(", "box_colormap", ")", "]", ")", "\n", "mask", "=", "(", "ref_labels", "==", "k", ")", "\n", "fig", "=", "draw_corners3d", "(", "ref_corners3d", "[", "mask", "]", ",", "fig", "=", "fig", ",", "color", "=", "cur_color", ",", "cls", "=", "ref_scores", "[", "mask", "]", ",", "max_num", "=", "100", ")", "\n", "", "", "", "mlab", ".", "view", "(", "azimuth", "=", "-", "179", ",", "elevation", "=", "54.0", ",", "distance", "=", "104.0", ",", "roll", "=", "90.0", ")", "\n", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.draw_corners3d": [[173, 216], ["min", "range", "len", "range", "mayavi.plot3d", "mayavi.plot3d", "isinstance", "mayavi.plot3d", "mayavi.plot3d", "mayavi.plot3d", "mayavi.text3d", "mayavi.text3d"], "function", ["None"], ["", "def", "draw_corners3d", "(", "corners3d", ",", "fig", ",", "color", "=", "(", "1", ",", "1", ",", "1", ")", ",", "line_width", "=", "2", ",", "cls", "=", "None", ",", "tag", "=", "''", ",", "max_num", "=", "500", ",", "tube_radius", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    :param corners3d: (N, 8, 3)\n    :param fig:\n    :param color:\n    :param line_width:\n    :param cls:\n    :param tag:\n    :param max_num:\n    :return:\n    \"\"\"", "\n", "import", "mayavi", ".", "mlab", "as", "mlab", "\n", "num", "=", "min", "(", "max_num", ",", "len", "(", "corners3d", ")", ")", "\n", "for", "n", "in", "range", "(", "num", ")", ":", "\n", "        ", "b", "=", "corners3d", "[", "n", "]", "# (8, 3)", "\n", "\n", "if", "cls", "is", "not", "None", ":", "\n", "            ", "if", "isinstance", "(", "cls", ",", "np", ".", "ndarray", ")", ":", "\n", "                ", "mlab", ".", "text3d", "(", "b", "[", "6", ",", "0", "]", ",", "b", "[", "6", ",", "1", "]", ",", "b", "[", "6", ",", "2", "]", ",", "'%.2f'", "%", "cls", "[", "n", "]", ",", "scale", "=", "(", "0.3", ",", "0.3", ",", "0.3", ")", ",", "color", "=", "color", ",", "figure", "=", "fig", ")", "\n", "", "else", ":", "\n", "                ", "mlab", ".", "text3d", "(", "b", "[", "6", ",", "0", "]", ",", "b", "[", "6", ",", "1", "]", ",", "b", "[", "6", ",", "2", "]", ",", "'%s'", "%", "cls", "[", "n", "]", ",", "scale", "=", "(", "0.3", ",", "0.3", ",", "0.3", ")", ",", "color", "=", "color", ",", "figure", "=", "fig", ")", "\n", "\n", "", "", "for", "k", "in", "range", "(", "0", ",", "4", ")", ":", "\n", "            ", "i", ",", "j", "=", "k", ",", "(", "k", "+", "1", ")", "%", "4", "\n", "mlab", ".", "plot3d", "(", "[", "b", "[", "i", ",", "0", "]", ",", "b", "[", "j", ",", "0", "]", "]", ",", "[", "b", "[", "i", ",", "1", "]", ",", "b", "[", "j", ",", "1", "]", "]", ",", "[", "b", "[", "i", ",", "2", "]", ",", "b", "[", "j", ",", "2", "]", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "tube_radius", ",", "\n", "line_width", "=", "line_width", ",", "figure", "=", "fig", ")", "\n", "\n", "i", ",", "j", "=", "k", "+", "4", ",", "(", "k", "+", "1", ")", "%", "4", "+", "4", "\n", "mlab", ".", "plot3d", "(", "[", "b", "[", "i", ",", "0", "]", ",", "b", "[", "j", ",", "0", "]", "]", ",", "[", "b", "[", "i", ",", "1", "]", ",", "b", "[", "j", ",", "1", "]", "]", ",", "[", "b", "[", "i", ",", "2", "]", ",", "b", "[", "j", ",", "2", "]", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "tube_radius", ",", "\n", "line_width", "=", "line_width", ",", "figure", "=", "fig", ")", "\n", "\n", "i", ",", "j", "=", "k", ",", "k", "+", "4", "\n", "mlab", ".", "plot3d", "(", "[", "b", "[", "i", ",", "0", "]", ",", "b", "[", "j", ",", "0", "]", "]", ",", "[", "b", "[", "i", ",", "1", "]", ",", "b", "[", "j", ",", "1", "]", "]", ",", "[", "b", "[", "i", ",", "2", "]", ",", "b", "[", "j", ",", "2", "]", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "tube_radius", ",", "\n", "line_width", "=", "line_width", ",", "figure", "=", "fig", ")", "\n", "\n", "", "i", ",", "j", "=", "0", ",", "5", "\n", "mlab", ".", "plot3d", "(", "[", "b", "[", "i", ",", "0", "]", ",", "b", "[", "j", ",", "0", "]", "]", ",", "[", "b", "[", "i", ",", "1", "]", ",", "b", "[", "j", ",", "1", "]", "]", ",", "[", "b", "[", "i", ",", "2", "]", ",", "b", "[", "j", ",", "2", "]", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "tube_radius", ",", "\n", "line_width", "=", "line_width", ",", "figure", "=", "fig", ")", "\n", "i", ",", "j", "=", "1", ",", "4", "\n", "mlab", ".", "plot3d", "(", "[", "b", "[", "i", ",", "0", "]", ",", "b", "[", "j", ",", "0", "]", "]", ",", "[", "b", "[", "i", ",", "1", "]", ",", "b", "[", "j", ",", "1", "]", "]", ",", "[", "b", "[", "i", ",", "2", "]", ",", "b", "[", "j", ",", "2", "]", "]", ",", "color", "=", "color", ",", "tube_radius", "=", "tube_radius", ",", "\n", "line_width", "=", "line_width", ",", "figure", "=", "fig", ")", "\n", "\n", "", "return", "fig", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.eval_utils.eval_utils.statistics_info": [[12, 20], ["ret_dict.get", "ret_dict.get", "ret_dict.get", "str", "str", "str", "str", "str", "str", "str"], "function", ["None"], ["def", "statistics_info", "(", "cfg", ",", "ret_dict", ",", "metric", ",", "disp_dict", ")", ":", "\n", "    ", "for", "cur_thresh", "in", "cfg", ".", "MODEL", ".", "POST_PROCESSING", ".", "RECALL_THRESH_LIST", ":", "\n", "        ", "metric", "[", "'recall_roi_%s'", "%", "str", "(", "cur_thresh", ")", "]", "+=", "ret_dict", ".", "get", "(", "'roi_%s'", "%", "str", "(", "cur_thresh", ")", ",", "0", ")", "\n", "metric", "[", "'recall_rcnn_%s'", "%", "str", "(", "cur_thresh", ")", "]", "+=", "ret_dict", ".", "get", "(", "'rcnn_%s'", "%", "str", "(", "cur_thresh", ")", ",", "0", ")", "\n", "", "metric", "[", "'gt_num'", "]", "+=", "ret_dict", ".", "get", "(", "'gt'", ",", "0", ")", "\n", "min_thresh", "=", "cfg", ".", "MODEL", ".", "POST_PROCESSING", ".", "RECALL_THRESH_LIST", "[", "0", "]", "\n", "disp_dict", "[", "'recall_%s'", "%", "str", "(", "min_thresh", ")", "]", "=", "'(%d, %d) / %d'", "%", "(", "metric", "[", "'recall_roi_%s'", "%", "str", "(", "min_thresh", ")", "]", ",", "metric", "[", "'recall_rcnn_%s'", "%", "str", "(", "min_thresh", ")", "]", ",", "metric", "[", "'gt_num'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.eval_utils.eval_utils.eval_one_epoch": [[22, 122], ["result_dir.mkdir", "logger.info", "torch.nn.parallel.DistributedDataParallel.eval", "time.time", "enumerate", "logger.info", "logger.info", "logger.info", "dataset.evaluation", "logger.info", "ret_dict.update", "logger.info", "logger.info", "final_output_dir.mkdir", "torch.cuda.device_count", "torch.nn.parallel.DistributedDataParallel", "tqdm.tqdm", "pcdet.models.load_data_to_gpu", "eval_utils.statistics_info", "dataset.generate_prediction_dicts", "tqdm.tqdm.close", "pcdet.utils.common_utils.get_dist_info", "pcdet.utils.common_utils.merge_results_dist", "pcdet.utils.common_utils.merge_results_dist", "len", "metric[].items", "logger.info", "logger.info", "anno[].__len__", "open", "pickle.dump", "torch.no_grad", "torch.nn.parallel.DistributedDataParallel.", "tqdm.tqdm.set_postfix", "tqdm.tqdm.update", "len", "time.time", "range", "max", "max", "len", "len", "str", "str", "str", "str", "max", "str", "str", "len"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.evaluation", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.load_data_to_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.eval_utils.eval_utils.statistics_info", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.generate_prediction_dicts", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.get_dist_info", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.merge_results_dist", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.merge_results_dist", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "def", "eval_one_epoch", "(", "cfg", ",", "model", ",", "dataloader", ",", "epoch_id", ",", "logger", ",", "dist_test", "=", "False", ",", "save_to_file", "=", "False", ",", "result_dir", "=", "None", ")", ":", "\n", "    ", "result_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "final_output_dir", "=", "result_dir", "/", "'final_result'", "/", "'data'", "\n", "if", "save_to_file", ":", "\n", "        ", "final_output_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "", "metric", "=", "{", "\n", "'gt_num'", ":", "0", ",", "\n", "}", "\n", "for", "cur_thresh", "in", "cfg", ".", "MODEL", ".", "POST_PROCESSING", ".", "RECALL_THRESH_LIST", ":", "\n", "        ", "metric", "[", "'recall_roi_%s'", "%", "str", "(", "cur_thresh", ")", "]", "=", "0", "\n", "metric", "[", "'recall_rcnn_%s'", "%", "str", "(", "cur_thresh", ")", "]", "=", "0", "\n", "\n", "", "dataset", "=", "dataloader", ".", "dataset", "\n", "class_names", "=", "dataset", ".", "class_names", "\n", "det_annos", "=", "[", "]", "\n", "\n", "logger", ".", "info", "(", "'*************** EPOCH %s EVALUATION *****************'", "%", "epoch_id", ")", "\n", "if", "dist_test", ":", "\n", "        ", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "local_rank", "=", "cfg", ".", "LOCAL_RANK", "%", "num_gpus", "\n", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "\n", "model", ",", "\n", "device_ids", "=", "[", "local_rank", "]", ",", "\n", "broadcast_buffers", "=", "False", "\n", ")", "\n", "", "model", ".", "eval", "(", ")", "\n", "\n", "if", "cfg", ".", "LOCAL_RANK", "==", "0", ":", "\n", "        ", "progress_bar", "=", "tqdm", ".", "tqdm", "(", "total", "=", "len", "(", "dataloader", ")", ",", "leave", "=", "True", ",", "desc", "=", "'eval'", ",", "dynamic_ncols", "=", "True", ")", "\n", "", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "batch_dict", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "        ", "load_data_to_gpu", "(", "batch_dict", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred_dicts", ",", "ret_dict", "=", "model", "(", "batch_dict", ")", "\n", "", "disp_dict", "=", "{", "}", "\n", "\n", "statistics_info", "(", "cfg", ",", "ret_dict", ",", "metric", ",", "disp_dict", ")", "\n", "annos", "=", "dataset", ".", "generate_prediction_dicts", "(", "\n", "batch_dict", ",", "pred_dicts", ",", "class_names", ",", "\n", "output_path", "=", "final_output_dir", "if", "save_to_file", "else", "None", "\n", ")", "\n", "det_annos", "+=", "annos", "\n", "if", "cfg", ".", "LOCAL_RANK", "==", "0", ":", "\n", "            ", "progress_bar", ".", "set_postfix", "(", "disp_dict", ")", "\n", "progress_bar", ".", "update", "(", ")", "\n", "\n", "", "", "if", "cfg", ".", "LOCAL_RANK", "==", "0", ":", "\n", "        ", "progress_bar", ".", "close", "(", ")", "\n", "\n", "", "if", "dist_test", ":", "\n", "        ", "rank", ",", "world_size", "=", "common_utils", ".", "get_dist_info", "(", ")", "\n", "det_annos", "=", "common_utils", ".", "merge_results_dist", "(", "det_annos", ",", "len", "(", "dataset", ")", ",", "tmpdir", "=", "result_dir", "/", "'tmpdir'", ")", "\n", "metric", "=", "common_utils", ".", "merge_results_dist", "(", "[", "metric", "]", ",", "world_size", ",", "tmpdir", "=", "result_dir", "/", "'tmpdir'", ")", "\n", "\n", "", "logger", ".", "info", "(", "'*************** Performance of EPOCH %s *****************'", "%", "epoch_id", ")", "\n", "sec_per_example", "=", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "/", "len", "(", "dataloader", ".", "dataset", ")", "\n", "logger", ".", "info", "(", "'Generate label finished(sec_per_example: %.4f second).'", "%", "sec_per_example", ")", "\n", "\n", "if", "cfg", ".", "LOCAL_RANK", "!=", "0", ":", "\n", "        ", "return", "{", "}", "\n", "\n", "", "ret_dict", "=", "{", "}", "\n", "if", "dist_test", ":", "\n", "        ", "for", "key", ",", "val", "in", "metric", "[", "0", "]", ".", "items", "(", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "1", ",", "world_size", ")", ":", "\n", "                ", "metric", "[", "0", "]", "[", "key", "]", "+=", "metric", "[", "k", "]", "[", "key", "]", "\n", "", "", "metric", "=", "metric", "[", "0", "]", "\n", "\n", "", "gt_num_cnt", "=", "metric", "[", "'gt_num'", "]", "\n", "for", "cur_thresh", "in", "cfg", ".", "MODEL", ".", "POST_PROCESSING", ".", "RECALL_THRESH_LIST", ":", "\n", "        ", "cur_roi_recall", "=", "metric", "[", "'recall_roi_%s'", "%", "str", "(", "cur_thresh", ")", "]", "/", "max", "(", "gt_num_cnt", ",", "1", ")", "\n", "cur_rcnn_recall", "=", "metric", "[", "'recall_rcnn_%s'", "%", "str", "(", "cur_thresh", ")", "]", "/", "max", "(", "gt_num_cnt", ",", "1", ")", "\n", "logger", ".", "info", "(", "'recall_roi_%s: %f'", "%", "(", "cur_thresh", ",", "cur_roi_recall", ")", ")", "\n", "logger", ".", "info", "(", "'recall_rcnn_%s: %f'", "%", "(", "cur_thresh", ",", "cur_rcnn_recall", ")", ")", "\n", "ret_dict", "[", "'recall/roi_%s'", "%", "str", "(", "cur_thresh", ")", "]", "=", "cur_roi_recall", "\n", "ret_dict", "[", "'recall/rcnn_%s'", "%", "str", "(", "cur_thresh", ")", "]", "=", "cur_rcnn_recall", "\n", "\n", "", "total_pred_objects", "=", "0", "\n", "for", "anno", "in", "det_annos", ":", "\n", "        ", "total_pred_objects", "+=", "anno", "[", "'name'", "]", ".", "__len__", "(", ")", "\n", "", "logger", ".", "info", "(", "'Average predicted number of objects(%d samples): %.3f'", "\n", "%", "(", "len", "(", "det_annos", ")", ",", "total_pred_objects", "/", "max", "(", "1", ",", "len", "(", "det_annos", ")", ")", ")", ")", "\n", "\n", "with", "open", "(", "result_dir", "/", "'result.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "det_annos", ",", "f", ")", "\n", "\n", "", "result_str", ",", "result_dict", "=", "dataset", ".", "evaluation", "(", "\n", "det_annos", ",", "class_names", ",", "\n", "eval_metric", "=", "cfg", ".", "MODEL", ".", "POST_PROCESSING", ".", "EVAL_METRIC", ",", "\n", "output_path", "=", "final_output_dir", "\n", ")", "\n", "\n", "logger", ".", "info", "(", "result_str", ")", "\n", "ret_dict", ".", "update", "(", "result_dict", ")", "\n", "\n", "logger", ".", "info", "(", "'Result is save to %s'", "%", "result_dir", ")", "\n", "logger", ".", "info", "(", "'****************Evaluation done.*****************'", ")", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.log_config_to_file": [[7, 14], ["cfg.items", "isinstance", "logger.info", "logger.info", "config.log_config_to_file"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.log_config_to_file"], ["def", "log_config_to_file", "(", "cfg", ",", "pre", "=", "'cfg'", ",", "logger", "=", "None", ")", ":", "\n", "    ", "for", "key", ",", "val", "in", "cfg", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "cfg", "[", "key", "]", ",", "EasyDict", ")", ":", "\n", "            ", "logger", ".", "info", "(", "'\\n%s.%s = edict()'", "%", "(", "pre", ",", "key", ")", ")", "\n", "log_config_to_file", "(", "cfg", "[", "key", "]", ",", "pre", "=", "pre", "+", "'.'", "+", "key", ",", "logger", "=", "logger", ")", "\n", "continue", "\n", "", "logger", ".", "info", "(", "'%s.%s: %s'", "%", "(", "pre", ",", "key", ",", "val", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.cfg_from_list": [[16, 49], ["zip", "k.split", "len", "literal_eval", "isinstance", "literal_eval.split", "type", "type", "src.split", "type", "type.", "isinstance", "literal_eval.split", "enumerate", "type", "type", "type", "type", "type", "type", "type"], "function", ["None"], ["", "", "def", "cfg_from_list", "(", "cfg_list", ",", "config", ")", ":", "\n", "    ", "\"\"\"Set config keys via list (e.g., from command line).\"\"\"", "\n", "from", "ast", "import", "literal_eval", "\n", "assert", "len", "(", "cfg_list", ")", "%", "2", "==", "0", "\n", "for", "k", ",", "v", "in", "zip", "(", "cfg_list", "[", "0", ":", ":", "2", "]", ",", "cfg_list", "[", "1", ":", ":", "2", "]", ")", ":", "\n", "        ", "key_list", "=", "k", ".", "split", "(", "'.'", ")", "\n", "d", "=", "config", "\n", "for", "subkey", "in", "key_list", "[", ":", "-", "1", "]", ":", "\n", "            ", "assert", "subkey", "in", "d", ",", "'NotFoundKey: %s'", "%", "subkey", "\n", "d", "=", "d", "[", "subkey", "]", "\n", "", "subkey", "=", "key_list", "[", "-", "1", "]", "\n", "assert", "subkey", "in", "d", ",", "'NotFoundKey: %s'", "%", "subkey", "\n", "try", ":", "\n", "            ", "value", "=", "literal_eval", "(", "v", ")", "\n", "", "except", ":", "\n", "            ", "value", "=", "v", "\n", "\n", "", "if", "type", "(", "value", ")", "!=", "type", "(", "d", "[", "subkey", "]", ")", "and", "isinstance", "(", "d", "[", "subkey", "]", ",", "EasyDict", ")", ":", "\n", "            ", "key_val_list", "=", "value", ".", "split", "(", "','", ")", "\n", "for", "src", "in", "key_val_list", ":", "\n", "                ", "cur_key", ",", "cur_val", "=", "src", ".", "split", "(", "':'", ")", "\n", "val_type", "=", "type", "(", "d", "[", "subkey", "]", "[", "cur_key", "]", ")", "\n", "cur_val", "=", "val_type", "(", "cur_val", ")", "\n", "d", "[", "subkey", "]", "[", "cur_key", "]", "=", "cur_val", "\n", "", "", "elif", "type", "(", "value", ")", "!=", "type", "(", "d", "[", "subkey", "]", ")", "and", "isinstance", "(", "d", "[", "subkey", "]", ",", "list", ")", ":", "\n", "            ", "val_list", "=", "value", ".", "split", "(", "','", ")", "\n", "for", "k", ",", "x", "in", "enumerate", "(", "val_list", ")", ":", "\n", "                ", "val_list", "[", "k", "]", "=", "type", "(", "d", "[", "subkey", "]", "[", "0", "]", ")", "(", "x", ")", "\n", "", "d", "[", "subkey", "]", "=", "val_list", "\n", "", "else", ":", "\n", "            ", "assert", "type", "(", "value", ")", "==", "type", "(", "d", "[", "subkey", "]", ")", ",", "'type {} does not match original type {}'", ".", "format", "(", "type", "(", "value", ")", ",", "type", "(", "d", "[", "subkey", "]", ")", ")", "\n", "d", "[", "subkey", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.merge_new_config": [[51, 69], ["new_config.items", "config.update", "config.merge_new_config", "open", "easydict.EasyDict", "isinstance", "easydict.EasyDict", "yaml.load", "yaml.load"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.merge_new_config"], ["", "", "", "def", "merge_new_config", "(", "config", ",", "new_config", ")", ":", "\n", "    ", "if", "'_BASE_CONFIG_'", "in", "new_config", ":", "\n", "        ", "with", "open", "(", "new_config", "[", "'_BASE_CONFIG_'", "]", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "try", ":", "\n", "                ", "yaml_config", "=", "yaml", ".", "load", "(", "f", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "except", ":", "\n", "                ", "yaml_config", "=", "yaml", ".", "load", "(", "f", ")", "\n", "", "", "config", ".", "update", "(", "EasyDict", "(", "yaml_config", ")", ")", "\n", "\n", "", "for", "key", ",", "val", "in", "new_config", ".", "items", "(", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "val", ",", "dict", ")", ":", "\n", "            ", "config", "[", "key", "]", "=", "val", "\n", "continue", "\n", "", "if", "key", "not", "in", "config", ":", "\n", "            ", "config", "[", "key", "]", "=", "EasyDict", "(", ")", "\n", "", "merge_new_config", "(", "config", "[", "key", "]", ",", "val", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.cfg_from_yaml_file": [[71, 81], ["open", "config.merge_new_config", "yaml.load", "yaml.load"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.config.merge_new_config"], ["", "def", "cfg_from_yaml_file", "(", "cfg_file", ",", "config", ")", ":", "\n", "    ", "with", "open", "(", "cfg_file", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "try", ":", "\n", "            ", "new_config", "=", "yaml", ".", "load", "(", "f", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "except", ":", "\n", "            ", "new_config", "=", "yaml", ".", "load", "(", "f", ")", "\n", "\n", "", "merge_new_config", "(", "config", "=", "config", ",", "new_config", "=", "new_config", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pcdet.__init__.get_git_commit_number": [[11, 18], ["subprocess.run", "subprocess.run.stdout.decode", "pathlib.Path"], "function", ["None"], ["def", "build_optimizer", "(", "model", ",", "optim_cfg", ")", ":", "\n", "    ", "if", "optim_cfg", ".", "OPTIMIZER", "==", "'adam'", ":", "\n", "        ", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "optim_cfg", ".", "LR", ",", "weight_decay", "=", "optim_cfg", ".", "WEIGHT_DECAY", ")", "\n", "", "elif", "optim_cfg", ".", "OPTIMIZER", "==", "'sgd'", ":", "\n", "        ", "optimizer", "=", "optim", ".", "SGD", "(", "\n", "model", ".", "parameters", "(", ")", ",", "lr", "=", "optim_cfg", ".", "LR", ",", "weight_decay", "=", "optim_cfg", ".", "WEIGHT_DECAY", ",", "\n", "momentum", "=", "optim_cfg", ".", "MOMENTUM", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.__init__": [[14, 41], ["torch.Dataset.__init__", "numpy.array", "processor.point_feature_encoder.PointFeatureEncoder", "processor.data_processor.DataProcessor", "pathlib.Path", "augmentor.data_augmentor.DataAugmentor"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", "=", "None", ",", "class_names", "=", "None", ",", "training", "=", "True", ",", "root_path", "=", "None", ",", "logger", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataset_cfg", "=", "dataset_cfg", "\n", "self", ".", "training", "=", "training", "\n", "self", ".", "class_names", "=", "class_names", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "root_path", "=", "root_path", "if", "root_path", "is", "not", "None", "else", "Path", "(", "self", ".", "dataset_cfg", ".", "DATA_PATH", ")", "\n", "self", ".", "logger", "=", "logger", "\n", "if", "self", ".", "dataset_cfg", "is", "None", "or", "class_names", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "point_cloud_range", "=", "np", ".", "array", "(", "self", ".", "dataset_cfg", ".", "POINT_CLOUD_RANGE", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "point_feature_encoder", "=", "PointFeatureEncoder", "(", "\n", "self", ".", "dataset_cfg", ".", "POINT_FEATURE_ENCODING", ",", "\n", "point_cloud_range", "=", "self", ".", "point_cloud_range", "\n", ")", "\n", "self", ".", "data_augmentor", "=", "DataAugmentor", "(", "\n", "self", ".", "root_path", ",", "self", ".", "dataset_cfg", ".", "DATA_AUGMENTOR", ",", "self", ".", "class_names", ",", "logger", "=", "self", ".", "logger", "\n", ")", "if", "self", ".", "training", "else", "None", "\n", "self", ".", "data_processor", "=", "DataProcessor", "(", "\n", "self", ".", "dataset_cfg", ".", "DATA_PROCESSOR", ",", "point_cloud_range", "=", "self", ".", "point_cloud_range", ",", "training", "=", "self", ".", "training", "\n", ")", "\n", "\n", "self", ".", "grid_size", "=", "self", ".", "data_processor", ".", "grid_size", "\n", "self", ".", "voxel_size", "=", "self", ".", "data_processor", ".", "voxel_size", "\n", "self", ".", "total_epochs", "=", "0", "\n", "self", ".", "_merge_all_iters_to_one_epoch", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.mode": [[42, 45], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mode", "(", "self", ")", ":", "\n", "        ", "return", "'train'", "if", "self", ".", "training", "else", "'test'", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.__getstate__": [[46, 50], ["dict"], "methods", ["None"], ["", "def", "__getstate__", "(", "self", ")", ":", "\n", "        ", "d", "=", "dict", "(", "self", ".", "__dict__", ")", "\n", "del", "d", "[", "'logger'", "]", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.__setstate__": [[51, 53], ["dataset.DatasetTemplate.__dict__.update"], "methods", ["None"], ["", "def", "__setstate__", "(", "self", ",", "d", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.generate_prediction_dicts": [[54, 71], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "generate_prediction_dicts", "(", "batch_dict", ",", "pred_dicts", ",", "class_names", ",", "output_path", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        To support a custom dataset, implement this function to receive the predicted results from the model, and then\n        transform the unified normative coordinate to your required coordinate, and optionally save them to disk.\n\n        Args:\n            batch_dict: dict of original data from the dataloader\n            pred_dicts: dict of predicted results from the model\n                pred_boxes: (N, 7), Tensor\n                pred_scores: (N), Tensor\n                pred_labels: (N), Tensor\n            class_names:\n            output_path: if it is not None, save the results to this path\n        Returns:\n\n        \"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.merge_all_iters_to_one_epoch": [[72, 78], ["None"], "methods", ["None"], ["", "def", "merge_all_iters_to_one_epoch", "(", "self", ",", "merge", "=", "True", ",", "epochs", "=", "None", ")", ":", "\n", "        ", "if", "merge", ":", "\n", "            ", "self", ".", "_merge_all_iters_to_one_epoch", "=", "True", "\n", "self", ".", "total_epochs", "=", "epochs", "\n", "", "else", ":", "\n", "            ", "self", ".", "_merge_all_iters_to_one_epoch", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.__len__": [[79, 81], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.__getitem__": [[82, 95], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        To support a custom dataset, implement this function to load the raw data (and labels), then transform them to\n        the unified normative coordinate and call the function self.prepare_data() to process the data and send them\n        to the model.\n\n        Args:\n            index:\n\n        Returns:\n\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.prepare_data": [[96, 147], ["dataset.DatasetTemplate.point_feature_encoder.forward", "dataset.DatasetTemplate.data_processor.forward", "dataset.DatasetTemplate.pop", "numpy.array", "dataset.DatasetTemplate.data_augmentor.forward", "dataset.DatasetTemplate.get", "utils.common_utils.keep_arrays_by_name", "numpy.array", "numpy.concatenate", "len", "numpy.random.randint", "dataset.DatasetTemplate.__getitem__", "dataset.DatasetTemplate.__len__", "numpy.array.reshape().astype", "dataset.DatasetTemplate.class_names.index", "numpy.array.reshape"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.keep_arrays_by_name", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__getitem__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "def", "prepare_data", "(", "self", ",", "data_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            data_dict:\n                points: (N, 3 + C_in)\n                gt_boxes: optional, (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n                gt_names: optional, (N), string\n                ...\n\n        Returns:\n            data_dict:\n                frame_id: string\n                points: (N, 3 + C_in)\n                gt_boxes: optional, (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n                gt_names: optional, (N), string\n                use_lead_xyz: bool\n                voxels: optional (num_voxels, max_points_per_voxel, 3 + C)\n                voxel_coords: optional (num_voxels, 3)\n                voxel_num_points: optional (num_voxels)\n                ...\n        \"\"\"", "\n", "if", "self", ".", "training", ":", "\n", "            ", "assert", "'gt_boxes'", "in", "data_dict", ",", "'gt_boxes should be provided for training'", "\n", "gt_boxes_mask", "=", "np", ".", "array", "(", "[", "n", "in", "self", ".", "class_names", "for", "n", "in", "data_dict", "[", "'gt_names'", "]", "]", ",", "dtype", "=", "np", ".", "bool_", ")", "\n", "\n", "data_dict", "=", "self", ".", "data_augmentor", ".", "forward", "(", "\n", "data_dict", "=", "{", "\n", "**", "data_dict", ",", "\n", "'gt_boxes_mask'", ":", "gt_boxes_mask", "\n", "}", "\n", ")", "\n", "if", "len", "(", "data_dict", "[", "'gt_boxes'", "]", ")", "==", "0", ":", "\n", "                ", "new_index", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "__len__", "(", ")", ")", "\n", "return", "self", ".", "__getitem__", "(", "new_index", ")", "\n", "\n", "", "", "if", "data_dict", ".", "get", "(", "'gt_boxes'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "selected", "=", "common_utils", ".", "keep_arrays_by_name", "(", "data_dict", "[", "'gt_names'", "]", ",", "self", ".", "class_names", ")", "\n", "data_dict", "[", "'gt_boxes'", "]", "=", "data_dict", "[", "'gt_boxes'", "]", "[", "selected", "]", "\n", "data_dict", "[", "'gt_names'", "]", "=", "data_dict", "[", "'gt_names'", "]", "[", "selected", "]", "\n", "gt_classes", "=", "np", ".", "array", "(", "[", "self", ".", "class_names", ".", "index", "(", "n", ")", "+", "1", "for", "n", "in", "data_dict", "[", "'gt_names'", "]", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "gt_boxes", "=", "np", ".", "concatenate", "(", "(", "data_dict", "[", "'gt_boxes'", "]", ",", "gt_classes", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", ",", "axis", "=", "1", ")", "\n", "data_dict", "[", "'gt_boxes'", "]", "=", "gt_boxes", "\n", "\n", "", "data_dict", "=", "self", ".", "point_feature_encoder", ".", "forward", "(", "data_dict", ")", "\n", "\n", "data_dict", "=", "self", ".", "data_processor", ".", "forward", "(", "\n", "data_dict", "=", "data_dict", "\n", ")", "\n", "data_dict", ".", "pop", "(", "'gt_names'", ",", "None", ")", "\n", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.collate_batch": [[148, 181], ["collections.defaultdict", "len", "collections.defaultdict.items", "cur_sample.items", "data_dict[].append", "numpy.concatenate", "print", "enumerate", "numpy.concatenate", "numpy.pad", "coors.append", "max", "numpy.zeros", "range", "numpy.stack", "len", "val[].__len__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "@", "staticmethod", "\n", "def", "collate_batch", "(", "batch_list", ",", "_unused", "=", "False", ")", ":", "\n", "        ", "data_dict", "=", "defaultdict", "(", "list", ")", "\n", "for", "cur_sample", "in", "batch_list", ":", "\n", "            ", "for", "key", ",", "val", "in", "cur_sample", ".", "items", "(", ")", ":", "\n", "                ", "data_dict", "[", "key", "]", ".", "append", "(", "val", ")", "\n", "", "", "batch_size", "=", "len", "(", "batch_list", ")", "\n", "ret", "=", "{", "}", "\n", "\n", "for", "key", ",", "val", "in", "data_dict", ".", "items", "(", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "if", "key", "in", "[", "'voxels'", ",", "'voxel_num_points'", "]", ":", "\n", "                    ", "ret", "[", "key", "]", "=", "np", ".", "concatenate", "(", "val", ",", "axis", "=", "0", ")", "\n", "", "elif", "key", "in", "[", "'points'", ",", "'voxel_coords'", "]", ":", "\n", "                    ", "coors", "=", "[", "]", "\n", "for", "i", ",", "coor", "in", "enumerate", "(", "val", ")", ":", "\n", "                        ", "coor_pad", "=", "np", ".", "pad", "(", "coor", ",", "(", "(", "0", ",", "0", ")", ",", "(", "1", ",", "0", ")", ")", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "i", ")", "\n", "coors", ".", "append", "(", "coor_pad", ")", "\n", "", "ret", "[", "key", "]", "=", "np", ".", "concatenate", "(", "coors", ",", "axis", "=", "0", ")", "\n", "", "elif", "key", "in", "[", "'gt_boxes'", "]", ":", "\n", "                    ", "max_gt", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "val", "]", ")", "\n", "batch_gt_boxes3d", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "max_gt", ",", "val", "[", "0", "]", ".", "shape", "[", "-", "1", "]", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "k", "in", "range", "(", "batch_size", ")", ":", "\n", "                        ", "batch_gt_boxes3d", "[", "k", ",", ":", "val", "[", "k", "]", ".", "__len__", "(", ")", ",", ":", "]", "=", "val", "[", "k", "]", "\n", "", "ret", "[", "key", "]", "=", "batch_gt_boxes3d", "\n", "", "else", ":", "\n", "                    ", "ret", "[", "key", "]", "=", "np", ".", "stack", "(", "val", ",", "axis", "=", "0", ")", "\n", "", "", "except", ":", "\n", "                ", "print", "(", "'Error in collate_batch: key=%s'", "%", "key", ")", "\n", "raise", "TypeError", "\n", "\n", "", "", "ret", "[", "'batch_size'", "]", "=", "batch_size", "\n", "return", "ret", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.__init__.DistributedSampler.__init__": [[20, 23], ["torch.utils.data.DistributedSampler.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["        ", "def", "children", "(", "m", ":", "nn", ".", "Module", ")", ":", "\n", "            ", "return", "list", "(", "m", ".", "children", "(", ")", ")", "\n", "\n", "", "def", "num_children", "(", "m", ":", "nn", ".", "Module", ")", "->", "int", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.__init__.DistributedSampler.__iter__": [[24, 39], ["iter", "torch.Generator", "torch.Generator.manual_seed", "torch.randperm().tolist", "torch.arange().tolist", "len", "len", "torch.randperm", "torch.arange", "len", "len", "len"], "methods", ["None"], ["            ", "return", "len", "(", "children", "(", "m", ")", ")", "\n", "\n", "", "flatten_model", "=", "lambda", "m", ":", "sum", "(", "map", "(", "flatten_model", ",", "m", ".", "children", "(", ")", ")", ",", "[", "]", ")", "if", "num_children", "(", "m", ")", "else", "[", "m", "]", "\n", "get_layer_groups", "=", "lambda", "m", ":", "[", "nn", ".", "Sequential", "(", "*", "flatten_model", "(", "m", ")", ")", "]", "\n", "\n", "optimizer_func", "=", "partial", "(", "optim", ".", "Adam", ",", "betas", "=", "(", "0.9", ",", "0.99", ")", ")", "\n", "optimizer", "=", "OptimWrapper", ".", "create", "(", "\n", "optimizer_func", ",", "3e-3", ",", "get_layer_groups", "(", "model", ")", ",", "wd", "=", "optim_cfg", ".", "WEIGHT_DECAY", ",", "true_wd", "=", "True", ",", "bn_wd", "=", "True", "\n", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "optimizer", "\n", "\n", "\n", "", "def", "build_scheduler", "(", "optimizer", ",", "total_iters_each_epoch", ",", "total_epochs", ",", "last_epoch", ",", "optim_cfg", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.__init__.build_dataloader": [[41, 71], ["torch.utils.data.DataLoader", "hasattr", "dataset.merge_all_iters_to_one_epoch", "torch.utils.data.distributed.DistributedSampler", "pcdet.utils.common_utils.get_dist_info", "__init__.DistributedSampler"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.merge_all_iters_to_one_epoch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.get_dist_info"], ["def", "lr_lbmd", "(", "cur_epoch", ")", ":", "\n", "        ", "cur_decay", "=", "1", "\n", "for", "decay_step", "in", "decay_steps", ":", "\n", "            ", "if", "cur_epoch", ">=", "decay_step", ":", "\n", "                ", "cur_decay", "=", "cur_decay", "*", "optim_cfg", ".", "LR_DECAY", "\n", "", "", "return", "max", "(", "cur_decay", ",", "optim_cfg", ".", "LR_CLIP", "/", "optim_cfg", ".", "LR", ")", "\n", "\n", "", "lr_warmup_scheduler", "=", "None", "\n", "total_steps", "=", "total_iters_each_epoch", "*", "total_epochs", "\n", "if", "optim_cfg", ".", "OPTIMIZER", "==", "'adam_onecycle'", ":", "\n", "        ", "lr_scheduler", "=", "OneCycle", "(", "\n", "optimizer", ",", "total_steps", ",", "optim_cfg", ".", "LR", ",", "list", "(", "optim_cfg", ".", "MOMS", ")", ",", "optim_cfg", ".", "DIV_FACTOR", ",", "optim_cfg", ".", "PCT_START", "\n", ")", "\n", "", "else", ":", "\n", "        ", "lr_scheduler", "=", "lr_sched", ".", "LambdaLR", "(", "optimizer", ",", "lr_lbmd", ",", "last_epoch", "=", "last_epoch", ")", "\n", "\n", "if", "optim_cfg", ".", "LR_WARMUP", ":", "\n", "            ", "lr_warmup_scheduler", "=", "CosineWarmupLR", "(", "\n", "optimizer", ",", "T_max", "=", "optim_cfg", ".", "WARMUP_EPOCH", "*", "len", "(", "total_iters_each_epoch", ")", ",", "\n", "eta_min", "=", "optim_cfg", ".", "LR", "/", "optim_cfg", ".", "DIV_FACTOR", "\n", ")", "\n", "\n", "", "", "return", "lr_scheduler", ",", "lr_warmup_scheduler", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.__init__": [[13, 33], ["dataset.DatasetTemplate.__init__", "kitti_dataset.KittiDataset.include_kitti_data", "split_dir.exists", "x.strip", "open().readlines", "open"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.include_kitti_data"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", ",", "class_names", ",", "training", "=", "True", ",", "root_path", "=", "None", ",", "logger", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            root_path:\n            dataset_cfg:\n            class_names:\n            training:\n            logger:\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "dataset_cfg", "=", "dataset_cfg", ",", "class_names", "=", "class_names", ",", "training", "=", "training", ",", "root_path", "=", "root_path", ",", "logger", "=", "logger", "\n", ")", "\n", "self", ".", "split", "=", "self", ".", "dataset_cfg", ".", "DATA_SPLIT", "[", "self", ".", "mode", "]", "\n", "self", ".", "root_split_path", "=", "self", ".", "root_path", "/", "(", "'training'", "if", "self", ".", "split", "!=", "'test'", "else", "'testing'", ")", "\n", "\n", "split_dir", "=", "self", ".", "root_path", "/", "'ImageSets'", "/", "(", "self", ".", "split", "+", "'.txt'", ")", "\n", "self", ".", "sample_id_list", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "split_dir", ")", ".", "readlines", "(", ")", "]", "if", "split_dir", ".", "exists", "(", ")", "else", "None", "\n", "\n", "self", ".", "kitti_infos", "=", "[", "]", "\n", "self", ".", "include_kitti_data", "(", "self", ".", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.include_kitti_data": [[34, 51], ["kitti_dataset.KittiDataset.kitti_infos.extend", "kitti_dataset.KittiDataset.logger.info", "kitti_dataset.KittiDataset.logger.info", "info_path.exists", "open", "pickle.load", "kitti_infos.extend", "len"], "methods", ["None"], ["", "def", "include_kitti_data", "(", "self", ",", "mode", ")", ":", "\n", "        ", "if", "self", ".", "logger", "is", "not", "None", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "'Loading KITTI dataset'", ")", "\n", "", "kitti_infos", "=", "[", "]", "\n", "\n", "for", "info_path", "in", "self", ".", "dataset_cfg", ".", "INFO_PATH", "[", "mode", "]", ":", "\n", "            ", "info_path", "=", "self", ".", "root_path", "/", "info_path", "\n", "if", "not", "info_path", ".", "exists", "(", ")", ":", "\n", "                ", "continue", "\n", "", "with", "open", "(", "info_path", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "infos", "=", "pickle", ".", "load", "(", "f", ")", "\n", "kitti_infos", ".", "extend", "(", "infos", ")", "\n", "\n", "", "", "self", ".", "kitti_infos", ".", "extend", "(", "kitti_infos", ")", "\n", "\n", "if", "self", ".", "logger", "is", "not", "None", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "'Total samples for KITTI dataset: %d'", "%", "(", "len", "(", "kitti_infos", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.set_split": [[52, 61], ["dataset.DatasetTemplate.__init__", "split_dir.exists", "x.strip", "open().readlines", "open"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["", "", "def", "set_split", "(", "self", ",", "split", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "dataset_cfg", "=", "self", ".", "dataset_cfg", ",", "class_names", "=", "self", ".", "class_names", ",", "training", "=", "self", ".", "training", ",", "root_path", "=", "self", ".", "root_path", ",", "logger", "=", "self", ".", "logger", "\n", ")", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "root_split_path", "=", "self", ".", "root_path", "/", "(", "'training'", "if", "self", ".", "split", "!=", "'test'", "else", "'testing'", ")", "\n", "\n", "split_dir", "=", "self", ".", "root_path", "/", "'ImageSets'", "/", "(", "self", ".", "split", "+", "'.txt'", ")", "\n", "self", ".", "sample_id_list", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "split_dir", ")", ".", "readlines", "(", ")", "]", "if", "split_dir", ".", "exists", "(", ")", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_lidar": [[62, 66], ["lidar_file.exists", "numpy.fromfile().reshape", "numpy.fromfile", "str"], "methods", ["None"], ["", "def", "get_lidar", "(", "self", ",", "idx", ")", ":", "\n", "        ", "lidar_file", "=", "self", ".", "root_split_path", "/", "'velodyne'", "/", "(", "'%s.bin'", "%", "idx", ")", "\n", "assert", "lidar_file", ".", "exists", "(", ")", "\n", "return", "np", ".", "fromfile", "(", "str", "(", "lidar_file", ")", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_image_shape": [[67, 71], ["img_file.exists", "numpy.array", "skimage.io.imread"], "methods", ["None"], ["", "def", "get_image_shape", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_file", "=", "self", ".", "root_split_path", "/", "'image_2'", "/", "(", "'%s.png'", "%", "idx", ")", "\n", "assert", "img_file", ".", "exists", "(", ")", "\n", "return", "np", ".", "array", "(", "io", ".", "imread", "(", "img_file", ")", ".", "shape", "[", ":", "2", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_label": [[72, 76], ["label_file.exists", "utils.object3d_kitti.get_objects_from_label"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.object3d_kitti.get_objects_from_label"], ["", "def", "get_label", "(", "self", ",", "idx", ")", ":", "\n", "        ", "label_file", "=", "self", ".", "root_split_path", "/", "'label_2'", "/", "(", "'%s.txt'", "%", "idx", ")", "\n", "assert", "label_file", ".", "exists", "(", ")", "\n", "return", "object3d_kitti", ".", "get_objects_from_label", "(", "label_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_calib": [[77, 81], ["calib_file.exists", "utils.calibration_kitti.Calibration"], "methods", ["None"], ["", "def", "get_calib", "(", "self", ",", "idx", ")", ":", "\n", "        ", "calib_file", "=", "self", ".", "root_split_path", "/", "'calib'", "/", "(", "'%s.txt'", "%", "idx", ")", "\n", "assert", "calib_file", ".", "exists", "(", ")", "\n", "return", "calibration_kitti", ".", "Calibration", "(", "calib_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_road_plane": [[82, 99], ["numpy.asarray", "numpy.linalg.norm", "plane_file.exists", "open", "f.readlines", "float", "lines[].split"], "methods", ["None"], ["", "def", "get_road_plane", "(", "self", ",", "idx", ")", ":", "\n", "        ", "plane_file", "=", "self", ".", "root_split_path", "/", "'planes'", "/", "(", "'%s.txt'", "%", "idx", ")", "\n", "if", "not", "plane_file", ".", "exists", "(", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "", "with", "open", "(", "plane_file", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "", "lines", "=", "[", "float", "(", "i", ")", "for", "i", "in", "lines", "[", "3", "]", ".", "split", "(", ")", "]", "\n", "plane", "=", "np", ".", "asarray", "(", "lines", ")", "\n", "\n", "# Ensure normal is always facing up, this is in the rectified camera coordinate", "\n", "if", "plane", "[", "1", "]", ">", "0", ":", "\n", "            ", "plane", "=", "-", "plane", "\n", "\n", "", "norm", "=", "np", ".", "linalg", ".", "norm", "(", "plane", "[", "0", ":", "3", "]", ")", "\n", "plane", "=", "plane", "/", "norm", "\n", "return", "plane", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_fov_flag": [[100, 118], ["calib.rect_to_img", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.rect_to_img"], ["", "@", "staticmethod", "\n", "def", "get_fov_flag", "(", "pts_rect", ",", "img_shape", ",", "calib", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            pts_rect:\n            img_shape:\n            calib:\n\n        Returns:\n\n        \"\"\"", "\n", "pts_img", ",", "pts_rect_depth", "=", "calib", ".", "rect_to_img", "(", "pts_rect", ")", "\n", "val_flag_1", "=", "np", ".", "logical_and", "(", "pts_img", "[", ":", ",", "0", "]", ">=", "0", ",", "pts_img", "[", ":", ",", "0", "]", "<", "img_shape", "[", "1", "]", ")", "\n", "val_flag_2", "=", "np", ".", "logical_and", "(", "pts_img", "[", ":", ",", "1", "]", ">=", "0", ",", "pts_img", "[", ":", ",", "1", "]", "<", "img_shape", "[", "0", "]", ")", "\n", "val_flag_merge", "=", "np", ".", "logical_and", "(", "val_flag_1", ",", "val_flag_2", ")", "\n", "pts_valid_flag", "=", "np", ".", "logical_and", "(", "val_flag_merge", ",", "pts_rect_depth", ">=", "0", ")", "\n", "\n", "return", "pts_valid_flag", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_infos": [[119, 192], ["list", "print", "kitti_dataset.KittiDataset.get_calib", "numpy.concatenate", "numpy.zeros", "numpy.concatenate", "futures.ThreadPoolExecutor", "executor.map", "kitti_dataset.KittiDataset.get_image_shape", "kitti_dataset.KittiDataset.get_label", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.concatenate", "numpy.array", "numpy.concatenate", "numpy.array", "numpy.array", "numpy.array", "len", "len", "numpy.array", "kitti_dataset.KittiDataset.rect_to_lidar", "numpy.concatenate", "numpy.array", "numpy.array", "list", "kitti_dataset.KittiDataset.get_lidar", "kitti_dataset.KittiDataset.get_calib", "kitti_dataset.KittiDataset.lidar_to_rect", "kitti_dataset.KittiDataset.get_fov_flag", "utils.box_utils.boxes_to_corners_3d", "range", "obj.box2d.reshape", "obj.loc.reshape", "range", "numpy.ones", "utils.box_utils.in_hull", "utils.box_utils.in_hull.sum"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_calib", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_image_shape", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_label", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.rect_to_lidar", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_lidar", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_calib", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.lidar_to_rect", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_fov_flag", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.boxes_to_corners_3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.in_hull"], ["", "def", "get_infos", "(", "self", ",", "num_workers", "=", "4", ",", "has_label", "=", "True", ",", "count_inside_pts", "=", "True", ",", "sample_id_list", "=", "None", ")", ":", "\n", "        ", "import", "concurrent", ".", "futures", "as", "futures", "\n", "\n", "def", "process_single_scene", "(", "sample_idx", ")", ":", "\n", "            ", "print", "(", "'%s sample_idx: %s'", "%", "(", "self", ".", "split", ",", "sample_idx", ")", ")", "\n", "info", "=", "{", "}", "\n", "pc_info", "=", "{", "'num_features'", ":", "4", ",", "'lidar_idx'", ":", "sample_idx", "}", "\n", "info", "[", "'point_cloud'", "]", "=", "pc_info", "\n", "\n", "image_info", "=", "{", "'image_idx'", ":", "sample_idx", ",", "'image_shape'", ":", "self", ".", "get_image_shape", "(", "sample_idx", ")", "}", "\n", "info", "[", "'image'", "]", "=", "image_info", "\n", "calib", "=", "self", ".", "get_calib", "(", "sample_idx", ")", "\n", "\n", "P2", "=", "np", ".", "concatenate", "(", "[", "calib", ".", "P2", ",", "np", ".", "array", "(", "[", "[", "0.", ",", "0.", ",", "0.", ",", "1.", "]", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "R0_4x4", "=", "np", ".", "zeros", "(", "[", "4", ",", "4", "]", ",", "dtype", "=", "calib", ".", "R0", ".", "dtype", ")", "\n", "R0_4x4", "[", "3", ",", "3", "]", "=", "1.", "\n", "R0_4x4", "[", ":", "3", ",", ":", "3", "]", "=", "calib", ".", "R0", "\n", "V2C_4x4", "=", "np", ".", "concatenate", "(", "[", "calib", ".", "V2C", ",", "np", ".", "array", "(", "[", "[", "0.", ",", "0.", ",", "0.", ",", "1.", "]", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "calib_info", "=", "{", "'P2'", ":", "P2", ",", "'R0_rect'", ":", "R0_4x4", ",", "'Tr_velo_to_cam'", ":", "V2C_4x4", "}", "\n", "\n", "info", "[", "'calib'", "]", "=", "calib_info", "\n", "\n", "if", "has_label", ":", "\n", "                ", "obj_list", "=", "self", ".", "get_label", "(", "sample_idx", ")", "\n", "annotations", "=", "{", "}", "\n", "annotations", "[", "'name'", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "cls_type", "for", "obj", "in", "obj_list", "]", ")", "\n", "annotations", "[", "'truncated'", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "truncation", "for", "obj", "in", "obj_list", "]", ")", "\n", "annotations", "[", "'occluded'", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "occlusion", "for", "obj", "in", "obj_list", "]", ")", "\n", "annotations", "[", "'alpha'", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "alpha", "for", "obj", "in", "obj_list", "]", ")", "\n", "annotations", "[", "'bbox'", "]", "=", "np", ".", "concatenate", "(", "[", "obj", ".", "box2d", ".", "reshape", "(", "1", ",", "4", ")", "for", "obj", "in", "obj_list", "]", ",", "axis", "=", "0", ")", "\n", "annotations", "[", "'dimensions'", "]", "=", "np", ".", "array", "(", "[", "[", "obj", ".", "l", ",", "obj", ".", "h", ",", "obj", ".", "w", "]", "for", "obj", "in", "obj_list", "]", ")", "# lhw(camera) format", "\n", "annotations", "[", "'location'", "]", "=", "np", ".", "concatenate", "(", "[", "obj", ".", "loc", ".", "reshape", "(", "1", ",", "3", ")", "for", "obj", "in", "obj_list", "]", ",", "axis", "=", "0", ")", "\n", "annotations", "[", "'rotation_y'", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "ry", "for", "obj", "in", "obj_list", "]", ")", "\n", "annotations", "[", "'score'", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "score", "for", "obj", "in", "obj_list", "]", ")", "\n", "annotations", "[", "'difficulty'", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "level", "for", "obj", "in", "obj_list", "]", ",", "np", ".", "int32", ")", "\n", "\n", "num_objects", "=", "len", "(", "[", "obj", ".", "cls_type", "for", "obj", "in", "obj_list", "if", "obj", ".", "cls_type", "!=", "'DontCare'", "]", ")", "\n", "num_gt", "=", "len", "(", "annotations", "[", "'name'", "]", ")", "\n", "index", "=", "list", "(", "range", "(", "num_objects", ")", ")", "+", "[", "-", "1", "]", "*", "(", "num_gt", "-", "num_objects", ")", "\n", "annotations", "[", "'index'", "]", "=", "np", ".", "array", "(", "index", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "loc", "=", "annotations", "[", "'location'", "]", "[", ":", "num_objects", "]", "\n", "dims", "=", "annotations", "[", "'dimensions'", "]", "[", ":", "num_objects", "]", "\n", "rots", "=", "annotations", "[", "'rotation_y'", "]", "[", ":", "num_objects", "]", "\n", "loc_lidar", "=", "calib", ".", "rect_to_lidar", "(", "loc", ")", "\n", "l", ",", "h", ",", "w", "=", "dims", "[", ":", ",", "0", ":", "1", "]", ",", "dims", "[", ":", ",", "1", ":", "2", "]", ",", "dims", "[", ":", ",", "2", ":", "3", "]", "\n", "loc_lidar", "[", ":", ",", "2", "]", "+=", "h", "[", ":", ",", "0", "]", "/", "2", "\n", "gt_boxes_lidar", "=", "np", ".", "concatenate", "(", "[", "loc_lidar", ",", "l", ",", "w", ",", "h", ",", "-", "(", "np", ".", "pi", "/", "2", "+", "rots", "[", "...", ",", "np", ".", "newaxis", "]", ")", "]", ",", "axis", "=", "1", ")", "\n", "annotations", "[", "'gt_boxes_lidar'", "]", "=", "gt_boxes_lidar", "\n", "\n", "info", "[", "'annos'", "]", "=", "annotations", "\n", "\n", "if", "count_inside_pts", ":", "\n", "                    ", "points", "=", "self", ".", "get_lidar", "(", "sample_idx", ")", "\n", "calib", "=", "self", ".", "get_calib", "(", "sample_idx", ")", "\n", "pts_rect", "=", "calib", ".", "lidar_to_rect", "(", "points", "[", ":", ",", "0", ":", "3", "]", ")", "\n", "\n", "fov_flag", "=", "self", ".", "get_fov_flag", "(", "pts_rect", ",", "info", "[", "'image'", "]", "[", "'image_shape'", "]", ",", "calib", ")", "\n", "pts_fov", "=", "points", "[", "fov_flag", "]", "\n", "corners_lidar", "=", "box_utils", ".", "boxes_to_corners_3d", "(", "gt_boxes_lidar", ")", "\n", "num_points_in_gt", "=", "-", "np", ".", "ones", "(", "num_gt", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "\n", "for", "k", "in", "range", "(", "num_objects", ")", ":", "\n", "                        ", "flag", "=", "box_utils", ".", "in_hull", "(", "pts_fov", "[", ":", ",", "0", ":", "3", "]", ",", "corners_lidar", "[", "k", "]", ")", "\n", "num_points_in_gt", "[", "k", "]", "=", "flag", ".", "sum", "(", ")", "\n", "", "annotations", "[", "'num_points_in_gt'", "]", "=", "num_points_in_gt", "\n", "\n", "", "", "return", "info", "\n", "\n", "", "sample_id_list", "=", "sample_id_list", "if", "sample_id_list", "is", "not", "None", "else", "self", ".", "sample_id_list", "\n", "with", "futures", ".", "ThreadPoolExecutor", "(", "num_workers", ")", "as", "executor", ":", "\n", "            ", "infos", "=", "executor", ".", "map", "(", "process_single_scene", ",", "sample_id_list", ")", "\n", "", "return", "list", "(", "infos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.create_groundtruth_database": [[193, 244], ["database_save_path.mkdir", "range", "all_db_infos.items", "Path", "Path", "open", "pickle.load", "len", "print", "kitti_dataset.KittiDataset.get_lidar", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_cpu().numpy", "range", "print", "open", "pickle.dump", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_cpu", "open", "gt_points.tofile", "str", "len", "torch.from_numpy", "torch.from_numpy", "filepath.relative_to", "all_db_infos[].append", "len"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_lidar", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_cpu"], ["", "def", "create_groundtruth_database", "(", "self", ",", "info_path", "=", "None", ",", "used_classes", "=", "None", ",", "split", "=", "'train'", ")", ":", "\n", "        ", "import", "torch", "\n", "\n", "database_save_path", "=", "Path", "(", "self", ".", "root_path", ")", "/", "(", "'gt_database'", "if", "split", "==", "'train'", "else", "(", "'gt_database_%s'", "%", "split", ")", ")", "\n", "db_info_save_path", "=", "Path", "(", "self", ".", "root_path", ")", "/", "(", "'kitti_dbinfos_%s.pkl'", "%", "split", ")", "\n", "\n", "database_save_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "all_db_infos", "=", "{", "}", "\n", "\n", "with", "open", "(", "info_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "infos", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "for", "k", "in", "range", "(", "len", "(", "infos", ")", ")", ":", "\n", "            ", "print", "(", "'gt_database sample: %d/%d'", "%", "(", "k", "+", "1", ",", "len", "(", "infos", ")", ")", ")", "\n", "info", "=", "infos", "[", "k", "]", "\n", "sample_idx", "=", "info", "[", "'point_cloud'", "]", "[", "'lidar_idx'", "]", "\n", "points", "=", "self", ".", "get_lidar", "(", "sample_idx", ")", "\n", "annos", "=", "info", "[", "'annos'", "]", "\n", "names", "=", "annos", "[", "'name'", "]", "\n", "difficulty", "=", "annos", "[", "'difficulty'", "]", "\n", "bbox", "=", "annos", "[", "'bbox'", "]", "\n", "gt_boxes", "=", "annos", "[", "'gt_boxes_lidar'", "]", "\n", "\n", "num_obj", "=", "gt_boxes", ".", "shape", "[", "0", "]", "\n", "point_indices", "=", "roiaware_pool3d_utils", ".", "points_in_boxes_cpu", "(", "\n", "torch", ".", "from_numpy", "(", "points", "[", ":", ",", "0", ":", "3", "]", ")", ",", "torch", ".", "from_numpy", "(", "gt_boxes", ")", "\n", ")", ".", "numpy", "(", ")", "# (nboxes, npoints)", "\n", "\n", "for", "i", "in", "range", "(", "num_obj", ")", ":", "\n", "                ", "filename", "=", "'%s_%s_%d.bin'", "%", "(", "sample_idx", ",", "names", "[", "i", "]", ",", "i", ")", "\n", "filepath", "=", "database_save_path", "/", "filename", "\n", "gt_points", "=", "points", "[", "point_indices", "[", "i", "]", ">", "0", "]", "\n", "\n", "gt_points", "[", ":", ",", ":", "3", "]", "-=", "gt_boxes", "[", "i", ",", ":", "3", "]", "\n", "with", "open", "(", "filepath", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "gt_points", ".", "tofile", "(", "f", ")", "\n", "\n", "", "if", "(", "used_classes", "is", "None", ")", "or", "names", "[", "i", "]", "in", "used_classes", ":", "\n", "                    ", "db_path", "=", "str", "(", "filepath", ".", "relative_to", "(", "self", ".", "root_path", ")", ")", "# gt_database/xxxxx.bin", "\n", "db_info", "=", "{", "'name'", ":", "names", "[", "i", "]", ",", "'path'", ":", "db_path", ",", "'image_idx'", ":", "sample_idx", ",", "'gt_idx'", ":", "i", ",", "\n", "'box3d_lidar'", ":", "gt_boxes", "[", "i", "]", ",", "'num_points_in_gt'", ":", "gt_points", ".", "shape", "[", "0", "]", ",", "\n", "'difficulty'", ":", "difficulty", "[", "i", "]", ",", "'bbox'", ":", "bbox", "[", "i", "]", ",", "'score'", ":", "annos", "[", "'score'", "]", "[", "i", "]", "}", "\n", "if", "names", "[", "i", "]", "in", "all_db_infos", ":", "\n", "                        ", "all_db_infos", "[", "names", "[", "i", "]", "]", ".", "append", "(", "db_info", ")", "\n", "", "else", ":", "\n", "                        ", "all_db_infos", "[", "names", "[", "i", "]", "]", "=", "[", "db_info", "]", "\n", "", "", "", "", "for", "k", ",", "v", "in", "all_db_infos", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "'Database %s: %d'", "%", "(", "k", ",", "len", "(", "v", ")", ")", ")", "\n", "\n", "", "with", "open", "(", "db_info_save_path", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "all_db_infos", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.generate_prediction_dicts": [[245, 321], ["enumerate", "box_dict[].cpu().numpy", "box_dict[].cpu().numpy", "box_dict[].cpu().numpy", "kitti_dataset.KittiDataset.generate_prediction_dicts.get_template_prediction"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "generate_prediction_dicts", "(", "batch_dict", ",", "pred_dicts", ",", "class_names", ",", "output_path", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                frame_id:\n            pred_dicts: list of pred_dicts\n                pred_boxes: (N, 7), Tensor\n                pred_scores: (N), Tensor\n                pred_labels: (N), Tensor\n            class_names:\n            output_path:\n\n        Returns:\n\n        \"\"\"", "\n", "def", "get_template_prediction", "(", "num_samples", ")", ":", "\n", "            ", "ret_dict", "=", "{", "\n", "'name'", ":", "np", ".", "zeros", "(", "num_samples", ")", ",", "'truncated'", ":", "np", ".", "zeros", "(", "num_samples", ")", ",", "\n", "'occluded'", ":", "np", ".", "zeros", "(", "num_samples", ")", ",", "'alpha'", ":", "np", ".", "zeros", "(", "num_samples", ")", ",", "\n", "'bbox'", ":", "np", ".", "zeros", "(", "[", "num_samples", ",", "4", "]", ")", ",", "'dimensions'", ":", "np", ".", "zeros", "(", "[", "num_samples", ",", "3", "]", ")", ",", "\n", "'location'", ":", "np", ".", "zeros", "(", "[", "num_samples", ",", "3", "]", ")", ",", "'rotation_y'", ":", "np", ".", "zeros", "(", "num_samples", ")", ",", "\n", "'score'", ":", "np", ".", "zeros", "(", "num_samples", ")", ",", "'boxes_lidar'", ":", "np", ".", "zeros", "(", "[", "num_samples", ",", "7", "]", ")", "\n", "}", "\n", "return", "ret_dict", "\n", "\n", "", "def", "generate_single_sample_dict", "(", "batch_index", ",", "box_dict", ")", ":", "\n", "            ", "pred_scores", "=", "box_dict", "[", "'pred_scores'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_boxes", "=", "box_dict", "[", "'pred_boxes'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_labels", "=", "box_dict", "[", "'pred_labels'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_dict", "=", "get_template_prediction", "(", "pred_scores", ".", "shape", "[", "0", "]", ")", "\n", "if", "pred_scores", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "                ", "return", "pred_dict", "\n", "\n", "", "calib", "=", "batch_dict", "[", "'calib'", "]", "[", "batch_index", "]", "\n", "image_shape", "=", "batch_dict", "[", "'image_shape'", "]", "[", "batch_index", "]", "\n", "pred_boxes_camera", "=", "box_utils", ".", "boxes3d_lidar_to_kitti_camera", "(", "pred_boxes", ",", "calib", ")", "\n", "pred_boxes_img", "=", "box_utils", ".", "boxes3d_kitti_camera_to_imageboxes", "(", "\n", "pred_boxes_camera", ",", "calib", ",", "image_shape", "=", "image_shape", "\n", ")", "\n", "\n", "pred_dict", "[", "'name'", "]", "=", "np", ".", "array", "(", "class_names", ")", "[", "pred_labels", "-", "1", "]", "\n", "pred_dict", "[", "'alpha'", "]", "=", "-", "np", ".", "arctan2", "(", "-", "pred_boxes", "[", ":", ",", "1", "]", ",", "pred_boxes", "[", ":", ",", "0", "]", ")", "+", "pred_boxes_camera", "[", ":", ",", "6", "]", "\n", "pred_dict", "[", "'bbox'", "]", "=", "pred_boxes_img", "\n", "pred_dict", "[", "'dimensions'", "]", "=", "pred_boxes_camera", "[", ":", ",", "3", ":", "6", "]", "\n", "pred_dict", "[", "'location'", "]", "=", "pred_boxes_camera", "[", ":", ",", "0", ":", "3", "]", "\n", "pred_dict", "[", "'rotation_y'", "]", "=", "pred_boxes_camera", "[", ":", ",", "6", "]", "\n", "pred_dict", "[", "'score'", "]", "=", "pred_scores", "\n", "pred_dict", "[", "'boxes_lidar'", "]", "=", "pred_boxes", "\n", "\n", "return", "pred_dict", "\n", "\n", "", "annos", "=", "[", "]", "\n", "for", "index", ",", "box_dict", "in", "enumerate", "(", "pred_dicts", ")", ":", "\n", "            ", "frame_id", "=", "batch_dict", "[", "'frame_id'", "]", "[", "index", "]", "\n", "\n", "single_pred_dict", "=", "generate_single_sample_dict", "(", "index", ",", "box_dict", ")", "\n", "single_pred_dict", "[", "'frame_id'", "]", "=", "frame_id", "\n", "annos", ".", "append", "(", "single_pred_dict", ")", "\n", "\n", "if", "output_path", "is", "not", "None", ":", "\n", "                ", "cur_det_file", "=", "output_path", "/", "(", "'%s.txt'", "%", "frame_id", ")", "\n", "with", "open", "(", "cur_det_file", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "bbox", "=", "single_pred_dict", "[", "'bbox'", "]", "\n", "loc", "=", "single_pred_dict", "[", "'location'", "]", "\n", "dims", "=", "single_pred_dict", "[", "'dimensions'", "]", "# lhw -> hwl", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "bbox", ")", ")", ":", "\n", "                        ", "print", "(", "'%s -1 -1 %.4f %.4f %.4f %.4f %.4f %.4f %.4f %.4f %.4f %.4f %.4f %.4f %.4f'", "\n", "%", "(", "single_pred_dict", "[", "'name'", "]", "[", "idx", "]", ",", "single_pred_dict", "[", "'alpha'", "]", "[", "idx", "]", ",", "\n", "bbox", "[", "idx", "]", "[", "0", "]", ",", "bbox", "[", "idx", "]", "[", "1", "]", ",", "bbox", "[", "idx", "]", "[", "2", "]", ",", "bbox", "[", "idx", "]", "[", "3", "]", ",", "\n", "dims", "[", "idx", "]", "[", "1", "]", ",", "dims", "[", "idx", "]", "[", "2", "]", ",", "dims", "[", "idx", "]", "[", "0", "]", ",", "loc", "[", "idx", "]", "[", "0", "]", ",", "\n", "loc", "[", "idx", "]", "[", "1", "]", ",", "loc", "[", "idx", "]", "[", "2", "]", ",", "single_pred_dict", "[", "'rotation_y'", "]", "[", "idx", "]", ",", "\n", "single_pred_dict", "[", "'score'", "]", "[", "idx", "]", ")", ",", "file", "=", "f", ")", "\n", "\n", "", "", "", "", "return", "annos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.evaluation": [[322, 333], ["copy.deepcopy", "kitti_eval.get_official_eval_result", "kitti_dataset.KittiDataset.kitti_infos[].keys", "copy.deepcopy"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_official_eval_result"], ["", "def", "evaluation", "(", "self", ",", "det_annos", ",", "class_names", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "'annos'", "not", "in", "self", ".", "kitti_infos", "[", "0", "]", ".", "keys", "(", ")", ":", "\n", "            ", "return", "None", ",", "{", "}", "\n", "\n", "", "from", ".", "kitti_object_eval_python", "import", "eval", "as", "kitti_eval", "\n", "\n", "eval_det_annos", "=", "copy", ".", "deepcopy", "(", "det_annos", ")", "\n", "eval_gt_annos", "=", "[", "copy", ".", "deepcopy", "(", "info", "[", "'annos'", "]", ")", "for", "info", "in", "self", ".", "kitti_infos", "]", "\n", "ap_result_str", ",", "ap_dict", "=", "kitti_eval", ".", "get_official_eval_result", "(", "eval_gt_annos", ",", "eval_det_annos", ",", "class_names", ")", "\n", "\n", "return", "ap_result_str", ",", "ap_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.__len__": [[334, 339], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_merge_all_iters_to_one_epoch", ":", "\n", "            ", "return", "len", "(", "self", ".", "kitti_infos", ")", "*", "self", ".", "total_epochs", "\n", "\n", "", "return", "len", "(", "self", ".", "kitti_infos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.__getitem__": [[340, 384], ["copy.deepcopy", "kitti_dataset.KittiDataset.get_lidar", "kitti_dataset.KittiDataset.get_calib", "kitti_dataset.KittiDataset.prepare_data", "kitti_dataset.KittiDataset.lidar_to_rect", "kitti_dataset.KittiDataset.get_fov_flag", "utils.common_utils.drop_info_with_name", "numpy.concatenate().astype", "utils.box_utils.boxes3d_kitti_camera_to_lidar", "input_dict.update", "kitti_dataset.KittiDataset.get_road_plane", "len", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_lidar", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_calib", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.prepare_data", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.lidar_to_rect", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_fov_flag", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.drop_info_with_name", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_kitti_camera_to_lidar", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_road_plane"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# index = 4", "\n", "        ", "if", "self", ".", "_merge_all_iters_to_one_epoch", ":", "\n", "            ", "index", "=", "index", "%", "len", "(", "self", ".", "kitti_infos", ")", "\n", "\n", "", "info", "=", "copy", ".", "deepcopy", "(", "self", ".", "kitti_infos", "[", "index", "]", ")", "\n", "\n", "sample_idx", "=", "info", "[", "'point_cloud'", "]", "[", "'lidar_idx'", "]", "\n", "\n", "points", "=", "self", ".", "get_lidar", "(", "sample_idx", ")", "\n", "calib", "=", "self", ".", "get_calib", "(", "sample_idx", ")", "\n", "\n", "img_shape", "=", "info", "[", "'image'", "]", "[", "'image_shape'", "]", "\n", "if", "self", ".", "dataset_cfg", ".", "FOV_POINTS_ONLY", ":", "\n", "            ", "pts_rect", "=", "calib", ".", "lidar_to_rect", "(", "points", "[", ":", ",", "0", ":", "3", "]", ")", "\n", "fov_flag", "=", "self", ".", "get_fov_flag", "(", "pts_rect", ",", "img_shape", ",", "calib", ")", "\n", "points", "=", "points", "[", "fov_flag", "]", "\n", "\n", "", "input_dict", "=", "{", "\n", "'points'", ":", "points", ",", "\n", "'frame_id'", ":", "sample_idx", ",", "\n", "'calib'", ":", "calib", ",", "\n", "}", "\n", "\n", "if", "'annos'", "in", "info", ":", "\n", "            ", "annos", "=", "info", "[", "'annos'", "]", "\n", "annos", "=", "common_utils", ".", "drop_info_with_name", "(", "annos", ",", "name", "=", "'DontCare'", ")", "\n", "loc", ",", "dims", ",", "rots", "=", "annos", "[", "'location'", "]", ",", "annos", "[", "'dimensions'", "]", ",", "annos", "[", "'rotation_y'", "]", "\n", "gt_names", "=", "annos", "[", "'name'", "]", "\n", "gt_boxes_camera", "=", "np", ".", "concatenate", "(", "[", "loc", ",", "dims", ",", "rots", "[", "...", ",", "np", ".", "newaxis", "]", "]", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "gt_boxes_lidar", "=", "box_utils", ".", "boxes3d_kitti_camera_to_lidar", "(", "gt_boxes_camera", ",", "calib", ")", "\n", "\n", "input_dict", ".", "update", "(", "{", "\n", "'gt_names'", ":", "gt_names", ",", "\n", "'gt_boxes'", ":", "gt_boxes_lidar", "\n", "}", ")", "\n", "road_plane", "=", "self", ".", "get_road_plane", "(", "sample_idx", ")", "\n", "if", "road_plane", "is", "not", "None", ":", "\n", "                ", "input_dict", "[", "'road_plane'", "]", "=", "road_plane", "\n", "\n", "", "", "data_dict", "=", "self", ".", "prepare_data", "(", "data_dict", "=", "input_dict", ")", "\n", "\n", "data_dict", "[", "'image_shape'", "]", "=", "img_shape", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.create_kitti_infos": [[386, 424], ["kitti_dataset.KittiDataset", "print", "kitti_dataset.KittiDataset.set_split", "kitti_dataset.KittiDataset.get_infos", "print", "kitti_dataset.KittiDataset.set_split", "kitti_dataset.KittiDataset.get_infos", "print", "print", "kitti_dataset.KittiDataset.set_split", "kitti_dataset.KittiDataset.get_infos", "print", "print", "kitti_dataset.KittiDataset.set_split", "kitti_dataset.KittiDataset.create_groundtruth_database", "print", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.set_split", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_infos", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.set_split", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_infos", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.set_split", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.get_infos", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti.kitti_dataset.KittiDataset.set_split", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.create_groundtruth_database"], ["", "", "def", "create_kitti_infos", "(", "dataset_cfg", ",", "class_names", ",", "data_path", ",", "save_path", ",", "workers", "=", "4", ")", ":", "\n", "    ", "dataset", "=", "KittiDataset", "(", "dataset_cfg", "=", "dataset_cfg", ",", "class_names", "=", "class_names", ",", "root_path", "=", "data_path", ",", "training", "=", "False", ")", "\n", "train_split", ",", "val_split", "=", "'train'", ",", "'val'", "\n", "\n", "train_filename", "=", "save_path", "/", "(", "'kitti_infos_%s.pkl'", "%", "train_split", ")", "\n", "val_filename", "=", "save_path", "/", "(", "'kitti_infos_%s.pkl'", "%", "val_split", ")", "\n", "trainval_filename", "=", "save_path", "/", "'kitti_infos_trainval.pkl'", "\n", "test_filename", "=", "save_path", "/", "'kitti_infos_test.pkl'", "\n", "\n", "print", "(", "'---------------Start to generate data infos---------------'", ")", "\n", "\n", "dataset", ".", "set_split", "(", "train_split", ")", "\n", "kitti_infos_train", "=", "dataset", ".", "get_infos", "(", "num_workers", "=", "workers", ",", "has_label", "=", "True", ",", "count_inside_pts", "=", "True", ")", "\n", "with", "open", "(", "train_filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "kitti_infos_train", ",", "f", ")", "\n", "", "print", "(", "'Kitti info train file is saved to %s'", "%", "train_filename", ")", "\n", "\n", "dataset", ".", "set_split", "(", "val_split", ")", "\n", "kitti_infos_val", "=", "dataset", ".", "get_infos", "(", "num_workers", "=", "workers", ",", "has_label", "=", "True", ",", "count_inside_pts", "=", "True", ")", "\n", "with", "open", "(", "val_filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "kitti_infos_val", ",", "f", ")", "\n", "", "print", "(", "'Kitti info val file is saved to %s'", "%", "val_filename", ")", "\n", "\n", "with", "open", "(", "trainval_filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "kitti_infos_train", "+", "kitti_infos_val", ",", "f", ")", "\n", "", "print", "(", "'Kitti info trainval file is saved to %s'", "%", "trainval_filename", ")", "\n", "\n", "dataset", ".", "set_split", "(", "'test'", ")", "\n", "kitti_infos_test", "=", "dataset", ".", "get_infos", "(", "num_workers", "=", "workers", ",", "has_label", "=", "False", ",", "count_inside_pts", "=", "False", ")", "\n", "with", "open", "(", "test_filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "kitti_infos_test", ",", "f", ")", "\n", "", "print", "(", "'Kitti info test file is saved to %s'", "%", "test_filename", ")", "\n", "\n", "print", "(", "'---------------Start create groundtruth database for data augmentation---------------'", ")", "\n", "dataset", ".", "set_split", "(", "train_split", ")", "\n", "dataset", ".", "create_groundtruth_database", "(", "train_filename", ",", "split", "=", "train_split", ")", "\n", "\n", "print", "(", "'---------------Data preparation Done---------------'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_image_index_str": [[11, 13], ["None"], "function", ["None"], ["def", "get_image_index_str", "(", "img_idx", ")", ":", "\n", "    ", "return", "\"{:06d}\"", ".", "format", "(", "img_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_kitti_info_path": [[15, 34], ["kitti_common.get_image_index_str", "pathlib.Path", "ValueError", "str", "str", "pathlib.Path", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_image_index_str"], ["", "def", "get_kitti_info_path", "(", "idx", ",", "\n", "prefix", ",", "\n", "info_type", "=", "'image_2'", ",", "\n", "file_tail", "=", "'.png'", ",", "\n", "training", "=", "True", ",", "\n", "relative_path", "=", "True", ")", ":", "\n", "    ", "img_idx_str", "=", "get_image_index_str", "(", "idx", ")", "\n", "img_idx_str", "+=", "file_tail", "\n", "prefix", "=", "pathlib", ".", "Path", "(", "prefix", ")", "\n", "if", "training", ":", "\n", "        ", "file_path", "=", "pathlib", ".", "Path", "(", "'training'", ")", "/", "info_type", "/", "img_idx_str", "\n", "", "else", ":", "\n", "        ", "file_path", "=", "pathlib", ".", "Path", "(", "'testing'", ")", "/", "info_type", "/", "img_idx_str", "\n", "", "if", "not", "(", "prefix", "/", "file_path", ")", ".", "exists", "(", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"file not exist: {}\"", ".", "format", "(", "file_path", ")", ")", "\n", "", "if", "relative_path", ":", "\n", "        ", "return", "str", "(", "file_path", ")", "\n", "", "else", ":", "\n", "        ", "return", "str", "(", "prefix", "/", "file_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_image_path": [[36, 39], ["kitti_common.get_kitti_info_path"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_kitti_info_path"], ["", "", "def", "get_image_path", "(", "idx", ",", "prefix", ",", "training", "=", "True", ",", "relative_path", "=", "True", ")", ":", "\n", "    ", "return", "get_kitti_info_path", "(", "idx", ",", "prefix", ",", "'image_2'", ",", "'.png'", ",", "training", ",", "\n", "relative_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_label_path": [[41, 44], ["kitti_common.get_kitti_info_path"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_kitti_info_path"], ["", "def", "get_label_path", "(", "idx", ",", "prefix", ",", "training", "=", "True", ",", "relative_path", "=", "True", ")", ":", "\n", "    ", "return", "get_kitti_info_path", "(", "idx", ",", "prefix", ",", "'label_2'", ",", "'.txt'", ",", "training", ",", "\n", "relative_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_velodyne_path": [[46, 49], ["kitti_common.get_kitti_info_path"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_kitti_info_path"], ["", "def", "get_velodyne_path", "(", "idx", ",", "prefix", ",", "training", "=", "True", ",", "relative_path", "=", "True", ")", ":", "\n", "    ", "return", "get_kitti_info_path", "(", "idx", ",", "prefix", ",", "'velodyne'", ",", "'.bin'", ",", "training", ",", "\n", "relative_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_calib_path": [[51, 54], ["kitti_common.get_kitti_info_path"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_kitti_info_path"], ["", "def", "get_calib_path", "(", "idx", ",", "prefix", ",", "training", "=", "True", ",", "relative_path", "=", "True", ")", ":", "\n", "    ", "return", "get_kitti_info_path", "(", "idx", ",", "prefix", ",", "'calib'", ",", "'.txt'", ",", "training", ",", "\n", "relative_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common._extend_matrix": [[56, 59], ["numpy.concatenate", "numpy.array"], "function", ["None"], ["", "def", "_extend_matrix", "(", "mat", ")", ":", "\n", "    ", "mat", "=", "np", ".", "concatenate", "(", "[", "mat", ",", "np", ".", "array", "(", "[", "[", "0.", ",", "0.", ",", "0.", ",", "1.", "]", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_kitti_image_info": [[61, 150], ["pathlib.Path", "list", "isinstance", "list", "kitti_common.get_image_path", "concurrent.ThreadPoolExecutor", "executor.map", "range", "kitti_common.get_velodyne_path", "numpy.array", "kitti_common.get_label_path", "kitti_common.get_label_anno", "kitti_common.get_calib_path", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "kitti_common.add_difficulty_to_annos", "str", "str", "open", "f.readlines", "kitti_common._extend_matrix", "kitti_common._extend_matrix", "kitti_common._extend_matrix", "kitti_common._extend_matrix", "numpy.zeros", "kitti_common._extend_matrix", "kitti_common._extend_matrix", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "skimage.io.imread", "float", "float", "float", "float", "float", "float", "float", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split", "lines[].split"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_image_path", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_velodyne_path", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_label_path", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_label_anno", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_calib_path", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.add_difficulty_to_annos", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common._extend_matrix", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common._extend_matrix", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common._extend_matrix", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common._extend_matrix", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common._extend_matrix", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common._extend_matrix"], ["", "def", "get_kitti_image_info", "(", "path", ",", "\n", "training", "=", "True", ",", "\n", "label_info", "=", "True", ",", "\n", "velodyne", "=", "False", ",", "\n", "calib", "=", "False", ",", "\n", "image_ids", "=", "7481", ",", "\n", "extend_matrix", "=", "True", ",", "\n", "num_worker", "=", "8", ",", "\n", "relative_path", "=", "True", ",", "\n", "with_imageshape", "=", "True", ")", ":", "\n", "# image_infos = []", "\n", "    ", "root_path", "=", "pathlib", ".", "Path", "(", "path", ")", "\n", "if", "not", "isinstance", "(", "image_ids", ",", "list", ")", ":", "\n", "        ", "image_ids", "=", "list", "(", "range", "(", "image_ids", ")", ")", "\n", "\n", "", "def", "map_func", "(", "idx", ")", ":", "\n", "        ", "image_info", "=", "{", "'image_idx'", ":", "idx", "}", "\n", "annotations", "=", "None", "\n", "if", "velodyne", ":", "\n", "            ", "image_info", "[", "'velodyne_path'", "]", "=", "get_velodyne_path", "(", "\n", "idx", ",", "path", ",", "training", ",", "relative_path", ")", "\n", "", "image_info", "[", "'img_path'", "]", "=", "get_image_path", "(", "idx", ",", "path", ",", "training", ",", "\n", "relative_path", ")", "\n", "if", "with_imageshape", ":", "\n", "            ", "img_path", "=", "image_info", "[", "'img_path'", "]", "\n", "if", "relative_path", ":", "\n", "                ", "img_path", "=", "str", "(", "root_path", "/", "img_path", ")", "\n", "", "image_info", "[", "'img_shape'", "]", "=", "np", ".", "array", "(", "\n", "io", ".", "imread", "(", "img_path", ")", ".", "shape", "[", ":", "2", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "", "if", "label_info", ":", "\n", "            ", "label_path", "=", "get_label_path", "(", "idx", ",", "path", ",", "training", ",", "relative_path", ")", "\n", "if", "relative_path", ":", "\n", "                ", "label_path", "=", "str", "(", "root_path", "/", "label_path", ")", "\n", "", "annotations", "=", "get_label_anno", "(", "label_path", ")", "\n", "", "if", "calib", ":", "\n", "            ", "calib_path", "=", "get_calib_path", "(", "\n", "idx", ",", "path", ",", "training", ",", "relative_path", "=", "False", ")", "\n", "with", "open", "(", "calib_path", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "", "P0", "=", "np", ".", "array", "(", "\n", "[", "float", "(", "info", ")", "for", "info", "in", "lines", "[", "0", "]", ".", "split", "(", "' '", ")", "[", "1", ":", "13", "]", "]", ")", ".", "reshape", "(", "\n", "[", "3", ",", "4", "]", ")", "\n", "P1", "=", "np", ".", "array", "(", "\n", "[", "float", "(", "info", ")", "for", "info", "in", "lines", "[", "1", "]", ".", "split", "(", "' '", ")", "[", "1", ":", "13", "]", "]", ")", ".", "reshape", "(", "\n", "[", "3", ",", "4", "]", ")", "\n", "P2", "=", "np", ".", "array", "(", "\n", "[", "float", "(", "info", ")", "for", "info", "in", "lines", "[", "2", "]", ".", "split", "(", "' '", ")", "[", "1", ":", "13", "]", "]", ")", ".", "reshape", "(", "\n", "[", "3", ",", "4", "]", ")", "\n", "P3", "=", "np", ".", "array", "(", "\n", "[", "float", "(", "info", ")", "for", "info", "in", "lines", "[", "3", "]", ".", "split", "(", "' '", ")", "[", "1", ":", "13", "]", "]", ")", ".", "reshape", "(", "\n", "[", "3", ",", "4", "]", ")", "\n", "if", "extend_matrix", ":", "\n", "                ", "P0", "=", "_extend_matrix", "(", "P0", ")", "\n", "P1", "=", "_extend_matrix", "(", "P1", ")", "\n", "P2", "=", "_extend_matrix", "(", "P2", ")", "\n", "P3", "=", "_extend_matrix", "(", "P3", ")", "\n", "", "image_info", "[", "'calib/P0'", "]", "=", "P0", "\n", "image_info", "[", "'calib/P1'", "]", "=", "P1", "\n", "image_info", "[", "'calib/P2'", "]", "=", "P2", "\n", "image_info", "[", "'calib/P3'", "]", "=", "P3", "\n", "R0_rect", "=", "np", ".", "array", "(", "[", "\n", "float", "(", "info", ")", "for", "info", "in", "lines", "[", "4", "]", ".", "split", "(", "' '", ")", "[", "1", ":", "10", "]", "\n", "]", ")", ".", "reshape", "(", "[", "3", ",", "3", "]", ")", "\n", "if", "extend_matrix", ":", "\n", "                ", "rect_4x4", "=", "np", ".", "zeros", "(", "[", "4", ",", "4", "]", ",", "dtype", "=", "R0_rect", ".", "dtype", ")", "\n", "rect_4x4", "[", "3", ",", "3", "]", "=", "1.", "\n", "rect_4x4", "[", ":", "3", ",", ":", "3", "]", "=", "R0_rect", "\n", "", "else", ":", "\n", "                ", "rect_4x4", "=", "R0_rect", "\n", "", "image_info", "[", "'calib/R0_rect'", "]", "=", "rect_4x4", "\n", "Tr_velo_to_cam", "=", "np", ".", "array", "(", "[", "\n", "float", "(", "info", ")", "for", "info", "in", "lines", "[", "5", "]", ".", "split", "(", "' '", ")", "[", "1", ":", "13", "]", "\n", "]", ")", ".", "reshape", "(", "[", "3", ",", "4", "]", ")", "\n", "Tr_imu_to_velo", "=", "np", ".", "array", "(", "[", "\n", "float", "(", "info", ")", "for", "info", "in", "lines", "[", "6", "]", ".", "split", "(", "' '", ")", "[", "1", ":", "13", "]", "\n", "]", ")", ".", "reshape", "(", "[", "3", ",", "4", "]", ")", "\n", "if", "extend_matrix", ":", "\n", "                ", "Tr_velo_to_cam", "=", "_extend_matrix", "(", "Tr_velo_to_cam", ")", "\n", "Tr_imu_to_velo", "=", "_extend_matrix", "(", "Tr_imu_to_velo", ")", "\n", "", "image_info", "[", "'calib/Tr_velo_to_cam'", "]", "=", "Tr_velo_to_cam", "\n", "image_info", "[", "'calib/Tr_imu_to_velo'", "]", "=", "Tr_imu_to_velo", "\n", "", "if", "annotations", "is", "not", "None", ":", "\n", "            ", "image_info", "[", "'annos'", "]", "=", "annotations", "\n", "add_difficulty_to_annos", "(", "image_info", ")", "\n", "", "return", "image_info", "\n", "\n", "", "with", "futures", ".", "ThreadPoolExecutor", "(", "num_worker", ")", "as", "executor", ":", "\n", "        ", "image_infos", "=", "executor", ".", "map", "(", "map_func", ",", "image_ids", ")", "\n", "", "return", "list", "(", "image_infos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.filter_kitti_anno": [[152, 190], ["image_anno.keys", "isinstance", "image_anno.keys", "kitti_common.iou", "enumerate", "image_anno.keys", "enumerate", "enumerate", "numpy.amax", "numpy.logical_not"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.iou"], ["", "def", "filter_kitti_anno", "(", "image_anno", ",", "\n", "used_classes", ",", "\n", "used_difficulty", "=", "None", ",", "\n", "dontcare_iou", "=", "None", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "used_classes", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "used_classes", "=", "[", "used_classes", "]", "\n", "", "img_filtered_annotations", "=", "{", "}", "\n", "relevant_annotation_indices", "=", "[", "\n", "i", "for", "i", ",", "x", "in", "enumerate", "(", "image_anno", "[", "'name'", "]", ")", "if", "x", "in", "used_classes", "\n", "]", "\n", "for", "key", "in", "image_anno", ".", "keys", "(", ")", ":", "\n", "        ", "img_filtered_annotations", "[", "key", "]", "=", "(", "\n", "image_anno", "[", "key", "]", "[", "relevant_annotation_indices", "]", ")", "\n", "", "if", "used_difficulty", "is", "not", "None", ":", "\n", "        ", "relevant_annotation_indices", "=", "[", "\n", "i", "for", "i", ",", "x", "in", "enumerate", "(", "img_filtered_annotations", "[", "'difficulty'", "]", ")", "\n", "if", "x", "in", "used_difficulty", "\n", "]", "\n", "for", "key", "in", "image_anno", ".", "keys", "(", ")", ":", "\n", "            ", "img_filtered_annotations", "[", "key", "]", "=", "(", "\n", "img_filtered_annotations", "[", "key", "]", "[", "relevant_annotation_indices", "]", ")", "\n", "\n", "", "", "if", "'DontCare'", "in", "used_classes", "and", "dontcare_iou", "is", "not", "None", ":", "\n", "        ", "dont_care_indices", "=", "[", "\n", "i", "for", "i", ",", "x", "in", "enumerate", "(", "img_filtered_annotations", "[", "'name'", "]", ")", "\n", "if", "x", "==", "'DontCare'", "\n", "]", "\n", "# bounding box format [y_min, x_min, y_max, x_max]", "\n", "all_boxes", "=", "img_filtered_annotations", "[", "'bbox'", "]", "\n", "ious", "=", "iou", "(", "all_boxes", ",", "all_boxes", "[", "dont_care_indices", "]", ")", "\n", "\n", "# Remove all bounding boxes that overlap with a dontcare region.", "\n", "if", "ious", ".", "size", ">", "0", ":", "\n", "            ", "boxes_to_remove", "=", "np", ".", "amax", "(", "ious", ",", "axis", "=", "1", ")", ">", "dontcare_iou", "\n", "for", "key", "in", "image_anno", ".", "keys", "(", ")", ":", "\n", "                ", "img_filtered_annotations", "[", "key", "]", "=", "(", "img_filtered_annotations", "[", "key", "]", "[", "\n", "np", ".", "logical_not", "(", "boxes_to_remove", ")", "]", ")", "\n", "", "", "", "return", "img_filtered_annotations", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.filter_annos_low_score": [[191, 203], ["anno.keys", "new_image_annos.append", "enumerate"], "function", ["None"], ["", "def", "filter_annos_low_score", "(", "image_annos", ",", "thresh", ")", ":", "\n", "    ", "new_image_annos", "=", "[", "]", "\n", "for", "anno", "in", "image_annos", ":", "\n", "        ", "img_filtered_annotations", "=", "{", "}", "\n", "relevant_annotation_indices", "=", "[", "\n", "i", "for", "i", ",", "s", "in", "enumerate", "(", "anno", "[", "'score'", "]", ")", "if", "s", ">=", "thresh", "\n", "]", "\n", "for", "key", "in", "anno", ".", "keys", "(", ")", ":", "\n", "            ", "img_filtered_annotations", "[", "key", "]", "=", "(", "\n", "anno", "[", "key", "]", "[", "relevant_annotation_indices", "]", ")", "\n", "", "new_image_annos", ".", "append", "(", "img_filtered_annotations", ")", "\n", "", "return", "new_image_annos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.kitti_result_line": [[204, 247], ["collections.OrderedDict", "collections.OrderedDict", "result_dict.items", "collections.OrderedDict.items", "collections.OrderedDict.items", "ValueError", "res_line.append", "res_line.append", "res_line.append", "str", "prec_float.format", "res_line.append", "res_line.append", "ValueError", "str", "str", "prec_float.format", "collections.OrderedDict.keys"], "function", ["None"], ["", "def", "kitti_result_line", "(", "result_dict", ",", "precision", "=", "4", ")", ":", "\n", "    ", "prec_float", "=", "\"{\"", "+", "\":.{}f\"", ".", "format", "(", "precision", ")", "+", "\"}\"", "\n", "res_line", "=", "[", "]", "\n", "all_field_default", "=", "OrderedDict", "(", "[", "\n", "(", "'name'", ",", "None", ")", ",", "\n", "(", "'truncated'", ",", "-", "1", ")", ",", "\n", "(", "'occluded'", ",", "-", "1", ")", ",", "\n", "(", "'alpha'", ",", "-", "10", ")", ",", "\n", "(", "'bbox'", ",", "None", ")", ",", "\n", "(", "'dimensions'", ",", "[", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", ",", "\n", "(", "'location'", ",", "[", "-", "1000", ",", "-", "1000", ",", "-", "1000", "]", ")", ",", "\n", "(", "'rotation_y'", ",", "-", "10", ")", ",", "\n", "(", "'score'", ",", "None", ")", ",", "\n", "]", ")", "\n", "res_dict", "=", "[", "(", "key", ",", "None", ")", "for", "key", ",", "val", "in", "all_field_default", ".", "items", "(", ")", "]", "\n", "res_dict", "=", "OrderedDict", "(", "res_dict", ")", "\n", "for", "key", ",", "val", "in", "result_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "all_field_default", "[", "key", "]", "is", "None", "and", "val", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"you must specify a value for {}\"", ".", "format", "(", "key", ")", ")", "\n", "", "res_dict", "[", "key", "]", "=", "val", "\n", "\n", "", "for", "key", ",", "val", "in", "res_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "key", "==", "'name'", ":", "\n", "            ", "res_line", ".", "append", "(", "val", ")", "\n", "", "elif", "key", "in", "[", "'truncated'", ",", "'alpha'", ",", "'rotation_y'", ",", "'score'", "]", ":", "\n", "            ", "if", "val", "is", "None", ":", "\n", "                ", "res_line", ".", "append", "(", "str", "(", "all_field_default", "[", "key", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "res_line", ".", "append", "(", "prec_float", ".", "format", "(", "val", ")", ")", "\n", "", "", "elif", "key", "==", "'occluded'", ":", "\n", "            ", "if", "val", "is", "None", ":", "\n", "                ", "res_line", ".", "append", "(", "str", "(", "all_field_default", "[", "key", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "res_line", ".", "append", "(", "'{}'", ".", "format", "(", "val", ")", ")", "\n", "", "", "elif", "key", "in", "[", "'bbox'", ",", "'dimensions'", ",", "'location'", "]", ":", "\n", "            ", "if", "val", "is", "None", ":", "\n", "                ", "res_line", "+=", "[", "str", "(", "v", ")", "for", "v", "in", "all_field_default", "[", "key", "]", "]", "\n", "", "else", ":", "\n", "                ", "res_line", "+=", "[", "prec_float", ".", "format", "(", "v", ")", "for", "v", "in", "val", "]", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"unknown key. supported key:{}\"", ".", "format", "(", "\n", "res_dict", ".", "keys", "(", ")", ")", ")", "\n", "", "", "return", "' '", ".", "join", "(", "res_line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.add_difficulty_to_annos": [[249, 292], ["numpy.ones", "numpy.ones", "numpy.ones", "zip", "numpy.logical_xor", "numpy.logical_xor", "range", "numpy.array", "len", "len", "len", "len", "diff.append", "diff.append", "diff.append", "diff.append"], "function", ["None"], ["", "def", "add_difficulty_to_annos", "(", "info", ")", ":", "\n", "    ", "min_height", "=", "[", "40", ",", "25", ",", "\n", "25", "]", "# minimum height for evaluated groundtruth/detections", "\n", "max_occlusion", "=", "[", "\n", "0", ",", "1", ",", "2", "\n", "]", "# maximum occlusion level of the groundtruth used for eval_utils", "\n", "max_trunc", "=", "[", "\n", "0.15", ",", "0.3", ",", "0.5", "\n", "]", "# maximum truncation level of the groundtruth used for eval_utils", "\n", "annos", "=", "info", "[", "'annos'", "]", "\n", "dims", "=", "annos", "[", "'dimensions'", "]", "# lhw format", "\n", "bbox", "=", "annos", "[", "'bbox'", "]", "\n", "height", "=", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", "\n", "occlusion", "=", "annos", "[", "'occluded'", "]", "\n", "truncation", "=", "annos", "[", "'truncated'", "]", "\n", "diff", "=", "[", "]", "\n", "easy_mask", "=", "np", ".", "ones", "(", "(", "len", "(", "dims", ")", ",", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "moderate_mask", "=", "np", ".", "ones", "(", "(", "len", "(", "dims", ")", ",", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "hard_mask", "=", "np", ".", "ones", "(", "(", "len", "(", "dims", ")", ",", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "i", "=", "0", "\n", "for", "h", ",", "o", ",", "t", "in", "zip", "(", "height", ",", "occlusion", ",", "truncation", ")", ":", "\n", "        ", "if", "o", ">", "max_occlusion", "[", "0", "]", "or", "h", "<=", "min_height", "[", "0", "]", "or", "t", ">", "max_trunc", "[", "0", "]", ":", "\n", "            ", "easy_mask", "[", "i", "]", "=", "False", "\n", "", "if", "o", ">", "max_occlusion", "[", "1", "]", "or", "h", "<=", "min_height", "[", "1", "]", "or", "t", ">", "max_trunc", "[", "1", "]", ":", "\n", "            ", "moderate_mask", "[", "i", "]", "=", "False", "\n", "", "if", "o", ">", "max_occlusion", "[", "2", "]", "or", "h", "<=", "min_height", "[", "2", "]", "or", "t", ">", "max_trunc", "[", "2", "]", ":", "\n", "            ", "hard_mask", "[", "i", "]", "=", "False", "\n", "", "i", "+=", "1", "\n", "", "is_easy", "=", "easy_mask", "\n", "is_moderate", "=", "np", ".", "logical_xor", "(", "easy_mask", ",", "moderate_mask", ")", "\n", "is_hard", "=", "np", ".", "logical_xor", "(", "hard_mask", ",", "moderate_mask", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "dims", ")", ")", ":", "\n", "        ", "if", "is_easy", "[", "i", "]", ":", "\n", "            ", "diff", ".", "append", "(", "0", ")", "\n", "", "elif", "is_moderate", "[", "i", "]", ":", "\n", "            ", "diff", ".", "append", "(", "1", ")", "\n", "", "elif", "is_hard", "[", "i", "]", ":", "\n", "            ", "diff", ".", "append", "(", "2", ")", "\n", "", "else", ":", "\n", "            ", "diff", ".", "append", "(", "-", "1", ")", "\n", "", "", "annos", "[", "\"difficulty\"", "]", "=", "np", ".", "array", "(", "diff", ",", "np", ".", "int32", ")", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_label_anno": [[294, 331], ["annotations.update", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "open", "f.readlines", "line.strip().split", "numpy.array().reshape", "numpy.array", "numpy.zeros", "float", "int", "float", "numpy.array", "numpy.array", "numpy.array", "len", "len", "line.strip", "numpy.array", "float", "len", "float", "float", "float", "float"], "function", ["None"], ["", "def", "get_label_anno", "(", "label_path", ")", ":", "\n", "    ", "annotations", "=", "{", "}", "\n", "annotations", ".", "update", "(", "{", "\n", "'name'", ":", "[", "]", ",", "\n", "'truncated'", ":", "[", "]", ",", "\n", "'occluded'", ":", "[", "]", ",", "\n", "'alpha'", ":", "[", "]", ",", "\n", "'bbox'", ":", "[", "]", ",", "\n", "'dimensions'", ":", "[", "]", ",", "\n", "'location'", ":", "[", "]", ",", "\n", "'rotation_y'", ":", "[", "]", "\n", "}", ")", "\n", "with", "open", "(", "label_path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "# if len(lines) == 0 or len(lines[0]) < 15:", "\n", "#     content = []", "\n", "# else:", "\n", "", "content", "=", "[", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "for", "line", "in", "lines", "]", "\n", "annotations", "[", "'name'", "]", "=", "np", ".", "array", "(", "[", "x", "[", "0", "]", "for", "x", "in", "content", "]", ")", "\n", "annotations", "[", "'truncated'", "]", "=", "np", ".", "array", "(", "[", "float", "(", "x", "[", "1", "]", ")", "for", "x", "in", "content", "]", ")", "\n", "annotations", "[", "'occluded'", "]", "=", "np", ".", "array", "(", "[", "int", "(", "x", "[", "2", "]", ")", "for", "x", "in", "content", "]", ")", "\n", "annotations", "[", "'alpha'", "]", "=", "np", ".", "array", "(", "[", "float", "(", "x", "[", "3", "]", ")", "for", "x", "in", "content", "]", ")", "\n", "annotations", "[", "'bbox'", "]", "=", "np", ".", "array", "(", "\n", "[", "[", "float", "(", "info", ")", "for", "info", "in", "x", "[", "4", ":", "8", "]", "]", "for", "x", "in", "content", "]", ")", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "# dimensions will convert hwl format to standard lhw(camera) format.", "\n", "annotations", "[", "'dimensions'", "]", "=", "np", ".", "array", "(", "\n", "[", "[", "float", "(", "info", ")", "for", "info", "in", "x", "[", "8", ":", "11", "]", "]", "for", "x", "in", "content", "]", ")", ".", "reshape", "(", "\n", "-", "1", ",", "3", ")", "[", ":", ",", "[", "2", ",", "0", ",", "1", "]", "]", "\n", "annotations", "[", "'location'", "]", "=", "np", ".", "array", "(", "\n", "[", "[", "float", "(", "info", ")", "for", "info", "in", "x", "[", "11", ":", "14", "]", "]", "for", "x", "in", "content", "]", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "annotations", "[", "'rotation_y'", "]", "=", "np", ".", "array", "(", "\n", "[", "float", "(", "x", "[", "14", "]", ")", "for", "x", "in", "content", "]", ")", ".", "reshape", "(", "-", "1", ")", "\n", "if", "len", "(", "content", ")", "!=", "0", "and", "len", "(", "content", "[", "0", "]", ")", "==", "16", ":", "# have score", "\n", "        ", "annotations", "[", "'score'", "]", "=", "np", ".", "array", "(", "[", "float", "(", "x", "[", "15", "]", ")", "for", "x", "in", "content", "]", ")", "\n", "", "else", ":", "\n", "        ", "annotations", "[", "'score'", "]", "=", "np", ".", "zeros", "(", "[", "len", "(", "annotations", "[", "'bbox'", "]", ")", "]", ")", "\n", "", "return", "annotations", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_label_annos": [[332, 348], ["pathlib.Path", "pathlib.Path().glob", "re.compile", "filter", "sorted", "isinstance", "list", "kitti_common.get_image_index_str", "annos.append", "int", "range", "kitti_common.get_label_anno", "pathlib.Path", "re.compile.match"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_image_index_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.get_label_anno"], ["", "def", "get_label_annos", "(", "label_folder", ",", "image_ids", "=", "None", ")", ":", "\n", "    ", "if", "image_ids", "is", "None", ":", "\n", "        ", "filepaths", "=", "pathlib", ".", "Path", "(", "label_folder", ")", ".", "glob", "(", "'*.txt'", ")", "\n", "prog", "=", "re", ".", "compile", "(", "r'^\\d{6}.txt$'", ")", "\n", "filepaths", "=", "filter", "(", "lambda", "f", ":", "prog", ".", "match", "(", "f", ".", "name", ")", ",", "filepaths", ")", "\n", "image_ids", "=", "[", "int", "(", "p", ".", "stem", ")", "for", "p", "in", "filepaths", "]", "\n", "image_ids", "=", "sorted", "(", "image_ids", ")", "\n", "", "if", "not", "isinstance", "(", "image_ids", ",", "list", ")", ":", "\n", "        ", "image_ids", "=", "list", "(", "range", "(", "image_ids", ")", ")", "\n", "", "annos", "=", "[", "]", "\n", "label_folder", "=", "pathlib", ".", "Path", "(", "label_folder", ")", "\n", "for", "idx", "in", "image_ids", ":", "\n", "        ", "image_idx", "=", "get_image_index_str", "(", "idx", ")", "\n", "label_filename", "=", "label_folder", "/", "(", "image_idx", "+", "'.txt'", ")", "\n", "annos", ".", "append", "(", "get_label_anno", "(", "label_filename", ")", ")", "\n", "", "return", "annos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.area": [[349, 363], ["None"], "function", ["None"], ["", "def", "area", "(", "boxes", ",", "add1", "=", "False", ")", ":", "\n", "    ", "\"\"\"Computes area of boxes.\n\n    Args:\n        boxes: Numpy array with shape [N, 4] holding N boxes\n\n    Returns:\n        a numpy array with shape [N*1] representing box areas\n    \"\"\"", "\n", "if", "add1", ":", "\n", "        ", "return", "(", "boxes", "[", ":", ",", "2", "]", "-", "boxes", "[", ":", ",", "0", "]", "+", "1.0", ")", "*", "(", "\n", "boxes", "[", ":", ",", "3", "]", "-", "boxes", "[", ":", ",", "1", "]", "+", "1.0", ")", "\n", "", "else", ":", "\n", "        ", "return", "(", "boxes", "[", ":", ",", "2", "]", "-", "boxes", "[", ":", ",", "0", "]", ")", "*", "(", "boxes", "[", ":", ",", "3", "]", "-", "boxes", "[", ":", ",", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.intersection": [[365, 394], ["numpy.split", "numpy.split", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.transpose", "numpy.transpose", "numpy.zeros", "numpy.transpose", "numpy.transpose", "numpy.zeros"], "function", ["None"], ["", "", "def", "intersection", "(", "boxes1", ",", "boxes2", ",", "add1", "=", "False", ")", ":", "\n", "    ", "\"\"\"Compute pairwise intersection areas between boxes.\n\n    Args:\n        boxes1: a numpy array with shape [N, 4] holding N boxes\n        boxes2: a numpy array with shape [M, 4] holding M boxes\n\n    Returns:\n        a numpy array with shape [N*M] representing pairwise intersection area\n    \"\"\"", "\n", "[", "y_min1", ",", "x_min1", ",", "y_max1", ",", "x_max1", "]", "=", "np", ".", "split", "(", "boxes1", ",", "4", ",", "axis", "=", "1", ")", "\n", "[", "y_min2", ",", "x_min2", ",", "y_max2", ",", "x_max2", "]", "=", "np", ".", "split", "(", "boxes2", ",", "4", ",", "axis", "=", "1", ")", "\n", "\n", "all_pairs_min_ymax", "=", "np", ".", "minimum", "(", "y_max1", ",", "np", ".", "transpose", "(", "y_max2", ")", ")", "\n", "all_pairs_max_ymin", "=", "np", ".", "maximum", "(", "y_min1", ",", "np", ".", "transpose", "(", "y_min2", ")", ")", "\n", "if", "add1", ":", "\n", "        ", "all_pairs_min_ymax", "+=", "1.0", "\n", "", "intersect_heights", "=", "np", ".", "maximum", "(", "\n", "np", ".", "zeros", "(", "all_pairs_max_ymin", ".", "shape", ")", ",", "\n", "all_pairs_min_ymax", "-", "all_pairs_max_ymin", ")", "\n", "\n", "all_pairs_min_xmax", "=", "np", ".", "minimum", "(", "x_max1", ",", "np", ".", "transpose", "(", "x_max2", ")", ")", "\n", "all_pairs_max_xmin", "=", "np", ".", "maximum", "(", "x_min1", ",", "np", ".", "transpose", "(", "x_min2", ")", ")", "\n", "if", "add1", ":", "\n", "        ", "all_pairs_min_xmax", "+=", "1.0", "\n", "", "intersect_widths", "=", "np", ".", "maximum", "(", "\n", "np", ".", "zeros", "(", "all_pairs_max_xmin", ".", "shape", ")", ",", "\n", "all_pairs_min_xmax", "-", "all_pairs_max_xmin", ")", "\n", "return", "intersect_heights", "*", "intersect_widths", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.iou": [[396, 413], ["kitti_common.intersection", "kitti_common.area", "kitti_common.area", "numpy.expand_dims", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.kitti_common.intersection", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.area", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.area"], ["", "def", "iou", "(", "boxes1", ",", "boxes2", ",", "add1", "=", "False", ")", ":", "\n", "    ", "\"\"\"Computes pairwise intersection-over-union between box collections.\n\n    Args:\n        boxes1: a numpy array with shape [N, 4] holding N boxes.\n        boxes2: a numpy array with shape [M, 4] holding N boxes.\n\n    Returns:\n        a numpy array with shape [N, M] representing pairwise iou scores.\n    \"\"\"", "\n", "intersect", "=", "intersection", "(", "boxes1", ",", "boxes2", ",", "add1", ")", "\n", "area1", "=", "area", "(", "boxes1", ",", "add1", ")", "\n", "area2", "=", "area", "(", "boxes2", ",", "add1", ")", "\n", "union", "=", "np", ".", "expand_dims", "(", "\n", "area1", ",", "axis", "=", "1", ")", "+", "np", ".", "expand_dims", "(", "\n", "area2", ",", "axis", "=", "0", ")", "-", "intersect", "\n", "return", "intersect", "/", "union", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_thresholds": [[9, 28], ["scores.sort", "enumerate", "thresholds.append", "len", "len"], "function", ["None"], ["@", "numba", ".", "jit", "\n", "def", "get_thresholds", "(", "scores", ":", "np", ".", "ndarray", ",", "num_gt", ",", "num_sample_pts", "=", "41", ")", ":", "\n", "    ", "scores", ".", "sort", "(", ")", "\n", "scores", "=", "scores", "[", ":", ":", "-", "1", "]", "\n", "current_recall", "=", "0", "\n", "thresholds", "=", "[", "]", "\n", "for", "i", ",", "score", "in", "enumerate", "(", "scores", ")", ":", "\n", "        ", "l_recall", "=", "(", "i", "+", "1", ")", "/", "num_gt", "\n", "if", "i", "<", "(", "len", "(", "scores", ")", "-", "1", ")", ":", "\n", "            ", "r_recall", "=", "(", "i", "+", "2", ")", "/", "num_gt", "\n", "", "else", ":", "\n", "            ", "r_recall", "=", "l_recall", "\n", "", "if", "(", "(", "(", "r_recall", "-", "current_recall", ")", "<", "(", "current_recall", "-", "l_recall", ")", ")", "\n", "and", "(", "i", "<", "(", "len", "(", "scores", ")", "-", "1", ")", ")", ")", ":", "\n", "            ", "continue", "\n", "# recall = l_recall", "\n", "", "thresholds", ".", "append", "(", "score", ")", "\n", "current_recall", "+=", "1", "/", "(", "num_sample_pts", "-", "1.0", ")", "\n", "", "return", "thresholds", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.clean_data": [[30, 84], ["CLASS_NAMES[].lower", "len", "len", "range", "range", "[].lower", "abs", "ignored_gt.append", "dc_bboxes.append", "[].lower", "ignored_dt.append", "ignored_gt.append", "ignored_gt.append", "ignored_dt.append", "ignored_dt.append"], "function", ["None"], ["", "def", "clean_data", "(", "gt_anno", ",", "dt_anno", ",", "current_class", ",", "difficulty", ")", ":", "\n", "    ", "CLASS_NAMES", "=", "[", "'car'", ",", "'pedestrian'", ",", "'cyclist'", ",", "'van'", ",", "'person_sitting'", ",", "'truck'", "]", "\n", "MIN_HEIGHT", "=", "[", "40", ",", "25", ",", "25", "]", "\n", "MAX_OCCLUSION", "=", "[", "0", ",", "1", ",", "2", "]", "\n", "MAX_TRUNCATION", "=", "[", "0.15", ",", "0.3", ",", "0.5", "]", "\n", "dc_bboxes", ",", "ignored_gt", ",", "ignored_dt", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "current_cls_name", "=", "CLASS_NAMES", "[", "current_class", "]", ".", "lower", "(", ")", "\n", "num_gt", "=", "len", "(", "gt_anno", "[", "\"name\"", "]", ")", "\n", "num_dt", "=", "len", "(", "dt_anno", "[", "\"name\"", "]", ")", "\n", "num_valid_gt", "=", "0", "\n", "for", "i", "in", "range", "(", "num_gt", ")", ":", "\n", "        ", "bbox", "=", "gt_anno", "[", "\"bbox\"", "]", "[", "i", "]", "\n", "gt_name", "=", "gt_anno", "[", "\"name\"", "]", "[", "i", "]", ".", "lower", "(", ")", "\n", "height", "=", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", "\n", "valid_class", "=", "-", "1", "\n", "if", "(", "gt_name", "==", "current_cls_name", ")", ":", "\n", "            ", "valid_class", "=", "1", "\n", "", "elif", "(", "current_cls_name", "==", "\"Pedestrian\"", ".", "lower", "(", ")", "\n", "and", "\"Person_sitting\"", ".", "lower", "(", ")", "==", "gt_name", ")", ":", "\n", "            ", "valid_class", "=", "0", "\n", "", "elif", "(", "current_cls_name", "==", "\"Car\"", ".", "lower", "(", ")", "and", "\"Van\"", ".", "lower", "(", ")", "==", "gt_name", ")", ":", "\n", "            ", "valid_class", "=", "0", "\n", "", "else", ":", "\n", "            ", "valid_class", "=", "-", "1", "\n", "", "ignore", "=", "False", "\n", "if", "(", "(", "gt_anno", "[", "\"occluded\"", "]", "[", "i", "]", ">", "MAX_OCCLUSION", "[", "difficulty", "]", ")", "\n", "or", "(", "gt_anno", "[", "\"truncated\"", "]", "[", "i", "]", ">", "MAX_TRUNCATION", "[", "difficulty", "]", ")", "\n", "or", "(", "height", "<=", "MIN_HEIGHT", "[", "difficulty", "]", ")", ")", ":", "\n", "# if gt_anno[\"difficulty\"][i] > difficulty or gt_anno[\"difficulty\"][i] == -1:", "\n", "            ", "ignore", "=", "True", "\n", "", "if", "valid_class", "==", "1", "and", "not", "ignore", ":", "\n", "            ", "ignored_gt", ".", "append", "(", "0", ")", "\n", "num_valid_gt", "+=", "1", "\n", "", "elif", "(", "valid_class", "==", "0", "or", "(", "ignore", "and", "(", "valid_class", "==", "1", ")", ")", ")", ":", "\n", "            ", "ignored_gt", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "ignored_gt", ".", "append", "(", "-", "1", ")", "\n", "# for i in range(num_gt):", "\n", "", "if", "gt_anno", "[", "\"name\"", "]", "[", "i", "]", "==", "\"DontCare\"", ":", "\n", "            ", "dc_bboxes", ".", "append", "(", "gt_anno", "[", "\"bbox\"", "]", "[", "i", "]", ")", "\n", "", "", "for", "i", "in", "range", "(", "num_dt", ")", ":", "\n", "        ", "if", "(", "dt_anno", "[", "\"name\"", "]", "[", "i", "]", ".", "lower", "(", ")", "==", "current_cls_name", ")", ":", "\n", "            ", "valid_class", "=", "1", "\n", "", "else", ":", "\n", "            ", "valid_class", "=", "-", "1", "\n", "", "height", "=", "abs", "(", "dt_anno", "[", "\"bbox\"", "]", "[", "i", ",", "3", "]", "-", "dt_anno", "[", "\"bbox\"", "]", "[", "i", ",", "1", "]", ")", "\n", "if", "height", "<", "MIN_HEIGHT", "[", "difficulty", "]", ":", "\n", "            ", "ignored_dt", ".", "append", "(", "1", ")", "\n", "", "elif", "valid_class", "==", "1", ":", "\n", "            ", "ignored_dt", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "            ", "ignored_dt", ".", "append", "(", "-", "1", ")", "\n", "\n", "", "", "return", "num_valid_gt", ",", "ignored_gt", ",", "ignored_dt", ",", "dc_bboxes", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.image_box_overlap": [[86, 114], ["numba.jit", "numpy.zeros", "range", "range", "min", "max", "min", "max"], "function", ["None"], ["", "@", "numba", ".", "jit", "(", "nopython", "=", "True", ")", "\n", "def", "image_box_overlap", "(", "boxes", ",", "query_boxes", ",", "criterion", "=", "-", "1", ")", ":", "\n", "    ", "N", "=", "boxes", ".", "shape", "[", "0", "]", "\n", "K", "=", "query_boxes", ".", "shape", "[", "0", "]", "\n", "overlaps", "=", "np", ".", "zeros", "(", "(", "N", ",", "K", ")", ",", "dtype", "=", "boxes", ".", "dtype", ")", "\n", "for", "k", "in", "range", "(", "K", ")", ":", "\n", "        ", "qbox_area", "=", "(", "(", "query_boxes", "[", "k", ",", "2", "]", "-", "query_boxes", "[", "k", ",", "0", "]", ")", "*", "\n", "(", "query_boxes", "[", "k", ",", "3", "]", "-", "query_boxes", "[", "k", ",", "1", "]", ")", ")", "\n", "for", "n", "in", "range", "(", "N", ")", ":", "\n", "            ", "iw", "=", "(", "min", "(", "boxes", "[", "n", ",", "2", "]", ",", "query_boxes", "[", "k", ",", "2", "]", ")", "-", "\n", "max", "(", "boxes", "[", "n", ",", "0", "]", ",", "query_boxes", "[", "k", ",", "0", "]", ")", ")", "\n", "if", "iw", ">", "0", ":", "\n", "                ", "ih", "=", "(", "min", "(", "boxes", "[", "n", ",", "3", "]", ",", "query_boxes", "[", "k", ",", "3", "]", ")", "-", "\n", "max", "(", "boxes", "[", "n", ",", "1", "]", ",", "query_boxes", "[", "k", ",", "1", "]", ")", ")", "\n", "if", "ih", ">", "0", ":", "\n", "                    ", "if", "criterion", "==", "-", "1", ":", "\n", "                        ", "ua", "=", "(", "\n", "(", "boxes", "[", "n", ",", "2", "]", "-", "boxes", "[", "n", ",", "0", "]", ")", "*", "\n", "(", "boxes", "[", "n", ",", "3", "]", "-", "boxes", "[", "n", ",", "1", "]", ")", "+", "qbox_area", "-", "iw", "*", "ih", ")", "\n", "", "elif", "criterion", "==", "0", ":", "\n", "                        ", "ua", "=", "(", "(", "boxes", "[", "n", ",", "2", "]", "-", "boxes", "[", "n", ",", "0", "]", ")", "*", "\n", "(", "boxes", "[", "n", ",", "3", "]", "-", "boxes", "[", "n", ",", "1", "]", ")", ")", "\n", "", "elif", "criterion", "==", "1", ":", "\n", "                        ", "ua", "=", "qbox_area", "\n", "", "else", ":", "\n", "                        ", "ua", "=", "1.0", "\n", "", "overlaps", "[", "n", ",", "k", "]", "=", "iw", "*", "ih", "/", "ua", "\n", "", "", "", "", "return", "overlaps", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.bev_box_overlap": [[116, 119], ["rotate_iou.rotate_iou_gpu_eval"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.rotate_iou_gpu_eval"], ["", "def", "bev_box_overlap", "(", "boxes", ",", "qboxes", ",", "criterion", "=", "-", "1", ")", ":", "\n", "    ", "riou", "=", "rotate_iou_gpu_eval", "(", "boxes", ",", "qboxes", ",", "criterion", ")", "\n", "return", "riou", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.d3_box_overlap_kernel": [[121, 148], ["numba.jit", "range", "range", "min", "max"], "function", ["None"], ["", "@", "numba", ".", "jit", "(", "nopython", "=", "True", ",", "parallel", "=", "True", ")", "\n", "def", "d3_box_overlap_kernel", "(", "boxes", ",", "qboxes", ",", "rinc", ",", "criterion", "=", "-", "1", ")", ":", "\n", "# ONLY support overlap in CAMERA, not lider.", "\n", "    ", "N", ",", "K", "=", "boxes", ".", "shape", "[", "0", "]", ",", "qboxes", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "            ", "if", "rinc", "[", "i", ",", "j", "]", ">", "0", ":", "\n", "# iw = (min(boxes[i, 1] + boxes[i, 4], qboxes[j, 1] +", "\n", "#         qboxes[j, 4]) - max(boxes[i, 1], qboxes[j, 1]))", "\n", "                ", "iw", "=", "(", "min", "(", "boxes", "[", "i", ",", "1", "]", ",", "qboxes", "[", "j", ",", "1", "]", ")", "-", "max", "(", "\n", "boxes", "[", "i", ",", "1", "]", "-", "boxes", "[", "i", ",", "4", "]", ",", "qboxes", "[", "j", ",", "1", "]", "-", "qboxes", "[", "j", ",", "4", "]", ")", ")", "\n", "\n", "if", "iw", ">", "0", ":", "\n", "                    ", "area1", "=", "boxes", "[", "i", ",", "3", "]", "*", "boxes", "[", "i", ",", "4", "]", "*", "boxes", "[", "i", ",", "5", "]", "\n", "area2", "=", "qboxes", "[", "j", ",", "3", "]", "*", "qboxes", "[", "j", ",", "4", "]", "*", "qboxes", "[", "j", ",", "5", "]", "\n", "inc", "=", "iw", "*", "rinc", "[", "i", ",", "j", "]", "\n", "if", "criterion", "==", "-", "1", ":", "\n", "                        ", "ua", "=", "(", "area1", "+", "area2", "-", "inc", ")", "\n", "", "elif", "criterion", "==", "0", ":", "\n", "                        ", "ua", "=", "area1", "\n", "", "elif", "criterion", "==", "1", ":", "\n", "                        ", "ua", "=", "area2", "\n", "", "else", ":", "\n", "                        ", "ua", "=", "inc", "\n", "", "rinc", "[", "i", ",", "j", "]", "=", "inc", "/", "ua", "\n", "", "else", ":", "\n", "                    ", "rinc", "[", "i", ",", "j", "]", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.d3_box_overlap": [[150, 155], ["rotate_iou.rotate_iou_gpu_eval", "eval.d3_box_overlap_kernel"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.rotate_iou_gpu_eval", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.d3_box_overlap_kernel"], ["", "", "", "", "", "def", "d3_box_overlap", "(", "boxes", ",", "qboxes", ",", "criterion", "=", "-", "1", ")", ":", "\n", "    ", "rinc", "=", "rotate_iou_gpu_eval", "(", "boxes", "[", ":", ",", "[", "0", ",", "2", ",", "3", ",", "5", ",", "6", "]", "]", ",", "\n", "qboxes", "[", ":", ",", "[", "0", ",", "2", ",", "3", ",", "5", ",", "6", "]", "]", ",", "2", ")", "\n", "d3_box_overlap_kernel", "(", "boxes", ",", "qboxes", ",", "rinc", ",", "criterion", ")", "\n", "return", "rinc", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.compute_statistics_jit": [[157, 276], ["numba.jit", "numpy.zeros", "numpy.zeros", "range", "range", "range", "range", "eval.image_box_overlap", "range", "numpy.zeros", "range", "range", "numpy.sum", "numpy.cos"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.image_box_overlap"], ["", "@", "numba", ".", "jit", "(", "nopython", "=", "True", ")", "\n", "def", "compute_statistics_jit", "(", "overlaps", ",", "\n", "gt_datas", ",", "\n", "dt_datas", ",", "\n", "ignored_gt", ",", "\n", "ignored_det", ",", "\n", "dc_bboxes", ",", "\n", "metric", ",", "\n", "min_overlap", ",", "\n", "thresh", "=", "0", ",", "\n", "compute_fp", "=", "False", ",", "\n", "compute_aos", "=", "False", ")", ":", "\n", "\n", "    ", "det_size", "=", "dt_datas", ".", "shape", "[", "0", "]", "\n", "gt_size", "=", "gt_datas", ".", "shape", "[", "0", "]", "\n", "dt_scores", "=", "dt_datas", "[", ":", ",", "-", "1", "]", "\n", "dt_alphas", "=", "dt_datas", "[", ":", ",", "4", "]", "\n", "gt_alphas", "=", "gt_datas", "[", ":", ",", "4", "]", "\n", "dt_bboxes", "=", "dt_datas", "[", ":", ",", ":", "4", "]", "\n", "gt_bboxes", "=", "gt_datas", "[", ":", ",", ":", "4", "]", "\n", "\n", "assigned_detection", "=", "[", "False", "]", "*", "det_size", "\n", "ignored_threshold", "=", "[", "False", "]", "*", "det_size", "\n", "if", "compute_fp", ":", "\n", "        ", "for", "i", "in", "range", "(", "det_size", ")", ":", "\n", "            ", "if", "(", "dt_scores", "[", "i", "]", "<", "thresh", ")", ":", "\n", "                ", "ignored_threshold", "[", "i", "]", "=", "True", "\n", "", "", "", "NO_DETECTION", "=", "-", "10000000", "\n", "tp", ",", "fp", ",", "fn", ",", "similarity", "=", "0", ",", "0", ",", "0", ",", "0", "\n", "# thresholds = [0.0]", "\n", "# delta = [0.0]", "\n", "thresholds", "=", "np", ".", "zeros", "(", "(", "gt_size", ",", ")", ")", "\n", "thresh_idx", "=", "0", "\n", "delta", "=", "np", ".", "zeros", "(", "(", "gt_size", ",", ")", ")", "\n", "delta_idx", "=", "0", "\n", "for", "i", "in", "range", "(", "gt_size", ")", ":", "\n", "        ", "if", "ignored_gt", "[", "i", "]", "==", "-", "1", ":", "\n", "            ", "continue", "\n", "", "det_idx", "=", "-", "1", "\n", "valid_detection", "=", "NO_DETECTION", "\n", "max_overlap", "=", "0", "\n", "assigned_ignored_det", "=", "False", "\n", "\n", "for", "j", "in", "range", "(", "det_size", ")", ":", "\n", "            ", "if", "(", "ignored_det", "[", "j", "]", "==", "-", "1", ")", ":", "\n", "                ", "continue", "\n", "", "if", "(", "assigned_detection", "[", "j", "]", ")", ":", "\n", "                ", "continue", "\n", "", "if", "(", "ignored_threshold", "[", "j", "]", ")", ":", "\n", "                ", "continue", "\n", "", "overlap", "=", "overlaps", "[", "j", ",", "i", "]", "\n", "dt_score", "=", "dt_scores", "[", "j", "]", "\n", "if", "(", "not", "compute_fp", "and", "(", "overlap", ">", "min_overlap", ")", "\n", "and", "dt_score", ">", "valid_detection", ")", ":", "\n", "                ", "det_idx", "=", "j", "\n", "valid_detection", "=", "dt_score", "\n", "", "elif", "(", "compute_fp", "and", "(", "overlap", ">", "min_overlap", ")", "\n", "and", "(", "overlap", ">", "max_overlap", "or", "assigned_ignored_det", ")", "\n", "and", "ignored_det", "[", "j", "]", "==", "0", ")", ":", "\n", "                ", "max_overlap", "=", "overlap", "\n", "det_idx", "=", "j", "\n", "valid_detection", "=", "1", "\n", "assigned_ignored_det", "=", "False", "\n", "", "elif", "(", "compute_fp", "and", "(", "overlap", ">", "min_overlap", ")", "\n", "and", "(", "valid_detection", "==", "NO_DETECTION", ")", "\n", "and", "ignored_det", "[", "j", "]", "==", "1", ")", ":", "\n", "                ", "det_idx", "=", "j", "\n", "valid_detection", "=", "1", "\n", "assigned_ignored_det", "=", "True", "\n", "\n", "", "", "if", "(", "valid_detection", "==", "NO_DETECTION", ")", "and", "ignored_gt", "[", "i", "]", "==", "0", ":", "\n", "            ", "fn", "+=", "1", "\n", "", "elif", "(", "(", "valid_detection", "!=", "NO_DETECTION", ")", "\n", "and", "(", "ignored_gt", "[", "i", "]", "==", "1", "or", "ignored_det", "[", "det_idx", "]", "==", "1", ")", ")", ":", "\n", "            ", "assigned_detection", "[", "det_idx", "]", "=", "True", "\n", "", "elif", "valid_detection", "!=", "NO_DETECTION", ":", "\n", "            ", "tp", "+=", "1", "\n", "# thresholds.append(dt_scores[det_idx])", "\n", "thresholds", "[", "thresh_idx", "]", "=", "dt_scores", "[", "det_idx", "]", "\n", "thresh_idx", "+=", "1", "\n", "if", "compute_aos", ":", "\n", "# delta.append(gt_alphas[i] - dt_alphas[det_idx])", "\n", "                ", "delta", "[", "delta_idx", "]", "=", "gt_alphas", "[", "i", "]", "-", "dt_alphas", "[", "det_idx", "]", "\n", "delta_idx", "+=", "1", "\n", "\n", "", "assigned_detection", "[", "det_idx", "]", "=", "True", "\n", "", "", "if", "compute_fp", ":", "\n", "        ", "for", "i", "in", "range", "(", "det_size", ")", ":", "\n", "            ", "if", "(", "not", "(", "assigned_detection", "[", "i", "]", "or", "ignored_det", "[", "i", "]", "==", "-", "1", "\n", "or", "ignored_det", "[", "i", "]", "==", "1", "or", "ignored_threshold", "[", "i", "]", ")", ")", ":", "\n", "                ", "fp", "+=", "1", "\n", "", "", "nstuff", "=", "0", "\n", "if", "metric", "==", "0", ":", "\n", "            ", "overlaps_dt_dc", "=", "image_box_overlap", "(", "dt_bboxes", ",", "dc_bboxes", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "dc_bboxes", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "det_size", ")", ":", "\n", "                    ", "if", "(", "assigned_detection", "[", "j", "]", ")", ":", "\n", "                        ", "continue", "\n", "", "if", "(", "ignored_det", "[", "j", "]", "==", "-", "1", "or", "ignored_det", "[", "j", "]", "==", "1", ")", ":", "\n", "                        ", "continue", "\n", "", "if", "(", "ignored_threshold", "[", "j", "]", ")", ":", "\n", "                        ", "continue", "\n", "", "if", "overlaps_dt_dc", "[", "j", ",", "i", "]", ">", "min_overlap", ":", "\n", "                        ", "assigned_detection", "[", "j", "]", "=", "True", "\n", "nstuff", "+=", "1", "\n", "", "", "", "", "fp", "-=", "nstuff", "\n", "if", "compute_aos", ":", "\n", "            ", "tmp", "=", "np", ".", "zeros", "(", "(", "fp", "+", "delta_idx", ",", ")", ")", "\n", "# tmp = [0] * fp", "\n", "for", "i", "in", "range", "(", "delta_idx", ")", ":", "\n", "                ", "tmp", "[", "i", "+", "fp", "]", "=", "(", "1.0", "+", "np", ".", "cos", "(", "delta", "[", "i", "]", ")", ")", "/", "2.0", "\n", "# tmp.append((1.0 + np.cos(delta[i])) / 2.0)", "\n", "# assert len(tmp) == fp + tp", "\n", "# assert len(delta) == tp", "\n", "", "if", "tp", ">", "0", "or", "fp", ">", "0", ":", "\n", "                ", "similarity", "=", "np", ".", "sum", "(", "tmp", ")", "\n", "", "else", ":", "\n", "                ", "similarity", "=", "-", "1", "\n", "", "", "", "return", "tp", ",", "fp", ",", "fn", ",", "similarity", ",", "thresholds", "[", ":", "thresh_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_split_parts": [[278, 288], ["None"], "function", ["None"], ["", "def", "get_split_parts", "(", "num", ",", "num_part", ")", ":", "\n", "    ", "same_part", "=", "num", "//", "num_part", "\n", "remain_num", "=", "num", "%", "num_part", "\n", "if", "same_part", "==", "0", ":", "\n", "        ", "return", "[", "num", "]", "\n", "\n", "", "if", "remain_num", "==", "0", ":", "\n", "        ", "return", "[", "same_part", "]", "*", "num_part", "\n", "", "else", ":", "\n", "        ", "return", "[", "same_part", "]", "*", "num_part", "+", "[", "remain_num", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.fused_compute_statistics": [[290, 338], ["numba.jit", "range", "enumerate", "eval.compute_statistics_jit"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.compute_statistics_jit"], ["", "", "@", "numba", ".", "jit", "(", "nopython", "=", "True", ")", "\n", "def", "fused_compute_statistics", "(", "overlaps", ",", "\n", "pr", ",", "\n", "gt_nums", ",", "\n", "dt_nums", ",", "\n", "dc_nums", ",", "\n", "gt_datas", ",", "\n", "dt_datas", ",", "\n", "dontcares", ",", "\n", "ignored_gts", ",", "\n", "ignored_dets", ",", "\n", "metric", ",", "\n", "min_overlap", ",", "\n", "thresholds", ",", "\n", "compute_aos", "=", "False", ")", ":", "\n", "    ", "gt_num", "=", "0", "\n", "dt_num", "=", "0", "\n", "dc_num", "=", "0", "\n", "for", "i", "in", "range", "(", "gt_nums", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "for", "t", ",", "thresh", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "            ", "overlap", "=", "overlaps", "[", "dt_num", ":", "dt_num", "+", "dt_nums", "[", "i", "]", ",", "gt_num", ":", "\n", "gt_num", "+", "gt_nums", "[", "i", "]", "]", "\n", "\n", "gt_data", "=", "gt_datas", "[", "gt_num", ":", "gt_num", "+", "gt_nums", "[", "i", "]", "]", "\n", "dt_data", "=", "dt_datas", "[", "dt_num", ":", "dt_num", "+", "dt_nums", "[", "i", "]", "]", "\n", "ignored_gt", "=", "ignored_gts", "[", "gt_num", ":", "gt_num", "+", "gt_nums", "[", "i", "]", "]", "\n", "ignored_det", "=", "ignored_dets", "[", "dt_num", ":", "dt_num", "+", "dt_nums", "[", "i", "]", "]", "\n", "dontcare", "=", "dontcares", "[", "dc_num", ":", "dc_num", "+", "dc_nums", "[", "i", "]", "]", "\n", "tp", ",", "fp", ",", "fn", ",", "similarity", ",", "_", "=", "compute_statistics_jit", "(", "\n", "overlap", ",", "\n", "gt_data", ",", "\n", "dt_data", ",", "\n", "ignored_gt", ",", "\n", "ignored_det", ",", "\n", "dontcare", ",", "\n", "metric", ",", "\n", "min_overlap", "=", "min_overlap", ",", "\n", "thresh", "=", "thresh", ",", "\n", "compute_fp", "=", "True", ",", "\n", "compute_aos", "=", "compute_aos", ")", "\n", "pr", "[", "t", ",", "0", "]", "+=", "tp", "\n", "pr", "[", "t", ",", "1", "]", "+=", "fp", "\n", "pr", "[", "t", ",", "2", "]", "+=", "fn", "\n", "if", "similarity", "!=", "-", "1", ":", "\n", "                ", "pr", "[", "t", ",", "3", "]", "+=", "similarity", "\n", "", "", "gt_num", "+=", "gt_nums", "[", "i", "]", "\n", "dt_num", "+=", "dt_nums", "[", "i", "]", "\n", "dc_num", "+=", "dc_nums", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.calculate_iou_partly": [[340, 415], ["numpy.stack", "numpy.stack", "len", "eval.get_split_parts", "enumerate", "len", "len", "parted_overlaps.append", "range", "len", "len", "numpy.concatenate", "numpy.concatenate", "eval.image_box_overlap", "overlaps.append", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "bev_box_overlap().astype", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "d3_box_overlap().astype", "ValueError", "eval.bev_box_overlap", "eval.d3_box_overlap"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_split_parts", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.image_box_overlap", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.bev_box_overlap", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.d3_box_overlap"], ["", "", "def", "calculate_iou_partly", "(", "gt_annos", ",", "dt_annos", ",", "metric", ",", "num_parts", "=", "50", ")", ":", "\n", "    ", "\"\"\"fast iou algorithm. this function can be used independently to\n    do result analysis. Must be used in CAMERA coordinate system.\n    Args:\n        gt_annos: dict, must from get_label_annos() in kitti_common.py\n        dt_annos: dict, must from get_label_annos() in kitti_common.py\n        metric: eval type. 0: bbox, 1: bev, 2: 3d\n        num_parts: int. a parameter for fast calculate algorithm\n    \"\"\"", "\n", "assert", "len", "(", "gt_annos", ")", "==", "len", "(", "dt_annos", ")", "\n", "total_dt_num", "=", "np", ".", "stack", "(", "[", "len", "(", "a", "[", "\"name\"", "]", ")", "for", "a", "in", "dt_annos", "]", ",", "0", ")", "\n", "total_gt_num", "=", "np", ".", "stack", "(", "[", "len", "(", "a", "[", "\"name\"", "]", ")", "for", "a", "in", "gt_annos", "]", ",", "0", ")", "\n", "num_examples", "=", "len", "(", "gt_annos", ")", "\n", "split_parts", "=", "get_split_parts", "(", "num_examples", ",", "num_parts", ")", "\n", "parted_overlaps", "=", "[", "]", "\n", "example_idx", "=", "0", "\n", "\n", "for", "num_part", "in", "split_parts", ":", "\n", "        ", "gt_annos_part", "=", "gt_annos", "[", "example_idx", ":", "example_idx", "+", "num_part", "]", "\n", "dt_annos_part", "=", "dt_annos", "[", "example_idx", ":", "example_idx", "+", "num_part", "]", "\n", "if", "metric", "==", "0", ":", "\n", "            ", "gt_boxes", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"bbox\"", "]", "for", "a", "in", "gt_annos_part", "]", ",", "0", ")", "\n", "dt_boxes", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"bbox\"", "]", "for", "a", "in", "dt_annos_part", "]", ",", "0", ")", "\n", "overlap_part", "=", "image_box_overlap", "(", "gt_boxes", ",", "dt_boxes", ")", "\n", "", "elif", "metric", "==", "1", ":", "\n", "            ", "loc", "=", "np", ".", "concatenate", "(", "\n", "[", "a", "[", "\"location\"", "]", "[", ":", ",", "[", "0", ",", "2", "]", "]", "for", "a", "in", "gt_annos_part", "]", ",", "0", ")", "\n", "dims", "=", "np", ".", "concatenate", "(", "\n", "[", "a", "[", "\"dimensions\"", "]", "[", ":", ",", "[", "0", ",", "2", "]", "]", "for", "a", "in", "gt_annos_part", "]", ",", "0", ")", "\n", "rots", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"rotation_y\"", "]", "for", "a", "in", "gt_annos_part", "]", ",", "0", ")", "\n", "gt_boxes", "=", "np", ".", "concatenate", "(", "\n", "[", "loc", ",", "dims", ",", "rots", "[", "...", ",", "np", ".", "newaxis", "]", "]", ",", "axis", "=", "1", ")", "\n", "loc", "=", "np", ".", "concatenate", "(", "\n", "[", "a", "[", "\"location\"", "]", "[", ":", ",", "[", "0", ",", "2", "]", "]", "for", "a", "in", "dt_annos_part", "]", ",", "0", ")", "\n", "dims", "=", "np", ".", "concatenate", "(", "\n", "[", "a", "[", "\"dimensions\"", "]", "[", ":", ",", "[", "0", ",", "2", "]", "]", "for", "a", "in", "dt_annos_part", "]", ",", "0", ")", "\n", "rots", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"rotation_y\"", "]", "for", "a", "in", "dt_annos_part", "]", ",", "0", ")", "\n", "dt_boxes", "=", "np", ".", "concatenate", "(", "\n", "[", "loc", ",", "dims", ",", "rots", "[", "...", ",", "np", ".", "newaxis", "]", "]", ",", "axis", "=", "1", ")", "\n", "overlap_part", "=", "bev_box_overlap", "(", "gt_boxes", ",", "dt_boxes", ")", ".", "astype", "(", "\n", "np", ".", "float64", ")", "\n", "", "elif", "metric", "==", "2", ":", "\n", "            ", "loc", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"location\"", "]", "for", "a", "in", "gt_annos_part", "]", ",", "0", ")", "\n", "dims", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"dimensions\"", "]", "for", "a", "in", "gt_annos_part", "]", ",", "0", ")", "\n", "rots", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"rotation_y\"", "]", "for", "a", "in", "gt_annos_part", "]", ",", "0", ")", "\n", "gt_boxes", "=", "np", ".", "concatenate", "(", "\n", "[", "loc", ",", "dims", ",", "rots", "[", "...", ",", "np", ".", "newaxis", "]", "]", ",", "axis", "=", "1", ")", "\n", "loc", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"location\"", "]", "for", "a", "in", "dt_annos_part", "]", ",", "0", ")", "\n", "dims", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"dimensions\"", "]", "for", "a", "in", "dt_annos_part", "]", ",", "0", ")", "\n", "rots", "=", "np", ".", "concatenate", "(", "[", "a", "[", "\"rotation_y\"", "]", "for", "a", "in", "dt_annos_part", "]", ",", "0", ")", "\n", "dt_boxes", "=", "np", ".", "concatenate", "(", "\n", "[", "loc", ",", "dims", ",", "rots", "[", "...", ",", "np", ".", "newaxis", "]", "]", ",", "axis", "=", "1", ")", "\n", "overlap_part", "=", "d3_box_overlap", "(", "gt_boxes", ",", "dt_boxes", ")", ".", "astype", "(", "\n", "np", ".", "float64", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"unknown metric\"", ")", "\n", "", "parted_overlaps", ".", "append", "(", "overlap_part", ")", "\n", "example_idx", "+=", "num_part", "\n", "", "overlaps", "=", "[", "]", "\n", "example_idx", "=", "0", "\n", "for", "j", ",", "num_part", "in", "enumerate", "(", "split_parts", ")", ":", "\n", "        ", "gt_annos_part", "=", "gt_annos", "[", "example_idx", ":", "example_idx", "+", "num_part", "]", "\n", "dt_annos_part", "=", "dt_annos", "[", "example_idx", ":", "example_idx", "+", "num_part", "]", "\n", "gt_num_idx", ",", "dt_num_idx", "=", "0", ",", "0", "\n", "for", "i", "in", "range", "(", "num_part", ")", ":", "\n", "            ", "gt_box_num", "=", "total_gt_num", "[", "example_idx", "+", "i", "]", "\n", "dt_box_num", "=", "total_dt_num", "[", "example_idx", "+", "i", "]", "\n", "overlaps", ".", "append", "(", "\n", "parted_overlaps", "[", "j", "]", "[", "gt_num_idx", ":", "gt_num_idx", "+", "gt_box_num", ",", "\n", "dt_num_idx", ":", "dt_num_idx", "+", "dt_box_num", "]", ")", "\n", "gt_num_idx", "+=", "gt_box_num", "\n", "dt_num_idx", "+=", "dt_box_num", "\n", "", "example_idx", "+=", "num_part", "\n", "\n", "", "return", "overlaps", ",", "parted_overlaps", ",", "total_gt_num", ",", "total_dt_num", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval._prepare_data": [[417, 446], ["range", "numpy.stack", "len", "eval.clean_data", "ignored_gts.append", "ignored_dets.append", "np.stack.append", "dontcares.append", "numpy.concatenate", "numpy.concatenate", "gt_datas_list.append", "dt_datas_list.append", "numpy.array", "numpy.array", "len", "numpy.zeros().astype", "numpy.stack().astype", "numpy.zeros", "numpy.stack"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.clean_data"], ["", "def", "_prepare_data", "(", "gt_annos", ",", "dt_annos", ",", "current_class", ",", "difficulty", ")", ":", "\n", "    ", "gt_datas_list", "=", "[", "]", "\n", "dt_datas_list", "=", "[", "]", "\n", "total_dc_num", "=", "[", "]", "\n", "ignored_gts", ",", "ignored_dets", ",", "dontcares", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "total_num_valid_gt", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "gt_annos", ")", ")", ":", "\n", "        ", "rets", "=", "clean_data", "(", "gt_annos", "[", "i", "]", ",", "dt_annos", "[", "i", "]", ",", "current_class", ",", "difficulty", ")", "\n", "num_valid_gt", ",", "ignored_gt", ",", "ignored_det", ",", "dc_bboxes", "=", "rets", "\n", "ignored_gts", ".", "append", "(", "np", ".", "array", "(", "ignored_gt", ",", "dtype", "=", "np", ".", "int64", ")", ")", "\n", "ignored_dets", ".", "append", "(", "np", ".", "array", "(", "ignored_det", ",", "dtype", "=", "np", ".", "int64", ")", ")", "\n", "if", "len", "(", "dc_bboxes", ")", "==", "0", ":", "\n", "            ", "dc_bboxes", "=", "np", ".", "zeros", "(", "(", "0", ",", "4", ")", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "", "else", ":", "\n", "            ", "dc_bboxes", "=", "np", ".", "stack", "(", "dc_bboxes", ",", "0", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "", "total_dc_num", ".", "append", "(", "dc_bboxes", ".", "shape", "[", "0", "]", ")", "\n", "dontcares", ".", "append", "(", "dc_bboxes", ")", "\n", "total_num_valid_gt", "+=", "num_valid_gt", "\n", "gt_datas", "=", "np", ".", "concatenate", "(", "\n", "[", "gt_annos", "[", "i", "]", "[", "\"bbox\"", "]", ",", "gt_annos", "[", "i", "]", "[", "\"alpha\"", "]", "[", "...", ",", "np", ".", "newaxis", "]", "]", ",", "1", ")", "\n", "dt_datas", "=", "np", ".", "concatenate", "(", "[", "\n", "dt_annos", "[", "i", "]", "[", "\"bbox\"", "]", ",", "dt_annos", "[", "i", "]", "[", "\"alpha\"", "]", "[", "...", ",", "np", ".", "newaxis", "]", ",", "\n", "dt_annos", "[", "i", "]", "[", "\"score\"", "]", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "]", ",", "1", ")", "\n", "gt_datas_list", ".", "append", "(", "gt_datas", ")", "\n", "dt_datas_list", ".", "append", "(", "dt_datas", ")", "\n", "", "total_dc_num", "=", "np", ".", "stack", "(", "total_dc_num", ",", "axis", "=", "0", ")", "\n", "return", "(", "gt_datas_list", ",", "dt_datas_list", ",", "ignored_gts", ",", "ignored_dets", ",", "dontcares", ",", "\n", "total_dc_num", ",", "total_num_valid_gt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.eval_class": [[448, 554], ["len", "eval.get_split_parts", "eval.calculate_iou_partly", "len", "len", "len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "enumerate", "len", "len", "enumerate", "eval._prepare_data", "enumerate", "range", "numpy.array", "eval.get_thresholds", "numpy.array", "numpy.zeros", "enumerate", "range", "range", "len", "eval.compute_statistics_jit", "np.array.tolist", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "eval.fused_compute_statistics", "len", "len", "numpy.max", "numpy.max", "len", "numpy.max"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_split_parts", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.calculate_iou_partly", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval._prepare_data", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_thresholds", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.compute_statistics_jit", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.fused_compute_statistics"], ["", "def", "eval_class", "(", "gt_annos", ",", "\n", "dt_annos", ",", "\n", "current_classes", ",", "\n", "difficultys", ",", "\n", "metric", ",", "\n", "min_overlaps", ",", "\n", "compute_aos", "=", "False", ",", "\n", "num_parts", "=", "100", ")", ":", "\n", "    ", "\"\"\"Kitti eval. support 2d/bev/3d/aos eval. support 0.5:0.05:0.95 coco AP.\n    Args:\n        gt_annos: dict, must from get_label_annos() in kitti_common.py\n        dt_annos: dict, must from get_label_annos() in kitti_common.py\n        current_classes: list of int, 0: car, 1: pedestrian, 2: cyclist\n        difficultys: list of int. eval difficulty, 0: easy, 1: normal, 2: hard\n        metric: eval type. 0: bbox, 1: bev, 2: 3d\n        min_overlaps: float, min overlap. format: [num_overlap, metric, class].\n        num_parts: int. a parameter for fast calculate algorithm\n\n    Returns:\n        dict of recall, precision and aos\n    \"\"\"", "\n", "assert", "len", "(", "gt_annos", ")", "==", "len", "(", "dt_annos", ")", "\n", "num_examples", "=", "len", "(", "gt_annos", ")", "\n", "split_parts", "=", "get_split_parts", "(", "num_examples", ",", "num_parts", ")", "\n", "\n", "rets", "=", "calculate_iou_partly", "(", "dt_annos", ",", "gt_annos", ",", "metric", ",", "num_parts", ")", "\n", "overlaps", ",", "parted_overlaps", ",", "total_dt_num", ",", "total_gt_num", "=", "rets", "\n", "N_SAMPLE_PTS", "=", "41", "\n", "num_minoverlap", "=", "len", "(", "min_overlaps", ")", "\n", "num_class", "=", "len", "(", "current_classes", ")", "\n", "num_difficulty", "=", "len", "(", "difficultys", ")", "\n", "precision", "=", "np", ".", "zeros", "(", "\n", "[", "num_class", ",", "num_difficulty", ",", "num_minoverlap", ",", "N_SAMPLE_PTS", "]", ")", "\n", "recall", "=", "np", ".", "zeros", "(", "\n", "[", "num_class", ",", "num_difficulty", ",", "num_minoverlap", ",", "N_SAMPLE_PTS", "]", ")", "\n", "aos", "=", "np", ".", "zeros", "(", "[", "num_class", ",", "num_difficulty", ",", "num_minoverlap", ",", "N_SAMPLE_PTS", "]", ")", "\n", "for", "m", ",", "current_class", "in", "enumerate", "(", "current_classes", ")", ":", "\n", "        ", "for", "l", ",", "difficulty", "in", "enumerate", "(", "difficultys", ")", ":", "\n", "            ", "rets", "=", "_prepare_data", "(", "gt_annos", ",", "dt_annos", ",", "current_class", ",", "difficulty", ")", "\n", "(", "gt_datas_list", ",", "dt_datas_list", ",", "ignored_gts", ",", "ignored_dets", ",", "\n", "dontcares", ",", "total_dc_num", ",", "total_num_valid_gt", ")", "=", "rets", "\n", "for", "k", ",", "min_overlap", "in", "enumerate", "(", "min_overlaps", "[", ":", ",", "metric", ",", "m", "]", ")", ":", "\n", "                ", "thresholdss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "gt_annos", ")", ")", ":", "\n", "                    ", "rets", "=", "compute_statistics_jit", "(", "\n", "overlaps", "[", "i", "]", ",", "\n", "gt_datas_list", "[", "i", "]", ",", "\n", "dt_datas_list", "[", "i", "]", ",", "\n", "ignored_gts", "[", "i", "]", ",", "\n", "ignored_dets", "[", "i", "]", ",", "\n", "dontcares", "[", "i", "]", ",", "\n", "metric", ",", "\n", "min_overlap", "=", "min_overlap", ",", "\n", "thresh", "=", "0.0", ",", "\n", "compute_fp", "=", "False", ")", "\n", "tp", ",", "fp", ",", "fn", ",", "similarity", ",", "thresholds", "=", "rets", "\n", "thresholdss", "+=", "thresholds", ".", "tolist", "(", ")", "\n", "", "thresholdss", "=", "np", ".", "array", "(", "thresholdss", ")", "\n", "thresholds", "=", "get_thresholds", "(", "thresholdss", ",", "total_num_valid_gt", ")", "\n", "thresholds", "=", "np", ".", "array", "(", "thresholds", ")", "\n", "pr", "=", "np", ".", "zeros", "(", "[", "len", "(", "thresholds", ")", ",", "4", "]", ")", "\n", "idx", "=", "0", "\n", "for", "j", ",", "num_part", "in", "enumerate", "(", "split_parts", ")", ":", "\n", "                    ", "gt_datas_part", "=", "np", ".", "concatenate", "(", "\n", "gt_datas_list", "[", "idx", ":", "idx", "+", "num_part", "]", ",", "0", ")", "\n", "dt_datas_part", "=", "np", ".", "concatenate", "(", "\n", "dt_datas_list", "[", "idx", ":", "idx", "+", "num_part", "]", ",", "0", ")", "\n", "dc_datas_part", "=", "np", ".", "concatenate", "(", "\n", "dontcares", "[", "idx", ":", "idx", "+", "num_part", "]", ",", "0", ")", "\n", "ignored_dets_part", "=", "np", ".", "concatenate", "(", "\n", "ignored_dets", "[", "idx", ":", "idx", "+", "num_part", "]", ",", "0", ")", "\n", "ignored_gts_part", "=", "np", ".", "concatenate", "(", "\n", "ignored_gts", "[", "idx", ":", "idx", "+", "num_part", "]", ",", "0", ")", "\n", "fused_compute_statistics", "(", "\n", "parted_overlaps", "[", "j", "]", ",", "\n", "pr", ",", "\n", "total_gt_num", "[", "idx", ":", "idx", "+", "num_part", "]", ",", "\n", "total_dt_num", "[", "idx", ":", "idx", "+", "num_part", "]", ",", "\n", "total_dc_num", "[", "idx", ":", "idx", "+", "num_part", "]", ",", "\n", "gt_datas_part", ",", "\n", "dt_datas_part", ",", "\n", "dc_datas_part", ",", "\n", "ignored_gts_part", ",", "\n", "ignored_dets_part", ",", "\n", "metric", ",", "\n", "min_overlap", "=", "min_overlap", ",", "\n", "thresholds", "=", "thresholds", ",", "\n", "compute_aos", "=", "compute_aos", ")", "\n", "idx", "+=", "num_part", "\n", "", "for", "i", "in", "range", "(", "len", "(", "thresholds", ")", ")", ":", "\n", "                    ", "recall", "[", "m", ",", "l", ",", "k", ",", "i", "]", "=", "pr", "[", "i", ",", "0", "]", "/", "(", "pr", "[", "i", ",", "0", "]", "+", "pr", "[", "i", ",", "2", "]", ")", "\n", "precision", "[", "m", ",", "l", ",", "k", ",", "i", "]", "=", "pr", "[", "i", ",", "0", "]", "/", "(", "pr", "[", "i", ",", "0", "]", "+", "pr", "[", "i", ",", "1", "]", ")", "\n", "if", "compute_aos", ":", "\n", "                        ", "aos", "[", "m", ",", "l", ",", "k", ",", "i", "]", "=", "pr", "[", "i", ",", "3", "]", "/", "(", "pr", "[", "i", ",", "0", "]", "+", "pr", "[", "i", ",", "1", "]", ")", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "thresholds", ")", ")", ":", "\n", "                    ", "precision", "[", "m", ",", "l", ",", "k", ",", "i", "]", "=", "np", ".", "max", "(", "\n", "precision", "[", "m", ",", "l", ",", "k", ",", "i", ":", "]", ",", "axis", "=", "-", "1", ")", "\n", "recall", "[", "m", ",", "l", ",", "k", ",", "i", "]", "=", "np", ".", "max", "(", "recall", "[", "m", ",", "l", ",", "k", ",", "i", ":", "]", ",", "axis", "=", "-", "1", ")", "\n", "if", "compute_aos", ":", "\n", "                        ", "aos", "[", "m", ",", "l", ",", "k", ",", "i", "]", "=", "np", ".", "max", "(", "aos", "[", "m", ",", "l", ",", "k", ",", "i", ":", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "", "", "", "", "ret_dict", "=", "{", "\n", "\"recall\"", ":", "recall", ",", "\n", "\"precision\"", ":", "precision", ",", "\n", "\"orientation\"", ":", "aos", ",", "\n", "}", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP": [[556, 561], ["range"], "function", ["None"], ["", "def", "get_mAP", "(", "prec", ")", ":", "\n", "    ", "sums", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "prec", ".", "shape", "[", "-", "1", "]", ",", "4", ")", ":", "\n", "        ", "sums", "=", "sums", "+", "prec", "[", "...", ",", "i", "]", "\n", "", "return", "sums", "/", "11", "*", "100", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP_R40": [[563, 568], ["range"], "function", ["None"], ["", "def", "get_mAP_R40", "(", "prec", ")", ":", "\n", "    ", "sums", "=", "0", "\n", "for", "i", "in", "range", "(", "1", ",", "prec", ".", "shape", "[", "-", "1", "]", ")", ":", "\n", "        ", "sums", "=", "sums", "+", "prec", "[", "...", ",", "i", "]", "\n", "", "return", "sums", "/", "40", "*", "100", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str": [[570, 577], ["sysio.StringIO.truncate", "sysio.StringIO.seek", "print", "sysio.StringIO.getvalue", "io.StringIO"], "function", ["None"], ["", "def", "print_str", "(", "value", ",", "*", "arg", ",", "sstream", "=", "None", ")", ":", "\n", "    ", "if", "sstream", "is", "None", ":", "\n", "        ", "sstream", "=", "sysio", ".", "StringIO", "(", ")", "\n", "", "sstream", ".", "truncate", "(", "0", ")", "\n", "sstream", ".", "seek", "(", "0", ")", "\n", "print", "(", "value", ",", "*", "arg", ",", "file", "=", "sstream", ")", "\n", "return", "sstream", ".", "getvalue", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.do_eval": [[579, 619], ["eval.eval_class", "eval.get_mAP", "eval.get_mAP_R40", "eval.eval_class", "eval.get_mAP", "eval.get_mAP_R40", "eval.eval_class", "eval.get_mAP", "eval.get_mAP_R40", "eval.get_mAP", "eval.get_mAP_R40"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.eval_class", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP_R40", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.eval_class", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP_R40", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.eval_class", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP_R40", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_mAP_R40"], ["", "def", "do_eval", "(", "gt_annos", ",", "\n", "dt_annos", ",", "\n", "current_classes", ",", "\n", "min_overlaps", ",", "\n", "compute_aos", "=", "False", ",", "\n", "PR_detail_dict", "=", "None", ")", ":", "\n", "# min_overlaps: [num_minoverlap, metric, num_class]", "\n", "    ", "difficultys", "=", "[", "0", ",", "1", ",", "2", "]", "\n", "ret", "=", "eval_class", "(", "gt_annos", ",", "dt_annos", ",", "current_classes", ",", "difficultys", ",", "0", ",", "\n", "min_overlaps", ",", "compute_aos", ")", "\n", "# ret: [num_class, num_diff, num_minoverlap, num_sample_points]", "\n", "mAP_bbox", "=", "get_mAP", "(", "ret", "[", "\"precision\"", "]", ")", "\n", "mAP_bbox_R40", "=", "get_mAP_R40", "(", "ret", "[", "\"precision\"", "]", ")", "\n", "\n", "if", "PR_detail_dict", "is", "not", "None", ":", "\n", "        ", "PR_detail_dict", "[", "'bbox'", "]", "=", "ret", "[", "'precision'", "]", "\n", "\n", "", "mAP_aos", "=", "mAP_aos_R40", "=", "None", "\n", "if", "compute_aos", ":", "\n", "        ", "mAP_aos", "=", "get_mAP", "(", "ret", "[", "\"orientation\"", "]", ")", "\n", "mAP_aos_R40", "=", "get_mAP_R40", "(", "ret", "[", "\"orientation\"", "]", ")", "\n", "\n", "if", "PR_detail_dict", "is", "not", "None", ":", "\n", "            ", "PR_detail_dict", "[", "'aos'", "]", "=", "ret", "[", "'orientation'", "]", "\n", "\n", "", "", "ret", "=", "eval_class", "(", "gt_annos", ",", "dt_annos", ",", "current_classes", ",", "difficultys", ",", "1", ",", "\n", "min_overlaps", ")", "\n", "mAP_bev", "=", "get_mAP", "(", "ret", "[", "\"precision\"", "]", ")", "\n", "mAP_bev_R40", "=", "get_mAP_R40", "(", "ret", "[", "\"precision\"", "]", ")", "\n", "\n", "if", "PR_detail_dict", "is", "not", "None", ":", "\n", "        ", "PR_detail_dict", "[", "'bev'", "]", "=", "ret", "[", "'precision'", "]", "\n", "\n", "", "ret", "=", "eval_class", "(", "gt_annos", ",", "dt_annos", ",", "current_classes", ",", "difficultys", ",", "2", ",", "\n", "min_overlaps", ")", "\n", "mAP_3d", "=", "get_mAP", "(", "ret", "[", "\"precision\"", "]", ")", "\n", "mAP_3d_R40", "=", "get_mAP_R40", "(", "ret", "[", "\"precision\"", "]", ")", "\n", "if", "PR_detail_dict", "is", "not", "None", ":", "\n", "        ", "PR_detail_dict", "[", "'3d'", "]", "=", "ret", "[", "'precision'", "]", "\n", "", "return", "mAP_bbox", ",", "mAP_bev", ",", "mAP_3d", ",", "mAP_aos", ",", "mAP_bbox_R40", ",", "mAP_bev_R40", ",", "mAP_3d_R40", ",", "mAP_aos_R40", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.do_coco_style_eval": [[621, 637], ["numpy.zeros", "range", "eval.do_eval", "mAP_bbox.mean.mean", "mAP_bev.mean.mean", "mAP_3d.mean.mean", "range", "mAP_aos.mean.mean", "numpy.linspace"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.do_eval"], ["", "def", "do_coco_style_eval", "(", "gt_annos", ",", "dt_annos", ",", "current_classes", ",", "overlap_ranges", ",", "\n", "compute_aos", ")", ":", "\n", "# overlap_ranges: [range, metric, num_class]", "\n", "    ", "min_overlaps", "=", "np", ".", "zeros", "(", "[", "10", ",", "*", "overlap_ranges", ".", "shape", "[", "1", ":", "]", "]", ")", "\n", "for", "i", "in", "range", "(", "overlap_ranges", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "overlap_ranges", ".", "shape", "[", "2", "]", ")", ":", "\n", "            ", "min_overlaps", "[", ":", ",", "i", ",", "j", "]", "=", "np", ".", "linspace", "(", "*", "overlap_ranges", "[", ":", ",", "i", ",", "j", "]", ")", "\n", "", "", "mAP_bbox", ",", "mAP_bev", ",", "mAP_3d", ",", "mAP_aos", "=", "do_eval", "(", "\n", "gt_annos", ",", "dt_annos", ",", "current_classes", ",", "min_overlaps", ",", "compute_aos", ")", "\n", "# ret: [num_class, num_diff, num_minoverlap]", "\n", "mAP_bbox", "=", "mAP_bbox", ".", "mean", "(", "-", "1", ")", "\n", "mAP_bev", "=", "mAP_bev", ".", "mean", "(", "-", "1", ")", "\n", "mAP_3d", "=", "mAP_3d", ".", "mean", "(", "-", "1", ")", "\n", "if", "mAP_aos", "is", "not", "None", ":", "\n", "        ", "mAP_aos", "=", "mAP_aos", ".", "mean", "(", "-", "1", ")", "\n", "", "return", "mAP_bbox", ",", "mAP_bev", ",", "mAP_3d", ",", "mAP_aos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_official_eval_result": [[639, 747], ["numpy.array", "numpy.array", "numpy.stack", "eval.do_eval", "enumerate", "isinstance", "isinstance", "range", "class_to_name.items", "current_classes_int.append", "current_classes_int.append", "eval.print_str", "eval.print_str", "eval.print_str", "eval.print_str", "eval.print_str", "eval.print_str", "eval.print_str", "eval.print_str", "eval.print_str", "eval.print_str"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.do_eval", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str"], ["", "def", "get_official_eval_result", "(", "gt_annos", ",", "dt_annos", ",", "current_classes", ",", "PR_detail_dict", "=", "None", ")", ":", "\n", "    ", "overlap_0_7", "=", "np", ".", "array", "(", "[", "[", "0.7", ",", "0.5", ",", "0.5", ",", "0.7", ",", "\n", "0.5", ",", "0.7", "]", ",", "[", "0.7", ",", "0.5", ",", "0.5", ",", "0.7", ",", "0.5", ",", "0.7", "]", ",", "\n", "[", "0.7", ",", "0.5", ",", "0.5", ",", "0.7", ",", "0.5", ",", "0.7", "]", "]", ")", "\n", "overlap_0_5", "=", "np", ".", "array", "(", "[", "[", "0.7", ",", "0.5", ",", "0.5", ",", "0.7", ",", "\n", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.25", ",", "0.25", ",", "0.5", ",", "0.25", ",", "0.5", "]", ",", "\n", "[", "0.5", ",", "0.25", ",", "0.25", ",", "0.5", ",", "0.25", ",", "0.5", "]", "]", ")", "\n", "min_overlaps", "=", "np", ".", "stack", "(", "[", "overlap_0_7", ",", "overlap_0_5", "]", ",", "axis", "=", "0", ")", "# [2, 3, 5]", "\n", "class_to_name", "=", "{", "\n", "0", ":", "'Car'", ",", "\n", "1", ":", "'Pedestrian'", ",", "\n", "2", ":", "'Cyclist'", ",", "\n", "3", ":", "'Van'", ",", "\n", "4", ":", "'Person_sitting'", ",", "\n", "5", ":", "'Truck'", "\n", "}", "\n", "name_to_class", "=", "{", "v", ":", "n", "for", "n", ",", "v", "in", "class_to_name", ".", "items", "(", ")", "}", "\n", "if", "not", "isinstance", "(", "current_classes", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "current_classes", "=", "[", "current_classes", "]", "\n", "", "current_classes_int", "=", "[", "]", "\n", "for", "curcls", "in", "current_classes", ":", "\n", "        ", "if", "isinstance", "(", "curcls", ",", "str", ")", ":", "\n", "            ", "current_classes_int", ".", "append", "(", "name_to_class", "[", "curcls", "]", ")", "\n", "", "else", ":", "\n", "            ", "current_classes_int", ".", "append", "(", "curcls", ")", "\n", "", "", "current_classes", "=", "current_classes_int", "\n", "min_overlaps", "=", "min_overlaps", "[", ":", ",", ":", ",", "current_classes", "]", "\n", "result", "=", "''", "\n", "# check whether alpha is valid", "\n", "compute_aos", "=", "False", "\n", "for", "anno", "in", "dt_annos", ":", "\n", "        ", "if", "anno", "[", "'alpha'", "]", ".", "shape", "[", "0", "]", "!=", "0", ":", "\n", "            ", "if", "anno", "[", "'alpha'", "]", "[", "0", "]", "!=", "-", "10", ":", "\n", "                ", "compute_aos", "=", "True", "\n", "", "break", "\n", "", "", "mAPbbox", ",", "mAPbev", ",", "mAP3d", ",", "mAPaos", ",", "mAPbbox_R40", ",", "mAPbev_R40", ",", "mAP3d_R40", ",", "mAPaos_R40", "=", "do_eval", "(", "\n", "gt_annos", ",", "dt_annos", ",", "current_classes", ",", "min_overlaps", ",", "compute_aos", ",", "PR_detail_dict", "=", "PR_detail_dict", ")", "\n", "\n", "ret_dict", "=", "{", "}", "\n", "for", "j", ",", "curcls", "in", "enumerate", "(", "current_classes", ")", ":", "\n", "# mAP threshold array: [num_minoverlap, metric, class]", "\n", "# mAP result: [num_class, num_diff, num_minoverlap]", "\n", "        ", "for", "i", "in", "range", "(", "min_overlaps", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "result", "+=", "print_str", "(", "\n", "(", "f\"{class_to_name[curcls]} \"", "\n", "\"AP@{:.2f}, {:.2f}, {:.2f}:\"", ".", "format", "(", "*", "min_overlaps", "[", "i", ",", ":", ",", "j", "]", ")", ")", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"bbox AP:{mAPbbox[j, 0, i]:.4f}, \"", "\n", "f\"{mAPbbox[j, 1, i]:.4f}, \"", "\n", "f\"{mAPbbox[j, 2, i]:.4f}\"", ")", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"bev  AP:{mAPbev[j, 0, i]:.4f}, \"", "\n", "f\"{mAPbev[j, 1, i]:.4f}, \"", "\n", "f\"{mAPbev[j, 2, i]:.4f}\"", ")", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"3d   AP:{mAP3d[j, 0, i]:.4f}, \"", "\n", "f\"{mAP3d[j, 1, i]:.4f}, \"", "\n", "f\"{mAP3d[j, 2, i]:.4f}\"", ")", ")", "\n", "\n", "if", "compute_aos", ":", "\n", "                ", "result", "+=", "print_str", "(", "(", "f\"aos  AP:{mAPaos[j, 0, i]:.2f}, \"", "\n", "f\"{mAPaos[j, 1, i]:.2f}, \"", "\n", "f\"{mAPaos[j, 2, i]:.2f}\"", ")", ")", "\n", "# if i == 0:", "\n", "# ret_dict['%s_aos/easy' % class_to_name[curcls]] = mAPaos[j, 0, 0]", "\n", "# ret_dict['%s_aos/moderate' % class_to_name[curcls]] = mAPaos[j, 1, 0]", "\n", "# ret_dict['%s_aos/hard' % class_to_name[curcls]] = mAPaos[j, 2, 0]", "\n", "\n", "", "result", "+=", "print_str", "(", "\n", "(", "f\"{class_to_name[curcls]} \"", "\n", "\"AP_R40@{:.2f}, {:.2f}, {:.2f}:\"", ".", "format", "(", "*", "min_overlaps", "[", "i", ",", ":", ",", "j", "]", ")", ")", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"bbox AP:{mAPbbox_R40[j, 0, i]:.4f}, \"", "\n", "f\"{mAPbbox_R40[j, 1, i]:.4f}, \"", "\n", "f\"{mAPbbox_R40[j, 2, i]:.4f}\"", ")", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"bev  AP:{mAPbev_R40[j, 0, i]:.4f}, \"", "\n", "f\"{mAPbev_R40[j, 1, i]:.4f}, \"", "\n", "f\"{mAPbev_R40[j, 2, i]:.4f}\"", ")", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"3d   AP:{mAP3d_R40[j, 0, i]:.4f}, \"", "\n", "f\"{mAP3d_R40[j, 1, i]:.4f}, \"", "\n", "f\"{mAP3d_R40[j, 2, i]:.4f}\"", ")", ")", "\n", "if", "compute_aos", ":", "\n", "                ", "result", "+=", "print_str", "(", "(", "f\"aos  AP:{mAPaos_R40[j, 0, i]:.2f}, \"", "\n", "f\"{mAPaos_R40[j, 1, i]:.2f}, \"", "\n", "f\"{mAPaos_R40[j, 2, i]:.2f}\"", ")", ")", "\n", "if", "i", "==", "0", ":", "\n", "                   ", "ret_dict", "[", "'%s_aos/easy_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAPaos_R40", "[", "j", ",", "0", ",", "0", "]", "\n", "ret_dict", "[", "'%s_aos/moderate_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAPaos_R40", "[", "j", ",", "1", ",", "0", "]", "\n", "ret_dict", "[", "'%s_aos/hard_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAPaos_R40", "[", "j", ",", "2", ",", "0", "]", "\n", "\n", "", "", "if", "i", "==", "0", ":", "\n", "# ret_dict['%s_3d/easy' % class_to_name[curcls]] = mAP3d[j, 0, 0]", "\n", "# ret_dict['%s_3d/moderate' % class_to_name[curcls]] = mAP3d[j, 1, 0]", "\n", "# ret_dict['%s_3d/hard' % class_to_name[curcls]] = mAP3d[j, 2, 0]", "\n", "# ret_dict['%s_bev/easy' % class_to_name[curcls]] = mAPbev[j, 0, 0]", "\n", "# ret_dict['%s_bev/moderate' % class_to_name[curcls]] = mAPbev[j, 1, 0]", "\n", "# ret_dict['%s_bev/hard' % class_to_name[curcls]] = mAPbev[j, 2, 0]", "\n", "# ret_dict['%s_image/easy' % class_to_name[curcls]] = mAPbbox[j, 0, 0]", "\n", "# ret_dict['%s_image/moderate' % class_to_name[curcls]] = mAPbbox[j, 1, 0]", "\n", "# ret_dict['%s_image/hard' % class_to_name[curcls]] = mAPbbox[j, 2, 0]", "\n", "\n", "                ", "ret_dict", "[", "'%s_3d/easy_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAP3d_R40", "[", "j", ",", "0", ",", "0", "]", "\n", "ret_dict", "[", "'%s_3d/moderate_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAP3d_R40", "[", "j", ",", "1", ",", "0", "]", "\n", "ret_dict", "[", "'%s_3d/hard_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAP3d_R40", "[", "j", ",", "2", ",", "0", "]", "\n", "ret_dict", "[", "'%s_bev/easy_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAPbev_R40", "[", "j", ",", "0", ",", "0", "]", "\n", "ret_dict", "[", "'%s_bev/moderate_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAPbev_R40", "[", "j", ",", "1", ",", "0", "]", "\n", "ret_dict", "[", "'%s_bev/hard_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAPbev_R40", "[", "j", ",", "2", ",", "0", "]", "\n", "ret_dict", "[", "'%s_image/easy_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAPbbox_R40", "[", "j", ",", "0", ",", "0", "]", "\n", "ret_dict", "[", "'%s_image/moderate_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAPbbox_R40", "[", "j", ",", "1", ",", "0", "]", "\n", "ret_dict", "[", "'%s_image/hard_R40'", "%", "class_to_name", "[", "curcls", "]", "]", "=", "mAPbbox_R40", "[", "j", ",", "2", ",", "0", "]", "\n", "\n", "", "", "", "return", "result", ",", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.get_coco_eval_result": [[749, 809], ["numpy.zeros", "enumerate", "eval.do_coco_style_eval", "enumerate", "isinstance", "isinstance", "eval.print_str", "eval.print_str", "eval.print_str", "eval.print_str", "class_to_name.items", "current_classes_int.append", "current_classes_int.append", "len", "numpy.array", "numpy.array", "eval.print_str"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.do_coco_style_eval", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.eval.print_str"], ["", "def", "get_coco_eval_result", "(", "gt_annos", ",", "dt_annos", ",", "current_classes", ")", ":", "\n", "    ", "class_to_name", "=", "{", "\n", "0", ":", "'Car'", ",", "\n", "1", ":", "'Pedestrian'", ",", "\n", "2", ":", "'Cyclist'", ",", "\n", "3", ":", "'Van'", ",", "\n", "4", ":", "'Person_sitting'", ",", "\n", "}", "\n", "class_to_range", "=", "{", "\n", "0", ":", "[", "0.5", ",", "0.95", ",", "10", "]", ",", "\n", "1", ":", "[", "0.25", ",", "0.7", ",", "10", "]", ",", "\n", "2", ":", "[", "0.25", ",", "0.7", ",", "10", "]", ",", "\n", "3", ":", "[", "0.5", ",", "0.95", ",", "10", "]", ",", "\n", "4", ":", "[", "0.25", ",", "0.7", ",", "10", "]", ",", "\n", "}", "\n", "name_to_class", "=", "{", "v", ":", "n", "for", "n", ",", "v", "in", "class_to_name", ".", "items", "(", ")", "}", "\n", "if", "not", "isinstance", "(", "current_classes", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "current_classes", "=", "[", "current_classes", "]", "\n", "", "current_classes_int", "=", "[", "]", "\n", "for", "curcls", "in", "current_classes", ":", "\n", "        ", "if", "isinstance", "(", "curcls", ",", "str", ")", ":", "\n", "            ", "current_classes_int", ".", "append", "(", "name_to_class", "[", "curcls", "]", ")", "\n", "", "else", ":", "\n", "            ", "current_classes_int", ".", "append", "(", "curcls", ")", "\n", "", "", "current_classes", "=", "current_classes_int", "\n", "overlap_ranges", "=", "np", ".", "zeros", "(", "[", "3", ",", "3", ",", "len", "(", "current_classes", ")", "]", ")", "\n", "for", "i", ",", "curcls", "in", "enumerate", "(", "current_classes", ")", ":", "\n", "        ", "overlap_ranges", "[", ":", ",", ":", ",", "i", "]", "=", "np", ".", "array", "(", "\n", "class_to_range", "[", "curcls", "]", ")", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "", "result", "=", "''", "\n", "# check whether alpha is valid", "\n", "compute_aos", "=", "False", "\n", "for", "anno", "in", "dt_annos", ":", "\n", "        ", "if", "anno", "[", "'alpha'", "]", ".", "shape", "[", "0", "]", "!=", "0", ":", "\n", "            ", "if", "anno", "[", "'alpha'", "]", "[", "0", "]", "!=", "-", "10", ":", "\n", "                ", "compute_aos", "=", "True", "\n", "", "break", "\n", "", "", "mAPbbox", ",", "mAPbev", ",", "mAP3d", ",", "mAPaos", "=", "do_coco_style_eval", "(", "\n", "gt_annos", ",", "dt_annos", ",", "current_classes", ",", "overlap_ranges", ",", "compute_aos", ")", "\n", "for", "j", ",", "curcls", "in", "enumerate", "(", "current_classes", ")", ":", "\n", "# mAP threshold array: [num_minoverlap, metric, class]", "\n", "# mAP result: [num_class, num_diff, num_minoverlap]", "\n", "        ", "o_range", "=", "np", ".", "array", "(", "class_to_range", "[", "curcls", "]", ")", "[", "[", "0", ",", "2", ",", "1", "]", "]", "\n", "o_range", "[", "1", "]", "=", "(", "o_range", "[", "2", "]", "-", "o_range", "[", "0", "]", ")", "/", "(", "o_range", "[", "1", "]", "-", "1", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"{class_to_name[curcls]} \"", "\n", "\"coco AP@{:.2f}:{:.2f}:{:.2f}:\"", ".", "format", "(", "*", "o_range", ")", ")", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"bbox AP:{mAPbbox[j, 0]:.2f}, \"", "\n", "f\"{mAPbbox[j, 1]:.2f}, \"", "\n", "f\"{mAPbbox[j, 2]:.2f}\"", ")", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"bev  AP:{mAPbev[j, 0]:.2f}, \"", "\n", "f\"{mAPbev[j, 1]:.2f}, \"", "\n", "f\"{mAPbev[j, 2]:.2f}\"", ")", ")", "\n", "result", "+=", "print_str", "(", "(", "f\"3d   AP:{mAP3d[j, 0]:.2f}, \"", "\n", "f\"{mAP3d[j, 1]:.2f}, \"", "\n", "f\"{mAP3d[j, 2]:.2f}\"", ")", ")", "\n", "if", "compute_aos", ":", "\n", "            ", "result", "+=", "print_str", "(", "(", "f\"aos  AP:{mAPaos[j, 0]:.2f}, \"", "\n", "f\"{mAPaos[j, 1]:.2f}, \"", "\n", "f\"{mAPaos[j, 2]:.2f}\"", ")", ")", "\n", "", "", "return", "result", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.div_up": [[13, 16], ["numba.jit"], "function", ["None"], ["@", "numba", ".", "jit", "(", "nopython", "=", "True", ")", "\n", "def", "div_up", "(", "m", ",", "n", ")", ":", "\n", "    ", "return", "m", "//", "n", "+", "(", "m", "%", "n", ">", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.trangle_area": [[17, 21], ["numba.cuda.jit"], "function", ["None"], ["", "@", "cuda", ".", "jit", "(", "'(float32[:], float32[:], float32[:])'", ",", "device", "=", "True", ",", "inline", "=", "True", ")", "\n", "def", "trangle_area", "(", "a", ",", "b", ",", "c", ")", ":", "\n", "    ", "return", "(", "(", "a", "[", "0", "]", "-", "c", "[", "0", "]", ")", "*", "(", "b", "[", "1", "]", "-", "c", "[", "1", "]", ")", "-", "(", "a", "[", "1", "]", "-", "c", "[", "1", "]", ")", "*", "\n", "(", "b", "[", "0", "]", "-", "c", "[", "0", "]", ")", ")", "/", "2.0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.area": [[23, 31], ["numba.cuda.jit", "range", "abs", "rotate_iou.trangle_area"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.trangle_area"], ["", "@", "cuda", ".", "jit", "(", "'(float32[:], int32)'", ",", "device", "=", "True", ",", "inline", "=", "True", ")", "\n", "def", "area", "(", "int_pts", ",", "num_of_inter", ")", ":", "\n", "    ", "area_val", "=", "0.0", "\n", "for", "i", "in", "range", "(", "num_of_inter", "-", "2", ")", ":", "\n", "        ", "area_val", "+=", "abs", "(", "\n", "trangle_area", "(", "int_pts", "[", ":", "2", "]", ",", "int_pts", "[", "2", "*", "i", "+", "2", ":", "2", "*", "i", "+", "4", "]", ",", "\n", "int_pts", "[", "2", "*", "i", "+", "4", ":", "2", "*", "i", "+", "6", "]", ")", ")", "\n", "", "return", "area_val", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.sort_vertex_in_convex_polygon": [[33, 71], ["numba.cuda.jit", "numba.cuda.local.array", "range", "numba.cuda.local.array", "numba.cuda.local.array", "range", "range", "math.sqrt"], "function", ["None"], ["", "@", "cuda", ".", "jit", "(", "'(float32[:], int32)'", ",", "device", "=", "True", ",", "inline", "=", "True", ")", "\n", "def", "sort_vertex_in_convex_polygon", "(", "int_pts", ",", "num_of_inter", ")", ":", "\n", "    ", "if", "num_of_inter", ">", "0", ":", "\n", "        ", "center", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "center", "[", ":", "]", "=", "0.0", "\n", "for", "i", "in", "range", "(", "num_of_inter", ")", ":", "\n", "            ", "center", "[", "0", "]", "+=", "int_pts", "[", "2", "*", "i", "]", "\n", "center", "[", "1", "]", "+=", "int_pts", "[", "2", "*", "i", "+", "1", "]", "\n", "", "center", "[", "0", "]", "/=", "num_of_inter", "\n", "center", "[", "1", "]", "/=", "num_of_inter", "\n", "v", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "vs", "=", "cuda", ".", "local", ".", "array", "(", "(", "16", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "num_of_inter", ")", ":", "\n", "            ", "v", "[", "0", "]", "=", "int_pts", "[", "2", "*", "i", "]", "-", "center", "[", "0", "]", "\n", "v", "[", "1", "]", "=", "int_pts", "[", "2", "*", "i", "+", "1", "]", "-", "center", "[", "1", "]", "\n", "d", "=", "math", ".", "sqrt", "(", "v", "[", "0", "]", "*", "v", "[", "0", "]", "+", "v", "[", "1", "]", "*", "v", "[", "1", "]", ")", "\n", "v", "[", "0", "]", "=", "v", "[", "0", "]", "/", "d", "\n", "v", "[", "1", "]", "=", "v", "[", "1", "]", "/", "d", "\n", "if", "v", "[", "1", "]", "<", "0", ":", "\n", "                ", "v", "[", "0", "]", "=", "-", "2", "-", "v", "[", "0", "]", "\n", "", "vs", "[", "i", "]", "=", "v", "[", "0", "]", "\n", "", "j", "=", "0", "\n", "temp", "=", "0", "\n", "for", "i", "in", "range", "(", "1", ",", "num_of_inter", ")", ":", "\n", "            ", "if", "vs", "[", "i", "-", "1", "]", ">", "vs", "[", "i", "]", ":", "\n", "                ", "temp", "=", "vs", "[", "i", "]", "\n", "tx", "=", "int_pts", "[", "2", "*", "i", "]", "\n", "ty", "=", "int_pts", "[", "2", "*", "i", "+", "1", "]", "\n", "j", "=", "i", "\n", "while", "j", ">", "0", "and", "vs", "[", "j", "-", "1", "]", ">", "temp", ":", "\n", "                    ", "vs", "[", "j", "]", "=", "vs", "[", "j", "-", "1", "]", "\n", "int_pts", "[", "j", "*", "2", "]", "=", "int_pts", "[", "j", "*", "2", "-", "2", "]", "\n", "int_pts", "[", "j", "*", "2", "+", "1", "]", "=", "int_pts", "[", "j", "*", "2", "-", "1", "]", "\n", "j", "-=", "1", "\n", "\n", "", "vs", "[", "j", "]", "=", "temp", "\n", "int_pts", "[", "j", "*", "2", "]", "=", "tx", "\n", "int_pts", "[", "j", "*", "2", "+", "1", "]", "=", "ty", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.line_segment_intersection": [[73, 117], ["numba.cuda.jit", "numba.cuda.local.array", "numba.cuda.local.array", "numba.cuda.local.array", "numba.cuda.local.array"], "function", ["None"], ["", "", "", "", "@", "cuda", ".", "jit", "(", "\n", "'(float32[:], float32[:], int32, int32, float32[:])'", ",", "\n", "device", "=", "True", ",", "\n", "inline", "=", "True", ")", "\n", "def", "line_segment_intersection", "(", "pts1", ",", "pts2", ",", "i", ",", "j", ",", "temp_pts", ")", ":", "\n", "    ", "A", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "B", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "C", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "D", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "\n", "A", "[", "0", "]", "=", "pts1", "[", "2", "*", "i", "]", "\n", "A", "[", "1", "]", "=", "pts1", "[", "2", "*", "i", "+", "1", "]", "\n", "\n", "B", "[", "0", "]", "=", "pts1", "[", "2", "*", "(", "(", "i", "+", "1", ")", "%", "4", ")", "]", "\n", "B", "[", "1", "]", "=", "pts1", "[", "2", "*", "(", "(", "i", "+", "1", ")", "%", "4", ")", "+", "1", "]", "\n", "\n", "C", "[", "0", "]", "=", "pts2", "[", "2", "*", "j", "]", "\n", "C", "[", "1", "]", "=", "pts2", "[", "2", "*", "j", "+", "1", "]", "\n", "\n", "D", "[", "0", "]", "=", "pts2", "[", "2", "*", "(", "(", "j", "+", "1", ")", "%", "4", ")", "]", "\n", "D", "[", "1", "]", "=", "pts2", "[", "2", "*", "(", "(", "j", "+", "1", ")", "%", "4", ")", "+", "1", "]", "\n", "BA0", "=", "B", "[", "0", "]", "-", "A", "[", "0", "]", "\n", "BA1", "=", "B", "[", "1", "]", "-", "A", "[", "1", "]", "\n", "DA0", "=", "D", "[", "0", "]", "-", "A", "[", "0", "]", "\n", "CA0", "=", "C", "[", "0", "]", "-", "A", "[", "0", "]", "\n", "DA1", "=", "D", "[", "1", "]", "-", "A", "[", "1", "]", "\n", "CA1", "=", "C", "[", "1", "]", "-", "A", "[", "1", "]", "\n", "acd", "=", "DA1", "*", "CA0", ">", "CA1", "*", "DA0", "\n", "bcd", "=", "(", "D", "[", "1", "]", "-", "B", "[", "1", "]", ")", "*", "(", "C", "[", "0", "]", "-", "B", "[", "0", "]", ")", ">", "(", "C", "[", "1", "]", "-", "B", "[", "1", "]", ")", "*", "(", "D", "[", "0", "]", "-", "B", "[", "0", "]", ")", "\n", "if", "acd", "!=", "bcd", ":", "\n", "        ", "abc", "=", "CA1", "*", "BA0", ">", "BA1", "*", "CA0", "\n", "abd", "=", "DA1", "*", "BA0", ">", "BA1", "*", "DA0", "\n", "if", "abc", "!=", "abd", ":", "\n", "            ", "DC0", "=", "D", "[", "0", "]", "-", "C", "[", "0", "]", "\n", "DC1", "=", "D", "[", "1", "]", "-", "C", "[", "1", "]", "\n", "ABBA", "=", "A", "[", "0", "]", "*", "B", "[", "1", "]", "-", "B", "[", "0", "]", "*", "A", "[", "1", "]", "\n", "CDDC", "=", "C", "[", "0", "]", "*", "D", "[", "1", "]", "-", "D", "[", "0", "]", "*", "C", "[", "1", "]", "\n", "DH", "=", "BA1", "*", "DC0", "-", "BA0", "*", "DC1", "\n", "Dx", "=", "ABBA", "*", "DC0", "-", "BA0", "*", "CDDC", "\n", "Dy", "=", "ABBA", "*", "DC1", "-", "BA1", "*", "CDDC", "\n", "temp_pts", "[", "0", "]", "=", "Dx", "/", "DH", "\n", "temp_pts", "[", "1", "]", "=", "Dy", "/", "DH", "\n", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.line_segment_intersection_v1": [[119, 159], ["numba.cuda.jit", "numba.cuda.local.array", "numba.cuda.local.array", "numba.cuda.local.array", "numba.cuda.local.array", "rotate_iou.trangle_area", "rotate_iou.trangle_area", "rotate_iou.trangle_area"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.trangle_area", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.trangle_area", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.trangle_area"], ["", "@", "cuda", ".", "jit", "(", "\n", "'(float32[:], float32[:], int32, int32, float32[:])'", ",", "\n", "device", "=", "True", ",", "\n", "inline", "=", "True", ")", "\n", "def", "line_segment_intersection_v1", "(", "pts1", ",", "pts2", ",", "i", ",", "j", ",", "temp_pts", ")", ":", "\n", "    ", "a", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "b", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "c", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "d", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "\n", "a", "[", "0", "]", "=", "pts1", "[", "2", "*", "i", "]", "\n", "a", "[", "1", "]", "=", "pts1", "[", "2", "*", "i", "+", "1", "]", "\n", "\n", "b", "[", "0", "]", "=", "pts1", "[", "2", "*", "(", "(", "i", "+", "1", ")", "%", "4", ")", "]", "\n", "b", "[", "1", "]", "=", "pts1", "[", "2", "*", "(", "(", "i", "+", "1", ")", "%", "4", ")", "+", "1", "]", "\n", "\n", "c", "[", "0", "]", "=", "pts2", "[", "2", "*", "j", "]", "\n", "c", "[", "1", "]", "=", "pts2", "[", "2", "*", "j", "+", "1", "]", "\n", "\n", "d", "[", "0", "]", "=", "pts2", "[", "2", "*", "(", "(", "j", "+", "1", ")", "%", "4", ")", "]", "\n", "d", "[", "1", "]", "=", "pts2", "[", "2", "*", "(", "(", "j", "+", "1", ")", "%", "4", ")", "+", "1", "]", "\n", "\n", "area_abc", "=", "trangle_area", "(", "a", ",", "b", ",", "c", ")", "\n", "area_abd", "=", "trangle_area", "(", "a", ",", "b", ",", "d", ")", "\n", "\n", "if", "area_abc", "*", "area_abd", ">=", "0", ":", "\n", "        ", "return", "False", "\n", "\n", "", "area_cda", "=", "trangle_area", "(", "c", ",", "d", ",", "a", ")", "\n", "area_cdb", "=", "area_cda", "+", "area_abc", "-", "area_abd", "\n", "\n", "if", "area_cda", "*", "area_cdb", ">=", "0", ":", "\n", "        ", "return", "False", "\n", "", "t", "=", "area_cda", "/", "(", "area_abd", "-", "area_abc", ")", "\n", "\n", "dx", "=", "t", "*", "(", "b", "[", "0", "]", "-", "a", "[", "0", "]", ")", "\n", "dy", "=", "t", "*", "(", "b", "[", "1", "]", "-", "a", "[", "1", "]", ")", "\n", "temp_pts", "[", "0", "]", "=", "a", "[", "0", "]", "+", "dx", "\n", "temp_pts", "[", "1", "]", "=", "a", "[", "1", "]", "+", "dy", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.point_in_quadrilateral": [[161, 178], ["numba.cuda.jit"], "function", ["None"], ["", "@", "cuda", ".", "jit", "(", "'(float32, float32, float32[:])'", ",", "device", "=", "True", ",", "inline", "=", "True", ")", "\n", "def", "point_in_quadrilateral", "(", "pt_x", ",", "pt_y", ",", "corners", ")", ":", "\n", "    ", "ab0", "=", "corners", "[", "2", "]", "-", "corners", "[", "0", "]", "\n", "ab1", "=", "corners", "[", "3", "]", "-", "corners", "[", "1", "]", "\n", "\n", "ad0", "=", "corners", "[", "6", "]", "-", "corners", "[", "0", "]", "\n", "ad1", "=", "corners", "[", "7", "]", "-", "corners", "[", "1", "]", "\n", "\n", "ap0", "=", "pt_x", "-", "corners", "[", "0", "]", "\n", "ap1", "=", "pt_y", "-", "corners", "[", "1", "]", "\n", "\n", "abab", "=", "ab0", "*", "ab0", "+", "ab1", "*", "ab1", "\n", "abap", "=", "ab0", "*", "ap0", "+", "ab1", "*", "ap1", "\n", "adad", "=", "ad0", "*", "ad0", "+", "ad1", "*", "ad1", "\n", "adap", "=", "ad0", "*", "ap0", "+", "ad1", "*", "ap1", "\n", "\n", "return", "abab", ">=", "abap", "and", "abap", ">=", "0", "and", "adad", ">=", "adap", "and", "adap", ">=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.quadrilateral_intersection": [[180, 202], ["numba.cuda.jit", "range", "numba.cuda.local.array", "range", "rotate_iou.point_in_quadrilateral", "rotate_iou.point_in_quadrilateral", "range", "rotate_iou.line_segment_intersection"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.point_in_quadrilateral", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.point_in_quadrilateral", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.line_segment_intersection"], ["", "@", "cuda", ".", "jit", "(", "'(float32[:], float32[:], float32[:])'", ",", "device", "=", "True", ",", "inline", "=", "True", ")", "\n", "def", "quadrilateral_intersection", "(", "pts1", ",", "pts2", ",", "int_pts", ")", ":", "\n", "    ", "num_of_inter", "=", "0", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "        ", "if", "point_in_quadrilateral", "(", "pts1", "[", "2", "*", "i", "]", ",", "pts1", "[", "2", "*", "i", "+", "1", "]", ",", "pts2", ")", ":", "\n", "            ", "int_pts", "[", "num_of_inter", "*", "2", "]", "=", "pts1", "[", "2", "*", "i", "]", "\n", "int_pts", "[", "num_of_inter", "*", "2", "+", "1", "]", "=", "pts1", "[", "2", "*", "i", "+", "1", "]", "\n", "num_of_inter", "+=", "1", "\n", "", "if", "point_in_quadrilateral", "(", "pts2", "[", "2", "*", "i", "]", ",", "pts2", "[", "2", "*", "i", "+", "1", "]", ",", "pts1", ")", ":", "\n", "            ", "int_pts", "[", "num_of_inter", "*", "2", "]", "=", "pts2", "[", "2", "*", "i", "]", "\n", "int_pts", "[", "num_of_inter", "*", "2", "+", "1", "]", "=", "pts2", "[", "2", "*", "i", "+", "1", "]", "\n", "num_of_inter", "+=", "1", "\n", "", "", "temp_pts", "=", "cuda", ".", "local", ".", "array", "(", "(", "2", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "4", ")", ":", "\n", "            ", "has_pts", "=", "line_segment_intersection", "(", "pts1", ",", "pts2", ",", "i", ",", "j", ",", "temp_pts", ")", "\n", "if", "has_pts", ":", "\n", "                ", "int_pts", "[", "num_of_inter", "*", "2", "]", "=", "temp_pts", "[", "0", "]", "\n", "int_pts", "[", "num_of_inter", "*", "2", "+", "1", "]", "=", "temp_pts", "[", "1", "]", "\n", "num_of_inter", "+=", "1", "\n", "\n", "", "", "", "return", "num_of_inter", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.rbbox_to_corners": [[204, 229], ["numba.cuda.jit", "math.cos", "math.sin", "numba.cuda.local.array", "numba.cuda.local.array", "range"], "function", ["None"], ["", "@", "cuda", ".", "jit", "(", "'(float32[:], float32[:])'", ",", "device", "=", "True", ",", "inline", "=", "True", ")", "\n", "def", "rbbox_to_corners", "(", "corners", ",", "rbbox", ")", ":", "\n", "# generate clockwise corners and rotate it clockwise", "\n", "    ", "angle", "=", "rbbox", "[", "4", "]", "\n", "a_cos", "=", "math", ".", "cos", "(", "angle", ")", "\n", "a_sin", "=", "math", ".", "sin", "(", "angle", ")", "\n", "center_x", "=", "rbbox", "[", "0", "]", "\n", "center_y", "=", "rbbox", "[", "1", "]", "\n", "x_d", "=", "rbbox", "[", "2", "]", "\n", "y_d", "=", "rbbox", "[", "3", "]", "\n", "corners_x", "=", "cuda", ".", "local", ".", "array", "(", "(", "4", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "corners_y", "=", "cuda", ".", "local", ".", "array", "(", "(", "4", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "corners_x", "[", "0", "]", "=", "-", "x_d", "/", "2", "\n", "corners_x", "[", "1", "]", "=", "-", "x_d", "/", "2", "\n", "corners_x", "[", "2", "]", "=", "x_d", "/", "2", "\n", "corners_x", "[", "3", "]", "=", "x_d", "/", "2", "\n", "corners_y", "[", "0", "]", "=", "-", "y_d", "/", "2", "\n", "corners_y", "[", "1", "]", "=", "y_d", "/", "2", "\n", "corners_y", "[", "2", "]", "=", "y_d", "/", "2", "\n", "corners_y", "[", "3", "]", "=", "-", "y_d", "/", "2", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "        ", "corners", "[", "2", "*", "\n", "i", "]", "=", "a_cos", "*", "corners_x", "[", "i", "]", "+", "a_sin", "*", "corners_y", "[", "i", "]", "+", "center_x", "\n", "corners", "[", "2", "*", "i", "\n", "+", "1", "]", "=", "-", "a_sin", "*", "corners_x", "[", "i", "]", "+", "a_cos", "*", "corners_y", "[", "i", "]", "+", "center_y", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.inter": [[231, 246], ["numba.cuda.jit", "numba.cuda.local.array", "numba.cuda.local.array", "numba.cuda.local.array", "rotate_iou.rbbox_to_corners", "rotate_iou.rbbox_to_corners", "rotate_iou.quadrilateral_intersection", "rotate_iou.sort_vertex_in_convex_polygon", "rotate_iou.area"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.rbbox_to_corners", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.rbbox_to_corners", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.quadrilateral_intersection", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.sort_vertex_in_convex_polygon", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.area"], ["", "", "@", "cuda", ".", "jit", "(", "'(float32[:], float32[:])'", ",", "device", "=", "True", ",", "inline", "=", "True", ")", "\n", "def", "inter", "(", "rbbox1", ",", "rbbox2", ")", ":", "\n", "    ", "corners1", "=", "cuda", ".", "local", ".", "array", "(", "(", "8", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "corners2", "=", "cuda", ".", "local", ".", "array", "(", "(", "8", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "intersection_corners", "=", "cuda", ".", "local", ".", "array", "(", "(", "16", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "\n", "rbbox_to_corners", "(", "corners1", ",", "rbbox1", ")", "\n", "rbbox_to_corners", "(", "corners2", ",", "rbbox2", ")", "\n", "\n", "num_intersection", "=", "quadrilateral_intersection", "(", "corners1", ",", "corners2", ",", "\n", "intersection_corners", ")", "\n", "sort_vertex_in_convex_polygon", "(", "intersection_corners", ",", "num_intersection", ")", "\n", "# print(intersection_corners.reshape([-1, 2])[:num_intersection])", "\n", "\n", "return", "area", "(", "intersection_corners", ",", "num_intersection", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.devRotateIoUEval": [[248, 261], ["numba.cuda.jit", "rotate_iou.inter"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.inter"], ["", "@", "cuda", ".", "jit", "(", "'(float32[:], float32[:], int32)'", ",", "device", "=", "True", ",", "inline", "=", "True", ")", "\n", "def", "devRotateIoUEval", "(", "rbox1", ",", "rbox2", ",", "criterion", "=", "-", "1", ")", ":", "\n", "    ", "area1", "=", "rbox1", "[", "2", "]", "*", "rbox1", "[", "3", "]", "\n", "area2", "=", "rbox2", "[", "2", "]", "*", "rbox2", "[", "3", "]", "\n", "area_inter", "=", "inter", "(", "rbox1", ",", "rbox2", ")", "\n", "if", "criterion", "==", "-", "1", ":", "\n", "        ", "return", "area_inter", "/", "(", "area1", "+", "area2", "-", "area_inter", ")", "\n", "", "elif", "criterion", "==", "0", ":", "\n", "        ", "return", "area_inter", "/", "area1", "\n", "", "elif", "criterion", "==", "1", ":", "\n", "        ", "return", "area_inter", "/", "area2", "\n", "", "else", ":", "\n", "        ", "return", "area_inter", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.rotate_iou_kernel_eval": [[262, 293], ["numba.cuda.jit", "min", "min", "numba.cuda.shared.array", "numba.cuda.shared.array", "numba.cuda.syncthreads", "range", "rotate_iou.devRotateIoUEval"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.devRotateIoUEval"], ["", "", "@", "cuda", ".", "jit", "(", "'(int64, int64, float32[:], float32[:], float32[:], int32)'", ",", "fastmath", "=", "False", ")", "\n", "def", "rotate_iou_kernel_eval", "(", "N", ",", "K", ",", "dev_boxes", ",", "dev_query_boxes", ",", "dev_iou", ",", "criterion", "=", "-", "1", ")", ":", "\n", "    ", "threadsPerBlock", "=", "8", "*", "8", "\n", "row_start", "=", "cuda", ".", "blockIdx", ".", "x", "\n", "col_start", "=", "cuda", ".", "blockIdx", ".", "y", "\n", "tx", "=", "cuda", ".", "threadIdx", ".", "x", "\n", "row_size", "=", "min", "(", "N", "-", "row_start", "*", "threadsPerBlock", ",", "threadsPerBlock", ")", "\n", "col_size", "=", "min", "(", "K", "-", "col_start", "*", "threadsPerBlock", ",", "threadsPerBlock", ")", "\n", "block_boxes", "=", "cuda", ".", "shared", ".", "array", "(", "shape", "=", "(", "64", "*", "5", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "block_qboxes", "=", "cuda", ".", "shared", ".", "array", "(", "shape", "=", "(", "64", "*", "5", ",", ")", ",", "dtype", "=", "numba", ".", "float32", ")", "\n", "\n", "dev_query_box_idx", "=", "threadsPerBlock", "*", "col_start", "+", "tx", "\n", "dev_box_idx", "=", "threadsPerBlock", "*", "row_start", "+", "tx", "\n", "if", "(", "tx", "<", "col_size", ")", ":", "\n", "        ", "block_qboxes", "[", "tx", "*", "5", "+", "0", "]", "=", "dev_query_boxes", "[", "dev_query_box_idx", "*", "5", "+", "0", "]", "\n", "block_qboxes", "[", "tx", "*", "5", "+", "1", "]", "=", "dev_query_boxes", "[", "dev_query_box_idx", "*", "5", "+", "1", "]", "\n", "block_qboxes", "[", "tx", "*", "5", "+", "2", "]", "=", "dev_query_boxes", "[", "dev_query_box_idx", "*", "5", "+", "2", "]", "\n", "block_qboxes", "[", "tx", "*", "5", "+", "3", "]", "=", "dev_query_boxes", "[", "dev_query_box_idx", "*", "5", "+", "3", "]", "\n", "block_qboxes", "[", "tx", "*", "5", "+", "4", "]", "=", "dev_query_boxes", "[", "dev_query_box_idx", "*", "5", "+", "4", "]", "\n", "", "if", "(", "tx", "<", "row_size", ")", ":", "\n", "        ", "block_boxes", "[", "tx", "*", "5", "+", "0", "]", "=", "dev_boxes", "[", "dev_box_idx", "*", "5", "+", "0", "]", "\n", "block_boxes", "[", "tx", "*", "5", "+", "1", "]", "=", "dev_boxes", "[", "dev_box_idx", "*", "5", "+", "1", "]", "\n", "block_boxes", "[", "tx", "*", "5", "+", "2", "]", "=", "dev_boxes", "[", "dev_box_idx", "*", "5", "+", "2", "]", "\n", "block_boxes", "[", "tx", "*", "5", "+", "3", "]", "=", "dev_boxes", "[", "dev_box_idx", "*", "5", "+", "3", "]", "\n", "block_boxes", "[", "tx", "*", "5", "+", "4", "]", "=", "dev_boxes", "[", "dev_box_idx", "*", "5", "+", "4", "]", "\n", "", "cuda", ".", "syncthreads", "(", ")", "\n", "if", "tx", "<", "row_size", ":", "\n", "        ", "for", "i", "in", "range", "(", "col_size", ")", ":", "\n", "            ", "offset", "=", "row_start", "*", "threadsPerBlock", "*", "K", "+", "col_start", "*", "threadsPerBlock", "+", "tx", "*", "K", "+", "i", "\n", "dev_iou", "[", "offset", "]", "=", "devRotateIoUEval", "(", "block_qboxes", "[", "i", "*", "5", ":", "i", "*", "5", "+", "5", "]", ",", "\n", "block_boxes", "[", "tx", "*", "5", ":", "tx", "*", "5", "+", "5", "]", ",", "criterion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.rotate_iou_gpu_eval": [[295, 331], ["boxes.astype.astype", "query_boxes.astype.astype", "numpy.zeros", "numba.cuda.select_device", "numba.cuda.stream", "np.zeros.astype", "rotate_iou.div_up", "rotate_iou.div_up", "cuda.stream.auto_synchronize", "numba.cuda.to_device", "numba.cuda.to_device", "numba.cuda.to_device", "cuda.to_device.copy_to_host", "boxes.astype.reshape", "query_boxes.astype.reshape", "np.zeros.reshape", "np.zeros.reshape"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.div_up", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.kitti_object_eval_python.rotate_iou.div_up"], ["", "", "", "def", "rotate_iou_gpu_eval", "(", "boxes", ",", "query_boxes", ",", "criterion", "=", "-", "1", ",", "device_id", "=", "0", ")", ":", "\n", "    ", "\"\"\"rotated box iou running in gpu. 500x faster than cpu version\n    (take 5ms in one example with numba.cuda code).\n    convert from [this project](\n        https://github.com/hongzhenwang/RRPN-revise/tree/master/pcdet/rotation).\n    \n    Args:\n        boxes (float tensor: [N, 5]): rbboxes. format: centers, dims, \n            angles(clockwise when positive)\n        query_boxes (float tensor: [K, 5]): [description]\n        device_id (int, optional): Defaults to 0. [description]\n    \n    Returns:\n        [type]: [description]\n    \"\"\"", "\n", "box_dtype", "=", "boxes", ".", "dtype", "\n", "boxes", "=", "boxes", ".", "astype", "(", "np", ".", "float32", ")", "\n", "query_boxes", "=", "query_boxes", ".", "astype", "(", "np", ".", "float32", ")", "\n", "N", "=", "boxes", ".", "shape", "[", "0", "]", "\n", "K", "=", "query_boxes", ".", "shape", "[", "0", "]", "\n", "iou", "=", "np", ".", "zeros", "(", "(", "N", ",", "K", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "if", "N", "==", "0", "or", "K", "==", "0", ":", "\n", "        ", "return", "iou", "\n", "", "threadsPerBlock", "=", "8", "*", "8", "\n", "cuda", ".", "select_device", "(", "device_id", ")", "\n", "blockspergrid", "=", "(", "div_up", "(", "N", ",", "threadsPerBlock", ")", ",", "div_up", "(", "K", ",", "threadsPerBlock", ")", ")", "\n", "\n", "stream", "=", "cuda", ".", "stream", "(", ")", "\n", "with", "stream", ".", "auto_synchronize", "(", ")", ":", "\n", "        ", "boxes_dev", "=", "cuda", ".", "to_device", "(", "boxes", ".", "reshape", "(", "[", "-", "1", "]", ")", ",", "stream", ")", "\n", "query_boxes_dev", "=", "cuda", ".", "to_device", "(", "query_boxes", ".", "reshape", "(", "[", "-", "1", "]", ")", ",", "stream", ")", "\n", "iou_dev", "=", "cuda", ".", "to_device", "(", "iou", ".", "reshape", "(", "[", "-", "1", "]", ")", ",", "stream", ")", "\n", "rotate_iou_kernel_eval", "[", "blockspergrid", ",", "threadsPerBlock", ",", "stream", "]", "(", "\n", "N", ",", "K", ",", "boxes_dev", ",", "query_boxes_dev", ",", "iou_dev", ",", "criterion", ")", "\n", "iou_dev", ".", "copy_to_host", "(", "iou", ".", "reshape", "(", "[", "-", "1", "]", ")", ",", "stream", "=", "stream", ")", "\n", "", "return", "iou", ".", "astype", "(", "boxes", ".", "dtype", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.data_processor.DataProcessor.__init__": [[9, 18], ["data_processor.DataProcessor.data_processor_queue.append", "getattr"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "processor_configs", ",", "point_cloud_range", ",", "training", ")", ":", "\n", "        ", "self", ".", "point_cloud_range", "=", "point_cloud_range", "\n", "self", ".", "training", "=", "training", "\n", "self", ".", "mode", "=", "'train'", "if", "training", "else", "'test'", "\n", "self", ".", "grid_size", "=", "self", ".", "voxel_size", "=", "None", "\n", "self", ".", "data_processor_queue", "=", "[", "]", "\n", "for", "cur_cfg", "in", "processor_configs", ":", "\n", "            ", "cur_processor", "=", "getattr", "(", "self", ",", "cur_cfg", ".", "NAME", ")", "(", "config", "=", "cur_cfg", ")", "\n", "self", ".", "data_processor_queue", ".", "append", "(", "cur_processor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.data_processor.DataProcessor.mask_points_and_boxes_outside_range": [[19, 30], ["utils.common_utils.mask_points_by_range", "functools.partial", "utils.box_utils.mask_boxes_outside_range_numpy", "data_dict.get", "config.get"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.mask_points_by_range", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.mask_boxes_outside_range_numpy"], ["", "", "def", "mask_points_and_boxes_outside_range", "(", "self", ",", "data_dict", "=", "None", ",", "config", "=", "None", ")", ":", "\n", "        ", "if", "data_dict", "is", "None", ":", "\n", "            ", "return", "partial", "(", "self", ".", "mask_points_and_boxes_outside_range", ",", "config", "=", "config", ")", "\n", "", "mask", "=", "common_utils", ".", "mask_points_by_range", "(", "data_dict", "[", "'points'", "]", ",", "self", ".", "point_cloud_range", ")", "\n", "data_dict", "[", "'points'", "]", "=", "data_dict", "[", "'points'", "]", "[", "mask", "]", "\n", "if", "data_dict", ".", "get", "(", "'gt_boxes'", ",", "None", ")", "is", "not", "None", "and", "config", ".", "REMOVE_OUTSIDE_BOXES", "and", "self", ".", "training", ":", "\n", "            ", "mask", "=", "box_utils", ".", "mask_boxes_outside_range_numpy", "(", "\n", "data_dict", "[", "'gt_boxes'", "]", ",", "self", ".", "point_cloud_range", ",", "min_num_corners", "=", "config", ".", "get", "(", "'min_num_corners'", ",", "1", ")", "\n", ")", "\n", "data_dict", "[", "'gt_boxes'", "]", "=", "data_dict", "[", "'gt_boxes'", "]", "[", "mask", "]", "\n", "", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.data_processor.DataProcessor.shuffle_points": [[31, 42], ["functools.partial", "numpy.random.permutation"], "methods", ["None"], ["", "def", "shuffle_points", "(", "self", ",", "data_dict", "=", "None", ",", "config", "=", "None", ")", ":", "\n", "        ", "if", "data_dict", "is", "None", ":", "\n", "            ", "return", "partial", "(", "self", ".", "shuffle_points", ",", "config", "=", "config", ")", "\n", "\n", "", "if", "config", ".", "SHUFFLE_ENABLED", "[", "self", ".", "mode", "]", ":", "\n", "            ", "points", "=", "data_dict", "[", "'points'", "]", "\n", "shuffle_idx", "=", "np", ".", "random", ".", "permutation", "(", "points", ".", "shape", "[", "0", "]", ")", "\n", "points", "=", "points", "[", "shuffle_idx", "]", "\n", "data_dict", "[", "'points'", "]", "=", "points", "\n", "\n", "", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.data_processor.DataProcessor.transform_points_to_voxels": [[43, 76], ["VoxelGenerator.generate", "isinstance", "VoxelGenerator", "numpy.round().astype", "functools.partial", "numpy.array", "numpy.round"], "methods", ["None"], ["", "def", "transform_points_to_voxels", "(", "self", ",", "data_dict", "=", "None", ",", "config", "=", "None", ",", "voxel_generator", "=", "None", ")", ":", "\n", "        ", "if", "data_dict", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "from", "spconv", ".", "utils", "import", "VoxelGeneratorV2", "as", "VoxelGenerator", "\n", "", "except", ":", "\n", "                ", "from", "spconv", ".", "utils", "import", "VoxelGenerator", "\n", "\n", "", "voxel_generator", "=", "VoxelGenerator", "(", "\n", "voxel_size", "=", "config", ".", "VOXEL_SIZE", ",", "\n", "point_cloud_range", "=", "self", ".", "point_cloud_range", ",", "\n", "max_num_points", "=", "config", ".", "MAX_POINTS_PER_VOXEL", ",", "\n", "max_voxels", "=", "config", ".", "MAX_NUMBER_OF_VOXELS", "[", "self", ".", "mode", "]", "\n", ")", "\n", "grid_size", "=", "(", "self", ".", "point_cloud_range", "[", "3", ":", "6", "]", "-", "self", ".", "point_cloud_range", "[", "0", ":", "3", "]", ")", "/", "np", ".", "array", "(", "config", ".", "VOXEL_SIZE", ")", "\n", "self", ".", "grid_size", "=", "np", ".", "round", "(", "grid_size", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "self", ".", "voxel_size", "=", "config", ".", "VOXEL_SIZE", "\n", "return", "partial", "(", "self", ".", "transform_points_to_voxels", ",", "voxel_generator", "=", "voxel_generator", ")", "\n", "\n", "", "points", "=", "data_dict", "[", "'points'", "]", "\n", "voxel_output", "=", "voxel_generator", ".", "generate", "(", "points", ")", "\n", "if", "isinstance", "(", "voxel_output", ",", "dict", ")", ":", "\n", "            ", "voxels", ",", "coordinates", ",", "num_points", "=", "voxel_output", "[", "'voxels'", "]", ",", "voxel_output", "[", "'coordinates'", "]", ",", "voxel_output", "[", "'num_points_per_voxel'", "]", "\n", "", "else", ":", "\n", "            ", "voxels", ",", "coordinates", ",", "num_points", "=", "voxel_output", "\n", "\n", "", "if", "not", "data_dict", "[", "'use_lead_xyz'", "]", ":", "\n", "            ", "voxels", "=", "voxels", "[", "...", ",", "3", ":", "]", "# remove xyz in voxels(N, 3)", "\n", "\n", "", "data_dict", "[", "'voxels'", "]", "=", "voxels", "\n", "data_dict", "[", "'voxel_coords'", "]", "=", "coordinates", "\n", "data_dict", "[", "'voxel_num_points'", "]", "=", "num_points", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.data_processor.DataProcessor.sample_points": [[77, 104], ["functools.partial", "len", "numpy.linalg.norm", "numpy.random.choice", "numpy.random.shuffle", "numpy.arange", "numpy.random.shuffle", "numpy.where", "numpy.where", "numpy.concatenate", "len", "len", "numpy.random.choice", "numpy.concatenate", "len", "len", "len"], "methods", ["None"], ["", "def", "sample_points", "(", "self", ",", "data_dict", "=", "None", ",", "config", "=", "None", ")", ":", "\n", "        ", "if", "data_dict", "is", "None", ":", "\n", "            ", "return", "partial", "(", "self", ".", "sample_points", ",", "config", "=", "config", ")", "\n", "\n", "", "num_points", "=", "config", ".", "NUM_POINTS", "[", "self", ".", "mode", "]", "\n", "if", "num_points", "==", "-", "1", ":", "\n", "            ", "return", "data_dict", "\n", "\n", "", "points", "=", "data_dict", "[", "'points'", "]", "\n", "if", "num_points", "<", "len", "(", "points", ")", ":", "\n", "            ", "pts_depth", "=", "np", ".", "linalg", ".", "norm", "(", "points", "[", ":", ",", "0", ":", "3", "]", ",", "axis", "=", "1", ")", "\n", "pts_near_flag", "=", "pts_depth", "<", "40.0", "\n", "far_idxs_choice", "=", "np", ".", "where", "(", "pts_near_flag", "==", "0", ")", "[", "0", "]", "\n", "near_idxs", "=", "np", ".", "where", "(", "pts_near_flag", "==", "1", ")", "[", "0", "]", "\n", "near_idxs_choice", "=", "np", ".", "random", ".", "choice", "(", "near_idxs", ",", "num_points", "-", "len", "(", "far_idxs_choice", ")", ",", "replace", "=", "False", ")", "\n", "\n", "choice", "=", "np", ".", "concatenate", "(", "(", "near_idxs_choice", ",", "far_idxs_choice", ")", ",", "axis", "=", "0", ")", "if", "len", "(", "far_idxs_choice", ")", ">", "0", "else", "near_idxs_choice", "\n", "np", ".", "random", ".", "shuffle", "(", "choice", ")", "\n", "", "else", ":", "\n", "            ", "choice", "=", "np", ".", "arange", "(", "0", ",", "len", "(", "points", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "if", "num_points", ">", "len", "(", "points", ")", ":", "\n", "                ", "extra_choice", "=", "np", ".", "random", ".", "choice", "(", "choice", ",", "num_points", "-", "len", "(", "points", ")", ",", "replace", "=", "False", ")", "\n", "choice", "=", "np", ".", "concatenate", "(", "(", "choice", ",", "extra_choice", ")", ",", "axis", "=", "0", ")", "\n", "", "np", ".", "random", ".", "shuffle", "(", "choice", ")", "\n", "", "data_dict", "[", "'points'", "]", "=", "points", "[", "choice", "]", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.data_processor.DataProcessor.forward": [[105, 121], ["cur_processor"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            data_dict:\n                points: (N, 3 + C_in)\n                gt_boxes: optional, (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n                gt_names: optional, (N), string\n                ...\n\n        Returns:\n        \"\"\"", "\n", "\n", "for", "cur_processor", "in", "self", ".", "data_processor_queue", ":", "\n", "            ", "data_dict", "=", "cur_processor", "(", "data_dict", "=", "data_dict", ")", "\n", "\n", "", "return", "data_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.point_feature_encoder.PointFeatureEncoder.__init__": [[5, 12], ["object.__init__", "list"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "point_cloud_range", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "point_encoding_config", "=", "config", "\n", "assert", "list", "(", "self", ".", "point_encoding_config", ".", "src_feature_list", "[", "0", ":", "3", "]", ")", "==", "[", "'x'", ",", "'y'", ",", "'z'", "]", "\n", "self", ".", "used_feature_list", "=", "self", ".", "point_encoding_config", ".", "used_feature_list", "\n", "self", ".", "src_feature_list", "=", "self", ".", "point_encoding_config", ".", "src_feature_list", "\n", "self", ".", "point_cloud_range", "=", "point_cloud_range", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.point_feature_encoder.PointFeatureEncoder.num_point_features": [[13, 16], ["getattr"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_point_features", "(", "self", ")", ":", "\n", "        ", "return", "getattr", "(", "self", ",", "self", ".", "point_encoding_config", ".", "encoding_type", ")", "(", "points", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.point_feature_encoder.PointFeatureEncoder.forward": [[17, 34], ["getattr"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            data_dict:\n                points: (N, 3 + C_in)\n                ...\n        Returns:\n            data_dict:\n                points: (N, 3 + C_out),\n                use_lead_xyz: whether to use xyz as point-wise features\n                ...\n        \"\"\"", "\n", "data_dict", "[", "'points'", "]", ",", "use_lead_xyz", "=", "getattr", "(", "self", ",", "self", ".", "point_encoding_config", ".", "encoding_type", ")", "(", "\n", "data_dict", "[", "'points'", "]", "\n", ")", "\n", "data_dict", "[", "'use_lead_xyz'", "]", "=", "use_lead_xyz", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.processor.point_feature_encoder.PointFeatureEncoder.absolute_coordinates_encoding": [[35, 48], ["numpy.concatenate", "len", "point_feature_encoder.PointFeatureEncoder.src_feature_list.index", "point_feature_list.append"], "methods", ["None"], ["", "def", "absolute_coordinates_encoding", "(", "self", ",", "points", "=", "None", ")", ":", "\n", "        ", "if", "points", "is", "None", ":", "\n", "            ", "num_output_features", "=", "len", "(", "self", ".", "used_feature_list", ")", "\n", "return", "num_output_features", "\n", "\n", "", "point_feature_list", "=", "[", "points", "[", ":", ",", "0", ":", "3", "]", "]", "\n", "for", "x", "in", "self", ".", "used_feature_list", ":", "\n", "            ", "if", "x", "in", "[", "'x'", ",", "'y'", ",", "'z'", "]", ":", "\n", "                ", "continue", "\n", "", "idx", "=", "self", ".", "src_feature_list", ".", "index", "(", "x", ")", "\n", "point_feature_list", ".", "append", "(", "points", "[", ":", ",", "idx", ":", "idx", "+", "1", "]", ")", "\n", "", "point_features", "=", "np", ".", "concatenate", "(", "point_feature_list", ",", "axis", "=", "1", ")", "\n", "return", "point_features", ",", "True", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.get_available_scenes": [[157, 183], ["print", "print", "len", "nusc.get", "nusc.get", "nusc.get", "available_scenes.append", "len", "nusc.get_sample_data", "pathlib.Path().exists", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.get_sample_data"], ["def", "get_available_scenes", "(", "nusc", ")", ":", "\n", "    ", "available_scenes", "=", "[", "]", "\n", "print", "(", "'total scene num:'", ",", "len", "(", "nusc", ".", "scene", ")", ")", "\n", "for", "scene", "in", "nusc", ".", "scene", ":", "\n", "        ", "scene_token", "=", "scene", "[", "'token'", "]", "\n", "scene_rec", "=", "nusc", ".", "get", "(", "'scene'", ",", "scene_token", ")", "\n", "sample_rec", "=", "nusc", ".", "get", "(", "'sample'", ",", "scene_rec", "[", "'first_sample_token'", "]", ")", "\n", "sd_rec", "=", "nusc", ".", "get", "(", "'sample_data'", ",", "sample_rec", "[", "'data'", "]", "[", "'LIDAR_TOP'", "]", ")", "\n", "has_more_frames", "=", "True", "\n", "scene_not_exist", "=", "False", "\n", "while", "has_more_frames", ":", "\n", "            ", "lidar_path", ",", "boxes", ",", "_", "=", "nusc", ".", "get_sample_data", "(", "sd_rec", "[", "'token'", "]", ")", "\n", "if", "not", "Path", "(", "lidar_path", ")", ".", "exists", "(", ")", ":", "\n", "                ", "scene_not_exist", "=", "True", "\n", "break", "\n", "", "else", ":", "\n", "                ", "break", "\n", "# if not sd_rec['next'] == '':", "\n", "#     sd_rec = nusc.get('sample_data', sd_rec['next'])", "\n", "# else:", "\n", "#     has_more_frames = False", "\n", "", "", "if", "scene_not_exist", ":", "\n", "            ", "continue", "\n", "", "available_scenes", ".", "append", "(", "scene", ")", "\n", "", "print", "(", "'exist scene num:'", ",", "len", "(", "available_scenes", ")", ")", "\n", "return", "available_scenes", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.get_sample_data": [[185, 232], ["nusc.get", "nusc.get", "nusc.get", "nusc.get", "nusc.get_sample_data_path", "numpy.array", "list", "nusc.get_boxes", "nusc.box_velocity", "box.translate", "box.rotate", "box.translate", "box.rotate", "box_list.append", "map", "numpy.array", "pyquaternion.Quaternion", "numpy.array", "pyquaternion.Quaternion"], "function", ["None"], ["", "def", "get_sample_data", "(", "nusc", ",", "sample_data_token", ",", "selected_anntokens", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Returns the data path as well as all annotations related to that sample_data.\n    Note that the boxes are transformed into the current sensor's coordinate frame.\n    Args:\n        nusc:\n        sample_data_token: Sample_data token.\n        selected_anntokens: If provided only return the selected annotation.\n\n    Returns:\n\n    \"\"\"", "\n", "# Retrieve sensor & pose records", "\n", "sd_record", "=", "nusc", ".", "get", "(", "'sample_data'", ",", "sample_data_token", ")", "\n", "cs_record", "=", "nusc", ".", "get", "(", "'calibrated_sensor'", ",", "sd_record", "[", "'calibrated_sensor_token'", "]", ")", "\n", "sensor_record", "=", "nusc", ".", "get", "(", "'sensor'", ",", "cs_record", "[", "'sensor_token'", "]", ")", "\n", "pose_record", "=", "nusc", ".", "get", "(", "'ego_pose'", ",", "sd_record", "[", "'ego_pose_token'", "]", ")", "\n", "\n", "data_path", "=", "nusc", ".", "get_sample_data_path", "(", "sample_data_token", ")", "\n", "\n", "if", "sensor_record", "[", "'modality'", "]", "==", "'camera'", ":", "\n", "        ", "cam_intrinsic", "=", "np", ".", "array", "(", "cs_record", "[", "'camera_intrinsic'", "]", ")", "\n", "imsize", "=", "(", "sd_record", "[", "'width'", "]", ",", "sd_record", "[", "'height'", "]", ")", "\n", "", "else", ":", "\n", "        ", "cam_intrinsic", "=", "imsize", "=", "None", "\n", "\n", "# Retrieve all sample annotations and map to sensor coordinate system.", "\n", "", "if", "selected_anntokens", "is", "not", "None", ":", "\n", "        ", "boxes", "=", "list", "(", "map", "(", "nusc", ".", "get_box", ",", "selected_anntokens", ")", ")", "\n", "", "else", ":", "\n", "        ", "boxes", "=", "nusc", ".", "get_boxes", "(", "sample_data_token", ")", "\n", "\n", "# Make list of Box objects including coord system transforms.", "\n", "", "box_list", "=", "[", "]", "\n", "for", "box", "in", "boxes", ":", "\n", "        ", "box", ".", "velocity", "=", "nusc", ".", "box_velocity", "(", "box", ".", "token", ")", "\n", "# Move box to ego vehicle coord system", "\n", "box", ".", "translate", "(", "-", "np", ".", "array", "(", "pose_record", "[", "'translation'", "]", ")", ")", "\n", "box", ".", "rotate", "(", "Quaternion", "(", "pose_record", "[", "'rotation'", "]", ")", ".", "inverse", ")", "\n", "\n", "#  Move box to sensor coord system", "\n", "box", ".", "translate", "(", "-", "np", ".", "array", "(", "cs_record", "[", "'translation'", "]", ")", ")", "\n", "box", ".", "rotate", "(", "Quaternion", "(", "cs_record", "[", "'rotation'", "]", ")", ".", "inverse", ")", "\n", "\n", "box_list", ".", "append", "(", "box", ")", "\n", "\n", "", "return", "data_path", ",", "box_list", ",", "cam_intrinsic", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.quaternion_yaw": [[234, 250], ["numpy.dot", "numpy.arctan2", "numpy.array"], "function", ["None"], ["", "def", "quaternion_yaw", "(", "q", ":", "Quaternion", ")", "->", "float", ":", "\n", "    ", "\"\"\"\n    Calculate the yaw angle from a quaternion.\n    Note that this only works for a quaternion that represents a box in lidar or global coordinate frame.\n    It does not work for a box in the camera frame.\n    :param q: Quaternion of interest.\n    :return: Yaw angle in radians.\n    \"\"\"", "\n", "\n", "# Project into xy plane.", "\n", "v", "=", "np", ".", "dot", "(", "q", ".", "rotation_matrix", ",", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", "]", ")", ")", "\n", "\n", "# Measure yaw using arctan.", "\n", "yaw", "=", "np", ".", "arctan2", "(", "v", "[", "1", "]", ",", "v", "[", "0", "]", ")", "\n", "\n", "return", "yaw", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.fill_trainval_infos": [[252, 381], ["tqdm.tqdm", "enumerate", "tqdm.tqdm.close", "tqdm.tqdm.update", "nusc.get", "nusc.get", "nusc.get", "nuscenes_utils.get_sample_data", "nusc.get_sample_data", "nuscenes.utils.geometry_utils.transform_matrix", "nuscenes.utils.geometry_utils.transform_matrix", "nusc.get", "len", "pyquaternion.Quaternion", "pyquaternion.Quaternion", "pathlib.Path().relative_to().__str__", "pathlib.Path().relative_to().__str__", "len", "len", "numpy.array", "numpy.array", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.array", "numpy.array", "numpy.concatenate", "train_nusc_infos.append", "val_nusc_infos.append", "nusc.get", "nusc.get", "nuscenes.utils.geometry_utils.transform_matrix", "nusc.get", "nuscenes.utils.geometry_utils.transform_matrix", "functools.reduce", "nusc.get_sample_data_path", "sweeps.append", "len", "nusc.get", "numpy.array().reshape", "len", "len", "len", "numpy.array", "pathlib.Path().relative_to", "pathlib.Path().relative_to", "len", "sweeps.append", "sweeps.append", "pyquaternion.Quaternion", "pyquaternion.Quaternion", "pathlib.Path().relative_to().__str__", "numpy.array", "numpy.array", "numpy.array", "pathlib.Path().relative_to().__str__", "numpy.array", "pathlib.Path", "pathlib.Path", "pathlib.Path().relative_to", "nuscenes_utils.quaternion_yaw", "pathlib.Path().relative_to", "pathlib.Path", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.get_sample_data", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.get_sample_data", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.quaternion_yaw"], ["", "def", "fill_trainval_infos", "(", "data_path", ",", "nusc", ",", "train_scenes", ",", "val_scenes", ",", "test", "=", "False", ",", "max_sweeps", "=", "10", ")", ":", "\n", "    ", "train_nusc_infos", "=", "[", "]", "\n", "val_nusc_infos", "=", "[", "]", "\n", "progress_bar", "=", "tqdm", ".", "tqdm", "(", "total", "=", "len", "(", "nusc", ".", "sample", ")", ",", "desc", "=", "'create_info'", ",", "dynamic_ncols", "=", "True", ")", "\n", "\n", "ref_chan", "=", "'LIDAR_TOP'", "# The radar channel from which we track back n sweeps to aggregate the point cloud.", "\n", "chan", "=", "'LIDAR_TOP'", "# The reference channel of the current sample_rec that the point clouds are mapped to.", "\n", "\n", "for", "index", ",", "sample", "in", "enumerate", "(", "nusc", ".", "sample", ")", ":", "\n", "        ", "progress_bar", ".", "update", "(", ")", "\n", "\n", "ref_sd_token", "=", "sample", "[", "'data'", "]", "[", "ref_chan", "]", "\n", "ref_sd_rec", "=", "nusc", ".", "get", "(", "'sample_data'", ",", "ref_sd_token", ")", "\n", "ref_cs_rec", "=", "nusc", ".", "get", "(", "'calibrated_sensor'", ",", "ref_sd_rec", "[", "'calibrated_sensor_token'", "]", ")", "\n", "ref_pose_rec", "=", "nusc", ".", "get", "(", "'ego_pose'", ",", "ref_sd_rec", "[", "'ego_pose_token'", "]", ")", "\n", "ref_time", "=", "1e-6", "*", "ref_sd_rec", "[", "'timestamp'", "]", "\n", "\n", "ref_lidar_path", ",", "ref_boxes", ",", "_", "=", "get_sample_data", "(", "nusc", ",", "ref_sd_token", ")", "\n", "\n", "ref_cam_front_token", "=", "sample", "[", "'data'", "]", "[", "'CAM_FRONT'", "]", "\n", "ref_cam_path", ",", "_", ",", "ref_cam_intrinsic", "=", "nusc", ".", "get_sample_data", "(", "ref_cam_front_token", ")", "\n", "\n", "# Homogeneous transform from ego car frame to reference frame", "\n", "ref_from_car", "=", "transform_matrix", "(", "\n", "ref_cs_rec", "[", "'translation'", "]", ",", "Quaternion", "(", "ref_cs_rec", "[", "'rotation'", "]", ")", ",", "inverse", "=", "True", "\n", ")", "\n", "\n", "# Homogeneous transformation matrix from global to _current_ ego car frame", "\n", "car_from_global", "=", "transform_matrix", "(", "\n", "ref_pose_rec", "[", "'translation'", "]", ",", "Quaternion", "(", "ref_pose_rec", "[", "'rotation'", "]", ")", ",", "inverse", "=", "True", ",", "\n", ")", "\n", "\n", "info", "=", "{", "\n", "'lidar_path'", ":", "Path", "(", "ref_lidar_path", ")", ".", "relative_to", "(", "data_path", ")", ".", "__str__", "(", ")", ",", "\n", "'cam_front_path'", ":", "Path", "(", "ref_cam_path", ")", ".", "relative_to", "(", "data_path", ")", ".", "__str__", "(", ")", ",", "\n", "'cam_intrinsic'", ":", "ref_cam_intrinsic", ",", "\n", "'token'", ":", "sample", "[", "'token'", "]", ",", "\n", "'sweeps'", ":", "[", "]", ",", "\n", "'ref_from_car'", ":", "ref_from_car", ",", "\n", "'car_from_global'", ":", "car_from_global", ",", "\n", "'timestamp'", ":", "ref_time", ",", "\n", "}", "\n", "\n", "sample_data_token", "=", "sample", "[", "'data'", "]", "[", "chan", "]", "\n", "curr_sd_rec", "=", "nusc", ".", "get", "(", "'sample_data'", ",", "sample_data_token", ")", "\n", "sweeps", "=", "[", "]", "\n", "while", "len", "(", "sweeps", ")", "<", "max_sweeps", "-", "1", ":", "\n", "            ", "if", "curr_sd_rec", "[", "'prev'", "]", "==", "''", ":", "\n", "                ", "if", "len", "(", "sweeps", ")", "==", "0", ":", "\n", "                    ", "sweep", "=", "{", "\n", "'lidar_path'", ":", "Path", "(", "ref_lidar_path", ")", ".", "relative_to", "(", "data_path", ")", ".", "__str__", "(", ")", ",", "\n", "'sample_data_token'", ":", "curr_sd_rec", "[", "'token'", "]", ",", "\n", "'transform_matrix'", ":", "None", ",", "\n", "'time_lag'", ":", "curr_sd_rec", "[", "'timestamp'", "]", "*", "0", ",", "\n", "}", "\n", "sweeps", ".", "append", "(", "sweep", ")", "\n", "", "else", ":", "\n", "                    ", "sweeps", ".", "append", "(", "sweeps", "[", "-", "1", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "curr_sd_rec", "=", "nusc", ".", "get", "(", "'sample_data'", ",", "curr_sd_rec", "[", "'prev'", "]", ")", "\n", "\n", "# Get past pose", "\n", "current_pose_rec", "=", "nusc", ".", "get", "(", "'ego_pose'", ",", "curr_sd_rec", "[", "'ego_pose_token'", "]", ")", "\n", "global_from_car", "=", "transform_matrix", "(", "\n", "current_pose_rec", "[", "'translation'", "]", ",", "Quaternion", "(", "current_pose_rec", "[", "'rotation'", "]", ")", ",", "inverse", "=", "False", ",", "\n", ")", "\n", "\n", "# Homogeneous transformation matrix from sensor coordinate frame to ego car frame.", "\n", "current_cs_rec", "=", "nusc", ".", "get", "(", "\n", "'calibrated_sensor'", ",", "curr_sd_rec", "[", "'calibrated_sensor_token'", "]", "\n", ")", "\n", "car_from_current", "=", "transform_matrix", "(", "\n", "current_cs_rec", "[", "'translation'", "]", ",", "Quaternion", "(", "current_cs_rec", "[", "'rotation'", "]", ")", ",", "inverse", "=", "False", ",", "\n", ")", "\n", "\n", "tm", "=", "reduce", "(", "np", ".", "dot", ",", "[", "ref_from_car", ",", "car_from_global", ",", "global_from_car", ",", "car_from_current", "]", ")", "\n", "\n", "lidar_path", "=", "nusc", ".", "get_sample_data_path", "(", "curr_sd_rec", "[", "'token'", "]", ")", "\n", "\n", "time_lag", "=", "ref_time", "-", "1e-6", "*", "curr_sd_rec", "[", "'timestamp'", "]", "\n", "\n", "sweep", "=", "{", "\n", "'lidar_path'", ":", "Path", "(", "lidar_path", ")", ".", "relative_to", "(", "data_path", ")", ".", "__str__", "(", ")", ",", "\n", "'sample_data_token'", ":", "curr_sd_rec", "[", "'token'", "]", ",", "\n", "'transform_matrix'", ":", "tm", ",", "\n", "'global_from_car'", ":", "global_from_car", ",", "\n", "'car_from_current'", ":", "car_from_current", ",", "\n", "'time_lag'", ":", "time_lag", ",", "\n", "}", "\n", "sweeps", ".", "append", "(", "sweep", ")", "\n", "\n", "", "", "info", "[", "'sweeps'", "]", "=", "sweeps", "\n", "\n", "assert", "len", "(", "info", "[", "'sweeps'", "]", ")", "==", "max_sweeps", "-", "1", ",", "f\"sweep {curr_sd_rec['token']} only has {len(info['sweeps'])} sweeps, \"", "f\"you should duplicate to sweep num {max_sweeps - 1}\"", "\n", "\n", "if", "not", "test", ":", "\n", "            ", "annotations", "=", "[", "nusc", ".", "get", "(", "'sample_annotation'", ",", "token", ")", "for", "token", "in", "sample", "[", "'anns'", "]", "]", "\n", "\n", "# the filtering gives 0.5~1 map improvement", "\n", "num_lidar_pts", "=", "np", ".", "array", "(", "[", "anno", "[", "'num_lidar_pts'", "]", "for", "anno", "in", "annotations", "]", ")", "\n", "num_radar_pts", "=", "np", ".", "array", "(", "[", "anno", "[", "'num_radar_pts'", "]", "for", "anno", "in", "annotations", "]", ")", "\n", "mask", "=", "(", "num_lidar_pts", "+", "num_radar_pts", ">", "0", ")", "\n", "\n", "locs", "=", "np", ".", "array", "(", "[", "b", ".", "center", "for", "b", "in", "ref_boxes", "]", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "dims", "=", "np", ".", "array", "(", "[", "b", ".", "wlh", "for", "b", "in", "ref_boxes", "]", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "[", ":", ",", "[", "1", ",", "0", ",", "2", "]", "]", "# wlh == > dxdydz (lwh)", "\n", "velocity", "=", "np", ".", "array", "(", "[", "b", ".", "velocity", "for", "b", "in", "ref_boxes", "]", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "rots", "=", "np", ".", "array", "(", "[", "quaternion_yaw", "(", "b", ".", "orientation", ")", "for", "b", "in", "ref_boxes", "]", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "names", "=", "np", ".", "array", "(", "[", "b", ".", "name", "for", "b", "in", "ref_boxes", "]", ")", "\n", "tokens", "=", "np", ".", "array", "(", "[", "b", ".", "token", "for", "b", "in", "ref_boxes", "]", ")", "\n", "gt_boxes", "=", "np", ".", "concatenate", "(", "[", "locs", ",", "dims", ",", "rots", ",", "velocity", "[", ":", ",", ":", "2", "]", "]", ",", "axis", "=", "1", ")", "\n", "\n", "assert", "len", "(", "annotations", ")", "==", "len", "(", "gt_boxes", ")", "==", "len", "(", "velocity", ")", "\n", "\n", "info", "[", "'gt_boxes'", "]", "=", "gt_boxes", "[", "mask", ",", ":", "]", "\n", "info", "[", "'gt_boxes_velocity'", "]", "=", "velocity", "[", "mask", ",", ":", "]", "\n", "info", "[", "'gt_names'", "]", "=", "np", ".", "array", "(", "[", "map_name_from_general_to_detection", "[", "name", "]", "for", "name", "in", "names", "]", ")", "[", "mask", "]", "\n", "info", "[", "'gt_boxes_token'", "]", "=", "tokens", "[", "mask", "]", "\n", "info", "[", "'num_lidar_pts'", "]", "=", "num_lidar_pts", "[", "mask", "]", "\n", "info", "[", "'num_radar_pts'", "]", "=", "num_radar_pts", "[", "mask", "]", "\n", "\n", "", "if", "sample", "[", "'scene_token'", "]", "in", "train_scenes", ":", "\n", "            ", "train_nusc_infos", ".", "append", "(", "info", ")", "\n", "", "else", ":", "\n", "            ", "val_nusc_infos", ".", "append", "(", "info", ")", "\n", "\n", "", "", "progress_bar", ".", "close", "(", ")", "\n", "return", "train_nusc_infos", ",", "val_nusc_infos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.boxes_lidar_to_nusenes": [[383, 399], ["range", "pyquaternion.Quaternion", "nuscenes.utils.data_classes.Box", "box_list.append"], "function", ["None"], ["", "def", "boxes_lidar_to_nusenes", "(", "det_info", ")", ":", "\n", "    ", "boxes3d", "=", "det_info", "[", "'boxes_lidar'", "]", "\n", "scores", "=", "det_info", "[", "'score'", "]", "\n", "labels", "=", "det_info", "[", "'pred_labels'", "]", "\n", "\n", "box_list", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "boxes3d", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "quat", "=", "Quaternion", "(", "axis", "=", "[", "0", ",", "0", ",", "1", "]", ",", "radians", "=", "boxes3d", "[", "k", ",", "6", "]", ")", "\n", "velocity", "=", "(", "*", "boxes3d", "[", "k", ",", "7", ":", "9", "]", ",", "0.0", ")", "if", "boxes3d", ".", "shape", "[", "1", "]", "==", "9", "else", "(", "0.0", ",", "0.0", ",", "0.0", ")", "\n", "box", "=", "Box", "(", "\n", "boxes3d", "[", "k", ",", ":", "3", "]", ",", "\n", "boxes3d", "[", "k", ",", "[", "4", ",", "3", ",", "5", "]", "]", ",", "# wlh", "\n", "quat", ",", "label", "=", "labels", "[", "k", "]", ",", "score", "=", "scores", "[", "k", "]", ",", "velocity", "=", "velocity", ",", "\n", ")", "\n", "box_list", ".", "append", "(", "box", ")", "\n", "", "return", "box_list", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.lidar_nusc_box_to_global": [[401, 421], ["nusc.get", "nusc.get", "nusc.get", "nusc.get", "nusc.get", "nusc.get_sample_data_path", "box.rotate", "box.translate", "box.rotate", "box.translate", "box_list.append", "pyquaternion.Quaternion", "numpy.array", "pyquaternion.Quaternion", "numpy.array"], "function", ["None"], ["", "def", "lidar_nusc_box_to_global", "(", "nusc", ",", "boxes", ",", "sample_token", ")", ":", "\n", "    ", "s_record", "=", "nusc", ".", "get", "(", "'sample'", ",", "sample_token", ")", "\n", "sample_data_token", "=", "s_record", "[", "'data'", "]", "[", "'LIDAR_TOP'", "]", "\n", "\n", "sd_record", "=", "nusc", ".", "get", "(", "'sample_data'", ",", "sample_data_token", ")", "\n", "cs_record", "=", "nusc", ".", "get", "(", "'calibrated_sensor'", ",", "sd_record", "[", "'calibrated_sensor_token'", "]", ")", "\n", "sensor_record", "=", "nusc", ".", "get", "(", "'sensor'", ",", "cs_record", "[", "'sensor_token'", "]", ")", "\n", "pose_record", "=", "nusc", ".", "get", "(", "'ego_pose'", ",", "sd_record", "[", "'ego_pose_token'", "]", ")", "\n", "\n", "data_path", "=", "nusc", ".", "get_sample_data_path", "(", "sample_data_token", ")", "\n", "box_list", "=", "[", "]", "\n", "for", "box", "in", "boxes", ":", "\n", "# Move box to ego vehicle coord system", "\n", "        ", "box", ".", "rotate", "(", "Quaternion", "(", "cs_record", "[", "'rotation'", "]", ")", ")", "\n", "box", ".", "translate", "(", "np", ".", "array", "(", "cs_record", "[", "'translation'", "]", ")", ")", "\n", "# Move box to global coord system", "\n", "box", ".", "rotate", "(", "Quaternion", "(", "pose_record", "[", "'rotation'", "]", ")", ")", "\n", "box", ".", "translate", "(", "np", ".", "array", "(", "pose_record", "[", "'translation'", "]", ")", ")", "\n", "box_list", ".", "append", "(", "box", ")", "\n", "", "return", "box_list", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.transform_det_annos_to_nusc_annos": [[423, 469], ["nuscenes_utils.boxes_lidar_to_nusenes", "nuscenes_utils.lidar_nusc_box_to_global", "enumerate", "nusc_annos[].update", "annos.append", "numpy.sqrt", "box.center.tolist", "box.wlh.tolist", "box.orientation.elements.tolist", "box.velocity[].tolist", "max", "cls_attr_dist[].items", "operator.itemgetter"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.boxes_lidar_to_nusenes", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.lidar_nusc_box_to_global"], ["", "def", "transform_det_annos_to_nusc_annos", "(", "det_annos", ",", "nusc", ")", ":", "\n", "    ", "nusc_annos", "=", "{", "\n", "'results'", ":", "{", "}", ",", "\n", "'meta'", ":", "None", ",", "\n", "}", "\n", "\n", "for", "det", "in", "det_annos", ":", "\n", "        ", "annos", "=", "[", "]", "\n", "box_list", "=", "boxes_lidar_to_nusenes", "(", "det", ")", "\n", "box_list", "=", "lidar_nusc_box_to_global", "(", "\n", "nusc", "=", "nusc", ",", "boxes", "=", "box_list", ",", "sample_token", "=", "det", "[", "'metadata'", "]", "[", "'token'", "]", "\n", ")", "\n", "\n", "for", "k", ",", "box", "in", "enumerate", "(", "box_list", ")", ":", "\n", "            ", "name", "=", "det", "[", "'name'", "]", "[", "k", "]", "\n", "if", "np", ".", "sqrt", "(", "box", ".", "velocity", "[", "0", "]", "**", "2", "+", "box", ".", "velocity", "[", "1", "]", "**", "2", ")", ">", "0.2", ":", "\n", "                ", "if", "name", "in", "[", "'car'", ",", "'construction_vehicle'", ",", "'bus'", ",", "'truck'", ",", "'trailer'", "]", ":", "\n", "                    ", "attr", "=", "'vehicle.moving'", "\n", "", "elif", "name", "in", "[", "'bicycle'", ",", "'motorcycle'", "]", ":", "\n", "                    ", "attr", "=", "'cycle.with_rider'", "\n", "", "else", ":", "\n", "                    ", "attr", "=", "None", "\n", "", "", "else", ":", "\n", "                ", "if", "name", "in", "[", "'pedestrian'", "]", ":", "\n", "                    ", "attr", "=", "'pedestrian.standing'", "\n", "", "elif", "name", "in", "[", "'bus'", "]", ":", "\n", "                    ", "attr", "=", "'vehicle.stopped'", "\n", "", "else", ":", "\n", "                    ", "attr", "=", "None", "\n", "", "", "attr", "=", "attr", "if", "attr", "is", "not", "None", "else", "max", "(", "\n", "cls_attr_dist", "[", "name", "]", ".", "items", "(", ")", ",", "key", "=", "operator", ".", "itemgetter", "(", "1", ")", ")", "[", "0", "]", "\n", "nusc_anno", "=", "{", "\n", "'sample_token'", ":", "det", "[", "'metadata'", "]", "[", "'token'", "]", ",", "\n", "'translation'", ":", "box", ".", "center", ".", "tolist", "(", ")", ",", "\n", "'size'", ":", "box", ".", "wlh", ".", "tolist", "(", ")", ",", "\n", "'rotation'", ":", "box", ".", "orientation", ".", "elements", ".", "tolist", "(", ")", ",", "\n", "'velocity'", ":", "box", ".", "velocity", "[", ":", "2", "]", ".", "tolist", "(", ")", ",", "\n", "'detection_name'", ":", "name", ",", "\n", "'detection_score'", ":", "box", ".", "score", ",", "\n", "'attribute_name'", ":", "attr", "\n", "}", "\n", "annos", ".", "append", "(", "nusc_anno", ")", "\n", "\n", "", "nusc_annos", "[", "'results'", "]", ".", "update", "(", "{", "det", "[", "\"metadata\"", "]", "[", "\"token\"", "]", ":", "annos", "}", ")", "\n", "\n", "", "return", "nusc_annos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.format_nuscene_results": [[471, 501], ["metrics[].items", "details.update", "list", "list", "list", "[].values", "[].values", "[].keys", "x.split", "list", "[].keys"], "function", ["None"], ["", "def", "format_nuscene_results", "(", "metrics", ",", "class_names", ",", "version", "=", "'default'", ")", ":", "\n", "    ", "result", "=", "'----------------Nuscene %s results-----------------\\n'", "%", "version", "\n", "for", "name", "in", "class_names", ":", "\n", "        ", "threshs", "=", "', '", ".", "join", "(", "list", "(", "metrics", "[", "'label_aps'", "]", "[", "name", "]", ".", "keys", "(", ")", ")", ")", "\n", "ap_list", "=", "list", "(", "metrics", "[", "'label_aps'", "]", "[", "name", "]", ".", "values", "(", ")", ")", "\n", "\n", "err_name", "=", "', '", ".", "join", "(", "[", "x", ".", "split", "(", "'_'", ")", "[", "0", "]", "for", "x", "in", "list", "(", "metrics", "[", "'label_tp_errors'", "]", "[", "name", "]", ".", "keys", "(", ")", ")", "]", ")", "\n", "error_list", "=", "list", "(", "metrics", "[", "'label_tp_errors'", "]", "[", "name", "]", ".", "values", "(", ")", ")", "\n", "\n", "result", "+=", "f'***{name} error@{err_name} | AP@{threshs}\\n'", "\n", "result", "+=", "', '", ".", "join", "(", "[", "'%.2f'", "%", "x", "for", "x", "in", "error_list", "]", ")", "+", "' | '", "\n", "result", "+=", "', '", ".", "join", "(", "[", "'%.2f'", "%", "(", "x", "*", "100", ")", "for", "x", "in", "ap_list", "]", ")", "\n", "result", "+=", "f\" | mean AP: {metrics['mean_dist_aps'][name]}\"", "\n", "result", "+=", "'\\n'", "\n", "\n", "", "result", "+=", "'--------------average performance-------------\\n'", "\n", "details", "=", "{", "}", "\n", "for", "key", ",", "val", "in", "metrics", "[", "'tp_errors'", "]", ".", "items", "(", ")", ":", "\n", "        ", "result", "+=", "'%s:\\t %.4f\\n'", "%", "(", "key", ",", "val", ")", "\n", "details", "[", "key", "]", "=", "val", "\n", "\n", "", "result", "+=", "'mAP:\\t %.4f\\n'", "%", "metrics", "[", "'mean_ap'", "]", "\n", "result", "+=", "'NDS:\\t %.4f\\n'", "%", "metrics", "[", "'nd_score'", "]", "\n", "\n", "details", ".", "update", "(", "{", "\n", "'mAP'", ":", "metrics", "[", "'mean_ap'", "]", ",", "\n", "'NDS'", ":", "metrics", "[", "'nd_score'", "]", ",", "\n", "}", ")", "\n", "\n", "return", "result", ",", "details", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__init__": [[14, 23], ["dataset.DatasetTemplate.__init__", "nuscenes_dataset.NuScenesDataset.include_nuscenes_data", "nuscenes_dataset.NuScenesDataset.dataset_cfg.get", "nuscenes_dataset.NuScenesDataset.balanced_infos_resampling", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.include_nuscenes_data", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.balanced_infos_resampling"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", ",", "class_names", ",", "training", "=", "True", ",", "root_path", "=", "None", ",", "logger", "=", "None", ")", ":", "\n", "        ", "root_path", "=", "(", "root_path", "if", "root_path", "is", "not", "None", "else", "Path", "(", "dataset_cfg", ".", "DATA_PATH", ")", ")", "/", "dataset_cfg", ".", "VERSION", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "dataset_cfg", "=", "dataset_cfg", ",", "class_names", "=", "class_names", ",", "training", "=", "training", ",", "root_path", "=", "root_path", ",", "logger", "=", "logger", "\n", ")", "\n", "self", ".", "infos", "=", "[", "]", "\n", "self", ".", "include_nuscenes_data", "(", "self", ".", "mode", ")", "\n", "if", "self", ".", "training", "and", "self", ".", "dataset_cfg", ".", "get", "(", "'BALANCED_RESAMPLING'", ",", "False", ")", ":", "\n", "            ", "self", ".", "infos", "=", "self", ".", "balanced_infos_resampling", "(", "self", ".", "infos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.include_nuscenes_data": [[24, 38], ["nuscenes_dataset.NuScenesDataset.logger.info", "nuscenes_dataset.NuScenesDataset.infos.extend", "nuscenes_dataset.NuScenesDataset.logger.info", "info_path.exists", "open", "pickle.load", "nuscenes_infos.extend", "len"], "methods", ["None"], ["", "", "def", "include_nuscenes_data", "(", "self", ",", "mode", ")", ":", "\n", "        ", "self", ".", "logger", ".", "info", "(", "'Loading NuScenes dataset'", ")", "\n", "nuscenes_infos", "=", "[", "]", "\n", "\n", "for", "info_path", "in", "self", ".", "dataset_cfg", ".", "INFO_PATH", "[", "mode", "]", ":", "\n", "            ", "info_path", "=", "self", ".", "root_path", "/", "info_path", "\n", "if", "not", "info_path", ".", "exists", "(", ")", ":", "\n", "                ", "continue", "\n", "", "with", "open", "(", "info_path", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "infos", "=", "pickle", ".", "load", "(", "f", ")", "\n", "nuscenes_infos", ".", "extend", "(", "infos", ")", "\n", "\n", "", "", "self", ".", "infos", ".", "extend", "(", "nuscenes_infos", ")", "\n", "self", ".", "logger", ".", "info", "(", "'Total samples for NuScenes dataset: %d'", "%", "(", "len", "(", "nuscenes_infos", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.balanced_infos_resampling": [[39, 75], ["sum", "zip", "nuscenes_dataset.NuScenesDataset.logger.info", "set", "len", "list", "numpy.random.choice().tolist", "set", "len", "len", "cls_infos.items", "cls_dist.values", "cls_infos.values", "len", "len", "len", "cls_infos_new.items", "cls_infos[].append", "cls_infos.items", "numpy.random.choice", "cls_infos_new[].append", "int", "len"], "methods", ["None"], ["", "def", "balanced_infos_resampling", "(", "self", ",", "infos", ")", ":", "\n", "        ", "\"\"\"\n        Class-balanced sampling of nuScenes dataset from https://arxiv.org/abs/1908.09492\n        \"\"\"", "\n", "if", "self", ".", "class_names", "is", "None", ":", "\n", "            ", "return", "infos", "\n", "\n", "", "cls_infos", "=", "{", "name", ":", "[", "]", "for", "name", "in", "self", ".", "class_names", "}", "\n", "for", "info", "in", "infos", ":", "\n", "            ", "for", "name", "in", "set", "(", "info", "[", "'gt_names'", "]", ")", ":", "\n", "                ", "if", "name", "in", "self", ".", "class_names", ":", "\n", "                    ", "cls_infos", "[", "name", "]", ".", "append", "(", "info", ")", "\n", "\n", "", "", "", "duplicated_samples", "=", "sum", "(", "[", "len", "(", "v", ")", "for", "_", ",", "v", "in", "cls_infos", ".", "items", "(", ")", "]", ")", "\n", "cls_dist", "=", "{", "k", ":", "len", "(", "v", ")", "/", "duplicated_samples", "for", "k", ",", "v", "in", "cls_infos", ".", "items", "(", ")", "}", "\n", "\n", "sampled_infos", "=", "[", "]", "\n", "\n", "frac", "=", "1.0", "/", "len", "(", "self", ".", "class_names", ")", "\n", "ratios", "=", "[", "frac", "/", "v", "for", "v", "in", "cls_dist", ".", "values", "(", ")", "]", "\n", "\n", "for", "cur_cls_infos", ",", "ratio", "in", "zip", "(", "list", "(", "cls_infos", ".", "values", "(", ")", ")", ",", "ratios", ")", ":", "\n", "            ", "sampled_infos", "+=", "np", ".", "random", ".", "choice", "(", "\n", "cur_cls_infos", ",", "int", "(", "len", "(", "cur_cls_infos", ")", "*", "ratio", ")", "\n", ")", ".", "tolist", "(", ")", "\n", "", "self", ".", "logger", ".", "info", "(", "'Total samples after balanced resampling: %s'", "%", "(", "len", "(", "sampled_infos", ")", ")", ")", "\n", "\n", "cls_infos_new", "=", "{", "name", ":", "[", "]", "for", "name", "in", "self", ".", "class_names", "}", "\n", "for", "info", "in", "sampled_infos", ":", "\n", "            ", "for", "name", "in", "set", "(", "info", "[", "'gt_names'", "]", ")", ":", "\n", "                ", "if", "name", "in", "self", ".", "class_names", ":", "\n", "                    ", "cls_infos_new", "[", "name", "]", ".", "append", "(", "info", ")", "\n", "\n", "", "", "", "cls_dist_new", "=", "{", "k", ":", "len", "(", "v", ")", "/", "len", "(", "sampled_infos", ")", "for", "k", ",", "v", "in", "cls_infos_new", ".", "items", "(", ")", "}", "\n", "\n", "return", "sampled_infos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.get_sweep": [[76, 91], ["numpy.fromfile().reshape", "nuscenes_dataset.NuScenesDataset.get_sweep.remove_ego_points"], "methods", ["None"], ["", "def", "get_sweep", "(", "self", ",", "sweep_info", ")", ":", "\n", "        ", "def", "remove_ego_points", "(", "points", ",", "center_radius", "=", "1.0", ")", ":", "\n", "            ", "mask", "=", "~", "(", "(", "np", ".", "abs", "(", "points", "[", ":", ",", "0", "]", ")", "<", "center_radius", ")", "&", "(", "np", ".", "abs", "(", "points", "[", ":", ",", "1", "]", ")", "<", "center_radius", ")", ")", "\n", "return", "points", "[", "mask", "]", "\n", "\n", "", "lidar_path", "=", "self", ".", "root_path", "/", "sweep_info", "[", "'lidar_path'", "]", "\n", "points_sweep", "=", "np", ".", "fromfile", "(", "str", "(", "lidar_path", ")", ",", "dtype", "=", "np", ".", "float32", ",", "count", "=", "-", "1", ")", ".", "reshape", "(", "[", "-", "1", ",", "5", "]", ")", "[", ":", ",", ":", "4", "]", "\n", "points_sweep", "=", "remove_ego_points", "(", "points_sweep", ")", ".", "T", "\n", "if", "sweep_info", "[", "'transform_matrix'", "]", "is", "not", "None", ":", "\n", "            ", "num_points", "=", "points_sweep", ".", "shape", "[", "1", "]", "\n", "points_sweep", "[", ":", "3", ",", ":", "]", "=", "sweep_info", "[", "'transform_matrix'", "]", ".", "dot", "(", "\n", "np", ".", "vstack", "(", "(", "points_sweep", "[", ":", "3", ",", ":", "]", ",", "np", ".", "ones", "(", "num_points", ")", ")", ")", ")", "[", ":", "3", ",", ":", "]", "\n", "\n", "", "cur_times", "=", "sweep_info", "[", "'time_lag'", "]", "*", "np", ".", "ones", "(", "(", "1", ",", "points_sweep", ".", "shape", "[", "1", "]", ")", ")", "\n", "return", "points_sweep", ".", "T", ",", "cur_times", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.get_lidar_with_sweeps": [[92, 110], ["numpy.random.choice", "numpy.concatenate", "numpy.concatenate().astype", "numpy.concatenate", "numpy.fromfile().reshape", "numpy.zeros", "len", "nuscenes_dataset.NuScenesDataset.get_sweep", "sweep_points_list.append", "sweep_times_list.append", "numpy.concatenate", "numpy.fromfile", "str"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.get_sweep"], ["", "def", "get_lidar_with_sweeps", "(", "self", ",", "index", ",", "max_sweeps", "=", "1", ")", ":", "\n", "        ", "info", "=", "self", ".", "infos", "[", "index", "]", "\n", "lidar_path", "=", "self", ".", "root_path", "/", "info", "[", "'lidar_path'", "]", "\n", "points", "=", "np", ".", "fromfile", "(", "str", "(", "lidar_path", ")", ",", "dtype", "=", "np", ".", "float32", ",", "count", "=", "-", "1", ")", ".", "reshape", "(", "[", "-", "1", ",", "5", "]", ")", "[", ":", ",", ":", "4", "]", "\n", "\n", "sweep_points_list", "=", "[", "points", "]", "\n", "sweep_times_list", "=", "[", "np", ".", "zeros", "(", "(", "points", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "]", "\n", "\n", "for", "k", "in", "np", ".", "random", ".", "choice", "(", "len", "(", "info", "[", "'sweeps'", "]", ")", ",", "max_sweeps", "-", "1", ",", "replace", "=", "False", ")", ":", "\n", "            ", "points_sweep", ",", "times_sweep", "=", "self", ".", "get_sweep", "(", "info", "[", "'sweeps'", "]", "[", "k", "]", ")", "\n", "sweep_points_list", ".", "append", "(", "points_sweep", ")", "\n", "sweep_times_list", ".", "append", "(", "times_sweep", ")", "\n", "\n", "", "points", "=", "np", ".", "concatenate", "(", "sweep_points_list", ",", "axis", "=", "0", ")", "\n", "times", "=", "np", ".", "concatenate", "(", "sweep_times_list", ",", "axis", "=", "0", ")", ".", "astype", "(", "points", ".", "dtype", ")", "\n", "\n", "points", "=", "np", ".", "concatenate", "(", "(", "points", ",", "times", ")", ",", "axis", "=", "1", ")", "\n", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__": [[111, 116], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_merge_all_iters_to_one_epoch", ":", "\n", "            ", "return", "len", "(", "self", ".", "infos", ")", "*", "self", ".", "total_epochs", "\n", "\n", "", "return", "len", "(", "self", ".", "infos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__getitem__": [[117, 152], ["copy.deepcopy", "nuscenes_dataset.NuScenesDataset.get_lidar_with_sweeps", "nuscenes_dataset.NuScenesDataset.prepare_data", "nuscenes_dataset.NuScenesDataset.dataset_cfg.get", "nuscenes_dataset.NuScenesDataset.dataset_cfg.get", "input_dict.update", "len", "pathlib.Path", "numpy.isnan"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.get_lidar_with_sweeps", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.datasets.dataset.DatasetTemplate.prepare_data"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "_merge_all_iters_to_one_epoch", ":", "\n", "            ", "index", "=", "index", "%", "len", "(", "self", ".", "infos", ")", "\n", "\n", "", "info", "=", "copy", ".", "deepcopy", "(", "self", ".", "infos", "[", "index", "]", ")", "\n", "points", "=", "self", ".", "get_lidar_with_sweeps", "(", "index", ",", "max_sweeps", "=", "self", ".", "dataset_cfg", ".", "MAX_SWEEPS", ")", "\n", "\n", "input_dict", "=", "{", "\n", "'points'", ":", "points", ",", "\n", "'frame_id'", ":", "Path", "(", "info", "[", "'lidar_path'", "]", ")", ".", "stem", ",", "\n", "'metadata'", ":", "{", "'token'", ":", "info", "[", "'token'", "]", "}", "\n", "}", "\n", "\n", "if", "'gt_boxes'", "in", "info", ":", "\n", "            ", "if", "self", ".", "dataset_cfg", ".", "get", "(", "'FILTER_MIN_POINTS_IN_GT'", ",", "False", ")", ":", "\n", "                ", "mask", "=", "(", "info", "[", "'num_lidar_pts'", "]", ">", "self", ".", "dataset_cfg", ".", "FILTER_MIN_POINTS_IN_GT", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "mask", "=", "None", "\n", "\n", "", "input_dict", ".", "update", "(", "{", "\n", "'gt_names'", ":", "info", "[", "'gt_names'", "]", "if", "mask", "is", "None", "else", "info", "[", "'gt_names'", "]", "[", "mask", "]", ",", "\n", "'gt_boxes'", ":", "info", "[", "'gt_boxes'", "]", "if", "mask", "is", "None", "else", "info", "[", "'gt_boxes'", "]", "[", "mask", "]", "\n", "}", ")", "\n", "\n", "", "data_dict", "=", "self", ".", "prepare_data", "(", "data_dict", "=", "input_dict", ")", "\n", "\n", "if", "self", ".", "dataset_cfg", ".", "get", "(", "'SET_NAN_VELOCITY_TO_ZEROS'", ",", "False", ")", ":", "\n", "            ", "gt_boxes", "=", "data_dict", "[", "'gt_boxes'", "]", "\n", "gt_boxes", "[", "np", ".", "isnan", "(", "gt_boxes", ")", "]", "=", "0", "\n", "data_dict", "[", "'gt_boxes'", "]", "=", "gt_boxes", "\n", "\n", "", "if", "not", "self", ".", "dataset_cfg", ".", "PRED_VELOCITY", "and", "'gt_boxes'", "in", "data_dict", ":", "\n", "            ", "data_dict", "[", "'gt_boxes'", "]", "=", "data_dict", "[", "'gt_boxes'", "]", "[", ":", ",", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "-", "1", "]", "]", "\n", "\n", "", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.generate_prediction_dicts": [[153, 197], ["enumerate", "box_dict[].cpu().numpy", "box_dict[].cpu().numpy", "box_dict[].cpu().numpy", "nuscenes_dataset.NuScenesDataset.generate_prediction_dicts.get_template_prediction"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "generate_prediction_dicts", "(", "batch_dict", ",", "pred_dicts", ",", "class_names", ",", "output_path", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                frame_id:\n            pred_dicts: list of pred_dicts\n                pred_boxes: (N, 7), Tensor\n                pred_scores: (N), Tensor\n                pred_labels: (N), Tensor\n            class_names:\n            output_path:\n        Returns:\n        \"\"\"", "\n", "def", "get_template_prediction", "(", "num_samples", ")", ":", "\n", "            ", "ret_dict", "=", "{", "\n", "'name'", ":", "np", ".", "zeros", "(", "num_samples", ")", ",", "'score'", ":", "np", ".", "zeros", "(", "num_samples", ")", ",", "\n", "'boxes_lidar'", ":", "np", ".", "zeros", "(", "[", "num_samples", ",", "7", "]", ")", ",", "'pred_labels'", ":", "np", ".", "zeros", "(", "num_samples", ")", "\n", "}", "\n", "return", "ret_dict", "\n", "\n", "", "def", "generate_single_sample_dict", "(", "box_dict", ")", ":", "\n", "            ", "pred_scores", "=", "box_dict", "[", "'pred_scores'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_boxes", "=", "box_dict", "[", "'pred_boxes'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_labels", "=", "box_dict", "[", "'pred_labels'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_dict", "=", "get_template_prediction", "(", "pred_scores", ".", "shape", "[", "0", "]", ")", "\n", "if", "pred_scores", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "                ", "return", "pred_dict", "\n", "\n", "", "pred_dict", "[", "'name'", "]", "=", "np", ".", "array", "(", "class_names", ")", "[", "pred_labels", "-", "1", "]", "\n", "pred_dict", "[", "'score'", "]", "=", "pred_scores", "\n", "pred_dict", "[", "'boxes_lidar'", "]", "=", "pred_boxes", "\n", "pred_dict", "[", "'pred_labels'", "]", "=", "pred_labels", "\n", "\n", "return", "pred_dict", "\n", "\n", "", "annos", "=", "[", "]", "\n", "for", "index", ",", "box_dict", "in", "enumerate", "(", "pred_dicts", ")", ":", "\n", "            ", "single_pred_dict", "=", "generate_single_sample_dict", "(", "box_dict", ")", "\n", "single_pred_dict", "[", "'frame_id'", "]", "=", "batch_dict", "[", "'frame_id'", "]", "[", "index", "]", "\n", "single_pred_dict", "[", "'metadata'", "]", "=", "batch_dict", "[", "'metadata'", "]", "[", "index", "]", "\n", "annos", ".", "append", "(", "single_pred_dict", ")", "\n", "\n", "", "return", "annos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.evaluation": [[198, 253], ["NuScenes", "nuscenes_utils.transform_det_annos_to_nusc_annos", "pathlib.Path", "pathlib.Path.mkdir", "str", "nuscenes_dataset.NuScenesDataset.logger.info", "NuScenesEval", "NuScenesEval.main", "nuscenes_utils.format_nuscene_results", "open", "json.dump", "config_factory", "open", "json.load", "str", "config_factory", "str"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.transform_det_annos_to_nusc_annos", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.tools.test.main", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.format_nuscene_results"], ["", "def", "evaluation", "(", "self", ",", "det_annos", ",", "class_names", ",", "**", "kwargs", ")", ":", "\n", "        ", "import", "json", "\n", "from", "nuscenes", ".", "nuscenes", "import", "NuScenes", "\n", "from", ".", "import", "nuscenes_utils", "\n", "nusc", "=", "NuScenes", "(", "version", "=", "self", ".", "dataset_cfg", ".", "VERSION", ",", "dataroot", "=", "str", "(", "self", ".", "root_path", ")", ",", "verbose", "=", "True", ")", "\n", "nusc_annos", "=", "nuscenes_utils", ".", "transform_det_annos_to_nusc_annos", "(", "det_annos", ",", "nusc", ")", "\n", "nusc_annos", "[", "'meta'", "]", "=", "{", "\n", "'use_camera'", ":", "False", ",", "\n", "'use_lidar'", ":", "True", ",", "\n", "'use_radar'", ":", "False", ",", "\n", "'use_map'", ":", "False", ",", "\n", "'use_external'", ":", "False", ",", "\n", "}", "\n", "\n", "output_path", "=", "Path", "(", "kwargs", "[", "'output_path'", "]", ")", "\n", "output_path", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "res_path", "=", "str", "(", "output_path", "/", "'results_nusc.json'", ")", "\n", "with", "open", "(", "res_path", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "nusc_annos", ",", "f", ")", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "f'The predictions of NuScenes have been saved to {res_path}'", ")", "\n", "\n", "if", "self", ".", "dataset_cfg", ".", "VERSION", "==", "'v1.0-test'", ":", "\n", "            ", "return", "'No ground-truth annotations for evaluation'", ",", "{", "}", "\n", "\n", "", "from", "nuscenes", ".", "eval", ".", "detection", ".", "config", "import", "config_factory", "\n", "from", "nuscenes", ".", "eval", ".", "detection", ".", "evaluate", "import", "NuScenesEval", "\n", "\n", "eval_set_map", "=", "{", "\n", "'v1.0-mini'", ":", "'mini_val'", ",", "\n", "'v1.0-trainval'", ":", "'val'", ",", "\n", "'v1.0-test'", ":", "'test'", "\n", "}", "\n", "try", ":", "\n", "            ", "eval_version", "=", "'detection_cvpr_2019'", "\n", "eval_config", "=", "config_factory", "(", "eval_version", ")", "\n", "", "except", ":", "\n", "            ", "eval_version", "=", "'cvpr_2019'", "\n", "eval_config", "=", "config_factory", "(", "eval_version", ")", "\n", "\n", "", "nusc_eval", "=", "NuScenesEval", "(", "\n", "nusc", ",", "\n", "config", "=", "eval_config", ",", "\n", "result_path", "=", "res_path", ",", "\n", "eval_set", "=", "eval_set_map", "[", "self", ".", "dataset_cfg", ".", "VERSION", "]", ",", "\n", "output_dir", "=", "str", "(", "output_path", ")", ",", "\n", "verbose", "=", "True", ",", "\n", ")", "\n", "metrics_summary", "=", "nusc_eval", ".", "main", "(", "plot_examples", "=", "0", ",", "render_curves", "=", "False", ")", "\n", "\n", "with", "open", "(", "output_path", "/", "'metrics_summary.json'", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "metrics", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "result_str", ",", "result_dict", "=", "nuscenes_utils", ".", "format_nuscene_results", "(", "metrics", ",", "self", ".", "class_names", ",", "version", "=", "eval_version", ")", "\n", "return", "result_str", ",", "result_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.create_groundtruth_database": [[254, 297], ["database_save_path.mkdir", "tqdm.tqdm.tqdm", "all_db_infos.items", "range", "nuscenes_dataset.NuScenesDataset.get_lidar_with_sweeps", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu().long().squeeze().cpu().numpy", "range", "print", "open", "pickle.dump", "len", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu().long().squeeze().cpu", "open", "gt_points.tofile", "str", "filepath.relative_to", "all_db_infos[].append", "len", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu().long().squeeze", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu().long", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu", "torch.from_numpy().unsqueeze().float().cuda", "torch.from_numpy().unsqueeze().float().cuda", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze().float", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.get_lidar_with_sweeps", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu"], ["", "def", "create_groundtruth_database", "(", "self", ",", "used_classes", "=", "None", ",", "max_sweeps", "=", "10", ")", ":", "\n", "        ", "import", "torch", "\n", "\n", "database_save_path", "=", "self", ".", "root_path", "/", "f'gt_database_{max_sweeps}sweeps_withvelo'", "\n", "db_info_save_path", "=", "self", ".", "root_path", "/", "f'nuscenes_dbinfos_{max_sweeps}sweeps_withvelo.pkl'", "\n", "\n", "database_save_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "all_db_infos", "=", "{", "}", "\n", "\n", "for", "idx", "in", "tqdm", "(", "range", "(", "len", "(", "self", ".", "infos", ")", ")", ")", ":", "\n", "            ", "sample_idx", "=", "idx", "\n", "info", "=", "self", ".", "infos", "[", "idx", "]", "\n", "points", "=", "self", ".", "get_lidar_with_sweeps", "(", "idx", ",", "max_sweeps", "=", "max_sweeps", ")", "\n", "gt_boxes", "=", "info", "[", "'gt_boxes'", "]", "\n", "gt_names", "=", "info", "[", "'gt_names'", "]", "\n", "\n", "box_idxs_of_pts", "=", "roiaware_pool3d_utils", ".", "points_in_boxes_gpu", "(", "\n", "torch", ".", "from_numpy", "(", "points", "[", ":", ",", "0", ":", "3", "]", ")", ".", "unsqueeze", "(", "dim", "=", "0", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "\n", "torch", ".", "from_numpy", "(", "gt_boxes", "[", ":", ",", "0", ":", "7", "]", ")", ".", "unsqueeze", "(", "dim", "=", "0", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", ")", ".", "long", "(", ")", ".", "squeeze", "(", "dim", "=", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "gt_boxes", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "filename", "=", "'%s_%s_%d.bin'", "%", "(", "sample_idx", ",", "gt_names", "[", "i", "]", ",", "i", ")", "\n", "filepath", "=", "database_save_path", "/", "filename", "\n", "gt_points", "=", "points", "[", "box_idxs_of_pts", "==", "i", "]", "\n", "\n", "gt_points", "[", ":", ",", ":", "3", "]", "-=", "gt_boxes", "[", "i", ",", ":", "3", "]", "\n", "with", "open", "(", "filepath", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "gt_points", ".", "tofile", "(", "f", ")", "\n", "\n", "", "if", "(", "used_classes", "is", "None", ")", "or", "gt_names", "[", "i", "]", "in", "used_classes", ":", "\n", "                    ", "db_path", "=", "str", "(", "filepath", ".", "relative_to", "(", "self", ".", "root_path", ")", ")", "# gt_database/xxxxx.bin", "\n", "db_info", "=", "{", "'name'", ":", "gt_names", "[", "i", "]", ",", "'path'", ":", "db_path", ",", "'image_idx'", ":", "sample_idx", ",", "'gt_idx'", ":", "i", ",", "\n", "'box3d_lidar'", ":", "gt_boxes", "[", "i", "]", ",", "'num_points_in_gt'", ":", "gt_points", ".", "shape", "[", "0", "]", "}", "\n", "if", "gt_names", "[", "i", "]", "in", "all_db_infos", ":", "\n", "                        ", "all_db_infos", "[", "gt_names", "[", "i", "]", "]", ".", "append", "(", "db_info", ")", "\n", "", "else", ":", "\n", "                        ", "all_db_infos", "[", "gt_names", "[", "i", "]", "]", "=", "[", "db_info", "]", "\n", "", "", "", "", "for", "k", ",", "v", "in", "all_db_infos", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "'Database %s: %d'", "%", "(", "k", ",", "len", "(", "v", ")", ")", ")", "\n", "\n", "", "with", "open", "(", "db_info_save_path", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "all_db_infos", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.create_nuscenes_info": [[299, 344], ["NuScenes", "nuscenes_utils.get_available_scenes", "list", "list", "set", "set", "print", "nuscenes_utils.fill_trainval_infos", "filter", "filter", "print", "print", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "len", "len", "len", "len", "len", "available_scene_names.index", "available_scene_names.index"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.get_available_scenes", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_utils.fill_trainval_infos"], ["", "", "", "def", "create_nuscenes_info", "(", "version", ",", "data_path", ",", "save_path", ",", "max_sweeps", "=", "10", ")", ":", "\n", "    ", "from", "nuscenes", ".", "nuscenes", "import", "NuScenes", "\n", "from", "nuscenes", ".", "utils", "import", "splits", "\n", "from", ".", "import", "nuscenes_utils", "\n", "data_path", "=", "data_path", "/", "version", "\n", "save_path", "=", "save_path", "/", "version", "\n", "\n", "assert", "version", "in", "[", "'v1.0-trainval'", ",", "'v1.0-test'", ",", "'v1.0-mini'", "]", "\n", "if", "version", "==", "'v1.0-trainval'", ":", "\n", "        ", "train_scenes", "=", "splits", ".", "train", "\n", "val_scenes", "=", "splits", ".", "val", "\n", "", "elif", "version", "==", "'v1.0-test'", ":", "\n", "        ", "train_scenes", "=", "splits", ".", "test", "\n", "val_scenes", "=", "[", "]", "\n", "", "elif", "version", "==", "'v1.0-mini'", ":", "\n", "        ", "train_scenes", "=", "splits", ".", "mini_train", "\n", "val_scenes", "=", "splits", ".", "mini_val", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "nusc", "=", "NuScenes", "(", "version", "=", "version", ",", "dataroot", "=", "data_path", ",", "verbose", "=", "True", ")", "\n", "available_scenes", "=", "nuscenes_utils", ".", "get_available_scenes", "(", "nusc", ")", "\n", "available_scene_names", "=", "[", "s", "[", "'name'", "]", "for", "s", "in", "available_scenes", "]", "\n", "train_scenes", "=", "list", "(", "filter", "(", "lambda", "x", ":", "x", "in", "available_scene_names", ",", "train_scenes", ")", ")", "\n", "val_scenes", "=", "list", "(", "filter", "(", "lambda", "x", ":", "x", "in", "available_scene_names", ",", "val_scenes", ")", ")", "\n", "train_scenes", "=", "set", "(", "[", "available_scenes", "[", "available_scene_names", ".", "index", "(", "s", ")", "]", "[", "'token'", "]", "for", "s", "in", "train_scenes", "]", ")", "\n", "val_scenes", "=", "set", "(", "[", "available_scenes", "[", "available_scene_names", ".", "index", "(", "s", ")", "]", "[", "'token'", "]", "for", "s", "in", "val_scenes", "]", ")", "\n", "\n", "print", "(", "'%s: train scene(%d), val scene(%d)'", "%", "(", "version", ",", "len", "(", "train_scenes", ")", ",", "len", "(", "val_scenes", ")", ")", ")", "\n", "\n", "train_nusc_infos", ",", "val_nusc_infos", "=", "nuscenes_utils", ".", "fill_trainval_infos", "(", "\n", "data_path", "=", "data_path", ",", "nusc", "=", "nusc", ",", "train_scenes", "=", "train_scenes", ",", "val_scenes", "=", "val_scenes", ",", "\n", "test", "=", "'test'", "in", "version", ",", "max_sweeps", "=", "max_sweeps", "\n", ")", "\n", "\n", "if", "version", "==", "'v1.0-test'", ":", "\n", "        ", "print", "(", "'test sample: %d'", "%", "len", "(", "train_nusc_infos", ")", ")", "\n", "with", "open", "(", "save_path", "/", "f'nuscenes_infos_{max_sweeps}sweeps_test.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "train_nusc_infos", ",", "f", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "'train sample: %d, val sample: %d'", "%", "(", "len", "(", "train_nusc_infos", ")", ",", "len", "(", "val_nusc_infos", ")", ")", ")", "\n", "with", "open", "(", "save_path", "/", "f'nuscenes_infos_{max_sweeps}sweeps_train.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "train_nusc_infos", ",", "f", ")", "\n", "", "with", "open", "(", "save_path", "/", "f'nuscenes_infos_{max_sweeps}sweeps_val.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "val_nusc_infos", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.__init__": [[10, 40], ["sampler_cfg.PREPARE.items", "sampler_cfg.get", "x.split", "database_sampler.DataBaseSampler.root_path.resolve", "open", "pickle.load", "getattr", "len", "numpy.arange", "str", "database_sampler.DataBaseSampler.db_infos[].extend", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root_path", ",", "sampler_cfg", ",", "class_names", ",", "logger", "=", "None", ")", ":", "\n", "        ", "self", ".", "root_path", "=", "root_path", "\n", "self", ".", "class_names", "=", "class_names", "\n", "self", ".", "sampler_cfg", "=", "sampler_cfg", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "db_infos", "=", "{", "}", "\n", "for", "class_name", "in", "class_names", ":", "\n", "            ", "self", ".", "db_infos", "[", "class_name", "]", "=", "[", "]", "\n", "\n", "", "for", "db_info_path", "in", "sampler_cfg", ".", "DB_INFO_PATH", ":", "\n", "            ", "db_info_path", "=", "self", ".", "root_path", ".", "resolve", "(", ")", "/", "db_info_path", "\n", "with", "open", "(", "str", "(", "db_info_path", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "infos", "=", "pickle", ".", "load", "(", "f", ")", "\n", "[", "self", ".", "db_infos", "[", "cur_class", "]", ".", "extend", "(", "infos", "[", "cur_class", "]", ")", "for", "cur_class", "in", "class_names", "]", "\n", "\n", "", "", "for", "func_name", ",", "val", "in", "sampler_cfg", ".", "PREPARE", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "db_infos", "=", "getattr", "(", "self", ",", "func_name", ")", "(", "self", ".", "db_infos", ",", "val", ")", "\n", "\n", "", "self", ".", "sample_groups", "=", "{", "}", "\n", "self", ".", "sample_class_num", "=", "{", "}", "\n", "self", ".", "limit_whole_scene", "=", "sampler_cfg", ".", "get", "(", "'LIMIT_WHOLE_SCENE'", ",", "False", ")", "\n", "for", "x", "in", "sampler_cfg", ".", "SAMPLE_GROUPS", ":", "\n", "            ", "class_name", ",", "sample_num", "=", "x", ".", "split", "(", "':'", ")", "\n", "if", "class_name", "not", "in", "class_names", ":", "\n", "                ", "continue", "\n", "", "self", ".", "sample_class_num", "[", "class_name", "]", "=", "sample_num", "\n", "self", ".", "sample_groups", "[", "class_name", "]", "=", "{", "\n", "'sample_num'", ":", "sample_num", ",", "\n", "'pointer'", ":", "len", "(", "self", ".", "db_infos", "[", "class_name", "]", ")", ",", "\n", "'indices'", ":", "np", ".", "arange", "(", "len", "(", "self", ".", "db_infos", "[", "class_name", "]", ")", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.__getstate__": [[42, 46], ["dict"], "methods", ["None"], ["", "", "def", "__getstate__", "(", "self", ")", ":", "\n", "        ", "d", "=", "dict", "(", "self", ".", "__dict__", ")", "\n", "del", "d", "[", "'logger'", "]", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.__setstate__": [[47, 49], ["database_sampler.DataBaseSampler.__dict__.update"], "methods", ["None"], ["", "def", "__setstate__", "(", "self", ",", "d", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.filter_by_difficulty": [[50, 61], ["db_infos.items", "len", "database_sampler.DataBaseSampler.logger.info", "len"], "methods", ["None"], ["", "def", "filter_by_difficulty", "(", "self", ",", "db_infos", ",", "removed_difficulty", ")", ":", "\n", "        ", "new_db_infos", "=", "{", "}", "\n", "for", "key", ",", "dinfos", "in", "db_infos", ".", "items", "(", ")", ":", "\n", "            ", "pre_len", "=", "len", "(", "dinfos", ")", "\n", "new_db_infos", "[", "key", "]", "=", "[", "\n", "info", "for", "info", "in", "dinfos", "\n", "if", "info", "[", "'difficulty'", "]", "not", "in", "removed_difficulty", "\n", "]", "\n", "if", "self", ".", "logger", "is", "not", "None", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "'Database filter by difficulty %s: %d => %d'", "%", "(", "key", ",", "pre_len", ",", "len", "(", "new_db_infos", "[", "key", "]", ")", ")", ")", "\n", "", "", "return", "new_db_infos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.filter_by_min_points": [[62, 78], ["name_num.split", "int", "db_infos.keys", "database_sampler.DataBaseSampler.logger.info", "filtered_infos.append", "len", "len"], "methods", ["None"], ["", "def", "filter_by_min_points", "(", "self", ",", "db_infos", ",", "min_gt_points_list", ")", ":", "\n", "        ", "for", "name_num", "in", "min_gt_points_list", ":", "\n", "            ", "name", ",", "min_num", "=", "name_num", ".", "split", "(", "':'", ")", "\n", "min_num", "=", "int", "(", "min_num", ")", "\n", "if", "min_num", ">", "0", "and", "name", "in", "db_infos", ".", "keys", "(", ")", ":", "\n", "                ", "filtered_infos", "=", "[", "]", "\n", "for", "info", "in", "db_infos", "[", "name", "]", ":", "\n", "                    ", "if", "info", "[", "'num_points_in_gt'", "]", ">=", "min_num", ":", "\n", "                        ", "filtered_infos", ".", "append", "(", "info", ")", "\n", "\n", "", "", "if", "self", ".", "logger", "is", "not", "None", ":", "\n", "                    ", "self", ".", "logger", ".", "info", "(", "'Database filter by min points %s: %d => %d'", "%", "\n", "(", "name", ",", "len", "(", "db_infos", "[", "name", "]", ")", ",", "len", "(", "filtered_infos", ")", ")", ")", "\n", "", "db_infos", "[", "name", "]", "=", "filtered_infos", "\n", "\n", "", "", "return", "db_infos", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.sample_with_fixed_number": [[79, 97], ["int", "len", "numpy.random.permutation", "len"], "methods", ["None"], ["", "def", "sample_with_fixed_number", "(", "self", ",", "class_name", ",", "sample_group", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            class_name:\n            sample_group:\n        Returns:\n\n        \"\"\"", "\n", "sample_num", ",", "pointer", ",", "indices", "=", "int", "(", "sample_group", "[", "'sample_num'", "]", ")", ",", "sample_group", "[", "'pointer'", "]", ",", "sample_group", "[", "'indices'", "]", "\n", "if", "pointer", ">=", "len", "(", "self", ".", "db_infos", "[", "class_name", "]", ")", ":", "\n", "            ", "indices", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "self", ".", "db_infos", "[", "class_name", "]", ")", ")", "\n", "pointer", "=", "0", "\n", "\n", "", "sampled_dict", "=", "[", "self", ".", "db_infos", "[", "class_name", "]", "[", "idx", "]", "for", "idx", "in", "indices", "[", "pointer", ":", "pointer", "+", "sample_num", "]", "]", "\n", "pointer", "+=", "sample_num", "\n", "sample_group", "[", "'pointer'", "]", "=", "pointer", "\n", "sample_group", "[", "'indices'", "]", "=", "indices", "\n", "return", "sampled_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.put_boxes_on_road_planes": [[98, 117], ["calib.lidar_to_rect", "calib.rect_to_lidar"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.lidar_to_rect", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.calibration_kitti.Calibration.rect_to_lidar"], ["", "@", "staticmethod", "\n", "def", "put_boxes_on_road_planes", "(", "gt_boxes", ",", "road_planes", ",", "calib", ")", ":", "\n", "        ", "\"\"\"\n        Only validate in KITTIDataset\n        Args:\n            gt_boxes: (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n            road_planes: [a, b, c, d]\n            calib:\n\n        Returns:\n        \"\"\"", "\n", "a", ",", "b", ",", "c", ",", "d", "=", "road_planes", "\n", "center_cam", "=", "calib", ".", "lidar_to_rect", "(", "gt_boxes", "[", ":", ",", "0", ":", "3", "]", ")", "\n", "cur_height_cam", "=", "(", "-", "d", "-", "a", "*", "center_cam", "[", ":", ",", "0", "]", "-", "c", "*", "center_cam", "[", ":", ",", "2", "]", ")", "/", "b", "\n", "center_cam", "[", ":", ",", "1", "]", "=", "cur_height_cam", "\n", "cur_lidar_height", "=", "calib", ".", "rect_to_lidar", "(", "center_cam", ")", "[", ":", ",", "2", "]", "\n", "mv_height", "=", "gt_boxes", "[", ":", ",", "2", "]", "-", "gt_boxes", "[", ":", ",", "5", "]", "/", "2", "-", "cur_lidar_height", "\n", "gt_boxes", "[", ":", ",", "2", "]", "-=", "mv_height", "# lidar view", "\n", "return", "gt_boxes", ",", "mv_height", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.add_sampled_boxes_to_scene": [[118, 158], ["database_sampler.DataBaseSampler.sampler_cfg.get", "enumerate", "numpy.concatenate", "numpy.array", "utils.box_utils.enlarge_box3d", "utils.box_utils.remove_points_in_boxes3d", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "database_sampler.DataBaseSampler.put_boxes_on_road_planes", "data_dict.pop", "data_dict.pop", "numpy.fromfile().reshape", "database_sampler.DataBaseSampler.sampler_cfg.get", "obj_points_list.append", "numpy.fromfile", "str"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.enlarge_box3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.remove_points_in_boxes3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.put_boxes_on_road_planes"], ["", "def", "add_sampled_boxes_to_scene", "(", "self", ",", "data_dict", ",", "sampled_gt_boxes", ",", "total_valid_sampled_dict", ")", ":", "\n", "        ", "gt_boxes_mask", "=", "data_dict", "[", "'gt_boxes_mask'", "]", "\n", "gt_boxes", "=", "data_dict", "[", "'gt_boxes'", "]", "[", "gt_boxes_mask", "]", "\n", "gt_names", "=", "data_dict", "[", "'gt_names'", "]", "[", "gt_boxes_mask", "]", "\n", "points", "=", "data_dict", "[", "'points'", "]", "\n", "if", "self", ".", "sampler_cfg", ".", "get", "(", "'USE_ROAD_PLANE'", ",", "False", ")", ":", "\n", "            ", "sampled_gt_boxes", ",", "mv_height", "=", "self", ".", "put_boxes_on_road_planes", "(", "\n", "sampled_gt_boxes", ",", "data_dict", "[", "'road_plane'", "]", ",", "data_dict", "[", "'calib'", "]", "\n", ")", "\n", "data_dict", ".", "pop", "(", "'calib'", ")", "\n", "data_dict", ".", "pop", "(", "'road_plane'", ")", "\n", "\n", "", "obj_points_list", "=", "[", "]", "\n", "for", "idx", ",", "info", "in", "enumerate", "(", "total_valid_sampled_dict", ")", ":", "\n", "            ", "file_path", "=", "self", ".", "root_path", "/", "info", "[", "'path'", "]", "\n", "obj_points", "=", "np", ".", "fromfile", "(", "str", "(", "file_path", ")", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "\n", "[", "-", "1", ",", "self", ".", "sampler_cfg", ".", "NUM_POINT_FEATURES", "]", ")", "\n", "\n", "obj_points", "[", ":", ",", ":", "3", "]", "+=", "info", "[", "'box3d_lidar'", "]", "[", ":", "3", "]", "\n", "\n", "if", "self", ".", "sampler_cfg", ".", "get", "(", "'USE_ROAD_PLANE'", ",", "False", ")", ":", "\n", "# mv height", "\n", "                ", "obj_points", "[", ":", ",", "2", "]", "-=", "mv_height", "[", "idx", "]", "\n", "\n", "", "obj_points_list", ".", "append", "(", "obj_points", ")", "\n", "\n", "", "obj_points", "=", "np", ".", "concatenate", "(", "obj_points_list", ",", "axis", "=", "0", ")", "\n", "sampled_gt_names", "=", "np", ".", "array", "(", "[", "x", "[", "'name'", "]", "for", "x", "in", "total_valid_sampled_dict", "]", ")", "\n", "\n", "large_sampled_gt_boxes", "=", "box_utils", ".", "enlarge_box3d", "(", "\n", "sampled_gt_boxes", "[", ":", ",", "0", ":", "7", "]", ",", "extra_width", "=", "self", ".", "sampler_cfg", ".", "REMOVE_EXTRA_WIDTH", "\n", ")", "\n", "points", "=", "box_utils", ".", "remove_points_in_boxes3d", "(", "points", ",", "large_sampled_gt_boxes", ")", "\n", "points", "=", "np", ".", "concatenate", "(", "[", "obj_points", ",", "points", "]", ",", "axis", "=", "0", ")", "\n", "gt_names", "=", "np", ".", "concatenate", "(", "[", "gt_names", ",", "sampled_gt_names", "]", ",", "axis", "=", "0", ")", "\n", "gt_boxes", "=", "np", ".", "concatenate", "(", "[", "gt_boxes", ",", "sampled_gt_boxes", "]", ",", "axis", "=", "0", ")", "\n", "data_dict", "[", "'gt_boxes'", "]", "=", "gt_boxes", "\n", "data_dict", "[", "'gt_names'", "]", "=", "gt_names", "\n", "data_dict", "[", "'points'", "]", "=", "points", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.__call__": [[159, 201], ["data_dict[].astype", "database_sampler.DataBaseSampler.sample_groups.items", "database_sampler.DataBaseSampler.pop", "total_valid_sampled_dict.__len__", "database_sampler.DataBaseSampler.add_sampled_boxes_to_scene", "numpy.sum", "str", "int", "database_sampler.DataBaseSampler.sample_with_fixed_number", "numpy.stack().astype", "database_sampler.DataBaseSampler.sampler_cfg.get", "ops.iou3d_nms.iou3d_nms_utils.boxes_bev_iou_cpu", "ops.iou3d_nms.iou3d_nms_utils.boxes_bev_iou_cpu", "numpy.concatenate", "total_valid_sampled_dict.extend", "utils.box_utils.boxes3d_kitti_fakelidar_to_lidar", "int", "numpy.stack", "range", "range", "ops.iou3d_nms.iou3d_nms_utils.boxes_bev_iou_cpu.max", "ops.iou3d_nms.iou3d_nms_utils.boxes_bev_iou_cpu.max"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.add_sampled_boxes_to_scene", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.database_sampler.DataBaseSampler.sample_with_fixed_number", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_bev_iou_cpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_bev_iou_cpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_kitti_fakelidar_to_lidar"], ["", "def", "__call__", "(", "self", ",", "data_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            data_dict:\n                gt_boxes: (N, 7 + C) [x, y, z, dx, dy, dz, heading, ...]\n\n        Returns:\n\n        \"\"\"", "\n", "gt_boxes", "=", "data_dict", "[", "'gt_boxes'", "]", "\n", "gt_names", "=", "data_dict", "[", "'gt_names'", "]", ".", "astype", "(", "str", ")", "\n", "existed_boxes", "=", "gt_boxes", "\n", "total_valid_sampled_dict", "=", "[", "]", "\n", "for", "class_name", ",", "sample_group", "in", "self", ".", "sample_groups", ".", "items", "(", ")", ":", "\n", "            ", "if", "self", ".", "limit_whole_scene", ":", "\n", "                ", "num_gt", "=", "np", ".", "sum", "(", "class_name", "==", "gt_names", ")", "\n", "sample_group", "[", "'sample_num'", "]", "=", "str", "(", "int", "(", "self", ".", "sample_class_num", "[", "class_name", "]", ")", "-", "num_gt", ")", "\n", "", "if", "int", "(", "sample_group", "[", "'sample_num'", "]", ")", ">", "0", ":", "\n", "                ", "sampled_dict", "=", "self", ".", "sample_with_fixed_number", "(", "class_name", ",", "sample_group", ")", "\n", "\n", "sampled_boxes", "=", "np", ".", "stack", "(", "[", "x", "[", "'box3d_lidar'", "]", "for", "x", "in", "sampled_dict", "]", ",", "axis", "=", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "if", "self", ".", "sampler_cfg", ".", "get", "(", "'DATABASE_WITH_FAKELIDAR'", ",", "False", ")", ":", "\n", "                    ", "sampled_boxes", "=", "box_utils", ".", "boxes3d_kitti_fakelidar_to_lidar", "(", "sampled_boxes", ")", "\n", "\n", "", "iou1", "=", "iou3d_nms_utils", ".", "boxes_bev_iou_cpu", "(", "sampled_boxes", "[", ":", ",", "0", ":", "7", "]", ",", "existed_boxes", "[", ":", ",", "0", ":", "7", "]", ")", "\n", "iou2", "=", "iou3d_nms_utils", ".", "boxes_bev_iou_cpu", "(", "sampled_boxes", "[", ":", ",", "0", ":", "7", "]", ",", "sampled_boxes", "[", ":", ",", "0", ":", "7", "]", ")", "\n", "iou2", "[", "range", "(", "sampled_boxes", ".", "shape", "[", "0", "]", ")", ",", "range", "(", "sampled_boxes", ".", "shape", "[", "0", "]", ")", "]", "=", "0", "\n", "iou1", "=", "iou1", "if", "iou1", ".", "shape", "[", "1", "]", ">", "0", "else", "iou2", "\n", "valid_mask", "=", "(", "(", "iou1", ".", "max", "(", "axis", "=", "1", ")", "+", "iou2", ".", "max", "(", "axis", "=", "1", ")", ")", "==", "0", ")", ".", "nonzero", "(", ")", "[", "0", "]", "\n", "valid_sampled_dict", "=", "[", "sampled_dict", "[", "x", "]", "for", "x", "in", "valid_mask", "]", "\n", "valid_sampled_boxes", "=", "sampled_boxes", "[", "valid_mask", "]", "\n", "\n", "existed_boxes", "=", "np", ".", "concatenate", "(", "(", "existed_boxes", ",", "valid_sampled_boxes", ")", ",", "axis", "=", "0", ")", "\n", "total_valid_sampled_dict", ".", "extend", "(", "valid_sampled_dict", ")", "\n", "\n", "", "", "sampled_gt_boxes", "=", "existed_boxes", "[", "gt_boxes", ".", "shape", "[", "0", "]", ":", ",", ":", "]", "\n", "if", "total_valid_sampled_dict", ".", "__len__", "(", ")", ">", "0", ":", "\n", "            ", "data_dict", "=", "self", ".", "add_sampled_boxes_to_scene", "(", "data_dict", ",", "sampled_gt_boxes", ",", "total_valid_sampled_dict", ")", "\n", "\n", "", "data_dict", ".", "pop", "(", "'gt_boxes_mask'", ")", "\n", "return", "data_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.augmentor_utils.random_flip_along_x": [[6, 23], ["numpy.random.choice"], "function", ["None"], ["def", "random_flip_along_x", "(", "gt_boxes", ",", "points", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        gt_boxes: (N, 7 + C), [x, y, z, dx, dy, dz, heading, [vx], [vy]]\n        points: (M, 3 + C)\n    Returns:\n    \"\"\"", "\n", "enable", "=", "np", ".", "random", ".", "choice", "(", "[", "False", ",", "True", "]", ",", "replace", "=", "False", ",", "p", "=", "[", "0.5", ",", "0.5", "]", ")", "\n", "if", "enable", ":", "\n", "        ", "gt_boxes", "[", ":", ",", "1", "]", "=", "-", "gt_boxes", "[", ":", ",", "1", "]", "\n", "gt_boxes", "[", ":", ",", "6", "]", "=", "-", "gt_boxes", "[", ":", ",", "6", "]", "\n", "points", "[", ":", ",", "1", "]", "=", "-", "points", "[", ":", ",", "1", "]", "\n", "\n", "if", "gt_boxes", ".", "shape", "[", "1", "]", ">", "7", ":", "\n", "            ", "gt_boxes", "[", ":", ",", "8", "]", "=", "-", "gt_boxes", "[", ":", ",", "8", "]", "\n", "\n", "", "", "return", "gt_boxes", ",", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.augmentor_utils.random_flip_along_y": [[25, 42], ["numpy.random.choice"], "function", ["None"], ["", "def", "random_flip_along_y", "(", "gt_boxes", ",", "points", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        gt_boxes: (N, 7 + C), [x, y, z, dx, dy, dz, heading, [vx], [vy]]\n        points: (M, 3 + C)\n    Returns:\n    \"\"\"", "\n", "enable", "=", "np", ".", "random", ".", "choice", "(", "[", "False", ",", "True", "]", ",", "replace", "=", "False", ",", "p", "=", "[", "0.5", ",", "0.5", "]", ")", "\n", "if", "enable", ":", "\n", "        ", "gt_boxes", "[", ":", ",", "0", "]", "=", "-", "gt_boxes", "[", ":", ",", "0", "]", "\n", "gt_boxes", "[", ":", ",", "6", "]", "=", "-", "(", "gt_boxes", "[", ":", ",", "6", "]", "+", "np", ".", "pi", ")", "\n", "points", "[", ":", ",", "0", "]", "=", "-", "points", "[", ":", ",", "0", "]", "\n", "\n", "if", "gt_boxes", ".", "shape", "[", "1", "]", ">", "7", ":", "\n", "            ", "gt_boxes", "[", ":", ",", "7", "]", "=", "-", "gt_boxes", "[", ":", ",", "7", "]", "\n", "\n", "", "", "return", "gt_boxes", ",", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.augmentor_utils.global_rotation": [[44, 63], ["numpy.random.uniform", "utils.common_utils.rotate_points_along_z", "utils.common_utils.rotate_points_along_z", "numpy.array", "numpy.array", "utils.common_utils.rotate_points_along_z", "numpy.array", "numpy.hstack", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z"], ["", "def", "global_rotation", "(", "gt_boxes", ",", "points", ",", "rot_range", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        gt_boxes: (N, 7 + C), [x, y, z, dx, dy, dz, heading, [vx], [vy]]\n        points: (M, 3 + C),\n        rot_range: [min, max]\n    Returns:\n    \"\"\"", "\n", "noise_rotation", "=", "np", ".", "random", ".", "uniform", "(", "rot_range", "[", "0", "]", ",", "rot_range", "[", "1", "]", ")", "\n", "points", "=", "common_utils", ".", "rotate_points_along_z", "(", "points", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", ",", "np", ".", "array", "(", "[", "noise_rotation", "]", ")", ")", "[", "0", "]", "\n", "gt_boxes", "[", ":", ",", "0", ":", "3", "]", "=", "common_utils", ".", "rotate_points_along_z", "(", "gt_boxes", "[", "np", ".", "newaxis", ",", ":", ",", "0", ":", "3", "]", ",", "np", ".", "array", "(", "[", "noise_rotation", "]", ")", ")", "[", "0", "]", "\n", "gt_boxes", "[", ":", ",", "6", "]", "+=", "noise_rotation", "\n", "if", "gt_boxes", ".", "shape", "[", "1", "]", ">", "7", ":", "\n", "        ", "gt_boxes", "[", ":", ",", "7", ":", "9", "]", "=", "common_utils", ".", "rotate_points_along_z", "(", "\n", "np", ".", "hstack", "(", "(", "gt_boxes", "[", ":", ",", "7", ":", "9", "]", ",", "np", ".", "zeros", "(", "(", "gt_boxes", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ")", ")", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", ",", "\n", "np", ".", "array", "(", "[", "noise_rotation", "]", ")", "\n", ")", "[", "0", "]", "[", ":", ",", "0", ":", "2", "]", "\n", "\n", "", "return", "gt_boxes", ",", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.augmentor_utils.global_scaling": [[65, 79], ["numpy.random.uniform"], "function", ["None"], ["", "def", "global_scaling", "(", "gt_boxes", ",", "points", ",", "scale_range", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        gt_boxes: (N, 7), [x, y, z, dx, dy, dz, heading]\n        points: (M, 3 + C),\n        scale_range: [min, max]\n    Returns:\n    \"\"\"", "\n", "if", "scale_range", "[", "1", "]", "-", "scale_range", "[", "0", "]", "<", "1e-3", ":", "\n", "        ", "return", "gt_boxes", ",", "points", "\n", "", "noise_scale", "=", "np", ".", "random", ".", "uniform", "(", "scale_range", "[", "0", "]", ",", "scale_range", "[", "1", "]", ")", "\n", "points", "[", ":", ",", ":", "3", "]", "*=", "noise_scale", "\n", "gt_boxes", "[", ":", ",", ":", "6", "]", "*=", "noise_scale", "\n", "return", "gt_boxes", ",", "points", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.data_augmentor.DataAugmentor.__init__": [[10, 25], ["isinstance", "data_augmentor.DataAugmentor.data_augmentor_queue.append", "isinstance", "getattr"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root_path", ",", "augmentor_configs", ",", "class_names", ",", "logger", "=", "None", ")", ":", "\n", "        ", "self", ".", "root_path", "=", "root_path", "\n", "self", ".", "class_names", "=", "class_names", "\n", "self", ".", "logger", "=", "logger", "\n", "\n", "self", ".", "data_augmentor_queue", "=", "[", "]", "\n", "aug_config_list", "=", "augmentor_configs", "if", "isinstance", "(", "augmentor_configs", ",", "list", ")", "else", "augmentor_configs", ".", "AUG_CONFIG_LIST", "\n", "\n", "for", "cur_cfg", "in", "aug_config_list", ":", "\n", "            ", "if", "not", "isinstance", "(", "augmentor_configs", ",", "list", ")", ":", "\n", "                ", "if", "cur_cfg", ".", "NAME", "in", "augmentor_configs", ".", "DISABLE_AUG_LIST", ":", "\n", "                    ", "continue", "\n", "", "", "cur_augmentor", "=", "getattr", "(", "self", ",", "cur_cfg", ".", "NAME", ")", "(", "config", "=", "cur_cfg", ")", "\n", "self", ".", "data_augmentor_queue", ".", "append", "(", "cur_augmentor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.data_augmentor.DataAugmentor.gt_sampling": [[26, 34], ["database_sampler.DataBaseSampler"], "methods", ["None"], ["", "", "def", "gt_sampling", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "        ", "db_sampler", "=", "database_sampler", ".", "DataBaseSampler", "(", "\n", "root_path", "=", "self", ".", "root_path", ",", "\n", "sampler_cfg", "=", "config", ",", "\n", "class_names", "=", "self", ".", "class_names", ",", "\n", "logger", "=", "self", ".", "logger", "\n", ")", "\n", "return", "db_sampler", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.data_augmentor.DataAugmentor.__getstate__": [[35, 39], ["dict"], "methods", ["None"], ["", "def", "__getstate__", "(", "self", ")", ":", "\n", "        ", "d", "=", "dict", "(", "self", ".", "__dict__", ")", "\n", "del", "d", "[", "'logger'", "]", "\n", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.data_augmentor.DataAugmentor.__setstate__": [[40, 42], ["data_augmentor.DataAugmentor.__dict__.update"], "methods", ["None"], ["", "def", "__setstate__", "(", "self", ",", "d", ")", ":", "\n", "        ", "self", ".", "__dict__", ".", "update", "(", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.data_augmentor.DataAugmentor.random_world_flip": [[43, 56], ["functools.partial", "getattr"], "methods", ["None"], ["", "def", "random_world_flip", "(", "self", ",", "data_dict", "=", "None", ",", "config", "=", "None", ")", ":", "\n", "        ", "if", "data_dict", "is", "None", ":", "\n", "            ", "return", "partial", "(", "self", ".", "random_world_flip", ",", "config", "=", "config", ")", "\n", "", "gt_boxes", ",", "points", "=", "data_dict", "[", "'gt_boxes'", "]", ",", "data_dict", "[", "'points'", "]", "\n", "for", "cur_axis", "in", "config", "[", "'ALONG_AXIS_LIST'", "]", ":", "\n", "            ", "assert", "cur_axis", "in", "[", "'x'", ",", "'y'", "]", "\n", "gt_boxes", ",", "points", "=", "getattr", "(", "augmentor_utils", ",", "'random_flip_along_%s'", "%", "cur_axis", ")", "(", "\n", "gt_boxes", ",", "points", ",", "\n", ")", "\n", "\n", "", "data_dict", "[", "'gt_boxes'", "]", "=", "gt_boxes", "\n", "data_dict", "[", "'points'", "]", "=", "points", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.data_augmentor.DataAugmentor.random_world_rotation": [[57, 70], ["augmentor_utils.global_rotation", "functools.partial", "isinstance"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.augmentor_utils.global_rotation"], ["", "def", "random_world_rotation", "(", "self", ",", "data_dict", "=", "None", ",", "config", "=", "None", ")", ":", "\n", "        ", "if", "data_dict", "is", "None", ":", "\n", "            ", "return", "partial", "(", "self", ".", "random_world_rotation", ",", "config", "=", "config", ")", "\n", "", "rot_range", "=", "config", "[", "'WORLD_ROT_ANGLE'", "]", "\n", "if", "not", "isinstance", "(", "rot_range", ",", "list", ")", ":", "\n", "            ", "rot_range", "=", "[", "-", "rot_range", ",", "rot_range", "]", "\n", "", "gt_boxes", ",", "points", "=", "augmentor_utils", ".", "global_rotation", "(", "\n", "data_dict", "[", "'gt_boxes'", "]", ",", "data_dict", "[", "'points'", "]", ",", "rot_range", "=", "rot_range", "\n", ")", "\n", "\n", "data_dict", "[", "'gt_boxes'", "]", "=", "gt_boxes", "\n", "data_dict", "[", "'points'", "]", "=", "points", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.data_augmentor.DataAugmentor.random_world_scaling": [[71, 80], ["augmentor_utils.global_scaling", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.augmentor_utils.global_scaling"], ["", "def", "random_world_scaling", "(", "self", ",", "data_dict", "=", "None", ",", "config", "=", "None", ")", ":", "\n", "        ", "if", "data_dict", "is", "None", ":", "\n", "            ", "return", "partial", "(", "self", ".", "random_world_scaling", ",", "config", "=", "config", ")", "\n", "", "gt_boxes", ",", "points", "=", "augmentor_utils", ".", "global_scaling", "(", "\n", "data_dict", "[", "'gt_boxes'", "]", ",", "data_dict", "[", "'points'", "]", ",", "config", "[", "'WORLD_SCALE_RANGE'", "]", "\n", ")", "\n", "data_dict", "[", "'gt_boxes'", "]", "=", "gt_boxes", "\n", "data_dict", "[", "'points'", "]", "=", "points", "\n", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.augmentor.data_augmentor.DataAugmentor.forward": [[81, 108], ["utils.common_utils.limit_period", "cur_augmentor", "cur_augmentor.pop", "cur_augmentor.pop", "cur_augmentor.pop"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.limit_period"], ["", "def", "forward", "(", "self", ",", "data_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            data_dict:\n                points: (N, 3 + C_in)\n                gt_boxes: optional, (N, 7) [x, y, z, dx, dy, dz, heading]\n                gt_names: optional, (N), string\n                ...\n\n        Returns:\n        \"\"\"", "\n", "for", "cur_augmentor", "in", "self", ".", "data_augmentor_queue", ":", "\n", "            ", "data_dict", "=", "cur_augmentor", "(", "data_dict", "=", "data_dict", ")", "\n", "\n", "", "data_dict", "[", "'gt_boxes'", "]", "[", ":", ",", "6", "]", "=", "common_utils", ".", "limit_period", "(", "\n", "data_dict", "[", "'gt_boxes'", "]", "[", ":", ",", "6", "]", ",", "offset", "=", "0.5", ",", "period", "=", "2", "*", "np", ".", "pi", "\n", ")", "\n", "if", "'calib'", "in", "data_dict", ":", "\n", "            ", "data_dict", ".", "pop", "(", "'calib'", ")", "\n", "", "if", "'road_plane'", "in", "data_dict", ":", "\n", "            ", "data_dict", ".", "pop", "(", "'road_plane'", ")", "\n", "", "if", "'gt_boxes_mask'", "in", "data_dict", ":", "\n", "            ", "gt_boxes_mask", "=", "data_dict", "[", "'gt_boxes_mask'", "]", "\n", "data_dict", "[", "'gt_boxes'", "]", "=", "data_dict", "[", "'gt_boxes'", "]", "[", "gt_boxes_mask", "]", "\n", "data_dict", "[", "'gt_names'", "]", "=", "data_dict", "[", "'gt_names'", "]", "[", "gt_boxes_mask", "]", "\n", "data_dict", ".", "pop", "(", "'gt_boxes_mask'", ")", "\n", "", "return", "data_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_bev_iou_cpu": [[12, 29], ["utils.common_utils.check_numpy_to_torch", "utils.common_utils.check_numpy_to_torch", "boxes_a.new_zeros", "iou3d_nms_cuda.boxes_iou_bev_cpu", "torch.Size", "boxes_a.contiguous", "boxes_b.contiguous", "boxes_a.new_zeros.numpy"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch"], ["def", "boxes_bev_iou_cpu", "(", "boxes_a", ",", "boxes_b", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes_a: (N, 7) [x, y, z, dx, dy, dz, heading]\n        boxes_b: (N, 7) [x, y, z, dx, dy, dz, heading]\n\n    Returns:\n\n    \"\"\"", "\n", "boxes_a", ",", "is_numpy", "=", "common_utils", ".", "check_numpy_to_torch", "(", "boxes_a", ")", "\n", "boxes_b", ",", "is_numpy", "=", "common_utils", ".", "check_numpy_to_torch", "(", "boxes_b", ")", "\n", "assert", "not", "(", "boxes_a", ".", "is_cuda", "or", "boxes_b", ".", "is_cuda", ")", ",", "'Only support CPU tensors'", "\n", "assert", "boxes_a", ".", "shape", "[", "1", "]", "==", "7", "and", "boxes_b", ".", "shape", "[", "1", "]", "==", "7", "\n", "ans_iou", "=", "boxes_a", ".", "new_zeros", "(", "torch", ".", "Size", "(", "(", "boxes_a", ".", "shape", "[", "0", "]", ",", "boxes_b", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "iou3d_nms_cuda", ".", "boxes_iou_bev_cpu", "(", "boxes_a", ".", "contiguous", "(", ")", ",", "boxes_b", ".", "contiguous", "(", ")", ",", "ans_iou", ")", "\n", "\n", "return", "ans_iou", ".", "numpy", "(", ")", "if", "is_numpy", "else", "ans_iou", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou_bev": [[31, 46], ["torch.cuda.FloatTensor().zero_", "iou3d_nms_cuda.boxes_iou_bev_gpu", "boxes_a.contiguous", "boxes_b.contiguous", "torch.cuda.FloatTensor", "torch.Size"], "function", ["None"], ["", "def", "boxes_iou_bev", "(", "boxes_a", ",", "boxes_b", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes_a: (N, 7) [x, y, z, dx, dy, dz, heading]\n        boxes_b: (N, 7) [x, y, z, dx, dy, dz, heading]\n\n    Returns:\n        ans_iou: (N, M)\n    \"\"\"", "\n", "assert", "boxes_a", ".", "shape", "[", "1", "]", "==", "boxes_b", ".", "shape", "[", "1", "]", "==", "7", "\n", "ans_iou", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "torch", ".", "Size", "(", "(", "boxes_a", ".", "shape", "[", "0", "]", ",", "boxes_b", ".", "shape", "[", "0", "]", ")", ")", ")", ".", "zero_", "(", ")", "\n", "\n", "iou3d_nms_cuda", ".", "boxes_iou_bev_gpu", "(", "boxes_a", ".", "contiguous", "(", ")", ",", "boxes_b", ".", "contiguous", "(", ")", ",", "ans_iou", ")", "\n", "\n", "return", "ans_iou", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu": [[48, 82], ["torch.cuda.FloatTensor().zero_", "iou3d_nms_cuda.boxes_overlap_bev_gpu", "torch.max", "torch.min", "torch.clamp", "boxes_a.contiguous", "boxes_b.contiguous", "torch.clamp", "torch.cuda.FloatTensor", "torch.Size"], "function", ["None"], ["", "def", "boxes_iou3d_gpu", "(", "boxes_a", ",", "boxes_b", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        boxes_a: (N, 7) [x, y, z, dx, dy, dz, heading]\n        boxes_b: (N, 7) [x, y, z, dx, dy, dz, heading]\n\n    Returns:\n        ans_iou: (N, M)\n    \"\"\"", "\n", "assert", "boxes_a", ".", "shape", "[", "1", "]", "==", "boxes_b", ".", "shape", "[", "1", "]", "==", "7", "\n", "\n", "# height overlap", "\n", "boxes_a_height_max", "=", "(", "boxes_a", "[", ":", ",", "2", "]", "+", "boxes_a", "[", ":", ",", "5", "]", "/", "2", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "boxes_a_height_min", "=", "(", "boxes_a", "[", ":", ",", "2", "]", "-", "boxes_a", "[", ":", ",", "5", "]", "/", "2", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "boxes_b_height_max", "=", "(", "boxes_b", "[", ":", ",", "2", "]", "+", "boxes_b", "[", ":", ",", "5", "]", "/", "2", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "boxes_b_height_min", "=", "(", "boxes_b", "[", ":", ",", "2", "]", "-", "boxes_b", "[", ":", ",", "5", "]", "/", "2", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "# bev overlap", "\n", "overlaps_bev", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "torch", ".", "Size", "(", "(", "boxes_a", ".", "shape", "[", "0", "]", ",", "boxes_b", ".", "shape", "[", "0", "]", ")", ")", ")", ".", "zero_", "(", ")", "# (N, M)", "\n", "iou3d_nms_cuda", ".", "boxes_overlap_bev_gpu", "(", "boxes_a", ".", "contiguous", "(", ")", ",", "boxes_b", ".", "contiguous", "(", ")", ",", "overlaps_bev", ")", "\n", "\n", "max_of_min", "=", "torch", ".", "max", "(", "boxes_a_height_min", ",", "boxes_b_height_min", ")", "\n", "min_of_max", "=", "torch", ".", "min", "(", "boxes_a_height_max", ",", "boxes_b_height_max", ")", "\n", "overlaps_h", "=", "torch", ".", "clamp", "(", "min_of_max", "-", "max_of_min", ",", "min", "=", "0", ")", "\n", "\n", "# 3d iou", "\n", "overlaps_3d", "=", "overlaps_bev", "*", "overlaps_h", "\n", "\n", "vol_a", "=", "(", "boxes_a", "[", ":", ",", "3", "]", "*", "boxes_a", "[", ":", ",", "4", "]", "*", "boxes_a", "[", ":", ",", "5", "]", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "vol_b", "=", "(", "boxes_b", "[", ":", ",", "3", "]", "*", "boxes_b", "[", ":", ",", "4", "]", "*", "boxes_b", "[", ":", ",", "5", "]", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "iou3d", "=", "overlaps_3d", "/", "torch", ".", "clamp", "(", "vol_a", "+", "vol_b", "-", "overlaps_3d", ",", "min", "=", "1e-6", ")", "\n", "\n", "return", "iou3d", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.nms_gpu": [[84, 100], ["boxes[].contiguous", "torch.LongTensor", "iou3d_nms_cuda.nms_gpu", "scores.sort", "boxes[].contiguous.size", "order[].contiguous", "keep[].cuda"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.nms_gpu"], ["", "def", "nms_gpu", "(", "boxes", ",", "scores", ",", "thresh", ",", "pre_maxsize", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    :param boxes: (N, 7) [x, y, z, dx, dy, dz, heading]\n    :param scores: (N)\n    :param thresh:\n    :return:\n    \"\"\"", "\n", "assert", "boxes", ".", "shape", "[", "1", "]", "==", "7", "\n", "order", "=", "scores", ".", "sort", "(", "0", ",", "descending", "=", "True", ")", "[", "1", "]", "\n", "if", "pre_maxsize", "is", "not", "None", ":", "\n", "        ", "order", "=", "order", "[", ":", "pre_maxsize", "]", "\n", "\n", "", "boxes", "=", "boxes", "[", "order", "]", ".", "contiguous", "(", ")", "\n", "keep", "=", "torch", ".", "LongTensor", "(", "boxes", ".", "size", "(", "0", ")", ")", "\n", "num_out", "=", "iou3d_nms_cuda", ".", "nms_gpu", "(", "boxes", ",", "keep", ",", "thresh", ")", "\n", "return", "order", "[", "keep", "[", ":", "num_out", "]", ".", "cuda", "(", ")", "]", ".", "contiguous", "(", ")", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.nms_normal_gpu": [[102, 117], ["boxes[].contiguous", "torch.LongTensor", "iou3d_nms_cuda.nms_normal_gpu", "scores.sort", "boxes[].contiguous.size", "order[].contiguous", "keep[].cuda"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.nms_normal_gpu"], ["", "def", "nms_normal_gpu", "(", "boxes", ",", "scores", ",", "thresh", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    :param boxes: (N, 7) [x, y, z, dx, dy, dz, heading]\n    :param scores: (N)\n    :param thresh:\n    :return:\n    \"\"\"", "\n", "assert", "boxes", ".", "shape", "[", "1", "]", "==", "7", "\n", "order", "=", "scores", ".", "sort", "(", "0", ",", "descending", "=", "True", ")", "[", "1", "]", "\n", "\n", "boxes", "=", "boxes", "[", "order", "]", ".", "contiguous", "(", ")", "\n", "\n", "keep", "=", "torch", ".", "LongTensor", "(", "boxes", ".", "size", "(", "0", ")", ")", "\n", "num_out", "=", "iou3d_nms_cuda", ".", "nms_normal_gpu", "(", "boxes", ",", "keep", ",", "thresh", ")", "\n", "return", "order", "[", "keep", "[", ":", "num_out", "]", ".", "cuda", "(", ")", "]", ".", "contiguous", "(", ")", ",", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_modules._PointnetSAModuleBase.__init__": [[12, 18], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "npoint", "=", "None", "\n", "self", ".", "groupers", "=", "None", "\n", "self", ".", "mlps", "=", "None", "\n", "self", ".", "pool_method", "=", "'max_pool'", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_modules._PointnetSAModuleBase.forward": [[19, 56], ["xyz.transpose().contiguous", "range", "len", "torch.avg_pool2d.squeeze", "new_features_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "xyz.transpose", "pointnet2_utils.gather_operation().transpose().contiguous", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "pointnet2_utils.gather_operation().transpose", "torch.avg_pool2d.size", "pointnet2_utils.gather_operation", "torch.avg_pool2d.size", "pointnet2_utils.furthest_point_sample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "features", ":", "torch", ".", "Tensor", "=", "None", ",", "new_xyz", "=", "None", ")", "->", "(", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        :param xyz: (B, N, 3) tensor of the xyz coordinates of the features\n        :param features: (B, N, C) tensor of the descriptors of the the features\n        :param new_xyz:\n        :return:\n            new_xyz: (B, npoint, 3) tensor of the new features' xyz\n            new_features: (B, npoint, \\sum_k(mlps[k][-1])) tensor of the new_features descriptors\n        \"\"\"", "\n", "new_features_list", "=", "[", "]", "\n", "\n", "xyz_flipped", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "if", "new_xyz", "is", "None", ":", "\n", "            ", "new_xyz", "=", "pointnet2_utils", ".", "gather_operation", "(", "\n", "xyz_flipped", ",", "\n", "pointnet2_utils", ".", "furthest_point_sample", "(", "xyz", ",", "self", ".", "npoint", ")", "\n", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "if", "self", ".", "npoint", "is", "not", "None", "else", "None", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "groupers", ")", ")", ":", "\n", "            ", "new_features", "=", "self", ".", "groupers", "[", "i", "]", "(", "xyz", ",", "new_xyz", ",", "features", ")", "# (B, C, npoint, nsample)", "\n", "\n", "new_features", "=", "self", ".", "mlps", "[", "i", "]", "(", "new_features", ")", "# (B, mlp[-1], npoint, nsample)", "\n", "if", "self", ".", "pool_method", "==", "'max_pool'", ":", "\n", "                ", "new_features", "=", "F", ".", "max_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], npoint, 1)", "\n", "", "elif", "self", ".", "pool_method", "==", "'avg_pool'", ":", "\n", "                ", "new_features", "=", "F", ".", "avg_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], npoint, 1)", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "new_features", "=", "new_features", ".", "squeeze", "(", "-", "1", ")", "# (B, mlp[-1], npoint)", "\n", "new_features_list", ".", "append", "(", "new_features", ")", "\n", "\n", "", "return", "new_xyz", ",", "torch", ".", "cat", "(", "new_features_list", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_modules.PointnetSAModuleMSG.__init__": [[61, 100], ["pointnet2_modules._PointnetSAModuleBase.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "len", "len", "len", "len", "pointnet2_modules.PointnetSAModuleMSG.groupers.append", "range", "pointnet2_modules.PointnetSAModuleMSG.mlps.append", "shared_mlps.extend", "torch.Sequential", "torch.Sequential", "torch.Sequential", "pointnet2_utils.QueryAndGroup", "pointnet2_utils.GroupAll", "len", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "*", ",", "npoint", ":", "int", ",", "radii", ":", "List", "[", "float", "]", ",", "nsamples", ":", "List", "[", "int", "]", ",", "mlps", ":", "List", "[", "List", "[", "int", "]", "]", ",", "bn", ":", "bool", "=", "True", ",", "\n", "use_xyz", ":", "bool", "=", "True", ",", "pool_method", "=", "'max_pool'", ")", ":", "\n", "        ", "\"\"\"\n        :param npoint: int\n        :param radii: list of float, list of radii to group with\n        :param nsamples: list of int, number of samples in each ball query\n        :param mlps: list of list of int, spec of the pointnet before the global pooling for each scale\n        :param bn: whether to use batchnorm\n        :param use_xyz:\n        :param pool_method: max_pool / avg_pool\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "len", "(", "radii", ")", "==", "len", "(", "nsamples", ")", "==", "len", "(", "mlps", ")", "\n", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "groupers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlps", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "radii", ")", ")", ":", "\n", "            ", "radius", "=", "radii", "[", "i", "]", "\n", "nsample", "=", "nsamples", "[", "i", "]", "\n", "self", ".", "groupers", ".", "append", "(", "\n", "pointnet2_utils", ".", "QueryAndGroup", "(", "radius", ",", "nsample", ",", "use_xyz", "=", "use_xyz", ")", "\n", "if", "npoint", "is", "not", "None", "else", "pointnet2_utils", ".", "GroupAll", "(", "use_xyz", ")", "\n", ")", "\n", "mlp_spec", "=", "mlps", "[", "i", "]", "\n", "if", "use_xyz", ":", "\n", "                ", "mlp_spec", "[", "0", "]", "+=", "3", "\n", "\n", "", "shared_mlps", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "mlp_spec", ")", "-", "1", ")", ":", "\n", "                ", "shared_mlps", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "mlp_spec", "[", "k", "]", ",", "mlp_spec", "[", "k", "+", "1", "]", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "mlp_spec", "[", "k", "+", "1", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "", "self", ".", "mlps", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "shared_mlps", ")", ")", "\n", "\n", "", "self", ".", "pool_method", "=", "pool_method", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_modules.PointnetSAModule.__init__": [[105, 119], ["pointnet2_modules.PointnetSAModuleMSG.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "*", ",", "mlp", ":", "List", "[", "int", "]", ",", "npoint", ":", "int", "=", "None", ",", "radius", ":", "float", "=", "None", ",", "nsample", ":", "int", "=", "None", ",", "\n", "bn", ":", "bool", "=", "True", ",", "use_xyz", ":", "bool", "=", "True", ",", "pool_method", "=", "'max_pool'", ")", ":", "\n", "        ", "\"\"\"\n        :param mlp: list of int, spec of the pointnet before the global max_pool\n        :param npoint: int, number of features\n        :param radius: float, radius of ball\n        :param nsample: int, number of samples in the ball query\n        :param bn: whether to use batchnorm\n        :param use_xyz:\n        :param pool_method: max_pool / avg_pool\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "mlps", "=", "[", "mlp", "]", ",", "npoint", "=", "npoint", ",", "radii", "=", "[", "radius", "]", ",", "nsamples", "=", "[", "nsample", "]", ",", "bn", "=", "bn", ",", "use_xyz", "=", "use_xyz", ",", "\n", "pool_method", "=", "pool_method", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_modules.PointnetFPModule.__init__": [[125, 140], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "shared_mlps.extend", "len", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "*", ",", "mlp", ":", "List", "[", "int", "]", ",", "bn", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        :param mlp: list of int\n        :param bn: whether to use batchnorm\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "shared_mlps", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "mlp", ")", "-", "1", ")", ":", "\n", "            ", "shared_mlps", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "mlp", "[", "k", "]", ",", "mlp", "[", "k", "+", "1", "]", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "mlp", "[", "k", "+", "1", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "*", "shared_mlps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_modules.PointnetFPModule.forward": [[141, 171], ["torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "pointnet2_modules.PointnetFPModule.mlp", "torch.cat.squeeze", "torch.cat.squeeze", "torch.cat.squeeze", "pointnet2_utils.three_nn", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "pointnet2_utils.three_interpolate", "known_feats.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "unknown.size", "known_feats.size"], "methods", ["None"], ["", "def", "forward", "(", "\n", "self", ",", "unknown", ":", "torch", ".", "Tensor", ",", "known", ":", "torch", ".", "Tensor", ",", "unknow_feats", ":", "torch", ".", "Tensor", ",", "known_feats", ":", "torch", ".", "Tensor", "\n", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        :param unknown: (B, n, 3) tensor of the xyz positions of the unknown features\n        :param known: (B, m, 3) tensor of the xyz positions of the known features\n        :param unknow_feats: (B, C1, n) tensor of the features to be propigated to\n        :param known_feats: (B, C2, m) tensor of features to be propigated\n        :return:\n            new_features: (B, mlp[-1], n) tensor of the features of the unknown features\n        \"\"\"", "\n", "if", "known", "is", "not", "None", ":", "\n", "            ", "dist", ",", "idx", "=", "pointnet2_utils", ".", "three_nn", "(", "unknown", ",", "known", ")", "\n", "dist_recip", "=", "1.0", "/", "(", "dist", "+", "1e-8", ")", "\n", "norm", "=", "torch", ".", "sum", "(", "dist_recip", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "weight", "=", "dist_recip", "/", "norm", "\n", "\n", "interpolated_feats", "=", "pointnet2_utils", ".", "three_interpolate", "(", "known_feats", ",", "idx", ",", "weight", ")", "\n", "", "else", ":", "\n", "            ", "interpolated_feats", "=", "known_feats", ".", "expand", "(", "*", "known_feats", ".", "size", "(", ")", "[", "0", ":", "2", "]", ",", "unknown", ".", "size", "(", "1", ")", ")", "\n", "\n", "", "if", "unknow_feats", "is", "not", "None", ":", "\n", "            ", "new_features", "=", "torch", ".", "cat", "(", "[", "interpolated_feats", ",", "unknow_feats", "]", ",", "dim", "=", "1", ")", "# (B, C2 + C1, n)", "\n", "", "else", ":", "\n", "            ", "new_features", "=", "interpolated_feats", "\n", "\n", "", "new_features", "=", "new_features", ".", "unsqueeze", "(", "-", "1", ")", "\n", "new_features", "=", "self", ".", "mlp", "(", "new_features", ")", "\n", "\n", "return", "new_features", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.FurthestPointSampling.forward": [[11, 30], ["xyz.is_contiguous", "xyz.size", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "pointnet2_batch_cuda.furthest_point_sampling_wrapper", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "xyz", ":", "torch", ".", "Tensor", ",", "npoint", ":", "int", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        Uses iterative furthest point sampling to select a set of npoint features that have the largest\n        minimum distance\n        :param ctx:\n        :param xyz: (B, N, 3) where N > npoint\n        :param npoint: int, number of features in the sampled set\n        :return:\n             output: (B, npoint) tensor containing the set\n        \"\"\"", "\n", "assert", "xyz", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "N", ",", "_", "=", "xyz", ".", "size", "(", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "B", ",", "npoint", ")", "\n", "temp", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "N", ")", ".", "fill_", "(", "1e10", ")", "\n", "\n", "pointnet2", ".", "furthest_point_sampling_wrapper", "(", "B", ",", "N", ",", "npoint", ",", "xyz", ",", "temp", ",", "output", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.FurthestPointSampling.backward": [[31, 34], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "xyz", ",", "a", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.GatherOperation.forward": [[41, 61], ["features.is_contiguous", "idx.is_contiguous", "idx.size", "features.size", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "pointnet2_batch_cuda.gather_points_wrapper"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ":", "torch", ".", "Tensor", ",", "idx", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param features: (B, C, N)\n        :param idx: (B, npoint) index tensor of the features to gather\n        :return:\n            output: (B, C, npoint)\n        \"\"\"", "\n", "assert", "features", ".", "is_contiguous", "(", ")", "\n", "assert", "idx", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "npoint", "=", "idx", ".", "size", "(", ")", "\n", "_", ",", "C", ",", "N", "=", "features", ".", "size", "(", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "npoint", ")", "\n", "\n", "pointnet2", ".", "gather_points_wrapper", "(", "B", ",", "C", ",", "N", ",", "npoint", ",", "features", ",", "idx", ",", "output", ")", "\n", "\n", "ctx", ".", "for_backwards", "=", "(", "idx", ",", "C", ",", "N", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.GatherOperation.backward": [[62, 71], ["idx.size", "torch.autograd.Variable", "torch.autograd.Variable", "grad_out.data.contiguous", "pointnet2_batch_cuda.gather_points_grad_wrapper", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ")", ":", "\n", "        ", "idx", ",", "C", ",", "N", "=", "ctx", ".", "for_backwards", "\n", "B", ",", "npoint", "=", "idx", ".", "size", "(", ")", "\n", "\n", "grad_features", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "N", ")", ".", "zero_", "(", ")", ")", "\n", "grad_out_data", "=", "grad_out", ".", "data", ".", "contiguous", "(", ")", "\n", "pointnet2", ".", "gather_points_grad_wrapper", "(", "B", ",", "C", ",", "N", ",", "npoint", ",", "grad_out_data", ",", "idx", ",", "grad_features", ".", "data", ")", "\n", "return", "grad_features", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.ThreeNN.forward": [[78, 99], ["unknown.is_contiguous", "known.is_contiguous", "unknown.size", "known.size", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "pointnet2_batch_cuda.three_nn_wrapper", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "unknown", ":", "torch", ".", "Tensor", ",", "known", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "\"\"\"\n        Find the three nearest neighbors of unknown in known\n        :param ctx:\n        :param unknown: (B, N, 3)\n        :param known: (B, M, 3)\n        :return:\n            dist: (B, N, 3) l2 distance to the three nearest neighbors\n            idx: (B, N, 3) index of 3 nearest neighbors\n        \"\"\"", "\n", "assert", "unknown", ".", "is_contiguous", "(", ")", "\n", "assert", "known", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "N", ",", "_", "=", "unknown", ".", "size", "(", ")", "\n", "m", "=", "known", ".", "size", "(", "1", ")", "\n", "dist2", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "N", ",", "3", ")", "\n", "idx", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "B", ",", "N", ",", "3", ")", "\n", "\n", "pointnet2", ".", "three_nn_wrapper", "(", "B", ",", "N", ",", "m", ",", "unknown", ",", "known", ",", "dist2", ",", "idx", ")", "\n", "return", "torch", ".", "sqrt", "(", "dist2", ")", ",", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.ThreeNN.backward": [[100, 103], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "a", "=", "None", ",", "b", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.ThreeInterpolate.forward": [[110, 132], ["features.is_contiguous", "idx.is_contiguous", "weight.is_contiguous", "features.size", "idx.size", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "pointnet2_batch_cuda.three_interpolate_wrapper"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ":", "torch", ".", "Tensor", ",", "idx", ":", "torch", ".", "Tensor", ",", "weight", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        Performs weight linear interpolation on 3 features\n        :param ctx:\n        :param features: (B, C, M) Features descriptors to be interpolated from\n        :param idx: (B, n, 3) three nearest neighbors of the target features in features\n        :param weight: (B, n, 3) weights\n        :return:\n            output: (B, C, N) tensor of the interpolated features\n        \"\"\"", "\n", "assert", "features", ".", "is_contiguous", "(", ")", "\n", "assert", "idx", ".", "is_contiguous", "(", ")", "\n", "assert", "weight", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "c", ",", "m", "=", "features", ".", "size", "(", ")", "\n", "n", "=", "idx", ".", "size", "(", "1", ")", "\n", "ctx", ".", "three_interpolate_for_backward", "=", "(", "idx", ",", "weight", ",", "m", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "c", ",", "n", ")", "\n", "\n", "pointnet2", ".", "three_interpolate_wrapper", "(", "B", ",", "c", ",", "m", ",", "n", ",", "features", ",", "idx", ",", "weight", ",", "output", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.ThreeInterpolate.backward": [[133, 151], ["grad_out.size", "torch.autograd.Variable", "torch.autograd.Variable", "grad_out.data.contiguous", "pointnet2_batch_cuda.three_interpolate_grad_wrapper", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param grad_out: (B, C, N) tensor with gradients of outputs\n        :return:\n            grad_features: (B, C, M) tensor with gradients of features\n            None:\n            None:\n        \"\"\"", "\n", "idx", ",", "weight", ",", "m", "=", "ctx", ".", "three_interpolate_for_backward", "\n", "B", ",", "c", ",", "n", "=", "grad_out", ".", "size", "(", ")", "\n", "\n", "grad_features", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "c", ",", "m", ")", ".", "zero_", "(", ")", ")", "\n", "grad_out_data", "=", "grad_out", ".", "data", ".", "contiguous", "(", ")", "\n", "\n", "pointnet2", ".", "three_interpolate_grad_wrapper", "(", "B", ",", "c", ",", "n", ",", "m", ",", "grad_out_data", ",", "idx", ",", "weight", ",", "grad_features", ".", "data", ")", "\n", "return", "grad_features", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.GroupingOperation.forward": [[158, 178], ["features.is_contiguous", "idx.is_contiguous", "idx.size", "features.size", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "pointnet2_batch_cuda.group_points_wrapper"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ":", "torch", ".", "Tensor", ",", "idx", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param features: (B, C, N) tensor of features to group\n        :param idx: (B, npoint, nsample) tensor containing the indicies of features to group with\n        :return:\n            output: (B, C, npoint, nsample) tensor\n        \"\"\"", "\n", "assert", "features", ".", "is_contiguous", "(", ")", "\n", "assert", "idx", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "nfeatures", ",", "nsample", "=", "idx", ".", "size", "(", ")", "\n", "_", ",", "C", ",", "N", "=", "features", ".", "size", "(", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "nfeatures", ",", "nsample", ")", "\n", "\n", "pointnet2", ".", "group_points_wrapper", "(", "B", ",", "C", ",", "N", ",", "nfeatures", ",", "nsample", ",", "features", ",", "idx", ",", "output", ")", "\n", "\n", "ctx", ".", "for_backwards", "=", "(", "idx", ",", "N", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.GroupingOperation.backward": [[179, 195], ["grad_out.size", "torch.autograd.Variable", "torch.autograd.Variable", "grad_out.data.contiguous", "pointnet2_batch_cuda.group_points_grad_wrapper", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param grad_out: (B, C, npoint, nsample) tensor of the gradients of the output from forward\n        :return:\n            grad_features: (B, C, N) gradient of the features\n        \"\"\"", "\n", "idx", ",", "N", "=", "ctx", ".", "for_backwards", "\n", "\n", "B", ",", "C", ",", "npoint", ",", "nsample", "=", "grad_out", ".", "size", "(", ")", "\n", "grad_features", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "N", ")", ".", "zero_", "(", ")", ")", "\n", "\n", "grad_out_data", "=", "grad_out", ".", "data", ".", "contiguous", "(", ")", "\n", "pointnet2", ".", "group_points_grad_wrapper", "(", "B", ",", "C", ",", "N", ",", "npoint", ",", "nsample", ",", "grad_out_data", ",", "idx", ",", "grad_features", ".", "data", ")", "\n", "return", "grad_features", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.BallQuery.forward": [[202, 222], ["new_xyz.is_contiguous", "xyz.is_contiguous", "xyz.size", "new_xyz.size", "torch.cuda.IntTensor().zero_", "torch.cuda.IntTensor().zero_", "torch.cuda.IntTensor().zero_", "torch.cuda.IntTensor().zero_", "pointnet2_batch_cuda.ball_query_wrapper", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "radius", ":", "float", ",", "nsample", ":", "int", ",", "xyz", ":", "torch", ".", "Tensor", ",", "new_xyz", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param radius: float, radius of the balls\n        :param nsample: int, maximum number of features in the balls\n        :param xyz: (B, N, 3) xyz coordinates of the features\n        :param new_xyz: (B, npoint, 3) centers of the ball query\n        :return:\n            idx: (B, npoint, nsample) tensor with the indicies of the features that form the query balls\n        \"\"\"", "\n", "assert", "new_xyz", ".", "is_contiguous", "(", ")", "\n", "assert", "xyz", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "N", ",", "_", "=", "xyz", ".", "size", "(", ")", "\n", "npoint", "=", "new_xyz", ".", "size", "(", "1", ")", "\n", "idx", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "B", ",", "npoint", ",", "nsample", ")", ".", "zero_", "(", ")", "\n", "\n", "pointnet2", ".", "ball_query_wrapper", "(", "B", ",", "N", ",", "npoint", ",", "radius", ",", "nsample", ",", "new_xyz", ",", "xyz", ",", "idx", ")", "\n", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.BallQuery.backward": [[223, 226], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "a", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.QueryAndGroup.__init__": [[232, 240], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "radius", ":", "float", ",", "nsample", ":", "int", ",", "use_xyz", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        :param radius: float, radius of ball\n        :param nsample: int, maximum number of features to gather in the ball\n        :param use_xyz:\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "radius", ",", "self", ".", "nsample", ",", "self", ".", "use_xyz", "=", "radius", ",", "nsample", ",", "use_xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.QueryAndGroup.forward": [[241, 265], ["ball_query", "xyz.transpose().contiguous", "grouping_operation", "new_xyz.transpose().unsqueeze", "grouping_operation", "xyz.transpose", "new_xyz.transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "new_xyz", ":", "torch", ".", "Tensor", ",", "features", ":", "torch", ".", "Tensor", "=", "None", ")", "->", "Tuple", "[", "torch", ".", "Tensor", "]", ":", "\n", "        ", "\"\"\"\n        :param xyz: (B, N, 3) xyz coordinates of the features\n        :param new_xyz: (B, npoint, 3) centroids\n        :param features: (B, C, N) descriptors of the features\n        :return:\n            new_features: (B, 3 + C, npoint, nsample)\n        \"\"\"", "\n", "idx", "=", "ball_query", "(", "self", ".", "radius", ",", "self", ".", "nsample", ",", "xyz", ",", "new_xyz", ")", "\n", "xyz_trans", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "grouped_xyz", "=", "grouping_operation", "(", "xyz_trans", ",", "idx", ")", "# (B, 3, npoint, nsample)", "\n", "grouped_xyz", "-=", "new_xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "if", "features", "is", "not", "None", ":", "\n", "            ", "grouped_features", "=", "grouping_operation", "(", "features", ",", "idx", ")", "\n", "if", "self", ".", "use_xyz", ":", "\n", "                ", "new_features", "=", "torch", ".", "cat", "(", "[", "grouped_xyz", ",", "grouped_features", "]", ",", "dim", "=", "1", ")", "# (B, C + 3, npoint, nsample)", "\n", "", "else", ":", "\n", "                ", "new_features", "=", "grouped_features", "\n", "", "", "else", ":", "\n", "            ", "assert", "self", ".", "use_xyz", ",", "\"Cannot have not features and not use xyz as a feature!\"", "\n", "new_features", "=", "grouped_xyz", "\n", "\n", "", "return", "new_features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.GroupAll.__init__": [[268, 271], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_xyz", ":", "bool", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_xyz", "=", "use_xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_batch.pointnet2_utils.GroupAll.forward": [[272, 291], ["xyz.transpose().unsqueeze", "features.unsqueeze", "xyz.transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "new_xyz", ":", "torch", ".", "Tensor", ",", "features", ":", "torch", ".", "Tensor", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param xyz: (B, N, 3) xyz coordinates of the features\n        :param new_xyz: ignored\n        :param features: (B, C, N) descriptors of the features\n        :return:\n            new_features: (B, C + 3, 1, N)\n        \"\"\"", "\n", "grouped_xyz", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "2", ")", "\n", "if", "features", "is", "not", "None", ":", "\n", "            ", "grouped_features", "=", "features", ".", "unsqueeze", "(", "2", ")", "\n", "if", "self", ".", "use_xyz", ":", "\n", "                ", "new_features", "=", "torch", ".", "cat", "(", "[", "grouped_xyz", ",", "grouped_features", "]", ",", "dim", "=", "1", ")", "# (B, 3 + C, 1, N)", "\n", "", "else", ":", "\n", "                ", "new_features", "=", "grouped_features", "\n", "", "", "else", ":", "\n", "            ", "new_features", "=", "grouped_xyz", "\n", "\n", "", "return", "new_features", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_modules.StackSAModuleMSG.__init__": [[12, 47], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "pointnet2_modules.StackSAModuleMSG.init_weights", "len", "len", "len", "len", "pointnet2_modules.StackSAModuleMSG.groupers.append", "range", "pointnet2_modules.StackSAModuleMSG.mlps.append", "pointnet2_utils.QueryAndGroup", "shared_mlps.extend", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.SingleHead.init_weights"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "npoint", "=", "None", "\n", "self", ".", "groupers", "=", "None", "\n", "self", ".", "mlps", "=", "None", "\n", "self", ".", "pool_method", "=", "'max_pool'", "\n", "\n", "", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "features", ":", "torch", ".", "Tensor", "=", "None", ",", "new_xyz", "=", "None", ")", "->", "(", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        :param xyz: (B, N, 3) tensor of the xyz coordinates of the features\n        :param features: (B, N, C) tensor of the descriptors of the the features\n        :param new_xyz:\n        :return:\n            new_xyz: (B, npoint, 3) tensor of the new features' xyz\n            new_features: (B, npoint, \\sum_k(mlps[k][-1])) tensor of the new_features descriptors\n        \"\"\"", "\n", "new_features_list", "=", "[", "]", "\n", "\n", "xyz_flipped", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "if", "new_xyz", "is", "None", ":", "\n", "            ", "new_xyz", "=", "pointnet2_utils", ".", "gather_operation", "(", "\n", "xyz_flipped", ",", "\n", "pointnet2_utils", ".", "furthest_point_sample", "(", "xyz", ",", "self", ".", "npoint", ")", "\n", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "if", "self", ".", "npoint", "is", "not", "None", "else", "None", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "groupers", ")", ")", ":", "\n", "            ", "new_features", "=", "self", ".", "groupers", "[", "i", "]", "(", "xyz", ",", "new_xyz", ",", "features", ")", "# (B, C, npoint, nsample)", "\n", "\n", "new_features", "=", "self", ".", "mlps", "[", "i", "]", "(", "new_features", ")", "# (B, mlp[-1], npoint, nsample)", "\n", "if", "self", ".", "pool_method", "==", "'max_pool'", ":", "\n", "                ", "new_features", "=", "F", ".", "max_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], npoint, 1)", "\n", "", "elif", "self", ".", "pool_method", "==", "'avg_pool'", ":", "\n", "                ", "new_features", "=", "F", ".", "avg_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_modules.StackSAModuleMSG.init_weights": [[48, 57], ["pointnet2_modules.StackSAModuleMSG.modules", "isinstance", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], [")", "# (B, mlp[-1], npoint, 1)", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "new_features", "=", "new_features", ".", "squeeze", "(", "-", "1", ")", "# (B, mlp[-1], npoint)", "\n", "new_features_list", ".", "append", "(", "new_features", ")", "\n", "\n", "", "return", "new_xyz", ",", "torch", ".", "cat", "(", "new_features_list", ",", "dim", "=", "1", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_modules.StackSAModuleMSG.forward": [[58, 93], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "torch.avg_pool2d().squeeze.permute().unsqueeze", "torch.avg_pool2d().squeeze.squeeze().permute", "new_features_list.append", "torch.max_pool2d().squeeze", "torch.max_pool2d().squeeze", "torch.max_pool2d().squeeze", "torch.avg_pool2d().squeeze.permute", "torch.avg_pool2d().squeeze", "torch.avg_pool2d().squeeze", "torch.avg_pool2d().squeeze", "torch.avg_pool2d().squeeze.squeeze", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d().squeeze.size", "torch.avg_pool2d().squeeze.size"], "methods", ["None"], ["", "", "class", "PointnetSAModuleMSG", "(", "_PointnetSAModuleBase", ")", ":", "\n", "    ", "\"\"\"Pointnet set abstraction layer with multiscale grouping\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "*", ",", "npoint", ":", "int", ",", "radii", ":", "List", "[", "float", "]", ",", "nsamples", ":", "List", "[", "int", "]", ",", "mlps", ":", "List", "[", "List", "[", "int", "]", "]", ",", "bn", ":", "bool", "=", "True", ",", "\n", "use_xyz", ":", "bool", "=", "True", ",", "pool_method", "=", "'max_pool'", ")", ":", "\n", "        ", "\"\"\"\n        :param npoint: int\n        :param radii: list of float, list of radii to group with\n        :param nsamples: list of int, number of samples in each ball query\n        :param mlps: list of list of int, spec of the pointnet before the global pooling for each scale\n        :param bn: whether to use batchnorm\n        :param use_xyz:\n        :param pool_method: max_pool / avg_pool\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "len", "(", "radii", ")", "==", "len", "(", "nsamples", ")", "==", "len", "(", "mlps", ")", "\n", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "groupers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlps", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "radii", ")", ")", ":", "\n", "            ", "radius", "=", "radii", "[", "i", "]", "\n", "nsample", "=", "nsamples", "[", "i", "]", "\n", "self", ".", "groupers", ".", "append", "(", "\n", "pointnet2_utils", ".", "QueryAndGroup", "(", "radius", ",", "nsample", ",", "use_xyz", "=", "use_xyz", ")", "\n", "if", "npoint", "is", "not", "None", "else", "pointnet2_utils", ".", "GroupAll", "(", "use_xyz", ")", "\n", ")", "\n", "mlp_spec", "=", "mlps", "[", "i", "]", "\n", "if", "use_xyz", ":", "\n", "                ", "mlp_spec", "[", "0", "]", "+=", "3", "\n", "\n", "", "shared_mlps", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "mlp_spec", ")", "-", "1", ")", ":", "\n", "                ", "shared_mlps", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "mlp_spec", "[", "k", "]", ",", "mlp_spec", "[", "k", "+", "1", "]", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_modules.StackPointnetFPModule.__init__": [[96, 110], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "shared_mlps.extend", "len", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["]", ")", "\n", "", "self", ".", "mlps", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "shared_mlps", ")", ")", "\n", "\n", "", "self", ".", "pool_method", "=", "pool_method", "\n", "\n", "\n", "", "", "class", "PointnetSAModule", "(", "PointnetSAModuleMSG", ")", ":", "\n", "    ", "\"\"\"Pointnet set abstraction layer\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "*", ",", "mlp", ":", "List", "[", "int", "]", ",", "npoint", ":", "int", "=", "None", ",", "radius", ":", "float", "=", "None", ",", "nsample", ":", "int", "=", "None", ",", "\n", "bn", ":", "bool", "=", "True", ",", "use_xyz", ":", "bool", "=", "True", ",", "pool_method", "=", "'max_pool'", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_modules.StackPointnetFPModule.forward": [[111, 138], ["pointnet2_utils.three_nn", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "pointnet2_utils.three_interpolate", "pointnet2_modules.StackPointnetFPModule.mlp", "torch.cat.squeeze().squeeze().permute", "torch.cat.squeeze().squeeze().permute", "torch.cat.squeeze().squeeze().permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.permute", "torch.cat.permute", "torch.cat.permute", "torch.cat.squeeze().squeeze", "torch.cat.squeeze().squeeze", "torch.cat.squeeze().squeeze", "torch.cat.squeeze", "torch.cat.squeeze", "torch.cat.squeeze"], "methods", ["None"], ["\n", "super", "(", ")", ".", "__init__", "(", "\n", "mlps", "=", "[", "mlp", "]", ",", "npoint", "=", "npoint", ",", "radii", "=", "[", "radius", "]", ",", "nsamples", "=", "[", "nsample", "]", ",", "bn", "=", "bn", ",", "use_xyz", "=", "use_xyz", ",", "\n", "pool_method", "=", "pool_method", "\n", ")", "\n", "\n", "\n", "", "", "class", "PointnetFPModule", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "r\"\"\"Propigates the features of one set to another\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "*", ",", "mlp", ":", "List", "[", "int", "]", ",", "bn", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        :param mlp: list of int\n        :param bn: whether to use batchnorm\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "shared_mlps", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "mlp", ")", "-", "1", ")", ":", "\n", "            ", "shared_mlps", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "mlp", "[", "k", "]", ",", "mlp", "[", "k", "+", "1", "]", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "mlp", "[", "k", "+", "1", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.BallQuery.forward": [[10, 39], ["new_xyz.is_contiguous", "new_xyz_batch_cnt.is_contiguous", "xyz.is_contiguous", "xyz_batch_cnt.is_contiguous", "torch.cuda.IntTensor().zero_", "torch.cuda.IntTensor().zero_", "torch.cuda.IntTensor().zero_", "torch.cuda.IntTensor().zero_", "pointnet2_stack_cuda.ball_query_wrapper", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor"], "methods", ["None"], ["class", "FurthestPointSampling", "(", "Function", ")", ":", "\n", "    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "xyz", ":", "torch", ".", "Tensor", ",", "npoint", ":", "int", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        Uses iterative furthest point sampling to select a set of npoint features that have the largest\n        minimum distance\n        :param ctx:\n        :param xyz: (B, N, 3) where N > npoint\n        :param npoint: int, number of features in the sampled set\n        :return:\n             output: (B, npoint) tensor containing the set\n        \"\"\"", "\n", "assert", "xyz", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "N", ",", "_", "=", "xyz", ".", "size", "(", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "B", ",", "npoint", ")", "\n", "temp", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "N", ")", ".", "fill_", "(", "1e10", ")", "\n", "\n", "pointnet2", ".", "furthest_point_sampling_wrapper", "(", "B", ",", "N", ",", "npoint", ",", "xyz", ",", "temp", ",", "output", ")", "\n", "return", "output", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "xyz", ",", "a", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", "\n", "\n", "\n", "", "", "furthest_point_sample", "=", "FurthestPointSampling", ".", "apply", "\n", "\n", "\n", "class", "GatherOperation", "(", "Function", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.BallQuery.backward": [[40, 43], ["None"], "methods", ["None"], ["\n", "    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ":", "torch", ".", "Tensor", ",", "idx", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.GroupingOperation.forward": [[50, 83], ["features.is_contiguous", "features_batch_cnt.is_contiguous", "idx.is_contiguous", "idx_batch_cnt.is_contiguous", "idx.size", "features.size", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "pointnet2_stack_cuda.group_points_wrapper", "features_batch_cnt.sum", "idx_batch_cnt.sum", "str", "str", "str", "str"], "methods", ["None"], ["assert", "features", ".", "is_contiguous", "(", ")", "\n", "assert", "idx", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "npoint", "=", "idx", ".", "size", "(", ")", "\n", "_", ",", "C", ",", "N", "=", "features", ".", "size", "(", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "npoint", ")", "\n", "\n", "pointnet2", ".", "gather_points_wrapper", "(", "B", ",", "C", ",", "N", ",", "npoint", ",", "features", ",", "idx", ",", "output", ")", "\n", "\n", "ctx", ".", "for_backwards", "=", "(", "idx", ",", "C", ",", "N", ")", "\n", "return", "output", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ")", ":", "\n", "        ", "idx", ",", "C", ",", "N", "=", "ctx", ".", "for_backwards", "\n", "B", ",", "npoint", "=", "idx", ".", "size", "(", ")", "\n", "\n", "grad_features", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "N", ")", ".", "zero_", "(", ")", ")", "\n", "grad_out_data", "=", "grad_out", ".", "data", ".", "contiguous", "(", ")", "\n", "pointnet2", ".", "gather_points_grad_wrapper", "(", "B", ",", "C", ",", "N", ",", "npoint", ",", "grad_out_data", ",", "idx", ",", "grad_features", ".", "data", ")", "\n", "return", "grad_features", ",", "None", "\n", "\n", "\n", "", "", "gather_operation", "=", "GatherOperation", ".", "apply", "\n", "\n", "\n", "class", "ThreeNN", "(", "Function", ")", ":", "\n", "\n", "    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "unknown", ":", "torch", ".", "Tensor", ",", "known", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.GroupingOperation.backward": [[84, 103], ["grad_out.size", "torch.autograd.Variable", "torch.autograd.Variable", "grad_out.data.contiguous", "pointnet2_stack_cuda.group_points_grad_wrapper", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor"], "methods", ["None"], ["\n", "assert", "unknown", ".", "is_contiguous", "(", ")", "\n", "assert", "known", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "N", ",", "_", "=", "unknown", ".", "size", "(", ")", "\n", "m", "=", "known", ".", "size", "(", "1", ")", "\n", "dist2", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "N", ",", "3", ")", "\n", "idx", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "B", ",", "N", ",", "3", ")", "\n", "\n", "pointnet2", ".", "three_nn_wrapper", "(", "B", ",", "N", ",", "m", ",", "unknown", ",", "known", ",", "dist2", ",", "idx", ")", "\n", "return", "torch", ".", "sqrt", "(", "dist2", ")", ",", "idx", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "a", "=", "None", ",", "b", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.QueryAndGroup.__init__": [[109, 118], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["\n", "    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ":", "torch", ".", "Tensor", ",", "idx", ":", "torch", ".", "Tensor", ",", "weight", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.QueryAndGroup.forward": [[119, 156], ["ball_query", "grouping_operation", "new_xyz.unsqueeze", "xyz_batch_cnt.sum", "new_xyz_batch_cnt.sum", "grouping_operation", "str", "str", "str", "str", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["\n", "assert", "features", ".", "is_contiguous", "(", ")", "\n", "assert", "idx", ".", "is_contiguous", "(", ")", "\n", "assert", "weight", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "c", ",", "m", "=", "features", ".", "size", "(", ")", "\n", "n", "=", "idx", ".", "size", "(", "1", ")", "\n", "ctx", ".", "three_interpolate_for_backward", "=", "(", "idx", ",", "weight", ",", "m", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "c", ",", "n", ")", "\n", "\n", "pointnet2", ".", "three_interpolate_wrapper", "(", "B", ",", "c", ",", "m", ",", "n", ",", "features", ",", "idx", ",", "weight", ",", "output", ")", "\n", "return", "output", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param grad_out: (B, C, N) tensor with gradients of outputs\n        :return:\n            grad_features: (B, C, M) tensor with gradients of features\n            None:\n            None:\n        \"\"\"", "\n", "idx", ",", "weight", ",", "m", "=", "ctx", ".", "three_interpolate_for_backward", "\n", "B", ",", "c", ",", "n", "=", "grad_out", ".", "size", "(", ")", "\n", "\n", "grad_features", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "c", ",", "m", ")", ".", "zero_", "(", ")", ")", "\n", "grad_out_data", "=", "grad_out", ".", "data", ".", "contiguous", "(", ")", "\n", "\n", "pointnet2", ".", "three_interpolate_grad_wrapper", "(", "B", ",", "c", ",", "n", ",", "m", ",", "grad_out_data", ",", "idx", ",", "weight", ",", "grad_features", ".", "data", ")", "\n", "return", "grad_features", ",", "None", ",", "None", "\n", "\n", "\n", "", "", "three_interpolate", "=", "ThreeInterpolate", ".", "apply", "\n", "\n", "\n", "class", "GroupingOperation", "(", "Function", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.FurthestPointSampling.forward": [[159, 178], ["xyz.is_contiguous", "xyz.size", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.IntTensor", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "pointnet2_stack_cuda.furthest_point_sampling_wrapper", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor"], "methods", ["None"], ["def", "forward", "(", "ctx", ",", "features", ":", "torch", ".", "Tensor", ",", "idx", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param features: (B, C, N) tensor of features to group\n        :param idx: (B, npoint, nsample) tensor containing the indicies of features to group with\n        :return:\n            output: (B, C, npoint, nsample) tensor\n        \"\"\"", "\n", "assert", "features", ".", "is_contiguous", "(", ")", "\n", "assert", "idx", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "nfeatures", ",", "nsample", "=", "idx", ".", "size", "(", ")", "\n", "_", ",", "C", ",", "N", "=", "features", ".", "size", "(", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "nfeatures", ",", "nsample", ")", "\n", "\n", "pointnet2", ".", "group_points_wrapper", "(", "B", ",", "C", ",", "N", ",", "nfeatures", ",", "nsample", ",", "features", ",", "idx", ",", "output", ")", "\n", "\n", "ctx", ".", "for_backwards", "=", "(", "idx", ",", "N", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.FurthestPointSampling.backward": [[179, 182], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.ThreeNN.forward": [[188, 214], ["unknown.new_zeros", "unknown_batch_cnt.new_zeros().int", "pointnet2_stack_cuda.three_nn_wrapper", "unknown_batch_cnt.__len__", "known_batch_cnt.__len__", "unknown.contiguous", "unknown_batch_cnt.contiguous", "known.contiguous", "known_batch_cnt.contiguous", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "unknown.shape.__len__", "known.shape.__len__", "unknown_batch_cnt.new_zeros"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["\n", "B", ",", "C", ",", "npoint", ",", "nsample", "=", "grad_out", ".", "size", "(", ")", "\n", "grad_features", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "N", ")", ".", "zero_", "(", ")", ")", "\n", "\n", "grad_out_data", "=", "grad_out", ".", "data", ".", "contiguous", "(", ")", "\n", "pointnet2", ".", "group_points_grad_wrapper", "(", "B", ",", "C", ",", "N", ",", "npoint", ",", "nsample", ",", "grad_out_data", ",", "idx", ",", "grad_features", ".", "data", ")", "\n", "return", "grad_features", ",", "None", "\n", "\n", "\n", "", "", "grouping_operation", "=", "GroupingOperation", ".", "apply", "\n", "\n", "\n", "class", "BallQuery", "(", "Function", ")", ":", "\n", "\n", "    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "radius", ":", "float", ",", "nsample", ":", "int", ",", "xyz", ":", "torch", ".", "Tensor", ",", "new_xyz", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param radius: float, radius of the balls\n        :param nsample: int, maximum number of features in the balls\n        :param xyz: (B, N, 3) xyz coordinates of the features\n        :param new_xyz: (B, npoint, 3) centers of the ball query\n        :return:\n            idx: (B, npoint, nsample) tensor with the indicies of the features that form the query balls\n        \"\"\"", "\n", "assert", "new_xyz", ".", "is_contiguous", "(", ")", "\n", "assert", "xyz", ".", "is_contiguous", "(", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.ThreeNN.backward": [[215, 218], ["None"], "methods", ["None"], ["\n", "B", ",", "N", ",", "_", "=", "xyz", ".", "size", "(", ")", "\n", "npoint", "=", "new_xyz", ".", "size", "(", "1", ")", "\n", "idx", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "B", ",", "npoint", ",", "nsample", ")", ".", "zero_", "(", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.ThreeInterpolate.forward": [[225, 243], ["features.new_zeros", "pointnet2_stack_cuda.three_interpolate_wrapper", "features.contiguous", "idx.contiguous", "weight.contiguous"], "methods", ["None"], ["        ", "return", "None", ",", "None", ",", "None", ",", "None", "\n", "\n", "\n", "", "", "ball_query", "=", "BallQuery", ".", "apply", "\n", "\n", "\n", "class", "QueryAndGroup", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "radius", ":", "float", ",", "nsample", ":", "int", ",", "use_xyz", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        :param radius: float, radius of ball\n        :param nsample: int, maximum number of features to gather in the ball\n        :param use_xyz:\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "radius", ",", "self", ".", "nsample", ",", "self", ".", "use_xyz", "=", "radius", ",", "nsample", ",", "use_xyz", "\n", "\n", "", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "new_xyz", ":", "torch", ".", "Tensor", ",", "features", ":", "torch", ".", "Tensor", "=", "None", ")", "->", "Tuple", "[", "torch", ".", "Tensor", "]", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2_stack.pointnet2_utils.ThreeInterpolate.backward": [[244, 260], ["grad_out.new_zeros", "pointnet2_stack_cuda.three_interpolate_grad_wrapper", "grad_out.contiguous", "idx.contiguous", "weight.contiguous"], "methods", ["None"], ["\n", "idx", "=", "ball_query", "(", "self", ".", "radius", ",", "self", ".", "nsample", ",", "xyz", ",", "new_xyz", ")", "\n", "xyz_trans", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "grouped_xyz", "=", "grouping_operation", "(", "xyz_trans", ",", "idx", ")", "# (B, 3, npoint, nsample)", "\n", "grouped_xyz", "-=", "new_xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "if", "features", "is", "not", "None", ":", "\n", "            ", "grouped_features", "=", "grouping_operation", "(", "features", ",", "idx", ")", "\n", "if", "self", ".", "use_xyz", ":", "\n", "                ", "new_features", "=", "torch", ".", "cat", "(", "[", "grouped_xyz", ",", "grouped_features", "]", ",", "dim", "=", "1", ")", "# (B, C + 3, npoint, nsample)", "\n", "", "else", ":", "\n", "                ", "new_features", "=", "grouped_features", "\n", "", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.RoIAwarePool3d.__init__": [[45, 49], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_size", ",", "max_pts_each_voxel", "=", "128", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out_size", "=", "out_size", "\n", "self", ".", "max_pts_each_voxel", "=", "max_pts_each_voxel", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.RoIAwarePool3d.forward": [[50, 53], ["RoIAwarePool3dFunction.apply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "rois", ",", "pts", ",", "pts_feature", ",", "pool_method", "=", "'max'", ")", ":", "\n", "        ", "assert", "pool_method", "in", "[", "'max'", ",", "'avg'", "]", "\n", "return", "RoIAwarePool3dFunction", ".", "apply", "(", "rois", ",", "pts", ",", "pts_feature", ",", "self", ".", "out_size", ",", "self", ".", "max_pts_each_voxel", ",", "pool_method", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.RoIAwarePool3dFunction.forward": [[56, 94], ["isinstance", "pts_feature.new_zeros", "pts_feature.new_zeros", "pts_feature.new_zeros", "roiaware_pool3d_cuda.forward", "range", "len", "isinstance"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "rois", ",", "pts", ",", "pts_feature", ",", "out_size", ",", "max_pts_each_voxel", ",", "pool_method", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ctx:\n            rois: (N, 7) [x, y, z, dx, dy, dz, heading] (x, y, z) is the box center\n            pts: (npoints, 3)\n            pts_feature: (npoints, C)\n            out_size: int or tuple, like 7 or (7, 7, 7)\n            max_pts_each_voxel:\n            pool_method: 'max' or 'avg'\n\n        Returns:\n            pooled_features: (N, out_x, out_y, out_z, C)\n        \"\"\"", "\n", "assert", "rois", ".", "shape", "[", "1", "]", "==", "7", "and", "pts", ".", "shape", "[", "1", "]", "==", "3", "\n", "if", "isinstance", "(", "out_size", ",", "int", ")", ":", "\n", "            ", "out_x", "=", "out_y", "=", "out_z", "=", "out_size", "\n", "", "else", ":", "\n", "            ", "assert", "len", "(", "out_size", ")", "==", "3", "\n", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "                ", "assert", "isinstance", "(", "out_size", "[", "k", "]", ",", "int", ")", "\n", "", "out_x", ",", "out_y", ",", "out_z", "=", "out_size", "\n", "\n", "", "num_rois", "=", "rois", ".", "shape", "[", "0", "]", "\n", "num_channels", "=", "pts_feature", ".", "shape", "[", "-", "1", "]", "\n", "num_pts", "=", "pts", ".", "shape", "[", "0", "]", "\n", "\n", "pooled_features", "=", "pts_feature", ".", "new_zeros", "(", "(", "num_rois", ",", "out_x", ",", "out_y", ",", "out_z", ",", "num_channels", ")", ")", "\n", "argmax", "=", "pts_feature", ".", "new_zeros", "(", "(", "num_rois", ",", "out_x", ",", "out_y", ",", "out_z", ",", "num_channels", ")", ",", "dtype", "=", "torch", ".", "int", ")", "\n", "pts_idx_of_voxels", "=", "pts_feature", ".", "new_zeros", "(", "(", "num_rois", ",", "out_x", ",", "out_y", ",", "out_z", ",", "max_pts_each_voxel", ")", ",", "dtype", "=", "torch", ".", "int", ")", "\n", "\n", "pool_method_map", "=", "{", "'max'", ":", "0", ",", "'avg'", ":", "1", "}", "\n", "pool_method", "=", "pool_method_map", "[", "pool_method", "]", "\n", "roiaware_pool3d_cuda", ".", "forward", "(", "rois", ",", "pts", ",", "pts_feature", ",", "argmax", ",", "pts_idx_of_voxels", ",", "pooled_features", ",", "pool_method", ")", "\n", "\n", "ctx", ".", "roiaware_pool3d_for_backward", "=", "(", "pts_idx_of_voxels", ",", "argmax", ",", "pool_method", ",", "num_pts", ",", "num_channels", ")", "\n", "return", "pooled_features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.RoIAwarePool3dFunction.backward": [[95, 108], ["grad_out.new_zeros", "roiaware_pool3d_cuda.backward", "grad_out.contiguous"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.BallQuery.backward"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ")", ":", "\n", "        ", "\"\"\"\n        :param grad_out: (N, out_x, out_y, out_z, C)\n        :return:\n            grad_in: (npoints, C)\n        \"\"\"", "\n", "pts_idx_of_voxels", ",", "argmax", ",", "pool_method", ",", "num_pts", ",", "num_channels", "=", "ctx", ".", "roiaware_pool3d_for_backward", "\n", "\n", "grad_in", "=", "grad_out", ".", "new_zeros", "(", "(", "num_pts", ",", "num_channels", ")", ")", "\n", "roiaware_pool3d_cuda", ".", "backward", "(", "pts_idx_of_voxels", ",", "argmax", ",", "grad_out", ".", "contiguous", "(", ")", ",", "grad_in", ",", "pool_method", ")", "\n", "\n", "return", "None", ",", "None", ",", "grad_in", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_cpu": [[9, 26], ["utils.common_utils.check_numpy_to_torch", "utils.common_utils.check_numpy_to_torch", "points.new_zeros", "roiaware_pool3d_cuda.points_in_boxes_cpu", "boxes.float().contiguous", "points.float().contiguous", "points.new_zeros.numpy", "boxes.float", "points.float"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.check_numpy_to_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_cpu"], ["def", "points_in_boxes_cpu", "(", "points", ",", "boxes", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        points: (num_points, 3)\n        boxes: [x, y, z, dx, dy, dz, heading], (x, y, z) is the box center, each box DO NOT overlaps\n    Returns:\n        point_indices: (N, num_points)\n    \"\"\"", "\n", "assert", "boxes", ".", "shape", "[", "1", "]", "==", "7", "\n", "assert", "points", ".", "shape", "[", "1", "]", "==", "3", "\n", "points", ",", "is_numpy", "=", "common_utils", ".", "check_numpy_to_torch", "(", "points", ")", "\n", "boxes", ",", "is_numpy", "=", "common_utils", ".", "check_numpy_to_torch", "(", "boxes", ")", "\n", "\n", "point_indices", "=", "points", ".", "new_zeros", "(", "(", "boxes", ".", "shape", "[", "0", "]", ",", "points", ".", "shape", "[", "0", "]", ")", ",", "dtype", "=", "torch", ".", "int", ")", "\n", "roiaware_pool3d_cuda", ".", "points_in_boxes_cpu", "(", "boxes", ".", "float", "(", ")", ".", "contiguous", "(", ")", ",", "points", ".", "float", "(", ")", ".", "contiguous", "(", ")", ",", "point_indices", ")", "\n", "\n", "return", "point_indices", ".", "numpy", "(", ")", "if", "is_numpy", "else", "point_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu": [[28, 42], ["points.new_zeros().fill_", "roiaware_pool3d_cuda.points_in_boxes_gpu", "boxes.contiguous", "points.contiguous", "points.new_zeros"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu"], ["", "def", "points_in_boxes_gpu", "(", "points", ",", "boxes", ")", ":", "\n", "    ", "\"\"\"\n    :param points: (B, M, 3)\n    :param boxes: (B, T, 7), num_valid_boxes <= T\n    :return box_idxs_of_pts: (B, M), default background = -1\n    \"\"\"", "\n", "assert", "boxes", ".", "shape", "[", "0", "]", "==", "points", ".", "shape", "[", "0", "]", "\n", "assert", "boxes", ".", "shape", "[", "2", "]", "==", "7", "and", "points", ".", "shape", "[", "2", "]", "==", "3", "\n", "batch_size", ",", "num_points", ",", "_", "=", "points", ".", "shape", "\n", "\n", "box_idxs_of_pts", "=", "points", ".", "new_zeros", "(", "(", "batch_size", ",", "num_points", ")", ",", "dtype", "=", "torch", ".", "int", ")", ".", "fill_", "(", "-", "1", ")", "\n", "roiaware_pool3d_cuda", ".", "points_in_boxes_gpu", "(", "boxes", ".", "contiguous", "(", ")", ",", "points", ".", "contiguous", "(", ")", ",", "box_idxs_of_pts", ")", "\n", "\n", "return", "box_idxs_of_pts", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roipoint_pool3d.roipoint_pool3d_utils.RoIPointPool3d.__init__": [[10, 14], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_sampled_points", "=", "512", ",", "pool_extra_width", "=", "1.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_sampled_points", "=", "num_sampled_points", "\n", "self", ".", "pool_extra_width", "=", "pool_extra_width", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roipoint_pool3d.roipoint_pool3d_utils.RoIPointPool3d.forward": [[15, 28], ["RoIPointPool3dFunction.apply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "points", ",", "point_features", ",", "boxes3d", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            points: (B, N, 3)\n            point_features: (B, N, C)\n            boxes3d: (B, M, 7), [x, y, z, dx, dy, dz, heading]\n\n        Returns:\n            pooled_features: (B, M, 512, 3 + C)\n            pooled_empty_flag: (B, M)\n        \"\"\"", "\n", "return", "RoIPointPool3dFunction", ".", "apply", "(", "\n", "points", ",", "point_features", ",", "boxes3d", ",", "self", ".", "pool_extra_width", ",", "self", ".", "num_sampled_points", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roipoint_pool3d.roipoint_pool3d_utils.RoIPointPool3dFunction.forward": [[32, 60], ["utils.box_utils.enlarge_box3d().view", "point_features.new_zeros", "point_features.new_zeros().int", "roipoint_pool3d_cuda.forward", "points.contiguous", "utils.box_utils.enlarge_box3d().view.contiguous", "point_features.contiguous", "points.shape.__len__", "utils.box_utils.enlarge_box3d", "point_features.new_zeros", "boxes3d.view"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.enlarge_box3d"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "points", ",", "point_features", ",", "boxes3d", ",", "pool_extra_width", ",", "num_sampled_points", "=", "512", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ctx:\n            points: (B, N, 3)\n            point_features: (B, N, C)\n            boxes3d: (B, num_boxes, 7), [x, y, z, dx, dy, dz, heading]\n            pool_extra_width:\n            num_sampled_points:\n\n        Returns:\n            pooled_features: (B, num_boxes, 512, 3 + C)\n            pooled_empty_flag: (B, num_boxes)\n        \"\"\"", "\n", "assert", "points", ".", "shape", ".", "__len__", "(", ")", "==", "3", "and", "points", ".", "shape", "[", "2", "]", "==", "3", "\n", "batch_size", ",", "boxes_num", ",", "feature_len", "=", "points", ".", "shape", "[", "0", "]", ",", "boxes3d", ".", "shape", "[", "1", "]", ",", "point_features", ".", "shape", "[", "2", "]", "\n", "pooled_boxes3d", "=", "box_utils", ".", "enlarge_box3d", "(", "boxes3d", ".", "view", "(", "-", "1", ",", "7", ")", ",", "pool_extra_width", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "7", ")", "\n", "\n", "pooled_features", "=", "point_features", ".", "new_zeros", "(", "(", "batch_size", ",", "boxes_num", ",", "num_sampled_points", ",", "3", "+", "feature_len", ")", ")", "\n", "pooled_empty_flag", "=", "point_features", ".", "new_zeros", "(", "(", "batch_size", ",", "boxes_num", ")", ")", ".", "int", "(", ")", "\n", "\n", "roipoint_pool3d_cuda", ".", "forward", "(", "\n", "points", ".", "contiguous", "(", ")", ",", "pooled_boxes3d", ".", "contiguous", "(", ")", ",", "\n", "point_features", ".", "contiguous", "(", ")", ",", "pooled_features", ",", "pooled_empty_flag", "\n", ")", "\n", "\n", "return", "pooled_features", ",", "pooled_empty_flag", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roipoint_pool3d.roipoint_pool3d_utils.RoIPointPool3dFunction.backward": [[61, 64], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.build_network": [[9, 14], ["detectors.build_detector"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.__init__.build_detector"], ["\n", "\n", "def", "build_optimizer", "(", "model", ",", "optim_cfg", ")", ":", "\n", "    ", "if", "optim_cfg", ".", "OPTIMIZER", "==", "'adam'", ":", "\n", "        ", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "optim_cfg", ".", "LR", ",", "weight_decay", "=", "optim_cfg", ".", "WEIGHT_DECAY", ")", "\n", "", "elif", "optim_cfg", ".", "OPTIMIZER", "==", "'sgd'", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.load_data_to_gpu": [[16, 23], ["batch_dict.items", "torch.from_numpy().float().cuda", "isinstance", "torch.from_numpy().float", "torch.from_numpy"], "function", ["None"], ["model", ".", "parameters", "(", ")", ",", "lr", "=", "optim_cfg", ".", "LR", ",", "weight_decay", "=", "optim_cfg", ".", "WEIGHT_DECAY", ",", "\n", "momentum", "=", "optim_cfg", ".", "MOMENTUM", "\n", ")", "\n", "", "elif", "optim_cfg", ".", "OPTIMIZER", "==", "'adam_onecycle'", ":", "\n", "        ", "def", "children", "(", "m", ":", "nn", ".", "Module", ")", ":", "\n", "            ", "return", "list", "(", "m", ".", "children", "(", ")", ")", "\n", "\n", "", "def", "num_children", "(", "m", ":", "nn", ".", "Module", ")", "->", "int", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.model_fn_decorator": [[25, 41], ["collections.namedtuple", "__init__.load_data_to_gpu", "model", "ret_dict[].mean", "hasattr", "collections.namedtuple.", "model.update_global_step", "model.module.update_global_step"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.__init__.load_data_to_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.update_global_step", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.update_global_step"], ["\n", "", "flatten_model", "=", "lambda", "m", ":", "sum", "(", "map", "(", "flatten_model", ",", "m", ".", "children", "(", ")", ")", ",", "[", "]", ")", "if", "num_children", "(", "m", ")", "else", "[", "m", "]", "\n", "get_layer_groups", "=", "lambda", "m", ":", "[", "nn", ".", "Sequential", "(", "*", "flatten_model", "(", "m", ")", ")", "]", "\n", "\n", "optimizer_func", "=", "partial", "(", "optim", ".", "Adam", ",", "betas", "=", "(", "0.9", ",", "0.99", ")", ")", "\n", "optimizer", "=", "OptimWrapper", ".", "create", "(", "\n", "optimizer_func", ",", "3e-3", ",", "get_layer_groups", "(", "model", ")", ",", "wd", "=", "optim_cfg", ".", "WEIGHT_DECAY", ",", "true_wd", "=", "True", ",", "bn_wd", "=", "True", "\n", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "optimizer", "\n", "\n", "\n", "", "def", "build_scheduler", "(", "optimizer", ",", "total_iters_each_epoch", ",", "total_epochs", ",", "last_epoch", ",", "optim_cfg", ")", ":", "\n", "    ", "decay_steps", "=", "[", "x", "*", "total_iters_each_epoch", "for", "x", "in", "optim_cfg", ".", "DECAY_STEP_LIST", "]", "\n", "def", "lr_lbmd", "(", "cur_epoch", ")", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.backbone_module.Pointnet2Backbone.__init__": [[32, 73], ["torch.Module.__init__", "pointnet2_modules.PointnetSAModuleVotes", "pointnet2_modules.PointnetSAModuleVotes", "pointnet2_modules.PointnetSAModuleVotes", "pointnet2_modules.PointnetSAModuleVotes", "pointnet2_modules.PointnetFPModule", "pointnet2_modules.PointnetFPModule"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "input_feature_dim", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "sa1", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "2048", ",", "\n", "radius", "=", "0.2", ",", "\n", "nsample", "=", "64", ",", "\n", "mlp", "=", "[", "input_feature_dim", ",", "64", ",", "64", ",", "128", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "sa2", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "1024", ",", "\n", "radius", "=", "0.4", ",", "\n", "nsample", "=", "32", ",", "\n", "mlp", "=", "[", "128", ",", "128", ",", "128", ",", "256", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "sa3", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "512", ",", "\n", "radius", "=", "0.8", ",", "\n", "nsample", "=", "16", ",", "\n", "mlp", "=", "[", "256", ",", "128", ",", "128", ",", "256", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "sa4", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "256", ",", "\n", "radius", "=", "1.2", ",", "\n", "nsample", "=", "16", ",", "\n", "mlp", "=", "[", "256", ",", "128", ",", "128", ",", "256", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "fp1", "=", "PointnetFPModule", "(", "mlp", "=", "[", "256", "+", "256", ",", "256", ",", "256", "]", ")", "\n", "self", ".", "fp2", "=", "PointnetFPModule", "(", "mlp", "=", "[", "256", "+", "256", ",", "256", ",", "256", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.backbone_module.Pointnet2Backbone._break_up_pc": [[74, 82], ["pc[].contiguous", "pc[].transpose().contiguous", "pc.size", "pc[].transpose"], "methods", ["None"], ["", "def", "_break_up_pc", "(", "self", ",", "pc", ")", ":", "\n", "        ", "xyz", "=", "pc", "[", "...", ",", "0", ":", "3", "]", ".", "contiguous", "(", ")", "\n", "features", "=", "(", "\n", "pc", "[", "...", ",", "3", ":", "]", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "if", "pc", ".", "size", "(", "-", "1", ")", ">", "3", "else", "None", "\n", ")", "\n", "\n", "return", "xyz", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.backbone_module.Pointnet2Backbone.forward": [[83, 134], ["backbone_module.Pointnet2Backbone._break_up_pc", "backbone_module.Pointnet2Backbone.sa1", "backbone_module.Pointnet2Backbone.sa2", "backbone_module.Pointnet2Backbone.sa3", "backbone_module.Pointnet2Backbone.sa4", "backbone_module.Pointnet2Backbone.fp1", "backbone_module.Pointnet2Backbone.fp2"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.backbone_module.Pointnet2Backbone._break_up_pc"], ["", "def", "forward", "(", "self", ",", "pointcloud", ":", "torch", ".", "cuda", ".", "FloatTensor", ",", "end_points", "=", "None", ")", ":", "\n", "        ", "r\"\"\"\n            Forward pass of the network\n\n            Parameters\n            ----------\n            pointcloud: Variable(torch.cuda.FloatTensor)\n                (B, N, 3 + input_feature_dim) tensor\n                Point cloud to run predicts on\n                Each point in the point-cloud MUST\n                be formated as (x, y, z, features...)\n\n            Returns\n            ----------\n            end_points: {XXX_xyz, XXX_features, XXX_inds}\n                XXX_xyz: float32 Tensor of shape (B,K,3)\n                XXX_features: float32 Tensor of shape (B,K,D)\n                XXX-inds: int64 Tensor of shape (B,K) values in [0,N-1]\n        \"\"\"", "\n", "if", "not", "end_points", ":", "end_points", "=", "{", "}", "\n", "batch_size", "=", "pointcloud", ".", "shape", "[", "0", "]", "\n", "\n", "xyz", ",", "features", "=", "self", ".", "_break_up_pc", "(", "pointcloud", ")", "\n", "\n", "# --------- 4 SET ABSTRACTION LAYERS ---------", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa1", "(", "xyz", ",", "features", ")", "\n", "end_points", "[", "'sa1_inds'", "]", "=", "fps_inds", "\n", "end_points", "[", "'sa1_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa1_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa2", "(", "xyz", ",", "features", ")", "# this fps_inds is just 0,1,...,1023", "\n", "end_points", "[", "'sa2_inds'", "]", "=", "fps_inds", "\n", "end_points", "[", "'sa2_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa2_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa3", "(", "xyz", ",", "features", ")", "# this fps_inds is just 0,1,...,511", "\n", "end_points", "[", "'sa3_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa3_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa4", "(", "xyz", ",", "features", ")", "# this fps_inds is just 0,1,...,255", "\n", "end_points", "[", "'sa4_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa4_features'", "]", "=", "features", "\n", "\n", "# --------- 2 FEATURE UPSAMPLING LAYERS --------", "\n", "features", "=", "self", ".", "fp1", "(", "end_points", "[", "'sa3_xyz'", "]", ",", "end_points", "[", "'sa4_xyz'", "]", ",", "end_points", "[", "'sa3_features'", "]", ",", "end_points", "[", "'sa4_features'", "]", ")", "\n", "features", "=", "self", ".", "fp2", "(", "end_points", "[", "'sa2_xyz'", "]", ",", "end_points", "[", "'sa3_xyz'", "]", ",", "end_points", "[", "'sa2_features'", "]", ",", "features", ")", "\n", "end_points", "[", "'fp2_features'", "]", "=", "features", "\n", "end_points", "[", "'fp2_xyz'", "]", "=", "end_points", "[", "'sa2_xyz'", "]", "\n", "num_seed", "=", "end_points", "[", "'fp2_xyz'", "]", ".", "shape", "[", "1", "]", "\n", "end_points", "[", "'fp2_inds'", "]", "=", "end_points", "[", "'sa1_inds'", "]", "[", ":", ",", "0", ":", "num_seed", "]", "# indices among the entire input point clouds", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.voting_module.VotingModule.__init__": [[17, 37], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "vote_factor", ",", "seed_feature_dim", ")", ":", "\n", "        ", "\"\"\" Votes generation from seed point features.\n\n        Args:\n            vote_factor: int\n                number of votes generated from each seed point\n            seed_feature_dim: int\n                number of channels of seed point features\n            vote_feature_dim: int\n                number of channels of vote features\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vote_factor", "=", "vote_factor", "\n", "self", ".", "in_dim", "=", "seed_feature_dim", "\n", "self", ".", "out_dim", "=", "self", ".", "in_dim", "# due to residual feature, in_dim has to be == out_dim", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "in_dim", ",", "self", ".", "in_dim", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "in_dim", ",", "self", ".", "in_dim", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "in_dim", ",", "(", "3", "+", "self", ".", "out_dim", ")", "*", "self", ".", "vote_factor", ",", "1", ")", "\n", "self", ".", "bn1", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "self", ".", "in_dim", ")", "\n", "self", ".", "bn2", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "self", ".", "in_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.voting_module.VotingModule.forward": [[38, 66], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "voting_module.VotingModule.conv3", "net.transpose().view.transpose().view.transpose().view", "vote_xyz.contiguous().view.contiguous().view.contiguous().view", "vote_features.transpose().contiguous.transpose().contiguous.contiguous().view", "vote_features.transpose().contiguous.transpose().contiguous.transpose().contiguous", "voting_module.VotingModule.bn1", "voting_module.VotingModule.bn2", "seed_xyz.unsqueeze", "offset.contiguous", "seed_features.transpose().unsqueeze", "voting_module.VotingModule.conv1", "voting_module.VotingModule.conv2", "net.transpose().view.transpose().view.transpose", "vote_xyz.contiguous().view.contiguous().view.contiguous", "vote_features.transpose().contiguous.transpose().contiguous.contiguous", "vote_features.transpose().contiguous.transpose().contiguous.transpose", "seed_features.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "seed_xyz", ",", "seed_features", ")", ":", "\n", "        ", "\"\"\" Forward pass.\n\n        Arguments:\n            seed_xyz: (batch_size, num_seed, 3) Pytorch tensor\n            seed_features: (batch_size, feature_dim, num_seed) Pytorch tensor\n        Returns:\n            vote_xyz: (batch_size, num_seed*vote_factor, 3)\n            vote_features: (batch_size, vote_feature_dim, num_seed*vote_factor)\n        \"\"\"", "\n", "batch_size", "=", "seed_xyz", ".", "shape", "[", "0", "]", "\n", "num_seed", "=", "seed_xyz", ".", "shape", "[", "1", "]", "\n", "num_vote", "=", "num_seed", "*", "self", ".", "vote_factor", "\n", "net", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "seed_features", ")", ")", ")", "\n", "net", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "net", ")", ")", ")", "\n", "net", "=", "self", ".", "conv3", "(", "net", ")", "# (batch_size, (3+out_dim)*vote_factor, num_seed)", "\n", "\n", "net", "=", "net", ".", "transpose", "(", "2", ",", "1", ")", ".", "view", "(", "batch_size", ",", "num_seed", ",", "self", ".", "vote_factor", ",", "3", "+", "self", ".", "out_dim", ")", "\n", "offset", "=", "net", "[", ":", ",", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "vote_xyz", "=", "seed_xyz", ".", "unsqueeze", "(", "2", ")", "+", "offset", ".", "contiguous", "(", ")", "\n", "vote_xyz", "=", "vote_xyz", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "num_vote", ",", "3", ")", "\n", "\n", "residual_features", "=", "net", "[", ":", ",", ":", ",", ":", ",", "3", ":", "]", "# (batch_size, num_seed, vote_factor, out_dim)", "\n", "vote_features", "=", "seed_features", ".", "transpose", "(", "2", ",", "1", ")", ".", "unsqueeze", "(", "2", ")", "+", "residual_features", "\n", "vote_features", "=", "vote_features", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "num_vote", ",", "self", ".", "out_dim", ")", "\n", "vote_features", "=", "vote_features", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "vote_xyz", ",", "vote_features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_labeled.compute_vote_loss": [[28, 75], ["[].long", "torch.gather", "torch.gather", "[].long.view().expand", "torch.gather", "torch.gather", "seed_xyz.repeat", "vote_xyz.view", "torch.gather.view", "utils.nn_distance.nn_distance", "torch.min", "torch.min", "votes_dist.view.view", "torch.sum", "torch.sum", "[].long.view", "torch.sum", "torch.sum", "torch.gather.float", "torch.gather.float"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance"], ["def", "compute_vote_loss", "(", "end_points", ",", "supervised_inds", ")", ":", "\n", "    ", "\"\"\" Compute vote loss: Match predicted votes to GT votes.\n\n    Args:\n        end_points: dict (read-only)\n\n    Returns:\n        vote_loss: scalar Tensor\n\n    Overall idea:\n        If the seed point belongs to an object (votes_label_mask == 1),\n        then we require it to vote for the object center.\n\n        Each seed point may vote for multiple translations v1,v2,v3\n        A seed point may also be in the boxes of multiple objects:\n        o1,o2,o3 with corresponding GT votes c1,c2,c3\n\n        Then the loss for this seed point is:\n            min(d(v_i,c_j)) for i=1,2,3 and j=1,2,3\n    \"\"\"", "\n", "\n", "batch_size_supervised", "=", "supervised_inds", ".", "shape", "[", "0", "]", "\n", "\n", "# Load ground truth votes and assign them to seed points", "\n", "seed_xyz", "=", "end_points", "[", "'seed_xyz'", "]", "[", "supervised_inds", ",", "...", "]", "# B_l, num_seed, 3", "\n", "num_seed", "=", "seed_xyz", ".", "shape", "[", "1", "]", "\n", "vote_xyz", "=", "end_points", "[", "'vote_xyz'", "]", "[", "supervised_inds", ",", "...", "]", "# B_l,num_seed*vote_factor,3", "\n", "seed_inds", "=", "end_points", "[", "'seed_inds'", "]", "[", "supervised_inds", ",", "...", "]", ".", "long", "(", ")", "# B_l,num_seed in [0,num_points-1]", "\n", "vote_label_mask", "=", "end_points", "[", "'vote_label_mask'", "]", "# B, num_point", "\n", "vote_label", "=", "end_points", "[", "'vote_label'", "]", "# B, num_point, 9", "\n", "\n", "seed_gt_votes_mask", "=", "torch", ".", "gather", "(", "vote_label_mask", ",", "1", ",", "seed_inds", ")", "# B_l,num_seed", "\n", "seed_inds_expand", "=", "seed_inds", ".", "view", "(", "batch_size_supervised", ",", "num_seed", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", "*", "GT_VOTE_FACTOR", ")", "\n", "seed_gt_votes", "=", "torch", ".", "gather", "(", "vote_label", ",", "1", ",", "seed_inds_expand", ")", "# B_l,num_seed,9", "\n", "seed_gt_votes", "+=", "seed_xyz", ".", "repeat", "(", "1", ",", "1", ",", "3", ")", "\n", "\n", "vote_xyz_reshape", "=", "vote_xyz", ".", "view", "(", "batch_size_supervised", "*", "num_seed", ",", "-", "1", ",", "\n", "3", ")", "# from B_l,num_seed*vote_factor,3 to B_l*num_seed,vote_factor,3", "\n", "seed_gt_votes_reshape", "=", "seed_gt_votes", ".", "view", "(", "batch_size_supervised", "*", "num_seed", ",", "GT_VOTE_FACTOR", ",", "\n", "3", ")", "# from B_l,num_seed,3*GT_VOTE_FACTOR to B_l*num_seed,GT_VOTE_FACTOR,3", "\n", "# A predicted vote to no where is not penalized as long as there is a good vote near the GT vote.", "\n", "dist1", ",", "_", ",", "dist2", ",", "_", "=", "nn_distance", "(", "vote_xyz_reshape", ",", "seed_gt_votes_reshape", ",", "l1", "=", "True", ")", "\n", "votes_dist", ",", "_", "=", "torch", ".", "min", "(", "dist2", ",", "dim", "=", "1", ")", "# (B_l*num_seed,vote_factor) to (B_l*num_seed,)", "\n", "votes_dist", "=", "votes_dist", ".", "view", "(", "batch_size_supervised", ",", "num_seed", ")", "\n", "vote_loss", "=", "torch", ".", "sum", "(", "votes_dist", "*", "seed_gt_votes_mask", ".", "float", "(", ")", ")", "/", "(", "torch", ".", "sum", "(", "seed_gt_votes_mask", ".", "float", "(", ")", ")", "+", "1e-6", ")", "\n", "\n", "return", "vote_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_labeled.compute_objectness_loss": [[77, 124], ["utils.nn_distance.nn_distance", "torch.sqrt", "torch.sqrt", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.Tensor().cuda", "torch.Tensor().cuda", "objectness_scores.transpose", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.sum", "torch.sum", "torch.Tensor", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance"], ["", "def", "compute_objectness_loss", "(", "end_points", ",", "supervised_inds", ")", ":", "\n", "    ", "\"\"\" Compute objectness loss for the proposals.\n\n    Args:\n        end_points: dict (read-only)\n\n    Returns:\n        objectness_loss: scalar Tensor\n        objectness_label: (batch_size, num_seed) Tensor with value 0 or 1\n        objectness_mask: (batch_size, num_seed) Tensor with value 0 or 1\n        object_assignment: (batch_size, num_seed) Tensor with long int\n            within [0,num_gt_object-1]\n    \"\"\"", "\n", "\n", "# Associate proposal and GT objects by point-to-point distances", "\n", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "gt_center", "=", "end_points", "[", "'center_label'", "]", "[", "supervised_inds", ",", "...", "]", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "\n", "B", "=", "gt_center", ".", "shape", "[", "0", "]", "# B_l", "\n", "K", "=", "aggregated_vote_xyz", ".", "shape", "[", "1", "]", "\n", "\n", "# in case the placeholders get associated", "\n", "gt_mask", "=", "(", "1", "-", "end_points", "[", "'box_label_mask'", "]", "[", "supervised_inds", ",", "...", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "\n", "gt_center", "[", "gt_mask", "]", "=", "-", "1000", "\n", "\n", "dist1", ",", "ind1", ",", "dist2", ",", "_", "=", "nn_distance", "(", "aggregated_vote_xyz", ",", "gt_center", ")", "# dist1: B_l xK, dist2: B_l xK2", "\n", "\n", "# Generate objectness label and mask", "\n", "# objectness_label: 1 if pred object center is within NEAR_THRESHOLD of any GT object", "\n", "# objectness_mask: 0 if pred object center is in gray zone (DONOTCARE), 1 otherwise", "\n", "euclidean_dist1", "=", "torch", ".", "sqrt", "(", "dist1", "+", "1e-6", ")", "\n", "objectness_label", "=", "torch", ".", "zeros", "(", "(", "B", ",", "K", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "objectness_mask", "=", "torch", ".", "zeros", "(", "(", "B", ",", "K", ")", ")", ".", "cuda", "(", ")", "\n", "objectness_label", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", ">", "FAR_THRESHOLD", "]", "=", "1", "\n", "\n", "# Compute objectness loss", "\n", "objectness_scores", "=", "end_points", "[", "'objectness_scores'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "torch", ".", "Tensor", "(", "OBJECTNESS_CLS_WEIGHTS", ")", ".", "cuda", "(", ")", ",", "reduction", "=", "'none'", ")", "\n", "objectness_loss", "=", "criterion", "(", "objectness_scores", ".", "transpose", "(", "2", ",", "1", ")", ",", "objectness_label", ")", "\n", "objectness_loss", "=", "torch", ".", "sum", "(", "objectness_loss", "*", "objectness_mask", ")", "/", "(", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "\n", "# Set assignment", "\n", "object_assignment", "=", "ind1", "# (B_l ,K) with values in 0,1,...,K2-1", "\n", "\n", "return", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_labeled.compute_box_and_sem_cls_loss": [[126, 298], ["utils.nn_distance.nn_distance", "end_points[].float", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.gather", "torch.gather", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_.scatter_", "utils.nn_distance.huber_loss", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.gather", "torch.gather", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_.scatter_", "torch.cuda.FloatTensor().zero_.unsqueeze().repeat", "torch.sum", "torch.sum", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "models.loss_helper_iou.compute_iou_labels", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "[].transpose", "torch.sum", "torch.sum", "torch.gather.unsqueeze", "torch.sum", "torch.sum", "[].transpose", "torch.sum", "torch.sum", "object_assignment.unsqueeze().repeat", "torch.gather.unsqueeze", "utils.nn_distance.huber_loss", "torch.sum", "torch.sum", "[].transpose", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "end_points.keys", "torch.ones().cuda", "torch.ones().cuda", "dataset_config.class2angle_gpu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "utils.box_util.box3d_iou_batch_gpu", "jitter_iou_labels.detach.view().max", "torch.arange().cuda().unsqueeze().expand().contiguous().view", "torch.arange().cuda().unsqueeze().expand().contiguous().view", "jitter_iou_labels.detach.gather().view", "jitter_iou_labels.detach.detach", "jitter_object_assignment.gather().view.gather().view", "torch.gather", "torch.gather", "torch.abs", "torch.abs", "utils.nn_distance.huber_loss", "end_points.keys", "torch.abs", "torch.abs", "utils.nn_distance.huber_loss", "iou_loss.mean.mean", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor().zero_.unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "dataset_config.class2size_gpu", "torch.Sigmoid", "torch.gather().squeeze", "torch.gather().squeeze", "jitter_iou_pred.squeeze.squeeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.Sigmoid", "torch.gather", "torch.gather", "torch.gather().squeeze", "torch.gather().squeeze", "iou_pred.squeeze.squeeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "object_assignment.unsqueeze", "iou_labels.view", "torch.ones", "torch.ones", "jitter_iou_labels.detach.view", "torch.arange().cuda().unsqueeze().expand().contiguous", "torch.arange().cuda().unsqueeze().expand().contiguous", "jitter_iou_labels.detach.gather", "jitter_object_assignment.gather().view.gather", "torch.sum", "torch.sum", "jitter_iou_labels.detach.detach", "torch.sum", "torch.sum", "torch.ones", "torch.ones", "torch.sum", "torch.sum", "iou_labels.detach", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "[].argmax", "torch.gather", "torch.gather", "torch.abs.view", "torch.gather", "torch.gather", "torch.arange().cuda().unsqueeze().expand", "torch.arange().cuda().unsqueeze().expand", "torch.gather.unsqueeze", "torch.gather.unsqueeze", "torch.from_numpy", "torch.from_numpy", "mean_size_arr.astype", "torch.arange().cuda().unsqueeze", "torch.arange().cuda().unsqueeze", "torch.arange().cuda", "torch.arange().cuda", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_iou.compute_iou_labels", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou_batch_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size_gpu"], ["", "def", "compute_box_and_sem_cls_loss", "(", "end_points", ",", "supervised_inds", ",", "dataset_config", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Compute 3D bounding box and semantic classification loss.\n\n    Args:\n        end_points: dict (read-only)\n\n    Returns:\n        center_loss\n        heading_cls_loss\n        heading_reg_loss\n        size_cls_loss\n        size_reg_loss\n        sem_cls_loss\n    \"\"\"", "\n", "num_heading_bin", "=", "dataset_config", ".", "num_heading_bin", "\n", "num_size_cluster", "=", "dataset_config", ".", "num_size_cluster", "\n", "mean_size_arr", "=", "dataset_config", ".", "mean_size_arr", "\n", "\n", "object_assignment", "=", "end_points", "[", "'object_assignment'", "]", "\n", "batch_size", "=", "object_assignment", ".", "shape", "[", "0", "]", "\n", "\n", "# Compute center loss", "\n", "dist1", ",", "ind1", ",", "dist2", ",", "_", "=", "nn_distance", "(", "end_points", "[", "'center'", "]", "[", "supervised_inds", ",", "...", "]", ",", "\n", "end_points", "[", "'center_label'", "]", "[", "supervised_inds", ",", "...", "]", "[", ":", ",", ":", ",", "\n", "0", ":", "3", "]", ")", "# dist1: BxK, dist2: BxK2", "\n", "box_label_mask", "=", "end_points", "[", "'box_label_mask'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "objectness_label", "=", "end_points", "[", "'objectness_label'", "]", ".", "float", "(", ")", "\n", "centroid_reg_loss1", "=", "torch", ".", "sum", "(", "dist1", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "centroid_reg_loss2", "=", "torch", ".", "sum", "(", "dist2", "*", "box_label_mask", ")", "/", "(", "torch", ".", "sum", "(", "box_label_mask", ")", "+", "1e-6", ")", "\n", "center_loss", "=", "centroid_reg_loss1", "+", "centroid_reg_loss2", "\n", "\n", "# Compute heading loss", "\n", "heading_class_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_class_label'", "]", "[", "supervised_inds", ",", "...", "]", ",", "1", ",", "\n", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_heading_class", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "heading_class_loss", "=", "criterion_heading_class", "(", "end_points", "[", "'heading_scores'", "]", "[", "supervised_inds", ",", "...", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "\n", "heading_class_label", ")", "# (B,K)", "\n", "heading_class_loss", "=", "torch", ".", "sum", "(", "heading_class_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "heading_residual_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_residual_label'", "]", "[", "supervised_inds", ",", "...", "]", ",", "1", ",", "\n", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "heading_residual_normalized_label", "=", "heading_residual_label", "/", "(", "np", ".", "pi", "/", "num_heading_bin", ")", "\n", "\n", "# Ref: https://discuss.pytorch.org/t/convert-int-into-one-hot-format/507/3", "\n", "heading_label_one_hot", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "batch_size", ",", "heading_class_label", ".", "shape", "[", "1", "]", ",", "num_heading_bin", ")", ".", "zero_", "(", ")", "\n", "heading_label_one_hot", ".", "scatter_", "(", "2", ",", "heading_class_label", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "1", ")", "# src==1 so it's *one-hot* (B,K,num_heading_bin)", "\n", "heading_residual_normalized_loss", "=", "huber_loss", "(", "\n", "torch", ".", "sum", "(", "end_points", "[", "'heading_residuals_normalized'", "]", "[", "supervised_inds", ",", "...", "]", "*", "heading_label_one_hot", ",", "\n", "-", "1", ")", "-", "heading_residual_normalized_label", ",", "delta", "=", "1.0", ")", "# (B,K)", "\n", "heading_residual_normalized_loss", "=", "torch", ".", "sum", "(", "heading_residual_normalized_loss", "*", "objectness_label", ")", "/", "(", "\n", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "# Compute size loss", "\n", "size_class_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_class_label'", "]", "[", "supervised_inds", ",", "...", "]", ",", "1", ",", "\n", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_size_class", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "size_class_loss", "=", "criterion_size_class", "(", "end_points", "[", "'size_scores'", "]", "[", "supervised_inds", ",", "...", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "\n", "size_class_label", ")", "# (B,K)", "\n", "size_class_loss", "=", "torch", ".", "sum", "(", "size_class_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "size_residual_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_residual_label'", "]", "[", "supervised_inds", ",", "...", "]", ",", "1", ",", "\n", "object_assignment", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "3", ")", ")", "# select (B,K,3) from (B,K2,3)", "\n", "size_label_one_hot", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "batch_size", ",", "size_class_label", ".", "shape", "[", "1", "]", ",", "num_size_cluster", ")", ".", "zero_", "(", ")", "\n", "size_label_one_hot", ".", "scatter_", "(", "2", ",", "size_class_label", ".", "unsqueeze", "(", "-", "1", ")", ",", "1", ")", "# src==1 so it's *one-hot* (B,K,num_size_cluster)", "\n", "size_label_one_hot_tiled", "=", "size_label_one_hot", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", "# (B,K,num_size_cluster,3)", "\n", "predicted_size_residual_normalized", "=", "torch", ".", "sum", "(", "\n", "end_points", "[", "'size_residuals_normalized'", "]", "[", "supervised_inds", ",", "...", "]", "*", "size_label_one_hot_tiled", ",", "\n", "2", ")", "# (B,K,3)", "\n", "\n", "mean_size_arr_expanded", "=", "torch", ".", "from_numpy", "(", "mean_size_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "\n", "0", ")", "# (1,1,num_size_cluster,3)", "\n", "mean_size_label", "=", "torch", ".", "sum", "(", "size_label_one_hot_tiled", "*", "mean_size_arr_expanded", ",", "2", ")", "# (B,K,3)", "\n", "size_residual_label_normalized", "=", "size_residual_label", "/", "mean_size_label", "# (B,K,3)", "\n", "size_residual_normalized_loss", "=", "torch", ".", "mean", "(", "\n", "huber_loss", "(", "predicted_size_residual_normalized", "-", "size_residual_label_normalized", ",", "delta", "=", "1.0", ")", ",", "\n", "-", "1", ")", "# (B,K,3) -> (B,K)", "\n", "size_residual_normalized_loss", "=", "torch", ".", "sum", "(", "size_residual_normalized_loss", "*", "objectness_label", ")", "/", "(", "\n", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "# 3.4 Semantic cls loss", "\n", "sem_cls_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'sem_cls_label'", "]", "[", "supervised_inds", ",", "...", "]", ",", "1", ",", "\n", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_sem_cls", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "sem_cls_loss", "=", "criterion_sem_cls", "(", "end_points", "[", "'sem_cls_scores'", "]", "[", "supervised_inds", ",", "...", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "\n", "sem_cls_label", ")", "# (B,K)", "\n", "sem_cls_loss", "=", "torch", ".", "sum", "(", "sem_cls_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'cls_acc'", "]", "=", "torch", ".", "sum", "(", "\n", "(", "sem_cls_label", "==", "end_points", "[", "'sem_cls_scores'", "]", "[", "supervised_inds", ",", "...", "]", ".", "argmax", "(", "dim", "=", "-", "1", ")", ")", "*", "objectness_label", ")", "/", "(", "\n", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "iou_labels", ",", "_", ",", "iou_assignment", "=", "compute_iou_labels", "(", "\n", "# aggregated_vote_xyz -> center", "\n", "end_points", ",", "supervised_inds", ",", "end_points", "[", "'aggregated_vote_xyz'", "]", "[", "supervised_inds", ",", "...", "]", ",", "\n", "end_points", "[", "'center'", "]", "[", "supervised_inds", ",", "...", "]", ",", "None", ",", "None", ",", "\n", "end_points", "[", "'heading_scores'", "]", "[", "supervised_inds", ",", "...", "]", ",", "\n", "end_points", "[", "'heading_residuals'", "]", "[", "supervised_inds", ",", "...", "]", ",", "\n", "end_points", "[", "'size_scores'", "]", "[", "supervised_inds", ",", "...", "]", ",", "\n", "end_points", "[", "'size_residuals'", "]", "[", "supervised_inds", ",", "...", "]", ",", "config_dict", "=", "{", "'dataset_config'", ":", "dataset_config", "}", ")", "\n", "\n", "end_points", "[", "'pred_iou_value'", "]", "=", "torch", ".", "sum", "(", "iou_labels", ")", "/", "iou_labels", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "end_points", "[", "'pred_iou_obj_value'", "]", "=", "torch", ".", "sum", "(", "iou_labels", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'obj_count'", "]", "=", "torch", ".", "sum", "(", "objectness_label", ")", "\n", "\n", "if", "'jitter_center'", "in", "end_points", ".", "keys", "(", ")", ":", "\n", "        ", "jitter_center", "=", "end_points", "[", "'jitter_center'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "jitter_size", "=", "end_points", "[", "'jitter_size'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "jitter_heading", "=", "end_points", "[", "'jitter_heading'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "jitter_objectness_label", "=", "torch", ".", "ones", "(", "batch_size", ",", "jitter_heading", ".", "shape", "[", "1", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "center_label", "=", "end_points", "[", "'center_label'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "zero_mask", "=", "(", "1", "-", "end_points", "[", "'box_label_mask'", "]", "[", "supervised_inds", ",", "...", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "\n", "center_label", "[", "zero_mask", "]", "=", "-", "1000", "\n", "heading_class_label", "=", "end_points", "[", "'heading_class_label'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "heading_residual_label", "=", "end_points", "[", "'heading_residual_label'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "size_class_label", "=", "end_points", "[", "'size_class_label'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "size_residual_label", "=", "end_points", "[", "'size_residual_label'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "gt_size", "=", "dataset_config", ".", "class2size_gpu", "(", "size_class_label", ",", "size_residual_label", ")", "/", "2", "\n", "\n", "gt_angle", "=", "dataset_config", ".", "class2angle_gpu", "(", "heading_class_label", ",", "heading_residual_label", ")", "\n", "gt_bbox", "=", "torch", ".", "cat", "(", "[", "center_label", ",", "gt_size", "*", "2", ",", "-", "gt_angle", "[", ":", ",", ":", ",", "None", "]", "]", ",", "dim", "=", "2", ")", "\n", "pred_bbox", "=", "torch", ".", "cat", "(", "[", "jitter_center", ",", "jitter_size", ",", "-", "jitter_heading", "[", ":", ",", ":", ",", "None", "]", "]", ",", "axis", "=", "2", ")", "\n", "pred_num", "=", "pred_bbox", ".", "shape", "[", "1", "]", "\n", "\n", "gt_bbox_", "=", "gt_bbox", ".", "view", "(", "-", "1", ",", "7", ")", "\n", "pred_bbox_", "=", "pred_bbox", ".", "view", "(", "-", "1", ",", "7", ")", "\n", "jitter_iou_labels", "=", "box3d_iou_batch_gpu", "(", "pred_bbox_", ",", "gt_bbox_", ")", "\n", "jitter_iou_labels", ",", "jitter_object_assignment", "=", "jitter_iou_labels", ".", "view", "(", "batch_size", "*", "pred_num", ",", "batch_size", ",", "\n", "-", "1", ")", ".", "max", "(", "dim", "=", "2", ")", "\n", "inds", "=", "torch", ".", "arange", "(", "batch_size", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "pred_num", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "jitter_iou_labels", "=", "jitter_iou_labels", ".", "gather", "(", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "jitter_iou_labels", "=", "jitter_iou_labels", ".", "detach", "(", ")", "\n", "jitter_object_assignment", "=", "jitter_object_assignment", ".", "gather", "(", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "\n", "jitter_sem_class_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'sem_cls_label'", "]", "[", "supervised_inds", ",", "...", "]", ",", "1", ",", "\n", "jitter_object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "jitter_iou_pred", "=", "nn", ".", "Sigmoid", "(", ")", "(", "end_points", "[", "'iou_scores_jitter'", "]", "[", "supervised_inds", ",", "...", "]", ")", "\n", "if", "jitter_iou_pred", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "# gt sem cls", "\n", "            ", "jitter_iou_pred", "=", "torch", ".", "gather", "(", "jitter_iou_pred", ",", "2", ",", "jitter_sem_class_label", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "\n", "-", "1", ")", "# use pred semantic labels", "\n", "", "else", ":", "\n", "            ", "jitter_iou_pred", "=", "jitter_iou_pred", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "", "jitter_iou_acc", "=", "torch", ".", "abs", "(", "jitter_iou_pred", "-", "jitter_iou_labels", ")", "\n", "end_points", "[", "'jitter_iou_acc'", "]", "=", "torch", ".", "sum", "(", "jitter_iou_acc", ")", "/", "jitter_iou_acc", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "end_points", "[", "'jitter_iou_acc_obj'", "]", "=", "torch", ".", "sum", "(", "jitter_iou_acc", "*", "jitter_objectness_label", ")", "/", "(", "\n", "torch", ".", "sum", "(", "jitter_objectness_label", ")", "+", "1e-6", ")", "\n", "jitter_iou_loss", "=", "huber_loss", "(", "jitter_iou_pred", "-", "jitter_iou_labels", ".", "detach", "(", ")", ",", "delta", "=", "1.0", ")", "\n", "jitter_iou_loss", "=", "torch", ".", "sum", "(", "jitter_iou_loss", "*", "jitter_objectness_label", ")", "/", "(", "\n", "torch", ".", "sum", "(", "jitter_objectness_label", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'jitter_iou_loss'", "]", "=", "jitter_iou_loss", "\n", "\n", "", "if", "'iou_scores'", "in", "end_points", ".", "keys", "(", ")", ":", "\n", "        ", "iou_pred", "=", "nn", ".", "Sigmoid", "(", ")", "(", "end_points", "[", "'iou_scores'", "]", "[", "supervised_inds", ",", "...", "]", ")", "\n", "if", "iou_pred", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "# gt sem cls", "\n", "            ", "iou_sem_cls_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'sem_cls_label'", "]", "[", "supervised_inds", ",", "...", "]", ",", "1", ",", "iou_assignment", ")", "\n", "iou_pred", "=", "torch", ".", "gather", "(", "iou_pred", ",", "2", ",", "iou_sem_cls_label", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "\n", "-", "1", ")", "# use pred semantic labels", "\n", "", "else", ":", "\n", "            ", "iou_pred", "=", "iou_pred", ".", "squeeze", "(", "-", "1", ")", "\n", "", "iou_acc", "=", "torch", ".", "abs", "(", "iou_pred", "-", "iou_labels", ")", "\n", "end_points", "[", "'iou_acc'", "]", "=", "torch", ".", "sum", "(", "iou_acc", ")", "/", "torch", ".", "sum", "(", "torch", ".", "ones", "(", "iou_acc", ".", "shape", ")", ")", "\n", "end_points", "[", "'iou_acc_obj'", "]", "=", "torch", ".", "sum", "(", "iou_acc", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "iou_loss", "=", "huber_loss", "(", "iou_pred", "-", "iou_labels", ".", "detach", "(", ")", ",", "delta", "=", "1.0", ")", "# (B, K, 1)", "\n", "iou_loss", "=", "iou_loss", ".", "mean", "(", ")", "\n", "end_points", "[", "'iou_loss'", "]", "=", "iou_loss", "\n", "\n", "", "return", "center_loss", ",", "heading_class_loss", ",", "heading_residual_normalized_loss", ",", "size_class_loss", ",", "size_residual_normalized_loss", ",", "sem_cls_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_labeled.get_labeled_loss": [[300, 371], ["torch.nonzero().squeeze().long", "torch.nonzero().squeeze().long", "loss_helper_labeled.compute_vote_loss", "loss_helper_labeled.compute_objectness_loss", "loss_helper_labeled.compute_box_and_sem_cls_loss", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "float", "end_points.keys", "torch.sum", "torch.sum", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "objectness_label.float().cuda", "torch.sum", "torch.sum", "float", "torch.sum", "torch.sum", "objectness_mask.float", "torch.nonzero", "torch.nonzero", "objectness_label.float", "objectness_label.long"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_vote_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_objectness_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_box_and_sem_cls_loss"], ["", "def", "get_labeled_loss", "(", "end_points", ",", "dataset_config", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Loss functions for supervised samples in training detector\n\n    Args:\n        end_points: dict\n            {\n                seed_xyz, seed_inds, vote_xyz,\n                center,\n                heading_scores, heading_residuals_normalized,\n                size_scores, size_residuals_normalized,\n                sem_cls_scores, #seed_logits,#\n                center_label,\n                heading_class_label, heading_residual_label,\n                size_class_label, size_residual_label,\n                sem_cls_label,\n                box_label_mask,\n                vote_label, vote_label_mask, iou_scores\n            }\n        dataset_config: dataset config instance\n    Returns:\n        votenet_loss: pytorch scalar tensor\n        end_points: dict\n    \"\"\"", "\n", "supervised_mask", "=", "end_points", "[", "'supervised_mask'", "]", "\n", "supervised_inds", "=", "torch", ".", "nonzero", "(", "supervised_mask", ")", ".", "squeeze", "(", "1", ")", ".", "long", "(", ")", "\n", "\n", "# Vote loss", "\n", "vote_loss", "=", "compute_vote_loss", "(", "end_points", ",", "supervised_inds", ")", "\n", "end_points", "[", "'vote_loss'", "]", "=", "vote_loss", "\n", "\n", "# Obj loss", "\n", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "=", "compute_objectness_loss", "(", "end_points", ",", "supervised_inds", ")", "\n", "end_points", "[", "'objectness_loss'", "]", "=", "objectness_loss", "\n", "end_points", "[", "'objectness_label'", "]", "=", "objectness_label", "\n", "end_points", "[", "'objectness_mask'", "]", "=", "objectness_mask", "\n", "end_points", "[", "'object_assignment'", "]", "=", "object_assignment", "\n", "total_num_proposal", "=", "objectness_label", ".", "shape", "[", "0", "]", "*", "objectness_label", ".", "shape", "[", "1", "]", "\n", "end_points", "[", "'pos_ratio'", "]", "=", "torch", ".", "sum", "(", "objectness_label", ".", "float", "(", ")", ".", "cuda", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "\n", "end_points", "[", "'neg_ratio'", "]", "=", "torch", ".", "sum", "(", "objectness_mask", ".", "float", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "-", "end_points", "[", "'pos_ratio'", "]", "\n", "\n", "# Box loss and sem cls loss", "\n", "center_loss", ",", "heading_cls_loss", ",", "heading_reg_loss", ",", "size_cls_loss", ",", "size_reg_loss", ",", "sem_cls_loss", "=", "compute_box_and_sem_cls_loss", "(", "end_points", ",", "supervised_inds", ",", "dataset_config", ",", "config_dict", ")", "\n", "end_points", "[", "'center_loss'", "]", "=", "center_loss", "\n", "end_points", "[", "'heading_cls_loss'", "]", "=", "heading_cls_loss", "\n", "end_points", "[", "'heading_reg_loss'", "]", "=", "heading_reg_loss", "\n", "end_points", "[", "'size_cls_loss'", "]", "=", "size_cls_loss", "\n", "end_points", "[", "'size_reg_loss'", "]", "=", "size_reg_loss", "\n", "end_points", "[", "'sem_cls_loss'", "]", "=", "sem_cls_loss", "\n", "box_loss", "=", "0.1", "*", "heading_cls_loss", "+", "heading_reg_loss", "+", "0.1", "*", "size_cls_loss", "+", "size_reg_loss", "+", "center_loss", "\n", "end_points", "[", "'box_loss'", "]", "=", "box_loss", "\n", "\n", "votenet_loss", "=", "vote_loss", "+", "0.5", "*", "objectness_loss", "+", "box_loss", "+", "0.1", "*", "sem_cls_loss", "\n", "votenet_loss", "=", "votenet_loss", "+", "end_points", "[", "'iou_loss'", "]", "\n", "if", "'jitter_iou_loss'", "in", "end_points", ".", "keys", "(", ")", ":", "\n", "        ", "votenet_loss", "=", "votenet_loss", "+", "end_points", "[", "'jitter_iou_loss'", "]", "\n", "\n", "", "votenet_loss", "*=", "10", "\n", "end_points", "[", "'detection_loss'", "]", "=", "votenet_loss", "\n", "end_points", "[", "'loss'", "]", "=", "votenet_loss", "\n", "\n", "# Some other statistics", "\n", "obj_scores", "=", "end_points", "[", "'objectness_scores'", "]", "[", "supervised_inds", ",", "...", "]", "\n", "obj_pred_val", "=", "torch", ".", "argmax", "(", "obj_scores", ",", "2", ")", "# B,K", "\n", "obj_acc", "=", "torch", ".", "sum", "(", "(", "obj_pred_val", "==", "objectness_label", ".", "long", "(", ")", ")", ".", "float", "(", ")", "*", "objectness_mask", ")", "/", "(", "\n", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'obj_acc'", "]", "=", "obj_acc", "\n", "return", "votenet_loss", ",", "end_points", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.APCalculator.__init__": [[384, 394], ["ap_helper.APCalculator.reset"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.APCalculator.reset"], ["def", "__init__", "(", "self", ",", "ap_iou_thresh", "=", "0.25", ",", "class2type_map", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ap_iou_thresh: float between 0 and 1.0\n                IoU threshold to judge whether a prediction is positive.\n            class2type_map: [optional] dict {class_int:class_name}\n        \"\"\"", "\n", "self", ".", "ap_iou_thresh", "=", "ap_iou_thresh", "\n", "self", ".", "class2type_map", "=", "class2type_map", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.APCalculator.step": [[395, 410], ["len", "range", "len"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "batch_pred_map_cls", ",", "batch_gt_map_cls", ")", ":", "\n", "        ", "\"\"\" Accumulate one batch of prediction and groundtruth.\n        \n        Args:\n            batch_pred_map_cls: a list of lists [[(pred_cls, pred_box_params, score),...],...]\n            batch_gt_map_cls: a list of lists [[(gt_cls, gt_box_params),...],...]\n                should have the same length with batch_pred_map_cls (batch_size)\n        \"\"\"", "\n", "\n", "bsize", "=", "len", "(", "batch_pred_map_cls", ")", "\n", "assert", "(", "bsize", "==", "len", "(", "batch_gt_map_cls", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "self", ".", "gt_map_cls", "[", "self", ".", "scan_cnt", "]", "=", "batch_gt_map_cls", "[", "i", "]", "\n", "self", ".", "pred_map_cls", "[", "self", ".", "scan_cnt", "]", "=", "batch_pred_map_cls", "[", "i", "]", "\n", "self", ".", "scan_cnt", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.APCalculator.compute_metrics": [[411, 431], ["utils.eval_det.eval_det_multiprocessing", "sorted", "numpy.mean", "sorted", "numpy.mean", "ap.keys", "list", "ap.keys", "str", "ap.values", "str", "rec_list.append", "rec_list.append"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.eval_det.eval_det_multiprocessing"], ["", "", "def", "compute_metrics", "(", "self", ")", ":", "\n", "        ", "\"\"\" Use accumulated predictions and groundtruths to compute Average Precision.\n        \"\"\"", "\n", "rec", ",", "prec", ",", "ap", "=", "eval_det_multiprocessing", "(", "self", ".", "pred_map_cls", ",", "self", ".", "gt_map_cls", ",", "ovthresh", "=", "self", ".", "ap_iou_thresh", ",", "get_iou_func", "=", "get_iou_obb", ")", "\n", "ret_dict", "=", "{", "}", "\n", "for", "key", "in", "sorted", "(", "ap", ".", "keys", "(", ")", ")", ":", "\n", "            ", "clsname", "=", "self", ".", "class2type_map", "[", "key", "]", "if", "self", ".", "class2type_map", "else", "str", "(", "key", ")", "\n", "ret_dict", "[", "'%s Average Precision'", "%", "(", "clsname", ")", "]", "=", "ap", "[", "key", "]", "\n", "", "ret_dict", "[", "'mAP'", "]", "=", "np", ".", "mean", "(", "list", "(", "ap", ".", "values", "(", ")", ")", ")", "\n", "rec_list", "=", "[", "]", "\n", "for", "key", "in", "sorted", "(", "ap", ".", "keys", "(", ")", ")", ":", "\n", "            ", "clsname", "=", "self", ".", "class2type_map", "[", "key", "]", "if", "self", ".", "class2type_map", "else", "str", "(", "key", ")", "\n", "try", ":", "\n", "                ", "ret_dict", "[", "'%s Recall'", "%", "(", "clsname", ")", "]", "=", "rec", "[", "key", "]", "[", "-", "1", "]", "\n", "rec_list", ".", "append", "(", "rec", "[", "key", "]", "[", "-", "1", "]", ")", "\n", "", "except", ":", "\n", "                ", "ret_dict", "[", "'%s Recall'", "%", "(", "clsname", ")", "]", "=", "0", "\n", "rec_list", ".", "append", "(", "0", ")", "\n", "", "", "ret_dict", "[", "'AR'", "]", "=", "np", ".", "mean", "(", "rec_list", ")", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.APCalculator.reset": [[432, 436], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "gt_map_cls", "=", "{", "}", "# {scan_id: [(classname, bbox)]}", "\n", "self", ".", "pred_map_cls", "=", "{", "}", "# {scan_id: [(classname, bbox, score)]}", "\n", "self", ".", "scan_cnt", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_camera": [[28, 36], ["numpy.copy"], "function", ["None"], ["def", "flip_axis_to_camera", "(", "pc", ")", ":", "\n", "    ", "''' Flip X-right,Y-forward,Z-up to X-right,Y-down,Z-forward\n    Input and output are both (N,3) array\n    '''", "\n", "pc2", "=", "np", ".", "copy", "(", "pc", ")", "\n", "pc2", "[", "...", ",", "[", "0", ",", "1", ",", "2", "]", "]", "=", "pc2", "[", "...", ",", "[", "0", ",", "2", ",", "1", "]", "]", "# cam X,Y,Z = depth X,-Z,Y", "\n", "pc2", "[", "...", ",", "1", "]", "*=", "-", "1", "\n", "return", "pc2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_depth": [[37, 42], ["numpy.copy"], "function", ["None"], ["", "def", "flip_axis_to_depth", "(", "pc", ")", ":", "\n", "    ", "pc2", "=", "np", ".", "copy", "(", "pc", ")", "\n", "pc2", "[", "...", ",", "[", "0", ",", "1", ",", "2", "]", "]", "=", "pc2", "[", "...", ",", "[", "0", ",", "2", ",", "1", "]", "]", "# depth X,Y,Z = cam X,Z,-Y", "\n", "pc2", "[", "...", ",", "2", "]", "*=", "-", "1", "\n", "return", "pc2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.softmax": [[43, 49], ["numpy.exp", "numpy.sum", "numpy.max", "len", "len"], "function", ["None"], ["", "def", "softmax", "(", "x", ")", ":", "\n", "    ", "''' Numpy function for softmax'''", "\n", "shape", "=", "x", ".", "shape", "\n", "probs", "=", "np", ".", "exp", "(", "x", "-", "np", ".", "max", "(", "x", ",", "axis", "=", "len", "(", "shape", ")", "-", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "probs", "/=", "np", ".", "sum", "(", "probs", ",", "axis", "=", "len", "(", "shape", ")", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.predictions2corners3d": [[51, 94], ["torch.argmax", "torch.gather", "torch.gather.squeeze_", "torch.argmax", "torch.gather", "torch.gather.squeeze_", "numpy.zeros", "pred_center.detach().cpu().numpy", "numpy.zeros", "ap_helper.flip_axis_to_camera", "range", "torch.argmax.unsqueeze", "torch.argmax.unsqueeze().unsqueeze().repeat", "pred_center.detach().cpu().numpy", "range", "pred_center.detach().cpu", "config_dict[].class2angle", "config_dict[].class2size", "utils.box_util.get_3d_box", "torch.argmax.unsqueeze().unsqueeze", "pred_center.detach().cpu", "pred_heading_class[].detach().cpu().numpy", "pred_heading_residual[].detach().cpu().numpy", "int", "pred_size_residual[].detach().cpu().numpy", "pred_center.detach", "pred_size_class[].detach().cpu().numpy", "torch.argmax.unsqueeze", "pred_center.detach", "pred_heading_class[].detach().cpu", "pred_heading_residual[].detach().cpu", "pred_size_residual[].detach().cpu", "pred_size_class[].detach().cpu", "pred_heading_class[].detach", "pred_heading_residual[].detach", "pred_size_residual[].detach", "pred_size_class[].detach"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_camera", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.get_3d_box"], ["", "def", "predictions2corners3d", "(", "end_points", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Convert predictions to OBB parameters (eight corner points)\n    Args:\n        end_points: dict\n            {point_clouds, center, heading_scores, heading_residuals,\n            size_scores, size_residuals, sem_cls_scores}\n        config_dict: dict\n            {dataset_config, remove_empty_box, use_3d_nms, nms_iou,\n            use_old_type_nms, conf_thresh, per_class_proposal}\n    Returns:\n        pred_corners_3d_upright_camera: ndarray (num_batch, num_proposals, 8, 3)\n        pred_box_parameters:  ndarray (num_batch, num_proposals, 7)\n    \"\"\"", "\n", "pred_center", "=", "end_points", "[", "'center'", "]", "# B,num_proposal,3", "\n", "pred_heading_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'heading_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_heading_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_residuals'", "]", ",", "2", ",", "\n", "pred_heading_class", ".", "unsqueeze", "(", "-", "1", ")", ")", "# B,num_proposal,1", "\n", "pred_heading_residual", ".", "squeeze_", "(", "2", ")", "\n", "pred_size_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'size_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_size_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_residuals'", "]", ",", "2", ",", "\n", "pred_size_class", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", ")", "# B,num_proposal,1,3", "\n", "pred_size_residual", ".", "squeeze_", "(", "2", ")", "\n", "\n", "num_proposal", "=", "pred_center", ".", "shape", "[", "1", "]", "\n", "# Since we operate in upright_depth coord for points, while util functions", "\n", "# assume upright_camera coord.", "\n", "bsize", "=", "pred_center", ".", "shape", "[", "0", "]", "\n", "pred_box_parameters", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "num_proposal", ",", "7", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred_box_parameters", "[", ":", ",", ":", ",", "0", ":", "3", "]", "=", "pred_center", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_corners_3d_upright_camera", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "num_proposal", ",", "8", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred_center_upright_camera", "=", "flip_axis_to_camera", "(", "pred_center", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "num_proposal", ")", ":", "\n", "            ", "heading_angle", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2angle", "(", "pred_heading_class", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "pred_heading_residual", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "box_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size", "(", "int", "(", "pred_size_class", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "pred_size_residual", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "pred_box_parameters", "[", "i", ",", "j", ",", "3", ":", "6", "]", "=", "box_size", "\n", "pred_box_parameters", "[", "i", ",", "j", ",", "6", "]", "=", "heading_angle", "\n", "corners_3d_upright_camera", "=", "get_3d_box", "(", "box_size", ",", "heading_angle", ",", "pred_center_upright_camera", "[", "i", ",", "j", ",", ":", "]", ")", "\n", "pred_corners_3d_upright_camera", "[", "i", ",", "j", "]", "=", "corners_3d_upright_camera", "\n", "\n", "", "", "return", "pred_corners_3d_upright_camera", ",", "pred_box_parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.parse_predictions": [[96, 222], ["torch.argmax", "ap_helper.softmax", "numpy.max", "ap_helper.predictions2corners3d", "numpy.ones", "end_points[].detach().cpu().numpy", "range", "end_points[].detach().cpu().numpy", "range", "ap_helper.softmax", "numpy.zeros", "range", "end_points[].cpu().numpy", "range", "end_points[].detach().cpu", "numpy.zeros", "range", "utils.nms.nms_2d_faster", "numpy.zeros", "range", "range", "batch_pred_map_cls.append", "batch_pred_map_cls.append", "end_points[].detach().cpu", "ap_helper.flip_axis_to_depth", "sunrgbd.sunrgbd_utils.extract_pc_in_box3d", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.where", "len", "numpy.zeros", "range", "utils.nms.nms_3d_faster", "numpy.zeros", "range", "end_points[].cpu", "len", "end_points[].detach", "numpy.min", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.max", "numpy.where", "len", "torch.gather.squeeze().detach().cpu().numpy", "numpy.zeros", "range", "utils.nms.nms_3d_faster_samecls", "end_points[].detach", "torch.nn.Sigmoid", "torch.gather", "numpy.min", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.max", "numpy.where", "len", "range", "pred_sem_cls[].item", "range", "torch.argmax.unsqueeze", "torch.gather.squeeze().detach().cpu", "torch.gather.squeeze().detach", "torch.gather.squeeze"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.dump_helper.softmax", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.predictions2corners3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.dump_helper.softmax", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.nms_2d_faster", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_depth", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.extract_pc_in_box3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.nms_3d_faster", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.nms_3d_faster_samecls"], ["", "def", "parse_predictions", "(", "end_points", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Parse predictions to OBB parameters and suppress overlapping boxes\n    \n    Args:\n        end_points: dict\n            {point_clouds, center, heading_scores, heading_residuals,\n            size_scores, size_residuals, sem_cls_scores}\n        config_dict: dict\n            {dataset_config, remove_empty_box, use_3d_nms, nms_iou,\n            use_old_type_nms, conf_thresh, per_class_proposal}\n\n    Returns:\n        batch_pred_map_cls: a list of len == batch size (BS)\n            [pred_list_i], i = 0, 1, ..., BS-1\n            where pred_list_i = [(pred_sem_cls, box_params, box_score)_j]\n            where j = 0, ..., num of valid detections - 1 from sample input i\n    \"\"\"", "\n", "pred_center", "=", "end_points", "[", "'center'", "]", "# B,num_proposal,3", "\n", "pred_sem_cls", "=", "torch", ".", "argmax", "(", "end_points", "[", "'sem_cls_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "sem_cls_probs", "=", "softmax", "(", "end_points", "[", "'sem_cls_scores'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "# B,num_proposal,10", "\n", "pred_sem_cls_prob", "=", "np", ".", "max", "(", "sem_cls_probs", ",", "-", "1", ")", "# B,num_proposal", "\n", "\n", "pred_corners_3d_upright_camera", ",", "pred_box_parameters", "=", "predictions2corners3d", "(", "end_points", ",", "config_dict", ")", "\n", "bsize", "=", "pred_corners_3d_upright_camera", ".", "shape", "[", "0", "]", "\n", "K", "=", "pred_corners_3d_upright_camera", ".", "shape", "[", "1", "]", "# K==num_proposal", "\n", "nonempty_box_mask", "=", "np", ".", "ones", "(", "(", "bsize", ",", "K", ")", ")", "\n", "\n", "if", "config_dict", "[", "'remove_empty_box'", "]", ":", "\n", "# -------------------------------------", "\n", "# Remove predicted boxes without any point within them..", "\n", "        ", "batch_pc", "=", "end_points", "[", "'point_clouds'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", "0", ":", "3", "]", "# B,N,3", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "pc", "=", "batch_pc", "[", "i", ",", ":", ",", ":", "]", "# (N,3)", "\n", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "box3d", "=", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", ":", "]", "# (8,3)", "\n", "box3d", "=", "flip_axis_to_depth", "(", "box3d", ")", "\n", "pc_in_box", ",", "inds", "=", "extract_pc_in_box3d", "(", "pc", ",", "box3d", ")", "\n", "if", "len", "(", "pc_in_box", ")", "<", "5", ":", "\n", "                    ", "nonempty_box_mask", "[", "i", ",", "j", "]", "=", "0", "\n", "# -------------------------------------", "\n", "\n", "", "", "", "", "obj_logits", "=", "end_points", "[", "'objectness_scores'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "obj_prob", "=", "softmax", "(", "obj_logits", ")", "[", ":", ",", ":", ",", "1", "]", "# (B,K)", "\n", "if", "not", "config_dict", "[", "'use_3d_nms'", "]", ":", "\n", "# ---------- NMS input: pred_with_prob in (B,K,7) -----------", "\n", "        ", "pred_mask", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "boxes_2d_with_prob", "=", "np", ".", "zeros", "(", "(", "K", ",", "5", ")", ")", "\n", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "boxes_2d_with_prob", "[", "j", ",", "0", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_2d_with_prob", "[", "j", ",", "2", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_2d_with_prob", "[", "j", ",", "1", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_2d_with_prob", "[", "j", ",", "3", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_2d_with_prob", "[", "j", ",", "4", "]", "=", "obj_prob", "[", "i", ",", "j", "]", "\n", "", "nonempty_box_inds", "=", "np", ".", "where", "(", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ")", "[", "0", "]", "\n", "pick", "=", "nms_2d_faster", "(", "boxes_2d_with_prob", "[", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "config_dict", "[", "'nms_iou'", "]", ",", "config_dict", "[", "'use_old_type_nms'", "]", ")", "\n", "assert", "(", "len", "(", "pick", ")", ">", "0", ")", "\n", "pred_mask", "[", "i", ",", "nonempty_box_inds", "[", "pick", "]", "]", "=", "1", "\n", "", "end_points", "[", "'pred_mask'", "]", "=", "pred_mask", "\n", "# ---------- NMS output: pred_mask in (B,K) -----------", "\n", "", "elif", "config_dict", "[", "'use_3d_nms'", "]", "and", "(", "not", "config_dict", "[", "'cls_nms'", "]", ")", ":", "\n", "# ---------- NMS input: pred_with_prob in (B,K,7) -----------", "\n", "        ", "pred_mask", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "boxes_3d_with_prob", "=", "np", ".", "zeros", "(", "(", "K", ",", "7", ")", ")", "\n", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "boxes_3d_with_prob", "[", "j", ",", "0", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "1", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "2", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "3", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "4", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "5", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "6", "]", "=", "obj_prob", "[", "i", ",", "j", "]", "\n", "", "nonempty_box_inds", "=", "np", ".", "where", "(", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ")", "[", "0", "]", "\n", "pick", "=", "nms_3d_faster", "(", "boxes_3d_with_prob", "[", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "config_dict", "[", "'nms_iou'", "]", ",", "config_dict", "[", "'use_old_type_nms'", "]", ")", "\n", "assert", "(", "len", "(", "pick", ")", ">", "0", ")", "\n", "pred_mask", "[", "i", ",", "nonempty_box_inds", "[", "pick", "]", "]", "=", "1", "\n", "", "end_points", "[", "'pred_mask'", "]", "=", "pred_mask", "\n", "# ---------- NMS output: pred_mask in (B,K) -----------", "\n", "", "elif", "config_dict", "[", "'use_3d_nms'", "]", "and", "config_dict", "[", "'cls_nms'", "]", ":", "\n", "# ---------- NMS input: pred_with_prob in (B,K,8) -----------", "\n", "        ", "scores", "=", "obj_prob", "\n", "if", "config_dict", "[", "'use_iou_for_nms'", "]", ":", "\n", "            ", "iou_logits", "=", "nn", ".", "Sigmoid", "(", ")", "(", "end_points", "[", "'iou_scores'", "]", ")", "\n", "if", "iou_logits", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "iou_logits", "=", "torch", ".", "gather", "(", "iou_logits", ",", "2", ",", "pred_sem_cls", ".", "unsqueeze", "(", "-", "1", ")", ")", "\n", "", "iou_logits", "=", "iou_logits", ".", "squeeze", "(", "-", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "scores", "=", "scores", "*", "iou_logits", "\n", "", "pred_mask", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "boxes_3d_with_prob", "=", "np", ".", "zeros", "(", "(", "K", ",", "8", ")", ")", "\n", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "boxes_3d_with_prob", "[", "j", ",", "0", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "1", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "2", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "3", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "4", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "5", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "6", "]", "=", "scores", "[", "i", ",", "j", "]", "\n", "boxes_3d_with_prob", "[", "j", ",", "7", "]", "=", "pred_sem_cls", "[", "i", ",", "j", "]", "# only suppress if the two boxes are of the same class!!", "\n", "", "nonempty_box_inds", "=", "np", ".", "where", "(", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ")", "[", "0", "]", "\n", "pick", "=", "nms_3d_faster_samecls", "(", "boxes_3d_with_prob", "[", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "config_dict", "[", "'nms_iou'", "]", ",", "config_dict", "[", "'use_old_type_nms'", "]", ")", "\n", "assert", "(", "len", "(", "pick", ")", ">", "0", ")", "\n", "pred_mask", "[", "i", ",", "nonempty_box_inds", "[", "pick", "]", "]", "=", "1", "\n", "", "end_points", "[", "'pred_mask'", "]", "=", "pred_mask", "\n", "# ---------- NMS output: pred_mask in (B,K) -----------", "\n", "\n", "# a list (len: batch_size) of list (len: num of predictions per sample)", "\n", "# of tuples of pred_cls, pred_box and conf (0-1)", "\n", "", "batch_pred_map_cls", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "if", "config_dict", "[", "'per_class_proposal'", "]", ":", "\n", "            ", "cur_list", "=", "[", "]", "\n", "for", "ii", "in", "range", "(", "config_dict", "[", "'dataset_config'", "]", ".", "num_class", ")", ":", "\n", "                ", "cur_list", "+=", "[", "(", "ii", ",", "pred_corners_3d_upright_camera", "[", "i", ",", "j", "]", ",", "sem_cls_probs", "[", "i", ",", "j", ",", "ii", "]", "*", "obj_prob", "[", "i", ",", "j", "]", ")", "for", "j", "in", "range", "(", "pred_center", ".", "shape", "[", "1", "]", ")", "if", "pred_mask", "[", "i", ",", "j", "]", "==", "1", "and", "obj_prob", "[", "i", ",", "j", "]", ">", "config_dict", "[", "'conf_thresh'", "]", "]", "\n", "", "batch_pred_map_cls", ".", "append", "(", "cur_list", ")", "\n", "", "else", ":", "\n", "            ", "batch_pred_map_cls", ".", "append", "(", "[", "(", "pred_sem_cls", "[", "i", ",", "j", "]", ".", "item", "(", ")", ",", "pred_corners_3d_upright_camera", "[", "i", ",", "j", "]", ",", "obj_prob", "[", "i", ",", "j", "]", ")", "for", "j", "in", "range", "(", "pred_center", ".", "shape", "[", "1", "]", ")", "if", "pred_mask", "[", "i", ",", "j", "]", "==", "1", "and", "obj_prob", "[", "i", ",", "j", "]", ">", "config_dict", "[", "'conf_thresh'", "]", "]", ")", "\n", "", "", "end_points", "[", "'batch_pred_map_cls'", "]", "=", "batch_pred_map_cls", "\n", "\n", "return", "batch_pred_map_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.groundtruths2corners3d": [[224, 261], ["numpy.zeros", "center_label.detach().cpu().numpy", "numpy.zeros", "ap_helper.flip_axis_to_camera", "range", "center_label[].detach().cpu().numpy", "range", "center_label.detach().cpu", "config_dict[].class2angle", "config_dict[].class2size", "utils.box_util.get_3d_box", "center_label[].detach().cpu", "heading_class_label[].detach().cpu().numpy", "heading_residual_label[].detach().cpu().numpy", "int", "size_residual_label[].detach().cpu().numpy", "center_label.detach", "size_class_label[].detach().cpu().numpy", "center_label[].detach", "heading_class_label[].detach().cpu", "heading_residual_label[].detach().cpu", "size_residual_label[].detach().cpu", "size_class_label[].detach().cpu", "heading_class_label[].detach", "heading_residual_label[].detach", "size_residual_label[].detach", "size_class_label[].detach"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_camera", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.get_3d_box"], ["", "def", "groundtruths2corners3d", "(", "end_points", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Convert predictions to OBB parameters (eight corner points)\n    Args:\n        end_points: dict\n            {center_label, heading_class_label, heading_residual_label,\n            size_class_label, size_residual_label, sem_cls_label,\n            box_label_mask}\n        config_dict: dict\n            {dataset_config}\n    Returns:\n        gt_corners_3d_upright_camera: ndarray (num_batch, MAX_NUM_OBJ, 8, 3)\n        gt_box_parameters:  ndarray (num_batch, num_proposals, 7)\n    \"\"\"", "\n", "center_label", "=", "end_points", "[", "'center_label'", "]", "\n", "heading_class_label", "=", "end_points", "[", "'heading_class_label'", "]", "\n", "heading_residual_label", "=", "end_points", "[", "'heading_residual_label'", "]", "\n", "size_class_label", "=", "end_points", "[", "'size_class_label'", "]", "\n", "size_residual_label", "=", "end_points", "[", "'size_residual_label'", "]", "\n", "box_label_mask", "=", "end_points", "[", "'box_label_mask'", "]", "\n", "bsize", "=", "center_label", ".", "shape", "[", "0", "]", "\n", "\n", "K2", "=", "center_label", ".", "shape", "[", "1", "]", "# K2==MAX_NUM_OBJ", "\n", "gt_box_parameters", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K2", ",", "7", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "gt_box_parameters", "[", ":", ",", ":", ",", "0", ":", "3", "]", "=", "center_label", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "gt_corners_3d_upright_camera", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K2", ",", "8", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "gt_center_upright_camera", "=", "flip_axis_to_camera", "(", "center_label", "[", ":", ",", ":", ",", "0", ":", "3", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "K2", ")", ":", "\n", "            ", "if", "box_label_mask", "[", "i", ",", "j", "]", "==", "0", ":", "continue", "\n", "heading_angle", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2angle", "(", "heading_class_label", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "heading_residual_label", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "box_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size", "(", "int", "(", "size_class_label", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "size_residual_label", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "gt_box_parameters", "[", "i", ",", "j", ",", "3", ":", "6", "]", "=", "box_size", "\n", "gt_box_parameters", "[", "i", ",", "j", ",", "6", "]", "=", "heading_angle", "\n", "corners_3d_upright_camera", "=", "get_3d_box", "(", "box_size", ",", "heading_angle", ",", "gt_center_upright_camera", "[", "i", ",", "j", ",", ":", "]", ")", "\n", "gt_corners_3d_upright_camera", "[", "i", ",", "j", "]", "=", "corners_3d_upright_camera", "\n", "\n", "", "", "return", "gt_corners_3d_upright_camera", ",", "gt_box_parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.parse_groundtruths": [[262, 291], ["ap_helper.groundtruths2corners3d", "range", "batch_gt_map_cls.append", "sem_cls_label[].item", "range"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.groundtruths2corners3d"], ["", "def", "parse_groundtruths", "(", "end_points", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Parse groundtruth labels to OBB parameters.\n    \n    Args:\n        end_points: dict\n            {center_label, heading_class_label, heading_residual_label,\n            size_class_label, size_residual_label, sem_cls_label,\n            box_label_mask}\n        config_dict: dict\n            {dataset_config}\n\n    Returns:\n        batch_gt_map_cls: a list  of len == batch_size (BS)\n            [gt_list_i], i = 0, 1, ..., BS-1\n            where gt_list_i = [(gt_sem_cls, gt_box_params)_j]\n            where j = 0, ..., num of objects - 1 at sample input i\n    \"\"\"", "\n", "sem_cls_label", "=", "end_points", "[", "'sem_cls_label'", "]", "\n", "box_label_mask", "=", "end_points", "[", "'box_label_mask'", "]", "\n", "\n", "gt_corners_3d_upright_camera", ",", "_", "=", "groundtruths2corners3d", "(", "end_points", ",", "config_dict", ")", "\n", "bsize", "=", "gt_corners_3d_upright_camera", ".", "shape", "[", "0", "]", "\n", "\n", "batch_gt_map_cls", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "batch_gt_map_cls", ".", "append", "(", "[", "(", "sem_cls_label", "[", "i", ",", "j", "]", ".", "item", "(", ")", ",", "gt_corners_3d_upright_camera", "[", "i", ",", "j", "]", ")", "for", "j", "in", "range", "(", "gt_corners_3d_upright_camera", ".", "shape", "[", "1", "]", ")", "if", "box_label_mask", "[", "i", ",", "j", "]", "==", "1", "]", ")", "\n", "", "end_points", "[", "'batch_gt_map_cls'", "]", "=", "batch_gt_map_cls", "\n", "\n", "return", "batch_gt_map_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.align_predictions_groundtruths": [[293, 339], ["end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.nonzero", "range", "end_points[].detach().cpu", "end_points[].detach().cpu", "utils.box_util.box3d_iou", "np.array.append", "len", "numpy.array", "numpy.argmax", "end_points[].detach", "end_points[].detach", "np.array.max"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou"], ["", "def", "align_predictions_groundtruths", "(", "batch_pred_corners_3d", ",", "batch_gt_corners_3d", ",", "end_points", ",", "iou_threshold", "=", "0.5", ")", ":", "\n", "    ", "\"\"\"\n\n    Args:\n        batch_pred_corners_3d: ndarray (num_batch, num_proposals, 8, 3)\n            predicted bounding boxes (represented by 8 corner points) in upright_camera coordinate\n        batch_gt_corners_3d: ndarray (num_batch, MAX_NUM_OBJ, 8, 3)\n            ground truth bounding boxes (represented by 8 corner points) in upright_camera coordinate\n        end_points: dict\n            {box_label_mask, ...}\n    Returns:\n        batch_gt_corners_3d_aligned: ndarray (num_batch, num_proposals, 8, 3)\n            clostest ground truth bounding boxes corresponding to each predicted bbox\n        batch_confidence_scores: ndarray (num_batch, num_proposals, 1), value is 0 or 1\n            the fitness between each predicted bbox and gt bbox, if the overlap larger than threshold, fitness is 1\n        batch_sem_cls_labels: ndarray  (num_batch, num_proposals), value is [0, num_class-1]\n            the semantic class of the aligned ground truth bboxes\n    \"\"\"", "\n", "bsize", "=", "batch_pred_corners_3d", ".", "shape", "[", "0", "]", "\n", "num_proposal", "=", "batch_pred_corners_3d", ".", "shape", "[", "1", "]", "\n", "box_label_mask", "=", "end_points", "[", "'box_label_mask'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "sem_cls_label", "=", "end_points", "[", "'sem_cls_label'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "batch_sem_cls_labels", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "num_proposal", ",", "1", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "batch_confidence_scores", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "num_proposal", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "batch_gt_corners_3d_aligned", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "num_proposal", ",", "8", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "cur_mask", "=", "np", ".", "nonzero", "(", "box_label_mask", "[", "i", "]", ")", "\n", "gt_corners_3d", "=", "batch_gt_corners_3d", "[", "i", "]", "[", "cur_mask", "]", "\n", "gt_classes", "=", "sem_cls_label", "[", "i", "]", "[", "cur_mask", "]", "\n", "for", "j", "in", "range", "(", "num_proposal", ")", ":", "\n", "            ", "BB", "=", "batch_pred_corners_3d", "[", "i", ",", "j", ",", ":", ",", ":", "]", "\n", "iou_list", "=", "[", "]", "\n", "for", "BBGT", "in", "gt_corners_3d", ":", "\n", "                ", "iou", ",", "_", "=", "box3d_iou", "(", "BB", ",", "BBGT", ")", "\n", "iou_list", ".", "append", "(", "iou", ")", "\n", "", "if", "len", "(", "iou_list", ")", "!=", "0", ":", "\n", "                ", "iou_list", "=", "np", ".", "array", "(", "iou_list", ")", "\n", "max_ind", "=", "np", ".", "argmax", "(", "iou_list", ")", "\n", "batch_gt_corners_3d_aligned", "[", "i", ",", "j", ",", ":", ",", ":", "]", "=", "gt_corners_3d", "[", "max_ind", "]", "\n", "batch_sem_cls_labels", "[", "i", ",", "j", "]", "=", "gt_classes", "[", "max_ind", "]", "\n", "if", "iou_list", ".", "max", "(", ")", ">=", "iou_threshold", ":", "\n", "                    ", "batch_confidence_scores", "[", "i", ",", "j", "]", "=", "1.", "\n", "\n", "", "", "", "", "return", "batch_gt_corners_3d_aligned", ",", "batch_confidence_scores", ",", "batch_sem_cls_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.get_roi_ptcloud": [[341, 380], ["numpy.zeros", "numpy.ones", "range", "inputs[].detach().cpu().numpy", "range", "ap_helper.flip_axis_to_camera", "utils.box_util.get_3d_box", "ap_helper.flip_axis_to_depth", "sunrgbd.sunrgbd_utils.extract_pc_in_box3d", "inputs[].detach().cpu", "len", "utils.pc_util.random_sampling", "inputs[].detach"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_camera", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.get_3d_box", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_depth", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.sunrgbd_utils.extract_pc_in_box3d", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.random_sampling"], ["", "def", "get_roi_ptcloud", "(", "inputs", ",", "batch_pred_boxes_params", ",", "enlarge_ratio", "=", "1.2", ",", "num_point_roi", "=", "512", ",", "min_num_point", "=", "100", ")", ":", "\n", "    ", "\"\"\" Generate ROI point cloud w.r.t predicted box\n\n    :param inputs: dict {'point_clouds'}\n                   input point clouds of the whole scene\n           batch_pred_boxes_params: (B, num_proposals, 7), numpy array\n                   predicted bounding box from detector\n           enlarge_ratio: scalar\n                   the value to enlarge the predicted box size\n           num_point_roi: scalar\n                   the number of points to be sampled in each enlarged box\n\n    :return:\n        batch_pc_roi: (B, num_proposals, num_sampled_points, input_pc_features) numpy array\n        nonempty_roi_mask: (B, num_proposals) numpy array\n    \"\"\"", "\n", "batch_pc", "=", "inputs", "[", "'point_clouds'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", ":", "]", "# B,N,C", "\n", "bsize", "=", "batch_pred_boxes_params", ".", "shape", "[", "0", "]", "\n", "K", "=", "batch_pred_boxes_params", ".", "shape", "[", "1", "]", "\n", "batch_pc_roi", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K", ",", "num_point_roi", ",", "batch_pc", ".", "shape", "[", "2", "]", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "nonempty_roi_mask", "=", "np", ".", "ones", "(", "(", "bsize", ",", "K", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "pc", "=", "batch_pc", "[", "i", ",", ":", ",", ":", "]", "# (N,C)", "\n", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "            ", "box_params", "=", "batch_pred_boxes_params", "[", "i", ",", "j", ",", ":", "]", "# (7)", "\n", "center", "=", "box_params", "[", "0", ":", "3", "]", "\n", "center_upright_camera", "=", "flip_axis_to_camera", "(", "center", ")", "#.reshape(1,-1))[0]", "\n", "box_size", "=", "box_params", "[", "3", ":", "6", "]", "*", "enlarge_ratio", "#enlarge the box size", "\n", "heading_angle", "=", "box_params", "[", "6", "]", "\n", "box3d", "=", "get_3d_box", "(", "box_size", ",", "heading_angle", ",", "center_upright_camera", ")", "\n", "box3d", "=", "flip_axis_to_depth", "(", "box3d", ")", "\n", "pc_in_box", ",", "inds", "=", "extract_pc_in_box3d", "(", "pc", ",", "box3d", ")", "\n", "# print('The number of points in roi box is ', pc_in_box.shape[0])", "\n", "if", "len", "(", "pc_in_box", ")", ">=", "min_num_point", ":", "\n", "                ", "batch_pc_roi", "[", "i", ",", "j", ",", ":", ",", ":", "]", "=", "random_sampling", "(", "pc_in_box", ",", "num_point_roi", ")", "\n", "", "else", ":", "\n", "                ", "nonempty_roi_mask", "[", "i", ",", "j", "]", "=", "0", "\n", "", "", "", "return", "batch_pc_roi", ",", "nonempty_roi_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.trans_center": [[24, 37], ["center.clone", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.bmm", "torch.bmm", "rot_mat.transpose", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero"], "function", ["None"], ["def", "trans_center", "(", "center", ",", "flip_x_axis", ",", "flip_y_axis", ",", "rot_mat", ",", "scale_ratio", ")", ":", "\n", "    ", "\"\"\" teacher model bbox center -> student model bbox center\n    \"\"\"", "\n", "center_clone", "=", "center", ".", "clone", "(", ")", "\n", "inds_to_flip_x_axis", "=", "torch", ".", "nonzero", "(", "flip_x_axis", ")", ".", "squeeze", "(", "1", ")", "\n", "center_clone", "[", "inds_to_flip_x_axis", ",", ":", ",", "0", "]", "=", "-", "center", "[", "inds_to_flip_x_axis", ",", ":", ",", "0", "]", "\n", "\n", "inds_to_flip_y_axis", "=", "torch", ".", "nonzero", "(", "flip_y_axis", ")", ".", "squeeze", "(", "1", ")", "\n", "center_clone", "[", "inds_to_flip_y_axis", ",", ":", ",", "1", "]", "=", "-", "center", "[", "inds_to_flip_y_axis", ",", ":", ",", "1", "]", "\n", "\n", "center_clone", "=", "torch", ".", "bmm", "(", "center_clone", ",", "rot_mat", ".", "transpose", "(", "1", ",", "2", ")", ")", "# (B, num_proposal, 3)", "\n", "center_clone", "=", "center_clone", "*", "scale_ratio", "# (B, K, 3) * (B, 1, 3)", "\n", "return", "center_clone", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.trans_size": [[39, 51], ["torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.index_select", "torch.index_select", "size_base.view.view", "size_class.view", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().cuda.astype"], "function", ["None"], ["", "def", "trans_size", "(", "size_class", ",", "size_residual", ",", "scale_ratio", ",", "config", ")", ":", "\n", "    ", "\"\"\" teacher model bbox size -> student model bbox size\n    \"\"\"", "\n", "mean_size_arr", "=", "config", ".", "mean_size_arr", "\n", "batch_size", ",", "num_proposal", "=", "size_class", ".", "shape", "[", ":", "2", "]", "\n", "mean_size_arr", "=", "torch", ".", "from_numpy", "(", "mean_size_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", "\n", "size_base", "=", "torch", ".", "index_select", "(", "mean_size_arr", ",", "0", ",", "size_class", ".", "view", "(", "-", "1", ")", ")", "\n", "size_base", "=", "size_base", ".", "view", "(", "batch_size", ",", "num_proposal", ",", "3", ")", "\n", "size_all", "=", "size_base", "+", "size_residual", "\n", "size_all", "=", "size_all", "*", "scale_ratio", "\n", "size_residual_new", "=", "size_all", "-", "size_base", "\n", "return", "size_residual_new", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.trans_angle": [[54, 65], ["config.class2angle_gpu", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "config.angle2class_gpu", "rot_angle.unsqueeze", "new_angle_class.long", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.angle2class_gpu"], ["", "def", "trans_angle", "(", "angle_class", ",", "angle_residual", ",", "flip_x_axis", ",", "flip_y_axis", ",", "rot_angle", ",", "config", ")", ":", "\n", "    ", "\"\"\" teacher model bbox heading -> student model bbox heading\n        \"\"\"", "\n", "angle", "=", "config", ".", "class2angle_gpu", "(", "angle_class", ",", "angle_residual", ")", "\n", "inds_to_flip_x_axis", "=", "torch", ".", "nonzero", "(", "flip_x_axis", ")", ".", "squeeze", "(", "1", ")", "\n", "angle", "[", "inds_to_flip_x_axis", ",", ":", "]", "=", "np", ".", "pi", "-", "angle", "[", "inds_to_flip_x_axis", ",", ":", "]", "\n", "inds_to_flip_y_axis", "=", "torch", ".", "nonzero", "(", "flip_y_axis", ")", ".", "squeeze", "(", "1", ")", "\n", "angle", "[", "inds_to_flip_y_axis", ",", ":", "]", "=", "-", "angle", "[", "inds_to_flip_y_axis", ",", ":", "]", "\n", "angle", "=", "angle", "-", "rot_angle", ".", "unsqueeze", "(", "-", "1", ")", "\n", "new_angle_class", ",", "new_angle_residual", "=", "config", ".", "angle2class_gpu", "(", "angle", ")", "\n", "return", "new_angle_class", ".", "long", "(", ")", ",", "new_angle_residual", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.reverse_trans_center": [[67, 80], ["torch.nonzero().squeeze", "torch.nonzero().squeeze", "center.clone", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.bmm", "torch.bmm", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero"], "function", ["None"], ["", "def", "reverse_trans_center", "(", "center", ",", "flip_x_axis", ",", "flip_y_axis", ",", "rot_mat", ",", "scale_ratio", ")", ":", "\n", "    ", "\"\"\" student model bbox center -> teacher model bbox center\n    \"\"\"", "\n", "inds_to_flip_x_axis", "=", "torch", ".", "nonzero", "(", "flip_x_axis", ")", ".", "squeeze", "(", "1", ")", "\n", "center_clone", "=", "center", ".", "clone", "(", ")", "\n", "center_clone", "[", "inds_to_flip_x_axis", ",", ":", ",", "0", "]", "=", "-", "center", "[", "inds_to_flip_x_axis", ",", ":", ",", "0", "]", "\n", "\n", "inds_to_flip_y_axis", "=", "torch", ".", "nonzero", "(", "flip_y_axis", ")", ".", "squeeze", "(", "1", ")", "\n", "center_clone", "[", "inds_to_flip_y_axis", ",", ":", ",", "1", "]", "=", "-", "center", "[", "inds_to_flip_y_axis", ",", ":", ",", "1", "]", "\n", "\n", "center_clone", "=", "torch", ".", "bmm", "(", "center_clone", ",", "rot_mat", ")", "# not transpose", "\n", "center_clone", "=", "center_clone", "*", "(", "1", "/", "scale_ratio", ")", "\n", "return", "center_clone", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.compute_objectness_gt": [[82, 135], ["utils.nn_distance.nn_distance", "torch.sqrt", "torch.sqrt", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.argmax", "torch.argmax", "torch.Tensor().cuda", "torch.Tensor().cuda", "objectness_scores.transpose", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor", "torch.zeros().cuda.long"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance"], ["", "def", "compute_objectness_gt", "(", "end_points", ",", "unsupervised_inds", ")", ":", "\n", "    ", "\"\"\" Compute cheating objectness loss for the proposals with GT labels\n    Args:\n        end_points: dict (read-only)\n        unsupervised_inds: (batch_size, num_proposal) Tensor with value 0 or 1\n\n    Returns:\n        objectness_loss: scalar Tensor\n        objectness_label: (batch_size, num_proposal) Tensor with value 0 or 1\n        objectness_mask: (batch_size, num_proposal) Tensor with value 0 or 1\n        object_assignment: (batch_size, num_proposal) Tensor with long int\n            within [0,num_gt_object-1]\n    \"\"\"", "\n", "\n", "# Associate proposal and GT objects by point-to-point distances", "\n", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "gt_center", "=", "end_points", "[", "'center_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "\n", "batch_size", "=", "gt_center", ".", "shape", "[", "0", "]", "\n", "num_proposal", "=", "aggregated_vote_xyz", ".", "shape", "[", "1", "]", "\n", "\n", "# ---- set the center of not gt placeholders to be -1000 -----", "\n", "gt_mask", "=", "(", "1", "-", "end_points", "[", "'box_label_mask'", "]", "[", "unsupervised_inds", ",", "...", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "\n", "gt_center", "[", "gt_mask", "]", "=", "-", "1000", "\n", "end_points", "[", "'center_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "=", "gt_center", "\n", "# ----------------", "\n", "\n", "dist1", ",", "ind1", ",", "dist2", ",", "_", "=", "nn_distance", "(", "aggregated_vote_xyz", ",", "gt_center", ")", "# dist1: B_l xK, dist2: B_l xK2", "\n", "\n", "# Generate objectness label and mask", "\n", "# objectness_label: 1 if pred object center is within NEAR_THRESHOLD of any GT object", "\n", "# objectness_mask: 0 if pred object center is in gray zone (DONOTCARE), 1 otherwise", "\n", "euclidean_dist1", "=", "torch", ".", "sqrt", "(", "dist1", "+", "1e-6", ")", "\n", "objectness_label", "=", "torch", ".", "zeros", "(", "(", "batch_size", ",", "num_proposal", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "objectness_mask", "=", "torch", ".", "zeros", "(", "(", "batch_size", ",", "num_proposal", ")", ")", ".", "cuda", "(", ")", "\n", "objectness_label", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", ">", "FAR_THRESHOLD", "]", "=", "1", "\n", "\n", "# Compute objectness loss", "\n", "objectness_scores", "=", "end_points", "[", "'objectness_scores'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "torch", ".", "Tensor", "(", "OBJECTNESS_CLS_WEIGHTS", ")", ".", "cuda", "(", ")", ",", "reduction", "=", "'none'", ")", "\n", "objectness_loss", "=", "criterion", "(", "objectness_scores", ".", "transpose", "(", "2", ",", "1", ")", ",", "objectness_label", ")", "\n", "mask_sum", "=", "(", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "objectness_loss", "=", "torch", ".", "sum", "(", "objectness_loss", "*", "objectness_mask", ")", "/", "mask_sum", "\n", "\n", "object_assignment", "=", "ind1", "# (batch_size, num_proposal) with values in 0,1,...,K2-1", "\n", "\n", "obj_pred_val", "=", "torch", ".", "argmax", "(", "end_points", "[", "'objectness_scores'", "]", "[", "unsupervised_inds", ",", "...", "]", ",", "2", ")", "# B,K", "\n", "obj_acc", "=", "torch", ".", "sum", "(", "(", "obj_pred_val", "==", "objectness_label", ".", "long", "(", ")", ")", ".", "float", "(", ")", "*", "objectness_mask", ")", "/", "mask_sum", "\n", "end_points", "[", "'true_unlabeled_obj_acc'", "]", "=", "obj_acc", "# this is true obj_acc", "\n", "\n", "return", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.compute_objectness_loss": [[137, 197], ["torch.sqrt", "torch.sqrt", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "utils.nn_distance.nn_distance_withcls", "utils.nn_distance.nn_distance", "torch.Tensor().cuda", "torch.Tensor().cuda", "objectness_scores.transpose", "torch.sum", "torch.sum", "torch.argmax", "torch.argmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.sum", "torch.sum", "torch.Tensor", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance_withcls", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance"], ["", "def", "compute_objectness_loss", "(", "end_points", ",", "unsupervised_inds", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Compute objectness loss for the proposals.\n\n    Args:\n        end_points: dict (read-only)\n        unsupervised_inds: (batch_size, num_proposal) Tensor with value 0 or 1\n\n    Returns:\n        objectness_loss: scalar Tensor\n        objectness_label: (batch_size, num_seed) Tensor with value 0 or 1\n        objectness_mask: (batch_size, num_seed) Tensor with value 0 or 1\n        object_assignment: (batch_size, num_seed) Tensor with long int\n            within [0,num_gt_object-1]\n    \"\"\"", "\n", "\n", "# Associate proposal and GT objects by point-to-point distances", "\n", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "gt_center", "=", "end_points", "[", "'unlabeled_center_label'", "]", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "\n", "batch_size", "=", "gt_center", ".", "shape", "[", "0", "]", "# B_l", "\n", "num_proposal", "=", "aggregated_vote_xyz", ".", "shape", "[", "1", "]", "\n", "\n", "# ---- mod -----", "\n", "gt_mask", "=", "(", "1", "-", "end_points", "[", "'unlabeled_box_label_mask'", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "\n", "gt_center", "[", "gt_mask", "]", "=", "-", "1000", "\n", "# ----------------", "\n", "\n", "#####################", "\n", "# may lose 15%-20% obj=1 (estimate)", "\n", "if", "config_dict", "[", "'samecls_match'", "]", ":", "\n", "        ", "dist1", ",", "ind1", ",", "dist2", ",", "ind2", "=", "nn_distance_withcls", "(", "aggregated_vote_xyz", ",", "gt_center", ",", "\n", "torch", ".", "argmax", "(", "\n", "end_points", "[", "'sem_cls_scores'", "]", "[", "unsupervised_inds", ",", "...", "]", ",", "dim", "=", "2", ")", ",", "\n", "end_points", "[", "'unlabeled_sem_cls_label'", "]", ")", "\n", "", "else", ":", "\n", "        ", "dist1", ",", "ind1", ",", "dist2", ",", "ind2", "=", "nn_distance", "(", "aggregated_vote_xyz", ",", "gt_center", ")", "# dist1: B_l xK, dist2: B_l xK2", "\n", "\n", "######################", "\n", "\n", "# Generate objectness label and mask", "\n", "# objectness_label: 1 if pred object center is within NEAR_THRESHOLD of any GT object", "\n", "# objectness_mask: 0 if pred object center is in gray zone (DONOTCARE), 1 otherwise", "\n", "", "euclidean_dist1", "=", "torch", ".", "sqrt", "(", "dist1", "+", "1e-6", ")", "\n", "objectness_label", "=", "torch", ".", "zeros", "(", "(", "batch_size", ",", "num_proposal", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "objectness_mask", "=", "torch", ".", "zeros", "(", "(", "batch_size", ",", "num_proposal", ")", ")", ".", "cuda", "(", ")", "\n", "objectness_label", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", ">", "FAR_THRESHOLD", "]", "=", "1", "\n", "\n", "# Compute objectness loss", "\n", "objectness_scores", "=", "end_points", "[", "'objectness_scores'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "torch", ".", "Tensor", "(", "OBJECTNESS_CLS_WEIGHTS", ")", ".", "cuda", "(", ")", ",", "reduction", "=", "'none'", ")", "\n", "objectness_loss", "=", "criterion", "(", "objectness_scores", ".", "transpose", "(", "2", ",", "1", ")", ",", "objectness_label", ")", "\n", "objectness_loss", "=", "torch", ".", "sum", "(", "objectness_loss", "*", "objectness_mask", ")", "/", "(", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "\n", "# Set assignment", "\n", "object_assignment", "=", "ind1", "# (batch_size, num_proposal) with values in 0,1,...,K2-1", "\n", "\n", "# only use these for cheating experiments", "\n", "return", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.compute_box_and_sem_cls_loss": [[199, 290], ["end_points[].float", "utils.nn_distance.nn_distance", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.gather", "torch.gather", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_.scatter_", "torch.sum", "torch.sum", "utils.nn_distance.huber_loss", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.gather", "torch.gather", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_.scatter_", "torch.cuda.FloatTensor().zero_.unsqueeze().repeat", "torch.sum", "torch.sum", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "[].transpose", "torch.sum", "torch.sum", "torch.gather.unsqueeze", "torch.sum", "torch.sum", "[].transpose", "torch.sum", "torch.sum", "object_assignment.unsqueeze().repeat", "torch.gather.unsqueeze", "utils.nn_distance.huber_loss", "torch.sum", "torch.sum", "[].transpose", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor().zero_.unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "object_assignment.unsqueeze", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy", "torch.from_numpy", "mean_size_arr.astype"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss"], ["", "def", "compute_box_and_sem_cls_loss", "(", "end_points", ",", "unsupervised_inds", ",", "config", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Compute 3D bounding box and semantic classification loss.\n\n    Args:\n        end_points: dict (read-only)\n        unsupervised_inds: (batch_size, num_proposal) Tensor with value 0 or 1\n\n    Returns:\n        center_loss\n        heading_cls_loss\n        heading_reg_loss\n        size_cls_loss\n        size_reg_loss\n        sem_cls_loss\n    \"\"\"", "\n", "\n", "num_heading_bin", "=", "config", ".", "num_heading_bin", "\n", "num_size_cluster", "=", "config", ".", "num_size_cluster", "\n", "mean_size_arr", "=", "config", ".", "mean_size_arr", "\n", "\n", "object_assignment", "=", "end_points", "[", "'unlabeled_object_assignment'", "]", "\n", "box_label_mask", "=", "end_points", "[", "'unlabeled_box_label_mask'", "]", "\n", "objectness_label", "=", "end_points", "[", "'unlabeled_objectness_label'", "]", ".", "float", "(", ")", "\n", "batch_size", "=", "object_assignment", ".", "shape", "[", "0", "]", "\n", "# Compute center loss", "\n", "dist1", ",", "ind1", ",", "dist2", ",", "_", "=", "nn_distance", "(", "end_points", "[", "'center'", "]", "[", "unsupervised_inds", ",", "...", "]", ",", "\n", "end_points", "[", "'unlabeled_center_label'", "]", "[", ":", ",", ":", ",", "0", ":", "3", "]", ")", "# dist1: BxK, dist2: BxK2", "\n", "\n", "centroid_reg_loss1", "=", "torch", ".", "sum", "(", "dist1", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "centroid_reg_loss2", "=", "torch", ".", "sum", "(", "dist2", "*", "box_label_mask", ")", "/", "(", "torch", ".", "sum", "(", "box_label_mask", ")", "+", "1e-6", ")", "\n", "center_loss", "=", "centroid_reg_loss1", "+", "centroid_reg_loss2", "\n", "\n", "# Compute heading loss", "\n", "heading_class_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'unlabeled_heading_class_label'", "]", ",", "1", ",", "\n", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_heading_class", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "heading_class_loss", "=", "criterion_heading_class", "(", "end_points", "[", "'heading_scores'", "]", "[", "unsupervised_inds", ",", "...", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "\n", "heading_class_label", ")", "# (B,K)", "\n", "heading_class_loss", "=", "torch", ".", "sum", "(", "heading_class_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "heading_residual_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'unlabeled_heading_residual_label'", "]", ",", "1", ",", "\n", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "heading_residual_normalized_label", "=", "heading_residual_label", "/", "(", "np", ".", "pi", "/", "num_heading_bin", ")", "\n", "\n", "# Ref: https://discuss.pytorch.org/t/convert-int-into-one-hot-format/507/3", "\n", "heading_label_one_hot", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "batch_size", ",", "heading_class_label", ".", "shape", "[", "1", "]", ",", "num_heading_bin", ")", ".", "zero_", "(", ")", "\n", "heading_label_one_hot", ".", "scatter_", "(", "2", ",", "heading_class_label", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "1", ")", "# src==1 so it's *one-hot* (B,K,num_heading_bin)", "\n", "heading_residual_pred", "=", "torch", ".", "sum", "(", "\n", "end_points", "[", "'heading_residuals_normalized'", "]", "[", "unsupervised_inds", ",", "...", "]", "*", "heading_label_one_hot", ",", "-", "1", ")", "\n", "heading_diff", "=", "heading_residual_pred", "-", "heading_residual_normalized_label", "\n", "heading_residual_normalized_loss", "=", "huber_loss", "(", "heading_diff", ",", "delta", "=", "1.0", ")", "# (B,K)", "\n", "heading_residual_normalized_loss", "=", "torch", ".", "sum", "(", "heading_residual_normalized_loss", "*", "objectness_label", ")", "/", "(", "\n", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "# Compute size loss", "\n", "size_class_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'unlabeled_size_class_label'", "]", ",", "1", ",", "\n", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_size_class", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "size_class_loss", "=", "criterion_size_class", "(", "end_points", "[", "'size_scores'", "]", "[", "unsupervised_inds", ",", "...", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "\n", "size_class_label", ")", "# (B,K)", "\n", "size_class_loss", "=", "torch", ".", "sum", "(", "size_class_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "size_residual_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'unlabeled_size_residual_label'", "]", ",", "1", ",", "\n", "object_assignment", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "3", ")", ")", "# select (B,K,3) from (B,K2,3)", "\n", "size_label_one_hot", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "batch_size", ",", "size_class_label", ".", "shape", "[", "1", "]", ",", "num_size_cluster", ")", ".", "zero_", "(", ")", "\n", "size_label_one_hot", ".", "scatter_", "(", "2", ",", "size_class_label", ".", "unsqueeze", "(", "-", "1", ")", ",", "1", ")", "# src==1 so it's *one-hot* (B,K,num_size_cluster)", "\n", "size_label_one_hot_tiled", "=", "size_label_one_hot", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", "# (B,K,num_size_cluster,3)", "\n", "predicted_size_residual_normalized", "=", "torch", ".", "sum", "(", "\n", "end_points", "[", "'size_residuals_normalized'", "]", "[", "unsupervised_inds", ",", "...", "]", "*", "size_label_one_hot_tiled", ",", "\n", "2", ")", "# (B,K,3)", "\n", "\n", "mean_size_arr_expanded", "=", "torch", ".", "from_numpy", "(", "mean_size_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "\n", "0", ")", "# (1,1,num_size_cluster,3)", "\n", "mean_size_label", "=", "torch", ".", "sum", "(", "size_label_one_hot_tiled", "*", "mean_size_arr_expanded", ",", "2", ")", "# (B,K,3)", "\n", "size_residual_label_normalized", "=", "size_residual_label", "/", "mean_size_label", "# (B,K,3)", "\n", "size_diff", "=", "predicted_size_residual_normalized", "-", "size_residual_label_normalized", "\n", "size_residual_normalized_loss", "=", "torch", ".", "mean", "(", "huber_loss", "(", "size_diff", ",", "delta", "=", "1.0", ")", ",", "-", "1", ")", "# (B,K,3) -> (B,K)", "\n", "size_residual_normalized_loss", "=", "torch", ".", "sum", "(", "size_residual_normalized_loss", "*", "objectness_label", ")", "/", "(", "\n", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "# 3.4 Semantic cls loss", "\n", "sem_cls_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'unlabeled_sem_cls_label'", "]", ",", "1", ",", "\n", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_sem_cls", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "sem_cls_loss", "=", "criterion_sem_cls", "(", "end_points", "[", "'sem_cls_scores'", "]", "[", "unsupervised_inds", ",", "...", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "\n", "sem_cls_label", ")", "# (B,K)", "\n", "sem_cls_loss", "=", "torch", ".", "sum", "(", "sem_cls_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "return", "center_loss", ",", "heading_class_loss", ",", "heading_residual_normalized_loss", ",", "size_class_loss", ",", "size_residual_normalized_loss", ",", "sem_cls_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.get_pseudo_detection_loss": [[292, 362], ["torch.nonzero().squeeze().long", "torch.nonzero().squeeze().long", "loss_helper_unlabeled.compute_objectness_loss", "loss_helper_unlabeled.compute_box_and_sem_cls_loss", "loss_helper_unlabeled.compute_objectness_gt", "torch.sum", "torch.sum", "float", "torch.argmax", "torch.argmax", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "pseudo_objectness_label.float().cuda", "torch.sum", "torch.sum", "float", "torch.sum", "torch.sum", "pseudo_objectness_mask.float", "torch.sum", "torch.sum", "torch.nonzero", "torch.nonzero", "pseudo_objectness_label.float", "gt_objectness_label.long"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_objectness_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_box_and_sem_cls_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.compute_objectness_gt"], ["", "def", "get_pseudo_detection_loss", "(", "end_points", ",", "ema_end_points", ",", "config", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Loss functions for supervised samples in training detector\n\n    Args:\n        end_points: dict\n            {\n                seed_xyz, seed_inds, vote_xyz,\n                center,\n                heading_scores, heading_residuals_normalized,\n                size_scores, size_residuals_normalized,\n                sem_cls_scores, #seed_logits,#\n                center_label,\n                heading_class_label, heading_residual_label,\n                size_class_label, size_residual_label,\n                sem_cls_label,\n                box_label_mask,\n                vote_label, vote_label_mask\n            }\n        config: dataset config instance\n    Returns:\n        votenet_loss: pytorch scalar tensor\n        end_points: dict\n    \"\"\"", "\n", "supervised_mask", "=", "end_points", "[", "'supervised_mask'", "]", "\n", "unsupervised_inds", "=", "torch", ".", "nonzero", "(", "1", "-", "supervised_mask", ")", ".", "squeeze", "(", "1", ")", ".", "long", "(", ")", "\n", "\n", "pseudo_objectness_loss", ",", "pseudo_objectness_label", ",", "pseudo_objectness_mask", ",", "pseudo_object_assignment", "=", "compute_objectness_loss", "(", "end_points", ",", "unsupervised_inds", ",", "config_dict", ")", "\n", "\n", "if", "config_dict", "[", "'view_stats'", "]", ":", "\n", "        ", "gt_objectness_loss", ",", "gt_objectness_label", ",", "gt_objectness_mask", ",", "gt_object_assignment", "=", "compute_objectness_gt", "(", "end_points", ",", "unsupervised_inds", ")", "# calculate ground truth objectness", "\n", "\n", "", "end_points", "[", "'unlabeled_objectness_loss'", "]", "=", "pseudo_objectness_loss", "\n", "end_points", "[", "'unlabeled_objectness_label'", "]", "=", "pseudo_objectness_label", "\n", "end_points", "[", "'unlabeled_objectness_mask'", "]", "=", "pseudo_objectness_mask", "\n", "end_points", "[", "'unlabeled_object_assignment'", "]", "=", "pseudo_object_assignment", "\n", "total_num_proposal", "=", "pseudo_objectness_label", ".", "shape", "[", "0", "]", "*", "pseudo_objectness_label", ".", "shape", "[", "1", "]", "\n", "end_points", "[", "'unlabeled_pos_ratio'", "]", "=", "torch", ".", "sum", "(", "pseudo_objectness_label", ".", "float", "(", ")", ".", "cuda", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "\n", "end_points", "[", "'unlabeled_neg_ratio'", "]", "=", "torch", ".", "sum", "(", "pseudo_objectness_mask", ".", "float", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "-", "end_points", "[", "'unlabeled_pos_ratio'", "]", "\n", "# Box loss and sem cls loss", "\n", "center_loss", ",", "heading_cls_loss", ",", "heading_reg_loss", ",", "size_cls_loss", ",", "size_reg_loss", ",", "sem_cls_loss", "=", "compute_box_and_sem_cls_loss", "(", "end_points", ",", "unsupervised_inds", ",", "config", ",", "config_dict", ")", "\n", "\n", "end_points", "[", "'unlabeled_center_loss'", "]", "=", "center_loss", "\n", "end_points", "[", "'unlabeled_heading_cls_loss'", "]", "=", "heading_cls_loss", "\n", "end_points", "[", "'unlabeled_heading_reg_loss'", "]", "=", "heading_reg_loss", "\n", "end_points", "[", "'unlabeled_size_cls_loss'", "]", "=", "size_cls_loss", "\n", "end_points", "[", "'unlabeled_size_reg_loss'", "]", "=", "size_reg_loss", "\n", "end_points", "[", "'unlabeled_sem_cls_loss'", "]", "=", "sem_cls_loss", "\n", "box_loss", "=", "0.1", "*", "heading_cls_loss", "+", "heading_reg_loss", "+", "0.1", "*", "size_cls_loss", "+", "size_reg_loss", "+", "center_loss", "\n", "end_points", "[", "'unlabeled_box_loss'", "]", "=", "box_loss", "\n", "\n", "unlabeled_loss", "=", "box_loss", "+", "0.1", "*", "sem_cls_loss", "\n", "\n", "unlabeled_loss", "*=", "10", "\n", "end_points", "[", "'unlabeled_detection_loss'", "]", "=", "unlabeled_loss", "\n", "\n", "# --------------------------------------------", "\n", "# Some other statistics", "\n", "if", "config_dict", "[", "'view_stats'", "]", ":", "\n", "        ", "obj_scores", "=", "end_points", "[", "'objectness_scores'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "obj_pred_val", "=", "torch", ".", "argmax", "(", "obj_scores", ",", "2", ")", "# B,K", "\n", "obj_acc", "=", "torch", ".", "sum", "(", "(", "obj_pred_val", "==", "gt_objectness_label", ".", "long", "(", ")", ")", ".", "float", "(", ")", "*", "gt_objectness_mask", ")", "/", "(", "\n", "torch", ".", "sum", "(", "gt_objectness_mask", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'unlabeled_obj_acc'", "]", "=", "obj_acc", "\n", "\n", "", "return", "unlabeled_loss", ",", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.get_pseudo_labels": [[364, 539], ["torch.zeros().cuda", "torch.zeros().cuda", "torch.max", "torch.max", "torch.nonzero().squeeze().long", "torch.nonzero().squeeze().long", "torch.logical_and", "torch.logical_and", "torch.logical_and", "torch.logical_and", "torch.argsort", "torch.argsort", "inds[].long", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.max", "torch.max", "argmax_size.unsqueeze().unsqueeze().expand", "torch.max", "torch.max", "argmax_heading.unsqueeze", "torch.gather().squeeze", "torch.gather().squeeze", "torch.gather().squeeze", "torch.gather().squeeze", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.Softmax", "torch.Softmax", "torch.Sigmoid", "torch.gather().squeeze", "torch.gather().squeeze", "iou_pred.squeeze.squeeze", "models.loss_helper_iou.compute_iou_labels", "torch.abs", "torch.abs", "models.loss_helper_iou.compute_iou_labels", "torch.sum().float", "torch.sum().float", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "numpy.zeros", "torch.gather.detach().cpu().numpy", "numpy.zeros", "models.ap_helper.flip_axis_to_camera", "range", "numpy.ones", "numpy.ones", "torch.gather().detach().cpu().numpy", "torch.gather().detach().cpu().numpy", "torch.gather().detach().cpu().numpy", "torch.gather().detach().cpu().numpy", "torch.gather().detach().cpu().numpy", "torch.gather().detach().cpu().numpy", "range", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "end_points[].sum", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather().squeeze.squeeze", "torch.zeros", "torch.zeros", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "argmax_size.unsqueeze().unsqueeze", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather.detach().cpu().numpy", "range", "numpy.zeros", "range", "utils.nms.lhs_3d_faster_samecls", "torch.sum().float", "torch.sum().float", "torch.sum().float", "torch.sum().float", "torch.sum().float", "torch.sum().float", "torch.sum().float", "torch.sum().float", "torch.gather.unsqueeze", "torch.gather.max", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "inds[].long.unsqueeze().expand", "inds[].long.unsqueeze().expand", "inds[].long.unsqueeze().expand", "torch.logical_not().unsqueeze().expand().bool", "torch.logical_not().unsqueeze().expand().bool", "torch.gather", "torch.gather", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.gather.view", "inds[].long.unsqueeze().expand", "inds[].long.unsqueeze().expand", "torch.gather.detach().cpu", "config_dict[].class2angle", "config_dict[].class2size", "utils.box_util.get_3d_box", "torch.gather().detach().cpu", "torch.gather().detach().cpu", "torch.gather().detach().cpu", "torch.gather().detach().cpu", "torch.gather().detach().cpu", "torch.gather().detach().cpu", "numpy.min", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.max", "numpy.where", "len", "torch.from_numpy().bool().cuda", "torch.from_numpy().bool().cuda", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "inds[].long.unsqueeze().expand", "torch.nonzero", "torch.nonzero", "argmax_cls.unsqueeze", "iou_labels.view", "torch.abs.view", "argmax_size.unsqueeze", "torch.gather.detach().cpu", "pred_heading_class_[].detach().cpu().numpy", "pred_heading_residual_[].detach().cpu().numpy", "int", "pred_size_residual_[].detach().cpu().numpy", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "inds[].long.unsqueeze", "inds[].long.unsqueeze", "inds[].long.unsqueeze", "torch.logical_not().unsqueeze().expand", "torch.logical_not().unsqueeze().expand", "inds[].long.unsqueeze", "inds[].long.unsqueeze", "torch.gather.detach", "pred_size_class_[].detach().cpu().numpy", "torch.gather().detach", "torch.gather().detach", "torch.gather().detach", "torch.gather().detach", "torch.gather().detach", "torch.gather().detach", "torch.from_numpy().bool", "torch.from_numpy().bool", "inds[].long.unsqueeze", "torch.gather.detach", "pred_heading_class_[].detach().cpu", "pred_heading_residual_[].detach().cpu", "pred_size_residual_[].detach().cpu", "torch.logical_not().unsqueeze", "torch.logical_not().unsqueeze", "pred_size_class_[].detach().cpu", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.from_numpy", "torch.from_numpy", "pred_heading_class_[].detach", "pred_heading_residual_[].detach", "pred_size_residual_[].detach", "torch.logical_not", "torch.logical_not", "pred_size_class_[].detach"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_iou.compute_iou_labels", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_iou.compute_iou_labels", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.ap_helper.flip_axis_to_camera", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nms.lhs_3d_faster_samecls", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.get_3d_box"], ["", "def", "get_pseudo_labels", "(", "end_points", ",", "ema_end_points", ",", "pred_center", ",", "pred_sem_cls", ",", "pred_objectness", ",", "pred_heading_scores", ",", "\n", "pred_heading_residuals", ",", "\n", "pred_size_scores", ",", "pred_size_residuals", ",", "pred_vote_xyz", ",", "config_dict", ")", ":", "\n", "    ", "batch_size", ",", "num_proposal", "=", "pred_center", ".", "shape", "[", ":", "2", "]", "\n", "label_mask", "=", "torch", ".", "zeros", "(", "(", "batch_size", ",", "MAX_NUM_OBJ", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "\n", "# obj score threshold", "\n", "pred_objectness", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "(", "pred_objectness", ")", "\n", "# the second element is positive score", "\n", "pos_obj", "=", "pred_objectness", "[", ":", ",", ":", ",", "1", "]", "\n", "neg_obj", "=", "pred_objectness", "[", ":", ",", ":", ",", "0", "]", "\n", "objectness_mask", "=", "pos_obj", ">", "config_dict", "[", "'obj_threshold'", "]", "\n", "neg_objectness_mask", "=", "neg_obj", ">", "0.9", "# deprecated", "\n", "\n", "# cls score threshold", "\n", "pred_sem_cls", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "(", "pred_sem_cls", ")", "\n", "max_cls", ",", "argmax_cls", "=", "torch", ".", "max", "(", "pred_sem_cls", ",", "dim", "=", "2", ")", "\n", "cls_mask", "=", "max_cls", ">", "config_dict", "[", "'cls_threshold'", "]", "\n", "\n", "supervised_mask", "=", "end_points", "[", "'supervised_mask'", "]", "\n", "unsupervised_inds", "=", "torch", ".", "nonzero", "(", "1", "-", "supervised_mask", ")", ".", "squeeze", "(", "1", ")", ".", "long", "(", ")", "\n", "\n", "iou_pred", "=", "nn", ".", "Sigmoid", "(", ")", "(", "ema_end_points", "[", "'iou_scores'", "]", "[", "unsupervised_inds", ",", "...", "]", ")", "\n", "if", "iou_pred", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "        ", "iou_pred", "=", "torch", ".", "gather", "(", "iou_pred", ",", "2", ",", "argmax_cls", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "# use pred semantic labels", "\n", "", "else", ":", "\n", "        ", "iou_pred", "=", "iou_pred", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "", "if", "config_dict", "[", "'view_stats'", "]", ":", "\n", "# GT IoU labels (cheating) only for analyzing performance", "\n", "        ", "iou_labels", ",", "objectness_label", ",", "object_assignment", "=", "compute_iou_labels", "(", "\n", "end_points", ",", "unsupervised_inds", ",", "pred_vote_xyz", ",", "\n", "pred_center", ",", "pred_sem_cls", ",", "pred_objectness", ",", "pred_heading_scores", ",", "\n", "pred_heading_residuals", ",", "pred_size_scores", ",", "pred_size_residuals", ",", "\n", "config_dict", ")", "\n", "end_points", "[", "'unlabeled_iou_labels'", "]", "=", "iou_labels", "\n", "end_points", "[", "'unlabeled_pred_iou_value'", "]", "=", "torch", ".", "sum", "(", "iou_labels", ")", "/", "iou_labels", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "end_points", "[", "'unlabeled_pred_iou_obj_value'", "]", "=", "torch", ".", "sum", "(", "iou_labels", "*", "objectness_label", ")", "/", "(", "\n", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "iou_acc", "=", "torch", ".", "abs", "(", "iou_pred", "-", "iou_labels", ")", "\n", "end_points", "[", "'unlabeled_iou_acc'", "]", "=", "torch", ".", "sum", "(", "iou_acc", ")", "/", "iou_acc", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "obj_true_num", "=", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'unlabeled_iou_obj_acc'", "]", "=", "torch", ".", "sum", "(", "iou_acc", "*", "objectness_label", ")", "/", "obj_true_num", "\n", "\n", "# for coverage calculation, associates every gt with pseudo labels", "\n", "gt_to_pseudo_iou", "=", "compute_iou_labels", "(", "\n", "end_points", ",", "unsupervised_inds", ",", "pred_vote_xyz", ",", "\n", "pred_center", ",", "pred_sem_cls", ",", "pred_objectness", ",", "pred_heading_scores", ",", "\n", "pred_heading_residuals", ",", "pred_size_scores", ",", "pred_size_residuals", ",", "\n", "config_dict", ",", "reverse", "=", "True", ")", "\n", "\n", "", "iou_threshold", "=", "config_dict", "[", "'iou_threshold'", "]", "\n", "iou_mask", "=", "iou_pred", ">", "iou_threshold", "\n", "before_iou_mask", "=", "torch", ".", "logical_and", "(", "cls_mask", ",", "objectness_mask", ")", "\n", "final_mask", "=", "torch", ".", "logical_and", "(", "before_iou_mask", ",", "iou_mask", ")", "\n", "\n", "# we only keep MAX_NUM_OBJ predictions", "\n", "# however, after filtering the number can still exceed this", "\n", "# so we keep the ones with larger pos_obj * max_cls", "\n", "inds", "=", "torch", ".", "argsort", "(", "pos_obj", "*", "max_cls", "*", "final_mask", ",", "dim", "=", "1", ",", "descending", "=", "True", ")", "\n", "\n", "inds", "=", "inds", "[", ":", ",", ":", "MAX_NUM_OBJ", "]", ".", "long", "(", ")", "\n", "final_mask_sorted", "=", "torch", ".", "gather", "(", "final_mask", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "end_points", "[", "'pseudo_gt_ratio'", "]", "=", "torch", ".", "sum", "(", "final_mask_sorted", ")", ".", "float", "(", ")", "/", "final_mask_sorted", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "\n", "neg_objectness_mask", "=", "torch", ".", "gather", "(", "neg_objectness_mask", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "\n", "max_size", ",", "argmax_size", "=", "torch", ".", "max", "(", "pred_size_scores", ",", "dim", "=", "2", ")", "\n", "size_inds", "=", "argmax_size", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "-", "1", ",", "3", ")", "\n", "max_heading", ",", "argmax_heading", "=", "torch", ".", "max", "(", "pred_heading_scores", ",", "dim", "=", "2", ")", "\n", "heading_inds", "=", "argmax_heading", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "# now only one class residuals", "\n", "pred_heading_residuals", "=", "torch", ".", "gather", "(", "pred_heading_residuals", ",", "dim", "=", "2", ",", "index", "=", "heading_inds", ")", ".", "squeeze", "(", "2", ")", "\n", "pred_size_residuals", "=", "torch", ".", "gather", "(", "pred_size_residuals", ",", "dim", "=", "2", ",", "index", "=", "size_inds", ")", ".", "squeeze", "(", "2", ")", "\n", "\n", "if", "config_dict", "[", "'use_lhs'", "]", ":", "\n", "        ", "pred_center_", "=", "torch", ".", "gather", "(", "pred_center", ",", "dim", "=", "1", ",", "index", "=", "inds", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ")", "\n", "pred_heading_class_", "=", "torch", ".", "gather", "(", "argmax_heading", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "pred_heading_residual_", "=", "torch", ".", "gather", "(", "pred_heading_residuals", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "pred_size_class_", "=", "torch", ".", "gather", "(", "argmax_size", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "pred_size_residual_", "=", "torch", ".", "gather", "(", "pred_size_residuals", ",", "dim", "=", "1", ",", "index", "=", "inds", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ")", "\n", "num_proposal", "=", "pred_center_", ".", "shape", "[", "1", "]", "\n", "bsize", "=", "pred_center_", ".", "shape", "[", "0", "]", "\n", "pred_box_parameters", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "num_proposal", ",", "7", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred_box_parameters", "[", ":", ",", ":", ",", "0", ":", "3", "]", "=", "pred_center_", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_corners_3d_upright_camera", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "num_proposal", ",", "8", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "pred_center_upright_camera", "=", "flip_axis_to_camera", "(", "pred_center_", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "num_proposal", ")", ":", "\n", "                ", "heading_angle", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2angle", "(", "pred_heading_class_", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "\n", "pred_heading_residual_", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "box_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size", "(", "int", "(", "pred_size_class_", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "\n", "pred_size_residual_", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "pred_box_parameters", "[", "i", ",", "j", ",", "3", ":", "6", "]", "=", "box_size", "\n", "pred_box_parameters", "[", "i", ",", "j", ",", "6", "]", "=", "heading_angle", "\n", "corners_3d_upright_camera", "=", "get_3d_box", "(", "box_size", ",", "heading_angle", ",", "pred_center_upright_camera", "[", "i", ",", "j", ",", ":", "]", ")", "\n", "pred_corners_3d_upright_camera", "[", "i", ",", "j", "]", "=", "corners_3d_upright_camera", "\n", "\n", "# pred_corners_3d_upright_camera, _ = predictions2corners3d(end_points, config_dict)", "\n", "", "", "pred_mask", "=", "np", ".", "ones", "(", "(", "batch_size", ",", "MAX_NUM_OBJ", ")", ")", "\n", "nonempty_box_mask", "=", "np", ".", "ones", "(", "(", "batch_size", ",", "MAX_NUM_OBJ", ")", ")", "\n", "pos_obj_numpy", "=", "torch", ".", "gather", "(", "pos_obj", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_sem_cls_numpy", "=", "torch", ".", "gather", "(", "argmax_cls", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "iou_numpy", "=", "torch", ".", "gather", "(", "iou_pred", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "boxes_3d_with_prob", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "8", ")", ")", "\n", "for", "j", "in", "range", "(", "MAX_NUM_OBJ", ")", ":", "\n", "                ", "boxes_3d_with_prob", "[", "j", ",", "0", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "1", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "2", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "3", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "4", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "5", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "6", "]", "=", "pos_obj_numpy", "[", "i", ",", "j", "]", "*", "iou_numpy", "[", "i", ",", "j", "]", "\n", "boxes_3d_with_prob", "[", "j", ",", "7", "]", "=", "pred_sem_cls_numpy", "[", "\n", "i", ",", "j", "]", "# only suppress if the two boxes are of the same class!!", "\n", "", "nonempty_box_inds", "=", "np", ".", "where", "(", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ")", "[", "0", "]", "\n", "\n", "# here we do not consider orientation, in accordance to test time nms", "\n", "pick", "=", "lhs_3d_faster_samecls", "(", "boxes_3d_with_prob", "[", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "config_dict", "[", "'nms_iou'", "]", ",", "config_dict", "[", "'use_old_type_nms'", "]", ")", "\n", "assert", "(", "len", "(", "pick", ")", ">", "0", ")", "\n", "pred_mask", "[", "i", ",", "nonempty_box_inds", "[", "pick", "]", "]", "=", "0", "\n", "# end_points['pred_mask'] = pred_mask", "\n", "", "final_mask_sorted", "[", "torch", ".", "from_numpy", "(", "pred_mask", ")", ".", "bool", "(", ")", ".", "cuda", "(", ")", "]", "=", "0", "\n", "\n", "", "if", "config_dict", "[", "'view_stats'", "]", ":", "\n", "# ground truth coverage calculation", "\n", "        ", "selected_objectness_label", "=", "torch", ".", "gather", "(", "objectness_label", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "selected_object_assignment", "=", "torch", ".", "gather", "(", "object_assignment", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "gt_count", "=", "end_points", "[", "'box_label_mask'", "]", ".", "sum", "(", ")", "\n", "\n", "picked_iou_labels", "=", "torch", ".", "gather", "(", "iou_labels", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "end_points", "[", "'final_iou_avg_value'", "]", "=", "torch", ".", "sum", "(", "picked_iou_labels", "*", "final_mask_sorted", ")", ".", "float", "(", ")", "/", "(", "\n", "torch", ".", "sum", "(", "final_mask_sorted", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'final_iou_avg_obj_value'", "]", "=", "torch", ".", "sum", "(", "\n", "picked_iou_labels", "*", "final_mask_sorted", "*", "selected_objectness_label", ")", ".", "float", "(", ")", "/", "(", "\n", "torch", ".", "sum", "(", "final_mask_sorted", "*", "selected_objectness_label", ")", "+", "1e-6", ")", "\n", "selected_cls_pred", "=", "torch", ".", "gather", "(", "argmax_cls", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "selected_cls_gt", "=", "torch", ".", "gather", "(", "end_points", "[", "'sem_cls_label'", "]", "[", "unsupervised_inds", ",", "...", "]", ",", "dim", "=", "1", ",", "\n", "index", "=", "selected_object_assignment", ")", "\n", "correct_cls", "=", "selected_cls_pred", "==", "selected_cls_gt", "\n", "end_points", "[", "'final_cls_value'", "]", "=", "torch", ".", "sum", "(", "\n", "correct_cls", "*", "final_mask_sorted", ")", ".", "float", "(", ")", "/", "(", "\n", "torch", ".", "sum", "(", "final_mask_sorted", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'final_cls_obj_value'", "]", "=", "torch", ".", "sum", "(", "\n", "correct_cls", "*", "final_mask_sorted", "*", "selected_objectness_label", ")", ".", "float", "(", ")", "/", "(", "\n", "torch", ".", "sum", "(", "final_mask_sorted", "*", "selected_objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "gt_to_pseudo_iou", "=", "torch", ".", "gather", "(", "gt_to_pseudo_iou", ",", "dim", "=", "2", ",", "index", "=", "inds", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "64", ",", "-", "1", ")", ")", "\n", "gt_to_pseudo_iou", "=", "gt_to_pseudo_iou", "*", "final_mask_sorted", ".", "unsqueeze", "(", "1", ")", "\n", "gt_to_pseudo_iou", "=", "gt_to_pseudo_iou", ".", "max", "(", "dim", "=", "2", ")", "[", "0", "]", "\n", "range_25", "=", "(", "gt_to_pseudo_iou", ">", "0.25", ")", ".", "float", "(", ")", "\n", "range_5", "=", "(", "gt_to_pseudo_iou", ">", "0.5", ")", ".", "float", "(", ")", "\n", "end_points", "[", "'final_coverage_0.25_value'", "]", "=", "torch", ".", "sum", "(", "range_25", ")", "/", "gt_count", "\n", "end_points", "[", "'final_coverage_0.5_value'", "]", "=", "torch", ".", "sum", "(", "range_5", ")", "/", "gt_count", "\n", "\n", "", "label_mask", "[", "final_mask_sorted", "]", "=", "1", "\n", "heading_label", "=", "torch", ".", "gather", "(", "argmax_heading", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "heading_residual_label", "=", "torch", ".", "gather", "(", "pred_heading_residuals", ".", "squeeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "size_label", "=", "torch", ".", "gather", "(", "argmax_size", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "size_residual_label", "=", "torch", ".", "gather", "(", "pred_size_residuals", ",", "dim", "=", "1", ",", "index", "=", "inds", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ")", "\n", "sem_cls_label", "=", "torch", ".", "gather", "(", "argmax_cls", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "center_label", "=", "torch", ".", "gather", "(", "pred_center", ",", "dim", "=", "1", ",", "index", "=", "inds", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ")", "\n", "center_label", "[", "(", "1", "-", "label_mask", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "]", "=", "-", "1000", "\n", "false_center_label", "=", "torch", ".", "gather", "(", "pred_vote_xyz", ",", "dim", "=", "1", ",", "index", "=", "inds", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ")", "\n", "false_center_label", "[", "torch", ".", "logical_not", "(", "neg_objectness_mask", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "]", "=", "-", "1000", "\n", "\n", "iou_label", "=", "torch", ".", "gather", "(", "iou_pred", ",", "dim", "=", "1", ",", "index", "=", "inds", ")", "\n", "\n", "return", "label_mask", ",", "center_label", ",", "sem_cls_label", ",", "heading_label", ",", "heading_residual_label", ",", "size_label", ",", "size_residual_label", ",", "false_center_label", ",", "iou_label", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.get_unlabeled_loss": [[541, 601], ["loss_helper_unlabeled.get_pseudo_labels", "loss_helper_unlabeled.trans_center", "loss_helper_unlabeled.trans_center", "loss_helper_unlabeled.trans_size", "loss_helper_unlabeled.get_pseudo_detection_loss", "loss_helper_unlabeled.trans_angle", "loss_helper_unlabeled.trans_center", "loss_helper_unlabeled.trans_size", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "torch.nonzero", "torch.nonzero"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.get_pseudo_labels", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.trans_center", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.trans_center", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.trans_size", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.get_pseudo_detection_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.trans_angle", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.trans_center", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_unlabeled.trans_size"], ["", "def", "get_unlabeled_loss", "(", "end_points", ",", "ema_end_points", ",", "config", ",", "config_dict", ")", ":", "\n", "    ", "unlabeled_batch_size", "=", "config_dict", "[", "'unlabeled_batch_size'", "]", "\n", "labeled_num", "=", "torch", ".", "nonzero", "(", "end_points", "[", "'supervised_mask'", "]", ")", ".", "squeeze", "(", "1", ")", ".", "shape", "[", "0", "]", "\n", "pred_center", "=", "ema_end_points", "[", "'center'", "]", "[", "labeled_num", ":", "]", "\n", "pred_sem_cls", "=", "ema_end_points", "[", "'sem_cls_scores'", "]", "[", "labeled_num", ":", "]", "\n", "pred_objectness", "=", "ema_end_points", "[", "'objectness_scores'", "]", "[", "labeled_num", ":", "]", "\n", "pred_heading_scores", "=", "ema_end_points", "[", "'heading_scores'", "]", "[", "labeled_num", ":", "]", "\n", "pred_heading_residuals", "=", "ema_end_points", "[", "'heading_residuals'", "]", "[", "labeled_num", ":", "]", "\n", "pred_size_scores", "=", "ema_end_points", "[", "'size_scores'", "]", "[", "labeled_num", ":", "]", "\n", "pred_size_residuals", "=", "ema_end_points", "[", "'size_residuals'", "]", "[", "labeled_num", ":", "]", "\n", "pred_vote_xyz", "=", "ema_end_points", "[", "'aggregated_vote_xyz'", "]", "[", "labeled_num", ":", "]", "\n", "\n", "# generate pseudo labels", "\n", "label_mask", ",", "center_label", ",", "sem_cls_label", ",", "heading_label", ",", "heading_residual_label", ",", "size_label", ",", "size_residual_label", ",", "false_center_label", ",", "iou_label", "=", "get_pseudo_labels", "(", "end_points", ",", "ema_end_points", ",", "pred_center", ",", "pred_sem_cls", ",", "pred_objectness", ",", "pred_heading_scores", ",", "\n", "pred_heading_residuals", ",", "pred_size_scores", ",", "pred_size_residuals", ",", "pred_vote_xyz", ",", "config_dict", ")", "\n", "\n", "# center and size should be transformed", "\n", "center_label", "=", "trans_center", "(", "center_label", ",", "end_points", "[", "'flip_x_axis'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'flip_y_axis'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'rot_mat'", "]", "[", "labeled_num", ":", "]", ",", "end_points", "[", "'scale'", "]", "[", "labeled_num", ":", "]", ")", "\n", "false_center_label", "=", "trans_center", "(", "false_center_label", ",", "end_points", "[", "'flip_x_axis'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'flip_y_axis'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'rot_mat'", "]", "[", "labeled_num", ":", "]", ",", "end_points", "[", "'scale'", "]", "[", "labeled_num", ":", "]", ")", "\n", "size_residual_label", "=", "trans_size", "(", "size_label", ",", "size_residual_label", ",", "end_points", "[", "'scale'", "]", "[", "labeled_num", ":", "]", ",", "config", ")", "\n", "if", "config_dict", "[", "'dataset'", "]", "==", "'sunrgbd'", ":", "\n", "        ", "heading_label", ",", "heading_residual_label", "=", "trans_angle", "(", "heading_label", ",", "heading_residual_label", ",", "\n", "end_points", "[", "'flip_x_axis'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'flip_y_axis'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'rot_angle'", "]", "[", "labeled_num", ":", "]", ",", "config", ")", "\n", "\n", "", "if", "config_dict", "[", "'view_stats'", "]", ":", "\n", "# also transform gt labels for gt objectness cheating", "\n", "        ", "end_points", "[", "'center_label'", "]", "[", "labeled_num", ":", "]", "=", "trans_center", "(", "end_points", "[", "'center_label'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'flip_x_axis'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'flip_y_axis'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'rot_mat'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'scale'", "]", "[", "labeled_num", ":", "]", ")", "\n", "\n", "end_points", "[", "'size_residual_label'", "]", "[", "labeled_num", ":", "]", "=", "trans_size", "(", "end_points", "[", "'size_class_label'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'size_residual_label'", "]", "[", "labeled_num", ":", "]", ",", "\n", "end_points", "[", "'scale'", "]", "[", "labeled_num", ":", "]", ",", "\n", "config", ")", "\n", "\n", "", "end_points", "[", "'unlabeled_center_label'", "]", "=", "center_label", "\n", "end_points", "[", "'unlabeled_box_label_mask'", "]", "=", "label_mask", "\n", "end_points", "[", "'unlabeled_sem_cls_label'", "]", "=", "sem_cls_label", "\n", "end_points", "[", "'unlabeled_heading_class_label'", "]", "=", "heading_label", "\n", "end_points", "[", "'unlabeled_heading_residual_label'", "]", "=", "heading_residual_label", "\n", "end_points", "[", "'unlabeled_size_class_label'", "]", "=", "size_label", "\n", "end_points", "[", "'unlabeled_size_residual_label'", "]", "=", "size_residual_label", "\n", "end_points", "[", "'unlabeled_false_center_label'", "]", "=", "false_center_label", "\n", "end_points", "[", "'unlabeled_iou_label'", "]", "=", "iou_label", "\n", "\n", "consistency_loss", ",", "end_points", "=", "get_pseudo_detection_loss", "(", "end_points", ",", "ema_end_points", ",", "config", ",", "config_dict", ")", "\n", "\n", "return", "consistency_loss", ",", "end_points", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_iou.compute_iou_from_given_size": [[22, 50], ["config_dict[].class2size_gpu", "config_dict[].class2angle_gpu", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "utils.box_util.box3d_iou_batch_gpu", "iou_labels.detach.view().max", "torch.arange().cuda().unsqueeze().expand().contiguous().view", "iou_labels.detach.gather().view", "iou_labels.detach.detach", "object_assignment.gather().view.gather().view", "iou_labels.detach.view", "torch.arange().cuda().unsqueeze().expand().contiguous", "iou_labels.detach.gather", "object_assignment.gather().view.gather", "torch.arange().cuda().unsqueeze().expand", "torch.arange().cuda().unsqueeze", "torch.arange().cuda", "torch.arange"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou_batch_gpu"], ["def", "compute_iou_from_given_size", "(", "end_points", ",", "unsupervised_inds", ",", "pred_center", ",", "pred_size", ",", "pred_heading", ",", "config_dict", ")", ":", "\n", "    ", "center_label", "=", "end_points", "[", "'center_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "zero_mask", "=", "(", "1", "-", "end_points", "[", "'box_label_mask'", "]", "[", "unsupervised_inds", ",", "...", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "\n", "center_label", "[", "zero_mask", "]", "=", "-", "1000", "\n", "heading_class_label", "=", "end_points", "[", "'heading_class_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "heading_residual_label", "=", "end_points", "[", "'heading_residual_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "size_class_label", "=", "end_points", "[", "'size_class_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "size_residual_label", "=", "end_points", "[", "'size_residual_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "batch_size", ",", "num_proposal", "=", "pred_heading", ".", "shape", "[", ":", "2", "]", "\n", "\n", "# ------------------------- GT BBOX ----------------------------------------", "\n", "gt_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size_gpu", "(", "size_class_label", ",", "size_residual_label", ")", "\n", "gt_angle", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2angle_gpu", "(", "heading_class_label", ",", "heading_residual_label", ")", "\n", "gt_bbox", "=", "torch", ".", "cat", "(", "[", "center_label", ",", "gt_size", ",", "-", "gt_angle", "[", ":", ",", ":", ",", "None", "]", "]", ",", "dim", "=", "2", ")", "\n", "pred_size", "[", "pred_size", "<=", "0", "]", "=", "1e-6", "\n", "pred_bbox", "=", "torch", ".", "cat", "(", "[", "pred_center", ",", "pred_size", ",", "-", "pred_heading", "[", ":", ",", ":", ",", "None", "]", "]", ",", "axis", "=", "2", ")", "\n", "\n", "end_points", "[", "'pred_bbox'", "]", "=", "pred_bbox", "\n", "pred_num", "=", "pred_bbox", ".", "shape", "[", "1", "]", "\n", "gt_bbox_", "=", "gt_bbox", ".", "view", "(", "-", "1", ",", "7", ")", "\n", "pred_bbox_", "=", "pred_bbox", ".", "view", "(", "-", "1", ",", "7", ")", "\n", "iou_labels", "=", "box3d_iou_batch_gpu", "(", "pred_bbox_", ",", "gt_bbox_", ")", "\n", "iou_labels", ",", "object_assignment", "=", "iou_labels", ".", "view", "(", "batch_size", "*", "pred_num", ",", "batch_size", ",", "-", "1", ")", ".", "max", "(", "dim", "=", "2", ")", "\n", "inds", "=", "torch", ".", "arange", "(", "batch_size", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "pred_num", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "iou_labels", "=", "iou_labels", ".", "gather", "(", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "iou_labels", "=", "iou_labels", ".", "detach", "(", ")", "\n", "object_assignment", "=", "object_assignment", ".", "gather", "(", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "return", "iou_labels", ",", "None", ",", "object_assignment", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_iou.compute_iou_labels": [[52, 113], ["torch.argmax", "torch.gather().squeeze", "torch.argmax", "torch.argmax.unsqueeze().unsqueeze().repeat", "torch.gather().squeeze", "utils.nn_distance.nn_distance", "torch.sqrt", "torch.zeros().cuda", "config_dict[].class2size_gpu", "config_dict[].class2angle_gpu", "torch.cat", "config_dict[].class2size_gpu", "torch.cat", "torch.cat.view", "torch.cat.view", "torch.argmax.detach", "torch.zeros().cuda", "config_dict[].class2angle_gpu", "utils.box_util.box3d_iou_batch_gpu", "iou_labels.detach.view", "torch.arange().cuda().unsqueeze().expand().contiguous().view", "iou_labels.detach.gather().view", "iou_labels.detach.detach", "utils.box_util.box3d_iou_batch_gpu", "iou_labels.detach.view().max", "torch.arange().cuda().unsqueeze().expand().contiguous().view", "iou_labels.detach.gather().view", "iou_labels.detach.detach", "object_assignment.gather().view.gather().view", "torch.gather", "torch.argmax.unsqueeze().unsqueeze", "torch.gather", "torch.zeros", "torch.argmax.detach", "torch.argmax.unsqueeze", "torch.zeros", "torch.arange().cuda().unsqueeze().expand().contiguous", "iou_labels.detach.gather", "iou_labels.detach.view", "torch.arange().cuda().unsqueeze().expand().contiguous", "iou_labels.detach.gather", "object_assignment.gather().view.gather", "torch.argmax.unsqueeze", "torch.arange().cuda().unsqueeze().expand", "torch.arange().cuda().unsqueeze().expand", "torch.arange().cuda().unsqueeze", "torch.arange().cuda().unsqueeze", "torch.arange().cuda", "torch.arange().cuda", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou_batch_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou_batch_gpu"], ["", "def", "compute_iou_labels", "(", "end_points", ",", "unsupervised_inds", ",", "pred_votes", ",", "pred_center", ",", "pred_sem_cls", ",", "pred_objectness", ",", "pred_heading_scores", ",", "\n", "pred_heading_residuals", ",", "pred_size_scores", ",", "pred_size_residuals", ",", "config_dict", ",", "reverse", "=", "False", ")", ":", "\n", "\n", "# the end_points labels are not transformed", "\n", "    ", "center_label", "=", "end_points", "[", "'center_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "zero_mask", "=", "(", "1", "-", "end_points", "[", "'box_label_mask'", "]", "[", "unsupervised_inds", ",", "...", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "\n", "center_label", "[", "zero_mask", "]", "=", "-", "1000", "\n", "heading_class_label", "=", "end_points", "[", "'heading_class_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "heading_residual_label", "=", "end_points", "[", "'heading_residual_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "size_class_label", "=", "end_points", "[", "'size_class_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "size_residual_label", "=", "end_points", "[", "'size_residual_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "\n", "pred_heading_class", "=", "torch", ".", "argmax", "(", "pred_heading_scores", ",", "-", "1", ")", "\n", "pred_heading_residual", "=", "torch", ".", "gather", "(", "pred_heading_residuals", ",", "2", ",", "pred_heading_class", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "2", ")", "\n", "pred_size_class", "=", "torch", ".", "argmax", "(", "pred_size_scores", ",", "-", "1", ")", "\n", "pred_size_class_inds", "=", "pred_size_class", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", "\n", "pred_size_residual", "=", "torch", ".", "gather", "(", "pred_size_residuals", ",", "2", ",", "pred_size_class_inds", ")", ".", "squeeze", "(", "2", ")", "# B, num_proposals, 3", "\n", "\n", "dist1", ",", "object_assignment", ",", "_", ",", "_", "=", "nn_distance", "(", "pred_votes", ",", "center_label", ")", "\n", "euclidean_dist1", "=", "torch", ".", "sqrt", "(", "dist1", "+", "1e-6", ")", "\n", "batch_size", ",", "num_proposal", "=", "euclidean_dist1", ".", "shape", "[", ":", "2", "]", "\n", "objectness_label", "=", "torch", ".", "zeros", "(", "(", "batch_size", ",", "num_proposal", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "objectness_label", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "\n", "# ------------------------- GT BBOX ----------------------------------------", "\n", "gt_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size_gpu", "(", "size_class_label", ",", "size_residual_label", ")", "\n", "gt_angle", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2angle_gpu", "(", "heading_class_label", ",", "heading_residual_label", ")", "\n", "gt_bbox", "=", "torch", ".", "cat", "(", "[", "center_label", ",", "gt_size", ",", "-", "gt_angle", "[", ":", ",", ":", ",", "None", "]", "]", ",", "dim", "=", "2", ")", "\n", "\n", "pred_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size_gpu", "(", "pred_size_class", ".", "detach", "(", ")", ",", "pred_size_residual", ")", "\n", "pred_size", "[", "pred_size", "<=", "0", "]", "=", "1e-6", "\n", "\n", "if", "config_dict", "[", "'dataset_config'", "]", ".", "num_heading_bin", "==", "1", ":", "\n", "        ", "pred_angle", "=", "torch", ".", "zeros", "(", "pred_size", ".", "shape", "[", ":", "2", "]", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "pred_angle", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2angle_gpu", "(", "pred_heading_class", ".", "detach", "(", ")", ",", "pred_heading_residual", ")", "\n", "", "pred_bbox", "=", "torch", ".", "cat", "(", "[", "pred_center", ",", "pred_size", ",", "-", "pred_angle", "[", ":", ",", ":", ",", "None", "]", "]", ",", "axis", "=", "2", ")", "\n", "\n", "end_points", "[", "'pred_bbox'", "]", "=", "pred_bbox", "\n", "pred_num", "=", "pred_bbox", ".", "shape", "[", "1", "]", "\n", "gt_num", "=", "gt_bbox", ".", "shape", "[", "1", "]", "\n", "\n", "# start = time.time()", "\n", "gt_bbox_", "=", "gt_bbox", ".", "view", "(", "-", "1", ",", "7", ")", "\n", "pred_bbox_", "=", "pred_bbox", ".", "view", "(", "-", "1", ",", "7", ")", "\n", "if", "reverse", ":", "\n", "        ", "iou_labels", "=", "box3d_iou_batch_gpu", "(", "gt_bbox_", ",", "pred_bbox_", ")", "\n", "iou_labels", "=", "iou_labels", ".", "view", "(", "batch_size", "*", "gt_num", ",", "batch_size", ",", "-", "1", ")", "\n", "inds", "=", "torch", ".", "arange", "(", "batch_size", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "gt_num", "*", "pred_num", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "\n", "pred_num", ")", "\n", "iou_labels", "=", "iou_labels", ".", "gather", "(", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "pred_num", ")", "\n", "iou_labels", "=", "iou_labels", ".", "detach", "(", ")", "\n", "return", "iou_labels", "\n", "", "else", ":", "\n", "        ", "iou_labels", "=", "box3d_iou_batch_gpu", "(", "pred_bbox_", ",", "gt_bbox_", ")", "\n", "iou_labels", ",", "object_assignment", "=", "iou_labels", ".", "view", "(", "batch_size", "*", "pred_num", ",", "batch_size", ",", "-", "1", ")", ".", "max", "(", "dim", "=", "2", ")", "\n", "inds", "=", "torch", ".", "arange", "(", "batch_size", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "pred_num", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "iou_labels", "=", "iou_labels", ".", "gather", "(", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "iou_labels", "=", "iou_labels", ".", "detach", "(", ")", "\n", "object_assignment", "=", "object_assignment", ".", "gather", "(", "dim", "=", "1", ",", "index", "=", "inds", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "return", "iou_labels", ",", "objectness_label", ",", "object_assignment", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_iou.compute_iou_labels_axis_aligned_gpu": [[115, 153], ["utils.nn_distance.nn_distance", "torch.sqrt", "torch.zeros().cuda", "torch.argmax", "torch.gather", "pred_size_residual.squeeze.squeeze", "torch.cat", "torch.cat", "torch.cat.unsqueeze().expand().contiguous().view", "torch.cat.unsqueeze().expand().contiguous().view", "utils.box_util.box3d_iou_gpu_axis_aligned", "utils.box_util.box3d_iou_gpu_axis_aligned.view().max", "torch.argmax.unsqueeze().unsqueeze().repeat().detach", "config_dict[].class2size_gpu", "config_dict[].class2size_gpu", "gt_corners.unsqueeze().expand().contiguous().view.detach", "torch.sum", "torch.sum", "torch.zeros", "torch.argmax.detach", "torch.cat.unsqueeze().expand().contiguous", "torch.cat.unsqueeze().expand().contiguous", "utils.box_util.box3d_iou_gpu_axis_aligned.view", "torch.sum", "torch.argmax.unsqueeze().unsqueeze().repeat", "utils.box_util.box3d_iou_gpu_axis_aligned.view", "torch.cat.unsqueeze().expand", "torch.cat.unsqueeze().expand", "torch.argmax.unsqueeze().unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.argmax.unsqueeze"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.box3d_iou_gpu_axis_aligned", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size_gpu"], ["", "", "def", "compute_iou_labels_axis_aligned_gpu", "(", "end_points", ",", "unsupervised_inds", ",", "pred_votes", ",", "pred_center", ",", "pred_sem_cls", ",", "pred_objectness", ",", "pred_heading_scores", ",", "\n", "pred_heading_residuals", ",", "pred_size_scores", ",", "pred_size_residuals", ",", "config_dict", ")", ":", "\n", "    ", "center_label", "=", "end_points", "[", "'center_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "zero_mask", "=", "(", "1", "-", "end_points", "[", "'box_label_mask'", "]", "[", "unsupervised_inds", ",", "...", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "bool", "(", ")", "\n", "center_label", "[", "zero_mask", "]", "=", "-", "1000", "\n", "size_class_label", "=", "end_points", "[", "'size_class_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "size_residual_label", "=", "end_points", "[", "'size_residual_label'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "origin_object_assignment", "=", "end_points", "[", "'object_assignment'", "]", "[", "unsupervised_inds", ",", "...", "]", "\n", "\n", "dist1", ",", "object_assignment", ",", "_", ",", "_", "=", "nn_distance", "(", "pred_votes", ",", "center_label", ")", "\n", "euclidean_dist1", "=", "torch", ".", "sqrt", "(", "dist1", "+", "1e-6", ")", "\n", "batch_size", ",", "K", "=", "euclidean_dist1", ".", "shape", "[", ":", "2", "]", "\n", "objectness_label", "=", "torch", ".", "zeros", "(", "(", "batch_size", ",", "K", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "objectness_label", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "\n", "pred_size_class", "=", "torch", ".", "argmax", "(", "pred_size_scores", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_size_residual", "=", "torch", ".", "gather", "(", "pred_size_residuals", ",", "2", ",", "pred_size_class", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", ".", "detach", "(", ")", ")", "# B,num_proposal,1,3", "\n", "pred_size_residual", "=", "pred_size_residual", ".", "squeeze", "(", "2", ")", "\n", "\n", "gt_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size_gpu", "(", "size_class_label", ",", "size_residual_label", ")", "/", "2", "\n", "gt_corners", "=", "torch", ".", "cat", "(", "[", "(", "gt_size", "+", "center_label", ")", ".", "unsqueeze", "(", "2", ")", ",", "(", "center_label", "-", "gt_size", ")", ".", "unsqueeze", "(", "2", ")", "]", ",", "dim", "=", "2", ")", "\n", "pred_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size_gpu", "(", "pred_size_class", ".", "detach", "(", ")", ",", "pred_size_residual", ")", "/", "2", "\n", "pred_corners", "=", "torch", ".", "cat", "(", "[", "(", "pred_size", "+", "pred_center", ")", ".", "unsqueeze", "(", "2", ")", ",", "(", "pred_center", "-", "pred_size", ")", ".", "unsqueeze", "(", "2", ")", "]", ",", "dim", "=", "2", ")", "\n", "\n", "batch_size", ",", "pred_num", "=", "pred_corners", ".", "shape", "[", ":", "2", "]", "\n", "gt_num", "=", "gt_corners", ".", "shape", "[", "1", "]", "\n", "pred_corners_expand_tile", "=", "pred_corners", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "gt_num", ",", "-", "1", ",", "-", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "2", ",", "3", ")", "\n", "gt_corners_expand_tile", "=", "gt_corners", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "pred_num", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "2", ",", "3", ")", "\n", "\n", "iou_labels", "=", "box3d_iou_gpu_axis_aligned", "(", "gt_corners_expand_tile", ".", "detach", "(", ")", ",", "pred_corners_expand_tile", ")", "\n", "iou_labels", ",", "object_assignment", "=", "iou_labels", ".", "view", "(", "batch_size", ",", "pred_num", ",", "gt_num", ")", ".", "max", "(", "2", ")", "\n", "\n", "iou_zero_mask", "=", "(", "iou_labels", "<", "1e-4", ")", ".", "int", "(", ")", "\n", "final_object_assignment", "=", "origin_object_assignment", "*", "iou_zero_mask", "+", "object_assignment", "*", "(", "1", "-", "iou_zero_mask", ")", "\n", "\n", "end_points", "[", "'acc_pred_iou'", "]", "=", "torch", ".", "sum", "(", "iou_labels", ")", "/", "iou_labels", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "end_points", "[", "'acc_pred_iou_obj'", "]", "=", "torch", ".", "sum", "(", "iou_labels", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "return", "iou_labels", ",", "iou_zero_mask", ",", "final_object_assignment", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.__init__": [[42, 73], ["torch.Module.__init__", "models.backbone_module.Pointnet2Backbone", "models.voting_module.VotingModule", "models.proposal_module.ProposalModule", "models.grid_conv_module.GridConv"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "mean_size_arr", ",", "dataset_config", ",", "\n", "input_feature_dim", "=", "0", ",", "num_proposal", "=", "128", ",", "vote_factor", "=", "1", ",", "sampling", "=", "'vote_fps'", ",", "\n", "query_feats", "=", "'seed'", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "num_heading_bin", "=", "num_heading_bin", "\n", "self", ".", "num_size_cluster", "=", "num_size_cluster", "\n", "self", ".", "mean_size_arr", "=", "mean_size_arr", "\n", "self", ".", "dataset_config", "=", "dataset_config", "\n", "assert", "(", "mean_size_arr", ".", "shape", "[", "0", "]", "==", "self", ".", "num_size_cluster", ")", "\n", "self", ".", "input_feature_dim", "=", "input_feature_dim", "\n", "self", ".", "num_proposal", "=", "num_proposal", "\n", "self", ".", "vote_factor", "=", "vote_factor", "\n", "self", ".", "sampling", "=", "sampling", "\n", "self", ".", "dataset_config", "=", "dataset_config", "\n", "\n", "# Backbone point feature learning", "\n", "self", ".", "backbone_net", "=", "Pointnet2Backbone", "(", "input_feature_dim", "=", "self", ".", "input_feature_dim", ")", "\n", "\n", "# Hough voting", "\n", "self", ".", "vgen", "=", "VotingModule", "(", "self", ".", "vote_factor", ",", "256", ")", "\n", "\n", "# Vote aggregation and detection", "\n", "self", ".", "pnet", "=", "ProposalModule", "(", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "\n", "mean_size_arr", ",", "num_proposal", ",", "sampling", ",", "query_feats", "=", "query_feats", ")", "\n", "\n", "self", ".", "grid_conv", "=", "GridConv", "(", "\n", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "\n", "mean_size_arr", ",", "num_proposal", ",", "sampling", ",", "query_feats", "=", "query_feats", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_backbone": [[75, 110], ["votenet_iou_branch.VoteNet.backbone_net", "votenet_iou_branch.VoteNet.vgen", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "features.div.div.div", "votenet_iou_branch.VoteNet.pnet", "torch.norm.unsqueeze", "torch.norm.unsqueeze"], "methods", ["None"], ["", "def", "forward_backbone", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\" Forward a pass through backbone but not iou branch\n\n                Args:\n                    inputs: dict\n                        {point_clouds}\n\n                        point_clouds: Variable(torch.cuda.FloatTensor)\n                            (B, N, 3 + input_channels) tensor\n                            Point cloud to run predicts on\n                            Each point in the point-cloud MUST\n                            be formatted as (x, y, z, features...)\n                Returns:\n                    end_points: dict\n                \"\"\"", "\n", "end_points", "=", "{", "}", "\n", "batch_size", "=", "inputs", "[", "'point_clouds'", "]", ".", "shape", "[", "0", "]", "\n", "end_points", "=", "self", ".", "backbone_net", "(", "inputs", "[", "'point_clouds'", "]", ",", "end_points", ")", "\n", "\n", "# --------- HOUGH VOTING ---------", "\n", "xyz", "=", "end_points", "[", "'fp2_xyz'", "]", "\n", "features", "=", "end_points", "[", "'fp2_features'", "]", "\n", "end_points", "[", "'seed_inds'", "]", "=", "end_points", "[", "'fp2_inds'", "]", "\n", "end_points", "[", "'seed_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'seed_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", "=", "self", ".", "vgen", "(", "xyz", ",", "features", ")", "\n", "\n", "features_norm", "=", "torch", ".", "norm", "(", "features", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "features", "=", "features", ".", "div", "(", "features_norm", ".", "unsqueeze", "(", "1", ")", ")", "\n", "end_points", "[", "'vote_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'vote_features'", "]", "=", "features", "\n", "\n", "end_points", "=", "self", ".", "pnet", "(", "xyz", ",", "features", ",", "end_points", ")", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.calculate_bbox": [[111, 138], ["torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "size_residual.squeeze.squeeze.squeeze", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "size_base.view.view.view", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "heading_residual.squeeze.squeeze.squeeze", "votenet_iou_branch.VoteNet.dataset_config.class2angle_gpu", "torch.argmax.unsqueeze().unsqueeze().expand", "torch.argmax.unsqueeze().unsqueeze().expand", "torch.argmax.view", "torch.argmax.view", "torch.argmax.unsqueeze", "torch.argmax.unsqueeze", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().cuda.astype", "torch.from_numpy().cuda.astype", "torch.argmax.unsqueeze().unsqueeze", "torch.argmax.unsqueeze().unsqueeze", "torch.argmax.unsqueeze", "torch.argmax.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle_gpu"], ["", "def", "calculate_bbox", "(", "self", ",", "end_points", ")", ":", "\n", "# calculate size and center", "\n", "        ", "size_scores", "=", "end_points", "[", "'size_scores'", "]", "\n", "size_residuals", "=", "end_points", "[", "'size_residuals'", "]", "\n", "B", ",", "K", "=", "size_scores", ".", "shape", "[", ":", "2", "]", "\n", "mean_size_arr", "=", "self", ".", "mean_size_arr", "\n", "mean_size_arr", "=", "torch", ".", "from_numpy", "(", "mean_size_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", "# (num_size_cluster,3)", "\n", "size_class", "=", "torch", ".", "argmax", "(", "size_scores", ",", "-", "1", ")", "# B,num_proposal", "\n", "size_residual", "=", "torch", ".", "gather", "(", "size_residuals", ",", "2", ",", "\n", "size_class", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "-", "1", ",", "3", ")", ")", "# B,num_proposal,1,3", "\n", "size_residual", "=", "size_residual", ".", "squeeze", "(", "2", ")", "\n", "size_base", "=", "torch", ".", "index_select", "(", "mean_size_arr", ",", "0", ",", "size_class", ".", "view", "(", "-", "1", ")", ")", "\n", "size_base", "=", "size_base", ".", "view", "(", "B", ",", "K", ",", "3", ")", "\n", "size", "=", "(", "size_base", "+", "size_residual", ")", "/", "2", "# half of the size", "\n", "size", "[", "size", "<", "0", "]", "=", "1e-6", "\n", "center", "=", "end_points", "[", "'center'", "]", "\n", "\n", "heading_scores", "=", "end_points", "[", "'heading_scores'", "]", "\n", "heading_class", "=", "torch", ".", "argmax", "(", "heading_scores", ",", "-", "1", ")", "# B,num_proposal", "\n", "heading_residuals", "=", "end_points", "[", "'heading_residuals'", "]", "\n", "heading_residual", "=", "torch", ".", "gather", "(", "heading_residuals", ",", "2", ",", "heading_class", ".", "unsqueeze", "(", "-", "1", ")", ")", "# B,num_proposal,1", "\n", "heading_residual", "=", "heading_residual", ".", "squeeze", "(", "2", ")", "\n", "heading", "=", "self", ".", "dataset_config", ".", "class2angle_gpu", "(", "heading_class", ",", "heading_residual", ")", "\n", "\n", "end_points", "[", "'size'", "]", "=", "size", "\n", "end_points", "[", "'heading'", "]", "=", "heading", "\n", "return", "center", ",", "size", ",", "heading", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward": [[139, 152], ["votenet_iou_branch.VoteNet.forward_backbone", "votenet_iou_branch.VoteNet.calculate_bbox", "center.retain_grad", "size.retain_grad", "votenet_iou_branch.VoteNet.grid_conv", "votenet_iou_branch.VoteNet.grid_conv", "heading.retain_grad", "center.detach", "size.detach", "heading.detach"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_backbone", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.calculate_bbox"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "iou_opt", "=", "False", ")", ":", "\n", "        ", "end_points", "=", "self", ".", "forward_backbone", "(", "inputs", ")", "\n", "center", ",", "size", ",", "heading", "=", "self", ".", "calculate_bbox", "(", "end_points", ")", "\n", "\n", "if", "iou_opt", ":", "\n", "            ", "center", ".", "retain_grad", "(", ")", "\n", "size", ".", "retain_grad", "(", ")", "\n", "if", "heading", ".", "requires_grad", ":", "\n", "                ", "heading", ".", "retain_grad", "(", ")", "\n", "", "end_points", "=", "self", ".", "grid_conv", "(", "center", ",", "size", ",", "heading", ",", "end_points", ")", "\n", "", "else", ":", "\n", "            ", "end_points", "=", "self", ".", "grid_conv", "(", "center", ".", "detach", "(", ")", ",", "size", ".", "detach", "(", ")", ",", "heading", ".", "detach", "(", ")", ",", "end_points", ")", "\n", "", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_iou_part_only": [[153, 156], ["votenet_iou_branch.VoteNet.grid_conv"], "methods", ["None"], ["", "def", "forward_iou_part_only", "(", "self", ",", "end_points", ",", "center", ",", "size", ")", ":", "\n", "        ", "end_points", "=", "self", ".", "grid_conv", "(", "center", ",", "size", ",", "end_points", ")", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_with_pred_jitter": [[157, 182], ["votenet_iou_branch.VoteNet.forward_backbone", "votenet_iou_branch.VoteNet.calculate_bbox", "torch.cat.unsqueeze().expand().contiguous().view", "torch.cat.unsqueeze().expand().contiguous().view", "torch.cat.unsqueeze().expand().contiguous().view", "torch.cat.unsqueeze().expand().contiguous().view", "torch.cat.unsqueeze().expand().contiguous().view", "torch.cat.unsqueeze().expand().contiguous().view", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "votenet_iou_branch.VoteNet.grid_conv", "torch.cat.detach", "torch.cat.detach", "torch.cat.detach", "torch.cat.detach", "torch.cat.detach", "torch.cat.detach", "torch.cat.unsqueeze().expand().contiguous", "torch.cat.unsqueeze().expand().contiguous", "torch.cat.unsqueeze().expand().contiguous", "torch.cat.unsqueeze().expand().contiguous", "torch.cat.unsqueeze().expand().contiguous", "torch.cat.unsqueeze().expand().contiguous", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.cat.unsqueeze().expand", "torch.cat.unsqueeze().expand", "torch.cat.unsqueeze().expand", "torch.cat.unsqueeze().expand", "torch.cat.unsqueeze().expand", "torch.cat.unsqueeze().expand", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_backbone", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.calculate_bbox"], ["", "def", "forward_with_pred_jitter", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "end_points", "=", "self", ".", "forward_backbone", "(", "inputs", ")", "\n", "center", ",", "size", ",", "heading", "=", "self", ".", "calculate_bbox", "(", "end_points", ")", "\n", "B", ",", "origin_proposal_num", "=", "heading", ".", "shape", "[", "0", ":", "2", "]", "\n", "\n", "factor", "=", "1", "\n", "center_jitter", "=", "center", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "factor", ",", "-", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", "\n", "size_jitter", "=", "size", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "factor", ",", "-", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", "\n", "heading_jitter", "=", "heading", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "factor", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ")", "\n", "center_jitter", "=", "center_jitter", "+", "size_jitter", "*", "torch", ".", "randn", "(", "size_jitter", ".", "shape", ")", ".", "cuda", "(", ")", "*", "0.3", "\n", "size_jitter", "=", "size_jitter", "+", "size_jitter", "*", "torch", ".", "randn", "(", "size_jitter", ".", "shape", ")", ".", "cuda", "(", ")", "*", "0.3", "\n", "size_jitter", "=", "torch", ".", "clamp", "(", "size_jitter", ",", "min", "=", "1e-8", ")", "\n", "\n", "center", "=", "torch", ".", "cat", "(", "[", "center", ",", "center_jitter", "]", ",", "dim", "=", "1", ")", "\n", "size", "=", "torch", ".", "cat", "(", "[", "size", ",", "size_jitter", "]", ",", "dim", "=", "1", ")", "\n", "heading", "=", "torch", ".", "cat", "(", "[", "heading", ",", "heading_jitter", "]", ",", "dim", "=", "1", ")", "\n", "\n", "end_points", "=", "self", ".", "grid_conv", "(", "center", ".", "detach", "(", ")", ",", "size", ".", "detach", "(", ")", ",", "heading", ".", "detach", "(", ")", ",", "end_points", ")", "\n", "end_points", "[", "'iou_scores_jitter'", "]", "=", "end_points", "[", "'iou_scores'", "]", "[", ":", ",", "origin_proposal_num", ":", "]", "\n", "end_points", "[", "'iou_scores'", "]", "=", "end_points", "[", "'iou_scores'", "]", "[", ":", ",", ":", "origin_proposal_num", "]", "\n", "\n", "end_points", "[", "'jitter_center'", "]", "=", "center_jitter", "\n", "end_points", "[", "'jitter_size'", "]", "=", "size_jitter", "*", "2", "\n", "end_points", "[", "'jitter_heading'", "]", "=", "heading_jitter", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.votenet_iou_branch.VoteNet.forward_onlyiou_faster": [[183, 186], ["votenet_iou_branch.VoteNet.grid_conv"], "methods", ["None"], ["", "def", "forward_onlyiou_faster", "(", "self", ",", "end_points", ",", "center", ",", "size", ",", "heading", ")", ":", "\n", "        ", "end_points", "=", "self", ".", "grid_conv", "(", "center", ",", "size", ",", "heading", ",", "end_points", ")", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.grid_conv_module.GridConv.__init__": [[23, 47], ["torch.Module.__init__", "pointnet2.SharedMLP", "pointnet2.SharedMLP", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "mean_size_arr", ",", "num_proposal", ",", "sampling", ",", "\n", "seed_feat_dim", "=", "256", ",", "query_feats", "=", "'seed'", ",", "iou_class_depend", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "num_heading_bin", "=", "num_heading_bin", "\n", "self", ".", "num_size_cluster", "=", "num_size_cluster", "\n", "self", ".", "mean_size_arr", "=", "mean_size_arr", "\n", "self", ".", "num_proposal", "=", "num_proposal", "\n", "self", ".", "sampling", "=", "sampling", "\n", "self", ".", "seed_feat_dim", "=", "seed_feat_dim", "\n", "self", ".", "query_feats", "=", "query_feats", "\n", "self", ".", "iou_class_depend", "=", "iou_class_depend", "\n", "\n", "# class dependent IoU", "\n", "self", ".", "iou_size", "=", "num_class", "if", "self", ".", "iou_class_depend", "else", "1", "\n", "\n", "self", ".", "mlp_before_iou", "=", "pt_utils", ".", "SharedMLP", "(", "[", "self", ".", "seed_feat_dim", "+", "3", ",", "128", ",", "128", ",", "128", "]", ",", "bn", "=", "True", ")", "\n", "\n", "self", ".", "conv1_iou", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "128", ",", "1", ")", "\n", "self", ".", "conv2_iou", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3_iou", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "3", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", "*", "3", "+", "self", ".", "iou_size", ",", "1", ")", "\n", "self", ".", "bn1_iou", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn2_iou", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.grid_conv_module.GridConv.forward": [[48, 117], ["origin_features.contiguous.contiguous.detach", "origin_xyz.contiguous.contiguous.detach", "torch.linspace().cuda", "torch.linspace().cuda", "torch.linspace().cuda", "torch.linspace().cuda", "torch.linspace().cuda", "torch.linspace().cuda", "torch.linspace().cuda", "torch.linspace().cuda", "torch.linspace().cuda", "torch.linspace().cuda.view().repeat", "torch.linspace().cuda.view().repeat", "torch.linspace().cuda.view().repeat", "grid_step_x.view().expand.view().expand.view().expand", "torch.linspace().cuda.view().repeat", "torch.linspace().cuda.view().repeat", "torch.linspace().cuda.view().repeat", "grid_step_y.view().expand.view().expand.view().expand", "torch.linspace().cuda.view().repeat", "torch.linspace().cuda.view().repeat", "torch.linspace().cuda.view().repeat", "grid_step_z.view().expand.view().expand.view().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.box_util.rot_gpu().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "whole_grid.view().contiguous.view().contiguous.view().contiguous", "origin_xyz.contiguous.contiguous.contiguous", "origin_features.contiguous.contiguous.contiguous", "pointnet2.three_nn", "pointnet2.three_nn", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "whole_grid.view().contiguous.view().contiguous.unsqueeze().expand().contiguous().view", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "weight.contiguous.contiguous.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "weight.contiguous.contiguous.contiguous", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grid_conv_module.GridConv.transpose", "grid_conv_module.GridConv.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "grid_conv_module.GridConv.mlp_before_iou", "torch.max_pool2d().squeeze", "torch.max_pool2d().squeeze", "torch.max_pool2d().squeeze", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "grid_conv_module.GridConv.conv3_iou", "center_xyz.unsqueeze().expand", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "center_xyz.unsqueeze().expand().contiguous().view", "grid_conv_module.GridConv.bn1_iou", "grid_conv_module.GridConv.bn2_iou", "grid_conv_module.GridConv.transpose", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace().cuda.view", "torch.linspace().cuda.view", "torch.linspace().cuda.view", "grid_step_x.view().expand.view().expand.view", "torch.linspace().cuda.view", "torch.linspace().cuda.view", "torch.linspace().cuda.view", "grid_step_y.view().expand.view().expand.view", "torch.linspace().cuda.view", "torch.linspace().cuda.view", "torch.linspace().cuda.view", "grid_step_z.view().expand.view().expand.view", "x_grid.unsqueeze", "y_grid.unsqueeze", "z_grid.unsqueeze", "utils.box_util.rot_gpu", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "whole_grid.view().contiguous.view().contiguous.view", "idx.view().expand().long", "whole_grid.view().contiguous.view().contiguous.unsqueeze().expand().contiguous", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "torch.index_select().unsqueeze", "grid_conv_module.GridConv.view", "weight.contiguous.contiguous.unsqueeze", "relative_grid.transpose().contiguous().view", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "grid_conv_module.GridConv.conv1_iou", "grid_conv_module.GridConv.conv2_iou", "NotImplementedError", "whole_grid.view().contiguous.view().contiguous.view", "utils.box_util.rot_gpu().view.transpose", "center_xyz.unsqueeze", "center_xyz.unsqueeze().expand().contiguous", "zip", "idx.view().expand", "whole_grid.view().contiguous.view().contiguous.unsqueeze().expand", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "origin_features.contiguous.contiguous.transpose", "idx.view().long", "relative_grid.transpose().contiguous", "center_xyz.unsqueeze().expand", "grid_conv_module.GridConv.size", "idx.view", "whole_grid.view().contiguous.view().contiguous.unsqueeze", "idx.view", "relative_grid.transpose", "center_xyz.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_util.rot_gpu"], ["", "def", "forward", "(", "self", ",", "center", ",", "size", ",", "heading", ",", "end_points", ")", ":", "\n", "        ", "if", "self", ".", "query_feats", "==", "'vote'", ":", "\n", "            ", "origin_xyz", "=", "end_points", "[", "'vote_xyz'", "]", "\n", "origin_features", "=", "end_points", "[", "'vote_features'", "]", "\n", "", "elif", "self", ".", "query_feats", "==", "'seed'", ":", "\n", "            ", "origin_xyz", "=", "end_points", "[", "'seed_xyz'", "]", "\n", "origin_features", "=", "end_points", "[", "'seed_features'", "]", "\n", "", "elif", "self", ".", "query_feats", "==", "'seed+vote'", ":", "\n", "            ", "origin_xyz", "=", "end_points", "[", "'seed_xyz'", "]", "\n", "origin_features", "=", "end_points", "[", "'vote_features'", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "\n", "", "origin_features", "=", "origin_features", ".", "detach", "(", ")", "\n", "origin_xyz", "=", "origin_xyz", ".", "detach", "(", ")", "\n", "B", ",", "K", "=", "size", ".", "shape", "[", ":", "2", "]", "\n", "center_xyz", "=", "center", "\n", "grid_step", "=", "torch", ".", "linspace", "(", "-", "1", ",", "1", ",", "4", ")", ".", "cuda", "(", ")", "\n", "grid_size", "=", "4", "\n", "grid_step_x", "=", "grid_step", ".", "view", "(", "grid_size", ",", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "grid_size", ",", "grid_size", ")", "\n", "grid_step_x", "=", "grid_step_x", ".", "view", "(", "1", ",", "1", ",", "-", "1", ")", ".", "expand", "(", "B", ",", "K", ",", "-", "1", ")", "\n", "grid_step_y", "=", "grid_step", ".", "view", "(", "1", ",", "grid_size", ",", "1", ")", ".", "repeat", "(", "grid_size", ",", "1", ",", "grid_size", ")", "\n", "grid_step_y", "=", "grid_step_y", ".", "view", "(", "1", ",", "1", ",", "-", "1", ")", ".", "expand", "(", "B", ",", "K", ",", "-", "1", ")", "\n", "grid_step_z", "=", "grid_step", ".", "view", "(", "1", ",", "1", ",", "grid_size", ")", ".", "repeat", "(", "grid_size", ",", "grid_size", ",", "1", ")", "\n", "grid_step_z", "=", "grid_step_z", ".", "view", "(", "1", ",", "1", ",", "-", "1", ")", ".", "expand", "(", "B", ",", "K", ",", "-", "1", ")", "\n", "x_grid", "=", "grid_step_x", "*", "size", "[", ":", ",", ":", ",", "0", ":", "1", "]", "\n", "y_grid", "=", "grid_step_y", "*", "size", "[", ":", ",", ":", ",", "1", ":", "2", "]", "\n", "z_grid", "=", "grid_step_z", "*", "size", "[", ":", ",", ":", ",", "2", ":", "3", "]", "\n", "whole_grid", "=", "torch", ".", "cat", "(", "[", "x_grid", ".", "unsqueeze", "(", "-", "1", ")", ",", "y_grid", ".", "unsqueeze", "(", "-", "1", ")", ",", "z_grid", ".", "unsqueeze", "(", "-", "1", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "rot_mat", "=", "rot_gpu", "(", "heading", ")", ".", "view", "(", "-", "1", ",", "3", ",", "3", ")", "# [B * S, 3, 3]", "\n", "whole_grid", "=", "torch", ".", "bmm", "(", "whole_grid", ".", "view", "(", "B", "*", "K", ",", "-", "1", ",", "3", ")", ",", "rot_mat", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "view", "(", "B", ",", "K", ",", "-", "1", ",", "3", ")", "\n", "whole_grid", "=", "whole_grid", "+", "center_xyz", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "grid_size", "*", "grid_size", "*", "grid_size", ",", "-", "1", ")", "\n", "whole_grid", "=", "whole_grid", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "\n", "origin_xyz", "=", "origin_xyz", ".", "contiguous", "(", ")", "\n", "origin_features", "=", "origin_features", ".", "contiguous", "(", ")", "\n", "\n", "feat_size", "=", "origin_features", ".", "shape", "[", "1", "]", "\n", "_", ",", "idx", "=", "pointnet2_utils", ".", "three_nn", "(", "whole_grid", ",", "origin_xyz", ")", "# B, K*64, 3", "\n", "\n", "interp_points", "=", "torch", ".", "gather", "(", "origin_xyz", ",", "dim", "=", "1", ",", "index", "=", "idx", ".", "view", "(", "B", ",", "-", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ")", ".", "long", "(", ")", ")", "# B, K*64*3, 3", "\n", "expanded_whole_grid", "=", "whole_grid", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "3", ",", "-", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", "# B, K*64*3, 3", "\n", "dist", "=", "interp_points", "-", "expanded_whole_grid", "\n", "dist", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "dist", "*", "dist", ",", "dim", "=", "2", ")", ")", "\n", "grid_point_num", "=", "grid_size", "*", "grid_size", "*", "grid_size", "\n", "relative_grid", "=", "whole_grid", "-", "center_xyz", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "grid_point_num", ",", "-", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", "\n", "\n", "weight", "=", "1", "/", "(", "dist", "+", "1e-8", ")", "\n", "weight", "=", "weight", ".", "view", "(", "B", ",", "-", "1", ",", "3", ")", "\n", "norm", "=", "torch", ".", "sum", "(", "weight", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "weight", "=", "weight", "/", "norm", "\n", "weight", "=", "weight", ".", "contiguous", "(", ")", "\n", "\n", "interpolated_feats", "=", "torch", ".", "cat", "(", "[", "torch", ".", "index_select", "(", "a", ",", "0", ",", "i", ")", ".", "unsqueeze", "(", "0", ")", "\n", "for", "a", ",", "i", "in", "zip", "(", "origin_features", ".", "transpose", "(", "1", ",", "2", ")", ",", "idx", ".", "view", "(", "B", ",", "-", "1", ")", ".", "long", "(", ")", ")", "]", ",", "0", ")", "\n", "interpolated_feats", "=", "torch", ".", "sum", "(", "interpolated_feats", ".", "view", "(", "B", ",", "-", "1", ",", "3", ",", "feat_size", ")", "*", "weight", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "2", ")", "\n", "interpolated_feats", "=", "interpolated_feats", ".", "transpose", "(", "1", ",", "2", ")", "\n", "interpolated_feats", "=", "interpolated_feats", ".", "view", "(", "B", ",", "-", "1", ",", "K", ",", "grid_point_num", ")", "\n", "interpolated_feats", "=", "torch", ".", "cat", "(", "[", "relative_grid", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "-", "1", ",", "K", ",", "64", ")", ",", "interpolated_feats", "]", ",", "dim", "=", "1", ")", "\n", "interpolated_feats", "=", "self", ".", "mlp_before_iou", "(", "interpolated_feats", ")", "# B, C, K, 64", "\n", "\n", "iou_features", "=", "F", ".", "max_pool2d", "(", "interpolated_feats", ",", "kernel_size", "=", "[", "1", ",", "interpolated_feats", ".", "size", "(", "3", ")", "]", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "net_iou", "=", "F", ".", "relu", "(", "self", ".", "bn1_iou", "(", "self", ".", "conv1_iou", "(", "iou_features", ")", ")", ")", "\n", "net_iou", "=", "F", ".", "relu", "(", "self", ".", "bn2_iou", "(", "self", ".", "conv2_iou", "(", "net_iou", ")", ")", ")", "\n", "net_iou", "=", "self", ".", "conv3_iou", "(", "net_iou", ")", "\n", "\n", "end_points", "[", "'iou_scores'", "]", "=", "net_iou", ".", "transpose", "(", "2", ",", "1", ")", "[", ":", ",", ":", ",", "-", "self", ".", "iou_size", ":", "]", "\n", "return", "end_points", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.dump_helper.softmax": [[17, 23], ["numpy.exp", "numpy.sum", "numpy.max", "len", "len"], "function", ["None"], ["def", "softmax", "(", "x", ")", ":", "\n", "    ", "''' Numpy function for softmax'''", "\n", "shape", "=", "x", ".", "shape", "\n", "probs", "=", "np", ".", "exp", "(", "x", "-", "np", ".", "max", "(", "x", ",", "axis", "=", "len", "(", "shape", ")", "-", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "probs", "/=", "np", ".", "sum", "(", "probs", ",", "axis", "=", "len", "(", "shape", ")", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.dump_helper.dump_results": [[24, 142], ["end_points[].cpu().numpy", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "torch.argmax", "torch.gather", "pred_heading_class.detach().cpu().numpy.detach().cpu().numpy", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu().numpy", "torch.argmax", "torch.gather", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu().numpy", "range", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "range", "os.path.exists", "os.system", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "pred_heading_class.detach().cpu().numpy.unsqueeze", "torch.argmax.unsqueeze().unsqueeze().repeat", "utils.write_ply", "utils.write_ply", "utils.write_ply", "utils.write_ply", "utils.write_ply_color", "range", "range", "range", "end_points[].cpu", "end_points[].detach().cpu", "end_points[].detach().cpu", "end_points[].detach().cpu", "pred_heading_class.detach().cpu().numpy.detach().cpu", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu", "dump_helper.softmax", "os.path.join", "os.path.join", "utils.write_ply", "utils.write_ply", "utils.write_ply", "os.path.join", "numpy.sum", "utils.write_ply", "numpy.sum", "range", "end_points[].cpu", "end_points[].cpu", "end_points[].cpu", "end_points[].cpu", "end_points[].cpu", "end_points[].cpu", "end_points[].detach().cpu", "end_points[].detach().cpu", "numpy.sum", "utils.write_ply", "numpy.sum", "utils.write_ply", "os.path.join", "os.path.join", "config.param2obb", "np.vstack.append", "len", "numpy.vstack", "utils.write_oriented_bbox", "open", "open.close", "open", "open.close", "end_points[].detach().cpu", "end_points[].detach().cpu", "end_points[].detach().cpu", "torch.argmax.unsqueeze().unsqueeze", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "config.param2obb", "np.vstack.append", "len", "numpy.vstack", "utils.write_oriented_bbox", "utils.write_oriented_bbox", "utils.write_oriented_bbox", "utils.write_oriented_bbox", "os.path.join", "os.path.join", "tuple", "os.path.join", "os.path.join", "open.write", "open.write", "open.write", "open.write", "os.path.join", "open.write", "open.write", "open.write", "end_points[].detach", "end_points[].detach", "end_points[].detach", "pred_heading_class.detach().cpu().numpy.detach", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze().detach", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze().detach", "tuple", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "end_points[].detach", "end_points[].detach", "end_points[].detach", "end_points[].detach", "end_points[].detach", "torch.argmax.unsqueeze", "str", "str", "str", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze", "str", "str", "numpy.logical_and", "list", "list", "t[].flatten", "t[].flatten"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply_color", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.dump_helper.softmax", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.param2obb", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.param2obb", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.pc_util.write_oriented_bbox"], ["", "def", "dump_results", "(", "end_points", ",", "dump_dir", ",", "config", ",", "inference_switch", "=", "False", ")", ":", "\n", "    ", "''' Dump results.\n\n    Args:\n        end_points: dict\n            {..., pred_mask}\n            pred_mask is a binary mask array of size (batch_size, num_proposal) computed by running NMS and empty box removal\n    Returns:\n        None\n    '''", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "dump_dir", ")", ":", "\n", "        ", "os", ".", "system", "(", "'mkdir %s'", "%", "(", "dump_dir", ")", ")", "\n", "\n", "# INPUT", "\n", "", "point_clouds", "=", "end_points", "[", "'point_clouds'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "batch_size", "=", "point_clouds", ".", "shape", "[", "0", "]", "\n", "\n", "# NETWORK OUTPUTS", "\n", "seed_xyz", "=", "end_points", "[", "'seed_xyz'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,num_seed,3)", "\n", "if", "'vote_xyz'", "in", "end_points", ":", "\n", "        ", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "vote_xyz", "=", "end_points", "[", "'vote_xyz'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,num_seed,3)", "\n", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "objectness_scores", "=", "end_points", "[", "'objectness_scores'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,2)", "\n", "pred_center", "=", "end_points", "[", "'center'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,3)", "\n", "pred_heading_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'heading_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_heading_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_residuals'", "]", ",", "2", ",", "pred_heading_class", ".", "unsqueeze", "(", "-", "1", ")", ")", "# B,num_proposal,1", "\n", "pred_heading_class", "=", "pred_heading_class", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,num_proposal", "\n", "pred_heading_residual", "=", "pred_heading_residual", ".", "squeeze", "(", "2", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,num_proposal", "\n", "pred_size_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'size_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_size_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_residuals'", "]", ",", "2", ",", "pred_size_class", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", ")", "# B,num_proposal,1,3", "\n", "pred_size_residual", "=", "pred_size_residual", ".", "squeeze", "(", "2", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,num_proposal,3", "\n", "\n", "# OTHERS", "\n", "pred_mask", "=", "end_points", "[", "'pred_mask'", "]", "# B,num_proposal", "\n", "idx_beg", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "pc", "=", "point_clouds", "[", "i", ",", ":", ",", ":", "]", "\n", "objectness_prob", "=", "softmax", "(", "objectness_scores", "[", "i", ",", ":", ",", ":", "]", ")", "[", ":", ",", "1", "]", "# (K,)", "\n", "\n", "# Dump various point clouds", "\n", "pc_util", ".", "write_ply", "(", "pc", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "seed_xyz", "[", "i", ",", ":", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_seed_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "if", "'vote_xyz'", "in", "end_points", ":", "\n", "            ", "pc_util", ".", "write_ply", "(", "end_points", "[", "'vote_xyz'", "]", "[", "i", ",", ":", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_vgen_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "aggregated_vote_xyz", "[", "i", ",", ":", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_aggregated_vote_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "aggregated_vote_xyz", "[", "i", ",", ":", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_aggregated_vote_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "", "pc_util", ".", "write_ply", "(", "pred_center", "[", "i", ",", ":", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_proposal_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "if", "np", ".", "sum", "(", "objectness_prob", ">", "DUMP_CONF_THRESH", ")", ">", "0", ":", "\n", "            ", "pc_util", ".", "write_ply", "(", "pred_center", "[", "i", ",", "objectness_prob", ">", "DUMP_CONF_THRESH", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_confident_proposal_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "\n", "# Dump predicted bounding boxes", "\n", "", "if", "np", ".", "sum", "(", "objectness_prob", ">", "DUMP_CONF_THRESH", ")", ">", "0", ":", "\n", "            ", "num_proposal", "=", "pred_center", ".", "shape", "[", "1", "]", "\n", "obbs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "num_proposal", ")", ":", "\n", "                ", "obb", "=", "config", ".", "param2obb", "(", "pred_center", "[", "i", ",", "j", ",", "0", ":", "3", "]", ",", "pred_heading_class", "[", "i", ",", "j", "]", ",", "pred_heading_residual", "[", "i", ",", "j", "]", ",", "\n", "pred_size_class", "[", "i", ",", "j", "]", ",", "pred_size_residual", "[", "i", ",", "j", "]", ")", "\n", "obbs", ".", "append", "(", "obb", ")", "\n", "", "if", "len", "(", "obbs", ")", ">", "0", ":", "\n", "                ", "obbs", "=", "np", ".", "vstack", "(", "tuple", "(", "obbs", ")", ")", "# (num_proposal, 7)", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", "[", "objectness_prob", ">", "DUMP_CONF_THRESH", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_confident_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", "[", "np", ".", "logical_and", "(", "objectness_prob", ">", "DUMP_CONF_THRESH", ",", "pred_mask", "[", "i", ",", ":", "]", "==", "1", ")", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_confident_nms_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", "[", "pred_mask", "[", "i", ",", ":", "]", "==", "1", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_nms_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "\n", "# Return if it is at inference time. No dumping of groundtruths", "\n", "", "", "", "if", "inference_switch", ":", "\n", "        ", "return", "\n", "\n", "# LABELS", "\n", "", "gt_center", "=", "end_points", "[", "'center_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,MAX_NUM_OBJ,3)", "\n", "gt_mask", "=", "end_points", "[", "'box_label_mask'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2", "\n", "gt_heading_class", "=", "end_points", "[", "'heading_class_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2", "\n", "gt_heading_residual", "=", "end_points", "[", "'heading_residual_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2", "\n", "gt_size_class", "=", "end_points", "[", "'size_class_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2", "\n", "gt_size_residual", "=", "end_points", "[", "'size_residual_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2,3", "\n", "objectness_label", "=", "end_points", "[", "'objectness_label'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,)", "\n", "objectness_mask", "=", "end_points", "[", "'objectness_mask'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,)", "\n", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "if", "np", ".", "sum", "(", "objectness_label", "[", "i", ",", ":", "]", ")", ">", "0", ":", "\n", "            ", "pc_util", ".", "write_ply", "(", "pred_center", "[", "i", ",", "objectness_label", "[", "i", ",", ":", "]", ">", "0", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_positive_proposal_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "", "if", "np", ".", "sum", "(", "objectness_mask", "[", "i", ",", ":", "]", ")", ">", "0", ":", "\n", "            ", "pc_util", ".", "write_ply", "(", "pred_center", "[", "i", ",", "objectness_mask", "[", "i", ",", ":", "]", ">", "0", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_mask_proposal_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "", "pc_util", ".", "write_ply", "(", "gt_center", "[", "i", ",", ":", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_centroid_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_ply_color", "(", "pred_center", "[", "i", ",", ":", ",", "0", ":", "3", "]", ",", "objectness_label", "[", "i", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_proposal_pc_objectness_label.obj'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "\n", "# Dump GT bounding boxes", "\n", "obbs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "gt_center", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "if", "gt_mask", "[", "i", ",", "j", "]", "==", "0", ":", "continue", "\n", "obb", "=", "config", ".", "param2obb", "(", "gt_center", "[", "i", ",", "j", ",", "0", ":", "3", "]", ",", "gt_heading_class", "[", "i", ",", "j", "]", ",", "gt_heading_residual", "[", "i", ",", "j", "]", ",", "\n", "gt_size_class", "[", "i", ",", "j", "]", ",", "gt_size_residual", "[", "i", ",", "j", "]", ")", "\n", "obbs", ".", "append", "(", "obb", ")", "\n", "", "if", "len", "(", "obbs", ")", ">", "0", ":", "\n", "            ", "obbs", "=", "np", ".", "vstack", "(", "tuple", "(", "obbs", ")", ")", "# (num_gt_objects, 7)", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "\n", "# OPTIONALL, also dump prediction and gt details", "\n", "", "", "if", "'batch_pred_map_cls'", "in", "end_points", ":", "\n", "        ", "for", "ii", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "fout", "=", "open", "(", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_map_cls.txt'", "%", "(", "ii", ")", ")", ",", "'w'", ")", "\n", "for", "t", "in", "end_points", "[", "'batch_pred_map_cls'", "]", "[", "ii", "]", ":", "\n", "                ", "fout", ".", "write", "(", "str", "(", "t", "[", "0", "]", ")", "+", "' '", ")", "\n", "fout", ".", "write", "(", "\",\"", ".", "join", "(", "[", "str", "(", "x", ")", "for", "x", "in", "list", "(", "t", "[", "1", "]", ".", "flatten", "(", ")", ")", "]", ")", ")", "\n", "fout", ".", "write", "(", "' '", "+", "str", "(", "t", "[", "2", "]", ")", ")", "\n", "fout", ".", "write", "(", "'\\n'", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "", "", "if", "'batch_gt_map_cls'", "in", "end_points", ":", "\n", "        ", "for", "ii", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "fout", "=", "open", "(", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_map_cls.txt'", "%", "(", "ii", ")", ")", ",", "'w'", ")", "\n", "for", "t", "in", "end_points", "[", "'batch_gt_map_cls'", "]", "[", "ii", "]", ":", "\n", "                ", "fout", ".", "write", "(", "str", "(", "t", "[", "0", "]", ")", "+", "' '", ")", "\n", "fout", ".", "write", "(", "\",\"", ".", "join", "(", "[", "str", "(", "x", ")", "for", "x", "in", "list", "(", "t", "[", "1", "]", ".", "flatten", "(", ")", ")", "]", ")", ")", "\n", "fout", ".", "write", "(", "'\\n'", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_vote_loss": [[25, 71], ["end_points[].long", "torch.gather", "torch.gather", "end_points[].long.view().repeat", "torch.gather", "torch.gather", "end_points[].repeat", "vote_xyz.view", "torch.gather.view", "utils.nn_distance.nn_distance", "torch.min", "torch.min", "votes_dist.view.view", "torch.sum", "torch.sum", "end_points[].long.view", "torch.sum", "torch.sum", "torch.gather.float", "torch.gather.float"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance"], ["def", "compute_vote_loss", "(", "end_points", ")", ":", "\n", "    ", "\"\"\" Compute vote loss: Match predicted votes to GT votes.\n\n    Args:\n        end_points: dict (read-only)\n    \n    Returns:\n        vote_loss: scalar Tensor\n            \n    Overall idea:\n        If the seed point belongs to an object (votes_label_mask == 1),\n        then we require it to vote for the object center.\n\n        Each seed point may vote for multiple translations v1,v2,v3\n        A seed point may also be in the boxes of multiple objects:\n        o1,o2,o3 with corresponding GT votes c1,c2,c3\n\n        Then the loss for this seed point is:\n            min(d(v_i,c_j)) for i=1,2,3 and j=1,2,3\n    \"\"\"", "\n", "\n", "# Load ground truth votes and assign them to seed points", "\n", "batch_size", "=", "end_points", "[", "'seed_xyz'", "]", ".", "shape", "[", "0", "]", "\n", "num_seed", "=", "end_points", "[", "'seed_xyz'", "]", ".", "shape", "[", "1", "]", "# B,num_seed,3", "\n", "vote_xyz", "=", "end_points", "[", "'vote_xyz'", "]", "# B,num_seed*vote_factor,3", "\n", "seed_inds", "=", "end_points", "[", "'seed_inds'", "]", ".", "long", "(", ")", "# B,num_seed in [0,num_points-1]", "\n", "\n", "# Get groundtruth votes for the seed points", "\n", "# vote_label_mask: Use gather to select B,num_seed from B,num_point", "\n", "#   non-object point has no GT vote mask = 0, object point has mask = 1", "\n", "# vote_label: Use gather to select B,num_seed,9 from B,num_point,9", "\n", "#   with inds in shape B,num_seed,9 and 9 = GT_VOTE_FACTOR * 3", "\n", "seed_gt_votes_mask", "=", "torch", ".", "gather", "(", "end_points", "[", "'vote_label_mask'", "]", ",", "1", ",", "seed_inds", ")", "\n", "seed_inds_expand", "=", "seed_inds", ".", "view", "(", "batch_size", ",", "num_seed", ",", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "3", "*", "GT_VOTE_FACTOR", ")", "\n", "seed_gt_votes", "=", "torch", ".", "gather", "(", "end_points", "[", "'vote_label'", "]", ",", "1", ",", "seed_inds_expand", ")", "\n", "seed_gt_votes", "+=", "end_points", "[", "'seed_xyz'", "]", ".", "repeat", "(", "1", ",", "1", ",", "3", ")", "\n", "\n", "# Compute the min of min of distance", "\n", "vote_xyz_reshape", "=", "vote_xyz", ".", "view", "(", "batch_size", "*", "num_seed", ",", "-", "1", ",", "3", ")", "# from B,num_seed*vote_factor,3 to B*num_seed,vote_factor,3", "\n", "seed_gt_votes_reshape", "=", "seed_gt_votes", ".", "view", "(", "batch_size", "*", "num_seed", ",", "GT_VOTE_FACTOR", ",", "3", ")", "# from B,num_seed,3*GT_VOTE_FACTOR to B*num_seed,GT_VOTE_FACTOR,3", "\n", "# A predicted vote to no where is not penalized as long as there is a good vote near the GT vote.", "\n", "dist1", ",", "_", ",", "dist2", ",", "_", "=", "nn_distance", "(", "vote_xyz_reshape", ",", "seed_gt_votes_reshape", ",", "l1", "=", "True", ")", "\n", "votes_dist", ",", "_", "=", "torch", ".", "min", "(", "dist2", ",", "dim", "=", "1", ")", "# (B*num_seed,vote_factor) to (B*num_seed,)", "\n", "votes_dist", "=", "votes_dist", ".", "view", "(", "batch_size", ",", "num_seed", ")", "\n", "vote_loss", "=", "torch", ".", "sum", "(", "votes_dist", "*", "seed_gt_votes_mask", ".", "float", "(", ")", ")", "/", "(", "torch", ".", "sum", "(", "seed_gt_votes_mask", ".", "float", "(", ")", ")", "+", "1e-6", ")", "\n", "return", "vote_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_objectness_loss": [[72, 114], ["utils.nn_distance.nn_distance", "torch.sqrt", "torch.sqrt", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.Tensor().cuda", "torch.Tensor().cuda", "objectness_scores.transpose", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.sum", "torch.sum", "torch.Tensor", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance"], ["", "def", "compute_objectness_loss", "(", "end_points", ")", ":", "\n", "    ", "\"\"\" Compute objectness loss for the proposals.\n\n    Args:\n        end_points: dict (read-only)\n\n    Returns:\n        objectness_loss: scalar Tensor\n        objectness_label: (batch_size, num_seed) Tensor with value 0 or 1\n        objectness_mask: (batch_size, num_seed) Tensor with value 0 or 1\n        object_assignment: (batch_size, num_seed) Tensor with long int\n            within [0,num_gt_object-1]\n    \"\"\"", "\n", "# Associate proposal and GT objects by point-to-point distances", "\n", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", "\n", "# print(end_points['center_label'].shape)", "\n", "gt_center", "=", "end_points", "[", "'center_label'", "]", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "B", "=", "gt_center", ".", "shape", "[", "0", "]", "\n", "K", "=", "aggregated_vote_xyz", ".", "shape", "[", "1", "]", "\n", "K2", "=", "gt_center", ".", "shape", "[", "1", "]", "\n", "dist1", ",", "ind1", ",", "dist2", ",", "_", "=", "nn_distance", "(", "aggregated_vote_xyz", ",", "gt_center", ")", "# dist1: BxK, dist2: BxK2", "\n", "\n", "# Generate objectness label and mask", "\n", "# objectness_label: 1 if pred object center is within NEAR_THRESHOLD of any GT object", "\n", "# objectness_mask: 0 if pred object center is in gray zone (DONOTCARE), 1 otherwise", "\n", "euclidean_dist1", "=", "torch", ".", "sqrt", "(", "dist1", "+", "1e-6", ")", "\n", "objectness_label", "=", "torch", ".", "zeros", "(", "(", "B", ",", "K", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "objectness_mask", "=", "torch", ".", "zeros", "(", "(", "B", ",", "K", ")", ")", ".", "cuda", "(", ")", "\n", "objectness_label", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", ">", "FAR_THRESHOLD", "]", "=", "1", "\n", "\n", "# Compute objectness loss", "\n", "objectness_scores", "=", "end_points", "[", "'objectness_scores'", "]", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "torch", ".", "Tensor", "(", "OBJECTNESS_CLS_WEIGHTS", ")", ".", "cuda", "(", ")", ",", "reduction", "=", "'none'", ")", "\n", "objectness_loss", "=", "criterion", "(", "objectness_scores", ".", "transpose", "(", "2", ",", "1", ")", ",", "objectness_label", ")", "\n", "objectness_loss", "=", "torch", ".", "sum", "(", "objectness_loss", "*", "objectness_mask", ")", "/", "(", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "\n", "# Set assignment", "\n", "object_assignment", "=", "ind1", "# (B,K) with values in 0,1,...,K2-1", "\n", "\n", "return", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_box_and_sem_cls_loss": [[115, 221], ["utils.nn_distance.nn_distance", "end_points[].float", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.gather", "torch.gather", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_.scatter_", "utils.nn_distance.huber_loss", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.gather", "torch.gather", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_.scatter_", "torch.cuda.FloatTensor().zero_.unsqueeze().repeat", "torch.sum", "torch.sum", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.arange().cuda", "torch.arange().cuda", "models.loss_helper_iou.compute_iou_labels", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "end_points[].transpose", "torch.sum", "torch.sum", "torch.gather.unsqueeze", "torch.sum", "torch.sum", "end_points[].transpose", "torch.sum", "torch.sum", "object_assignment.unsqueeze().repeat", "torch.gather.unsqueeze", "utils.nn_distance.huber_loss", "torch.sum", "torch.sum", "end_points[].transpose", "torch.sum", "torch.sum", "torch.sum().float", "torch.sum().float", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "end_points.keys", "torch.abs", "torch.abs", "utils.nn_distance.huber_loss", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor().zero_.unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.arange", "torch.arange", "torch.sum", "torch.sum", "torch.Sigmoid", "torch.gather().squeeze", "torch.gather().squeeze", "iou_pred.squeeze.squeeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "object_assignment.unsqueeze", "torch.sum", "torch.sum", "torch.gather.view", "iou_labels.view", "torch.ones", "torch.ones", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "end_points[].argmax", "torch.gather", "torch.gather", "end_points[].argmax", "end_points[].argmax().unsqueeze", "torch.from_numpy", "torch.from_numpy", "mean_size_arr.astype", "end_points[].argmax"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.nn_distance", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper_iou.compute_iou_labels", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.nn_distance.huber_loss"], ["", "def", "compute_box_and_sem_cls_loss", "(", "end_points", ",", "config", ",", "test_time", "=", "False", ")", ":", "\n", "    ", "\"\"\" Compute 3D bounding box and semantic classification loss.\n\n    Args:\n        end_points: dict (read-only)\n\n    Returns:\n        center_loss\n        heading_cls_loss\n        heading_reg_loss\n        size_cls_loss\n        size_reg_loss\n        sem_cls_loss\n    \"\"\"", "\n", "\n", "num_heading_bin", "=", "config", ".", "num_heading_bin", "\n", "num_size_cluster", "=", "config", ".", "num_size_cluster", "\n", "num_class", "=", "config", ".", "num_class", "\n", "mean_size_arr", "=", "config", ".", "mean_size_arr", "\n", "\n", "object_assignment", "=", "end_points", "[", "'object_assignment'", "]", "\n", "batch_size", "=", "object_assignment", ".", "shape", "[", "0", "]", "\n", "\n", "# Compute center loss", "\n", "pred_center", "=", "end_points", "[", "'center'", "]", "\n", "gt_center", "=", "end_points", "[", "'center_label'", "]", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "dist1", ",", "ind1", ",", "dist2", ",", "_", "=", "nn_distance", "(", "pred_center", ",", "gt_center", ")", "# dist1: BxK, dist2: BxK2", "\n", "box_label_mask", "=", "end_points", "[", "'box_label_mask'", "]", "\n", "objectness_label", "=", "end_points", "[", "'objectness_label'", "]", ".", "float", "(", ")", "\n", "centroid_reg_loss1", "=", "torch", ".", "sum", "(", "dist1", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "centroid_reg_loss2", "=", "torch", ".", "sum", "(", "dist2", "*", "box_label_mask", ")", "/", "(", "torch", ".", "sum", "(", "box_label_mask", ")", "+", "1e-6", ")", "\n", "center_loss", "=", "centroid_reg_loss1", "+", "centroid_reg_loss2", "\n", "\n", "# Compute heading loss", "\n", "heading_class_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_class_label'", "]", ",", "1", ",", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_heading_class", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "heading_class_loss", "=", "criterion_heading_class", "(", "end_points", "[", "'heading_scores'", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "heading_class_label", ")", "# (B,K)", "\n", "heading_class_loss", "=", "torch", ".", "sum", "(", "heading_class_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "heading_residual_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_residual_label'", "]", ",", "1", ",", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "heading_residual_normalized_label", "=", "heading_residual_label", "/", "(", "np", ".", "pi", "/", "num_heading_bin", ")", "\n", "\n", "# Ref: https://discuss.pytorch.org/t/convert-int-into-one-hot-format/507/3", "\n", "heading_label_one_hot", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "batch_size", ",", "heading_class_label", ".", "shape", "[", "1", "]", ",", "num_heading_bin", ")", ".", "zero_", "(", ")", "\n", "heading_label_one_hot", ".", "scatter_", "(", "2", ",", "heading_class_label", ".", "unsqueeze", "(", "-", "1", ")", ",", "1", ")", "# src==1 so it's *one-hot* (B,K,num_heading_bin)", "\n", "heading_residual_normalized_loss", "=", "huber_loss", "(", "torch", ".", "sum", "(", "end_points", "[", "'heading_residuals_normalized'", "]", "*", "heading_label_one_hot", ",", "-", "1", ")", "-", "heading_residual_normalized_label", ",", "delta", "=", "1.0", ")", "# (B,K)", "\n", "heading_residual_normalized_loss", "=", "torch", ".", "sum", "(", "heading_residual_normalized_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "# Compute size loss", "\n", "size_class_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_class_label'", "]", ",", "1", ",", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_size_class", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "size_class_loss", "=", "criterion_size_class", "(", "end_points", "[", "'size_scores'", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "size_class_label", ")", "# (B,K)", "\n", "size_class_loss", "=", "torch", ".", "sum", "(", "size_class_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "size_residual_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_residual_label'", "]", ",", "1", ",", "object_assignment", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "3", ")", ")", "# select (B,K,3) from (B,K2,3)", "\n", "size_label_one_hot", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "batch_size", ",", "size_class_label", ".", "shape", "[", "1", "]", ",", "num_size_cluster", ")", ".", "zero_", "(", ")", "\n", "size_label_one_hot", ".", "scatter_", "(", "2", ",", "size_class_label", ".", "unsqueeze", "(", "-", "1", ")", ",", "1", ")", "# src==1 so it's *one-hot* (B,K,num_size_cluster)", "\n", "size_label_one_hot_tiled", "=", "size_label_one_hot", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", "# (B,K,num_size_cluster,3)", "\n", "predicted_size_residual_normalized", "=", "torch", ".", "sum", "(", "end_points", "[", "'size_residuals_normalized'", "]", "*", "size_label_one_hot_tiled", ",", "2", ")", "# (B,K,3)", "\n", "\n", "mean_size_arr_expanded", "=", "torch", ".", "from_numpy", "(", "mean_size_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "# (1,1,num_size_cluster,3) ", "\n", "mean_size_label", "=", "torch", ".", "sum", "(", "size_label_one_hot_tiled", "*", "mean_size_arr_expanded", ",", "2", ")", "# (B,K,3)", "\n", "size_residual_label_normalized", "=", "size_residual_label", "/", "mean_size_label", "# (B,K,3)", "\n", "size_residual_normalized_loss", "=", "torch", ".", "mean", "(", "huber_loss", "(", "predicted_size_residual_normalized", "-", "size_residual_label_normalized", ",", "delta", "=", "1.0", ")", ",", "-", "1", ")", "# (B,K,3) -> (B,K)", "\n", "size_residual_normalized_loss", "=", "torch", ".", "sum", "(", "size_residual_normalized_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "# 3.4 Semantic cls loss", "\n", "sem_cls_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'sem_cls_label'", "]", ",", "1", ",", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_sem_cls", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "sem_cls_loss", "=", "criterion_sem_cls", "(", "end_points", "[", "'sem_cls_scores'", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "sem_cls_label", ")", "# (B,K)", "\n", "sem_cls_loss", "=", "torch", ".", "sum", "(", "sem_cls_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'cls_acc'", "]", "=", "torch", ".", "sum", "(", "\n", "(", "sem_cls_label", "==", "end_points", "[", "'sem_cls_scores'", "]", ".", "argmax", "(", "dim", "=", "-", "1", ")", ")", ")", ".", "float", "(", ")", "/", "sem_cls_label", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "end_points", "[", "'cls_acc_obj'", "]", "=", "torch", ".", "sum", "(", "\n", "(", "sem_cls_label", "==", "end_points", "[", "'sem_cls_scores'", "]", ".", "argmax", "(", "dim", "=", "-", "1", ")", ")", "*", "objectness_label", ")", "/", "(", "\n", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "# end_points['center'].retain_grad()", "\n", "mask", "=", "torch", ".", "arange", "(", "batch_size", ")", ".", "cuda", "(", ")", "\n", "iou_labels", ",", "iou_zero_mask", ",", "_", "=", "compute_iou_labels", "(", "\n", "end_points", ",", "mask", ",", "end_points", "[", "'aggregated_vote_xyz'", "]", ",", "end_points", "[", "'center'", "]", ",", "None", ",", "None", ",", "\n", "end_points", "[", "'heading_scores'", "]", ",", "\n", "end_points", "[", "'heading_residuals'", "]", ",", "\n", "end_points", "[", "'size_scores'", "]", ",", "\n", "end_points", "[", "'size_residuals'", "]", ",", "{", "'dataset_config'", ":", "config", "}", ")", "\n", "\n", "end_points", "[", "'iou_labels'", "]", "=", "iou_labels", "\n", "end_points", "[", "'pred_iou_value'", "]", "=", "torch", ".", "sum", "(", "iou_labels", ")", "/", "iou_labels", ".", "view", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "end_points", "[", "'pred_iou_obj_value'", "]", "=", "torch", ".", "sum", "(", "iou_labels", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "if", "'iou_scores'", "in", "end_points", ".", "keys", "(", ")", ":", "\n", "        ", "iou_pred", "=", "nn", ".", "Sigmoid", "(", ")", "(", "end_points", "[", "'iou_scores'", "]", ")", "\n", "if", "iou_pred", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "            ", "iou_pred", "=", "torch", ".", "gather", "(", "iou_pred", ",", "2", ",", "end_points", "[", "'sem_cls_scores'", "]", ".", "argmax", "(", "dim", "=", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "# use pred semantic labels", "\n", "", "else", ":", "\n", "            ", "iou_pred", "=", "iou_pred", ".", "squeeze", "(", "-", "1", ")", "\n", "", "iou_acc", "=", "torch", ".", "abs", "(", "iou_pred", "-", "iou_labels", ")", "\n", "end_points", "[", "'iou_acc'", "]", "=", "torch", ".", "sum", "(", "iou_acc", ")", "/", "torch", ".", "sum", "(", "torch", ".", "ones", "(", "iou_acc", ".", "shape", ")", ")", "\n", "end_points", "[", "'iou_acc_obj'", "]", "=", "torch", ".", "sum", "(", "iou_acc", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "iou_loss", "=", "huber_loss", "(", "iou_pred", "-", "iou_labels", ",", "delta", "=", "1.0", ")", "# (B, K, 1)", "\n", "iou_loss", "=", "torch", ".", "sum", "(", "iou_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'iou_loss'", "]", "=", "iou_loss", "\n", "\n", "", "return", "center_loss", ",", "heading_class_loss", ",", "heading_residual_normalized_loss", ",", "size_class_loss", ",", "size_residual_normalized_loss", ",", "sem_cls_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.get_loss": [[222, 292], ["loss_helper.compute_vote_loss", "loss_helper.compute_objectness_loss", "loss_helper.compute_box_and_sem_cls_loss", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "float", "end_points.keys", "torch.sum", "torch.sum", "objectness_label.float().cuda", "torch.sum", "torch.sum", "float", "torch.sum", "torch.sum", "objectness_mask.float", "objectness_label.float", "objectness_label.long"], "function", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_vote_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_objectness_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.loss_helper.compute_box_and_sem_cls_loss"], ["", "def", "get_loss", "(", "end_points", ",", "config", ",", "test_time", "=", "False", ")", ":", "\n", "    ", "\"\"\" Loss functions\n\n    Args:\n        end_points: dict\n            {   \n                seed_xyz, seed_inds, vote_xyz,\n                center,\n                heading_scores, heading_residuals_normalized,\n                size_scores, size_residuals_normalized,\n                sem_cls_scores, #seed_logits,#\n                center_label,\n                heading_class_label, heading_residual_label,\n                size_class_label, size_residual_label,\n                sem_cls_label,\n                box_label_mask,\n                vote_label, vote_label_mask\n            }\n        config: dataset config instance\n    Returns:\n        loss: pytorch scalar tensor\n        end_points: dict\n    \"\"\"", "\n", "\n", "# Vote loss", "\n", "vote_loss", "=", "compute_vote_loss", "(", "end_points", ")", "\n", "end_points", "[", "'vote_loss'", "]", "=", "vote_loss", "\n", "\n", "# Obj loss", "\n", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "=", "compute_objectness_loss", "(", "end_points", ")", "\n", "end_points", "[", "'objectness_loss'", "]", "=", "objectness_loss", "\n", "end_points", "[", "'objectness_label'", "]", "=", "objectness_label", "\n", "end_points", "[", "'objectness_mask'", "]", "=", "objectness_mask", "\n", "end_points", "[", "'object_assignment'", "]", "=", "object_assignment", "\n", "total_num_proposal", "=", "objectness_label", ".", "shape", "[", "0", "]", "*", "objectness_label", ".", "shape", "[", "1", "]", "\n", "end_points", "[", "'pos_ratio'", "]", "=", "torch", ".", "sum", "(", "objectness_label", ".", "float", "(", ")", ".", "cuda", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "\n", "end_points", "[", "'neg_ratio'", "]", "=", "torch", ".", "sum", "(", "objectness_mask", ".", "float", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "-", "end_points", "[", "'pos_ratio'", "]", "\n", "\n", "# Box loss and sem cls loss", "\n", "center_loss", ",", "heading_cls_loss", ",", "heading_reg_loss", ",", "size_cls_loss", ",", "size_reg_loss", ",", "sem_cls_loss", "=", "compute_box_and_sem_cls_loss", "(", "end_points", ",", "config", ",", "test_time", "=", "test_time", ")", "\n", "end_points", "[", "'center_loss'", "]", "=", "center_loss", "\n", "end_points", "[", "'heading_cls_loss'", "]", "=", "heading_cls_loss", "\n", "end_points", "[", "'heading_reg_loss'", "]", "=", "heading_reg_loss", "\n", "end_points", "[", "'size_cls_loss'", "]", "=", "size_cls_loss", "\n", "end_points", "[", "'size_reg_loss'", "]", "=", "size_reg_loss", "\n", "end_points", "[", "'sem_cls_loss'", "]", "=", "sem_cls_loss", "\n", "box_loss", "=", "0.1", "*", "heading_cls_loss", "+", "heading_reg_loss", "+", "0.1", "*", "size_cls_loss", "+", "size_reg_loss", "+", "center_loss", "\n", "end_points", "[", "'box_loss'", "]", "=", "box_loss", "\n", "\n", "# Final loss function", "\n", "loss", "=", "vote_loss", "+", "0.5", "*", "objectness_loss", "+", "box_loss", "+", "0.1", "*", "sem_cls_loss", "\n", "if", "'iou_loss'", "in", "end_points", ".", "keys", "(", ")", ":", "\n", "        ", "loss", "=", "loss", "+", "end_points", "[", "'iou_loss'", "]", "\n", "\n", "", "loss", "*=", "10", "\n", "end_points", "[", "'detection_loss'", "]", "=", "loss", "\n", "\n", "# --------------------------------------------", "\n", "# Some other statistics", "\n", "obj_scores", "=", "end_points", "[", "'objectness_scores'", "]", "\n", "obj_pred_val", "=", "torch", ".", "argmax", "(", "obj_scores", ",", "2", ")", "# B,K", "\n", "obj_acc", "=", "torch", ".", "sum", "(", "(", "obj_pred_val", "==", "objectness_label", ".", "long", "(", ")", ")", ".", "float", "(", ")", "*", "objectness_mask", ")", "/", "(", "\n", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'obj_acc'", "]", "=", "obj_acc", "\n", "\n", "return", "loss", ",", "end_points", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.proposal_module.ProposalModule.__init__": [[58, 89], ["torch.Module.__init__", "pointnet2.pointnet2_modules.PointnetSAModuleVotes", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "mean_size_arr", ",", "num_proposal", ",", "sampling", ",", "\n", "seed_feat_dim", "=", "256", ",", "query_feats", "=", "'seed'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "num_heading_bin", "=", "num_heading_bin", "\n", "self", ".", "num_size_cluster", "=", "num_size_cluster", "\n", "self", ".", "mean_size_arr", "=", "mean_size_arr", "\n", "self", ".", "num_proposal", "=", "num_proposal", "\n", "self", ".", "sampling", "=", "sampling", "\n", "self", ".", "seed_feat_dim", "=", "seed_feat_dim", "\n", "self", ".", "query_feats", "=", "query_feats", "\n", "\n", "# Vote clustering", "\n", "self", ".", "vote_aggregation", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "self", ".", "num_proposal", ",", "\n", "radius", "=", "0.3", ",", "\n", "nsample", "=", "16", ",", "\n", "mlp", "=", "[", "self", ".", "seed_feat_dim", ",", "128", ",", "128", ",", "128", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "# Object proposal/detection", "\n", "# Objectness scores (2), center residual (3),", "\n", "# heading class+residual (num_heading_bin*2), size class+residual(num_size_cluster*4)", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "128", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "2", "+", "3", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", "*", "4", "+", "self", ".", "num_class", ",", "1", ")", "\n", "self", ".", "bn1", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn2", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.proposal_module.ProposalModule.forward": [[90, 126], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "proposal_module.ProposalModule.conv3", "proposal_module.decode_scores", "proposal_module.ProposalModule.vote_aggregation", "proposal_module.ProposalModule.bn1", "proposal_module.ProposalModule.bn2", "pointnet2.pointnet2_utils.furthest_point_sample", "proposal_module.ProposalModule.vote_aggregation", "proposal_module.ProposalModule.conv1", "proposal_module.ProposalModule.conv2", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "proposal_module.ProposalModule.vote_aggregation", "print", "exit", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.proposal_module.decode_scores"], ["", "def", "forward", "(", "self", ",", "xyz", ",", "features", ",", "end_points", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            xyz: (B,K,3)\n            features: (B,C,K)\n        Returns:\n            scores: (B,num_proposal,2+3+NH*2+NS*4)\n        \"\"\"", "\n", "if", "self", ".", "sampling", "==", "'vote_fps'", ":", "\n", "# Farthest point sampling (FPS) on votes", "\n", "            ", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "vote_aggregation", "(", "xyz", ",", "features", ")", "\n", "sample_inds", "=", "fps_inds", "\n", "", "elif", "self", ".", "sampling", "==", "'seed_fps'", ":", "\n", "# FPS on seed and choose the votes corresponding to the seeds", "\n", "# This gets us a slightly better coverage of *object* votes than vote_fps (which tends to get more cluster votes)", "\n", "            ", "sample_inds", "=", "pointnet2_utils", ".", "furthest_point_sample", "(", "end_points", "[", "'seed_xyz'", "]", ",", "self", ".", "num_proposal", ")", "\n", "xyz", ",", "features", ",", "_", "=", "self", ".", "vote_aggregation", "(", "xyz", ",", "features", ",", "sample_inds", ")", "\n", "", "elif", "self", ".", "sampling", "==", "'random'", ":", "\n", "# Random sampling from the votes", "\n", "            ", "batch_size", ",", "num_seed", "=", "end_points", "[", "'seed_xyz'", "]", ".", "shape", "[", ":", "2", "]", "\n", "sample_inds", "=", "torch", ".", "randint", "(", "0", ",", "num_seed", ",", "(", "batch_size", ",", "self", ".", "num_proposal", ")", ",", "dtype", "=", "torch", ".", "int", ")", ".", "cuda", "(", ")", "\n", "xyz", ",", "features", ",", "_", "=", "self", ".", "vote_aggregation", "(", "xyz", ",", "features", ",", "sample_inds", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown sampling strategy: %s. Exiting!'", "%", "(", "self", ".", "sampling", ")", ")", "\n", "exit", "(", ")", "\n", "", "end_points", "[", "'aggregated_vote_xyz'", "]", "=", "xyz", "# (batch_size, num_proposal, 3)", "\n", "end_points", "[", "'aggregated_vote_inds'", "]", "=", "sample_inds", "# (batch_size, num_proposal,) # should be 0,1,2,...,num_proposal", "\n", "# --------- PROPOSAL GENERATION ---------", "\n", "net", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "features", ")", ")", ")", "\n", "net", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "net", ")", ")", ")", "\n", "net", "=", "self", ".", "conv3", "(", "net", ")", "# (batch_size, 2+3+num_heading_bin*2+num_size_cluster*4, num_proposal)", "\n", "\n", "end_points", "=", "decode_scores", "(", "net", ",", "end_points", ",", "self", ".", "num_class", ",", "self", ".", "num_heading_bin", ",", "self", ".", "num_size_cluster", ",", "\n", "self", ".", "mean_size_arr", ")", "\n", "\n", "return", "end_points", "", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.models.proposal_module.decode_scores": [[24, 55], ["net.transpose", "net_transposed[].view", "torch.softplus", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "mean_size_arr.astype"], "function", ["None"], ["def", "decode_scores", "(", "net", ",", "end_points", ",", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "mean_size_arr", ")", ":", "\n", "    ", "net_transposed", "=", "net", ".", "transpose", "(", "2", ",", "1", ")", "# (batch_size, 1024, ..)", "\n", "batch_size", "=", "net_transposed", ".", "shape", "[", "0", "]", "\n", "num_proposal", "=", "net_transposed", ".", "shape", "[", "1", "]", "\n", "\n", "objectness_scores", "=", "net_transposed", "[", ":", ",", ":", ",", "0", ":", "2", "]", "\n", "end_points", "[", "'objectness_scores'", "]", "=", "objectness_scores", "\n", "\n", "base_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", "# (batch_size, num_proposal, 3)", "\n", "center", "=", "base_xyz", "+", "net_transposed", "[", ":", ",", ":", ",", "2", ":", "5", "]", "# (batch_size, num_proposal, 3)", "\n", "end_points", "[", "'center'", "]", "=", "center", "\n", "\n", "heading_scores", "=", "net_transposed", "[", ":", ",", ":", ",", "5", ":", "5", "+", "num_heading_bin", "]", "\n", "heading_residuals_normalized", "=", "net_transposed", "[", ":", ",", ":", ",", "5", "+", "num_heading_bin", ":", "5", "+", "num_heading_bin", "*", "2", "]", "\n", "end_points", "[", "'heading_scores'", "]", "=", "heading_scores", "# Bxnum_proposalxnum_heading_bin", "\n", "end_points", "[", "'heading_residuals_normalized'", "]", "=", "heading_residuals_normalized", "# Bxnum_proposalxnum_heading_bin (should be -1 to 1)", "\n", "end_points", "[", "'heading_residuals'", "]", "=", "heading_residuals_normalized", "*", "(", "np", ".", "pi", "/", "num_heading_bin", ")", "# Bxnum_proposalxnum_heading_bin", "\n", "\n", "size_scores", "=", "net_transposed", "[", ":", ",", ":", ",", "5", "+", "num_heading_bin", "*", "2", ":", "5", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", "]", "\n", "size_residuals_normalized", "=", "net_transposed", "[", ":", ",", ":", ",", "5", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", ":", "5", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", "*", "4", "]", ".", "view", "(", "[", "batch_size", ",", "num_proposal", ",", "num_size_cluster", ",", "3", "]", ")", "# Bxnum_proposalxnum_size_clusterx3", "\n", "end_points", "[", "'size_scores'", "]", "=", "size_scores", "\n", "size_residuals_normalized", "=", "F", ".", "softplus", "(", "size_residuals_normalized", ")", "-", "1", "\n", "\n", "end_points", "[", "'size_residuals_normalized'", "]", "=", "size_residuals_normalized", "\n", "end_points", "[", "'size_residuals'", "]", "=", "size_residuals_normalized", "*", "torch", ".", "from_numpy", "(", "mean_size_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "sem_cls_scores", "=", "net_transposed", "[", ":", ",", ":", ",", "5", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", "*", "4", ":", "]", "# Bxnum_proposalx10", "\n", "end_points", "[", "'sem_cls_scores'", "]", "=", "sem_cls_scores", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_2d.base_bev_backbone.BaseBEVBackbone.__init__": [[7, 80], ["torch.Module.__init__", "len", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "sum", "base_bev_backbone.BaseBEVBackbone.model_cfg.get", "base_bev_backbone.BaseBEVBackbone.model_cfg.get", "range", "base_bev_backbone.BaseBEVBackbone.blocks.append", "len", "base_bev_backbone.BaseBEVBackbone.deblocks.append", "len", "len", "len", "len", "len", "torch.ZeroPad2d", "torch.ZeroPad2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "cur_layers.extend", "torch.Sequential", "torch.Sequential", "len", "torch.Sequential", "torch.Sequential", "base_bev_backbone.BaseBEVBackbone.deblocks.append", "numpy.round().astype", "base_bev_backbone.BaseBEVBackbone.deblocks.append", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "numpy.round", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "input_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "\n", "if", "self", ".", "model_cfg", ".", "get", "(", "'LAYER_NUMS'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "assert", "len", "(", "self", ".", "model_cfg", ".", "LAYER_NUMS", ")", "==", "len", "(", "self", ".", "model_cfg", ".", "LAYER_STRIDES", ")", "==", "len", "(", "self", ".", "model_cfg", ".", "NUM_FILTERS", ")", "\n", "layer_nums", "=", "self", ".", "model_cfg", ".", "LAYER_NUMS", "\n", "layer_strides", "=", "self", ".", "model_cfg", ".", "LAYER_STRIDES", "\n", "num_filters", "=", "self", ".", "model_cfg", ".", "NUM_FILTERS", "\n", "", "else", ":", "\n", "            ", "layer_nums", "=", "layer_strides", "=", "num_filters", "=", "[", "]", "\n", "\n", "", "if", "self", ".", "model_cfg", ".", "get", "(", "'UPSAMPLE_STRIDES'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "assert", "len", "(", "self", ".", "model_cfg", ".", "UPSAMPLE_STRIDES", ")", "==", "len", "(", "self", ".", "model_cfg", ".", "NUM_UPSAMPLE_FILTERS", ")", "\n", "num_upsample_filters", "=", "self", ".", "model_cfg", ".", "NUM_UPSAMPLE_FILTERS", "\n", "upsample_strides", "=", "self", ".", "model_cfg", ".", "UPSAMPLE_STRIDES", "\n", "", "else", ":", "\n", "            ", "upsample_strides", "=", "num_upsample_filters", "=", "[", "]", "\n", "\n", "", "num_levels", "=", "len", "(", "layer_nums", ")", "\n", "c_in_list", "=", "[", "input_channels", ",", "*", "num_filters", "[", ":", "-", "1", "]", "]", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "deblocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "idx", "in", "range", "(", "num_levels", ")", ":", "\n", "            ", "cur_layers", "=", "[", "\n", "nn", ".", "ZeroPad2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "c_in_list", "[", "idx", "]", ",", "num_filters", "[", "idx", "]", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "layer_strides", "[", "idx", "]", ",", "padding", "=", "0", ",", "bias", "=", "False", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_filters", "[", "idx", "]", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "for", "k", "in", "range", "(", "layer_nums", "[", "idx", "]", ")", ":", "\n", "                ", "cur_layers", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "num_filters", "[", "idx", "]", ",", "num_filters", "[", "idx", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_filters", "[", "idx", "]", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "cur_layers", ")", ")", "\n", "if", "len", "(", "upsample_strides", ")", ">", "0", ":", "\n", "                ", "stride", "=", "upsample_strides", "[", "idx", "]", "\n", "if", "stride", ">=", "1", ":", "\n", "                    ", "self", ".", "deblocks", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "\n", "num_filters", "[", "idx", "]", ",", "num_upsample_filters", "[", "idx", "]", ",", "\n", "upsample_strides", "[", "idx", "]", ",", "\n", "stride", "=", "upsample_strides", "[", "idx", "]", ",", "bias", "=", "False", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_upsample_filters", "[", "idx", "]", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", ")", "\n", "", "else", ":", "\n", "                    ", "stride", "=", "np", ".", "round", "(", "1", "/", "stride", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "self", ".", "deblocks", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "num_filters", "[", "idx", "]", ",", "num_upsample_filters", "[", "idx", "]", ",", "\n", "stride", ",", "\n", "stride", "=", "stride", ",", "bias", "=", "False", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_upsample_filters", "[", "idx", "]", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", ")", "\n", "\n", "", "", "", "c_in", "=", "sum", "(", "num_upsample_filters", ")", "\n", "if", "len", "(", "upsample_strides", ")", ">", "num_levels", ":", "\n", "            ", "self", ".", "deblocks", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "c_in", ",", "c_in", ",", "upsample_strides", "[", "-", "1", "]", ",", "stride", "=", "upsample_strides", "[", "-", "1", "]", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "c_in", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", ")", "\n", "\n", "", "self", ".", "num_bev_features", "=", "c_in", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_2d.base_bev_backbone.BaseBEVBackbone.forward": [[81, 113], ["range", "len", "int", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "len", "len", "ups.append", "ups.append", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            data_dict:\n                spatial_features\n        Returns:\n        \"\"\"", "\n", "spatial_features", "=", "data_dict", "[", "'spatial_features'", "]", "\n", "ups", "=", "[", "]", "\n", "ret_dict", "=", "{", "}", "\n", "x", "=", "spatial_features", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "blocks", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "blocks", "[", "i", "]", "(", "x", ")", "\n", "\n", "stride", "=", "int", "(", "spatial_features", ".", "shape", "[", "2", "]", "/", "x", ".", "shape", "[", "2", "]", ")", "\n", "ret_dict", "[", "'spatial_features_%dx'", "%", "stride", "]", "=", "x", "\n", "if", "len", "(", "self", ".", "deblocks", ")", ">", "0", ":", "\n", "                ", "ups", ".", "append", "(", "self", ".", "deblocks", "[", "i", "]", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "                ", "ups", ".", "append", "(", "x", ")", "\n", "\n", "", "", "if", "len", "(", "ups", ")", ">", "1", ":", "\n", "            ", "x", "=", "torch", ".", "cat", "(", "ups", ",", "dim", "=", "1", ")", "\n", "", "elif", "len", "(", "ups", ")", "==", "1", ":", "\n", "            ", "x", "=", "ups", "[", "0", "]", "\n", "\n", "", "if", "len", "(", "self", ".", "deblocks", ")", ">", "len", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "self", ".", "deblocks", "[", "-", "1", "]", "(", "x", ")", "\n", "\n", "", "data_dict", "[", "'spatial_features_2d'", "]", "=", "x", "\n", "\n", "return", "data_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.map_to_bev.pointpillar_scatter.PointPillarScatter.__init__": [[6, 13], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "grid_size", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "num_bev_features", "=", "self", ".", "model_cfg", ".", "NUM_BEV_FEATURES", "\n", "self", ".", "nx", ",", "self", ".", "ny", ",", "self", ".", "nz", "=", "grid_size", "\n", "assert", "self", ".", "nz", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.map_to_bev.pointpillar_scatter.PointPillarScatter.forward": [[14, 38], ["range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "batch_spatial_features.view.view.view", "coords[].max().int().item", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "indices.type.type.type", "pillars.t.t.t", "batch_spatial_features.view.view.append", "coords[].max().int", "coords[].max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "batch_dict", ",", "**", "kwargs", ")", ":", "\n", "        ", "pillar_features", ",", "coords", "=", "batch_dict", "[", "'pillar_features'", "]", ",", "batch_dict", "[", "'voxel_coords'", "]", "\n", "batch_spatial_features", "=", "[", "]", "\n", "batch_size", "=", "coords", "[", ":", ",", "0", "]", ".", "max", "(", ")", ".", "int", "(", ")", ".", "item", "(", ")", "+", "1", "\n", "for", "batch_idx", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "spatial_feature", "=", "torch", ".", "zeros", "(", "\n", "self", ".", "num_bev_features", ",", "\n", "self", ".", "nz", "*", "self", ".", "nx", "*", "self", ".", "ny", ",", "\n", "dtype", "=", "pillar_features", ".", "dtype", ",", "\n", "device", "=", "pillar_features", ".", "device", ")", "\n", "\n", "batch_mask", "=", "coords", "[", ":", ",", "0", "]", "==", "batch_idx", "\n", "this_coords", "=", "coords", "[", "batch_mask", ",", ":", "]", "\n", "indices", "=", "this_coords", "[", ":", ",", "1", "]", "+", "this_coords", "[", ":", ",", "2", "]", "*", "self", ".", "nx", "+", "this_coords", "[", ":", ",", "3", "]", "\n", "indices", "=", "indices", ".", "type", "(", "torch", ".", "long", ")", "\n", "pillars", "=", "pillar_features", "[", "batch_mask", ",", ":", "]", "\n", "pillars", "=", "pillars", ".", "t", "(", ")", "\n", "spatial_feature", "[", ":", ",", "indices", "]", "=", "pillars", "\n", "batch_spatial_features", ".", "append", "(", "spatial_feature", ")", "\n", "\n", "", "batch_spatial_features", "=", "torch", ".", "stack", "(", "batch_spatial_features", ",", "0", ")", "\n", "batch_spatial_features", "=", "batch_spatial_features", ".", "view", "(", "batch_size", ",", "self", ".", "num_bev_features", "*", "self", ".", "nz", ",", "self", ".", "ny", ",", "self", ".", "nx", ")", "\n", "batch_dict", "[", "'spatial_features'", "]", "=", "batch_spatial_features", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.map_to_bev.height_compression.HeightCompression.__init__": [[5, 9], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "num_bev_features", "=", "self", ".", "model_cfg", ".", "NUM_BEV_FEATURES", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.map_to_bev.height_compression.HeightCompression.forward": [[10, 27], ["encoded_spconv_tensor.dense", "spatial_features.view.view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                encoded_spconv_tensor: sparse tensor\n        Returns:\n            batch_dict:\n                spatial_features:\n\n        \"\"\"", "\n", "encoded_spconv_tensor", "=", "batch_dict", "[", "'encoded_spconv_tensor'", "]", "\n", "spatial_features", "=", "encoded_spconv_tensor", ".", "dense", "(", ")", "\n", "N", ",", "C", ",", "D", ",", "H", ",", "W", "=", "spatial_features", ".", "shape", "\n", "spatial_features", "=", "spatial_features", ".", "view", "(", "N", ",", "C", "*", "D", ",", "H", ",", "W", ")", "\n", "batch_dict", "[", "'spatial_features'", "]", "=", "spatial_features", "\n", "batch_dict", "[", "'spatial_features_stride'", "]", "=", "batch_dict", "[", "'encoded_spconv_tensor_stride'", "]", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.SparseBasicBlock.__init__": [[14, 27], ["spconv.SparseModule.__init__", "spconv.SubMConv3d", "norm_fn", "torch.ReLU", "torch.ReLU", "spconv.SubMConv3d", "norm_fn"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "indice_key", "=", "None", ",", "norm_fn", "=", "None", ")", ":", "\n", "        ", "super", "(", "SparseBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "spconv", ".", "SubMConv3d", "(", "\n", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", "\n", ")", "\n", "self", ".", "bn1", "=", "norm_fn", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "conv2", "=", "spconv", ".", "SubMConv3d", "(", "\n", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", "\n", ")", "\n", "self", ".", "bn2", "=", "norm_fn", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.SparseBasicBlock.forward": [[28, 47], ["spconv_unet.SparseBasicBlock.conv1", "spconv_unet.SparseBasicBlock.bn1", "spconv_unet.SparseBasicBlock.relu", "spconv_unet.SparseBasicBlock.conv2", "spconv_unet.SparseBasicBlock.bn2", "spconv_unet.SparseBasicBlock.relu", "x.features.dim", "x.features.dim", "spconv_unet.SparseBasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", ".", "features", "\n", "\n", "assert", "x", ".", "features", ".", "dim", "(", ")", "==", "2", ",", "'x.features.dim()=%d'", "%", "x", ".", "features", ".", "dim", "(", ")", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", ".", "features", "=", "self", ".", "bn1", "(", "out", ".", "features", ")", "\n", "out", ".", "features", "=", "self", ".", "relu", "(", "out", ".", "features", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", ".", "features", "=", "self", ".", "bn2", "(", "out", ".", "features", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", ".", "features", "+=", "identity", "\n", "out", ".", "features", "=", "self", ".", "relu", "(", "out", ".", "features", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.UNetV2.__init__": [[55, 133], ["torch.Module.__init__", "functools.partial", "spconv.SparseSequential", "spconv.SparseSequential", "spconv.SparseSequential", "spconv.SparseSequential", "spconv.SparseSequential", "spconv_unet.UNetV2.model_cfg.get", "spconv_unet.SparseBasicBlock", "block", "block", "spconv_unet.SparseBasicBlock", "block", "block", "spconv_unet.SparseBasicBlock", "block", "block", "spconv_unet.SparseBasicBlock", "block", "spconv.SparseSequential", "spconv.SubMConv3d", "functools.partial.", "torch.ReLU", "torch.ReLU", "block", "block", "block", "block", "block", "block", "block", "block", "block", "block", "spconv_unet.UNetV2.model_cfg.get", "spconv.SparseSequential", "block", "spconv.SparseConv3d", "functools.partial.", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "model_cfg", ",", "input_channels", ",", "grid_size", ",", "voxel_size", ",", "point_cloud_range", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "sparse_shape", "=", "grid_size", "[", ":", ":", "-", "1", "]", "+", "[", "1", ",", "0", ",", "0", "]", "\n", "self", ".", "voxel_size", "=", "voxel_size", "\n", "self", ".", "point_cloud_range", "=", "point_cloud_range", "\n", "\n", "norm_fn", "=", "partial", "(", "nn", ".", "BatchNorm1d", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", "\n", "\n", "self", ".", "conv_input", "=", "spconv", ".", "SparseSequential", "(", "\n", "spconv", ".", "SubMConv3d", "(", "input_channels", ",", "16", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "indice_key", "=", "'subm1'", ")", ",", "\n", "norm_fn", "(", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "block", "=", "post_act_block", "\n", "\n", "self", ".", "conv1", "=", "spconv", ".", "SparseSequential", "(", "\n", "block", "(", "16", ",", "16", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm1'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "conv2", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [1600, 1408, 41] <- [800, 704, 21]", "\n", "block", "(", "16", ",", "32", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "indice_key", "=", "'spconv2'", ",", "conv_type", "=", "'spconv'", ")", ",", "\n", "block", "(", "32", ",", "32", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm2'", ")", ",", "\n", "block", "(", "32", ",", "32", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm2'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "conv3", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [800, 704, 21] <- [400, 352, 11]", "\n", "block", "(", "32", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "indice_key", "=", "'spconv3'", ",", "conv_type", "=", "'spconv'", ")", ",", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm3'", ")", ",", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm3'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "conv4", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [400, 352, 11] <- [200, 176, 5]", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "stride", "=", "2", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "indice_key", "=", "'spconv4'", ",", "conv_type", "=", "'spconv'", ")", ",", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm4'", ")", ",", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm4'", ")", ",", "\n", ")", "\n", "\n", "if", "self", ".", "model_cfg", ".", "get", "(", "'RETURN_ENCODED_TENSOR'", ",", "True", ")", ":", "\n", "            ", "last_pad", "=", "self", ".", "model_cfg", ".", "get", "(", "'last_pad'", ",", "0", ")", "\n", "\n", "self", ".", "conv_out", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [200, 150, 5] -> [200, 150, 2]", "\n", "spconv", ".", "SparseConv3d", "(", "64", ",", "128", ",", "(", "3", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "padding", "=", "last_pad", ",", "\n", "bias", "=", "False", ",", "indice_key", "=", "'spconv_down2'", ")", ",", "\n", "norm_fn", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv_out", "=", "None", "\n", "\n", "# decoder", "\n", "# [400, 352, 11] <- [200, 176, 5]", "\n", "", "self", ".", "conv_up_t4", "=", "SparseBasicBlock", "(", "64", ",", "64", ",", "indice_key", "=", "'subm4'", ",", "norm_fn", "=", "norm_fn", ")", "\n", "self", ".", "conv_up_m4", "=", "block", "(", "128", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm4'", ")", "\n", "self", ".", "inv_conv4", "=", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'spconv4'", ",", "conv_type", "=", "'inverseconv'", ")", "\n", "\n", "# [800, 704, 21] <- [400, 352, 11]", "\n", "self", ".", "conv_up_t3", "=", "SparseBasicBlock", "(", "64", ",", "64", ",", "indice_key", "=", "'subm3'", ",", "norm_fn", "=", "norm_fn", ")", "\n", "self", ".", "conv_up_m3", "=", "block", "(", "128", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm3'", ")", "\n", "self", ".", "inv_conv3", "=", "block", "(", "64", ",", "32", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'spconv3'", ",", "conv_type", "=", "'inverseconv'", ")", "\n", "\n", "# [1600, 1408, 41] <- [800, 704, 21]", "\n", "self", ".", "conv_up_t2", "=", "SparseBasicBlock", "(", "32", ",", "32", ",", "indice_key", "=", "'subm2'", ",", "norm_fn", "=", "norm_fn", ")", "\n", "self", ".", "conv_up_m2", "=", "block", "(", "64", ",", "32", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'subm2'", ")", "\n", "self", ".", "inv_conv2", "=", "block", "(", "32", ",", "16", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'spconv2'", ",", "conv_type", "=", "'inverseconv'", ")", "\n", "\n", "# [1600, 1408, 41] <- [1600, 1408, 41]", "\n", "self", ".", "conv_up_t1", "=", "SparseBasicBlock", "(", "16", ",", "16", ",", "indice_key", "=", "'subm1'", ",", "norm_fn", "=", "norm_fn", ")", "\n", "self", ".", "conv_up_m1", "=", "block", "(", "32", ",", "16", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'subm1'", ")", "\n", "\n", "self", ".", "conv5", "=", "spconv", ".", "SparseSequential", "(", "\n", "block", "(", "16", ",", "16", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm1'", ")", "\n", ")", "\n", "self", ".", "num_point_features", "=", "16", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.UNetV2.UR_block_forward": [[134, 143], ["conv_t", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "conv_m", "spconv_unet.UNetV2.channel_reduction", "conv_inv"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.UNetV2.channel_reduction"], ["", "def", "UR_block_forward", "(", "self", ",", "x_lateral", ",", "x_bottom", ",", "conv_t", ",", "conv_m", ",", "conv_inv", ")", ":", "\n", "        ", "x_trans", "=", "conv_t", "(", "x_lateral", ")", "\n", "x", "=", "x_trans", "\n", "x", ".", "features", "=", "torch", ".", "cat", "(", "(", "x_bottom", ".", "features", ",", "x_trans", ".", "features", ")", ",", "dim", "=", "1", ")", "\n", "x_m", "=", "conv_m", "(", "x", ")", "\n", "x", "=", "self", ".", "channel_reduction", "(", "x", ",", "x_m", ".", "features", ".", "shape", "[", "1", "]", ")", "\n", "x", ".", "features", "=", "x_m", ".", "features", "+", "x", ".", "features", "\n", "x", "=", "conv_inv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.UNetV2.channel_reduction": [[144, 160], ["features.view().sum", "features.view"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "channel_reduction", "(", "x", ",", "out_channels", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x: x.features (N, C1)\n            out_channels: C2\n\n        Returns:\n\n        \"\"\"", "\n", "features", "=", "x", ".", "features", "\n", "n", ",", "in_channels", "=", "features", ".", "shape", "\n", "assert", "(", "in_channels", "%", "out_channels", "==", "0", ")", "and", "(", "in_channels", ">=", "out_channels", ")", "\n", "\n", "x", ".", "features", "=", "features", ".", "view", "(", "n", ",", "out_channels", ",", "-", "1", ")", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.UNetV2.forward": [[161, 212], ["spconv.SparseConvTensor", "spconv_unet.UNetV2.conv_input", "spconv_unet.UNetV2.conv1", "spconv_unet.UNetV2.conv2", "spconv_unet.UNetV2.conv3", "spconv_unet.UNetV2.conv4", "spconv_unet.UNetV2.UR_block_forward", "spconv_unet.UNetV2.UR_block_forward", "spconv_unet.UNetV2.UR_block_forward", "spconv_unet.UNetV2.UR_block_forward", "utils.common_utils.get_voxel_centers", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "spconv_unet.UNetV2.conv_out", "voxel_coords.int", "spconv_unet.UNetV2.indices[].float"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.UNetV2.UR_block_forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.UNetV2.UR_block_forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.UNetV2.UR_block_forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_unet.UNetV2.UR_block_forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.get_voxel_centers"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size: int\n                vfe_features: (num_voxels, C)\n                voxel_coords: (num_voxels, 4), [batch_idx, z_idx, y_idx, x_idx]\n        Returns:\n            batch_dict:\n                encoded_spconv_tensor: sparse tensor\n                point_features: (N, C)\n        \"\"\"", "\n", "voxel_features", ",", "voxel_coords", "=", "batch_dict", "[", "'voxel_features'", "]", ",", "batch_dict", "[", "'voxel_coords'", "]", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "input_sp_tensor", "=", "spconv", ".", "SparseConvTensor", "(", "\n", "features", "=", "voxel_features", ",", "\n", "indices", "=", "voxel_coords", ".", "int", "(", ")", ",", "\n", "spatial_shape", "=", "self", ".", "sparse_shape", ",", "\n", "batch_size", "=", "batch_size", "\n", ")", "\n", "x", "=", "self", ".", "conv_input", "(", "input_sp_tensor", ")", "\n", "\n", "x_conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x_conv2", "=", "self", ".", "conv2", "(", "x_conv1", ")", "\n", "x_conv3", "=", "self", ".", "conv3", "(", "x_conv2", ")", "\n", "x_conv4", "=", "self", ".", "conv4", "(", "x_conv3", ")", "\n", "\n", "if", "self", ".", "conv_out", "is", "not", "None", ":", "\n", "# for detection head", "\n", "# [200, 176, 5] -> [200, 176, 2]", "\n", "            ", "out", "=", "self", ".", "conv_out", "(", "x_conv4", ")", "\n", "batch_dict", "[", "'encoded_spconv_tensor'", "]", "=", "out", "\n", "batch_dict", "[", "'encoded_spconv_tensor_stride'", "]", "=", "8", "\n", "\n", "# for segmentation head", "\n", "# [400, 352, 11] <- [200, 176, 5]", "\n", "", "x_up4", "=", "self", ".", "UR_block_forward", "(", "x_conv4", ",", "x_conv4", ",", "self", ".", "conv_up_t4", ",", "self", ".", "conv_up_m4", ",", "self", ".", "inv_conv4", ")", "\n", "# [800, 704, 21] <- [400, 352, 11]", "\n", "x_up3", "=", "self", ".", "UR_block_forward", "(", "x_conv3", ",", "x_up4", ",", "self", ".", "conv_up_t3", ",", "self", ".", "conv_up_m3", ",", "self", ".", "inv_conv3", ")", "\n", "# [1600, 1408, 41] <- [800, 704, 21]", "\n", "x_up2", "=", "self", ".", "UR_block_forward", "(", "x_conv2", ",", "x_up3", ",", "self", ".", "conv_up_t2", ",", "self", ".", "conv_up_m2", ",", "self", ".", "inv_conv2", ")", "\n", "# [1600, 1408, 41] <- [1600, 1408, 41]", "\n", "x_up1", "=", "self", ".", "UR_block_forward", "(", "x_conv1", ",", "x_up2", ",", "self", ".", "conv_up_t1", ",", "self", ".", "conv_up_m1", ",", "self", ".", "conv5", ")", "\n", "\n", "batch_dict", "[", "'point_features'", "]", "=", "x_up1", ".", "features", "\n", "point_coords", "=", "common_utils", ".", "get_voxel_centers", "(", "\n", "x_up1", ".", "indices", "[", ":", ",", "1", ":", "]", ",", "downsample_times", "=", "1", ",", "voxel_size", "=", "self", ".", "voxel_size", ",", "\n", "point_cloud_range", "=", "self", ".", "point_cloud_range", "\n", ")", "\n", "batch_dict", "[", "'point_coords'", "]", "=", "torch", ".", "cat", "(", "(", "x_up1", ".", "indices", "[", ":", ",", "0", ":", "1", "]", ".", "float", "(", ")", ",", "point_coords", ")", ",", "dim", "=", "1", ")", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.pointnet2_backbone.PointNet2MSG.__init__": [[10, 49], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "range", "pointnet2_backbone.PointNet2MSG.model_cfg.SA_CONFIG.NPOINTS.__len__", "pointnet2_backbone.PointNet2MSG.model_cfg.SA_CONFIG.MLPS[].copy", "range", "pointnet2_backbone.PointNet2MSG.SA_modules.append", "skip_channel_list.append", "pointnet2_backbone.PointNet2MSG.model_cfg.FP_MLPS.__len__", "pointnet2_backbone.PointNet2MSG.FP_modules.append", "pointnet2_backbone.PointNet2MSG.__len__", "ops.pointnet2.pointnet2_batch.pointnet2_modules.PointnetSAModuleMSG", "ops.pointnet2.pointnet2_batch.pointnet2_modules.PointnetFPModule", "len", "pointnet2_backbone.PointNet2MSG.model_cfg.SA_CONFIG.get"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "input_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "\n", "self", ".", "SA_modules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "channel_in", "=", "input_channels", "-", "3", "\n", "\n", "self", ".", "num_points_each_layer", "=", "[", "]", "\n", "skip_channel_list", "=", "[", "input_channels", "-", "3", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NPOINTS", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "mlps", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "MLPS", "[", "k", "]", ".", "copy", "(", ")", "\n", "channel_out", "=", "0", "\n", "for", "idx", "in", "range", "(", "mlps", ".", "__len__", "(", ")", ")", ":", "\n", "                ", "mlps", "[", "idx", "]", "=", "[", "channel_in", "]", "+", "mlps", "[", "idx", "]", "\n", "channel_out", "+=", "mlps", "[", "idx", "]", "[", "-", "1", "]", "\n", "\n", "", "self", ".", "SA_modules", ".", "append", "(", "\n", "pointnet2_modules", ".", "PointnetSAModuleMSG", "(", "\n", "npoint", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NPOINTS", "[", "k", "]", ",", "\n", "radii", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "RADIUS", "[", "k", "]", ",", "\n", "nsamples", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NSAMPLE", "[", "k", "]", ",", "\n", "mlps", "=", "mlps", ",", "\n", "use_xyz", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "get", "(", "'USE_XYZ'", ",", "True", ")", ",", "\n", ")", "\n", ")", "\n", "skip_channel_list", ".", "append", "(", "channel_out", ")", "\n", "channel_in", "=", "channel_out", "\n", "\n", "", "self", ".", "FP_modules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "for", "k", "in", "range", "(", "self", ".", "model_cfg", ".", "FP_MLPS", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "pre_channel", "=", "self", ".", "model_cfg", ".", "FP_MLPS", "[", "k", "+", "1", "]", "[", "-", "1", "]", "if", "k", "+", "1", "<", "len", "(", "self", ".", "model_cfg", ".", "FP_MLPS", ")", "else", "channel_out", "\n", "self", ".", "FP_modules", ".", "append", "(", "\n", "pointnet2_modules", ".", "PointnetFPModule", "(", "\n", "mlp", "=", "[", "pre_channel", "+", "skip_channel_list", "[", "k", "]", "]", "+", "self", ".", "model_cfg", ".", "FP_MLPS", "[", "k", "]", "\n", ")", "\n", ")", "\n", "\n", "", "self", ".", "num_point_features", "=", "self", ".", "model_cfg", ".", "FP_MLPS", "[", "0", "]", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.pointnet2_backbone.PointNet2MSG.break_up_pc": [[50, 55], ["pc[].contiguous", "pc[].contiguous", "pc.size"], "methods", ["None"], ["", "def", "break_up_pc", "(", "self", ",", "pc", ")", ":", "\n", "        ", "batch_idx", "=", "pc", "[", ":", ",", "0", "]", "\n", "xyz", "=", "pc", "[", ":", ",", "1", ":", "4", "]", ".", "contiguous", "(", ")", "\n", "features", "=", "(", "pc", "[", ":", ",", "4", ":", "]", ".", "contiguous", "(", ")", "if", "pc", ".", "size", "(", "-", "1", ")", ">", "4", "else", "None", ")", "\n", "return", "batch_idx", ",", "xyz", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.pointnet2_backbone.PointNet2MSG.forward": [[56, 95], ["pointnet2_backbone.PointNet2MSG.break_up_pc", "xyz.view.view.new_zeros().int", "range", "xyz.view.view.view", "range", "range", "l_features[].permute().contiguous", "l_features[].permute().contiguous.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "xyz.view.new_zeros().int.min", "xyz.view.new_zeros().int.max", "features.view().permute", "len", "l_xyz.append", "l_features.append", "xyz.view.view.new_zeros", "l_features[].permute", "batch_idx[].float", "l_xyz[].view", "features.view", "len"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.pointnet2_backbone.PointNet2Backbone.break_up_pc"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size: int\n                vfe_features: (num_voxels, C)\n                points: (num_points, 4 + C), [batch_idx, x, y, z, ...]\n        Returns:\n            batch_dict:\n                encoded_spconv_tensor: sparse tensor\n                point_features: (N, C)\n        \"\"\"", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "points", "=", "batch_dict", "[", "'points'", "]", "\n", "batch_idx", ",", "xyz", ",", "features", "=", "self", ".", "break_up_pc", "(", "points", ")", "\n", "\n", "xyz_batch_cnt", "=", "xyz", ".", "new_zeros", "(", "batch_size", ")", ".", "int", "(", ")", "\n", "for", "bs_idx", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "xyz_batch_cnt", "[", "bs_idx", "]", "=", "(", "batch_idx", "==", "bs_idx", ")", ".", "sum", "(", ")", "\n", "\n", "", "assert", "xyz_batch_cnt", ".", "min", "(", ")", "==", "xyz_batch_cnt", ".", "max", "(", ")", "\n", "xyz", "=", "xyz", ".", "view", "(", "batch_size", ",", "-", "1", ",", "3", ")", "\n", "features", "=", "features", ".", "view", "(", "batch_size", ",", "-", "1", ",", "features", ".", "shape", "[", "-", "1", "]", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "if", "features", "is", "not", "None", "else", "None", "\n", "\n", "l_xyz", ",", "l_features", "=", "[", "xyz", "]", ",", "[", "features", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "SA_modules", ")", ")", ":", "\n", "            ", "li_xyz", ",", "li_features", "=", "self", ".", "SA_modules", "[", "i", "]", "(", "l_xyz", "[", "i", "]", ",", "l_features", "[", "i", "]", ")", "\n", "l_xyz", ".", "append", "(", "li_xyz", ")", "\n", "l_features", ".", "append", "(", "li_features", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "-", "1", ",", "-", "(", "len", "(", "self", ".", "FP_modules", ")", "+", "1", ")", ",", "-", "1", ")", ":", "\n", "            ", "l_features", "[", "i", "-", "1", "]", "=", "self", ".", "FP_modules", "[", "i", "]", "(", "\n", "l_xyz", "[", "i", "-", "1", "]", ",", "l_xyz", "[", "i", "]", ",", "l_features", "[", "i", "-", "1", "]", ",", "l_features", "[", "i", "]", "\n", ")", "# (B, C, N)", "\n", "\n", "", "point_features", "=", "l_features", "[", "0", "]", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "# (B, N, C)", "\n", "batch_dict", "[", "'point_features'", "]", "=", "point_features", ".", "view", "(", "-", "1", ",", "point_features", ".", "shape", "[", "-", "1", "]", ")", "\n", "batch_dict", "[", "'point_coords'", "]", "=", "torch", ".", "cat", "(", "(", "batch_idx", "[", ":", ",", "None", "]", ".", "float", "(", ")", ",", "l_xyz", "[", "0", "]", ".", "view", "(", "-", "1", ",", "3", ")", ")", ",", "dim", "=", "1", ")", "\n", "return", "batch_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.pointnet2_backbone.PointNet2Backbone.__init__": [[101, 141], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "range", "pointnet2_backbone.PointNet2Backbone.model_cfg.SA_CONFIG.NPOINTS.__len__", "pointnet2_backbone.PointNet2Backbone.num_points_each_layer.append", "pointnet2_backbone.PointNet2Backbone.model_cfg.SA_CONFIG.MLPS[].copy", "range", "pointnet2_backbone.PointNet2Backbone.SA_modules.append", "skip_channel_list.append", "pointnet2_backbone.PointNet2Backbone.model_cfg.FP_MLPS.__len__", "pointnet2_backbone.PointNet2Backbone.FP_modules.append", "pointnet2_backbone.PointNet2Backbone.__len__", "ops.pointnet2.pointnet2_stack.pointnet2_modules.StackSAModuleMSG", "ops.pointnet2.pointnet2_stack.pointnet2_modules.StackPointnetFPModule", "len", "pointnet2_backbone.PointNet2Backbone.model_cfg.SA_CONFIG.get"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["def", "__init__", "(", "self", ",", "model_cfg", ",", "input_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "assert", "False", ",", "'DO NOT USE THIS CURRENTLY SINCE IT MAY HAVE POTENTIAL BUGS, 20200723'", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "\n", "self", ".", "SA_modules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "channel_in", "=", "input_channels", "-", "3", "\n", "\n", "self", ".", "num_points_each_layer", "=", "[", "]", "\n", "skip_channel_list", "=", "[", "input_channels", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NPOINTS", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "self", ".", "num_points_each_layer", ".", "append", "(", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NPOINTS", "[", "k", "]", ")", "\n", "mlps", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "MLPS", "[", "k", "]", ".", "copy", "(", ")", "\n", "channel_out", "=", "0", "\n", "for", "idx", "in", "range", "(", "mlps", ".", "__len__", "(", ")", ")", ":", "\n", "                ", "mlps", "[", "idx", "]", "=", "[", "channel_in", "]", "+", "mlps", "[", "idx", "]", "\n", "channel_out", "+=", "mlps", "[", "idx", "]", "[", "-", "1", "]", "\n", "\n", "", "self", ".", "SA_modules", ".", "append", "(", "\n", "pointnet2_modules_stack", ".", "StackSAModuleMSG", "(", "\n", "radii", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "RADIUS", "[", "k", "]", ",", "\n", "nsamples", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NSAMPLE", "[", "k", "]", ",", "\n", "mlps", "=", "mlps", ",", "\n", "use_xyz", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "get", "(", "'USE_XYZ'", ",", "True", ")", ",", "\n", ")", "\n", ")", "\n", "skip_channel_list", ".", "append", "(", "channel_out", ")", "\n", "channel_in", "=", "channel_out", "\n", "\n", "", "self", ".", "FP_modules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "for", "k", "in", "range", "(", "self", ".", "model_cfg", ".", "FP_MLPS", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "pre_channel", "=", "self", ".", "model_cfg", ".", "FP_MLPS", "[", "k", "+", "1", "]", "[", "-", "1", "]", "if", "k", "+", "1", "<", "len", "(", "self", ".", "model_cfg", ".", "FP_MLPS", ")", "else", "channel_out", "\n", "self", ".", "FP_modules", ".", "append", "(", "\n", "pointnet2_modules_stack", ".", "StackPointnetFPModule", "(", "\n", "mlp", "=", "[", "pre_channel", "+", "skip_channel_list", "[", "k", "]", "]", "+", "self", ".", "model_cfg", ".", "FP_MLPS", "[", "k", "]", "\n", ")", "\n", ")", "\n", "\n", "", "self", ".", "num_point_features", "=", "self", ".", "model_cfg", ".", "FP_MLPS", "[", "0", "]", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.pointnet2_backbone.PointNet2Backbone.break_up_pc": [[142, 147], ["pc[].contiguous", "pc[].contiguous", "pc.size"], "methods", ["None"], ["", "def", "break_up_pc", "(", "self", ",", "pc", ")", ":", "\n", "        ", "batch_idx", "=", "pc", "[", ":", ",", "0", "]", "\n", "xyz", "=", "pc", "[", ":", ",", "1", ":", "4", "]", ".", "contiguous", "(", ")", "\n", "features", "=", "(", "pc", "[", ":", ",", "4", ":", "]", ".", "contiguous", "(", ")", "if", "pc", ".", "size", "(", "-", "1", ")", ">", "4", "else", "None", ")", "\n", "return", "batch_idx", ",", "xyz", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.pointnet2_backbone.PointNet2Backbone.forward": [[148, 207], ["pointnet2_backbone.PointNet2Backbone.break_up_pc", "xyz.new_zeros().int", "range", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "xyz.new_zeros().int().fill_", "l_xyz.append", "l_features.append", "l_batch_cnt.append", "xyz.new_zeros", "new_xyz_list.append", "batch_idx[].float", "len", "ops.pointnet2.pointnet2_stack.pointnet2_utils.furthest_point_sample().long", "xyz.new_zeros().int", "len", "ops.pointnet2.pointnet2_stack.pointnet2_utils.furthest_point_sample", "xyz.new_zeros", "cur_xyz[].contiguous"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.pointnet2_backbone.PointNet2Backbone.break_up_pc"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size: int\n                vfe_features: (num_voxels, C)\n                points: (num_points, 4 + C), [batch_idx, x, y, z, ...]\n        Returns:\n            batch_dict:\n                encoded_spconv_tensor: sparse tensor\n                point_features: (N, C)\n        \"\"\"", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "points", "=", "batch_dict", "[", "'points'", "]", "\n", "batch_idx", ",", "xyz", ",", "features", "=", "self", ".", "break_up_pc", "(", "points", ")", "\n", "\n", "xyz_batch_cnt", "=", "xyz", ".", "new_zeros", "(", "batch_size", ")", ".", "int", "(", ")", "\n", "for", "bs_idx", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "xyz_batch_cnt", "[", "bs_idx", "]", "=", "(", "batch_idx", "==", "bs_idx", ")", ".", "sum", "(", ")", "\n", "\n", "", "l_xyz", ",", "l_features", ",", "l_batch_cnt", "=", "[", "xyz", "]", ",", "[", "features", "]", ",", "[", "xyz_batch_cnt", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "SA_modules", ")", ")", ":", "\n", "            ", "new_xyz_list", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "if", "len", "(", "l_xyz", ")", "==", "1", ":", "\n", "                    ", "cur_xyz", "=", "l_xyz", "[", "0", "]", "[", "batch_idx", "==", "k", "]", "\n", "", "else", ":", "\n", "                    ", "last_num_points", "=", "self", ".", "num_points_each_layer", "[", "i", "-", "1", "]", "\n", "cur_xyz", "=", "l_xyz", "[", "-", "1", "]", "[", "k", "*", "last_num_points", ":", "(", "k", "+", "1", ")", "*", "last_num_points", "]", "\n", "", "cur_pt_idxs", "=", "pointnet2_utils_stack", ".", "furthest_point_sample", "(", "\n", "cur_xyz", "[", "None", ",", ":", ",", ":", "]", ".", "contiguous", "(", ")", ",", "self", ".", "num_points_each_layer", "[", "i", "]", "\n", ")", ".", "long", "(", ")", "[", "0", "]", "\n", "if", "cur_xyz", ".", "shape", "[", "0", "]", "<", "self", ".", "num_points_each_layer", "[", "i", "]", ":", "\n", "                    ", "empty_num", "=", "self", ".", "num_points_each_layer", "[", "i", "]", "-", "cur_xyz", ".", "shape", "[", "1", "]", "\n", "cur_pt_idxs", "[", "0", ",", "-", "empty_num", ":", "]", "=", "cur_pt_idxs", "[", "0", ",", ":", "empty_num", "]", "\n", "", "new_xyz_list", ".", "append", "(", "cur_xyz", "[", "cur_pt_idxs", "]", ")", "\n", "", "new_xyz", "=", "torch", ".", "cat", "(", "new_xyz_list", ",", "dim", "=", "0", ")", "\n", "\n", "new_xyz_batch_cnt", "=", "xyz", ".", "new_zeros", "(", "batch_size", ")", ".", "int", "(", ")", ".", "fill_", "(", "self", ".", "num_points_each_layer", "[", "i", "]", ")", "\n", "li_xyz", ",", "li_features", "=", "self", ".", "SA_modules", "[", "i", "]", "(", "\n", "xyz", "=", "l_xyz", "[", "i", "]", ",", "features", "=", "l_features", "[", "i", "]", ",", "xyz_batch_cnt", "=", "l_batch_cnt", "[", "i", "]", ",", "\n", "new_xyz", "=", "new_xyz", ",", "new_xyz_batch_cnt", "=", "new_xyz_batch_cnt", "\n", ")", "\n", "\n", "l_xyz", ".", "append", "(", "li_xyz", ")", "\n", "l_features", ".", "append", "(", "li_features", ")", "\n", "l_batch_cnt", ".", "append", "(", "new_xyz_batch_cnt", ")", "\n", "\n", "", "l_features", "[", "0", "]", "=", "points", "[", ":", ",", "1", ":", "]", "\n", "for", "i", "in", "range", "(", "-", "1", ",", "-", "(", "len", "(", "self", ".", "FP_modules", ")", "+", "1", ")", ",", "-", "1", ")", ":", "\n", "            ", "l_features", "[", "i", "-", "1", "]", "=", "self", ".", "FP_modules", "[", "i", "]", "(", "\n", "unknown", "=", "l_xyz", "[", "i", "-", "1", "]", ",", "unknown_batch_cnt", "=", "l_batch_cnt", "[", "i", "-", "1", "]", ",", "\n", "known", "=", "l_xyz", "[", "i", "]", ",", "known_batch_cnt", "=", "l_batch_cnt", "[", "i", "]", ",", "\n", "unknown_feats", "=", "l_features", "[", "i", "-", "1", "]", ",", "known_feats", "=", "l_features", "[", "i", "]", "\n", ")", "\n", "\n", "", "batch_dict", "[", "'point_features'", "]", "=", "l_features", "[", "0", "]", "\n", "batch_dict", "[", "'point_coords'", "]", "=", "torch", ".", "cat", "(", "(", "batch_idx", "[", ":", ",", "None", "]", ".", "float", "(", ")", ",", "l_xyz", "[", "0", "]", ")", ",", "dim", "=", "1", ")", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_backbone.SparseBasicBlock.__init__": [[32, 48], ["spconv.SparseModule.__init__", "spconv.SubMConv3d", "norm_fn", "torch.ReLU", "spconv.SubMConv3d", "norm_fn"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "norm_fn", "=", "None", ",", "downsample", "=", "None", ",", "indice_key", "=", "None", ")", ":", "\n", "        ", "super", "(", "SparseBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "norm_fn", "is", "not", "None", "\n", "bias", "=", "norm_fn", "is", "not", "None", "\n", "self", ".", "conv1", "=", "spconv", ".", "SubMConv3d", "(", "\n", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "bias", ",", "indice_key", "=", "indice_key", "\n", ")", "\n", "self", ".", "bn1", "=", "norm_fn", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "conv2", "=", "spconv", ".", "SubMConv3d", "(", "\n", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "bias", ",", "indice_key", "=", "indice_key", "\n", ")", "\n", "self", ".", "bn2", "=", "norm_fn", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_backbone.SparseBasicBlock.forward": [[49, 66], ["spconv_backbone.SparseBasicBlock.conv1", "spconv_backbone.SparseBasicBlock.bn1", "spconv_backbone.SparseBasicBlock.relu", "spconv_backbone.SparseBasicBlock.conv2", "spconv_backbone.SparseBasicBlock.bn2", "spconv_backbone.SparseBasicBlock.relu", "spconv_backbone.SparseBasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", ".", "features", "=", "self", ".", "bn1", "(", "out", ".", "features", ")", "\n", "out", ".", "features", "=", "self", ".", "relu", "(", "out", ".", "features", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", ".", "features", "=", "self", ".", "bn2", "(", "out", ".", "features", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", ".", "features", "+=", "identity", ".", "features", "\n", "out", ".", "features", "=", "self", ".", "relu", "(", "out", ".", "features", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_backbone.VoxelBackBone8x.__init__": [[69, 118], ["torch.Module.__init__", "functools.partial", "spconv.SparseSequential", "spconv.SparseSequential", "spconv.SparseSequential", "spconv.SparseSequential", "spconv.SparseSequential", "spconv_backbone.VoxelBackBone8x.model_cfg.get", "spconv.SparseSequential", "spconv.SubMConv3d", "functools.partial.", "torch.ReLU", "block", "block", "block", "block", "block", "block", "block", "block", "block", "block", "spconv.SparseConv3d", "functools.partial.", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "input_channels", ",", "grid_size", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "norm_fn", "=", "partial", "(", "nn", ".", "BatchNorm1d", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", "\n", "\n", "self", ".", "sparse_shape", "=", "grid_size", "[", ":", ":", "-", "1", "]", "+", "[", "1", ",", "0", ",", "0", "]", "\n", "\n", "self", ".", "conv_input", "=", "spconv", ".", "SparseSequential", "(", "\n", "spconv", ".", "SubMConv3d", "(", "input_channels", ",", "16", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "indice_key", "=", "'subm1'", ")", ",", "\n", "norm_fn", "(", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "block", "=", "post_act_block", "\n", "\n", "self", ".", "conv1", "=", "spconv", ".", "SparseSequential", "(", "\n", "block", "(", "16", ",", "16", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm1'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "conv2", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [1600, 1408, 41] <- [800, 704, 21]", "\n", "block", "(", "16", ",", "32", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "indice_key", "=", "'spconv2'", ",", "conv_type", "=", "'spconv'", ")", ",", "\n", "block", "(", "32", ",", "32", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm2'", ")", ",", "\n", "block", "(", "32", ",", "32", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm2'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "conv3", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [800, 704, 21] <- [400, 352, 11]", "\n", "block", "(", "32", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "indice_key", "=", "'spconv3'", ",", "conv_type", "=", "'spconv'", ")", ",", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm3'", ")", ",", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm3'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "conv4", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [400, 352, 11] <- [200, 176, 5]", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "stride", "=", "2", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "indice_key", "=", "'spconv4'", ",", "conv_type", "=", "'spconv'", ")", ",", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm4'", ")", ",", "\n", "block", "(", "64", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "padding", "=", "1", ",", "indice_key", "=", "'subm4'", ")", ",", "\n", ")", "\n", "\n", "last_pad", "=", "0", "\n", "last_pad", "=", "self", ".", "model_cfg", ".", "get", "(", "'last_pad'", ",", "last_pad", ")", "\n", "self", ".", "conv_out", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [200, 150, 5] -> [200, 150, 2]", "\n", "spconv", ".", "SparseConv3d", "(", "64", ",", "128", ",", "(", "3", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "padding", "=", "last_pad", ",", "\n", "bias", "=", "False", ",", "indice_key", "=", "'spconv_down2'", ")", ",", "\n", "norm_fn", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "num_point_features", "=", "128", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_backbone.VoxelBackBone8x.forward": [[119, 164], ["spconv.SparseConvTensor", "spconv_backbone.VoxelBackBone8x.conv_input", "spconv_backbone.VoxelBackBone8x.conv1", "spconv_backbone.VoxelBackBone8x.conv2", "spconv_backbone.VoxelBackBone8x.conv3", "spconv_backbone.VoxelBackBone8x.conv4", "spconv_backbone.VoxelBackBone8x.conv_out", "batch_dict.update", "batch_dict.update", "voxel_coords.int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size: int\n                vfe_features: (num_voxels, C)\n                voxel_coords: (num_voxels, 4), [batch_idx, z_idx, y_idx, x_idx]\n        Returns:\n            batch_dict:\n                encoded_spconv_tensor: sparse tensor\n        \"\"\"", "\n", "voxel_features", ",", "voxel_coords", "=", "batch_dict", "[", "'voxel_features'", "]", ",", "batch_dict", "[", "'voxel_coords'", "]", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "input_sp_tensor", "=", "spconv", ".", "SparseConvTensor", "(", "\n", "features", "=", "voxel_features", ",", "\n", "indices", "=", "voxel_coords", ".", "int", "(", ")", ",", "\n", "spatial_shape", "=", "self", ".", "sparse_shape", ",", "\n", "batch_size", "=", "batch_size", "\n", ")", "\n", "\n", "x", "=", "self", ".", "conv_input", "(", "input_sp_tensor", ")", "\n", "\n", "x_conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x_conv2", "=", "self", ".", "conv2", "(", "x_conv1", ")", "\n", "x_conv3", "=", "self", ".", "conv3", "(", "x_conv2", ")", "\n", "x_conv4", "=", "self", ".", "conv4", "(", "x_conv3", ")", "\n", "\n", "# for detection head", "\n", "# [200, 176, 5] -> [200, 176, 2]", "\n", "out", "=", "self", ".", "conv_out", "(", "x_conv4", ")", "\n", "\n", "batch_dict", ".", "update", "(", "{", "\n", "'encoded_spconv_tensor'", ":", "out", ",", "\n", "'encoded_spconv_tensor_stride'", ":", "8", "\n", "}", ")", "\n", "batch_dict", ".", "update", "(", "{", "\n", "'multi_scale_3d_features'", ":", "{", "\n", "'x_conv1'", ":", "x_conv1", ",", "\n", "'x_conv2'", ":", "x_conv2", ",", "\n", "'x_conv3'", ":", "x_conv3", ",", "\n", "'x_conv4'", ":", "x_conv4", ",", "\n", "}", "\n", "}", ")", "\n", "\n", "return", "batch_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_backbone.VoxelResBackBone8x.__init__": [[167, 217], ["torch.Module.__init__", "functools.partial", "spconv.SparseSequential", "spconv.SparseSequential", "spconv.SparseSequential", "spconv.SparseSequential", "spconv.SparseSequential", "spconv_backbone.VoxelResBackBone8x.model_cfg.get", "spconv.SparseSequential", "spconv.SubMConv3d", "functools.partial.", "torch.ReLU", "spconv_backbone.SparseBasicBlock", "spconv_backbone.SparseBasicBlock", "block", "spconv_backbone.SparseBasicBlock", "spconv_backbone.SparseBasicBlock", "block", "spconv_backbone.SparseBasicBlock", "spconv_backbone.SparseBasicBlock", "block", "spconv_backbone.SparseBasicBlock", "spconv_backbone.SparseBasicBlock", "spconv.SparseConv3d", "functools.partial.", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "input_channels", ",", "grid_size", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "norm_fn", "=", "partial", "(", "nn", ".", "BatchNorm1d", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", "\n", "\n", "self", ".", "sparse_shape", "=", "grid_size", "[", ":", ":", "-", "1", "]", "+", "[", "1", ",", "0", ",", "0", "]", "\n", "\n", "self", ".", "conv_input", "=", "spconv", ".", "SparseSequential", "(", "\n", "spconv", ".", "SubMConv3d", "(", "input_channels", ",", "16", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "indice_key", "=", "'subm1'", ")", ",", "\n", "norm_fn", "(", "16", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "block", "=", "post_act_block", "\n", "\n", "self", ".", "conv1", "=", "spconv", ".", "SparseSequential", "(", "\n", "SparseBasicBlock", "(", "16", ",", "16", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'res1'", ")", ",", "\n", "SparseBasicBlock", "(", "16", ",", "16", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'res1'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "conv2", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [1600, 1408, 41] <- [800, 704, 21]", "\n", "block", "(", "16", ",", "32", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "indice_key", "=", "'spconv2'", ",", "conv_type", "=", "'spconv'", ")", ",", "\n", "SparseBasicBlock", "(", "32", ",", "32", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'res2'", ")", ",", "\n", "SparseBasicBlock", "(", "32", ",", "32", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'res2'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "conv3", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [800, 704, 21] <- [400, 352, 11]", "\n", "block", "(", "32", ",", "64", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "indice_key", "=", "'spconv3'", ",", "conv_type", "=", "'spconv'", ")", ",", "\n", "SparseBasicBlock", "(", "64", ",", "64", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'res3'", ")", ",", "\n", "SparseBasicBlock", "(", "64", ",", "64", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'res3'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "conv4", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [400, 352, 11] <- [200, 176, 5]", "\n", "block", "(", "64", ",", "128", ",", "3", ",", "norm_fn", "=", "norm_fn", ",", "stride", "=", "2", ",", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "indice_key", "=", "'spconv4'", ",", "conv_type", "=", "'spconv'", ")", ",", "\n", "SparseBasicBlock", "(", "128", ",", "128", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'res4'", ")", ",", "\n", "SparseBasicBlock", "(", "128", ",", "128", ",", "norm_fn", "=", "norm_fn", ",", "indice_key", "=", "'res4'", ")", ",", "\n", ")", "\n", "\n", "last_pad", "=", "0", "\n", "last_pad", "=", "self", ".", "model_cfg", ".", "get", "(", "'last_pad'", ",", "last_pad", ")", "\n", "self", ".", "conv_out", "=", "spconv", ".", "SparseSequential", "(", "\n", "# [200, 150, 5] -> [200, 150, 2]", "\n", "spconv", ".", "SparseConv3d", "(", "128", ",", "128", ",", "(", "3", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "padding", "=", "last_pad", ",", "\n", "bias", "=", "False", ",", "indice_key", "=", "'spconv_down2'", ")", ",", "\n", "norm_fn", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "num_point_features", "=", "128", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_backbone.VoxelResBackBone8x.forward": [[218, 262], ["spconv.SparseConvTensor", "spconv_backbone.VoxelResBackBone8x.conv_input", "spconv_backbone.VoxelResBackBone8x.conv1", "spconv_backbone.VoxelResBackBone8x.conv2", "spconv_backbone.VoxelResBackBone8x.conv3", "spconv_backbone.VoxelResBackBone8x.conv4", "spconv_backbone.VoxelResBackBone8x.conv_out", "batch_dict.update", "batch_dict.update", "voxel_coords.int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size: int\n                vfe_features: (num_voxels, C)\n                voxel_coords: (num_voxels, 4), [batch_idx, z_idx, y_idx, x_idx]\n        Returns:\n            batch_dict:\n                encoded_spconv_tensor: sparse tensor\n        \"\"\"", "\n", "voxel_features", ",", "voxel_coords", "=", "batch_dict", "[", "'voxel_features'", "]", ",", "batch_dict", "[", "'voxel_coords'", "]", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "input_sp_tensor", "=", "spconv", ".", "SparseConvTensor", "(", "\n", "features", "=", "voxel_features", ",", "\n", "indices", "=", "voxel_coords", ".", "int", "(", ")", ",", "\n", "spatial_shape", "=", "self", ".", "sparse_shape", ",", "\n", "batch_size", "=", "batch_size", "\n", ")", "\n", "x", "=", "self", ".", "conv_input", "(", "input_sp_tensor", ")", "\n", "\n", "x_conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x_conv2", "=", "self", ".", "conv2", "(", "x_conv1", ")", "\n", "x_conv3", "=", "self", ".", "conv3", "(", "x_conv2", ")", "\n", "x_conv4", "=", "self", ".", "conv4", "(", "x_conv3", ")", "\n", "\n", "# for detection head", "\n", "# [200, 176, 5] -> [200, 176, 2]", "\n", "out", "=", "self", ".", "conv_out", "(", "x_conv4", ")", "\n", "\n", "batch_dict", ".", "update", "(", "{", "\n", "'encoded_spconv_tensor'", ":", "out", ",", "\n", "'encoded_spconv_tensor_stride'", ":", "8", "\n", "}", ")", "\n", "batch_dict", ".", "update", "(", "{", "\n", "'multi_scale_3d_features'", ":", "{", "\n", "'x_conv1'", ":", "x_conv1", ",", "\n", "'x_conv2'", ":", "x_conv2", ",", "\n", "'x_conv3'", ":", "x_conv3", ",", "\n", "'x_conv4'", ":", "x_conv4", ",", "\n", "}", "\n", "}", ")", "\n", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.backbones_3d.spconv_backbone.post_act_block": [[7, 27], ["spconv.SparseSequential", "spconv.SubMConv3d", "norm_fn", "torch.ReLU", "spconv.SparseConv3d", "spconv.SparseInverseConv3d"], "function", ["None"], ["def", "post_act_block", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "indice_key", "=", "None", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "\n", "conv_type", "=", "'subm'", ",", "norm_fn", "=", "None", ")", ":", "\n", "\n", "    ", "if", "conv_type", "==", "'subm'", ":", "\n", "        ", "conv", "=", "spconv", ".", "SubMConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", ")", "\n", "", "elif", "conv_type", "==", "'spconv'", ":", "\n", "        ", "conv", "=", "spconv", ".", "SparseConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "\n", "bias", "=", "False", ",", "indice_key", "=", "indice_key", ")", "\n", "", "elif", "conv_type", "==", "'inverseconv'", ":", "\n", "        ", "conv", "=", "spconv", ".", "SparseInverseConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "indice_key", "=", "indice_key", ",", "bias", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "m", "=", "spconv", ".", "SparseSequential", "(", "\n", "conv", ",", "\n", "norm_fn", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "\n", "return", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.mean_vfe.MeanVFE.__init__": [[7, 10], ["vfe_template.VFETemplate.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_point_features", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ")", "\n", "self", ".", "num_point_features", "=", "num_point_features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.mean_vfe.MeanVFE.get_output_feature_dim": [[11, 13], ["None"], "methods", ["None"], ["", "def", "get_output_feature_dim", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_point_features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.mean_vfe.MeanVFE.forward": [[14, 32], ["voxel_features[].sum", "torch.clamp_min().type_as", "voxel_features[].sum.contiguous", "torch.clamp_min", "voxel_num_points.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "batch_dict", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                voxels: (num_voxels, max_points_per_voxel, C)\n                voxel_num_points: optional (num_voxels)\n            **kwargs:\n\n        Returns:\n            vfe_features: (num_voxels, C)\n        \"\"\"", "\n", "voxel_features", ",", "voxel_num_points", "=", "batch_dict", "[", "'voxels'", "]", ",", "batch_dict", "[", "'voxel_num_points'", "]", "\n", "points_mean", "=", "voxel_features", "[", ":", ",", ":", ",", ":", "]", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "\n", "normalizer", "=", "torch", ".", "clamp_min", "(", "voxel_num_points", ".", "view", "(", "-", "1", ",", "1", ")", ",", "min", "=", "1.0", ")", ".", "type_as", "(", "voxel_features", ")", "\n", "points_mean", "=", "points_mean", "/", "normalizer", "\n", "batch_dict", "[", "'voxel_features'", "]", "=", "points_mean", ".", "contiguous", "(", ")", "\n", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.pillar_vfe.PFNLayer.__init__": [[9, 28], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "use_norm", "=", "True", ",", "\n", "last_layer", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "last_vfe", "=", "last_layer", "\n", "self", ".", "use_norm", "=", "use_norm", "\n", "if", "not", "self", ".", "last_vfe", ":", "\n", "            ", "out_channels", "=", "out_channels", "//", "2", "\n", "\n", "", "if", "self", ".", "use_norm", ":", "\n", "            ", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "in_channels", ",", "out_channels", ",", "bias", "=", "False", ")", "\n", "self", ".", "norm", "=", "nn", ".", "BatchNorm1d", "(", "out_channels", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "in_channels", ",", "out_channels", ",", "bias", "=", "True", ")", "\n", "\n", "", "self", ".", "part", "=", "50000", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.pillar_vfe.PFNLayer.forward": [[29, 50], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pillar_vfe.PFNLayer.linear", "pillar_vfe.PFNLayer.norm().permute", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "x_max.repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pillar_vfe.PFNLayer.linear", "range", "pillar_vfe.PFNLayer.norm", "pillar_vfe.PFNLayer.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "inputs", ".", "shape", "[", "0", "]", ">", "self", ".", "part", ":", "\n", "# nn.Linear performs randomly when batch size is too large", "\n", "            ", "num_parts", "=", "inputs", ".", "shape", "[", "0", "]", "//", "self", ".", "part", "\n", "part_linear_out", "=", "[", "self", ".", "linear", "(", "inputs", "[", "num_part", "*", "self", ".", "part", ":", "(", "num_part", "+", "1", ")", "*", "self", ".", "part", "]", ")", "\n", "for", "num_part", "in", "range", "(", "num_parts", "+", "1", ")", "]", "\n", "x", "=", "torch", ".", "cat", "(", "part_linear_out", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "linear", "(", "inputs", ")", "\n", "", "torch", ".", "backends", ".", "cudnn", ".", "enabled", "=", "False", "\n", "x", "=", "self", ".", "norm", "(", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "if", "self", ".", "use_norm", "else", "x", "\n", "torch", ".", "backends", ".", "cudnn", ".", "enabled", "=", "True", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x_max", "=", "torch", ".", "max", "(", "x", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "\n", "if", "self", ".", "last_vfe", ":", "\n", "            ", "return", "x_max", "\n", "", "else", ":", "\n", "            ", "x_repeat", "=", "x_max", ".", "repeat", "(", "1", ",", "inputs", ".", "shape", "[", "1", "]", ",", "1", ")", "\n", "x_concatenated", "=", "torch", ".", "cat", "(", "[", "x", ",", "x_repeat", "]", ",", "dim", "=", "2", ")", "\n", "return", "x_concatenated", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.pillar_vfe.PillarVFE.__init__": [[53, 82], ["vfe_template.VFETemplate.__init__", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "len", "list", "pfn_layers.append", "len", "pillar_vfe.PFNLayer", "len"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_point_features", ",", "voxel_size", ",", "point_cloud_range", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ")", "\n", "\n", "self", ".", "use_norm", "=", "self", ".", "model_cfg", ".", "USE_NORM", "\n", "self", ".", "with_distance", "=", "self", ".", "model_cfg", ".", "WITH_DISTANCE", "\n", "self", ".", "use_absolute_xyz", "=", "self", ".", "model_cfg", ".", "USE_ABSLOTE_XYZ", "\n", "num_point_features", "+=", "6", "if", "self", ".", "use_absolute_xyz", "else", "3", "\n", "if", "self", ".", "with_distance", ":", "\n", "            ", "num_point_features", "+=", "1", "\n", "\n", "", "self", ".", "num_filters", "=", "self", ".", "model_cfg", ".", "NUM_FILTERS", "\n", "assert", "len", "(", "self", ".", "num_filters", ")", ">", "0", "\n", "num_filters", "=", "[", "num_point_features", "]", "+", "list", "(", "self", ".", "num_filters", ")", "\n", "\n", "pfn_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "num_filters", ")", "-", "1", ")", ":", "\n", "            ", "in_filters", "=", "num_filters", "[", "i", "]", "\n", "out_filters", "=", "num_filters", "[", "i", "+", "1", "]", "\n", "pfn_layers", ".", "append", "(", "\n", "PFNLayer", "(", "in_filters", ",", "out_filters", ",", "self", ".", "use_norm", ",", "last_layer", "=", "(", "i", ">=", "len", "(", "num_filters", ")", "-", "2", ")", ")", "\n", ")", "\n", "", "self", ".", "pfn_layers", "=", "nn", ".", "ModuleList", "(", "pfn_layers", ")", "\n", "\n", "self", ".", "voxel_x", "=", "voxel_size", "[", "0", "]", "\n", "self", ".", "voxel_y", "=", "voxel_size", "[", "1", "]", "\n", "self", ".", "voxel_z", "=", "voxel_size", "[", "2", "]", "\n", "self", ".", "x_offset", "=", "self", ".", "voxel_x", "/", "2", "+", "point_cloud_range", "[", "0", "]", "\n", "self", ".", "y_offset", "=", "self", ".", "voxel_y", "/", "2", "+", "point_cloud_range", "[", "1", "]", "\n", "self", ".", "z_offset", "=", "self", ".", "voxel_z", "/", "2", "+", "point_cloud_range", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.pillar_vfe.PillarVFE.get_output_feature_dim": [[83, 85], ["None"], "methods", ["None"], ["", "def", "get_output_feature_dim", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_filters", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.pillar_vfe.PillarVFE.get_paddings_indicator": [[86, 93], ["torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "len", "torch.unsqueeze.int", "torch.unsqueeze.int", "torch.unsqueeze.int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "def", "get_paddings_indicator", "(", "self", ",", "actual_num", ",", "max_num", ",", "axis", "=", "0", ")", ":", "\n", "        ", "actual_num", "=", "torch", ".", "unsqueeze", "(", "actual_num", ",", "axis", "+", "1", ")", "\n", "max_num_shape", "=", "[", "1", "]", "*", "len", "(", "actual_num", ".", "shape", ")", "\n", "max_num_shape", "[", "axis", "+", "1", "]", "=", "-", "1", "\n", "max_num", "=", "torch", ".", "arange", "(", "max_num", ",", "dtype", "=", "torch", ".", "int", ",", "device", "=", "actual_num", ".", "device", ")", ".", "view", "(", "max_num_shape", ")", "\n", "paddings_indicator", "=", "actual_num", ".", "int", "(", ")", ">", "max_num", "\n", "return", "paddings_indicator", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.pillar_vfe.PillarVFE.forward": [[94, 124], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pillar_vfe.PillarVFE.get_paddings_indicator", "torch.unsqueeze().type_as", "torch.unsqueeze().type_as", "torch.unsqueeze().type_as", "torch.unsqueeze().type_as", "torch.unsqueeze().type_as", "torch.unsqueeze().type_as", "torch.unsqueeze().type_as", "torch.unsqueeze().type_as", "torch.unsqueeze().type_as", "pfn.squeeze", "voxel_features[].sum", "voxel_num_points.type_as().view", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "pfn.append", "pfn", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "voxel_num_points.type_as", "coords[].to().unsqueeze", "coords[].to().unsqueeze", "coords[].to().unsqueeze", "coords[].to", "coords[].to", "coords[].to"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.pillar_vfe.PillarVFE.get_paddings_indicator"], ["", "def", "forward", "(", "self", ",", "batch_dict", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "voxel_features", ",", "voxel_num_points", ",", "coords", "=", "batch_dict", "[", "'voxels'", "]", ",", "batch_dict", "[", "'voxel_num_points'", "]", ",", "batch_dict", "[", "'voxel_coords'", "]", "\n", "points_mean", "=", "voxel_features", "[", ":", ",", ":", ",", ":", "3", "]", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "/", "voxel_num_points", ".", "type_as", "(", "voxel_features", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "f_cluster", "=", "voxel_features", "[", ":", ",", ":", ",", ":", "3", "]", "-", "points_mean", "\n", "\n", "f_center", "=", "torch", ".", "zeros_like", "(", "voxel_features", "[", ":", ",", ":", ",", ":", "3", "]", ")", "\n", "f_center", "[", ":", ",", ":", ",", "0", "]", "=", "voxel_features", "[", ":", ",", ":", ",", "0", "]", "-", "(", "coords", "[", ":", ",", "3", "]", ".", "to", "(", "voxel_features", ".", "dtype", ")", ".", "unsqueeze", "(", "1", ")", "*", "self", ".", "voxel_x", "+", "self", ".", "x_offset", ")", "\n", "f_center", "[", ":", ",", ":", ",", "1", "]", "=", "voxel_features", "[", ":", ",", ":", ",", "1", "]", "-", "(", "coords", "[", ":", ",", "2", "]", ".", "to", "(", "voxel_features", ".", "dtype", ")", ".", "unsqueeze", "(", "1", ")", "*", "self", ".", "voxel_y", "+", "self", ".", "y_offset", ")", "\n", "f_center", "[", ":", ",", ":", ",", "2", "]", "=", "voxel_features", "[", ":", ",", ":", ",", "2", "]", "-", "(", "coords", "[", ":", ",", "1", "]", ".", "to", "(", "voxel_features", ".", "dtype", ")", ".", "unsqueeze", "(", "1", ")", "*", "self", ".", "voxel_z", "+", "self", ".", "z_offset", ")", "\n", "\n", "if", "self", ".", "use_absolute_xyz", ":", "\n", "            ", "features", "=", "[", "voxel_features", ",", "f_cluster", ",", "f_center", "]", "\n", "", "else", ":", "\n", "            ", "features", "=", "[", "voxel_features", "[", "...", ",", "3", ":", "]", ",", "f_cluster", ",", "f_center", "]", "\n", "\n", "", "if", "self", ".", "with_distance", ":", "\n", "            ", "points_dist", "=", "torch", ".", "norm", "(", "voxel_features", "[", ":", ",", ":", ",", ":", "3", "]", ",", "2", ",", "2", ",", "keepdim", "=", "True", ")", "\n", "features", ".", "append", "(", "points_dist", ")", "\n", "", "features", "=", "torch", ".", "cat", "(", "features", ",", "dim", "=", "-", "1", ")", "\n", "\n", "voxel_count", "=", "features", ".", "shape", "[", "1", "]", "\n", "mask", "=", "self", ".", "get_paddings_indicator", "(", "voxel_num_points", ",", "voxel_count", ",", "axis", "=", "0", ")", "\n", "mask", "=", "torch", ".", "unsqueeze", "(", "mask", ",", "-", "1", ")", ".", "type_as", "(", "voxel_features", ")", "\n", "features", "*=", "mask", "\n", "for", "pfn", "in", "self", ".", "pfn_layers", ":", "\n", "            ", "features", "=", "pfn", "(", "features", ")", "\n", "", "features", "=", "features", ".", "squeeze", "(", ")", "\n", "batch_dict", "[", "'pillar_features'", "]", "=", "features", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.vfe_template.VFETemplate.__init__": [[5, 8], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.vfe_template.VFETemplate.get_output_feature_dim": [[9, 11], ["None"], "methods", ["None"], ["", "def", "get_output_feature_dim", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.vfe_template.VFETemplate.forward": [[12, 23], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            **kwargs:\n\n        Returns:\n            batch_dict:\n                ...\n                vfe_features: (num_voxels, C)\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pfe.voxel_set_abstraction.VoxelSetAbstraction.__init__": [[44, 101], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "range", "ops.pointnet2.pointnet2_stack.pointnet2_modules.StackSAModuleMSG", "voxel_set_abstraction.VoxelSetAbstraction.SA_layers.append", "voxel_set_abstraction.VoxelSetAbstraction.SA_layer_names.append", "sum", "range", "ops.pointnet2.pointnet2_stack.pointnet2_modules.StackSAModuleMSG", "sum", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "len", "len"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "voxel_size", ",", "point_cloud_range", ",", "num_bev_features", "=", "None", ",", "\n", "num_rawpoint_features", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "voxel_size", "=", "voxel_size", "\n", "self", ".", "point_cloud_range", "=", "point_cloud_range", "\n", "\n", "SA_cfg", "=", "self", ".", "model_cfg", ".", "SA_LAYER", "\n", "\n", "self", ".", "SA_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "SA_layer_names", "=", "[", "]", "\n", "self", ".", "downsample_times_map", "=", "{", "}", "\n", "c_in", "=", "0", "\n", "for", "src_name", "in", "self", ".", "model_cfg", ".", "FEATURES_SOURCE", ":", "\n", "            ", "if", "src_name", "in", "[", "'bev'", ",", "'raw_points'", "]", ":", "\n", "                ", "continue", "\n", "", "self", ".", "downsample_times_map", "[", "src_name", "]", "=", "SA_cfg", "[", "src_name", "]", ".", "DOWNSAMPLE_FACTOR", "\n", "mlps", "=", "SA_cfg", "[", "src_name", "]", ".", "MLPS", "\n", "for", "k", "in", "range", "(", "len", "(", "mlps", ")", ")", ":", "\n", "                ", "mlps", "[", "k", "]", "=", "[", "mlps", "[", "k", "]", "[", "0", "]", "]", "+", "mlps", "[", "k", "]", "\n", "", "cur_layer", "=", "pointnet2_stack_modules", ".", "StackSAModuleMSG", "(", "\n", "radii", "=", "SA_cfg", "[", "src_name", "]", ".", "POOL_RADIUS", ",", "\n", "nsamples", "=", "SA_cfg", "[", "src_name", "]", ".", "NSAMPLE", ",", "\n", "mlps", "=", "mlps", ",", "\n", "use_xyz", "=", "True", ",", "\n", "pool_method", "=", "'max_pool'", ",", "\n", ")", "\n", "self", ".", "SA_layers", ".", "append", "(", "cur_layer", ")", "\n", "self", ".", "SA_layer_names", ".", "append", "(", "src_name", ")", "\n", "\n", "c_in", "+=", "sum", "(", "[", "x", "[", "-", "1", "]", "for", "x", "in", "mlps", "]", ")", "\n", "\n", "", "if", "'bev'", "in", "self", ".", "model_cfg", ".", "FEATURES_SOURCE", ":", "\n", "            ", "c_bev", "=", "num_bev_features", "\n", "c_in", "+=", "c_bev", "\n", "\n", "", "if", "'raw_points'", "in", "self", ".", "model_cfg", ".", "FEATURES_SOURCE", ":", "\n", "            ", "mlps", "=", "SA_cfg", "[", "'raw_points'", "]", ".", "MLPS", "\n", "for", "k", "in", "range", "(", "len", "(", "mlps", ")", ")", ":", "\n", "                ", "mlps", "[", "k", "]", "=", "[", "num_rawpoint_features", "-", "3", "]", "+", "mlps", "[", "k", "]", "\n", "\n", "", "self", ".", "SA_rawpoints", "=", "pointnet2_stack_modules", ".", "StackSAModuleMSG", "(", "\n", "radii", "=", "SA_cfg", "[", "'raw_points'", "]", ".", "POOL_RADIUS", ",", "\n", "nsamples", "=", "SA_cfg", "[", "'raw_points'", "]", ".", "NSAMPLE", ",", "\n", "mlps", "=", "mlps", ",", "\n", "use_xyz", "=", "True", ",", "\n", "pool_method", "=", "'max_pool'", "\n", ")", "\n", "c_in", "+=", "sum", "(", "[", "x", "[", "-", "1", "]", "for", "x", "in", "mlps", "]", ")", "\n", "\n", "", "self", ".", "vsa_point_feature_fusion", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "c_in", ",", "self", ".", "model_cfg", ".", "NUM_OUTPUT_FEATURES", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "self", ".", "model_cfg", ".", "NUM_OUTPUT_FEATURES", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "num_point_features", "=", "self", ".", "model_cfg", ".", "NUM_OUTPUT_FEATURES", "\n", "self", ".", "num_point_features_before_fusion", "=", "c_in", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pfe.voxel_set_abstraction.VoxelSetAbstraction.interpolate_from_bev_features": [[102, 118], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bev_features[].permute", "voxel_set_abstraction.bilinear_interpolate_torch", "point_bev_features_list.append", "bilinear_interpolate_torch.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pfe.voxel_set_abstraction.bilinear_interpolate_torch"], ["", "def", "interpolate_from_bev_features", "(", "self", ",", "keypoints", ",", "bev_features", ",", "batch_size", ",", "bev_stride", ")", ":", "\n", "        ", "x_idxs", "=", "(", "keypoints", "[", ":", ",", ":", ",", "0", "]", "-", "self", ".", "point_cloud_range", "[", "0", "]", ")", "/", "self", ".", "voxel_size", "[", "0", "]", "\n", "y_idxs", "=", "(", "keypoints", "[", ":", ",", ":", ",", "1", "]", "-", "self", ".", "point_cloud_range", "[", "1", "]", ")", "/", "self", ".", "voxel_size", "[", "1", "]", "\n", "x_idxs", "=", "x_idxs", "/", "bev_stride", "\n", "y_idxs", "=", "y_idxs", "/", "bev_stride", "\n", "\n", "point_bev_features_list", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "cur_x_idxs", "=", "x_idxs", "[", "k", "]", "\n", "cur_y_idxs", "=", "y_idxs", "[", "k", "]", "\n", "cur_bev_features", "=", "bev_features", "[", "k", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "# (H, W, C)", "\n", "point_bev_features", "=", "bilinear_interpolate_torch", "(", "cur_bev_features", ",", "cur_x_idxs", ",", "cur_y_idxs", ")", "\n", "point_bev_features_list", ".", "append", "(", "point_bev_features", ".", "unsqueeze", "(", "dim", "=", "0", ")", ")", "\n", "\n", "", "point_bev_features", "=", "torch", ".", "cat", "(", "point_bev_features_list", ",", "dim", "=", "0", ")", "# (B, N, C0)", "\n", "return", "point_bev_features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pfe.voxel_set_abstraction.VoxelSetAbstraction.get_sampled_points": [[119, 158], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "[].long", "src_points[].unsqueeze", "keypoints_list.append", "utils.common_utils.get_voxel_centers", "[].long", "ops.pointnet2.pointnet2_stack.pointnet2_utils.furthest_point_sample().long", "[].unsqueeze", "ops.pointnet2.pointnet2_stack.pointnet2_utils.furthest_point_sample", "sampled_points[].contiguous"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.get_voxel_centers"], ["", "def", "get_sampled_points", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "if", "self", ".", "model_cfg", ".", "POINT_SOURCE", "==", "'raw_points'", ":", "\n", "            ", "src_points", "=", "batch_dict", "[", "'points'", "]", "[", ":", ",", "1", ":", "4", "]", "\n", "batch_indices", "=", "batch_dict", "[", "'points'", "]", "[", ":", ",", "0", "]", ".", "long", "(", ")", "\n", "", "elif", "self", ".", "model_cfg", ".", "POINT_SOURCE", "==", "'voxel_centers'", ":", "\n", "            ", "src_points", "=", "common_utils", ".", "get_voxel_centers", "(", "\n", "batch_dict", "[", "'voxel_coords'", "]", "[", ":", ",", "1", ":", "4", "]", ",", "\n", "downsample_times", "=", "1", ",", "\n", "voxel_size", "=", "self", ".", "voxel_size", ",", "\n", "point_cloud_range", "=", "self", ".", "point_cloud_range", "\n", ")", "\n", "batch_indices", "=", "batch_dict", "[", "'voxel_coords'", "]", "[", ":", ",", "0", "]", ".", "long", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "keypoints_list", "=", "[", "]", "\n", "for", "bs_idx", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "bs_mask", "=", "(", "batch_indices", "==", "bs_idx", ")", "\n", "sampled_points", "=", "src_points", "[", "bs_mask", "]", ".", "unsqueeze", "(", "dim", "=", "0", ")", "# (1, N, 3)", "\n", "if", "self", ".", "model_cfg", ".", "SAMPLE_METHOD", "==", "'FPS'", ":", "\n", "                ", "cur_pt_idxs", "=", "pointnet2_stack_utils", ".", "furthest_point_sample", "(", "\n", "sampled_points", "[", ":", ",", ":", ",", "0", ":", "3", "]", ".", "contiguous", "(", ")", ",", "self", ".", "model_cfg", ".", "NUM_KEYPOINTS", "\n", ")", ".", "long", "(", ")", "\n", "\n", "if", "sampled_points", ".", "shape", "[", "1", "]", "<", "self", ".", "model_cfg", ".", "NUM_KEYPOINTS", ":", "\n", "                    ", "empty_num", "=", "self", ".", "model_cfg", ".", "NUM_KEYPOINTS", "-", "sampled_points", ".", "shape", "[", "1", "]", "\n", "cur_pt_idxs", "[", "0", ",", "-", "empty_num", ":", "]", "=", "cur_pt_idxs", "[", "0", ",", ":", "empty_num", "]", "\n", "\n", "", "keypoints", "=", "sampled_points", "[", "0", "]", "[", "cur_pt_idxs", "[", "0", "]", "]", ".", "unsqueeze", "(", "dim", "=", "0", ")", "\n", "\n", "", "elif", "self", ".", "model_cfg", ".", "SAMPLE_METHOD", "==", "'FastFPS'", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "keypoints_list", ".", "append", "(", "keypoints", ")", "\n", "\n", "", "keypoints", "=", "torch", ".", "cat", "(", "keypoints_list", ",", "dim", "=", "0", ")", "# (B, M, 3)", "\n", "return", "keypoints", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pfe.voxel_set_abstraction.VoxelSetAbstraction.forward": [[159, 240], ["voxel_set_abstraction.VoxelSetAbstraction.get_sampled_points", "voxel_set_abstraction.VoxelSetAbstraction.view", "voxel_set_abstraction.VoxelSetAbstraction.view.new_zeros().int().fill_", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.arange().view().repeat().view", "torch.arange().view().repeat().view", "torch.arange().view().repeat().view", "torch.arange().view().repeat().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "voxel_set_abstraction.VoxelSetAbstraction.view", "voxel_set_abstraction.VoxelSetAbstraction.vsa_point_feature_fusion", "voxel_set_abstraction.VoxelSetAbstraction.interpolate_from_bev_features", "point_features_list.append", "utils.common_utils.get_voxel_centers.new_zeros().int", "range", "voxel_set_abstraction.VoxelSetAbstraction.SA_rawpoints", "point_features_list.append", "utils.common_utils.get_voxel_centers", "utils.common_utils.get_voxel_centers.new_zeros().int", "range", "point_features_list.append", "voxel_set_abstraction.VoxelSetAbstraction.view", "voxel_set_abstraction.VoxelSetAbstraction.view.new_zeros().int", "raw_points[].contiguous", "pooled_features.view", "pooled_features.view", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat().view.view().float", "torch.arange().view().repeat().view.view().float", "voxel_set_abstraction.VoxelSetAbstraction.view", "utils.common_utils.get_voxel_centers.new_zeros", "utils.common_utils.get_voxel_centers.contiguous", "utils.common_utils.get_voxel_centers.new_zeros", "utils.common_utils.get_voxel_centers.contiguous", "[].features.contiguous", "voxel_set_abstraction.VoxelSetAbstraction.view.new_zeros", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view().repeat().view.view", "torch.arange().view().repeat().view.view", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pfe.voxel_set_abstraction.VoxelSetAbstraction.get_sampled_points", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pfe.voxel_set_abstraction.VoxelSetAbstraction.interpolate_from_bev_features", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.get_voxel_centers"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                keypoints: (B, num_keypoints, 3)\n                multi_scale_3d_features: {\n                        'x_conv4': ...\n                    }\n                points: optional (N, 1 + 3 + C) [bs_idx, x, y, z, ...]\n                spatial_features: optional\n                spatial_features_stride: optional\n\n        Returns:\n            point_features: (N, C)\n            point_coords: (N, 4)\n\n        \"\"\"", "\n", "keypoints", "=", "self", ".", "get_sampled_points", "(", "batch_dict", ")", "\n", "\n", "point_features_list", "=", "[", "]", "\n", "if", "'bev'", "in", "self", ".", "model_cfg", ".", "FEATURES_SOURCE", ":", "\n", "            ", "point_bev_features", "=", "self", ".", "interpolate_from_bev_features", "(", "\n", "keypoints", ",", "batch_dict", "[", "'spatial_features'", "]", ",", "batch_dict", "[", "'batch_size'", "]", ",", "\n", "bev_stride", "=", "batch_dict", "[", "'spatial_features_stride'", "]", "\n", ")", "\n", "point_features_list", ".", "append", "(", "point_bev_features", ")", "\n", "\n", "", "batch_size", ",", "num_keypoints", ",", "_", "=", "keypoints", ".", "shape", "\n", "new_xyz", "=", "keypoints", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "new_xyz_batch_cnt", "=", "new_xyz", ".", "new_zeros", "(", "batch_size", ")", ".", "int", "(", ")", ".", "fill_", "(", "num_keypoints", ")", "\n", "\n", "if", "'raw_points'", "in", "self", ".", "model_cfg", ".", "FEATURES_SOURCE", ":", "\n", "            ", "raw_points", "=", "batch_dict", "[", "'points'", "]", "\n", "xyz", "=", "raw_points", "[", ":", ",", "1", ":", "4", "]", "\n", "xyz_batch_cnt", "=", "xyz", ".", "new_zeros", "(", "batch_size", ")", ".", "int", "(", ")", "\n", "for", "bs_idx", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "xyz_batch_cnt", "[", "bs_idx", "]", "=", "(", "raw_points", "[", ":", ",", "0", "]", "==", "bs_idx", ")", ".", "sum", "(", ")", "\n", "", "point_features", "=", "raw_points", "[", ":", ",", "4", ":", "]", ".", "contiguous", "(", ")", "if", "raw_points", ".", "shape", "[", "1", "]", ">", "4", "else", "None", "\n", "\n", "pooled_points", ",", "pooled_features", "=", "self", ".", "SA_rawpoints", "(", "\n", "xyz", "=", "xyz", ".", "contiguous", "(", ")", ",", "\n", "xyz_batch_cnt", "=", "xyz_batch_cnt", ",", "\n", "new_xyz", "=", "new_xyz", ",", "\n", "new_xyz_batch_cnt", "=", "new_xyz_batch_cnt", ",", "\n", "features", "=", "point_features", ",", "\n", ")", "\n", "point_features_list", ".", "append", "(", "pooled_features", ".", "view", "(", "batch_size", ",", "num_keypoints", ",", "-", "1", ")", ")", "\n", "\n", "", "for", "k", ",", "src_name", "in", "enumerate", "(", "self", ".", "SA_layer_names", ")", ":", "\n", "            ", "cur_coords", "=", "batch_dict", "[", "'multi_scale_3d_features'", "]", "[", "src_name", "]", ".", "indices", "\n", "xyz", "=", "common_utils", ".", "get_voxel_centers", "(", "\n", "cur_coords", "[", ":", ",", "1", ":", "4", "]", ",", "\n", "downsample_times", "=", "self", ".", "downsample_times_map", "[", "src_name", "]", ",", "\n", "voxel_size", "=", "self", ".", "voxel_size", ",", "\n", "point_cloud_range", "=", "self", ".", "point_cloud_range", "\n", ")", "\n", "xyz_batch_cnt", "=", "xyz", ".", "new_zeros", "(", "batch_size", ")", ".", "int", "(", ")", "\n", "for", "bs_idx", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "xyz_batch_cnt", "[", "bs_idx", "]", "=", "(", "cur_coords", "[", ":", ",", "0", "]", "==", "bs_idx", ")", ".", "sum", "(", ")", "\n", "\n", "", "pooled_points", ",", "pooled_features", "=", "self", ".", "SA_layers", "[", "k", "]", "(", "\n", "xyz", "=", "xyz", ".", "contiguous", "(", ")", ",", "\n", "xyz_batch_cnt", "=", "xyz_batch_cnt", ",", "\n", "new_xyz", "=", "new_xyz", ",", "\n", "new_xyz_batch_cnt", "=", "new_xyz_batch_cnt", ",", "\n", "features", "=", "batch_dict", "[", "'multi_scale_3d_features'", "]", "[", "src_name", "]", ".", "features", ".", "contiguous", "(", ")", ",", "\n", ")", "\n", "point_features_list", ".", "append", "(", "pooled_features", ".", "view", "(", "batch_size", ",", "num_keypoints", ",", "-", "1", ")", ")", "\n", "\n", "", "point_features", "=", "torch", ".", "cat", "(", "point_features_list", ",", "dim", "=", "2", ")", "\n", "\n", "batch_idx", "=", "torch", ".", "arange", "(", "batch_size", ",", "device", "=", "keypoints", ".", "device", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "repeat", "(", "1", ",", "keypoints", ".", "shape", "[", "1", "]", ")", ".", "view", "(", "-", "1", ")", "\n", "point_coords", "=", "torch", ".", "cat", "(", "(", "batch_idx", ".", "view", "(", "-", "1", ",", "1", ")", ".", "float", "(", ")", ",", "keypoints", ".", "view", "(", "-", "1", ",", "3", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n", "batch_dict", "[", "'point_features_before_fusion'", "]", "=", "point_features", ".", "view", "(", "-", "1", ",", "point_features", ".", "shape", "[", "-", "1", "]", ")", "\n", "point_features", "=", "self", ".", "vsa_point_feature_fusion", "(", "point_features", ".", "view", "(", "-", "1", ",", "point_features", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "\n", "batch_dict", "[", "'point_features'", "]", "=", "point_features", "# (BxN, C)", "\n", "batch_dict", "[", "'point_coords'", "]", "=", "point_coords", "# (BxN, 4)", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pfe.voxel_set_abstraction.bilinear_interpolate_torch": [[9, 41], ["torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.t", "torch.t", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.clamp.type_as", "torch.clamp.type_as", "torch.clamp.type_as", "torch.clamp.type_as", "torch.clamp.type_as", "torch.clamp.type_as", "torch.clamp.type_as", "torch.clamp.type_as", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t", "torch.t"], "function", ["None"], ["def", "bilinear_interpolate_torch", "(", "im", ",", "x", ",", "y", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        im: (H, W, C) [y, x]\n        x: (N)\n        y: (N)\n\n    Returns:\n\n    \"\"\"", "\n", "x0", "=", "torch", ".", "floor", "(", "x", ")", ".", "long", "(", ")", "\n", "x1", "=", "x0", "+", "1", "\n", "\n", "y0", "=", "torch", ".", "floor", "(", "y", ")", ".", "long", "(", ")", "\n", "y1", "=", "y0", "+", "1", "\n", "\n", "x0", "=", "torch", ".", "clamp", "(", "x0", ",", "0", ",", "im", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "x1", "=", "torch", ".", "clamp", "(", "x1", ",", "0", ",", "im", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "y0", "=", "torch", ".", "clamp", "(", "y0", ",", "0", ",", "im", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "y1", "=", "torch", ".", "clamp", "(", "y1", ",", "0", ",", "im", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "\n", "Ia", "=", "im", "[", "y0", ",", "x0", "]", "\n", "Ib", "=", "im", "[", "y1", ",", "x0", "]", "\n", "Ic", "=", "im", "[", "y0", ",", "x1", "]", "\n", "Id", "=", "im", "[", "y1", ",", "x1", "]", "\n", "\n", "wa", "=", "(", "x1", ".", "type_as", "(", "x", ")", "-", "x", ")", "*", "(", "y1", ".", "type_as", "(", "y", ")", "-", "y", ")", "\n", "wb", "=", "(", "x1", ".", "type_as", "(", "x", ")", "-", "x", ")", "*", "(", "y", "-", "y0", ".", "type_as", "(", "y", ")", ")", "\n", "wc", "=", "(", "x", "-", "x0", ".", "type_as", "(", "x", ")", ")", "*", "(", "y1", ".", "type_as", "(", "y", ")", "-", "y", ")", "\n", "wd", "=", "(", "x", "-", "x0", ".", "type_as", "(", "x", ")", ")", "*", "(", "y", "-", "y0", ".", "type_as", "(", "y", ")", ")", "\n", "ans", "=", "torch", ".", "t", "(", "(", "torch", ".", "t", "(", "Ia", ")", "*", "wa", ")", ")", "+", "torch", ".", "t", "(", "torch", ".", "t", "(", "Ib", ")", "*", "wb", ")", "+", "torch", ".", "t", "(", "torch", ".", "t", "(", "Ic", ")", "*", "wc", ")", "+", "torch", ".", "t", "(", "torch", ".", "t", "(", "Id", ")", "*", "wd", ")", "\n", "return", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.second_net.SECONDNet.__init__": [[5, 8], ["detector3d_template.Detector3DTemplate.__init__", "second_net.SECONDNet.build_networks"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_networks"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_class", ",", "dataset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ",", "dataset", "=", "dataset", ")", "\n", "self", ".", "module_list", "=", "self", ".", "build_networks", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.second_net.SECONDNet.forward": [[9, 23], ["cur_module", "second_net.SECONDNet.get_training_loss", "second_net.SECONDNet.post_processing"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.PartA2_net.PartA2Net.get_training_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.post_processing"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "for", "cur_module", "in", "self", ".", "module_list", ":", "\n", "            ", "batch_dict", "=", "cur_module", "(", "batch_dict", ")", "\n", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "loss", ",", "tb_dict", ",", "disp_dict", "=", "self", ".", "get_training_loss", "(", ")", "\n", "\n", "ret_dict", "=", "{", "\n", "'loss'", ":", "loss", "\n", "}", "\n", "return", "ret_dict", ",", "tb_dict", ",", "disp_dict", "\n", "", "else", ":", "\n", "            ", "pred_dicts", ",", "recall_dicts", "=", "self", ".", "post_processing", "(", "batch_dict", ")", "\n", "return", "pred_dicts", ",", "recall_dicts", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.second_net.SECONDNet.get_training_loss": [[24, 35], ["second_net.SECONDNet.dense_head.get_loss", "loss_rpn.item"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss"], ["", "", "def", "get_training_loss", "(", "self", ")", ":", "\n", "        ", "disp_dict", "=", "{", "}", "\n", "\n", "loss_rpn", ",", "tb_dict", "=", "self", ".", "dense_head", ".", "get_loss", "(", ")", "\n", "tb_dict", "=", "{", "\n", "'loss_rpn'", ":", "loss_rpn", ".", "item", "(", ")", ",", "\n", "**", "tb_dict", "\n", "}", "\n", "\n", "loss", "=", "loss_rpn", "\n", "return", "loss", ",", "tb_dict", ",", "disp_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.__init__": [[14, 25], ["torch.Module.__init__", "detector3d_template.Detector3DTemplate.register_buffer", "torch.LongTensor().zero_", "torch.LongTensor().zero_", "torch.LongTensor().zero_", "torch.LongTensor().zero_", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_class", ",", "dataset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "class_names", "=", "dataset", ".", "class_names", "\n", "self", ".", "register_buffer", "(", "'global_step'", ",", "torch", ".", "LongTensor", "(", "1", ")", ".", "zero_", "(", ")", ")", "\n", "\n", "self", ".", "module_topology", "=", "[", "\n", "'vfe'", ",", "'backbone_3d'", ",", "'map_to_bev_module'", ",", "'pfe'", ",", "\n", "'backbone_2d'", ",", "'dense_head'", ",", "'point_head'", ",", "'roi_head'", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.mode": [[27, 30], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mode", "(", "self", ")", ":", "\n", "        ", "return", "'TRAIN'", "if", "self", ".", "training", "else", "'TEST'", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.update_global_step": [[31, 33], ["None"], "methods", ["None"], ["", "def", "update_global_step", "(", "self", ")", ":", "\n", "        ", "self", ".", "global_step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_networks": [[34, 49], ["detector3d_template.Detector3DTemplate.add_module", "getattr"], "methods", ["None"], ["", "def", "build_networks", "(", "self", ")", ":", "\n", "        ", "model_info_dict", "=", "{", "\n", "'module_list'", ":", "[", "]", ",", "\n", "'num_rawpoint_features'", ":", "self", ".", "dataset", ".", "point_feature_encoder", ".", "num_point_features", ",", "\n", "'num_point_features'", ":", "self", ".", "dataset", ".", "point_feature_encoder", ".", "num_point_features", ",", "\n", "'grid_size'", ":", "self", ".", "dataset", ".", "grid_size", ",", "\n", "'point_cloud_range'", ":", "self", ".", "dataset", ".", "point_cloud_range", ",", "\n", "'voxel_size'", ":", "self", ".", "dataset", ".", "voxel_size", "\n", "}", "\n", "for", "module_name", "in", "self", ".", "module_topology", ":", "\n", "            ", "module", ",", "model_info_dict", "=", "getattr", "(", "self", ",", "'build_%s'", "%", "module_name", ")", "(", "\n", "model_info_dict", "=", "model_info_dict", "\n", ")", "\n", "self", ".", "add_module", "(", "module_name", ",", "module", ")", "\n", "", "return", "model_info_dict", "[", "'module_list'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_vfe": [[50, 63], ["vfe_module.get_output_feature_dim", "model_info_dict[].append", "detector3d_template.Detector3DTemplate.model_cfg.get"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.vfe.vfe_template.VFETemplate.get_output_feature_dim"], ["", "def", "build_vfe", "(", "self", ",", "model_info_dict", ")", ":", "\n", "        ", "if", "self", ".", "model_cfg", ".", "get", "(", "'VFE'", ",", "None", ")", "is", "None", ":", "\n", "            ", "return", "None", ",", "model_info_dict", "\n", "\n", "", "vfe_module", "=", "vfe", ".", "__all__", "[", "self", ".", "model_cfg", ".", "VFE", ".", "NAME", "]", "(", "\n", "model_cfg", "=", "self", ".", "model_cfg", ".", "VFE", ",", "\n", "num_point_features", "=", "model_info_dict", "[", "'num_rawpoint_features'", "]", ",", "\n", "point_cloud_range", "=", "model_info_dict", "[", "'point_cloud_range'", "]", ",", "\n", "voxel_size", "=", "model_info_dict", "[", "'voxel_size'", "]", "\n", ")", "\n", "model_info_dict", "[", "'num_point_features'", "]", "=", "vfe_module", ".", "get_output_feature_dim", "(", ")", "\n", "model_info_dict", "[", "'module_list'", "]", ".", "append", "(", "vfe_module", ")", "\n", "return", "vfe_module", ",", "model_info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_backbone_3d": [[64, 78], ["model_info_dict[].append", "detector3d_template.Detector3DTemplate.model_cfg.get"], "methods", ["None"], ["", "def", "build_backbone_3d", "(", "self", ",", "model_info_dict", ")", ":", "\n", "        ", "if", "self", ".", "model_cfg", ".", "get", "(", "'BACKBONE_3D'", ",", "None", ")", "is", "None", ":", "\n", "            ", "return", "None", ",", "model_info_dict", "\n", "\n", "", "backbone_3d_module", "=", "backbones_3d", ".", "__all__", "[", "self", ".", "model_cfg", ".", "BACKBONE_3D", ".", "NAME", "]", "(", "\n", "model_cfg", "=", "self", ".", "model_cfg", ".", "BACKBONE_3D", ",", "\n", "input_channels", "=", "model_info_dict", "[", "'num_point_features'", "]", ",", "\n", "grid_size", "=", "model_info_dict", "[", "'grid_size'", "]", ",", "\n", "voxel_size", "=", "model_info_dict", "[", "'voxel_size'", "]", ",", "\n", "point_cloud_range", "=", "model_info_dict", "[", "'point_cloud_range'", "]", "\n", ")", "\n", "model_info_dict", "[", "'module_list'", "]", ".", "append", "(", "backbone_3d_module", ")", "\n", "model_info_dict", "[", "'num_point_features'", "]", "=", "backbone_3d_module", ".", "num_point_features", "\n", "return", "backbone_3d_module", ",", "model_info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_map_to_bev_module": [[79, 90], ["model_info_dict[].append", "detector3d_template.Detector3DTemplate.model_cfg.get"], "methods", ["None"], ["", "def", "build_map_to_bev_module", "(", "self", ",", "model_info_dict", ")", ":", "\n", "        ", "if", "self", ".", "model_cfg", ".", "get", "(", "'MAP_TO_BEV'", ",", "None", ")", "is", "None", ":", "\n", "            ", "return", "None", ",", "model_info_dict", "\n", "\n", "", "map_to_bev_module", "=", "map_to_bev", ".", "__all__", "[", "self", ".", "model_cfg", ".", "MAP_TO_BEV", ".", "NAME", "]", "(", "\n", "model_cfg", "=", "self", ".", "model_cfg", ".", "MAP_TO_BEV", ",", "\n", "grid_size", "=", "model_info_dict", "[", "'grid_size'", "]", "\n", ")", "\n", "model_info_dict", "[", "'module_list'", "]", ".", "append", "(", "map_to_bev_module", ")", "\n", "model_info_dict", "[", "'num_bev_features'", "]", "=", "map_to_bev_module", ".", "num_bev_features", "\n", "return", "map_to_bev_module", ",", "model_info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_backbone_2d": [[91, 102], ["model_info_dict[].append", "detector3d_template.Detector3DTemplate.model_cfg.get"], "methods", ["None"], ["", "def", "build_backbone_2d", "(", "self", ",", "model_info_dict", ")", ":", "\n", "        ", "if", "self", ".", "model_cfg", ".", "get", "(", "'BACKBONE_2D'", ",", "None", ")", "is", "None", ":", "\n", "            ", "return", "None", ",", "model_info_dict", "\n", "\n", "", "backbone_2d_module", "=", "backbones_2d", ".", "__all__", "[", "self", ".", "model_cfg", ".", "BACKBONE_2D", ".", "NAME", "]", "(", "\n", "model_cfg", "=", "self", ".", "model_cfg", ".", "BACKBONE_2D", ",", "\n", "input_channels", "=", "model_info_dict", "[", "'num_bev_features'", "]", "\n", ")", "\n", "model_info_dict", "[", "'module_list'", "]", ".", "append", "(", "backbone_2d_module", ")", "\n", "model_info_dict", "[", "'num_bev_features'", "]", "=", "backbone_2d_module", ".", "num_bev_features", "\n", "return", "backbone_2d_module", ",", "model_info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_pfe": [[103, 118], ["model_info_dict[].append", "detector3d_template.Detector3DTemplate.model_cfg.get"], "methods", ["None"], ["", "def", "build_pfe", "(", "self", ",", "model_info_dict", ")", ":", "\n", "        ", "if", "self", ".", "model_cfg", ".", "get", "(", "'PFE'", ",", "None", ")", "is", "None", ":", "\n", "            ", "return", "None", ",", "model_info_dict", "\n", "\n", "", "pfe_module", "=", "pfe", ".", "__all__", "[", "self", ".", "model_cfg", ".", "PFE", ".", "NAME", "]", "(", "\n", "model_cfg", "=", "self", ".", "model_cfg", ".", "PFE", ",", "\n", "voxel_size", "=", "model_info_dict", "[", "'voxel_size'", "]", ",", "\n", "point_cloud_range", "=", "model_info_dict", "[", "'point_cloud_range'", "]", ",", "\n", "num_bev_features", "=", "model_info_dict", "[", "'num_bev_features'", "]", ",", "\n", "num_rawpoint_features", "=", "model_info_dict", "[", "'num_rawpoint_features'", "]", "\n", ")", "\n", "model_info_dict", "[", "'module_list'", "]", ".", "append", "(", "pfe_module", ")", "\n", "model_info_dict", "[", "'num_point_features'", "]", "=", "pfe_module", ".", "num_point_features", "\n", "model_info_dict", "[", "'num_point_features_before_fusion'", "]", "=", "pfe_module", ".", "num_point_features_before_fusion", "\n", "return", "pfe_module", ",", "model_info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_dense_head": [[119, 133], ["model_info_dict[].append", "detector3d_template.Detector3DTemplate.model_cfg.get", "detector3d_template.Detector3DTemplate.model_cfg.get"], "methods", ["None"], ["", "def", "build_dense_head", "(", "self", ",", "model_info_dict", ")", ":", "\n", "        ", "if", "self", ".", "model_cfg", ".", "get", "(", "'DENSE_HEAD'", ",", "None", ")", "is", "None", ":", "\n", "            ", "return", "None", ",", "model_info_dict", "\n", "", "dense_head_module", "=", "dense_heads", ".", "__all__", "[", "self", ".", "model_cfg", ".", "DENSE_HEAD", ".", "NAME", "]", "(", "\n", "model_cfg", "=", "self", ".", "model_cfg", ".", "DENSE_HEAD", ",", "\n", "input_channels", "=", "model_info_dict", "[", "'num_bev_features'", "]", ",", "\n", "num_class", "=", "self", ".", "num_class", "if", "not", "self", ".", "model_cfg", ".", "DENSE_HEAD", ".", "CLASS_AGNOSTIC", "else", "1", ",", "\n", "class_names", "=", "self", ".", "class_names", ",", "\n", "grid_size", "=", "model_info_dict", "[", "'grid_size'", "]", ",", "\n", "point_cloud_range", "=", "model_info_dict", "[", "'point_cloud_range'", "]", ",", "\n", "predict_boxes_when_training", "=", "self", ".", "model_cfg", ".", "get", "(", "'ROI_HEAD'", ",", "False", ")", "\n", ")", "\n", "model_info_dict", "[", "'module_list'", "]", ".", "append", "(", "dense_head_module", ")", "\n", "return", "dense_head_module", ",", "model_info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_point_head": [[134, 152], ["detector3d_template.Detector3DTemplate.model_cfg.POINT_HEAD.get", "model_info_dict[].append", "detector3d_template.Detector3DTemplate.model_cfg.get", "detector3d_template.Detector3DTemplate.model_cfg.get"], "methods", ["None"], ["", "def", "build_point_head", "(", "self", ",", "model_info_dict", ")", ":", "\n", "        ", "if", "self", ".", "model_cfg", ".", "get", "(", "'POINT_HEAD'", ",", "None", ")", "is", "None", ":", "\n", "            ", "return", "None", ",", "model_info_dict", "\n", "\n", "", "if", "self", ".", "model_cfg", ".", "POINT_HEAD", ".", "get", "(", "'USE_POINT_FEATURES_BEFORE_FUSION'", ",", "False", ")", ":", "\n", "            ", "num_point_features", "=", "model_info_dict", "[", "'num_point_features_before_fusion'", "]", "\n", "", "else", ":", "\n", "            ", "num_point_features", "=", "model_info_dict", "[", "'num_point_features'", "]", "\n", "\n", "", "point_head_module", "=", "dense_heads", ".", "__all__", "[", "self", ".", "model_cfg", ".", "POINT_HEAD", ".", "NAME", "]", "(", "\n", "model_cfg", "=", "self", ".", "model_cfg", ".", "POINT_HEAD", ",", "\n", "input_channels", "=", "num_point_features", ",", "\n", "num_class", "=", "self", ".", "num_class", "if", "not", "self", ".", "model_cfg", ".", "POINT_HEAD", ".", "CLASS_AGNOSTIC", "else", "1", ",", "\n", "predict_boxes_when_training", "=", "self", ".", "model_cfg", ".", "get", "(", "'ROI_HEAD'", ",", "False", ")", "\n", ")", "\n", "\n", "model_info_dict", "[", "'module_list'", "]", ".", "append", "(", "point_head_module", ")", "\n", "return", "point_head_module", ",", "model_info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_roi_head": [[153, 164], ["model_info_dict[].append", "detector3d_template.Detector3DTemplate.model_cfg.get"], "methods", ["None"], ["", "def", "build_roi_head", "(", "self", ",", "model_info_dict", ")", ":", "\n", "        ", "if", "self", ".", "model_cfg", ".", "get", "(", "'ROI_HEAD'", ",", "None", ")", "is", "None", ":", "\n", "            ", "return", "None", ",", "model_info_dict", "\n", "", "point_head_module", "=", "roi_heads", ".", "__all__", "[", "self", ".", "model_cfg", ".", "ROI_HEAD", ".", "NAME", "]", "(", "\n", "model_cfg", "=", "self", ".", "model_cfg", ".", "ROI_HEAD", ",", "\n", "input_channels", "=", "model_info_dict", "[", "'num_point_features'", "]", ",", "\n", "num_class", "=", "self", ".", "num_class", "if", "not", "self", ".", "model_cfg", ".", "ROI_HEAD", ".", "CLASS_AGNOSTIC", "else", "1", ",", "\n", ")", "\n", "\n", "model_info_dict", "[", "'module_list'", "]", ".", "append", "(", "point_head_module", ")", "\n", "return", "point_head_module", ",", "model_info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.forward": [[165, 167], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.post_processing": [[168, 275], ["range", "detector3d_template.Detector3DTemplate.generate_recall_record", "pred_dicts.append", "batch_dict.get", "isinstance", "zip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.max", "torch.max", "torch.max", "torch.max", "batch_dict.get", "model_utils.model_nms_utils.class_agnostic_nms", "batch_dict[].shape.__len__", "batch_dict[].shape.__len__", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "isinstance", "model_utils.model_nms_utils.multi_classes_nms", "pred_scores.append", "pred_labels.append", "pred_boxes.append", "torch.max", "torch.max", "torch.max", "torch.max", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.generate_recall_record", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.model_utils.model_nms_utils.class_agnostic_nms", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.model_utils.model_nms_utils.multi_classes_nms"], ["", "def", "post_processing", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                batch_cls_preds: (B, num_boxes, num_classes | 1) or (N1+N2+..., num_classes | 1)\n                                or [(B, num_boxes, num_class1), (B, num_boxes, num_class2) ...]\n                multihead_label_mapping: [(num_class1), (num_class2), ...]\n                batch_box_preds: (B, num_boxes, 7+C) or (N1+N2+..., 7+C)\n                cls_preds_normalized: indicate whether batch_cls_preds is normalized\n                batch_index: optional (N1+N2+...)\n                has_class_labels: True/False\n                roi_labels: (B, num_rois)  1 .. num_classes\n                batch_pred_labels: (B, num_boxes, 1)\n        Returns:\n\n        \"\"\"", "\n", "post_process_cfg", "=", "self", ".", "model_cfg", ".", "POST_PROCESSING", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "recall_dict", "=", "{", "}", "\n", "pred_dicts", "=", "[", "]", "\n", "for", "index", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "if", "batch_dict", ".", "get", "(", "'batch_index'", ",", "None", ")", "is", "not", "None", ":", "\n", "                ", "assert", "batch_dict", "[", "'batch_box_preds'", "]", ".", "shape", ".", "__len__", "(", ")", "==", "2", "\n", "batch_mask", "=", "(", "batch_dict", "[", "'batch_index'", "]", "==", "index", ")", "\n", "", "else", ":", "\n", "                ", "assert", "batch_dict", "[", "'batch_box_preds'", "]", ".", "shape", ".", "__len__", "(", ")", "==", "3", "\n", "batch_mask", "=", "index", "\n", "\n", "", "box_preds", "=", "batch_dict", "[", "'batch_box_preds'", "]", "[", "batch_mask", "]", "\n", "src_box_preds", "=", "box_preds", "\n", "\n", "if", "not", "isinstance", "(", "batch_dict", "[", "'batch_cls_preds'", "]", ",", "list", ")", ":", "\n", "                ", "cls_preds", "=", "batch_dict", "[", "'batch_cls_preds'", "]", "[", "batch_mask", "]", "\n", "\n", "src_cls_preds", "=", "cls_preds", "\n", "assert", "cls_preds", ".", "shape", "[", "1", "]", "in", "[", "1", ",", "self", ".", "num_class", "]", "\n", "\n", "if", "not", "batch_dict", "[", "'cls_preds_normalized'", "]", ":", "\n", "                    ", "cls_preds", "=", "torch", ".", "sigmoid", "(", "cls_preds", ")", "\n", "", "", "else", ":", "\n", "                ", "cls_preds", "=", "[", "x", "[", "batch_mask", "]", "for", "x", "in", "batch_dict", "[", "'batch_cls_preds'", "]", "]", "\n", "src_cls_preds", "=", "cls_preds", "\n", "if", "not", "batch_dict", "[", "'cls_preds_normalized'", "]", ":", "\n", "                    ", "cls_preds", "=", "[", "torch", ".", "sigmoid", "(", "x", ")", "for", "x", "in", "cls_preds", "]", "\n", "\n", "", "", "if", "post_process_cfg", ".", "NMS_CONFIG", ".", "MULTI_CLASSES_NMS", ":", "\n", "                ", "if", "not", "isinstance", "(", "cls_preds", ",", "list", ")", ":", "\n", "                    ", "cls_preds", "=", "[", "cls_preds", "]", "\n", "multihead_label_mapping", "=", "[", "torch", ".", "arange", "(", "1", ",", "self", ".", "num_class", ",", "device", "=", "cls_preds", "[", "0", "]", ".", "device", ")", "]", "\n", "", "else", ":", "\n", "                    ", "multihead_label_mapping", "=", "batch_dict", "[", "'multihead_label_mapping'", "]", "\n", "\n", "", "cur_start_idx", "=", "0", "\n", "pred_scores", ",", "pred_labels", ",", "pred_boxes", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "cur_cls_preds", ",", "cur_label_mapping", "in", "zip", "(", "cls_preds", ",", "multihead_label_mapping", ")", ":", "\n", "                    ", "assert", "cur_cls_preds", ".", "shape", "[", "1", "]", "==", "len", "(", "cur_label_mapping", ")", "\n", "cur_box_preds", "=", "box_preds", "[", "cur_start_idx", ":", "cur_start_idx", "+", "cur_cls_preds", ".", "shape", "[", "0", "]", "]", "\n", "cur_pred_scores", ",", "cur_pred_labels", ",", "cur_pred_boxes", "=", "model_nms_utils", ".", "multi_classes_nms", "(", "\n", "cls_scores", "=", "cur_cls_preds", ",", "box_preds", "=", "cur_box_preds", ",", "\n", "nms_config", "=", "post_process_cfg", ".", "NMS_CONFIG", ",", "\n", "score_thresh", "=", "post_process_cfg", ".", "SCORE_THRESH", "\n", ")", "\n", "cur_pred_labels", "=", "cur_label_mapping", "[", "cur_pred_labels", "]", "\n", "pred_scores", ".", "append", "(", "cur_pred_scores", ")", "\n", "pred_labels", ".", "append", "(", "cur_pred_labels", ")", "\n", "pred_boxes", ".", "append", "(", "cur_pred_boxes", ")", "\n", "cur_start_idx", "+=", "cur_cls_preds", ".", "shape", "[", "0", "]", "\n", "\n", "", "final_scores", "=", "torch", ".", "cat", "(", "pred_scores", ",", "dim", "=", "0", ")", "\n", "final_labels", "=", "torch", ".", "cat", "(", "pred_labels", ",", "dim", "=", "0", ")", "\n", "final_boxes", "=", "torch", ".", "cat", "(", "pred_boxes", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "cls_preds", ",", "label_preds", "=", "torch", ".", "max", "(", "cls_preds", ",", "dim", "=", "-", "1", ")", "\n", "if", "batch_dict", ".", "get", "(", "'has_class_labels'", ",", "False", ")", ":", "\n", "                    ", "label_key", "=", "'roi_labels'", "if", "'roi_labels'", "in", "batch_dict", "else", "'batch_pred_labels'", "\n", "label_preds", "=", "batch_dict", "[", "label_key", "]", "[", "index", "]", "\n", "", "else", ":", "\n", "                    ", "label_preds", "=", "label_preds", "+", "1", "\n", "", "selected", ",", "selected_scores", "=", "model_nms_utils", ".", "class_agnostic_nms", "(", "\n", "box_scores", "=", "cls_preds", ",", "box_preds", "=", "box_preds", ",", "\n", "nms_config", "=", "post_process_cfg", ".", "NMS_CONFIG", ",", "\n", "score_thresh", "=", "post_process_cfg", ".", "SCORE_THRESH", "\n", ")", "\n", "\n", "if", "post_process_cfg", ".", "OUTPUT_RAW_SCORE", ":", "\n", "                    ", "max_cls_preds", ",", "_", "=", "torch", ".", "max", "(", "src_cls_preds", ",", "dim", "=", "-", "1", ")", "\n", "selected_scores", "=", "max_cls_preds", "[", "selected", "]", "\n", "\n", "", "final_scores", "=", "selected_scores", "\n", "final_labels", "=", "label_preds", "[", "selected", "]", "\n", "final_boxes", "=", "box_preds", "[", "selected", "]", "\n", "\n", "", "recall_dict", "=", "self", ".", "generate_recall_record", "(", "\n", "box_preds", "=", "final_boxes", "if", "'rois'", "not", "in", "batch_dict", "else", "src_box_preds", ",", "\n", "recall_dict", "=", "recall_dict", ",", "batch_index", "=", "index", ",", "data_dict", "=", "batch_dict", ",", "\n", "thresh_list", "=", "post_process_cfg", ".", "RECALL_THRESH_LIST", "\n", ")", "\n", "\n", "record_dict", "=", "{", "\n", "'pred_boxes'", ":", "final_boxes", ",", "\n", "'pred_scores'", ":", "final_scores", ",", "\n", "'pred_labels'", ":", "final_labels", "\n", "}", "\n", "pred_dicts", ".", "append", "(", "record_dict", ")", "\n", "\n", "", "return", "pred_dicts", ",", "recall_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.generate_recall_record": [[276, 319], ["recall_dict.__len__", "cur_gt.__len__", "box_preds.new_zeros", "cur_gt[].sum", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu", "str", "str", "str", "str", "str", "torch.zeros.max", "torch.zeros.max", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu.max"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu"], ["", "@", "staticmethod", "\n", "def", "generate_recall_record", "(", "box_preds", ",", "recall_dict", ",", "batch_index", ",", "data_dict", "=", "None", ",", "thresh_list", "=", "None", ")", ":", "\n", "        ", "if", "'gt_boxes'", "not", "in", "data_dict", ":", "\n", "            ", "return", "recall_dict", "\n", "\n", "", "rois", "=", "data_dict", "[", "'rois'", "]", "[", "batch_index", "]", "if", "'rois'", "in", "data_dict", "else", "None", "\n", "gt_boxes", "=", "data_dict", "[", "'gt_boxes'", "]", "[", "batch_index", "]", "\n", "\n", "if", "recall_dict", ".", "__len__", "(", ")", "==", "0", ":", "\n", "            ", "recall_dict", "=", "{", "'gt'", ":", "0", "}", "\n", "for", "cur_thresh", "in", "thresh_list", ":", "\n", "                ", "recall_dict", "[", "'roi_%s'", "%", "(", "str", "(", "cur_thresh", ")", ")", "]", "=", "0", "\n", "recall_dict", "[", "'rcnn_%s'", "%", "(", "str", "(", "cur_thresh", ")", ")", "]", "=", "0", "\n", "\n", "", "", "cur_gt", "=", "gt_boxes", "\n", "k", "=", "cur_gt", ".", "__len__", "(", ")", "-", "1", "\n", "while", "k", ">", "0", "and", "cur_gt", "[", "k", "]", ".", "sum", "(", ")", "==", "0", ":", "\n", "            ", "k", "-=", "1", "\n", "", "cur_gt", "=", "cur_gt", "[", ":", "k", "+", "1", "]", "\n", "\n", "if", "cur_gt", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "if", "box_preds", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "                ", "iou3d_rcnn", "=", "iou3d_nms_utils", ".", "boxes_iou3d_gpu", "(", "box_preds", "[", ":", ",", "0", ":", "7", "]", ",", "cur_gt", "[", ":", ",", "0", ":", "7", "]", ")", "\n", "", "else", ":", "\n", "                ", "iou3d_rcnn", "=", "torch", ".", "zeros", "(", "(", "0", ",", "cur_gt", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "", "if", "rois", "is", "not", "None", ":", "\n", "                ", "iou3d_roi", "=", "iou3d_nms_utils", ".", "boxes_iou3d_gpu", "(", "rois", "[", ":", ",", "0", ":", "7", "]", ",", "cur_gt", "[", ":", ",", "0", ":", "7", "]", ")", "\n", "\n", "", "for", "cur_thresh", "in", "thresh_list", ":", "\n", "                ", "if", "iou3d_rcnn", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "                    ", "recall_dict", "[", "'rcnn_%s'", "%", "str", "(", "cur_thresh", ")", "]", "+=", "0", "\n", "", "else", ":", "\n", "                    ", "rcnn_recalled", "=", "(", "iou3d_rcnn", ".", "max", "(", "dim", "=", "0", ")", "[", "0", "]", ">", "cur_thresh", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "recall_dict", "[", "'rcnn_%s'", "%", "str", "(", "cur_thresh", ")", "]", "+=", "rcnn_recalled", "\n", "", "if", "rois", "is", "not", "None", ":", "\n", "                    ", "roi_recalled", "=", "(", "iou3d_roi", ".", "max", "(", "dim", "=", "0", ")", "[", "0", "]", ">", "cur_thresh", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "recall_dict", "[", "'roi_%s'", "%", "str", "(", "cur_thresh", ")", "]", "+=", "roi_recalled", "\n", "\n", "", "", "recall_dict", "[", "'gt'", "]", "+=", "cur_gt", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "gt_iou", "=", "box_preds", ".", "new_zeros", "(", "box_preds", ".", "shape", "[", "0", "]", ")", "\n", "", "return", "recall_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.load_params_from_file": [[320, 347], ["logger.info", "torch.load", "torch.load", "torch.load", "torch.load", "model_state_disk.items", "detector3d_template.Detector3DTemplate.state_dict", "detector3d_template.Detector3DTemplate.update", "detector3d_template.Detector3DTemplate.load_state_dict", "logger.info", "os.path.isfile", "torch.device", "torch.device", "torch.device", "torch.device", "logger.info", "logger.info", "detector3d_template.Detector3DTemplate.state_dict", "len", "len", "detector3d_template.Detector3DTemplate.state_dict", "detector3d_template.Detector3DTemplate.state_dict", "str"], "methods", ["None"], ["", "def", "load_params_from_file", "(", "self", ",", "filename", ",", "logger", ",", "to_cpu", "=", "False", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isfile", "(", "filename", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "\n", "\n", "", "logger", ".", "info", "(", "'==> Loading parameters from checkpoint %s to %s'", "%", "(", "filename", ",", "'CPU'", "if", "to_cpu", "else", "'GPU'", ")", ")", "\n", "loc_type", "=", "torch", ".", "device", "(", "'cpu'", ")", "if", "to_cpu", "else", "None", "\n", "checkpoint", "=", "torch", ".", "load", "(", "filename", ",", "map_location", "=", "loc_type", ")", "\n", "model_state_disk", "=", "checkpoint", "[", "'model_state'", "]", "\n", "\n", "if", "'version'", "in", "checkpoint", ":", "\n", "            ", "logger", ".", "info", "(", "'==> Checkpoint trained from version: %s'", "%", "checkpoint", "[", "'version'", "]", ")", "\n", "\n", "", "update_model_state", "=", "{", "}", "\n", "for", "key", ",", "val", "in", "model_state_disk", ".", "items", "(", ")", ":", "\n", "            ", "if", "key", "in", "self", ".", "state_dict", "(", ")", "and", "self", ".", "state_dict", "(", ")", "[", "key", "]", ".", "shape", "==", "model_state_disk", "[", "key", "]", ".", "shape", ":", "\n", "                ", "update_model_state", "[", "key", "]", "=", "val", "\n", "# logger.info('Update weight %s: %s' % (key, str(val.shape)))", "\n", "\n", "", "", "state_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "state_dict", ".", "update", "(", "update_model_state", ")", "\n", "self", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n", "for", "key", "in", "state_dict", ":", "\n", "            ", "if", "key", "not", "in", "update_model_state", ":", "\n", "                ", "logger", ".", "info", "(", "'Not updated weight %s: %s'", "%", "(", "key", ",", "str", "(", "state_dict", "[", "key", "]", ".", "shape", ")", ")", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "'==> Done (loaded %d/%d)'", "%", "(", "len", "(", "update_model_state", ")", ",", "len", "(", "self", ".", "state_dict", "(", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.load_params_with_optimizer": [[348, 378], ["logger.info", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.get", "torch.load.get", "torch.load.get", "torch.load.get", "detector3d_template.Detector3DTemplate.load_state_dict", "logger.info", "os.path.isfile", "torch.device", "torch.device", "torch.device", "torch.device", "print", "logger.info", "optimizer.load_state_dict", "os.path.exists", "torch.load", "torch.load", "torch.load", "torch.load", "optimizer.load_state_dict"], "methods", ["None"], ["", "def", "load_params_with_optimizer", "(", "self", ",", "filename", ",", "to_cpu", "=", "False", ",", "optimizer", "=", "None", ",", "logger", "=", "None", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isfile", "(", "filename", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "\n", "\n", "", "logger", ".", "info", "(", "'==> Loading parameters from checkpoint %s to %s'", "%", "(", "filename", ",", "'CPU'", "if", "to_cpu", "else", "'GPU'", ")", ")", "\n", "loc_type", "=", "torch", ".", "device", "(", "'cpu'", ")", "if", "to_cpu", "else", "None", "\n", "checkpoint", "=", "torch", ".", "load", "(", "filename", ",", "map_location", "=", "loc_type", ")", "\n", "epoch", "=", "checkpoint", ".", "get", "(", "'epoch'", ",", "-", "1", ")", "\n", "it", "=", "checkpoint", ".", "get", "(", "'it'", ",", "0.0", ")", "\n", "\n", "self", ".", "load_state_dict", "(", "checkpoint", "[", "'model_state'", "]", ")", "\n", "\n", "if", "optimizer", "is", "not", "None", ":", "\n", "            ", "if", "'optimizer_state'", "in", "checkpoint", "and", "checkpoint", "[", "'optimizer_state'", "]", "is", "not", "None", ":", "\n", "                ", "logger", ".", "info", "(", "'==> Loading optimizer parameters from checkpoint %s to %s'", "\n", "%", "(", "filename", ",", "'CPU'", "if", "to_cpu", "else", "'GPU'", ")", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_state'", "]", ")", "\n", "", "else", ":", "\n", "                ", "assert", "filename", "[", "-", "4", "]", "==", "'.'", ",", "filename", "\n", "src_file", ",", "ext", "=", "filename", "[", ":", "-", "4", "]", ",", "filename", "[", "-", "3", ":", "]", "\n", "optimizer_filename", "=", "'%s_optim.%s'", "%", "(", "src_file", ",", "ext", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "optimizer_filename", ")", ":", "\n", "                    ", "optimizer_ckpt", "=", "torch", ".", "load", "(", "optimizer_filename", ",", "map_location", "=", "loc_type", ")", "\n", "optimizer", ".", "load_state_dict", "(", "optimizer_ckpt", "[", "'optimizer_state'", "]", ")", "\n", "\n", "", "", "", "if", "'version'", "in", "checkpoint", ":", "\n", "            ", "print", "(", "'==> Checkpoint trained from version: %s'", "%", "checkpoint", "[", "'version'", "]", ")", "\n", "", "logger", ".", "info", "(", "'==> Done'", ")", "\n", "\n", "return", "it", ",", "epoch", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.pointpillar.PointPillar.__init__": [[5, 8], ["detector3d_template.Detector3DTemplate.__init__", "pointpillar.PointPillar.build_networks"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_networks"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_class", ",", "dataset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ",", "dataset", "=", "dataset", ")", "\n", "self", ".", "module_list", "=", "self", ".", "build_networks", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.pointpillar.PointPillar.forward": [[9, 23], ["cur_module", "pointpillar.PointPillar.get_training_loss", "pointpillar.PointPillar.post_processing"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.PartA2_net.PartA2Net.get_training_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.post_processing"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "for", "cur_module", "in", "self", ".", "module_list", ":", "\n", "            ", "batch_dict", "=", "cur_module", "(", "batch_dict", ")", "\n", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "loss", ",", "tb_dict", ",", "disp_dict", "=", "self", ".", "get_training_loss", "(", ")", "\n", "\n", "ret_dict", "=", "{", "\n", "'loss'", ":", "loss", "\n", "}", "\n", "return", "ret_dict", ",", "tb_dict", ",", "disp_dict", "\n", "", "else", ":", "\n", "            ", "pred_dicts", ",", "recall_dicts", "=", "self", ".", "post_processing", "(", "batch_dict", ")", "\n", "return", "pred_dicts", ",", "recall_dicts", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.pointpillar.PointPillar.get_training_loss": [[24, 35], ["pointpillar.PointPillar.dense_head.get_loss", "loss_rpn.item"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss"], ["", "", "def", "get_training_loss", "(", "self", ")", ":", "\n", "        ", "disp_dict", "=", "{", "}", "\n", "\n", "loss_rpn", ",", "tb_dict", "=", "self", ".", "dense_head", ".", "get_loss", "(", ")", "\n", "tb_dict", "=", "{", "\n", "'loss_rpn'", ":", "loss_rpn", ".", "item", "(", ")", ",", "\n", "**", "tb_dict", "\n", "}", "\n", "\n", "loss", "=", "loss_rpn", "\n", "return", "loss", ",", "tb_dict", ",", "disp_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.pv_rcnn.PVRCNN.__init__": [[5, 8], ["detector3d_template.Detector3DTemplate.__init__", "pv_rcnn.PVRCNN.build_networks"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_networks"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_class", ",", "dataset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ",", "dataset", "=", "dataset", ")", "\n", "self", ".", "module_list", "=", "self", ".", "build_networks", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.pv_rcnn.PVRCNN.forward": [[9, 23], ["cur_module", "pv_rcnn.PVRCNN.get_training_loss", "pv_rcnn.PVRCNN.post_processing"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.PartA2_net.PartA2Net.get_training_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.post_processing"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "for", "cur_module", "in", "self", ".", "module_list", ":", "\n", "            ", "batch_dict", "=", "cur_module", "(", "batch_dict", ")", "\n", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "loss", ",", "tb_dict", ",", "disp_dict", "=", "self", ".", "get_training_loss", "(", ")", "\n", "\n", "ret_dict", "=", "{", "\n", "'loss'", ":", "loss", "\n", "}", "\n", "return", "ret_dict", ",", "tb_dict", ",", "disp_dict", "\n", "", "else", ":", "\n", "            ", "pred_dicts", ",", "recall_dicts", "=", "self", ".", "post_processing", "(", "batch_dict", ")", "\n", "return", "pred_dicts", ",", "recall_dicts", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.pv_rcnn.PVRCNN.get_training_loss": [[24, 32], ["pv_rcnn.PVRCNN.dense_head.get_loss", "pv_rcnn.PVRCNN.point_head.get_loss", "pv_rcnn.PVRCNN.roi_head.get_loss"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss"], ["", "", "def", "get_training_loss", "(", "self", ")", ":", "\n", "        ", "disp_dict", "=", "{", "}", "\n", "loss_rpn", ",", "tb_dict", "=", "self", ".", "dense_head", ".", "get_loss", "(", ")", "\n", "loss_point", ",", "tb_dict", "=", "self", ".", "point_head", ".", "get_loss", "(", "tb_dict", ")", "\n", "loss_rcnn", ",", "tb_dict", "=", "self", ".", "roi_head", ".", "get_loss", "(", "tb_dict", ")", "\n", "\n", "loss", "=", "loss_rpn", "+", "loss_point", "+", "loss_rcnn", "\n", "return", "loss", ",", "tb_dict", ",", "disp_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.point_rcnn.PointRCNN.__init__": [[5, 8], ["detector3d_template.Detector3DTemplate.__init__", "point_rcnn.PointRCNN.build_networks"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_networks"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_class", ",", "dataset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ",", "dataset", "=", "dataset", ")", "\n", "self", ".", "module_list", "=", "self", ".", "build_networks", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.point_rcnn.PointRCNN.forward": [[9, 23], ["cur_module", "point_rcnn.PointRCNN.get_training_loss", "point_rcnn.PointRCNN.post_processing"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.PartA2_net.PartA2Net.get_training_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.post_processing"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "for", "cur_module", "in", "self", ".", "module_list", ":", "\n", "            ", "batch_dict", "=", "cur_module", "(", "batch_dict", ")", "\n", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "loss", ",", "tb_dict", ",", "disp_dict", "=", "self", ".", "get_training_loss", "(", ")", "\n", "\n", "ret_dict", "=", "{", "\n", "'loss'", ":", "loss", "\n", "}", "\n", "return", "ret_dict", ",", "tb_dict", ",", "disp_dict", "\n", "", "else", ":", "\n", "            ", "pred_dicts", ",", "recall_dicts", "=", "self", ".", "post_processing", "(", "batch_dict", ")", "\n", "return", "pred_dicts", ",", "recall_dicts", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.point_rcnn.PointRCNN.get_training_loss": [[24, 31], ["point_rcnn.PointRCNN.point_head.get_loss", "point_rcnn.PointRCNN.roi_head.get_loss"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss"], ["", "", "def", "get_training_loss", "(", "self", ")", ":", "\n", "        ", "disp_dict", "=", "{", "}", "\n", "loss_point", ",", "tb_dict", "=", "self", ".", "point_head", ".", "get_loss", "(", ")", "\n", "loss_rcnn", ",", "tb_dict", "=", "self", ".", "roi_head", ".", "get_loss", "(", "tb_dict", ")", "\n", "\n", "loss", "=", "loss_point", "+", "loss_rcnn", "\n", "return", "loss", ",", "tb_dict", ",", "disp_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.PartA2_net.PartA2Net.__init__": [[5, 8], ["detector3d_template.Detector3DTemplate.__init__", "PartA2_net.PartA2Net.build_networks"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.build_networks"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_class", ",", "dataset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ",", "dataset", "=", "dataset", ")", "\n", "self", ".", "module_list", "=", "self", ".", "build_networks", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.PartA2_net.PartA2Net.forward": [[9, 23], ["cur_module", "PartA2_net.PartA2Net.get_training_loss", "PartA2_net.PartA2Net.post_processing"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.PartA2_net.PartA2Net.get_training_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.detector3d_template.Detector3DTemplate.post_processing"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "for", "cur_module", "in", "self", ".", "module_list", ":", "\n", "            ", "batch_dict", "=", "cur_module", "(", "batch_dict", ")", "\n", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "loss", ",", "tb_dict", ",", "disp_dict", "=", "self", ".", "get_training_loss", "(", ")", "\n", "\n", "ret_dict", "=", "{", "\n", "'loss'", ":", "loss", "\n", "}", "\n", "return", "ret_dict", ",", "tb_dict", ",", "disp_dict", "\n", "", "else", ":", "\n", "            ", "pred_dicts", ",", "recall_dicts", "=", "self", ".", "post_processing", "(", "batch_dict", ")", "\n", "return", "pred_dicts", ",", "recall_dicts", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.PartA2_net.PartA2Net.get_training_loss": [[24, 32], ["PartA2_net.PartA2Net.dense_head.get_loss", "PartA2_net.PartA2Net.point_head.get_loss", "PartA2_net.PartA2Net.roi_head.get_loss"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss"], ["", "", "def", "get_training_loss", "(", "self", ")", ":", "\n", "        ", "disp_dict", "=", "{", "}", "\n", "loss_rpn", ",", "tb_dict", "=", "self", ".", "dense_head", ".", "get_loss", "(", ")", "\n", "loss_point", ",", "tb_dict", "=", "self", ".", "point_head", ".", "get_loss", "(", "tb_dict", ")", "\n", "loss_rcnn", ",", "tb_dict", "=", "self", ".", "roi_head", ".", "get_loss", "(", "tb_dict", ")", "\n", "\n", "loss", "=", "loss_rpn", "+", "loss_point", "+", "loss_rcnn", "\n", "return", "loss", ",", "tb_dict", ",", "disp_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.detectors.__init__.build_detector": [[18, 24], ["None"], "function", ["None"], [")", "\n", "", "elif", "optim_cfg", ".", "OPTIMIZER", "==", "'adam_onecycle'", ":", "\n", "        ", "def", "children", "(", "m", ":", "nn", ".", "Module", ")", ":", "\n", "            ", "return", "list", "(", "m", ".", "children", "(", ")", ")", "\n", "\n", "", "def", "num_children", "(", "m", ":", "nn", ".", "Module", ")", "->", "int", ":", "\n", "            ", "return", "len", "(", "children", "(", "m", ")", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pvrcnn_head.PVRCNNHead.__init__": [[9, 52], ["roi_head_template.RoIHeadTemplate.__init__", "range", "ops.pointnet2.pointnet2_stack.pointnet2_modules.StackSAModuleMSG", "sum", "range", "torch.Sequential", "pvrcnn_head.PVRCNNHead.make_fc_layers", "pvrcnn_head.PVRCNNHead.make_fc_layers", "pvrcnn_head.PVRCNNHead.init_weights", "len", "pvrcnn_head.PVRCNNHead.model_cfg.SHARED_FC.__len__", "shared_fc_list.extend", "shared_fc_list.append", "torch.Conv1d", "torch.BatchNorm1d", "torch.ReLU", "torch.Dropout", "pvrcnn_head.PVRCNNHead.model_cfg.SHARED_FC.__len__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.SingleHead.init_weights", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "model_cfg", ",", "num_class", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "num_class", "=", "num_class", ",", "model_cfg", "=", "model_cfg", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "\n", "mlps", "=", "self", ".", "model_cfg", ".", "ROI_GRID_POOL", ".", "MLPS", "\n", "for", "k", "in", "range", "(", "len", "(", "mlps", ")", ")", ":", "\n", "            ", "mlps", "[", "k", "]", "=", "[", "input_channels", "]", "+", "mlps", "[", "k", "]", "\n", "\n", "", "self", ".", "roi_grid_pool_layer", "=", "pointnet2_stack_modules", ".", "StackSAModuleMSG", "(", "\n", "radii", "=", "self", ".", "model_cfg", ".", "ROI_GRID_POOL", ".", "POOL_RADIUS", ",", "\n", "nsamples", "=", "self", ".", "model_cfg", ".", "ROI_GRID_POOL", ".", "NSAMPLE", ",", "\n", "mlps", "=", "mlps", ",", "\n", "use_xyz", "=", "True", ",", "\n", "pool_method", "=", "self", ".", "model_cfg", ".", "ROI_GRID_POOL", ".", "POOL_METHOD", ",", "\n", ")", "\n", "\n", "GRID_SIZE", "=", "self", ".", "model_cfg", ".", "ROI_GRID_POOL", ".", "GRID_SIZE", "\n", "c_out", "=", "sum", "(", "[", "x", "[", "-", "1", "]", "for", "x", "in", "mlps", "]", ")", "\n", "pre_channel", "=", "GRID_SIZE", "*", "GRID_SIZE", "*", "GRID_SIZE", "*", "c_out", "\n", "\n", "shared_fc_list", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "0", ",", "self", ".", "model_cfg", ".", "SHARED_FC", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "shared_fc_list", ".", "extend", "(", "[", "\n", "nn", ".", "Conv1d", "(", "pre_channel", ",", "self", ".", "model_cfg", ".", "SHARED_FC", "[", "k", "]", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "self", ".", "model_cfg", ".", "SHARED_FC", "[", "k", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "pre_channel", "=", "self", ".", "model_cfg", ".", "SHARED_FC", "[", "k", "]", "\n", "\n", "if", "k", "!=", "self", ".", "model_cfg", ".", "SHARED_FC", ".", "__len__", "(", ")", "-", "1", "and", "self", ".", "model_cfg", ".", "DP_RATIO", ">", "0", ":", "\n", "                ", "shared_fc_list", ".", "append", "(", "nn", ".", "Dropout", "(", "self", ".", "model_cfg", ".", "DP_RATIO", ")", ")", "\n", "\n", "", "", "self", ".", "shared_fc_layer", "=", "nn", ".", "Sequential", "(", "*", "shared_fc_list", ")", "\n", "\n", "self", ".", "cls_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "input_channels", "=", "pre_channel", ",", "output_channels", "=", "self", ".", "num_class", ",", "fc_list", "=", "self", ".", "model_cfg", ".", "CLS_FC", "\n", ")", "\n", "self", ".", "reg_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "input_channels", "=", "pre_channel", ",", "\n", "output_channels", "=", "self", ".", "box_coder", ".", "code_size", "*", "self", ".", "num_class", ",", "\n", "fc_list", "=", "self", ".", "model_cfg", ".", "REG_FC", "\n", ")", "\n", "self", ".", "init_weights", "(", "weight_init", "=", "'xavier'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pvrcnn_head.PVRCNNHead.init_weights": [[53, 72], ["pvrcnn_head.PVRCNNHead.modules", "torch.init.normal_", "isinstance", "isinstance", "init_func", "init_func", "torch.init.constant_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "weight_init", "=", "'xavier'", ")", ":", "\n", "        ", "if", "weight_init", "==", "'kaiming'", ":", "\n", "            ", "init_func", "=", "nn", ".", "init", ".", "kaiming_normal_", "\n", "", "elif", "weight_init", "==", "'xavier'", ":", "\n", "            ", "init_func", "=", "nn", ".", "init", ".", "xavier_normal_", "\n", "", "elif", "weight_init", "==", "'normal'", ":", "\n", "            ", "init_func", "=", "nn", ".", "init", ".", "normal_", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Conv1d", ")", ":", "\n", "                ", "if", "weight_init", "==", "'normal'", ":", "\n", "                    ", "init_func", "(", "m", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "0.001", ")", "\n", "", "else", ":", "\n", "                    ", "init_func", "(", "m", ".", "weight", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "", "nn", ".", "init", ".", "normal_", "(", "self", ".", "reg_layers", "[", "-", "1", "]", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pvrcnn_head.PVRCNNHead.roi_grid_pool": [[73, 119], ["pvrcnn_head.PVRCNNHead.get_global_grid_points_of_roi", "global_roi_grid_points.view.view.view", "xyz.new_zeros().int", "range", "global_roi_grid_points.view.view.view", "xyz.new_zeros().int().fill_", "pvrcnn_head.PVRCNNHead.roi_grid_pool_layer", "pooled_features.view.view.view", "batch_dict[].view", "xyz.new_zeros", "xyz.new_zeros().int", "xyz.contiguous", "point_features.contiguous", "xyz.new_zeros"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pvrcnn_head.PVRCNNHead.get_global_grid_points_of_roi"], ["", "def", "roi_grid_pool", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                rois: (B, num_rois, 7 + C)\n                point_coords: (num_points, 4)  [bs_idx, x, y, z]\n                point_features: (num_points, C)\n                point_cls_scores: (N1 + N2 + N3 + ..., 1)\n                point_part_offset: (N1 + N2 + N3 + ..., 3)\n        Returns:\n\n        \"\"\"", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "rois", "=", "batch_dict", "[", "'rois'", "]", "\n", "point_coords", "=", "batch_dict", "[", "'point_coords'", "]", "\n", "point_features", "=", "batch_dict", "[", "'point_features'", "]", "\n", "\n", "point_features", "=", "point_features", "*", "batch_dict", "[", "'point_cls_scores'", "]", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "\n", "global_roi_grid_points", ",", "local_roi_grid_points", "=", "self", ".", "get_global_grid_points_of_roi", "(", "\n", "rois", ",", "grid_size", "=", "self", ".", "model_cfg", ".", "ROI_GRID_POOL", ".", "GRID_SIZE", "\n", ")", "# (BxN, 6x6x6, 3)", "\n", "global_roi_grid_points", "=", "global_roi_grid_points", ".", "view", "(", "batch_size", ",", "-", "1", ",", "3", ")", "# (B, Nx6x6x6, 3)", "\n", "\n", "xyz", "=", "point_coords", "[", ":", ",", "1", ":", "4", "]", "\n", "xyz_batch_cnt", "=", "xyz", ".", "new_zeros", "(", "batch_size", ")", ".", "int", "(", ")", "\n", "batch_idx", "=", "point_coords", "[", ":", ",", "0", "]", "\n", "for", "k", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "xyz_batch_cnt", "[", "k", "]", "=", "(", "batch_idx", "==", "k", ")", ".", "sum", "(", ")", "\n", "\n", "", "new_xyz", "=", "global_roi_grid_points", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "new_xyz_batch_cnt", "=", "xyz", ".", "new_zeros", "(", "batch_size", ")", ".", "int", "(", ")", ".", "fill_", "(", "global_roi_grid_points", ".", "shape", "[", "1", "]", ")", "\n", "pooled_points", ",", "pooled_features", "=", "self", ".", "roi_grid_pool_layer", "(", "\n", "xyz", "=", "xyz", ".", "contiguous", "(", ")", ",", "\n", "xyz_batch_cnt", "=", "xyz_batch_cnt", ",", "\n", "new_xyz", "=", "new_xyz", ",", "\n", "new_xyz_batch_cnt", "=", "new_xyz_batch_cnt", ",", "\n", "features", "=", "point_features", ".", "contiguous", "(", ")", ",", "\n", ")", "# (M1 + M2 ..., C)", "\n", "\n", "pooled_features", "=", "pooled_features", ".", "view", "(", "\n", "-", "1", ",", "self", ".", "model_cfg", ".", "ROI_GRID_POOL", ".", "GRID_SIZE", "**", "3", ",", "\n", "pooled_features", ".", "shape", "[", "-", "1", "]", "\n", ")", "# (BxN, 6x6x6, C)", "\n", "return", "pooled_features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pvrcnn_head.PVRCNNHead.get_global_grid_points_of_roi": [[120, 131], ["rois.view.view.view", "pvrcnn_head.PVRCNNHead.get_dense_grid_points", "utils.common_utils.rotate_points_along_z().squeeze", "rois[].clone", "rois[].clone.unsqueeze", "utils.common_utils.rotate_points_along_z", "pvrcnn_head.PVRCNNHead.clone"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pvrcnn_head.PVRCNNHead.get_dense_grid_points", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z"], ["", "def", "get_global_grid_points_of_roi", "(", "self", ",", "rois", ",", "grid_size", ")", ":", "\n", "        ", "rois", "=", "rois", ".", "view", "(", "-", "1", ",", "rois", ".", "shape", "[", "-", "1", "]", ")", "\n", "batch_size_rcnn", "=", "rois", ".", "shape", "[", "0", "]", "\n", "\n", "local_roi_grid_points", "=", "self", ".", "get_dense_grid_points", "(", "rois", ",", "batch_size_rcnn", ",", "grid_size", ")", "# (B, 6x6x6, 3)", "\n", "global_roi_grid_points", "=", "common_utils", ".", "rotate_points_along_z", "(", "\n", "local_roi_grid_points", ".", "clone", "(", ")", ",", "rois", "[", ":", ",", "6", "]", "\n", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "global_center", "=", "rois", "[", ":", ",", "0", ":", "3", "]", ".", "clone", "(", ")", "\n", "global_roi_grid_points", "+=", "global_center", ".", "unsqueeze", "(", "dim", "=", "1", ")", "\n", "return", "global_roi_grid_points", ",", "local_roi_grid_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pvrcnn_head.PVRCNNHead.get_dense_grid_points": [[132, 142], ["rois.new_ones", "rois.new_ones.nonzero", "dense_idx.repeat().float.repeat().float.repeat().float", "rois.view", "dense_idx.repeat().float.repeat().float.repeat", "local_roi_size.unsqueeze", "local_roi_size.unsqueeze"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_dense_grid_points", "(", "rois", ",", "batch_size_rcnn", ",", "grid_size", ")", ":", "\n", "        ", "faked_features", "=", "rois", ".", "new_ones", "(", "(", "grid_size", ",", "grid_size", ",", "grid_size", ")", ")", "\n", "dense_idx", "=", "faked_features", ".", "nonzero", "(", ")", "# (N, 3) [x_idx, y_idx, z_idx]", "\n", "dense_idx", "=", "dense_idx", ".", "repeat", "(", "batch_size_rcnn", ",", "1", ",", "1", ")", ".", "float", "(", ")", "# (B, 6x6x6, 3)", "\n", "\n", "local_roi_size", "=", "rois", ".", "view", "(", "batch_size_rcnn", ",", "-", "1", ")", "[", ":", ",", "3", ":", "6", "]", "\n", "roi_grid_points", "=", "(", "dense_idx", "+", "0.5", ")", "/", "grid_size", "*", "local_roi_size", ".", "unsqueeze", "(", "dim", "=", "1", ")", "-", "(", "local_roi_size", ".", "unsqueeze", "(", "dim", "=", "1", ")", "/", "2", ")", "# (B, 6x6x6, 3)", "\n", "return", "roi_grid_points", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pvrcnn_head.PVRCNNHead.forward": [[143, 183], ["pvrcnn_head.PVRCNNHead.proposal_layer", "pvrcnn_head.PVRCNNHead.roi_grid_pool", "pooled_features.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "pvrcnn_head.PVRCNNHead.shared_fc_layer", "pvrcnn_head.PVRCNNHead.cls_layers().transpose().contiguous().squeeze", "pvrcnn_head.PVRCNNHead.reg_layers().transpose().contiguous().squeeze", "pvrcnn_head.PVRCNNHead.assign_targets", "pooled_features.permute().contiguous().view.permute().contiguous().view.view", "pvrcnn_head.PVRCNNHead.generate_predicted_boxes", "pooled_features.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "pvrcnn_head.PVRCNNHead.cls_layers().transpose().contiguous", "pvrcnn_head.PVRCNNHead.reg_layers().transpose().contiguous", "pooled_features.permute().contiguous().view.permute().contiguous().view.permute", "pvrcnn_head.PVRCNNHead.cls_layers().transpose", "pvrcnn_head.PVRCNNHead.reg_layers().transpose", "pvrcnn_head.PVRCNNHead.cls_layers", "pvrcnn_head.PVRCNNHead.reg_layers"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.proposal_layer", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pvrcnn_head.PVRCNNHead.roi_grid_pool", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_predicted_boxes"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        :param input_data: input dict\n        :return:\n        \"\"\"", "\n", "\n", "targets_dict", "=", "self", ".", "proposal_layer", "(", "\n", "batch_dict", ",", "nms_config", "=", "self", ".", "model_cfg", ".", "NMS_CONFIG", "[", "'TRAIN'", "if", "self", ".", "training", "else", "'TEST'", "]", "\n", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "targets_dict", "=", "self", ".", "assign_targets", "(", "batch_dict", ")", "\n", "batch_dict", "[", "'rois'", "]", "=", "targets_dict", "[", "'rois'", "]", "\n", "batch_dict", "[", "'roi_labels'", "]", "=", "targets_dict", "[", "'roi_labels'", "]", "\n", "\n", "# RoI aware pooling", "\n", "", "pooled_features", "=", "self", ".", "roi_grid_pool", "(", "batch_dict", ")", "# (BxN, 6x6x6, C)", "\n", "\n", "grid_size", "=", "self", ".", "model_cfg", ".", "ROI_GRID_POOL", ".", "GRID_SIZE", "\n", "batch_size_rcnn", "=", "pooled_features", ".", "shape", "[", "0", "]", "\n", "pooled_features", "=", "pooled_features", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size_rcnn", ",", "-", "1", ",", "grid_size", ",", "grid_size", ",", "grid_size", ")", "# (BxN, C, 6, 6, 6)", "\n", "\n", "shared_features", "=", "self", ".", "shared_fc_layer", "(", "pooled_features", ".", "view", "(", "batch_size_rcnn", ",", "-", "1", ",", "1", ")", ")", "\n", "rcnn_cls", "=", "self", ".", "cls_layers", "(", "shared_features", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "# (B, 1 or 2)", "\n", "rcnn_reg", "=", "self", ".", "reg_layers", "(", "shared_features", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "# (B, C)", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "batch_cls_preds", ",", "batch_box_preds", "=", "self", ".", "generate_predicted_boxes", "(", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", ",", "rois", "=", "batch_dict", "[", "'rois'", "]", ",", "cls_preds", "=", "rcnn_cls", ",", "box_preds", "=", "rcnn_reg", "\n", ")", "\n", "batch_dict", "[", "'batch_cls_preds'", "]", "=", "batch_cls_preds", "\n", "batch_dict", "[", "'batch_box_preds'", "]", "=", "batch_box_preds", "\n", "batch_dict", "[", "'cls_preds_normalized'", "]", "=", "False", "\n", "", "else", ":", "\n", "            ", "targets_dict", "[", "'rcnn_cls'", "]", "=", "rcnn_cls", "\n", "targets_dict", "[", "'rcnn_reg'", "]", "=", "rcnn_reg", "\n", "\n", "self", ".", "forward_ret_dict", "=", "targets_dict", "\n", "\n", "", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.__init__": [[12, 22], ["torch.Module.__init__", "target_assigner.proposal_target_layer.ProposalTargetLayer", "roi_head_template.RoIHeadTemplate.build_losses", "getattr", "roi_head_template.RoIHeadTemplate.model_cfg.TARGET_CONFIG.get"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.build_losses"], ["    ", "def", "__init__", "(", "self", ",", "num_class", ",", "model_cfg", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "box_coder", "=", "getattr", "(", "box_coder_utils", ",", "self", ".", "model_cfg", ".", "TARGET_CONFIG", ".", "BOX_CODER", ")", "(", "\n", "**", "self", ".", "model_cfg", ".", "TARGET_CONFIG", ".", "get", "(", "'BOX_CODER_CONFIG'", ",", "{", "}", ")", "\n", ")", "\n", "self", ".", "proposal_target_layer", "=", "ProposalTargetLayer", "(", "roi_sampler_cfg", "=", "self", ".", "model_cfg", ".", "TARGET_CONFIG", ")", "\n", "self", ".", "build_losses", "(", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ")", "\n", "self", ".", "forward_ret_dict", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.build_losses": [[23, 27], ["roi_head_template.RoIHeadTemplate.add_module", "utils.loss_utils.WeightedSmoothL1Loss"], "methods", ["None"], ["", "def", "build_losses", "(", "self", ",", "losses_cfg", ")", ":", "\n", "        ", "self", ".", "add_module", "(", "\n", "'reg_loss_func'", ",", "\n", "loss_utils", ".", "WeightedSmoothL1Loss", "(", "code_weights", "=", "losses_cfg", ".", "LOSS_WEIGHTS", "[", "'code_weights'", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.make_fc_layers": [[29, 44], ["range", "torch.Sequential.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "fc_list.__len__", "torch.Sequential.extend", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Sequential.append", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "def", "make_fc_layers", "(", "self", ",", "input_channels", ",", "output_channels", ",", "fc_list", ")", ":", "\n", "        ", "fc_layers", "=", "[", "]", "\n", "pre_channel", "=", "input_channels", "\n", "for", "k", "in", "range", "(", "0", ",", "fc_list", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "fc_layers", ".", "extend", "(", "[", "\n", "nn", ".", "Conv1d", "(", "pre_channel", ",", "fc_list", "[", "k", "]", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "fc_list", "[", "k", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "pre_channel", "=", "fc_list", "[", "k", "]", "\n", "if", "self", ".", "model_cfg", ".", "DP_RATIO", ">=", "0", "and", "k", "==", "0", ":", "\n", "                ", "fc_layers", ".", "append", "(", "nn", ".", "Dropout", "(", "self", ".", "model_cfg", ".", "DP_RATIO", ")", ")", "\n", "", "", "fc_layers", ".", "append", "(", "nn", ".", "Conv1d", "(", "pre_channel", ",", "output_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "fc_layers", "=", "nn", ".", "Sequential", "(", "*", "fc_layers", ")", "\n", "return", "fc_layers", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.proposal_layer": [[45, 100], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "batch_box_preds.new_zeros", "batch_box_preds.new_zeros", "batch_box_preds.new_zeros", "range", "batch_dict.pop", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "batch_dict.get", "model_utils.model_nms_utils.class_agnostic_nms", "batch_cls_preds.shape.__len__", "batch_dict[].shape.__len__", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.model_utils.model_nms_utils.class_agnostic_nms", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "proposal_layer", "(", "self", ",", "batch_dict", ",", "nms_config", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                batch_cls_preds: (B, num_boxes, num_classes | 1) or (N1+N2+..., num_classes | 1)\n                batch_box_preds: (B, num_boxes, 7+C) or (N1+N2+..., 7+C)\n                cls_preds_normalized: indicate whether batch_cls_preds is normalized\n                batch_index: optional (N1+N2+...)\n            nms_config:\n\n        Returns:\n            batch_dict:\n                rois: (B, num_rois, 7+C)\n                roi_scores: (B, num_rois)\n                roi_labels: (B, num_rois)\n\n        \"\"\"", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "batch_box_preds", "=", "batch_dict", "[", "'batch_box_preds'", "]", "\n", "batch_cls_preds", "=", "batch_dict", "[", "'batch_cls_preds'", "]", "\n", "rois", "=", "batch_box_preds", ".", "new_zeros", "(", "(", "batch_size", ",", "nms_config", ".", "NMS_POST_MAXSIZE", ",", "batch_box_preds", ".", "shape", "[", "-", "1", "]", ")", ")", "\n", "roi_scores", "=", "batch_box_preds", ".", "new_zeros", "(", "(", "batch_size", ",", "nms_config", ".", "NMS_POST_MAXSIZE", ")", ")", "\n", "roi_labels", "=", "batch_box_preds", ".", "new_zeros", "(", "(", "batch_size", ",", "nms_config", ".", "NMS_POST_MAXSIZE", ")", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "for", "index", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "if", "batch_dict", ".", "get", "(", "'batch_index'", ",", "None", ")", "is", "not", "None", ":", "\n", "                ", "assert", "batch_cls_preds", ".", "shape", ".", "__len__", "(", ")", "==", "2", "\n", "batch_mask", "=", "(", "batch_dict", "[", "'batch_index'", "]", "==", "index", ")", "\n", "", "else", ":", "\n", "                ", "assert", "batch_dict", "[", "'batch_cls_preds'", "]", ".", "shape", ".", "__len__", "(", ")", "==", "3", "\n", "batch_mask", "=", "index", "\n", "", "box_preds", "=", "batch_box_preds", "[", "batch_mask", "]", "\n", "cls_preds", "=", "batch_cls_preds", "[", "batch_mask", "]", "\n", "\n", "cur_roi_scores", ",", "cur_roi_labels", "=", "torch", ".", "max", "(", "cls_preds", ",", "dim", "=", "1", ")", "\n", "\n", "if", "nms_config", ".", "MULTI_CLASSES_NMS", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "", "else", ":", "\n", "                ", "selected", ",", "selected_scores", "=", "class_agnostic_nms", "(", "\n", "box_scores", "=", "cur_roi_scores", ",", "box_preds", "=", "box_preds", ",", "nms_config", "=", "nms_config", "\n", ")", "\n", "\n", "", "rois", "[", "index", ",", ":", "len", "(", "selected", ")", ",", ":", "]", "=", "box_preds", "[", "selected", "]", "\n", "roi_scores", "[", "index", ",", ":", "len", "(", "selected", ")", "]", "=", "cur_roi_scores", "[", "selected", "]", "\n", "roi_labels", "[", "index", ",", ":", "len", "(", "selected", ")", "]", "=", "cur_roi_labels", "[", "selected", "]", "\n", "\n", "", "batch_dict", "[", "'rois'", "]", "=", "rois", "\n", "batch_dict", "[", "'roi_scores'", "]", "=", "roi_scores", "\n", "batch_dict", "[", "'roi_labels'", "]", "=", "roi_labels", "+", "1", "\n", "batch_dict", "[", "'has_class_labels'", "]", "=", "True", "if", "batch_cls_preds", ".", "shape", "[", "-", "1", "]", ">", "1", "else", "False", "\n", "batch_dict", ".", "pop", "(", "'batch_index'", ",", "None", ")", "\n", "return", "batch_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.assign_targets": [[101, 132], ["utils.common_utils.rotate_points_along_z().view.clone().detach", "utils.common_utils.rotate_points_along_z().view", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "roi_head_template.RoIHeadTemplate.proposal_target_layer.forward", "utils.common_utils.rotate_points_along_z().view.clone", "utils.common_utils.rotate_points_along_z", "utils.common_utils.rotate_points_along_z().view.view", "roi_ry.view"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z"], ["", "def", "assign_targets", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "targets_dict", "=", "self", ".", "proposal_target_layer", ".", "forward", "(", "batch_dict", ")", "\n", "\n", "", "rois", "=", "targets_dict", "[", "'rois'", "]", "# (B, N, 7 + C)", "\n", "gt_of_rois", "=", "targets_dict", "[", "'gt_of_rois'", "]", "# (B, N, 7 + C + 1)", "\n", "targets_dict", "[", "'gt_of_rois_src'", "]", "=", "gt_of_rois", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "\n", "# canonical transformation", "\n", "roi_center", "=", "rois", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "roi_ry", "=", "rois", "[", ":", ",", ":", ",", "6", "]", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "gt_of_rois", "[", ":", ",", ":", ",", "0", ":", "3", "]", "=", "gt_of_rois", "[", ":", ",", ":", ",", "0", ":", "3", "]", "-", "roi_center", "\n", "gt_of_rois", "[", ":", ",", ":", ",", "6", "]", "=", "gt_of_rois", "[", ":", ",", ":", ",", "6", "]", "-", "roi_ry", "\n", "\n", "# transfer LiDAR coords to local coords", "\n", "gt_of_rois", "=", "common_utils", ".", "rotate_points_along_z", "(", "\n", "points", "=", "gt_of_rois", ".", "view", "(", "-", "1", ",", "1", ",", "gt_of_rois", ".", "shape", "[", "-", "1", "]", ")", ",", "angle", "=", "-", "roi_ry", ".", "view", "(", "-", "1", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "gt_of_rois", ".", "shape", "[", "-", "1", "]", ")", "\n", "\n", "# flip orientation if rois have opposite orientation", "\n", "heading_label", "=", "gt_of_rois", "[", ":", ",", ":", ",", "6", "]", "%", "(", "2", "*", "np", ".", "pi", ")", "# 0 ~ 2pi", "\n", "opposite_flag", "=", "(", "heading_label", ">", "np", ".", "pi", "*", "0.5", ")", "&", "(", "heading_label", "<", "np", ".", "pi", "*", "1.5", ")", "\n", "heading_label", "[", "opposite_flag", "]", "=", "(", "heading_label", "[", "opposite_flag", "]", "+", "np", ".", "pi", ")", "%", "(", "2", "*", "np", ".", "pi", ")", "# (0 ~ pi/2, 3pi/2 ~ 2pi)", "\n", "flag", "=", "heading_label", ">", "np", ".", "pi", "\n", "heading_label", "[", "flag", "]", "=", "heading_label", "[", "flag", "]", "-", "np", ".", "pi", "*", "2", "# (-pi/2, pi/2)", "\n", "heading_label", "=", "torch", ".", "clamp", "(", "heading_label", ",", "min", "=", "-", "np", ".", "pi", "/", "2", ",", "max", "=", "np", ".", "pi", "/", "2", ")", "\n", "\n", "gt_of_rois", "[", ":", ",", ":", ",", "6", "]", "=", "heading_label", "\n", "targets_dict", "[", "'gt_of_rois'", "]", "=", "gt_of_rois", "\n", "return", "targets_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.get_box_reg_layer_loss": [[133, 196], ["forward_ret_dict[].view", "[].view", "fg_mask.long().sum().item", "roi_boxes3d.clone().detach().view", "roi_head_template.RoIHeadTemplate.box_coder.encode_torch", "roi_head_template.RoIHeadTemplate.reg_loss_func", "roi_head_template.RoIHeadTemplate.item", "gt_boxes3d_ct.view", "fg_mask.long().sum", "gt_boxes3d_ct.view", "rcnn_reg.view().unsqueeze", "roi_head_template.RoIHeadTemplate.unsqueeze", "max", "fg_roi_boxes3d.view.view.view", "fg_roi_boxes3d.view.view.clone().detach", "fg_roi_boxes3d[].view", "fg_roi_boxes3d[].view", "roi_head_template.RoIHeadTemplate.box_coder.decode_torch().view", "utils.common_utils.rotate_points_along_z().squeeze", "utils.loss_utils.get_corner_loss_lidar", "loss_corner.mean.mean.mean", "loss_corner.mean.mean.item", "roi_boxes3d.clone().detach", "rcnn_reg.view", "roi_boxes3d.view", "fg_mask.long", "rcnn_reg.view", "fg_roi_boxes3d.view.view.clone", "roi_head_template.RoIHeadTemplate.box_coder.decode_torch", "utils.common_utils.rotate_points_along_z", "roi_boxes3d.clone", "roi_head_template.RoIHeadTemplate.view", "fg_mask.unsqueeze().float", "fg_rcnn_reg.view", "utils.common_utils.rotate_points_along_z().squeeze.unsqueeze", "fg_mask.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.encode_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.loss_utils.get_corner_loss_lidar", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.decode_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z"], ["", "def", "get_box_reg_layer_loss", "(", "self", ",", "forward_ret_dict", ")", ":", "\n", "        ", "loss_cfgs", "=", "self", ".", "model_cfg", ".", "LOSS_CONFIG", "\n", "code_size", "=", "self", ".", "box_coder", ".", "code_size", "\n", "reg_valid_mask", "=", "forward_ret_dict", "[", "'reg_valid_mask'", "]", ".", "view", "(", "-", "1", ")", "\n", "gt_boxes3d_ct", "=", "forward_ret_dict", "[", "'gt_of_rois'", "]", "[", "...", ",", "0", ":", "code_size", "]", "\n", "gt_of_rois_src", "=", "forward_ret_dict", "[", "'gt_of_rois_src'", "]", "[", "...", ",", "0", ":", "code_size", "]", ".", "view", "(", "-", "1", ",", "code_size", ")", "\n", "rcnn_reg", "=", "forward_ret_dict", "[", "'rcnn_reg'", "]", "# (rcnn_batch_size, C)", "\n", "roi_boxes3d", "=", "forward_ret_dict", "[", "'rois'", "]", "\n", "rcnn_batch_size", "=", "gt_boxes3d_ct", ".", "view", "(", "-", "1", ",", "code_size", ")", ".", "shape", "[", "0", "]", "\n", "\n", "fg_mask", "=", "(", "reg_valid_mask", ">", "0", ")", "\n", "fg_sum", "=", "fg_mask", ".", "long", "(", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "tb_dict", "=", "{", "}", "\n", "\n", "if", "loss_cfgs", ".", "REG_LOSS", "==", "'smooth-l1'", ":", "\n", "            ", "rois_anchor", "=", "roi_boxes3d", ".", "clone", "(", ")", ".", "detach", "(", ")", ".", "view", "(", "-", "1", ",", "code_size", ")", "\n", "rois_anchor", "[", ":", ",", "0", ":", "3", "]", "=", "0", "\n", "rois_anchor", "[", ":", ",", "6", "]", "=", "0", "\n", "reg_targets", "=", "self", ".", "box_coder", ".", "encode_torch", "(", "\n", "gt_boxes3d_ct", ".", "view", "(", "rcnn_batch_size", ",", "code_size", ")", ",", "rois_anchor", "\n", ")", "\n", "\n", "rcnn_loss_reg", "=", "self", ".", "reg_loss_func", "(", "\n", "rcnn_reg", ".", "view", "(", "rcnn_batch_size", ",", "-", "1", ")", ".", "unsqueeze", "(", "dim", "=", "0", ")", ",", "\n", "reg_targets", ".", "unsqueeze", "(", "dim", "=", "0", ")", ",", "\n", ")", "# [B, M, 7]", "\n", "rcnn_loss_reg", "=", "(", "rcnn_loss_reg", ".", "view", "(", "rcnn_batch_size", ",", "-", "1", ")", "*", "fg_mask", ".", "unsqueeze", "(", "dim", "=", "-", "1", ")", ".", "float", "(", ")", ")", ".", "sum", "(", ")", "/", "max", "(", "fg_sum", ",", "1", ")", "\n", "rcnn_loss_reg", "=", "rcnn_loss_reg", "*", "loss_cfgs", ".", "LOSS_WEIGHTS", "[", "'rcnn_reg_weight'", "]", "\n", "tb_dict", "[", "'rcnn_loss_reg'", "]", "=", "rcnn_loss_reg", ".", "item", "(", ")", "\n", "\n", "if", "loss_cfgs", ".", "CORNER_LOSS_REGULARIZATION", "and", "fg_sum", ">", "0", ":", "\n", "# TODO: NEED to BE CHECK", "\n", "                ", "fg_rcnn_reg", "=", "rcnn_reg", ".", "view", "(", "rcnn_batch_size", ",", "-", "1", ")", "[", "fg_mask", "]", "\n", "fg_roi_boxes3d", "=", "roi_boxes3d", ".", "view", "(", "-", "1", ",", "code_size", ")", "[", "fg_mask", "]", "\n", "\n", "fg_roi_boxes3d", "=", "fg_roi_boxes3d", ".", "view", "(", "1", ",", "-", "1", ",", "code_size", ")", "\n", "batch_anchors", "=", "fg_roi_boxes3d", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "roi_ry", "=", "fg_roi_boxes3d", "[", ":", ",", ":", ",", "6", "]", ".", "view", "(", "-", "1", ")", "\n", "roi_xyz", "=", "fg_roi_boxes3d", "[", ":", ",", ":", ",", "0", ":", "3", "]", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "batch_anchors", "[", ":", ",", ":", ",", "0", ":", "3", "]", "=", "0", "\n", "rcnn_boxes3d", "=", "self", ".", "box_coder", ".", "decode_torch", "(", "\n", "fg_rcnn_reg", ".", "view", "(", "batch_anchors", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "code_size", ")", ",", "batch_anchors", "\n", ")", ".", "view", "(", "-", "1", ",", "code_size", ")", "\n", "\n", "rcnn_boxes3d", "=", "common_utils", ".", "rotate_points_along_z", "(", "\n", "rcnn_boxes3d", ".", "unsqueeze", "(", "dim", "=", "1", ")", ",", "roi_ry", "\n", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "rcnn_boxes3d", "[", ":", ",", "0", ":", "3", "]", "+=", "roi_xyz", "\n", "\n", "loss_corner", "=", "loss_utils", ".", "get_corner_loss_lidar", "(", "\n", "rcnn_boxes3d", "[", ":", ",", "0", ":", "7", "]", ",", "\n", "gt_of_rois_src", "[", "fg_mask", "]", "[", ":", ",", "0", ":", "7", "]", "\n", ")", "\n", "loss_corner", "=", "loss_corner", ".", "mean", "(", ")", "\n", "loss_corner", "=", "loss_corner", "*", "loss_cfgs", ".", "LOSS_WEIGHTS", "[", "'rcnn_corner_weight'", "]", "\n", "\n", "rcnn_loss_reg", "+=", "loss_corner", "\n", "tb_dict", "[", "'rcnn_loss_corner'", "]", "=", "loss_corner", ".", "item", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "return", "rcnn_loss_reg", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.get_box_cls_layer_loss": [[197, 216], ["forward_ret_dict[].view", "rcnn_cls.view", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "rcnn_loss_cls.item", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "forward_ret_dict[].view.float", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "cls_valid_mask.sum", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "cls_valid_mask.sum"], "methods", ["None"], ["", "def", "get_box_cls_layer_loss", "(", "self", ",", "forward_ret_dict", ")", ":", "\n", "        ", "loss_cfgs", "=", "self", ".", "model_cfg", ".", "LOSS_CONFIG", "\n", "rcnn_cls", "=", "forward_ret_dict", "[", "'rcnn_cls'", "]", "\n", "rcnn_cls_labels", "=", "forward_ret_dict", "[", "'rcnn_cls_labels'", "]", ".", "view", "(", "-", "1", ")", "\n", "if", "loss_cfgs", ".", "CLS_LOSS", "==", "'BinaryCrossEntropy'", ":", "\n", "            ", "rcnn_cls_flat", "=", "rcnn_cls", ".", "view", "(", "-", "1", ")", "\n", "batch_loss_cls", "=", "F", ".", "binary_cross_entropy", "(", "torch", ".", "sigmoid", "(", "rcnn_cls_flat", ")", ",", "rcnn_cls_labels", ".", "float", "(", ")", ",", "reduction", "=", "'none'", ")", "\n", "cls_valid_mask", "=", "(", "rcnn_cls_labels", ">=", "0", ")", ".", "float", "(", ")", "\n", "rcnn_loss_cls", "=", "(", "batch_loss_cls", "*", "cls_valid_mask", ")", ".", "sum", "(", ")", "/", "torch", ".", "clamp", "(", "cls_valid_mask", ".", "sum", "(", ")", ",", "min", "=", "1.0", ")", "\n", "", "elif", "loss_cfgs", ".", "CLS_LOSS", "==", "'CrossEntropy'", ":", "\n", "            ", "batch_loss_cls", "=", "F", ".", "cross_entropy", "(", "rcnn_cls", ",", "rcnn_cls_labels", ",", "reduction", "=", "'none'", ",", "ignore_index", "=", "-", "1", ")", "\n", "cls_valid_mask", "=", "(", "rcnn_cls_labels", ">=", "0", ")", ".", "float", "(", ")", "\n", "rcnn_loss_cls", "=", "(", "batch_loss_cls", "*", "cls_valid_mask", ")", ".", "sum", "(", ")", "/", "torch", ".", "clamp", "(", "cls_valid_mask", ".", "sum", "(", ")", ",", "min", "=", "1.0", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "rcnn_loss_cls", "=", "rcnn_loss_cls", "*", "loss_cfgs", ".", "LOSS_WEIGHTS", "[", "'rcnn_cls_weight'", "]", "\n", "tb_dict", "=", "{", "'rcnn_loss_cls'", ":", "rcnn_loss_cls", ".", "item", "(", ")", "}", "\n", "return", "rcnn_loss_cls", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.get_loss": [[217, 229], ["roi_head_template.RoIHeadTemplate.get_box_cls_layer_loss", "tb_dict.update", "roi_head_template.RoIHeadTemplate.get_box_reg_layer_loss", "tb_dict.update", "rcnn_loss.item"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.get_box_cls_layer_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.get_box_reg_layer_loss"], ["", "def", "get_loss", "(", "self", ",", "tb_dict", "=", "None", ")", ":", "\n", "        ", "tb_dict", "=", "{", "}", "if", "tb_dict", "is", "None", "else", "tb_dict", "\n", "rcnn_loss", "=", "0", "\n", "rcnn_loss_cls", ",", "cls_tb_dict", "=", "self", ".", "get_box_cls_layer_loss", "(", "self", ".", "forward_ret_dict", ")", "\n", "rcnn_loss", "+=", "rcnn_loss_cls", "\n", "tb_dict", ".", "update", "(", "cls_tb_dict", ")", "\n", "\n", "rcnn_loss_reg", ",", "reg_tb_dict", "=", "self", ".", "get_box_reg_layer_loss", "(", "self", ".", "forward_ret_dict", ")", "\n", "rcnn_loss", "+=", "rcnn_loss_reg", "\n", "tb_dict", ".", "update", "(", "reg_tb_dict", ")", "\n", "tb_dict", "[", "'rcnn_loss'", "]", "=", "rcnn_loss", ".", "item", "(", ")", "\n", "return", "rcnn_loss", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.generate_predicted_boxes": [[230, 259], ["cls_preds.view", "box_preds.view", "rois[].view", "rois[].view", "rois.clone().detach", "roi_head_template.RoIHeadTemplate.box_coder.decode_torch().view", "utils.common_utils.rotate_points_along_z().squeeze", "batch_box_preds.view.view.view", "rois.clone", "roi_head_template.RoIHeadTemplate.box_coder.decode_torch", "utils.common_utils.rotate_points_along_z", "batch_box_preds.view.view.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.decode_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z"], ["", "def", "generate_predicted_boxes", "(", "self", ",", "batch_size", ",", "rois", ",", "cls_preds", ",", "box_preds", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_size:\n            rois: (B, N, 7)\n            cls_preds: (BN, num_class)\n            box_preds: (BN, code_size)\n\n        Returns:\n\n        \"\"\"", "\n", "code_size", "=", "self", ".", "box_coder", ".", "code_size", "\n", "# batch_cls_preds: (B, N, num_class or 1)", "\n", "batch_cls_preds", "=", "cls_preds", ".", "view", "(", "batch_size", ",", "-", "1", ",", "cls_preds", ".", "shape", "[", "-", "1", "]", ")", "\n", "batch_box_preds", "=", "box_preds", ".", "view", "(", "batch_size", ",", "-", "1", ",", "code_size", ")", "\n", "\n", "roi_ry", "=", "rois", "[", ":", ",", ":", ",", "6", "]", ".", "view", "(", "-", "1", ")", "\n", "roi_xyz", "=", "rois", "[", ":", ",", ":", ",", "0", ":", "3", "]", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "local_rois", "=", "rois", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "local_rois", "[", ":", ",", ":", ",", "0", ":", "3", "]", "=", "0", "\n", "\n", "batch_box_preds", "=", "self", ".", "box_coder", ".", "decode_torch", "(", "batch_box_preds", ",", "local_rois", ")", ".", "view", "(", "-", "1", ",", "code_size", ")", "\n", "\n", "batch_box_preds", "=", "common_utils", ".", "rotate_points_along_z", "(", "\n", "batch_box_preds", ".", "unsqueeze", "(", "dim", "=", "1", ")", ",", "roi_ry", "\n", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "batch_box_preds", "[", ":", ",", "0", ":", "3", "]", "+=", "roi_xyz", "\n", "batch_box_preds", "=", "batch_box_preds", ".", "view", "(", "batch_size", ",", "-", "1", ",", "code_size", ")", "\n", "return", "batch_cls_preds", ",", "batch_box_preds", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.partA2_head.PartA2FCHead.__init__": [[11, 58], ["roi_head_template.RoIHeadTemplate.__init__", "torch.ModuleList", "torch.ModuleList", "spconv.SparseSequential", "spconv.SparseSequential", "range", "torch.Sequential", "torch.Sequential", "partA2_head.PartA2FCHead.make_fc_layers", "partA2_head.PartA2FCHead.make_fc_layers", "ops.roiaware_pool3d.roiaware_pool3d_utils.RoIAwarePool3d", "partA2_head.PartA2FCHead.init_weights", "block", "block", "block", "block", "partA2_head.PartA2FCHead.model_cfg.SHARED_FC.__len__", "shared_fc_list.extend", "shared_fc_list.append", "torch.Conv1d", "torch.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "partA2_head.PartA2FCHead.model_cfg.SHARED_FC.__len__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.SingleHead.init_weights", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "model_cfg", ",", "num_class", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "num_class", "=", "num_class", ",", "model_cfg", "=", "model_cfg", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "\n", "self", ".", "SA_modules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "block", "=", "self", ".", "post_act_block", "\n", "\n", "c0", "=", "self", ".", "model_cfg", ".", "ROI_AWARE_POOL", ".", "NUM_FEATURES", "//", "2", "\n", "self", ".", "conv_part", "=", "spconv", ".", "SparseSequential", "(", "\n", "block", "(", "4", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "indice_key", "=", "'rcnn_subm1'", ")", ",", "\n", "block", "(", "64", ",", "c0", ",", "3", ",", "padding", "=", "1", ",", "indice_key", "=", "'rcnn_subm1_1'", ")", ",", "\n", ")", "\n", "self", ".", "conv_rpn", "=", "spconv", ".", "SparseSequential", "(", "\n", "block", "(", "input_channels", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "indice_key", "=", "'rcnn_subm2'", ")", ",", "\n", "block", "(", "64", ",", "c0", ",", "3", ",", "padding", "=", "1", ",", "indice_key", "=", "'rcnn_subm1_2'", ")", ",", "\n", ")", "\n", "\n", "shared_fc_list", "=", "[", "]", "\n", "pool_size", "=", "self", ".", "model_cfg", ".", "ROI_AWARE_POOL", ".", "POOL_SIZE", "\n", "pre_channel", "=", "self", ".", "model_cfg", ".", "ROI_AWARE_POOL", ".", "NUM_FEATURES", "*", "pool_size", "*", "pool_size", "*", "pool_size", "\n", "for", "k", "in", "range", "(", "0", ",", "self", ".", "model_cfg", ".", "SHARED_FC", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "shared_fc_list", ".", "extend", "(", "[", "\n", "nn", ".", "Conv1d", "(", "pre_channel", ",", "self", ".", "model_cfg", ".", "SHARED_FC", "[", "k", "]", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "self", ".", "model_cfg", ".", "SHARED_FC", "[", "k", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "pre_channel", "=", "self", ".", "model_cfg", ".", "SHARED_FC", "[", "k", "]", "\n", "\n", "if", "k", "!=", "self", ".", "model_cfg", ".", "SHARED_FC", ".", "__len__", "(", ")", "-", "1", "and", "self", ".", "model_cfg", ".", "DP_RATIO", ">", "0", ":", "\n", "                ", "shared_fc_list", ".", "append", "(", "nn", ".", "Dropout", "(", "self", ".", "model_cfg", ".", "DP_RATIO", ")", ")", "\n", "\n", "", "", "self", ".", "shared_fc_layer", "=", "nn", ".", "Sequential", "(", "*", "shared_fc_list", ")", "\n", "\n", "self", ".", "cls_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "input_channels", "=", "pre_channel", ",", "output_channels", "=", "self", ".", "num_class", ",", "fc_list", "=", "self", ".", "model_cfg", ".", "CLS_FC", "\n", ")", "\n", "self", ".", "reg_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "input_channels", "=", "pre_channel", ",", "\n", "output_channels", "=", "self", ".", "box_coder", ".", "code_size", "*", "self", ".", "num_class", ",", "\n", "fc_list", "=", "self", ".", "model_cfg", ".", "REG_FC", "\n", ")", "\n", "\n", "self", ".", "roiaware_pool3d_layer", "=", "roiaware_pool3d_utils", ".", "RoIAwarePool3d", "(", "\n", "out_size", "=", "self", ".", "model_cfg", ".", "ROI_AWARE_POOL", ".", "POOL_SIZE", ",", "\n", "max_pts_each_voxel", "=", "self", ".", "model_cfg", ".", "ROI_AWARE_POOL", ".", "MAX_POINTS_PER_VOXEL", "\n", ")", "\n", "self", ".", "init_weights", "(", "weight_init", "=", "'xavier'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.partA2_head.PartA2FCHead.init_weights": [[59, 78], ["partA2_head.PartA2FCHead.modules", "torch.init.normal_", "torch.init.normal_", "isinstance", "isinstance", "init_func", "init_func", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "weight_init", "=", "'xavier'", ")", ":", "\n", "        ", "if", "weight_init", "==", "'kaiming'", ":", "\n", "            ", "init_func", "=", "nn", ".", "init", ".", "kaiming_normal_", "\n", "", "elif", "weight_init", "==", "'xavier'", ":", "\n", "            ", "init_func", "=", "nn", ".", "init", ".", "xavier_normal_", "\n", "", "elif", "weight_init", "==", "'normal'", ":", "\n", "            ", "init_func", "=", "nn", ".", "init", ".", "normal_", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Conv1d", ")", ":", "\n", "                ", "if", "weight_init", "==", "'normal'", ":", "\n", "                    ", "init_func", "(", "m", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "0.001", ")", "\n", "", "else", ":", "\n", "                    ", "init_func", "(", "m", ".", "weight", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "", "nn", ".", "init", ".", "normal_", "(", "self", ".", "reg_layers", "[", "-", "1", "]", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.partA2_head.PartA2FCHead.post_act_block": [[79, 103], ["spconv.SparseSequential", "spconv.SubMConv3d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "spconv.SparseSequential", "spconv.SparseConv3d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "spconv.SparseSequential", "spconv.SparseInverseConv3d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "post_act_block", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "indice_key", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "conv_type", "=", "'subm'", ")", ":", "\n", "        ", "if", "conv_type", "==", "'subm'", ":", "\n", "            ", "m", "=", "spconv", ".", "SparseSequential", "(", "\n", "spconv", ".", "SubMConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "out_channels", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "", "elif", "conv_type", "==", "'spconv'", ":", "\n", "            ", "m", "=", "spconv", ".", "SparseSequential", "(", "\n", "spconv", ".", "SparseConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "\n", "bias", "=", "False", ",", "indice_key", "=", "indice_key", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "out_channels", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "", "elif", "conv_type", "==", "'inverseconv'", ":", "\n", "            ", "m", "=", "spconv", ".", "SparseSequential", "(", "\n", "spconv", ".", "SparseInverseConv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "indice_key", "=", "indice_key", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "out_channels", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.partA2_head.PartA2FCHead.roiaware_pool": [[104, 152], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "[].contiguous", "partA2_head.PartA2FCHead.roiaware_pool3d_layer.forward", "partA2_head.PartA2FCHead.roiaware_pool3d_layer.forward", "pooled_part_features_list.append", "pooled_rpn_features_list.append", "batch_dict[].view().detach", "partA2_head.PartA2FCHead.model_cfg.get", "batch_dict[].view"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward"], ["", "def", "roiaware_pool", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                rois: (B, num_rois, 7 + C)\n                point_coords: (num_points, 4)  [bs_idx, x, y, z]\n                point_features: (num_points, C)\n                point_cls_scores: (N1 + N2 + N3 + ..., 1)\n                point_part_offset: (N1 + N2 + N3 + ..., 3)\n        Returns:\n\n        \"\"\"", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "batch_idx", "=", "batch_dict", "[", "'point_coords'", "]", "[", ":", ",", "0", "]", "\n", "point_coords", "=", "batch_dict", "[", "'point_coords'", "]", "[", ":", ",", "1", ":", "4", "]", "\n", "point_features", "=", "batch_dict", "[", "'point_features'", "]", "\n", "part_features", "=", "torch", ".", "cat", "(", "(", "\n", "batch_dict", "[", "'point_part_offset'", "]", "if", "not", "self", ".", "model_cfg", ".", "get", "(", "'DISABLE_PART'", ",", "False", ")", "else", "point_coords", ",", "\n", "batch_dict", "[", "'point_cls_scores'", "]", ".", "view", "(", "-", "1", ",", "1", ")", ".", "detach", "(", ")", "\n", ")", ",", "dim", "=", "1", ")", "\n", "part_features", "[", "part_features", "[", ":", ",", "-", "1", "]", "<", "self", ".", "model_cfg", ".", "SEG_MASK_SCORE_THRESH", ",", "0", ":", "3", "]", "=", "0", "\n", "\n", "rois", "=", "batch_dict", "[", "'rois'", "]", "\n", "\n", "pooled_part_features_list", ",", "pooled_rpn_features_list", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "bs_idx", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "bs_mask", "=", "(", "batch_idx", "==", "bs_idx", ")", "\n", "cur_point_coords", "=", "point_coords", "[", "bs_mask", "]", "\n", "cur_part_features", "=", "part_features", "[", "bs_mask", "]", "\n", "cur_rpn_features", "=", "point_features", "[", "bs_mask", "]", "\n", "cur_roi", "=", "rois", "[", "bs_idx", "]", "[", ":", ",", "0", ":", "7", "]", ".", "contiguous", "(", ")", "# (N, 7)", "\n", "\n", "pooled_part_features", "=", "self", ".", "roiaware_pool3d_layer", ".", "forward", "(", "\n", "cur_roi", ",", "cur_point_coords", ",", "cur_part_features", ",", "pool_method", "=", "'avg'", "\n", ")", "# (N, out_x, out_y, out_z, 4)", "\n", "pooled_rpn_features", "=", "self", ".", "roiaware_pool3d_layer", ".", "forward", "(", "\n", "cur_roi", ",", "cur_point_coords", ",", "cur_rpn_features", ",", "pool_method", "=", "'max'", "\n", ")", "# (N, out_x, out_y, out_z, C)", "\n", "\n", "pooled_part_features_list", ".", "append", "(", "pooled_part_features", ")", "\n", "pooled_rpn_features_list", ".", "append", "(", "pooled_rpn_features", ")", "\n", "\n", "", "pooled_part_features", "=", "torch", ".", "cat", "(", "pooled_part_features_list", ",", "dim", "=", "0", ")", "# (B * N, out_x, out_y, out_z, 4)", "\n", "pooled_rpn_features", "=", "torch", ".", "cat", "(", "pooled_rpn_features_list", ",", "dim", "=", "0", ")", "# (B * N, out_x, out_y, out_z, C)", "\n", "\n", "return", "pooled_part_features", ",", "pooled_rpn_features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.partA2_head.PartA2FCHead.fake_sparse_idx": [[153, 162], ["print", "torch.cat.new_zeros", "torch.cat.new_zeros", "torch.arange().type_as().view", "torch.arange().type_as().view", "torch.arange().type_as().view", "torch.arange().type_as().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "str", "torch.arange().type_as", "torch.arange().type_as", "torch.arange().type_as", "torch.arange().type_as", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fake_sparse_idx", "(", "sparse_idx", ",", "batch_size_rcnn", ")", ":", "\n", "        ", "print", "(", "'Warning: Sparse_Idx_Shape(%s) \\r'", "%", "(", "str", "(", "sparse_idx", ".", "shape", ")", ")", ",", "end", "=", "''", ",", "flush", "=", "True", ")", "\n", "# at most one sample is non-empty, then fake the first voxels of each sample(BN needs at least", "\n", "# two values each channel) as non-empty for the below calculation", "\n", "sparse_idx", "=", "sparse_idx", ".", "new_zeros", "(", "(", "batch_size_rcnn", ",", "3", ")", ")", "\n", "bs_idxs", "=", "torch", ".", "arange", "(", "batch_size_rcnn", ")", ".", "type_as", "(", "sparse_idx", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "sparse_idx", "=", "torch", ".", "cat", "(", "(", "bs_idxs", ",", "sparse_idx", ")", ",", "dim", "=", "1", ")", "\n", "return", "sparse_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.partA2_head.PartA2FCHead.forward": [[163, 225], ["partA2_head.PartA2FCHead.proposal_layer", "partA2_head.PartA2FCHead.roiaware_pool", "numpy.array", "pooled_part_features.sum().nonzero", "partA2_head.PartA2FCHead.int", "spconv.SparseConvTensor", "spconv.SparseConvTensor", "partA2_head.PartA2FCHead.conv_part", "partA2_head.PartA2FCHead.conv_rpn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "spconv.SparseConvTensor", "partA2_head.PartA2FCHead.dense().view", "partA2_head.PartA2FCHead.shared_fc_layer", "partA2_head.PartA2FCHead.cls_layers().transpose().contiguous().squeeze", "partA2_head.PartA2FCHead.reg_layers().transpose().contiguous().squeeze", "partA2_head.PartA2FCHead.assign_targets", "partA2_head.PartA2FCHead.fake_sparse_idx", "partA2_head.PartA2FCHead.generate_predicted_boxes", "pooled_part_features.sum", "targets_dict[].fill_", "targets_dict[].fill_", "partA2_head.PartA2FCHead.dense", "partA2_head.PartA2FCHead.cls_layers().transpose().contiguous", "partA2_head.PartA2FCHead.reg_layers().transpose().contiguous", "partA2_head.PartA2FCHead.cls_layers().transpose", "partA2_head.PartA2FCHead.reg_layers().transpose", "partA2_head.PartA2FCHead.cls_layers", "partA2_head.PartA2FCHead.reg_layers"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.proposal_layer", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.partA2_head.PartA2FCHead.roiaware_pool", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.partA2_head.PartA2FCHead.fake_sparse_idx", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_predicted_boxes"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n\n        Returns:\n\n        \"\"\"", "\n", "targets_dict", "=", "self", ".", "proposal_layer", "(", "\n", "batch_dict", ",", "nms_config", "=", "self", ".", "model_cfg", ".", "NMS_CONFIG", "[", "'TRAIN'", "if", "self", ".", "training", "else", "'TEST'", "]", "\n", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "targets_dict", "=", "self", ".", "assign_targets", "(", "batch_dict", ")", "\n", "batch_dict", "[", "'rois'", "]", "=", "targets_dict", "[", "'rois'", "]", "\n", "batch_dict", "[", "'roi_labels'", "]", "=", "targets_dict", "[", "'roi_labels'", "]", "\n", "\n", "# RoI aware pooling", "\n", "", "pooled_part_features", ",", "pooled_rpn_features", "=", "self", ".", "roiaware_pool", "(", "batch_dict", ")", "\n", "batch_size_rcnn", "=", "pooled_part_features", ".", "shape", "[", "0", "]", "# (B * N, out_x, out_y, out_z, 4)", "\n", "\n", "# transform to sparse tensors", "\n", "sparse_shape", "=", "np", ".", "array", "(", "pooled_part_features", ".", "shape", "[", "1", ":", "4", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "sparse_idx", "=", "pooled_part_features", ".", "sum", "(", "dim", "=", "-", "1", ")", ".", "nonzero", "(", ")", "# (non_empty_num, 4) ==> [bs_idx, x_idx, y_idx, z_idx]", "\n", "if", "sparse_idx", ".", "shape", "[", "0", "]", "<", "3", ":", "\n", "            ", "sparse_idx", "=", "self", ".", "fake_sparse_idx", "(", "sparse_idx", ",", "batch_size_rcnn", ")", "\n", "if", "self", ".", "training", ":", "\n", "# these are invalid samples", "\n", "                ", "targets_dict", "[", "'rcnn_cls_labels'", "]", ".", "fill_", "(", "-", "1", ")", "\n", "targets_dict", "[", "'reg_valid_mask'", "]", ".", "fill_", "(", "-", "1", ")", "\n", "\n", "", "", "part_features", "=", "pooled_part_features", "[", "sparse_idx", "[", ":", ",", "0", "]", ",", "sparse_idx", "[", ":", ",", "1", "]", ",", "sparse_idx", "[", ":", ",", "2", "]", ",", "sparse_idx", "[", ":", ",", "3", "]", "]", "\n", "rpn_features", "=", "pooled_rpn_features", "[", "sparse_idx", "[", ":", ",", "0", "]", ",", "sparse_idx", "[", ":", ",", "1", "]", ",", "sparse_idx", "[", ":", ",", "2", "]", ",", "sparse_idx", "[", ":", ",", "3", "]", "]", "\n", "coords", "=", "sparse_idx", ".", "int", "(", ")", "\n", "part_features", "=", "spconv", ".", "SparseConvTensor", "(", "part_features", ",", "coords", ",", "sparse_shape", ",", "batch_size_rcnn", ")", "\n", "rpn_features", "=", "spconv", ".", "SparseConvTensor", "(", "rpn_features", ",", "coords", ",", "sparse_shape", ",", "batch_size_rcnn", ")", "\n", "\n", "# forward rcnn network", "\n", "x_part", "=", "self", ".", "conv_part", "(", "part_features", ")", "\n", "x_rpn", "=", "self", ".", "conv_rpn", "(", "rpn_features", ")", "\n", "\n", "merged_feature", "=", "torch", ".", "cat", "(", "(", "x_rpn", ".", "features", ",", "x_part", ".", "features", ")", ",", "dim", "=", "1", ")", "# (N, C)", "\n", "shared_feature", "=", "spconv", ".", "SparseConvTensor", "(", "merged_feature", ",", "coords", ",", "sparse_shape", ",", "batch_size_rcnn", ")", "\n", "shared_feature", "=", "shared_feature", ".", "dense", "(", ")", ".", "view", "(", "batch_size_rcnn", ",", "-", "1", ",", "1", ")", "\n", "\n", "shared_feature", "=", "self", ".", "shared_fc_layer", "(", "shared_feature", ")", "\n", "\n", "rcnn_cls", "=", "self", ".", "cls_layers", "(", "shared_feature", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "# (B, 1 or 2)", "\n", "rcnn_reg", "=", "self", ".", "reg_layers", "(", "shared_feature", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "# (B, C)", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "batch_cls_preds", ",", "batch_box_preds", "=", "self", ".", "generate_predicted_boxes", "(", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", ",", "rois", "=", "batch_dict", "[", "'rois'", "]", ",", "cls_preds", "=", "rcnn_cls", ",", "box_preds", "=", "rcnn_reg", "\n", ")", "\n", "batch_dict", "[", "'batch_cls_preds'", "]", "=", "batch_cls_preds", "\n", "batch_dict", "[", "'batch_box_preds'", "]", "=", "batch_box_preds", "\n", "batch_dict", "[", "'cls_preds_normalized'", "]", "=", "False", "\n", "", "else", ":", "\n", "            ", "targets_dict", "[", "'rcnn_cls'", "]", "=", "rcnn_cls", "\n", "targets_dict", "[", "'rcnn_reg'", "]", "=", "rcnn_reg", "\n", "\n", "self", ".", "forward_ret_dict", "=", "targets_dict", "\n", "", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pointrcnn_head.PointRCNNHead.__init__": [[11, 64], ["roi_head_template.RoIHeadTemplate.__init__", "torch.ModuleList", "torch.ModuleList", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "pointrcnn_head.PointRCNNHead.make_fc_layers", "pointrcnn_head.PointRCNNHead.make_fc_layers", "ops.roipoint_pool3d.roipoint_pool3d_utils.RoIPointPool3d", "pointrcnn_head.PointRCNNHead.init_weights", "shared_mlps.append", "shared_mlps.append", "torch.Conv2d", "torch.Conv2d", "pointrcnn_head.PointRCNNHead.model_cfg.SA_CONFIG.NPOINTS.__len__", "pointrcnn_head.PointRCNNHead.SA_modules.append", "len", "torch.Conv2d", "torch.Conv2d", "shared_mlps.append", "torch.ReLU", "torch.ReLU", "ops.pointnet2.pointnet2_batch.pointnet2_modules.PointnetSAModule", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.SingleHead.init_weights", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "model_cfg", ",", "num_class", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "num_class", "=", "num_class", ",", "model_cfg", "=", "model_cfg", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "use_bn", "=", "self", ".", "model_cfg", ".", "USE_BN", "\n", "self", ".", "SA_modules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "channel_in", "=", "input_channels", "\n", "\n", "self", ".", "num_prefix_channels", "=", "3", "+", "2", "# xyz + point_scores + point_depth", "\n", "xyz_mlps", "=", "[", "self", ".", "num_prefix_channels", "]", "+", "self", ".", "model_cfg", ".", "XYZ_UP_LAYER", "\n", "shared_mlps", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "xyz_mlps", ")", "-", "1", ")", ":", "\n", "            ", "shared_mlps", ".", "append", "(", "nn", ".", "Conv2d", "(", "xyz_mlps", "[", "k", "]", ",", "xyz_mlps", "[", "k", "+", "1", "]", ",", "kernel_size", "=", "1", ",", "bias", "=", "not", "use_bn", ")", ")", "\n", "if", "use_bn", ":", "\n", "                ", "shared_mlps", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "xyz_mlps", "[", "k", "+", "1", "]", ")", ")", "\n", "", "shared_mlps", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "self", ".", "xyz_up_layer", "=", "nn", ".", "Sequential", "(", "*", "shared_mlps", ")", "\n", "\n", "c_out", "=", "self", ".", "model_cfg", ".", "XYZ_UP_LAYER", "[", "-", "1", "]", "\n", "self", ".", "merge_down_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "c_out", "*", "2", ",", "c_out", ",", "kernel_size", "=", "1", ",", "bias", "=", "not", "use_bn", ")", ",", "\n", "*", "[", "nn", ".", "BatchNorm2d", "(", "c_out", ")", ",", "nn", ".", "ReLU", "(", ")", "]", "if", "use_bn", "else", "[", "nn", ".", "ReLU", "(", ")", "]", "\n", ")", "\n", "\n", "for", "k", "in", "range", "(", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NPOINTS", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "mlps", "=", "[", "channel_in", "]", "+", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "MLPS", "[", "k", "]", "\n", "\n", "npoint", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NPOINTS", "[", "k", "]", "if", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NPOINTS", "[", "k", "]", "!=", "-", "1", "else", "None", "\n", "self", ".", "SA_modules", ".", "append", "(", "\n", "pointnet2_modules", ".", "PointnetSAModule", "(", "\n", "npoint", "=", "npoint", ",", "\n", "radius", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "RADIUS", "[", "k", "]", ",", "\n", "nsample", "=", "self", ".", "model_cfg", ".", "SA_CONFIG", ".", "NSAMPLE", "[", "k", "]", ",", "\n", "mlp", "=", "mlps", ",", "\n", "use_xyz", "=", "True", ",", "\n", "bn", "=", "use_bn", "\n", ")", "\n", ")", "\n", "channel_in", "=", "mlps", "[", "-", "1", "]", "\n", "\n", "", "self", ".", "cls_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "input_channels", "=", "channel_in", ",", "output_channels", "=", "self", ".", "num_class", ",", "fc_list", "=", "self", ".", "model_cfg", ".", "CLS_FC", "\n", ")", "\n", "self", ".", "reg_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "input_channels", "=", "channel_in", ",", "\n", "output_channels", "=", "self", ".", "box_coder", ".", "code_size", "*", "self", ".", "num_class", ",", "\n", "fc_list", "=", "self", ".", "model_cfg", ".", "REG_FC", "\n", ")", "\n", "\n", "self", ".", "roipoint_pool3d_layer", "=", "roipoint_pool3d_utils", ".", "RoIPointPool3d", "(", "\n", "num_sampled_points", "=", "self", ".", "model_cfg", ".", "ROI_POINT_POOL", ".", "NUM_SAMPLED_POINTS", ",", "\n", "pool_extra_width", "=", "self", ".", "model_cfg", ".", "ROI_POINT_POOL", ".", "POOL_EXTRA_WIDTH", "\n", ")", "\n", "self", ".", "init_weights", "(", "weight_init", "=", "'xavier'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pointrcnn_head.PointRCNNHead.init_weights": [[65, 84], ["pointrcnn_head.PointRCNNHead.modules", "torch.init.normal_", "torch.init.normal_", "isinstance", "isinstance", "init_func", "init_func", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "weight_init", "=", "'xavier'", ")", ":", "\n", "        ", "if", "weight_init", "==", "'kaiming'", ":", "\n", "            ", "init_func", "=", "nn", ".", "init", ".", "kaiming_normal_", "\n", "", "elif", "weight_init", "==", "'xavier'", ":", "\n", "            ", "init_func", "=", "nn", ".", "init", ".", "xavier_normal_", "\n", "", "elif", "weight_init", "==", "'normal'", ":", "\n", "            ", "init_func", "=", "nn", ".", "init", ".", "normal_", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Conv1d", ")", ":", "\n", "                ", "if", "weight_init", "==", "'normal'", ":", "\n", "                    ", "init_func", "(", "m", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "0.001", ")", "\n", "", "else", ":", "\n", "                    ", "init_func", "(", "m", ".", "weight", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "", "nn", ".", "init", ".", "normal_", "(", "self", ".", "reg_layers", "[", "-", "1", "]", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pointrcnn_head.PointRCNNHead.roipool3d_gpu": [[85, 131], ["point_coords.new_zeros().int", "range", "batch_dict[].detach", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "point_coords.view", "torch.cat.view", "torch.cat.view", "point_coords.new_zeros().int.min", "point_coords.new_zeros().int.max", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "pointrcnn_head.PointRCNNHead.roipoint_pool3d_layer", "roi_center.unsqueeze", "pooled_features.view.view.view", "utils.common_utils.rotate_points_along_z", "point_coords.new_zeros", "point_coords.norm", "rois.view", "pooled_empty_flag.view"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z"], ["", "def", "roipool3d_gpu", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                rois: (B, num_rois, 7 + C)\n                point_coords: (num_points, 4)  [bs_idx, x, y, z]\n                point_features: (num_points, C)\n                point_cls_scores: (N1 + N2 + N3 + ..., 1)\n                point_part_offset: (N1 + N2 + N3 + ..., 3)\n        Returns:\n\n        \"\"\"", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "batch_idx", "=", "batch_dict", "[", "'point_coords'", "]", "[", ":", ",", "0", "]", "\n", "point_coords", "=", "batch_dict", "[", "'point_coords'", "]", "[", ":", ",", "1", ":", "4", "]", "\n", "point_features", "=", "batch_dict", "[", "'point_features'", "]", "\n", "rois", "=", "batch_dict", "[", "'rois'", "]", "# (B, num_rois, 7 + C)", "\n", "batch_cnt", "=", "point_coords", ".", "new_zeros", "(", "batch_size", ")", ".", "int", "(", ")", "\n", "for", "bs_idx", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "batch_cnt", "[", "bs_idx", "]", "=", "(", "batch_idx", "==", "bs_idx", ")", ".", "sum", "(", ")", "\n", "\n", "", "assert", "batch_cnt", ".", "min", "(", ")", "==", "batch_cnt", ".", "max", "(", ")", "\n", "\n", "point_scores", "=", "batch_dict", "[", "'point_cls_scores'", "]", ".", "detach", "(", ")", "\n", "point_depths", "=", "point_coords", ".", "norm", "(", "dim", "=", "1", ")", "/", "self", ".", "model_cfg", ".", "ROI_POINT_POOL", ".", "DEPTH_NORMALIZER", "-", "0.5", "\n", "point_features_list", "=", "[", "point_scores", "[", ":", ",", "None", "]", ",", "point_depths", "[", ":", ",", "None", "]", ",", "point_features", "]", "\n", "point_features_all", "=", "torch", ".", "cat", "(", "point_features_list", ",", "dim", "=", "1", ")", "\n", "batch_points", "=", "point_coords", ".", "view", "(", "batch_size", ",", "-", "1", ",", "3", ")", "\n", "batch_point_features", "=", "point_features_all", ".", "view", "(", "batch_size", ",", "-", "1", ",", "point_features_all", ".", "shape", "[", "-", "1", "]", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pooled_features", ",", "pooled_empty_flag", "=", "self", ".", "roipoint_pool3d_layer", "(", "\n", "batch_points", ",", "batch_point_features", ",", "rois", "\n", ")", "# pooled_features: (B, num_rois, num_sampled_points, 3 + C), pooled_empty_flag: (B, num_rois)", "\n", "\n", "# canonical transformation", "\n", "roi_center", "=", "rois", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "pooled_features", "[", ":", ",", ":", ",", ":", ",", "0", ":", "3", "]", "-=", "roi_center", ".", "unsqueeze", "(", "dim", "=", "2", ")", "\n", "\n", "pooled_features", "=", "pooled_features", ".", "view", "(", "-", "1", ",", "pooled_features", ".", "shape", "[", "-", "2", "]", ",", "pooled_features", ".", "shape", "[", "-", "1", "]", ")", "\n", "pooled_features", "[", ":", ",", ":", ",", "0", ":", "3", "]", "=", "common_utils", ".", "rotate_points_along_z", "(", "\n", "pooled_features", "[", ":", ",", ":", ",", "0", ":", "3", "]", ",", "-", "rois", ".", "view", "(", "-", "1", ",", "rois", ".", "shape", "[", "-", "1", "]", ")", "[", ":", ",", "6", "]", "\n", ")", "\n", "pooled_features", "[", "pooled_empty_flag", ".", "view", "(", "-", "1", ")", ">", "0", "]", "=", "0", "\n", "", "return", "pooled_features", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pointrcnn_head.PointRCNNHead.forward": [[132, 180], ["pointrcnn_head.PointRCNNHead.proposal_layer", "pointrcnn_head.PointRCNNHead.roipool3d_gpu", "pooled_features[].transpose().unsqueeze", "pointrcnn_head.PointRCNNHead.xyz_up_layer", "pooled_features[].transpose().unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pointrcnn_head.PointRCNNHead.merge_down_layer", "range", "pointrcnn_head.PointRCNNHead.cls_layers().transpose().contiguous().squeeze", "pointrcnn_head.PointRCNNHead.reg_layers().transpose().contiguous().squeeze", "pointrcnn_head.PointRCNNHead.assign_targets", "len", "l_xyz.append", "l_features.append", "pointrcnn_head.PointRCNNHead.generate_predicted_boxes", "pooled_features[].transpose", "pooled_features[].transpose", "pooled_features[].contiguous", "pointrcnn_head.PointRCNNHead.squeeze().contiguous", "pointrcnn_head.PointRCNNHead.cls_layers().transpose().contiguous", "pointrcnn_head.PointRCNNHead.reg_layers().transpose().contiguous", "pointrcnn_head.PointRCNNHead.squeeze", "pointrcnn_head.PointRCNNHead.cls_layers().transpose", "pointrcnn_head.PointRCNNHead.reg_layers().transpose", "pointrcnn_head.PointRCNNHead.cls_layers", "pointrcnn_head.PointRCNNHead.reg_layers"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.roi_head_template.RoIHeadTemplate.proposal_layer", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roi_heads.pointrcnn_head.PointRCNNHead.roipool3d_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_predicted_boxes"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n\n        Returns:\n\n        \"\"\"", "\n", "targets_dict", "=", "self", ".", "proposal_layer", "(", "\n", "batch_dict", ",", "nms_config", "=", "self", ".", "model_cfg", ".", "NMS_CONFIG", "[", "'TRAIN'", "if", "self", ".", "training", "else", "'TEST'", "]", "\n", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "targets_dict", "=", "self", ".", "assign_targets", "(", "batch_dict", ")", "\n", "batch_dict", "[", "'rois'", "]", "=", "targets_dict", "[", "'rois'", "]", "\n", "batch_dict", "[", "'roi_labels'", "]", "=", "targets_dict", "[", "'roi_labels'", "]", "\n", "\n", "", "pooled_features", "=", "self", ".", "roipool3d_gpu", "(", "batch_dict", ")", "# (total_rois, num_sampled_points, 3 + C)", "\n", "\n", "xyz_input", "=", "pooled_features", "[", "...", ",", "0", ":", "self", ".", "num_prefix_channels", "]", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "dim", "=", "3", ")", "\n", "xyz_features", "=", "self", ".", "xyz_up_layer", "(", "xyz_input", ")", "\n", "point_features", "=", "pooled_features", "[", "...", ",", "self", ".", "num_prefix_channels", ":", "]", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "dim", "=", "3", ")", "\n", "merged_features", "=", "torch", ".", "cat", "(", "(", "xyz_features", ",", "point_features", ")", ",", "dim", "=", "1", ")", "\n", "merged_features", "=", "self", ".", "merge_down_layer", "(", "merged_features", ")", "\n", "\n", "l_xyz", ",", "l_features", "=", "[", "pooled_features", "[", "...", ",", "0", ":", "3", "]", ".", "contiguous", "(", ")", "]", ",", "[", "merged_features", ".", "squeeze", "(", "dim", "=", "3", ")", ".", "contiguous", "(", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "SA_modules", ")", ")", ":", "\n", "            ", "li_xyz", ",", "li_features", "=", "self", ".", "SA_modules", "[", "i", "]", "(", "l_xyz", "[", "i", "]", ",", "l_features", "[", "i", "]", ")", "\n", "l_xyz", ".", "append", "(", "li_xyz", ")", "\n", "l_features", ".", "append", "(", "li_features", ")", "\n", "\n", "", "shared_features", "=", "l_features", "[", "-", "1", "]", "# (total_rois, num_features, 1)", "\n", "rcnn_cls", "=", "self", ".", "cls_layers", "(", "shared_features", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "# (B, 1 or 2)", "\n", "rcnn_reg", "=", "self", ".", "reg_layers", "(", "shared_features", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "# (B, C)", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "batch_cls_preds", ",", "batch_box_preds", "=", "self", ".", "generate_predicted_boxes", "(", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", ",", "rois", "=", "batch_dict", "[", "'rois'", "]", ",", "cls_preds", "=", "rcnn_cls", ",", "box_preds", "=", "rcnn_reg", "\n", ")", "\n", "batch_dict", "[", "'batch_cls_preds'", "]", "=", "batch_cls_preds", "\n", "batch_dict", "[", "'batch_box_preds'", "]", "=", "batch_box_preds", "\n", "batch_dict", "[", "'cls_preds_normalized'", "]", "=", "False", "\n", "", "else", ":", "\n", "            ", "targets_dict", "[", "'rcnn_cls'", "]", "=", "rcnn_cls", "\n", "targets_dict", "[", "'rcnn_reg'", "]", "=", "rcnn_reg", "\n", "\n", "self", ".", "forward_ret_dict", "=", "targets_dict", "\n", "", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.__init__": [[9, 12], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "roi_sampler_cfg", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "roi_sampler_cfg", "=", "roi_sampler_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.forward": [[13, 63], ["proposal_target_layer.ProposalTargetLayer.sample_rois_for_rcnn"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.sample_rois_for_rcnn"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                rois: (B, num_rois, 7 + C)\n                roi_scores: (B, num_rois)\n                gt_boxes: (B, N, 7 + C + 1)\n                roi_labels: (B, num_rois)\n        Returns:\n            batch_dict:\n                rois: (B, M, 7 + C)\n                gt_of_rois: (B, M, 7 + C)\n                gt_iou_of_rois: (B, M)\n                roi_scores: (B, M)\n                roi_labels: (B, M)\n                reg_valid_mask: (B, M)\n                rcnn_cls_labels: (B, M)\n        \"\"\"", "\n", "batch_rois", ",", "batch_gt_of_rois", ",", "batch_roi_ious", ",", "batch_roi_scores", ",", "batch_roi_labels", "=", "self", ".", "sample_rois_for_rcnn", "(", "\n", "batch_dict", "=", "batch_dict", "\n", ")", "\n", "# regression valid mask", "\n", "reg_valid_mask", "=", "(", "batch_roi_ious", ">", "self", ".", "roi_sampler_cfg", ".", "REG_FG_THRESH", ")", ".", "long", "(", ")", "\n", "\n", "# classification label", "\n", "if", "self", ".", "roi_sampler_cfg", ".", "CLS_SCORE_TYPE", "==", "'cls'", ":", "\n", "            ", "batch_cls_labels", "=", "(", "batch_roi_ious", ">", "self", ".", "roi_sampler_cfg", ".", "CLS_FG_THRESH", ")", ".", "long", "(", ")", "\n", "ignore_mask", "=", "(", "batch_roi_ious", ">", "self", ".", "roi_sampler_cfg", ".", "CLS_BG_THRESH", ")", "&", "(", "batch_roi_ious", "<", "self", ".", "roi_sampler_cfg", ".", "CLS_FG_THRESH", ")", "\n", "batch_cls_labels", "[", "ignore_mask", ">", "0", "]", "=", "-", "1", "\n", "", "elif", "self", ".", "roi_sampler_cfg", ".", "CLS_SCORE_TYPE", "==", "'roi_iou'", ":", "\n", "            ", "iou_bg_thresh", "=", "self", ".", "roi_sampler_cfg", ".", "CLS_BG_THRESH", "\n", "iou_fg_thresh", "=", "self", ".", "roi_sampler_cfg", ".", "CLS_FG_THRESH", "\n", "fg_mask", "=", "batch_roi_ious", ">", "iou_fg_thresh", "\n", "bg_mask", "=", "batch_roi_ious", "<", "iou_bg_thresh", "\n", "interval_mask", "=", "(", "fg_mask", "==", "0", ")", "&", "(", "bg_mask", "==", "0", ")", "\n", "\n", "batch_cls_labels", "=", "(", "fg_mask", ">", "0", ")", ".", "float", "(", ")", "\n", "batch_cls_labels", "[", "interval_mask", "]", "=", "(", "batch_roi_ious", "[", "interval_mask", "]", "-", "iou_bg_thresh", ")", "/", "(", "iou_fg_thresh", "-", "iou_bg_thresh", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "targets_dict", "=", "{", "'rois'", ":", "batch_rois", ",", "'gt_of_rois'", ":", "batch_gt_of_rois", ",", "'gt_iou_of_rois'", ":", "batch_roi_ious", ",", "\n", "'roi_scores'", ":", "batch_roi_scores", ",", "'roi_labels'", ":", "batch_roi_labels", ",", "\n", "'reg_valid_mask'", ":", "reg_valid_mask", ",", "\n", "'rcnn_cls_labels'", ":", "batch_cls_labels", "}", "\n", "\n", "return", "targets_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.sample_rois_for_rcnn": [[64, 116], ["rois.new_zeros", "rois.new_zeros", "rois.new_zeros", "rois.new_zeros", "rois.new_zeros", "range", "proposal_target_layer.ProposalTargetLayer.roi_sampler_cfg.get", "proposal_target_layer.ProposalTargetLayer.subsample_rois", "cur_gt.__len__", "cur_gt.new_zeros", "proposal_target_layer.ProposalTargetLayer.get_max_iou_with_same_class", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu", "torch.max", "torch.max", "torch.max", "torch.max", "cur_gt[].sum", "len", "cur_gt[].long"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.subsample_rois", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.get_max_iou_with_same_class", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu"], ["", "def", "sample_rois_for_rcnn", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                rois: (B, num_rois, 7 + C)\n                roi_scores: (B, num_rois)\n                gt_boxes: (B, N, 7 + C + 1)\n                roi_labels: (B, num_rois)\n        Returns:\n\n        \"\"\"", "\n", "batch_size", "=", "batch_dict", "[", "'batch_size'", "]", "\n", "rois", "=", "batch_dict", "[", "'rois'", "]", "\n", "roi_scores", "=", "batch_dict", "[", "'roi_scores'", "]", "\n", "roi_labels", "=", "batch_dict", "[", "'roi_labels'", "]", "\n", "gt_boxes", "=", "batch_dict", "[", "'gt_boxes'", "]", "\n", "\n", "code_size", "=", "rois", ".", "shape", "[", "-", "1", "]", "\n", "batch_rois", "=", "rois", ".", "new_zeros", "(", "batch_size", ",", "self", ".", "roi_sampler_cfg", ".", "ROI_PER_IMAGE", ",", "code_size", ")", "\n", "batch_gt_of_rois", "=", "rois", ".", "new_zeros", "(", "batch_size", ",", "self", ".", "roi_sampler_cfg", ".", "ROI_PER_IMAGE", ",", "code_size", "+", "1", ")", "\n", "batch_roi_ious", "=", "rois", ".", "new_zeros", "(", "batch_size", ",", "self", ".", "roi_sampler_cfg", ".", "ROI_PER_IMAGE", ")", "\n", "batch_roi_scores", "=", "rois", ".", "new_zeros", "(", "batch_size", ",", "self", ".", "roi_sampler_cfg", ".", "ROI_PER_IMAGE", ")", "\n", "batch_roi_labels", "=", "rois", ".", "new_zeros", "(", "(", "batch_size", ",", "self", ".", "roi_sampler_cfg", ".", "ROI_PER_IMAGE", ")", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "for", "index", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "cur_roi", ",", "cur_gt", ",", "cur_roi_labels", ",", "cur_roi_scores", "=", "rois", "[", "index", "]", ",", "gt_boxes", "[", "index", "]", ",", "roi_labels", "[", "index", "]", ",", "roi_scores", "[", "index", "]", "\n", "k", "=", "cur_gt", ".", "__len__", "(", ")", "-", "1", "\n", "while", "k", ">", "0", "and", "cur_gt", "[", "k", "]", ".", "sum", "(", ")", "==", "0", ":", "\n", "                ", "k", "-=", "1", "\n", "", "cur_gt", "=", "cur_gt", "[", ":", "k", "+", "1", "]", "\n", "cur_gt", "=", "cur_gt", ".", "new_zeros", "(", "(", "1", ",", "cur_gt", ".", "shape", "[", "1", "]", ")", ")", "if", "len", "(", "cur_gt", ")", "==", "0", "else", "cur_gt", "\n", "\n", "if", "self", ".", "roi_sampler_cfg", ".", "get", "(", "'SAMPLE_ROI_BY_EACH_CLASS'", ",", "False", ")", ":", "\n", "                ", "max_overlaps", ",", "gt_assignment", "=", "self", ".", "get_max_iou_with_same_class", "(", "\n", "rois", "=", "cur_roi", ",", "roi_labels", "=", "cur_roi_labels", ",", "\n", "gt_boxes", "=", "cur_gt", "[", ":", ",", "0", ":", "7", "]", ",", "gt_labels", "=", "cur_gt", "[", ":", ",", "-", "1", "]", ".", "long", "(", ")", "\n", ")", "\n", "", "else", ":", "\n", "                ", "iou3d", "=", "iou3d_nms_utils", ".", "boxes_iou3d_gpu", "(", "cur_roi", ",", "cur_gt", "[", ":", ",", "0", ":", "7", "]", ")", "# (M, N)", "\n", "max_overlaps", ",", "gt_assignment", "=", "torch", ".", "max", "(", "iou3d", ",", "dim", "=", "1", ")", "\n", "\n", "", "sampled_inds", "=", "self", ".", "subsample_rois", "(", "max_overlaps", "=", "max_overlaps", ")", "\n", "\n", "batch_rois", "[", "index", "]", "=", "cur_roi", "[", "sampled_inds", "]", "\n", "batch_roi_labels", "[", "index", "]", "=", "cur_roi_labels", "[", "sampled_inds", "]", "\n", "batch_roi_ious", "[", "index", "]", "=", "max_overlaps", "[", "sampled_inds", "]", "\n", "batch_roi_scores", "[", "index", "]", "=", "cur_roi_scores", "[", "sampled_inds", "]", "\n", "batch_gt_of_rois", "[", "index", "]", "=", "cur_gt", "[", "gt_assignment", "[", "sampled_inds", "]", "]", "\n", "\n", "", "return", "batch_rois", ",", "batch_gt_of_rois", ",", "batch_roi_ious", ",", "batch_roi_scores", ",", "batch_roi_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.subsample_rois": [[117, 163], ["int", "min", "fg_inds.numel", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "numpy.round", "hard_bg_inds.numel", "easy_bg_inds.numel", "min", "torch.from_numpy().type_as().long", "torch.from_numpy().type_as().long", "torch.from_numpy().type_as().long", "torch.from_numpy().type_as().long", "proposal_target_layer.ProposalTargetLayer.sample_bg_inds", "numpy.floor", "torch.from_numpy().type_as().long", "torch.from_numpy().type_as().long", "torch.from_numpy().type_as().long", "torch.from_numpy().type_as().long", "torch.from_numpy().type_as", "torch.from_numpy().type_as", "torch.from_numpy().type_as", "torch.from_numpy().type_as", "proposal_target_layer.ProposalTargetLayer.sample_bg_inds", "print", "print", "numpy.random.rand", "torch.from_numpy().type_as", "torch.from_numpy().type_as", "torch.from_numpy().type_as", "torch.from_numpy().type_as", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.random.permutation", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "max_overlaps.min().item", "max_overlaps.max().item", "max_overlaps.min", "max_overlaps.max"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.sample_bg_inds", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.sample_bg_inds"], ["", "def", "subsample_rois", "(", "self", ",", "max_overlaps", ")", ":", "\n", "# sample fg, easy_bg, hard_bg", "\n", "        ", "fg_rois_per_image", "=", "int", "(", "np", ".", "round", "(", "self", ".", "roi_sampler_cfg", ".", "FG_RATIO", "*", "self", ".", "roi_sampler_cfg", ".", "ROI_PER_IMAGE", ")", ")", "\n", "fg_thresh", "=", "min", "(", "self", ".", "roi_sampler_cfg", ".", "REG_FG_THRESH", ",", "self", ".", "roi_sampler_cfg", ".", "CLS_FG_THRESH", ")", "\n", "\n", "fg_inds", "=", "(", "(", "max_overlaps", ">=", "fg_thresh", ")", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "easy_bg_inds", "=", "(", "(", "max_overlaps", "<", "self", ".", "roi_sampler_cfg", ".", "CLS_BG_THRESH_LO", ")", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "hard_bg_inds", "=", "(", "(", "max_overlaps", "<", "self", ".", "roi_sampler_cfg", ".", "REG_FG_THRESH", ")", "&", "\n", "(", "max_overlaps", ">=", "self", ".", "roi_sampler_cfg", ".", "CLS_BG_THRESH_LO", ")", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "fg_num_rois", "=", "fg_inds", ".", "numel", "(", ")", "\n", "bg_num_rois", "=", "hard_bg_inds", ".", "numel", "(", ")", "+", "easy_bg_inds", ".", "numel", "(", ")", "\n", "\n", "if", "fg_num_rois", ">", "0", "and", "bg_num_rois", ">", "0", ":", "\n", "# sampling fg", "\n", "            ", "fg_rois_per_this_image", "=", "min", "(", "fg_rois_per_image", ",", "fg_num_rois", ")", "\n", "\n", "rand_num", "=", "torch", ".", "from_numpy", "(", "np", ".", "random", ".", "permutation", "(", "fg_num_rois", ")", ")", ".", "type_as", "(", "max_overlaps", ")", ".", "long", "(", ")", "\n", "fg_inds", "=", "fg_inds", "[", "rand_num", "[", ":", "fg_rois_per_this_image", "]", "]", "\n", "\n", "# sampling bg", "\n", "bg_rois_per_this_image", "=", "self", ".", "roi_sampler_cfg", ".", "ROI_PER_IMAGE", "-", "fg_rois_per_this_image", "\n", "bg_inds", "=", "self", ".", "sample_bg_inds", "(", "\n", "hard_bg_inds", ",", "easy_bg_inds", ",", "bg_rois_per_this_image", ",", "self", ".", "roi_sampler_cfg", ".", "HARD_BG_RATIO", "\n", ")", "\n", "\n", "", "elif", "fg_num_rois", ">", "0", "and", "bg_num_rois", "==", "0", ":", "\n", "# sampling fg", "\n", "            ", "rand_num", "=", "np", ".", "floor", "(", "np", ".", "random", ".", "rand", "(", "self", ".", "roi_sampler_cfg", ".", "ROI_PER_IMAGE", ")", "*", "fg_num_rois", ")", "\n", "rand_num", "=", "torch", ".", "from_numpy", "(", "rand_num", ")", ".", "type_as", "(", "max_overlaps", ")", ".", "long", "(", ")", "\n", "fg_inds", "=", "fg_inds", "[", "rand_num", "]", "\n", "bg_inds", "=", "[", "]", "\n", "\n", "", "elif", "bg_num_rois", ">", "0", "and", "fg_num_rois", "==", "0", ":", "\n", "# sampling bg", "\n", "            ", "bg_rois_per_this_image", "=", "self", ".", "roi_sampler_cfg", ".", "ROI_PER_IMAGE", "\n", "bg_inds", "=", "self", ".", "sample_bg_inds", "(", "\n", "hard_bg_inds", ",", "easy_bg_inds", ",", "bg_rois_per_this_image", ",", "self", ".", "roi_sampler_cfg", ".", "HARD_BG_RATIO", "\n", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'maxoverlaps:(min=%f, max=%f)'", "%", "(", "max_overlaps", ".", "min", "(", ")", ".", "item", "(", ")", ",", "max_overlaps", ".", "max", "(", ")", ".", "item", "(", ")", ")", ")", "\n", "print", "(", "'ERROR: FG=%d, BG=%d'", "%", "(", "fg_num_rois", ",", "bg_num_rois", ")", ")", "\n", "raise", "NotImplementedError", "\n", "\n", "", "sampled_inds", "=", "torch", ".", "cat", "(", "(", "fg_inds", ",", "bg_inds", ")", ",", "dim", "=", "0", ")", "\n", "return", "sampled_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.sample_bg_inds": [[164, 193], ["min", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "hard_bg_inds.numel", "easy_bg_inds.numel", "int", "len", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "hard_bg_inds.numel", "easy_bg_inds.numel", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.randint().long", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "hard_bg_inds.numel", "easy_bg_inds.numel", "hard_bg_inds.numel", "easy_bg_inds.numel", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "hard_bg_inds.numel", "easy_bg_inds.numel"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "sample_bg_inds", "(", "hard_bg_inds", ",", "easy_bg_inds", ",", "bg_rois_per_this_image", ",", "hard_bg_ratio", ")", ":", "\n", "        ", "if", "hard_bg_inds", ".", "numel", "(", ")", ">", "0", "and", "easy_bg_inds", ".", "numel", "(", ")", ">", "0", ":", "\n", "            ", "hard_bg_rois_num", "=", "min", "(", "int", "(", "bg_rois_per_this_image", "*", "hard_bg_ratio", ")", ",", "len", "(", "hard_bg_inds", ")", ")", "\n", "easy_bg_rois_num", "=", "bg_rois_per_this_image", "-", "hard_bg_rois_num", "\n", "\n", "# sampling hard bg", "\n", "rand_idx", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "hard_bg_inds", ".", "numel", "(", ")", ",", "size", "=", "(", "hard_bg_rois_num", ",", ")", ")", ".", "long", "(", ")", "\n", "hard_bg_inds", "=", "hard_bg_inds", "[", "rand_idx", "]", "\n", "\n", "# sampling easy bg", "\n", "rand_idx", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "easy_bg_inds", ".", "numel", "(", ")", ",", "size", "=", "(", "easy_bg_rois_num", ",", ")", ")", ".", "long", "(", ")", "\n", "easy_bg_inds", "=", "easy_bg_inds", "[", "rand_idx", "]", "\n", "\n", "bg_inds", "=", "torch", ".", "cat", "(", "[", "hard_bg_inds", ",", "easy_bg_inds", "]", ",", "dim", "=", "0", ")", "\n", "", "elif", "hard_bg_inds", ".", "numel", "(", ")", ">", "0", "and", "easy_bg_inds", ".", "numel", "(", ")", "==", "0", ":", "\n", "            ", "hard_bg_rois_num", "=", "bg_rois_per_this_image", "\n", "# sampling hard bg", "\n", "rand_idx", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "hard_bg_inds", ".", "numel", "(", ")", ",", "size", "=", "(", "hard_bg_rois_num", ",", ")", ")", ".", "long", "(", ")", "\n", "bg_inds", "=", "hard_bg_inds", "[", "rand_idx", "]", "\n", "", "elif", "hard_bg_inds", ".", "numel", "(", ")", "==", "0", "and", "easy_bg_inds", ".", "numel", "(", ")", ">", "0", ":", "\n", "            ", "easy_bg_rois_num", "=", "bg_rois_per_this_image", "\n", "# sampling easy bg", "\n", "rand_idx", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "easy_bg_inds", ".", "numel", "(", ")", ",", "size", "=", "(", "easy_bg_rois_num", ",", ")", ")", ".", "long", "(", ")", "\n", "bg_inds", "=", "easy_bg_inds", "[", "rand_idx", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "return", "bg_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.proposal_target_layer.ProposalTargetLayer.get_max_iou_with_same_class": [[194, 229], ["rois.new_zeros", "roi_labels.new_zeros", "range", "gt_labels.min().item", "gt_labels.max().item", "gt_mask.nonzero().view", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu", "torch.max", "torch.max", "torch.max", "torch.max", "gt_labels.min", "roi_mask.sum", "gt_mask.sum", "gt_labels.max", "gt_mask.nonzero"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu"], ["", "@", "staticmethod", "\n", "def", "get_max_iou_with_same_class", "(", "rois", ",", "roi_labels", ",", "gt_boxes", ",", "gt_labels", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            rois: (N, 7)\n            roi_labels: (N)\n            gt_boxes: (N, )\n            gt_labels:\n\n        Returns:\n\n        \"\"\"", "\n", "\"\"\"\n        :param rois: (N, 7)\n        :param roi_labels: (N)\n        :param gt_boxes: (N, 8)\n        :return:\n        \"\"\"", "\n", "max_overlaps", "=", "rois", ".", "new_zeros", "(", "rois", ".", "shape", "[", "0", "]", ")", "\n", "gt_assignment", "=", "roi_labels", ".", "new_zeros", "(", "roi_labels", ".", "shape", "[", "0", "]", ")", "\n", "\n", "for", "k", "in", "range", "(", "gt_labels", ".", "min", "(", ")", ".", "item", "(", ")", ",", "gt_labels", ".", "max", "(", ")", ".", "item", "(", ")", "+", "1", ")", ":", "\n", "            ", "roi_mask", "=", "(", "roi_labels", "==", "k", ")", "\n", "gt_mask", "=", "(", "gt_labels", "==", "k", ")", "\n", "if", "roi_mask", ".", "sum", "(", ")", ">", "0", "and", "gt_mask", ".", "sum", "(", ")", ">", "0", ":", "\n", "                ", "cur_roi", "=", "rois", "[", "roi_mask", "]", "\n", "cur_gt", "=", "gt_boxes", "[", "gt_mask", "]", "\n", "original_gt_assignment", "=", "gt_mask", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "iou3d", "=", "iou3d_nms_utils", ".", "boxes_iou3d_gpu", "(", "cur_roi", ",", "cur_gt", ")", "# (M, N)", "\n", "cur_max_overlaps", ",", "cur_gt_assignment", "=", "torch", ".", "max", "(", "iou3d", ",", "dim", "=", "1", ")", "\n", "max_overlaps", "[", "roi_mask", "]", "=", "cur_max_overlaps", "\n", "gt_assignment", "[", "roi_mask", "]", "=", "original_gt_assignment", "[", "cur_gt_assignment", "]", "\n", "\n", "", "", "return", "max_overlaps", ",", "gt_assignment", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.atss_target_assigner.ATSSTargetAssigner.__init__": [[11, 15], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "topk", ",", "box_coder", ",", "match_height", "=", "False", ")", ":", "\n", "        ", "self", ".", "topk", "=", "topk", "\n", "self", ".", "box_coder", "=", "box_coder", "\n", "self", ".", "match_height", "=", "match_height", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.atss_target_assigner.ATSSTargetAssigner.assign_targets": [[16, 74], ["isinstance", "range", "torch.stack", "torch.stack", "torch.stack", "cls_labels_list.append", "reg_targets_list.append", "reg_weights_list.append", "len", "anchors.view.view.permute().contiguous().view", "anchors.view.view.view", "atss_target_assigner.ATSSTargetAssigner.assign_targets_single", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.cat", "torch.cat", "torch.cat", "cur_gt.__len__", "anchors.view.view.permute().contiguous", "cur_gt[].sum", "anchors.view.view.permute"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.axis_aligned_target_assigner.AxisAlignedTargetAssigner.assign_targets_single", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "def", "assign_targets", "(", "self", ",", "anchors_list", ",", "gt_boxes_with_classes", ",", "use_multihead", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            anchors: [(N, 7), ...]\n            gt_boxes: (B, M, 8)\n        Returns:\n\n        \"\"\"", "\n", "if", "not", "isinstance", "(", "anchors_list", ",", "list", ")", ":", "\n", "            ", "anchors_list", "=", "[", "anchors_list", "]", "\n", "single_set_of_anchor", "=", "True", "\n", "", "else", ":", "\n", "            ", "single_set_of_anchor", "=", "len", "(", "anchors_list", ")", "==", "1", "\n", "", "cls_labels_list", ",", "reg_targets_list", ",", "reg_weights_list", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "anchors", "in", "anchors_list", ":", "\n", "            ", "batch_size", "=", "gt_boxes_with_classes", ".", "shape", "[", "0", "]", "\n", "gt_classes", "=", "gt_boxes_with_classes", "[", ":", ",", ":", ",", "-", "1", "]", "\n", "gt_boxes", "=", "gt_boxes_with_classes", "[", ":", ",", ":", ",", ":", "-", "1", "]", "\n", "if", "use_multihead", ":", "\n", "                ", "anchors", "=", "anchors", ".", "permute", "(", "3", ",", "4", ",", "0", ",", "1", ",", "2", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "anchors", ".", "shape", "[", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "anchors", "=", "anchors", ".", "view", "(", "-", "1", ",", "anchors", ".", "shape", "[", "-", "1", "]", ")", "\n", "", "cls_labels", ",", "reg_targets", ",", "reg_weights", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "k", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "cur_gt", "=", "gt_boxes", "[", "k", "]", "\n", "cnt", "=", "cur_gt", ".", "__len__", "(", ")", "-", "1", "\n", "while", "cnt", ">", "0", "and", "cur_gt", "[", "cnt", "]", ".", "sum", "(", ")", "==", "0", ":", "\n", "                    ", "cnt", "-=", "1", "\n", "", "cur_gt", "=", "cur_gt", "[", ":", "cnt", "+", "1", "]", "\n", "\n", "cur_gt_classes", "=", "gt_classes", "[", "k", "]", "[", ":", "cnt", "+", "1", "]", "\n", "cur_cls_labels", ",", "cur_reg_targets", ",", "cur_reg_weights", "=", "self", ".", "assign_targets_single", "(", "\n", "anchors", ",", "cur_gt", ",", "cur_gt_classes", "\n", ")", "\n", "cls_labels", ".", "append", "(", "cur_cls_labels", ")", "\n", "reg_targets", ".", "append", "(", "cur_reg_targets", ")", "\n", "reg_weights", ".", "append", "(", "cur_reg_weights", ")", "\n", "\n", "", "cls_labels", "=", "torch", ".", "stack", "(", "cls_labels", ",", "dim", "=", "0", ")", "\n", "reg_targets", "=", "torch", ".", "stack", "(", "reg_targets", ",", "dim", "=", "0", ")", "\n", "reg_weights", "=", "torch", ".", "stack", "(", "reg_weights", ",", "dim", "=", "0", ")", "\n", "cls_labels_list", ".", "append", "(", "cls_labels", ")", "\n", "reg_targets_list", ".", "append", "(", "reg_targets", ")", "\n", "reg_weights_list", ".", "append", "(", "reg_weights", ")", "\n", "\n", "", "if", "single_set_of_anchor", ":", "\n", "            ", "ret_dict", "=", "{", "\n", "'box_cls_labels'", ":", "cls_labels_list", "[", "0", "]", ",", "\n", "'box_reg_targets'", ":", "reg_targets_list", "[", "0", "]", ",", "\n", "'reg_weights'", ":", "reg_weights_list", "[", "0", "]", "\n", "}", "\n", "", "else", ":", "\n", "            ", "ret_dict", "=", "{", "\n", "'box_cls_labels'", ":", "torch", ".", "cat", "(", "cls_labels_list", ",", "dim", "=", "1", ")", ",", "\n", "'box_reg_targets'", ":", "torch", ".", "cat", "(", "reg_targets_list", ",", "dim", "=", "1", ")", ",", "\n", "'reg_weights'", ":", "torch", ".", "cat", "(", "reg_weights_list", ",", "dim", "=", "1", ")", "\n", "}", "\n", "", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.atss_target_assigner.ATSSTargetAssigner.assign_targets_single": [[75, 142], ["distance.topk", "candidate_ious.mean", "candidate_ious.std", "gt_boxes[].repeat", "utils.common_utils.rotate_points_along_z().squeeze", "range", "torch.full_like().t().contiguous().view", "ious_inf.view().t.view().t.view().t", "ious_inf.view().t.view().t.max", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou_bev.max", "torch.arange", "matched_gts.new_zeros", "matched_gts.new_zeros", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou_bev", "topk_idxs.view", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou_bev.t().contiguous().view", "pos_mask.sum", "atss_target_assigner.ATSSTargetAssigner.box_coder.encode_torch", "topk_idxs.view", "utils.common_utils.rotate_points_along_z", "torch.full_like().t().contiguous", "is_pos.view", "ious_inf.view().t.view().t.view", "torch.arange", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou_bev.t().contiguous", "torch.full_like().t", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou_bev.t", "torch.full_like"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou_bev", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.encode_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z"], ["", "def", "assign_targets_single", "(", "self", ",", "anchors", ",", "gt_boxes", ",", "gt_classes", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            anchors: (N, 7) [x, y, z, dx, dy, dz, heading]\n            gt_boxes: (M, 7) [x, y, z, dx, dy, dz, heading]\n            gt_classes: (M)\n        Returns:\n\n        \"\"\"", "\n", "num_anchor", "=", "anchors", ".", "shape", "[", "0", "]", "\n", "num_gt", "=", "gt_boxes", ".", "shape", "[", "0", "]", "\n", "\n", "# select topk anchors for each gt_boxes", "\n", "if", "self", ".", "match_height", ":", "\n", "            ", "ious", "=", "iou3d_nms_utils", ".", "boxes_iou3d_gpu", "(", "anchors", "[", ":", ",", "0", ":", "7", "]", ",", "gt_boxes", "[", ":", ",", "0", ":", "7", "]", ")", "# (N, M)", "\n", "", "else", ":", "\n", "            ", "ious", "=", "iou3d_nms_utils", ".", "boxes_iou_bev", "(", "anchors", "[", ":", ",", "0", ":", "7", "]", ",", "gt_boxes", "[", ":", ",", "0", ":", "7", "]", ")", "\n", "\n", "", "distance", "=", "(", "anchors", "[", ":", ",", "None", ",", "0", ":", "3", "]", "-", "gt_boxes", "[", "None", ",", ":", ",", "0", ":", "3", "]", ")", ".", "norm", "(", "dim", "=", "-", "1", ")", "# (N, M)", "\n", "_", ",", "topk_idxs", "=", "distance", ".", "topk", "(", "self", ".", "topk", ",", "dim", "=", "0", ",", "largest", "=", "False", ")", "# (K, M)", "\n", "candidate_ious", "=", "ious", "[", "topk_idxs", ",", "torch", ".", "arange", "(", "num_gt", ")", "]", "# (K, M)", "\n", "iou_mean_per_gt", "=", "candidate_ious", ".", "mean", "(", "dim", "=", "0", ")", "\n", "iou_std_per_gt", "=", "candidate_ious", ".", "std", "(", "dim", "=", "0", ")", "\n", "iou_thresh_per_gt", "=", "iou_mean_per_gt", "+", "iou_std_per_gt", "+", "1e-6", "\n", "is_pos", "=", "candidate_ious", ">=", "iou_thresh_per_gt", "[", "None", ",", ":", "]", "# (K, M)", "\n", "\n", "# check whether anchor_center in gt_boxes, only check BEV x-y axes", "\n", "candidate_anchors", "=", "anchors", "[", "topk_idxs", ".", "view", "(", "-", "1", ")", "]", "# (KxM, 7)", "\n", "gt_boxes_of_each_anchor", "=", "gt_boxes", "[", ":", ",", ":", "]", ".", "repeat", "(", "self", ".", "topk", ",", "1", ")", "# (KxM, 7)", "\n", "xyz_local", "=", "candidate_anchors", "[", ":", ",", "0", ":", "3", "]", "-", "gt_boxes_of_each_anchor", "[", ":", ",", "0", ":", "3", "]", "\n", "xyz_local", "=", "common_utils", ".", "rotate_points_along_z", "(", "\n", "xyz_local", "[", ":", ",", "None", ",", ":", "]", ",", "-", "gt_boxes_of_each_anchor", "[", ":", ",", "6", "]", "\n", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "xy_local", "=", "xyz_local", "[", ":", ",", "0", ":", "2", "]", "\n", "lw", "=", "gt_boxes_of_each_anchor", "[", ":", ",", "3", ":", "5", "]", "[", ":", ",", "[", "1", ",", "0", "]", "]", "# bugfixed: w ==> y, l ==> x in local coords", "\n", "is_in_gt", "=", "(", "(", "xy_local", "<=", "lw", "/", "2", ")", "&", "(", "xy_local", ">=", "-", "lw", "/", "2", ")", ")", ".", "all", "(", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ",", "num_gt", ")", "# (K, M)", "\n", "is_pos", "=", "is_pos", "&", "is_in_gt", "# (K, M)", "\n", "\n", "for", "ng", "in", "range", "(", "num_gt", ")", ":", "\n", "            ", "topk_idxs", "[", ":", ",", "ng", "]", "+=", "ng", "*", "num_anchor", "\n", "\n", "# select the highest IoU if an anchor box is assigned with multiple gt_boxes", "\n", "", "INF", "=", "-", "0x7FFFFFFF", "\n", "ious_inf", "=", "torch", ".", "full_like", "(", "ious", ",", "INF", ")", ".", "t", "(", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "# (MxN)", "\n", "index", "=", "topk_idxs", ".", "view", "(", "-", "1", ")", "[", "is_pos", ".", "view", "(", "-", "1", ")", "]", "\n", "ious_inf", "[", "index", "]", "=", "ious", ".", "t", "(", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "[", "index", "]", "\n", "ious_inf", "=", "ious_inf", ".", "view", "(", "num_gt", ",", "-", "1", ")", ".", "t", "(", ")", "# (N, M)", "\n", "\n", "anchors_to_gt_values", ",", "anchors_to_gt_indexs", "=", "ious_inf", ".", "max", "(", "dim", "=", "1", ")", "\n", "\n", "# match the gt_boxes to the anchors which have maximum iou with them", "\n", "max_iou_of_each_gt", ",", "argmax_iou_of_each_gt", "=", "ious", ".", "max", "(", "dim", "=", "0", ")", "\n", "anchors_to_gt_indexs", "[", "argmax_iou_of_each_gt", "]", "=", "torch", ".", "arange", "(", "0", ",", "num_gt", ",", "device", "=", "ious", ".", "device", ")", "\n", "anchors_to_gt_values", "[", "argmax_iou_of_each_gt", "]", "=", "max_iou_of_each_gt", "\n", "\n", "cls_labels", "=", "gt_classes", "[", "anchors_to_gt_indexs", "]", "\n", "cls_labels", "[", "anchors_to_gt_values", "==", "INF", "]", "=", "0", "\n", "matched_gts", "=", "gt_boxes", "[", "anchors_to_gt_indexs", "]", "\n", "\n", "pos_mask", "=", "cls_labels", ">", "0", "\n", "reg_targets", "=", "matched_gts", ".", "new_zeros", "(", "(", "num_anchor", ",", "self", ".", "box_coder", ".", "code_size", ")", ")", "\n", "reg_weights", "=", "matched_gts", ".", "new_zeros", "(", "num_anchor", ")", "\n", "if", "pos_mask", ".", "sum", "(", ")", ">", "0", ":", "\n", "            ", "reg_targets", "[", "pos_mask", ">", "0", "]", "=", "self", ".", "box_coder", ".", "encode_torch", "(", "matched_gts", "[", "pos_mask", ">", "0", "]", ",", "anchors", "[", "pos_mask", ">", "0", "]", ")", "\n", "reg_weights", "[", "pos_mask", "]", "=", "1.0", "\n", "\n", "", "return", "cls_labels", ",", "reg_targets", ",", "reg_weights", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.anchor_generator.AnchorGenerator.__init__": [[5, 16], ["object.__init__", "len", "config.get", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "anchor_range", ",", "anchor_generator_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "anchor_generator_cfg", "=", "anchor_generator_config", "\n", "self", ".", "anchor_range", "=", "anchor_range", "\n", "self", ".", "anchor_sizes", "=", "[", "config", "[", "'anchor_sizes'", "]", "for", "config", "in", "anchor_generator_config", "]", "\n", "self", ".", "anchor_rotations", "=", "[", "config", "[", "'anchor_rotations'", "]", "for", "config", "in", "anchor_generator_config", "]", "\n", "self", ".", "anchor_heights", "=", "[", "config", "[", "'anchor_bottom_heights'", "]", "for", "config", "in", "anchor_generator_config", "]", "\n", "self", ".", "align_center", "=", "[", "config", ".", "get", "(", "'align_center'", ",", "False", ")", "for", "config", "in", "anchor_generator_config", "]", "\n", "\n", "assert", "len", "(", "self", ".", "anchor_sizes", ")", "==", "len", "(", "self", ".", "anchor_rotations", ")", "==", "len", "(", "self", ".", "anchor_heights", ")", "\n", "self", ".", "num_of_anchor_sets", "=", "len", "(", "self", ".", "anchor_sizes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.anchor_generator.AnchorGenerator.generate_anchors": [[17, 61], ["zip", "len", "num_anchors_per_location.append", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda.new_tensor", "torch.arange().cuda.new_tensor", "torch.arange().cuda.new_tensor", "torch.meshgrid", "torch.stack", "anchors[].repeat", "anchor_size.view().repeat.view().repeat.view().repeat", "torch.cat", "anchors[].repeat", "anchor_rotation.view().repeat.view().repeat.view().repeat", "torch.cat", "anchors.permute().contiguous.permute().contiguous.permute().contiguous", "all_anchors.append", "anchor_size.view().repeat.view().repeat.__len__", "anchor_rotation.view().repeat.view().repeat.__len__", "len", "torch.arange", "torch.arange", "anchor_size.view().repeat.view().repeat.view", "anchor_rotation.view().repeat.view().repeat.view", "anchors.permute().contiguous.permute().contiguous.permute", "len", "len"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "def", "generate_anchors", "(", "self", ",", "grid_sizes", ")", ":", "\n", "        ", "assert", "len", "(", "grid_sizes", ")", "==", "self", ".", "num_of_anchor_sets", "\n", "all_anchors", "=", "[", "]", "\n", "num_anchors_per_location", "=", "[", "]", "\n", "for", "grid_size", ",", "anchor_size", ",", "anchor_rotation", ",", "anchor_height", ",", "align_center", "in", "zip", "(", "\n", "grid_sizes", ",", "self", ".", "anchor_sizes", ",", "self", ".", "anchor_rotations", ",", "self", ".", "anchor_heights", ",", "self", ".", "align_center", ")", ":", "\n", "\n", "            ", "num_anchors_per_location", ".", "append", "(", "len", "(", "anchor_rotation", ")", "*", "len", "(", "anchor_size", ")", "*", "len", "(", "anchor_height", ")", ")", "\n", "if", "align_center", ":", "\n", "                ", "x_stride", "=", "(", "self", ".", "anchor_range", "[", "3", "]", "-", "self", ".", "anchor_range", "[", "0", "]", ")", "/", "grid_size", "[", "0", "]", "\n", "y_stride", "=", "(", "self", ".", "anchor_range", "[", "4", "]", "-", "self", ".", "anchor_range", "[", "1", "]", ")", "/", "grid_size", "[", "1", "]", "\n", "x_offset", ",", "y_offset", "=", "x_stride", "/", "2", ",", "y_stride", "/", "2", "\n", "", "else", ":", "\n", "                ", "x_stride", "=", "(", "self", ".", "anchor_range", "[", "3", "]", "-", "self", ".", "anchor_range", "[", "0", "]", ")", "/", "(", "grid_size", "[", "0", "]", "-", "1", ")", "\n", "y_stride", "=", "(", "self", ".", "anchor_range", "[", "4", "]", "-", "self", ".", "anchor_range", "[", "1", "]", ")", "/", "(", "grid_size", "[", "1", "]", "-", "1", ")", "\n", "x_offset", ",", "y_offset", "=", "0", ",", "0", "\n", "\n", "", "x_shifts", "=", "torch", ".", "arange", "(", "\n", "self", ".", "anchor_range", "[", "0", "]", "+", "x_offset", ",", "self", ".", "anchor_range", "[", "3", "]", "+", "1e-5", ",", "step", "=", "x_stride", ",", "dtype", "=", "torch", ".", "float32", ",", "\n", ")", ".", "cuda", "(", ")", "\n", "y_shifts", "=", "torch", ".", "arange", "(", "\n", "self", ".", "anchor_range", "[", "1", "]", "+", "y_offset", ",", "self", ".", "anchor_range", "[", "4", "]", "+", "1e-5", ",", "step", "=", "y_stride", ",", "dtype", "=", "torch", ".", "float32", ",", "\n", ")", ".", "cuda", "(", ")", "\n", "z_shifts", "=", "x_shifts", ".", "new_tensor", "(", "anchor_height", ")", "\n", "\n", "num_anchor_size", ",", "num_anchor_rotation", "=", "anchor_size", ".", "__len__", "(", ")", ",", "anchor_rotation", ".", "__len__", "(", ")", "\n", "anchor_rotation", "=", "x_shifts", ".", "new_tensor", "(", "anchor_rotation", ")", "\n", "anchor_size", "=", "x_shifts", ".", "new_tensor", "(", "anchor_size", ")", "\n", "x_shifts", ",", "y_shifts", ",", "z_shifts", "=", "torch", ".", "meshgrid", "(", "[", "\n", "x_shifts", ",", "y_shifts", ",", "z_shifts", "\n", "]", ")", "# [x_grid, y_grid, z_grid]", "\n", "anchors", "=", "torch", ".", "stack", "(", "(", "x_shifts", ",", "y_shifts", ",", "z_shifts", ")", ",", "dim", "=", "-", "1", ")", "# [x, y, z, 3]", "\n", "anchors", "=", "anchors", "[", ":", ",", ":", ",", ":", ",", "None", ",", ":", "]", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "anchor_size", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "anchor_size", "=", "anchor_size", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ",", "3", ")", ".", "repeat", "(", "[", "*", "anchors", ".", "shape", "[", "0", ":", "3", "]", ",", "1", ",", "1", "]", ")", "\n", "anchors", "=", "torch", ".", "cat", "(", "(", "anchors", ",", "anchor_size", ")", ",", "dim", "=", "-", "1", ")", "\n", "anchors", "=", "anchors", "[", ":", ",", ":", ",", ":", ",", ":", ",", "None", ",", ":", "]", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "1", ",", "num_anchor_rotation", ",", "1", ")", "\n", "anchor_rotation", "=", "anchor_rotation", ".", "view", "(", "1", ",", "1", ",", "1", ",", "1", ",", "-", "1", ",", "1", ")", ".", "repeat", "(", "[", "*", "anchors", ".", "shape", "[", "0", ":", "3", "]", ",", "num_anchor_size", ",", "1", ",", "1", "]", ")", "\n", "anchors", "=", "torch", ".", "cat", "(", "(", "anchors", ",", "anchor_rotation", ")", ",", "dim", "=", "-", "1", ")", "# [x, y, z, num_size, num_rot, 7]", "\n", "\n", "anchors", "=", "anchors", ".", "permute", "(", "2", ",", "1", ",", "0", ",", "3", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", "\n", "#anchors = anchors.view(-1, anchors.shape[-1])", "\n", "anchors", "[", "...", ",", "2", "]", "+=", "anchors", "[", "...", ",", "5", "]", "/", "2", "# shift to box centers", "\n", "all_anchors", ".", "append", "(", "anchors", ")", "\n", "", "return", "all_anchors", ",", "num_anchors_per_location", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.axis_aligned_target_assigner.AxisAlignedTargetAssigner.__init__": [[9, 35], ["object.__init__", "numpy.array", "model_cfg.get", "model_cfg.get", "enumerate"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "class_names", ",", "box_coder", ",", "match_height", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "anchor_generator_cfg", "=", "model_cfg", ".", "ANCHOR_GENERATOR_CONFIG", "\n", "anchor_target_cfg", "=", "model_cfg", ".", "TARGET_ASSIGNER_CONFIG", "\n", "self", ".", "box_coder", "=", "box_coder", "\n", "self", ".", "match_height", "=", "match_height", "\n", "self", ".", "class_names", "=", "np", ".", "array", "(", "class_names", ")", "\n", "self", ".", "anchor_class_names", "=", "[", "config", "[", "'class_name'", "]", "for", "config", "in", "anchor_generator_cfg", "]", "\n", "self", ".", "pos_fraction", "=", "anchor_target_cfg", ".", "POS_FRACTION", "if", "anchor_target_cfg", ".", "POS_FRACTION", ">=", "0", "else", "None", "\n", "self", ".", "sample_size", "=", "anchor_target_cfg", ".", "SAMPLE_SIZE", "\n", "self", ".", "norm_by_num_examples", "=", "anchor_target_cfg", ".", "NORM_BY_NUM_EXAMPLES", "\n", "self", ".", "matched_thresholds", "=", "{", "}", "\n", "self", ".", "unmatched_thresholds", "=", "{", "}", "\n", "for", "config", "in", "anchor_generator_cfg", ":", "\n", "            ", "self", ".", "matched_thresholds", "[", "config", "[", "'class_name'", "]", "]", "=", "config", "[", "'matched_threshold'", "]", "\n", "self", ".", "unmatched_thresholds", "[", "config", "[", "'class_name'", "]", "]", "=", "config", "[", "'unmatched_threshold'", "]", "\n", "\n", "", "self", ".", "use_multihead", "=", "model_cfg", ".", "get", "(", "'USE_MULTIHEAD'", ",", "False", ")", "\n", "self", ".", "seperate_multihead", "=", "model_cfg", ".", "get", "(", "'SEPERATE_MULTIHEAD'", ",", "False", ")", "\n", "if", "self", ".", "seperate_multihead", ":", "\n", "            ", "rpn_head_cfgs", "=", "model_cfg", ".", "RPN_HEAD_CFGS", "\n", "self", ".", "gt_remapping", "=", "{", "}", "\n", "for", "rpn_head_cfg", "in", "rpn_head_cfgs", ":", "\n", "                ", "for", "idx", ",", "name", "in", "enumerate", "(", "rpn_head_cfg", "[", "'HEAD_CLS_NAME'", "]", ")", ":", "\n", "                    ", "self", ".", "gt_remapping", "[", "name", "]", "=", "idx", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.axis_aligned_target_assigner.AxisAlignedTargetAssigner.assign_targets": [[36, 130], ["range", "torch.stack", "torch.stack", "torch.stack", "[].int", "zip", "torch.stack.append", "torch.stack.append", "torch.stack.append", "cur_gt.__len__", "axis_aligned_target_assigner.AxisAlignedTargetAssigner.assign_targets_single", "target_list.append", "torch.cat", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "cur_gt[].sum", "torch.from_numpy", "torch.tensor", "anchors.view.view.permute().contiguous().view", "anchors.view.view.view", "cur_gt_classes[].clone", "t[].view", "t[].view", "t[].view", "torch.cat", "torch.cat", "t[].view", "t[].view", "t[].view", "torch.cat", "torch.cat", "torch.cat", "anchors.view.view.permute().contiguous", "len", "anchors.view.view.permute", "[].int.cpu"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.axis_aligned_target_assigner.AxisAlignedTargetAssigner.assign_targets_single"], ["", "", "", "", "def", "assign_targets", "(", "self", ",", "all_anchors", ",", "gt_boxes_with_classes", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            all_anchors: [(N, 7), ...]\n            gt_boxes: (B, M, 8)\n        Returns:\n\n        \"\"\"", "\n", "\n", "bbox_targets", "=", "[", "]", "\n", "cls_labels", "=", "[", "]", "\n", "reg_weights", "=", "[", "]", "\n", "\n", "batch_size", "=", "gt_boxes_with_classes", ".", "shape", "[", "0", "]", "\n", "gt_classes", "=", "gt_boxes_with_classes", "[", ":", ",", ":", ",", "-", "1", "]", "\n", "gt_boxes", "=", "gt_boxes_with_classes", "[", ":", ",", ":", ",", ":", "-", "1", "]", "\n", "for", "k", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "cur_gt", "=", "gt_boxes", "[", "k", "]", "\n", "cnt", "=", "cur_gt", ".", "__len__", "(", ")", "-", "1", "\n", "while", "cnt", ">", "0", "and", "cur_gt", "[", "cnt", "]", ".", "sum", "(", ")", "==", "0", ":", "\n", "                ", "cnt", "-=", "1", "\n", "", "cur_gt", "=", "cur_gt", "[", ":", "cnt", "+", "1", "]", "\n", "cur_gt_classes", "=", "gt_classes", "[", "k", "]", "[", ":", "cnt", "+", "1", "]", ".", "int", "(", ")", "\n", "\n", "target_list", "=", "[", "]", "\n", "for", "anchor_class_name", ",", "anchors", "in", "zip", "(", "self", ".", "anchor_class_names", ",", "all_anchors", ")", ":", "\n", "                ", "if", "cur_gt_classes", ".", "shape", "[", "0", "]", ">", "1", ":", "\n", "                    ", "mask", "=", "torch", ".", "from_numpy", "(", "self", ".", "class_names", "[", "cur_gt_classes", ".", "cpu", "(", ")", "-", "1", "]", "==", "anchor_class_name", ")", "\n", "", "else", ":", "\n", "                    ", "mask", "=", "torch", ".", "tensor", "(", "[", "self", ".", "class_names", "[", "c", "-", "1", "]", "==", "anchor_class_name", "\n", "for", "c", "in", "cur_gt_classes", "]", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "\n", "", "if", "self", ".", "use_multihead", ":", "\n", "                    ", "anchors", "=", "anchors", ".", "permute", "(", "3", ",", "4", ",", "0", ",", "1", ",", "2", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "anchors", ".", "shape", "[", "-", "1", "]", ")", "\n", "if", "self", ".", "seperate_multihead", ":", "\n", "                        ", "selected_classes", "=", "cur_gt_classes", "[", "mask", "]", ".", "clone", "(", ")", "\n", "if", "len", "(", "selected_classes", ")", ">", "0", ":", "\n", "                            ", "new_cls_id", "=", "self", ".", "gt_remapping", "[", "anchor_class_name", "]", "\n", "selected_classes", "[", ":", "]", "=", "new_cls_id", "\n", "", "", "else", ":", "\n", "                        ", "selected_classes", "=", "cur_gt_classes", "[", "mask", "]", "\n", "", "", "else", ":", "\n", "                    ", "feature_map_size", "=", "anchors", ".", "shape", "[", ":", "3", "]", "\n", "anchors", "=", "anchors", ".", "view", "(", "-", "1", ",", "anchors", ".", "shape", "[", "-", "1", "]", ")", "\n", "selected_classes", "=", "cur_gt_classes", "[", "mask", "]", "\n", "\n", "", "single_target", "=", "self", ".", "assign_targets_single", "(", "\n", "anchors", ",", "\n", "cur_gt", "[", "mask", "]", ",", "\n", "gt_classes", "=", "selected_classes", ",", "\n", "matched_threshold", "=", "self", ".", "matched_thresholds", "[", "anchor_class_name", "]", ",", "\n", "unmatched_threshold", "=", "self", ".", "unmatched_thresholds", "[", "anchor_class_name", "]", "\n", ")", "\n", "target_list", ".", "append", "(", "single_target", ")", "\n", "\n", "", "if", "self", ".", "use_multihead", ":", "\n", "                ", "target_dict", "=", "{", "\n", "'box_cls_labels'", ":", "[", "t", "[", "'box_cls_labels'", "]", ".", "view", "(", "-", "1", ")", "for", "t", "in", "target_list", "]", ",", "\n", "'box_reg_targets'", ":", "[", "t", "[", "'box_reg_targets'", "]", ".", "view", "(", "-", "1", ",", "self", ".", "box_coder", ".", "code_size", ")", "for", "t", "in", "target_list", "]", ",", "\n", "'reg_weights'", ":", "[", "t", "[", "'reg_weights'", "]", ".", "view", "(", "-", "1", ")", "for", "t", "in", "target_list", "]", "\n", "}", "\n", "\n", "target_dict", "[", "'box_reg_targets'", "]", "=", "torch", ".", "cat", "(", "target_dict", "[", "'box_reg_targets'", "]", ",", "dim", "=", "0", ")", "\n", "target_dict", "[", "'box_cls_labels'", "]", "=", "torch", ".", "cat", "(", "target_dict", "[", "'box_cls_labels'", "]", ",", "dim", "=", "0", ")", ".", "view", "(", "-", "1", ")", "\n", "target_dict", "[", "'reg_weights'", "]", "=", "torch", ".", "cat", "(", "target_dict", "[", "'reg_weights'", "]", ",", "dim", "=", "0", ")", ".", "view", "(", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "target_dict", "=", "{", "\n", "'box_cls_labels'", ":", "[", "t", "[", "'box_cls_labels'", "]", ".", "view", "(", "*", "feature_map_size", ",", "-", "1", ")", "for", "t", "in", "target_list", "]", ",", "\n", "'box_reg_targets'", ":", "[", "t", "[", "'box_reg_targets'", "]", ".", "view", "(", "*", "feature_map_size", ",", "-", "1", ",", "self", ".", "box_coder", ".", "code_size", ")", "\n", "for", "t", "in", "target_list", "]", ",", "\n", "'reg_weights'", ":", "[", "t", "[", "'reg_weights'", "]", ".", "view", "(", "*", "feature_map_size", ",", "-", "1", ")", "for", "t", "in", "target_list", "]", "\n", "}", "\n", "target_dict", "[", "'box_reg_targets'", "]", "=", "torch", ".", "cat", "(", "\n", "target_dict", "[", "'box_reg_targets'", "]", ",", "dim", "=", "-", "2", "\n", ")", ".", "view", "(", "-", "1", ",", "self", ".", "box_coder", ".", "code_size", ")", "\n", "\n", "target_dict", "[", "'box_cls_labels'", "]", "=", "torch", ".", "cat", "(", "target_dict", "[", "'box_cls_labels'", "]", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ")", "\n", "target_dict", "[", "'reg_weights'", "]", "=", "torch", ".", "cat", "(", "target_dict", "[", "'reg_weights'", "]", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "", "bbox_targets", ".", "append", "(", "target_dict", "[", "'box_reg_targets'", "]", ")", "\n", "cls_labels", ".", "append", "(", "target_dict", "[", "'box_cls_labels'", "]", ")", "\n", "reg_weights", ".", "append", "(", "target_dict", "[", "'reg_weights'", "]", ")", "\n", "\n", "", "bbox_targets", "=", "torch", ".", "stack", "(", "bbox_targets", ",", "dim", "=", "0", ")", "\n", "\n", "cls_labels", "=", "torch", ".", "stack", "(", "cls_labels", ",", "dim", "=", "0", ")", "\n", "reg_weights", "=", "torch", ".", "stack", "(", "reg_weights", ",", "dim", "=", "0", ")", "\n", "all_targets_dict", "=", "{", "\n", "'box_cls_labels'", ":", "cls_labels", ",", "\n", "'box_reg_targets'", ":", "bbox_targets", ",", "\n", "'reg_weights'", ":", "reg_weights", "\n", "\n", "}", "\n", "return", "all_targets_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.target_assigner.axis_aligned_target_assigner.AxisAlignedTargetAssigner.assign_targets_single": [[131, 214], ["anchors.new_zeros", "anchors.new_zeros", "torch.ones", "torch.ones", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "gt_inds_force.int", "gt_inds_over_thresh.int", "torch.arange", "int", "axis_aligned_target_assigner.AxisAlignedTargetAssigner.box_coder.encode_torch", "len", "ops.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu", "utils.box_utils.boxes3d_nearest_bev_iou", "len", "len", "len", "torch.from_numpy", "torch.from_numpy", "len", "torch.randperm", "len", "anchor_by_gt_overlap.cpu().numpy().argmax", "torch.arange", "anchor_by_gt_overlap.cpu().numpy().argmax", "torch.arange", "len", "torch.randint", "len", "anchor_by_gt_overlap.cpu().numpy", "anchor_by_gt_overlap.cpu().numpy", "anchor_by_gt_overlap.cpu", "anchor_by_gt_overlap.cpu"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.encode_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.iou3d_nms.iou3d_nms_utils.boxes_iou3d_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.boxes3d_nearest_bev_iou"], ["", "def", "assign_targets_single", "(", "self", ",", "anchors", ",", "\n", "gt_boxes", ",", "\n", "gt_classes", ",", "\n", "matched_threshold", "=", "0.6", ",", "\n", "unmatched_threshold", "=", "0.45", "\n", ")", ":", "\n", "\n", "        ", "num_anchors", "=", "anchors", ".", "shape", "[", "0", "]", "\n", "num_gt", "=", "gt_boxes", ".", "shape", "[", "0", "]", "\n", "\n", "labels", "=", "torch", ".", "ones", "(", "(", "num_anchors", ",", ")", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "anchors", ".", "device", ")", "*", "-", "1", "\n", "gt_ids", "=", "torch", ".", "ones", "(", "(", "num_anchors", ",", ")", ",", "dtype", "=", "torch", ".", "int32", ",", "device", "=", "anchors", ".", "device", ")", "*", "-", "1", "\n", "\n", "if", "len", "(", "gt_boxes", ")", ">", "0", "and", "anchors", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "anchor_by_gt_overlap", "=", "iou3d_nms_utils", ".", "boxes_iou3d_gpu", "(", "anchors", "[", ":", ",", "0", ":", "7", "]", ",", "gt_boxes", "[", ":", ",", "0", ":", "7", "]", ")", "if", "self", ".", "match_height", "else", "box_utils", ".", "boxes3d_nearest_bev_iou", "(", "anchors", "[", ":", ",", "0", ":", "7", "]", ",", "gt_boxes", "[", ":", ",", "0", ":", "7", "]", ")", "\n", "\n", "anchor_to_gt_argmax", "=", "torch", ".", "from_numpy", "(", "anchor_by_gt_overlap", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "argmax", "(", "axis", "=", "1", ")", ")", ".", "cuda", "(", ")", "\n", "anchor_to_gt_max", "=", "anchor_by_gt_overlap", "[", "\n", "torch", ".", "arange", "(", "num_anchors", ",", "device", "=", "anchors", ".", "device", ")", ",", "anchor_to_gt_argmax", "\n", "]", "\n", "\n", "gt_to_anchor_argmax", "=", "torch", ".", "from_numpy", "(", "anchor_by_gt_overlap", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "argmax", "(", "axis", "=", "0", ")", ")", ".", "cuda", "(", ")", "\n", "gt_to_anchor_max", "=", "anchor_by_gt_overlap", "[", "gt_to_anchor_argmax", ",", "torch", ".", "arange", "(", "num_gt", ",", "device", "=", "anchors", ".", "device", ")", "]", "\n", "empty_gt_mask", "=", "gt_to_anchor_max", "==", "0", "\n", "gt_to_anchor_max", "[", "empty_gt_mask", "]", "=", "-", "1", "\n", "\n", "anchors_with_max_overlap", "=", "(", "anchor_by_gt_overlap", "==", "gt_to_anchor_max", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "gt_inds_force", "=", "anchor_to_gt_argmax", "[", "anchors_with_max_overlap", "]", "\n", "labels", "[", "anchors_with_max_overlap", "]", "=", "gt_classes", "[", "gt_inds_force", "]", "\n", "gt_ids", "[", "anchors_with_max_overlap", "]", "=", "gt_inds_force", ".", "int", "(", ")", "\n", "\n", "pos_inds", "=", "anchor_to_gt_max", ">=", "matched_threshold", "\n", "gt_inds_over_thresh", "=", "anchor_to_gt_argmax", "[", "pos_inds", "]", "\n", "labels", "[", "pos_inds", "]", "=", "gt_classes", "[", "gt_inds_over_thresh", "]", "\n", "gt_ids", "[", "pos_inds", "]", "=", "gt_inds_over_thresh", ".", "int", "(", ")", "\n", "bg_inds", "=", "(", "anchor_to_gt_max", "<", "unmatched_threshold", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "", "else", ":", "\n", "            ", "bg_inds", "=", "torch", ".", "arange", "(", "num_anchors", ",", "device", "=", "anchors", ".", "device", ")", "\n", "\n", "", "fg_inds", "=", "(", "labels", ">", "0", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "\n", "if", "self", ".", "pos_fraction", "is", "not", "None", ":", "\n", "            ", "num_fg", "=", "int", "(", "self", ".", "pos_fraction", "*", "self", ".", "sample_size", ")", "\n", "if", "len", "(", "fg_inds", ")", ">", "num_fg", ":", "\n", "                ", "num_disabled", "=", "len", "(", "fg_inds", ")", "-", "num_fg", "\n", "disable_inds", "=", "torch", ".", "randperm", "(", "len", "(", "fg_inds", ")", ")", "[", ":", "num_disabled", "]", "\n", "labels", "[", "disable_inds", "]", "=", "-", "1", "\n", "fg_inds", "=", "(", "labels", ">", "0", ")", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "\n", "", "num_bg", "=", "self", ".", "sample_size", "-", "(", "labels", ">", "0", ")", ".", "sum", "(", ")", "\n", "if", "len", "(", "bg_inds", ")", ">", "num_bg", ":", "\n", "                ", "enable_inds", "=", "bg_inds", "[", "torch", ".", "randint", "(", "0", ",", "len", "(", "bg_inds", ")", ",", "size", "=", "(", "num_bg", ",", ")", ")", "]", "\n", "labels", "[", "enable_inds", "]", "=", "0", "\n", "# bg_inds = torch.nonzero(labels == 0)[:, 0]", "\n", "", "", "else", ":", "\n", "            ", "if", "len", "(", "gt_boxes", ")", "==", "0", "or", "anchors", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "                ", "labels", "[", ":", "]", "=", "0", "\n", "", "else", ":", "\n", "                ", "labels", "[", "bg_inds", "]", "=", "0", "\n", "labels", "[", "anchors_with_max_overlap", "]", "=", "gt_classes", "[", "gt_inds_force", "]", "\n", "\n", "", "", "bbox_targets", "=", "anchors", ".", "new_zeros", "(", "(", "num_anchors", ",", "self", ".", "box_coder", ".", "code_size", ")", ")", "\n", "if", "len", "(", "gt_boxes", ")", ">", "0", "and", "anchors", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "fg_gt_boxes", "=", "gt_boxes", "[", "anchor_to_gt_argmax", "[", "fg_inds", "]", ",", ":", "]", "\n", "fg_anchors", "=", "anchors", "[", "fg_inds", ",", ":", "]", "\n", "bbox_targets", "[", "fg_inds", ",", ":", "]", "=", "self", ".", "box_coder", ".", "encode_torch", "(", "fg_gt_boxes", ",", "fg_anchors", ")", "\n", "\n", "", "reg_weights", "=", "anchors", ".", "new_zeros", "(", "(", "num_anchors", ",", ")", ")", "\n", "\n", "if", "self", ".", "norm_by_num_examples", ":", "\n", "            ", "num_examples", "=", "(", "labels", ">=", "0", ")", ".", "sum", "(", ")", "\n", "num_examples", "=", "num_examples", "if", "num_examples", ">", "1.0", "else", "1.0", "\n", "reg_weights", "[", "labels", ">", "0", "]", "=", "1.0", "/", "num_examples", "\n", "", "else", ":", "\n", "            ", "reg_weights", "[", "labels", ">", "0", "]", "=", "1.0", "\n", "\n", "", "ret_dict", "=", "{", "\n", "'box_cls_labels'", ":", "labels", ",", "\n", "'box_reg_targets'", ":", "bbox_targets", ",", "\n", "'reg_weights'", ":", "reg_weights", ",", "\n", "}", "\n", "return", "ret_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_simple.PointHeadSimple.__init__": [[13, 19], ["point_head_template.PointHeadTemplate.__init__", "point_head_simple.PointHeadSimple.make_fc_layers"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers"], ["def", "__init__", "(", "self", ",", "num_class", ",", "input_channels", ",", "model_cfg", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ")", "\n", "self", ".", "cls_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "fc_cfg", "=", "self", ".", "model_cfg", ".", "CLS_FC", ",", "\n", "input_channels", "=", "input_channels", ",", "\n", "output_channels", "=", "num_class", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_simple.PointHeadSimple.assign_targets": [[21, 49], ["utils.box_utils.enlarge_box3d().view", "point_head_simple.PointHeadSimple.assign_stack_targets", "gt_boxes.shape.__len__", "str", "point_coords.shape.__len__", "str", "utils.box_utils.enlarge_box3d", "gt_boxes.view"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.assign_stack_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.enlarge_box3d"], ["", "def", "assign_targets", "(", "self", ",", "input_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            input_dict:\n                point_features: (N1 + N2 + N3 + ..., C)\n                batch_size:\n                point_coords: (N1 + N2 + N3 + ..., 4) [bs_idx, x, y, z]\n                gt_boxes (optional): (B, M, 8)\n        Returns:\n            point_cls_labels: (N1 + N2 + N3 + ...), long type, 0:background, -1:ignored\n            point_part_labels: (N1 + N2 + N3 + ..., 3)\n        \"\"\"", "\n", "point_coords", "=", "input_dict", "[", "'point_coords'", "]", "\n", "gt_boxes", "=", "input_dict", "[", "'gt_boxes'", "]", "\n", "assert", "gt_boxes", ".", "shape", ".", "__len__", "(", ")", "==", "3", ",", "'gt_boxes.shape=%s'", "%", "str", "(", "gt_boxes", ".", "shape", ")", "\n", "assert", "point_coords", ".", "shape", ".", "__len__", "(", ")", "in", "[", "2", "]", ",", "'points.shape=%s'", "%", "str", "(", "point_coords", ".", "shape", ")", "\n", "\n", "batch_size", "=", "gt_boxes", ".", "shape", "[", "0", "]", "\n", "extend_gt_boxes", "=", "box_utils", ".", "enlarge_box3d", "(", "\n", "gt_boxes", ".", "view", "(", "-", "1", ",", "gt_boxes", ".", "shape", "[", "-", "1", "]", ")", ",", "extra_width", "=", "self", ".", "model_cfg", ".", "TARGET_CONFIG", ".", "GT_EXTRA_WIDTH", "\n", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "gt_boxes", ".", "shape", "[", "-", "1", "]", ")", "\n", "targets_dict", "=", "self", ".", "assign_stack_targets", "(", "\n", "points", "=", "point_coords", ",", "gt_boxes", "=", "gt_boxes", ",", "extend_gt_boxes", "=", "extend_gt_boxes", ",", "\n", "set_ignore_flag", "=", "True", ",", "use_ball_constraint", "=", "False", ",", "\n", "ret_part_labels", "=", "False", "\n", ")", "\n", "\n", "return", "targets_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_simple.PointHeadSimple.get_loss": [[50, 57], ["point_head_simple.PointHeadSimple.get_cls_layer_loss", "tb_dict.update"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.get_cls_layer_loss"], ["", "def", "get_loss", "(", "self", ",", "tb_dict", "=", "None", ")", ":", "\n", "        ", "tb_dict", "=", "{", "}", "if", "tb_dict", "is", "None", "else", "tb_dict", "\n", "point_loss_cls", ",", "tb_dict_1", "=", "self", ".", "get_cls_layer_loss", "(", ")", "\n", "\n", "point_loss", "=", "point_loss_cls", "\n", "tb_dict", ".", "update", "(", "tb_dict_1", ")", "\n", "return", "point_loss", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_simple.PointHeadSimple.forward": [[58, 92], ["point_head_simple.PointHeadSimple.model_cfg.get", "point_head_simple.PointHeadSimple.cls_layers", "torch.sigmoid", "torch.sigmoid.max", "point_head_simple.PointHeadSimple.assign_targets"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                point_features: (N1 + N2 + N3 + ..., C) or (B, N, C)\n                point_features_before_fusion: (N1 + N2 + N3 + ..., C)\n                point_coords: (N1 + N2 + N3 + ..., 4) [bs_idx, x, y, z]\n                point_labels (optional): (N1 + N2 + N3 + ...)\n                gt_boxes (optional): (B, M, 8)\n        Returns:\n            batch_dict:\n                point_cls_scores: (N1 + N2 + N3 + ..., 1)\n                point_part_offset: (N1 + N2 + N3 + ..., 3)\n        \"\"\"", "\n", "if", "self", ".", "model_cfg", ".", "get", "(", "'USE_POINT_FEATURES_BEFORE_FUSION'", ",", "False", ")", ":", "\n", "            ", "point_features", "=", "batch_dict", "[", "'point_features_before_fusion'", "]", "\n", "", "else", ":", "\n", "            ", "point_features", "=", "batch_dict", "[", "'point_features'", "]", "\n", "", "point_cls_preds", "=", "self", ".", "cls_layers", "(", "point_features", ")", "# (total_points, num_class)", "\n", "\n", "ret_dict", "=", "{", "\n", "'point_cls_preds'", ":", "point_cls_preds", ",", "\n", "}", "\n", "\n", "point_cls_scores", "=", "torch", ".", "sigmoid", "(", "point_cls_preds", ")", "\n", "batch_dict", "[", "'point_cls_scores'", "]", ",", "_", "=", "point_cls_scores", ".", "max", "(", "dim", "=", "-", "1", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "targets_dict", "=", "self", ".", "assign_targets", "(", "batch_dict", ")", "\n", "ret_dict", "[", "'point_cls_labels'", "]", "=", "targets_dict", "[", "'point_cls_labels'", "]", "\n", "", "self", ".", "forward_ret_dict", "=", "ret_dict", "\n", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_single.AnchorHeadSingle.__init__": [[8, 35], ["anchor_head_template.AnchorHeadTemplate.__init__", "sum", "torch.Conv2d", "torch.Conv2d", "anchor_head_single.AnchorHeadSingle.init_weights", "anchor_head_single.AnchorHeadSingle.model_cfg.get", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.SingleHead.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "input_channels", ",", "num_class", ",", "class_names", ",", "grid_size", ",", "point_cloud_range", ",", "\n", "predict_boxes_when_training", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ",", "class_names", "=", "class_names", ",", "grid_size", "=", "grid_size", ",", "point_cloud_range", "=", "point_cloud_range", ",", "\n", "predict_boxes_when_training", "=", "predict_boxes_when_training", "\n", ")", "\n", "\n", "self", ".", "num_anchors_per_location", "=", "sum", "(", "self", ".", "num_anchors_per_location", ")", "\n", "\n", "self", ".", "conv_cls", "=", "nn", ".", "Conv2d", "(", "\n", "input_channels", ",", "self", ".", "num_anchors_per_location", "*", "self", ".", "num_class", ",", "\n", "kernel_size", "=", "1", "\n", ")", "\n", "self", ".", "conv_box", "=", "nn", ".", "Conv2d", "(", "\n", "input_channels", ",", "self", ".", "num_anchors_per_location", "*", "self", ".", "box_coder", ".", "code_size", ",", "\n", "kernel_size", "=", "1", "\n", ")", "\n", "\n", "if", "self", ".", "model_cfg", ".", "get", "(", "'USE_DIRECTION_CLASSIFIER'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "self", ".", "conv_dir_cls", "=", "nn", ".", "Conv2d", "(", "\n", "input_channels", ",", "\n", "self", ".", "num_anchors_per_location", "*", "self", ".", "model_cfg", ".", "NUM_DIR_BINS", ",", "\n", "kernel_size", "=", "1", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv_dir_cls", "=", "None", "\n", "", "self", ".", "init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_single.AnchorHeadSingle.init_weights": [[36, 40], ["torch.init.constant_", "torch.init.normal_", "numpy.log"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "pi", "=", "0.01", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv_cls", ".", "bias", ",", "-", "np", ".", "log", "(", "(", "1", "-", "pi", ")", "/", "pi", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "conv_box", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_single.AnchorHeadSingle.forward": [[41, 76], ["anchor_head_single.AnchorHeadSingle.conv_cls", "anchor_head_single.AnchorHeadSingle.conv_box", "cls_preds.permute().contiguous.permute().contiguous.permute().contiguous", "box_preds.permute().contiguous.permute().contiguous.permute().contiguous", "anchor_head_single.AnchorHeadSingle.conv_dir_cls", "dir_cls_preds.permute().contiguous.permute().contiguous.permute().contiguous", "anchor_head_single.AnchorHeadSingle.assign_targets", "anchor_head_single.AnchorHeadSingle.forward_ret_dict.update", "anchor_head_single.AnchorHeadSingle.generate_predicted_boxes", "cls_preds.permute().contiguous.permute().contiguous.permute", "box_preds.permute().contiguous.permute().contiguous.permute", "dir_cls_preds.permute().contiguous.permute().contiguous.permute"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_predicted_boxes"], ["", "def", "forward", "(", "self", ",", "data_dict", ")", ":", "\n", "        ", "spatial_features_2d", "=", "data_dict", "[", "'spatial_features_2d'", "]", "\n", "\n", "cls_preds", "=", "self", ".", "conv_cls", "(", "spatial_features_2d", ")", "\n", "box_preds", "=", "self", ".", "conv_box", "(", "spatial_features_2d", ")", "\n", "\n", "cls_preds", "=", "cls_preds", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "# [N, H, W, C]", "\n", "box_preds", "=", "box_preds", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "# [N, H, W, C]", "\n", "\n", "self", ".", "forward_ret_dict", "[", "'cls_preds'", "]", "=", "cls_preds", "\n", "self", ".", "forward_ret_dict", "[", "'box_preds'", "]", "=", "box_preds", "\n", "\n", "if", "self", ".", "conv_dir_cls", "is", "not", "None", ":", "\n", "            ", "dir_cls_preds", "=", "self", ".", "conv_dir_cls", "(", "spatial_features_2d", ")", "\n", "dir_cls_preds", "=", "dir_cls_preds", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "self", ".", "forward_ret_dict", "[", "'dir_cls_preds'", "]", "=", "dir_cls_preds", "\n", "", "else", ":", "\n", "            ", "dir_cls_preds", "=", "None", "\n", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "targets_dict", "=", "self", ".", "assign_targets", "(", "\n", "gt_boxes", "=", "data_dict", "[", "'gt_boxes'", "]", "\n", ")", "\n", "self", ".", "forward_ret_dict", ".", "update", "(", "targets_dict", ")", "\n", "\n", "", "if", "not", "self", ".", "training", "or", "self", ".", "predict_boxes_when_training", ":", "\n", "            ", "batch_cls_preds", ",", "batch_box_preds", "=", "self", ".", "generate_predicted_boxes", "(", "\n", "batch_size", "=", "data_dict", "[", "'batch_size'", "]", ",", "\n", "cls_preds", "=", "cls_preds", ",", "box_preds", "=", "box_preds", ",", "dir_cls_preds", "=", "dir_cls_preds", "\n", ")", "\n", "data_dict", "[", "'batch_cls_preds'", "]", "=", "batch_cls_preds", "\n", "data_dict", "[", "'batch_box_preds'", "]", "=", "batch_box_preds", "\n", "data_dict", "[", "'cls_preds_normalized'", "]", "=", "False", "\n", "\n", "", "return", "data_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.__init__": [[10, 17], ["torch.Module.__init__", "point_head_template.PointHeadTemplate.build_losses"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.build_losses"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_class", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "num_class", "=", "num_class", "\n", "\n", "self", ".", "build_losses", "(", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ")", "\n", "self", ".", "forward_ret_dict", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.build_losses": [[18, 34], ["point_head_template.PointHeadTemplate.add_module", "losses_cfg.get", "utils.loss_utils.SigmoidFocalClassificationLoss", "utils.loss_utils.WeightedSmoothL1Loss", "losses_cfg.LOSS_WEIGHTS.get"], "methods", ["None"], ["", "def", "build_losses", "(", "self", ",", "losses_cfg", ")", ":", "\n", "        ", "self", ".", "add_module", "(", "\n", "'cls_loss_func'", ",", "\n", "loss_utils", ".", "SigmoidFocalClassificationLoss", "(", "alpha", "=", "0.25", ",", "gamma", "=", "2.0", ")", "\n", ")", "\n", "reg_loss_type", "=", "losses_cfg", ".", "get", "(", "'LOSS_REG'", ",", "None", ")", "\n", "if", "reg_loss_type", "==", "'smooth-l1'", ":", "\n", "            ", "self", ".", "reg_loss_func", "=", "F", ".", "smooth_l1_loss", "\n", "", "elif", "reg_loss_type", "==", "'l1'", ":", "\n", "            ", "self", ".", "reg_loss_func", "=", "F", ".", "l1_loss", "\n", "", "elif", "reg_loss_type", "==", "'WeightedSmoothL1Loss'", ":", "\n", "            ", "self", ".", "reg_loss_func", "=", "loss_utils", ".", "WeightedSmoothL1Loss", "(", "\n", "code_weights", "=", "losses_cfg", ".", "LOSS_WEIGHTS", ".", "get", "(", "'code_weights'", ",", "None", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "reg_loss_func", "=", "F", ".", "smooth_l1_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers": [[35, 48], ["range", "fc_layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "fc_cfg.__len__", "fc_layers.extend", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__"], ["", "", "@", "staticmethod", "\n", "def", "make_fc_layers", "(", "fc_cfg", ",", "input_channels", ",", "output_channels", ")", ":", "\n", "        ", "fc_layers", "=", "[", "]", "\n", "c_in", "=", "input_channels", "\n", "for", "k", "in", "range", "(", "0", ",", "fc_cfg", ".", "__len__", "(", ")", ")", ":", "\n", "            ", "fc_layers", ".", "extend", "(", "[", "\n", "nn", ".", "Linear", "(", "c_in", ",", "fc_cfg", "[", "k", "]", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "fc_cfg", "[", "k", "]", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "]", ")", "\n", "c_in", "=", "fc_cfg", "[", "k", "]", "\n", "", "fc_layers", ".", "append", "(", "nn", ".", "Linear", "(", "c_in", ",", "output_channels", ",", "bias", "=", "True", ")", ")", "\n", "return", "nn", ".", "Sequential", "(", "*", "fc_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.assign_stack_targets": [[49, 130], ["points.new_zeros().long", "range", "str", "str", "str", "gt_boxes.new_zeros", "gt_boxes.new_zeros", "points.new_zeros().long.new_zeros", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu().long().squeeze", "len", "len", "points.new_zeros", "bs_mask.sum", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu().long().squeeze", "gt_box_of_fg_points[].long", "point_box_labels.new_zeros", "point_head_template.PointHeadTemplate.box_coder.encode_torch", "point_part_labels.new_zeros", "utils.common_utils.rotate_points_along_z().view", "torch.tensor().view().type_as", "torch.tensor().view().type_as", "torch.tensor().view().type_as", "torch.tensor().view().type_as", "torch.tensor().view().type_as", "torch.tensor().view().type_as", "torch.tensor().view().type_as", "torch.tensor().view().type_as", "torch.tensor().view().type_as", "len", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu().long", "[].clone", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu().long", "bs_mask.sum", "gt_box_of_fg_points[].long", "bs_mask.sum", "utils.common_utils.rotate_points_along_z", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu", "utils.common_utils.rotate_points_along_z().view.view", "points_single.unsqueeze", "gt_boxes[].contiguous", "ops.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "points_single.unsqueeze", "extend_gt_boxes[].contiguous"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.encode_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.visual_utils.visualize_utils.rotate_points_along_z", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.roiaware_pool3d.roiaware_pool3d_utils.points_in_boxes_gpu"], ["", "def", "assign_stack_targets", "(", "self", ",", "points", ",", "gt_boxes", ",", "extend_gt_boxes", "=", "None", ",", "\n", "ret_box_labels", "=", "False", ",", "ret_part_labels", "=", "False", ",", "\n", "set_ignore_flag", "=", "True", ",", "use_ball_constraint", "=", "False", ",", "central_radius", "=", "2.0", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            points: (N1 + N2 + N3 + ..., 4) [bs_idx, x, y, z]\n            gt_boxes: (B, M, 8)\n            extend_gt_boxes: [B, M, 8]\n            ret_box_labels:\n            ret_part_labels:\n            set_ignore_flag:\n            use_ball_constraint:\n            central_radius:\n\n        Returns:\n            point_cls_labels: (N1 + N2 + N3 + ...), long type, 0:background, -1:ignored\n            point_box_labels: (N1 + N2 + N3 + ..., code_size)\n\n        \"\"\"", "\n", "assert", "len", "(", "points", ".", "shape", ")", "==", "2", "and", "points", ".", "shape", "[", "1", "]", "==", "4", ",", "'points.shape=%s'", "%", "str", "(", "points", ".", "shape", ")", "\n", "assert", "len", "(", "gt_boxes", ".", "shape", ")", "==", "3", "and", "gt_boxes", ".", "shape", "[", "2", "]", "==", "8", ",", "'gt_boxes.shape=%s'", "%", "str", "(", "gt_boxes", ".", "shape", ")", "\n", "assert", "extend_gt_boxes", "is", "None", "or", "len", "(", "extend_gt_boxes", ".", "shape", ")", "==", "3", "and", "extend_gt_boxes", ".", "shape", "[", "2", "]", "==", "8", ",", "'extend_gt_boxes.shape=%s'", "%", "str", "(", "extend_gt_boxes", ".", "shape", ")", "\n", "assert", "set_ignore_flag", "!=", "use_ball_constraint", ",", "'Choose one only!'", "\n", "batch_size", "=", "gt_boxes", ".", "shape", "[", "0", "]", "\n", "bs_idx", "=", "points", "[", ":", ",", "0", "]", "\n", "point_cls_labels", "=", "points", ".", "new_zeros", "(", "points", ".", "shape", "[", "0", "]", ")", ".", "long", "(", ")", "\n", "point_box_labels", "=", "gt_boxes", ".", "new_zeros", "(", "(", "points", ".", "shape", "[", "0", "]", ",", "8", ")", ")", "if", "ret_box_labels", "else", "None", "\n", "point_part_labels", "=", "gt_boxes", ".", "new_zeros", "(", "(", "points", ".", "shape", "[", "0", "]", ",", "3", ")", ")", "if", "ret_part_labels", "else", "None", "\n", "for", "k", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "bs_mask", "=", "(", "bs_idx", "==", "k", ")", "\n", "points_single", "=", "points", "[", "bs_mask", "]", "[", ":", ",", "1", ":", "4", "]", "\n", "point_cls_labels_single", "=", "point_cls_labels", ".", "new_zeros", "(", "bs_mask", ".", "sum", "(", ")", ")", "\n", "box_idxs_of_pts", "=", "roiaware_pool3d_utils", ".", "points_in_boxes_gpu", "(", "\n", "points_single", ".", "unsqueeze", "(", "dim", "=", "0", ")", ",", "gt_boxes", "[", "k", ":", "k", "+", "1", ",", ":", ",", "0", ":", "7", "]", ".", "contiguous", "(", ")", "\n", ")", ".", "long", "(", ")", ".", "squeeze", "(", "dim", "=", "0", ")", "\n", "box_fg_flag", "=", "(", "box_idxs_of_pts", ">=", "0", ")", "\n", "if", "set_ignore_flag", ":", "\n", "                ", "extend_box_idxs_of_pts", "=", "roiaware_pool3d_utils", ".", "points_in_boxes_gpu", "(", "\n", "points_single", ".", "unsqueeze", "(", "dim", "=", "0", ")", ",", "extend_gt_boxes", "[", "k", ":", "k", "+", "1", ",", ":", ",", "0", ":", "7", "]", ".", "contiguous", "(", ")", "\n", ")", ".", "long", "(", ")", ".", "squeeze", "(", "dim", "=", "0", ")", "\n", "fg_flag", "=", "box_fg_flag", "\n", "ignore_flag", "=", "fg_flag", "^", "(", "extend_box_idxs_of_pts", ">=", "0", ")", "\n", "point_cls_labels_single", "[", "ignore_flag", "]", "=", "-", "1", "\n", "", "elif", "use_ball_constraint", ":", "\n", "                ", "box_centers", "=", "gt_boxes", "[", "k", "]", "[", "box_idxs_of_pts", "]", "[", ":", ",", "0", ":", "3", "]", ".", "clone", "(", ")", "\n", "box_centers", "[", ":", ",", "2", "]", "+=", "gt_boxes", "[", "k", "]", "[", "box_idxs_of_pts", "]", "[", ":", ",", "5", "]", "/", "2", "\n", "ball_flag", "=", "(", "(", "box_centers", "-", "points_single", ")", ".", "norm", "(", "dim", "=", "1", ")", "<", "central_radius", ")", "\n", "fg_flag", "=", "box_fg_flag", "&", "ball_flag", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "gt_box_of_fg_points", "=", "gt_boxes", "[", "k", "]", "[", "box_idxs_of_pts", "[", "fg_flag", "]", "]", "\n", "point_cls_labels_single", "[", "fg_flag", "]", "=", "1", "if", "self", ".", "num_class", "==", "1", "else", "gt_box_of_fg_points", "[", ":", ",", "-", "1", "]", ".", "long", "(", ")", "\n", "point_cls_labels", "[", "bs_mask", "]", "=", "point_cls_labels_single", "\n", "\n", "if", "ret_box_labels", ":", "\n", "                ", "point_box_labels_single", "=", "point_box_labels", ".", "new_zeros", "(", "(", "bs_mask", ".", "sum", "(", ")", ",", "8", ")", ")", "\n", "fg_point_box_labels", "=", "self", ".", "box_coder", ".", "encode_torch", "(", "\n", "gt_boxes", "=", "gt_box_of_fg_points", "[", ":", ",", ":", "-", "1", "]", ",", "points", "=", "points_single", "[", "fg_flag", "]", ",", "\n", "gt_classes", "=", "gt_box_of_fg_points", "[", ":", ",", "-", "1", "]", ".", "long", "(", ")", "\n", ")", "\n", "point_box_labels_single", "[", "fg_flag", "]", "=", "fg_point_box_labels", "\n", "point_box_labels", "[", "bs_mask", "]", "=", "point_box_labels_single", "\n", "\n", "", "if", "ret_part_labels", ":", "\n", "                ", "point_part_labels_single", "=", "point_part_labels", ".", "new_zeros", "(", "(", "bs_mask", ".", "sum", "(", ")", ",", "3", ")", ")", "\n", "transformed_points", "=", "points_single", "[", "fg_flag", "]", "-", "gt_box_of_fg_points", "[", ":", ",", "0", ":", "3", "]", "\n", "transformed_points", "=", "common_utils", ".", "rotate_points_along_z", "(", "\n", "transformed_points", ".", "view", "(", "-", "1", ",", "1", ",", "3", ")", ",", "-", "gt_box_of_fg_points", "[", ":", ",", "6", "]", "\n", ")", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "offset", "=", "torch", ".", "tensor", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", ".", "view", "(", "1", ",", "3", ")", ".", "type_as", "(", "transformed_points", ")", "\n", "point_part_labels_single", "[", "fg_flag", "]", "=", "(", "transformed_points", "/", "gt_box_of_fg_points", "[", ":", ",", "3", ":", "6", "]", ")", "+", "offset", "\n", "point_part_labels", "[", "bs_mask", "]", "=", "point_part_labels_single", "\n", "\n", "", "", "targets_dict", "=", "{", "\n", "'point_cls_labels'", ":", "point_cls_labels", ",", "\n", "'point_box_labels'", ":", "point_box_labels", ",", "\n", "'point_part_labels'", ":", "point_part_labels", "\n", "}", "\n", "return", "targets_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.get_cls_layer_loss": [[131, 156], ["point_head_template.PointHeadTemplate.forward_ret_dict[].view", "point_head_template.PointHeadTemplate.forward_ret_dict[].view", "positives.sum().float", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "point_head_template.PointHeadTemplate.new_zeros", "point_head_template.PointHeadTemplate.new_zeros.scatter_", "point_head_template.PointHeadTemplate.cls_loss_func", "point_head_template.PointHeadTemplate.sum", "tb_dict.update", "positives.sum", "list", "point_head_template.PointHeadTemplate.sum.item", "positives.sum().float.item"], "methods", ["None"], ["", "def", "get_cls_layer_loss", "(", "self", ",", "tb_dict", "=", "None", ")", ":", "\n", "        ", "point_cls_labels", "=", "self", ".", "forward_ret_dict", "[", "'point_cls_labels'", "]", ".", "view", "(", "-", "1", ")", "\n", "point_cls_preds", "=", "self", ".", "forward_ret_dict", "[", "'point_cls_preds'", "]", ".", "view", "(", "-", "1", ",", "self", ".", "num_class", ")", "\n", "\n", "positives", "=", "(", "point_cls_labels", ">", "0", ")", "\n", "negative_cls_weights", "=", "(", "point_cls_labels", "==", "0", ")", "*", "1.0", "\n", "cls_weights", "=", "(", "negative_cls_weights", "+", "1.0", "*", "positives", ")", ".", "float", "(", ")", "\n", "pos_normalizer", "=", "positives", ".", "sum", "(", "dim", "=", "0", ")", ".", "float", "(", ")", "\n", "cls_weights", "/=", "torch", ".", "clamp", "(", "pos_normalizer", ",", "min", "=", "1.0", ")", "\n", "\n", "one_hot_targets", "=", "point_cls_preds", ".", "new_zeros", "(", "*", "list", "(", "point_cls_labels", ".", "shape", ")", ",", "self", ".", "num_class", "+", "1", ")", "\n", "one_hot_targets", ".", "scatter_", "(", "-", "1", ",", "(", "point_cls_labels", "*", "(", "point_cls_labels", ">=", "0", ")", ".", "long", "(", ")", ")", ".", "unsqueeze", "(", "dim", "=", "-", "1", ")", ".", "long", "(", ")", ",", "1.0", ")", "\n", "one_hot_targets", "=", "one_hot_targets", "[", "...", ",", "1", ":", "]", "\n", "cls_loss_src", "=", "self", ".", "cls_loss_func", "(", "point_cls_preds", ",", "one_hot_targets", ",", "weights", "=", "cls_weights", ")", "\n", "point_loss_cls", "=", "cls_loss_src", ".", "sum", "(", ")", "\n", "\n", "loss_weights_dict", "=", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ".", "LOSS_WEIGHTS", "\n", "point_loss_cls", "=", "point_loss_cls", "*", "loss_weights_dict", "[", "'point_cls_weight'", "]", "\n", "if", "tb_dict", "is", "None", ":", "\n", "            ", "tb_dict", "=", "{", "}", "\n", "", "tb_dict", ".", "update", "(", "{", "\n", "'point_loss_cls'", ":", "point_loss_cls", ".", "item", "(", ")", ",", "\n", "'point_pos_num'", ":", "pos_normalizer", ".", "item", "(", ")", "\n", "}", ")", "\n", "return", "point_loss_cls", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.get_part_layer_loss": [[157, 171], ["max", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "tb_dict.update", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.binary_cross_entropy.item", "torch.binary_cross_entropy.sum", "pos_mask.float"], "methods", ["None"], ["", "def", "get_part_layer_loss", "(", "self", ",", "tb_dict", "=", "None", ")", ":", "\n", "        ", "pos_mask", "=", "self", ".", "forward_ret_dict", "[", "'point_cls_labels'", "]", ">", "0", "\n", "pos_normalizer", "=", "max", "(", "1", ",", "(", "pos_mask", ">", "0", ")", ".", "sum", "(", ")", ".", "item", "(", ")", ")", "\n", "point_part_labels", "=", "self", ".", "forward_ret_dict", "[", "'point_part_labels'", "]", "\n", "point_part_preds", "=", "self", ".", "forward_ret_dict", "[", "'point_part_preds'", "]", "\n", "point_loss_part", "=", "F", ".", "binary_cross_entropy", "(", "torch", ".", "sigmoid", "(", "point_part_preds", ")", ",", "point_part_labels", ",", "reduction", "=", "'none'", ")", "\n", "point_loss_part", "=", "(", "point_loss_part", ".", "sum", "(", "dim", "=", "-", "1", ")", "*", "pos_mask", ".", "float", "(", ")", ")", ".", "sum", "(", ")", "/", "(", "3", "*", "pos_normalizer", ")", "\n", "\n", "loss_weights_dict", "=", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ".", "LOSS_WEIGHTS", "\n", "point_loss_part", "=", "point_loss_part", "*", "loss_weights_dict", "[", "'point_part_weight'", "]", "\n", "if", "tb_dict", "is", "None", ":", "\n", "            ", "tb_dict", "=", "{", "}", "\n", "", "tb_dict", ".", "update", "(", "{", "'point_loss_part'", ":", "point_loss_part", ".", "item", "(", ")", "}", ")", "\n", "return", "point_loss_part", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.get_box_layer_loss": [[172, 192], ["pos_mask.float", "pos_mask.sum().float", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "point_head_template.PointHeadTemplate.reg_loss_func", "point_head_template.PointHeadTemplate.sum", "tb_dict.update", "pos_mask.sum", "point_head_template.PointHeadTemplate.sum.item"], "methods", ["None"], ["", "def", "get_box_layer_loss", "(", "self", ",", "tb_dict", "=", "None", ")", ":", "\n", "        ", "pos_mask", "=", "self", ".", "forward_ret_dict", "[", "'point_cls_labels'", "]", ">", "0", "\n", "point_box_labels", "=", "self", ".", "forward_ret_dict", "[", "'point_box_labels'", "]", "\n", "point_box_preds", "=", "self", ".", "forward_ret_dict", "[", "'point_box_preds'", "]", "\n", "\n", "reg_weights", "=", "pos_mask", ".", "float", "(", ")", "\n", "pos_normalizer", "=", "pos_mask", ".", "sum", "(", ")", ".", "float", "(", ")", "\n", "reg_weights", "/=", "torch", ".", "clamp", "(", "pos_normalizer", ",", "min", "=", "1.0", ")", "\n", "\n", "point_loss_box_src", "=", "self", ".", "reg_loss_func", "(", "\n", "point_box_preds", "[", "None", ",", "...", "]", ",", "point_box_labels", "[", "None", ",", "...", "]", ",", "weights", "=", "reg_weights", "[", "None", ",", "...", "]", "\n", ")", "\n", "point_loss_box", "=", "point_loss_box_src", ".", "sum", "(", ")", "\n", "\n", "loss_weights_dict", "=", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ".", "LOSS_WEIGHTS", "\n", "point_loss_box", "=", "point_loss_box", "*", "loss_weights_dict", "[", "'point_box_weight'", "]", "\n", "if", "tb_dict", "is", "None", ":", "\n", "            ", "tb_dict", "=", "{", "}", "\n", "", "tb_dict", ".", "update", "(", "{", "'point_loss_box'", ":", "point_loss_box", ".", "item", "(", ")", "}", ")", "\n", "return", "point_loss_box", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.generate_predicted_boxes": [[193, 208], ["point_cls_preds.max", "point_head_template.PointHeadTemplate.box_coder.decode_torch"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.decode_torch"], ["", "def", "generate_predicted_boxes", "(", "self", ",", "points", ",", "point_cls_preds", ",", "point_box_preds", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            points: (N, 3)\n            point_cls_preds: (N, num_class)\n            point_box_preds: (N, box_code_size)\n        Returns:\n            point_cls_preds: (N, num_class)\n            point_box_preds: (N, box_code_size)\n\n        \"\"\"", "\n", "_", ",", "pred_classes", "=", "point_cls_preds", ".", "max", "(", "dim", "=", "-", "1", ")", "\n", "point_box_preds", "=", "self", ".", "box_coder", ".", "decode_torch", "(", "point_box_preds", ",", "points", ",", "pred_classes", "+", "1", ")", "\n", "\n", "return", "point_cls_preds", ",", "point_box_preds", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.forward": [[209, 211], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_box.PointHeadBox.__init__": [[13, 30], ["point_head_template.PointHeadTemplate.__init__", "point_head_box.PointHeadBox.make_fc_layers", "point_head_box.PointHeadBox.make_fc_layers", "getattr"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers"], ["def", "__init__", "(", "self", ",", "num_class", ",", "input_channels", ",", "model_cfg", ",", "predict_boxes_when_training", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ")", "\n", "self", ".", "predict_boxes_when_training", "=", "predict_boxes_when_training", "\n", "self", ".", "cls_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "fc_cfg", "=", "self", ".", "model_cfg", ".", "CLS_FC", ",", "\n", "input_channels", "=", "input_channels", ",", "\n", "output_channels", "=", "num_class", "\n", ")", "\n", "\n", "target_cfg", "=", "self", ".", "model_cfg", ".", "TARGET_CONFIG", "\n", "self", ".", "box_coder", "=", "getattr", "(", "box_coder_utils", ",", "target_cfg", ".", "BOX_CODER", ")", "(", "\n", "**", "target_cfg", ".", "BOX_CODER_CONFIG", "\n", ")", "\n", "self", ".", "box_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "fc_cfg", "=", "self", ".", "model_cfg", ".", "REG_FC", ",", "\n", "input_channels", "=", "input_channels", ",", "\n", "output_channels", "=", "self", ".", "box_coder", ".", "code_size", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_box.PointHeadBox.assign_targets": [[32, 60], ["utils.box_utils.enlarge_box3d().view", "point_head_box.PointHeadBox.assign_stack_targets", "gt_boxes.shape.__len__", "str", "point_coords.shape.__len__", "str", "utils.box_utils.enlarge_box3d", "gt_boxes.view"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.assign_stack_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.enlarge_box3d"], ["", "def", "assign_targets", "(", "self", ",", "input_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            input_dict:\n                point_features: (N1 + N2 + N3 + ..., C)\n                batch_size:\n                point_coords: (N1 + N2 + N3 + ..., 4) [bs_idx, x, y, z]\n                gt_boxes (optional): (B, M, 8)\n        Returns:\n            point_cls_labels: (N1 + N2 + N3 + ...), long type, 0:background, -1:ignored\n            point_part_labels: (N1 + N2 + N3 + ..., 3)\n        \"\"\"", "\n", "point_coords", "=", "input_dict", "[", "'point_coords'", "]", "\n", "gt_boxes", "=", "input_dict", "[", "'gt_boxes'", "]", "\n", "assert", "gt_boxes", ".", "shape", ".", "__len__", "(", ")", "==", "3", ",", "'gt_boxes.shape=%s'", "%", "str", "(", "gt_boxes", ".", "shape", ")", "\n", "assert", "point_coords", ".", "shape", ".", "__len__", "(", ")", "in", "[", "2", "]", ",", "'points.shape=%s'", "%", "str", "(", "point_coords", ".", "shape", ")", "\n", "\n", "batch_size", "=", "gt_boxes", ".", "shape", "[", "0", "]", "\n", "extend_gt_boxes", "=", "box_utils", ".", "enlarge_box3d", "(", "\n", "gt_boxes", ".", "view", "(", "-", "1", ",", "gt_boxes", ".", "shape", "[", "-", "1", "]", ")", ",", "extra_width", "=", "self", ".", "model_cfg", ".", "TARGET_CONFIG", ".", "GT_EXTRA_WIDTH", "\n", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "gt_boxes", ".", "shape", "[", "-", "1", "]", ")", "\n", "targets_dict", "=", "self", ".", "assign_stack_targets", "(", "\n", "points", "=", "point_coords", ",", "gt_boxes", "=", "gt_boxes", ",", "extend_gt_boxes", "=", "extend_gt_boxes", ",", "\n", "set_ignore_flag", "=", "True", ",", "use_ball_constraint", "=", "False", ",", "\n", "ret_part_labels", "=", "False", ",", "ret_box_labels", "=", "True", "\n", ")", "\n", "\n", "return", "targets_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_box.PointHeadBox.get_loss": [[61, 70], ["point_head_box.PointHeadBox.get_cls_layer_loss", "point_head_box.PointHeadBox.get_box_layer_loss", "tb_dict.update", "tb_dict.update"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.get_cls_layer_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.get_box_layer_loss"], ["", "def", "get_loss", "(", "self", ",", "tb_dict", "=", "None", ")", ":", "\n", "        ", "tb_dict", "=", "{", "}", "if", "tb_dict", "is", "None", "else", "tb_dict", "\n", "point_loss_cls", ",", "tb_dict_1", "=", "self", ".", "get_cls_layer_loss", "(", ")", "\n", "point_loss_box", ",", "tb_dict_2", "=", "self", ".", "get_box_layer_loss", "(", ")", "\n", "\n", "point_loss", "=", "point_loss_cls", "+", "point_loss_box", "\n", "tb_dict", ".", "update", "(", "tb_dict_1", ")", "\n", "tb_dict", ".", "update", "(", "tb_dict_2", ")", "\n", "return", "point_loss", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_box.PointHeadBox.forward": [[71, 116], ["point_head_box.PointHeadBox.model_cfg.get", "point_head_box.PointHeadBox.cls_layers", "point_head_box.PointHeadBox.box_layers", "point_head_box.PointHeadBox.max", "torch.sigmoid", "point_head_box.PointHeadBox.assign_targets", "point_head_box.PointHeadBox.generate_predicted_boxes"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_predicted_boxes"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                point_features: (N1 + N2 + N3 + ..., C) or (B, N, C)\n                point_features_before_fusion: (N1 + N2 + N3 + ..., C)\n                point_coords: (N1 + N2 + N3 + ..., 4) [bs_idx, x, y, z]\n                point_labels (optional): (N1 + N2 + N3 + ...)\n                gt_boxes (optional): (B, M, 8)\n        Returns:\n            batch_dict:\n                point_cls_scores: (N1 + N2 + N3 + ..., 1)\n                point_part_offset: (N1 + N2 + N3 + ..., 3)\n        \"\"\"", "\n", "if", "self", ".", "model_cfg", ".", "get", "(", "'USE_POINT_FEATURES_BEFORE_FUSION'", ",", "False", ")", ":", "\n", "            ", "point_features", "=", "batch_dict", "[", "'point_features_before_fusion'", "]", "\n", "", "else", ":", "\n", "            ", "point_features", "=", "batch_dict", "[", "'point_features'", "]", "\n", "", "point_cls_preds", "=", "self", ".", "cls_layers", "(", "point_features", ")", "# (total_points, num_class)", "\n", "point_box_preds", "=", "self", ".", "box_layers", "(", "point_features", ")", "# (total_points, box_code_size)", "\n", "\n", "point_cls_preds_max", ",", "_", "=", "point_cls_preds", ".", "max", "(", "dim", "=", "-", "1", ")", "\n", "batch_dict", "[", "'point_cls_scores'", "]", "=", "torch", ".", "sigmoid", "(", "point_cls_preds_max", ")", "\n", "\n", "ret_dict", "=", "{", "'point_cls_preds'", ":", "point_cls_preds", ",", "\n", "'point_box_preds'", ":", "point_box_preds", "}", "\n", "if", "self", ".", "training", ":", "\n", "            ", "targets_dict", "=", "self", ".", "assign_targets", "(", "batch_dict", ")", "\n", "ret_dict", "[", "'point_cls_labels'", "]", "=", "targets_dict", "[", "'point_cls_labels'", "]", "\n", "ret_dict", "[", "'point_box_labels'", "]", "=", "targets_dict", "[", "'point_box_labels'", "]", "\n", "\n", "", "if", "not", "self", ".", "training", "or", "self", ".", "predict_boxes_when_training", ":", "\n", "            ", "point_cls_preds", ",", "point_box_preds", "=", "self", ".", "generate_predicted_boxes", "(", "\n", "points", "=", "batch_dict", "[", "'point_coords'", "]", "[", ":", ",", "1", ":", "4", "]", ",", "\n", "point_cls_preds", "=", "point_cls_preds", ",", "point_box_preds", "=", "point_box_preds", "\n", ")", "\n", "batch_dict", "[", "'batch_cls_preds'", "]", "=", "point_cls_preds", "\n", "batch_dict", "[", "'batch_box_preds'", "]", "=", "point_box_preds", "\n", "batch_dict", "[", "'batch_index'", "]", "=", "batch_dict", "[", "'point_coords'", "]", "[", ":", ",", "0", "]", "\n", "batch_dict", "[", "'cls_preds_normalized'", "]", "=", "False", "\n", "\n", "", "self", ".", "forward_ret_dict", "=", "ret_dict", "\n", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.__init__": [[12, 36], ["torch.Module.__init__", "anchor_head_template.AnchorHeadTemplate.model_cfg.get", "anchor_head_template.AnchorHeadTemplate.generate_anchors", "anchor_head_template.AnchorHeadTemplate.get_target_assigner", "anchor_head_template.AnchorHeadTemplate.build_losses", "getattr", "x.cuda", "anchor_target_cfg.get", "anchor_target_cfg.get"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_anchors", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.get_target_assigner", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.build_losses"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "num_class", ",", "class_names", ",", "grid_size", ",", "point_cloud_range", ",", "predict_boxes_when_training", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "class_names", "=", "class_names", "\n", "self", ".", "predict_boxes_when_training", "=", "predict_boxes_when_training", "\n", "self", ".", "use_multihead", "=", "self", ".", "model_cfg", ".", "get", "(", "'USE_MULTIHEAD'", ",", "False", ")", "\n", "\n", "anchor_target_cfg", "=", "self", ".", "model_cfg", ".", "TARGET_ASSIGNER_CONFIG", "\n", "self", ".", "box_coder", "=", "getattr", "(", "box_coder_utils", ",", "anchor_target_cfg", ".", "BOX_CODER", ")", "(", "\n", "num_dir_bins", "=", "anchor_target_cfg", ".", "get", "(", "'NUM_DIR_BINS'", ",", "6", ")", ",", "\n", "**", "anchor_target_cfg", ".", "get", "(", "'BOX_CODER_CONFIG'", ",", "{", "}", ")", "\n", ")", "\n", "\n", "anchor_generator_cfg", "=", "self", ".", "model_cfg", ".", "ANCHOR_GENERATOR_CONFIG", "\n", "anchors", ",", "self", ".", "num_anchors_per_location", "=", "self", ".", "generate_anchors", "(", "\n", "anchor_generator_cfg", ",", "grid_size", "=", "grid_size", ",", "point_cloud_range", "=", "point_cloud_range", ",", "\n", "anchor_ndim", "=", "self", ".", "box_coder", ".", "code_size", "\n", ")", "\n", "self", ".", "anchors", "=", "[", "x", ".", "cuda", "(", ")", "for", "x", "in", "anchors", "]", "\n", "self", ".", "target_assigner", "=", "self", ".", "get_target_assigner", "(", "anchor_target_cfg", ")", "\n", "\n", "self", ".", "forward_ret_dict", "=", "{", "}", "\n", "self", ".", "build_losses", "(", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_anchors": [[37, 53], ["target_assigner.anchor_generator.AnchorGenerator", "target_assigner.anchor_generator.AnchorGenerator.generate_anchors", "enumerate", "anchors.new_zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_anchors"], ["", "@", "staticmethod", "\n", "def", "generate_anchors", "(", "anchor_generator_cfg", ",", "grid_size", ",", "point_cloud_range", ",", "anchor_ndim", "=", "7", ")", ":", "\n", "        ", "anchor_generator", "=", "AnchorGenerator", "(", "\n", "anchor_range", "=", "point_cloud_range", ",", "\n", "anchor_generator_config", "=", "anchor_generator_cfg", "\n", ")", "\n", "feature_map_size", "=", "[", "grid_size", "[", ":", "2", "]", "//", "config", "[", "'feature_map_stride'", "]", "for", "config", "in", "anchor_generator_cfg", "]", "\n", "anchors_list", ",", "num_anchors_per_location_list", "=", "anchor_generator", ".", "generate_anchors", "(", "feature_map_size", ")", "\n", "\n", "if", "anchor_ndim", "!=", "7", ":", "\n", "            ", "for", "idx", ",", "anchors", "in", "enumerate", "(", "anchors_list", ")", ":", "\n", "                ", "pad_zeros", "=", "anchors", ".", "new_zeros", "(", "[", "*", "anchors", ".", "shape", "[", "0", ":", "-", "1", "]", ",", "anchor_ndim", "-", "7", "]", ")", "\n", "new_anchors", "=", "torch", ".", "cat", "(", "(", "anchors", ",", "pad_zeros", ")", ",", "dim", "=", "-", "1", ")", "\n", "anchors_list", "[", "idx", "]", "=", "new_anchors", "\n", "\n", "", "", "return", "anchors_list", ",", "num_anchors_per_location_list", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.get_target_assigner": [[54, 72], ["target_assigner.axis_aligned_target_assigner.AxisAlignedTargetAssigner.atss_target_assigner.ATSSTargetAssigner", "target_assigner.axis_aligned_target_assigner.AxisAlignedTargetAssigner.axis_aligned_target_assigner.AxisAlignedTargetAssigner"], "methods", ["None"], ["", "def", "get_target_assigner", "(", "self", ",", "anchor_target_cfg", ")", ":", "\n", "        ", "if", "anchor_target_cfg", ".", "NAME", "==", "'ATSS'", ":", "\n", "            ", "target_assigner", "=", "ATSSTargetAssigner", "(", "\n", "topk", "=", "anchor_target_cfg", ".", "TOPK", ",", "\n", "box_coder", "=", "self", ".", "box_coder", ",", "\n", "use_multihead", "=", "self", ".", "use_multihead", ",", "\n", "match_height", "=", "anchor_target_cfg", ".", "MATCH_HEIGHT", "\n", ")", "\n", "", "elif", "anchor_target_cfg", ".", "NAME", "==", "'AxisAlignedTargetAssigner'", ":", "\n", "            ", "target_assigner", "=", "AxisAlignedTargetAssigner", "(", "\n", "model_cfg", "=", "self", ".", "model_cfg", ",", "\n", "class_names", "=", "self", ".", "class_names", ",", "\n", "box_coder", "=", "self", ".", "box_coder", ",", "\n", "match_height", "=", "anchor_target_cfg", ".", "MATCH_HEIGHT", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "target_assigner", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.build_losses": [[73, 87], ["anchor_head_template.AnchorHeadTemplate.add_module", "anchor_head_template.AnchorHeadTemplate.add_module", "anchor_head_template.AnchorHeadTemplate.add_module", "utils.loss_utils.SigmoidFocalClassificationLoss", "utils.loss_utils.WeightedCrossEntropyLoss", "losses_cfg.get", "getattr"], "methods", ["None"], ["", "def", "build_losses", "(", "self", ",", "losses_cfg", ")", ":", "\n", "        ", "self", ".", "add_module", "(", "\n", "'cls_loss_func'", ",", "\n", "loss_utils", ".", "SigmoidFocalClassificationLoss", "(", "alpha", "=", "0.25", ",", "gamma", "=", "2.0", ")", "\n", ")", "\n", "reg_loss_name", "=", "'WeightedSmoothL1Loss'", "if", "losses_cfg", ".", "get", "(", "'REG_LOSS_TYPE'", ",", "None", ")", "is", "None", "else", "losses_cfg", ".", "REG_LOSS_TYPE", "\n", "self", ".", "add_module", "(", "\n", "'reg_loss_func'", ",", "\n", "getattr", "(", "loss_utils", ",", "reg_loss_name", ")", "(", "code_weights", "=", "losses_cfg", ".", "LOSS_WEIGHTS", "[", "'code_weights'", "]", ")", "\n", ")", "\n", "self", ".", "add_module", "(", "\n", "'dir_loss_func'", ",", "\n", "loss_utils", ".", "WeightedCrossEntropyLoss", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.assign_targets": [[89, 100], ["anchor_head_template.AnchorHeadTemplate.target_assigner.assign_targets"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets"], ["", "def", "assign_targets", "(", "self", ",", "gt_boxes", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            gt_boxes: (B, M, 8)\n        Returns:\n\n        \"\"\"", "\n", "targets_dict", "=", "self", ".", "target_assigner", ".", "assign_targets", "(", "\n", "self", ".", "anchors", ",", "gt_boxes", "\n", ")", "\n", "return", "targets_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.get_cls_layer_loss": [[101, 136], ["int", "positives.float", "positives.sum().float", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "cls_targets.squeeze.squeeze.unsqueeze", "cls_targets.squeeze.squeeze.squeeze", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.scatter_", "torch.zeros.scatter_", "cls_preds.view.view.view", "anchor_head_template.AnchorHeadTemplate.cls_loss_func", "cared.type_as", "cls_targets.squeeze.squeeze.unsqueeze().long", "anchor_head_template.AnchorHeadTemplate.sum", "cls_loss.item", "positives.sum", "list", "cls_targets.squeeze.squeeze.unsqueeze"], "methods", ["None"], ["", "def", "get_cls_layer_loss", "(", "self", ")", ":", "\n", "        ", "cls_preds", "=", "self", ".", "forward_ret_dict", "[", "'cls_preds'", "]", "\n", "box_cls_labels", "=", "self", ".", "forward_ret_dict", "[", "'box_cls_labels'", "]", "\n", "batch_size", "=", "int", "(", "cls_preds", ".", "shape", "[", "0", "]", ")", "\n", "cared", "=", "box_cls_labels", ">=", "0", "# [N, num_anchors]", "\n", "positives", "=", "box_cls_labels", ">", "0", "\n", "negatives", "=", "box_cls_labels", "==", "0", "\n", "negative_cls_weights", "=", "negatives", "*", "1.0", "\n", "cls_weights", "=", "(", "negative_cls_weights", "+", "1.0", "*", "positives", ")", ".", "float", "(", ")", "\n", "reg_weights", "=", "positives", ".", "float", "(", ")", "\n", "if", "self", ".", "num_class", "==", "1", ":", "\n", "# class agnostic", "\n", "            ", "box_cls_labels", "[", "positives", "]", "=", "1", "\n", "\n", "", "pos_normalizer", "=", "positives", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", ".", "float", "(", ")", "\n", "reg_weights", "/=", "torch", ".", "clamp", "(", "pos_normalizer", ",", "min", "=", "1.0", ")", "\n", "cls_weights", "/=", "torch", ".", "clamp", "(", "pos_normalizer", ",", "min", "=", "1.0", ")", "\n", "cls_targets", "=", "box_cls_labels", "*", "cared", ".", "type_as", "(", "box_cls_labels", ")", "\n", "cls_targets", "=", "cls_targets", ".", "unsqueeze", "(", "dim", "=", "-", "1", ")", "\n", "\n", "cls_targets", "=", "cls_targets", ".", "squeeze", "(", "dim", "=", "-", "1", ")", "\n", "one_hot_targets", "=", "torch", ".", "zeros", "(", "\n", "*", "list", "(", "cls_targets", ".", "shape", ")", ",", "self", ".", "num_class", "+", "1", ",", "dtype", "=", "cls_preds", ".", "dtype", ",", "device", "=", "cls_targets", ".", "device", "\n", ")", "\n", "one_hot_targets", ".", "scatter_", "(", "-", "1", ",", "cls_targets", ".", "unsqueeze", "(", "dim", "=", "-", "1", ")", ".", "long", "(", ")", ",", "1.0", ")", "\n", "cls_preds", "=", "cls_preds", ".", "view", "(", "batch_size", ",", "-", "1", ",", "self", ".", "num_class", ")", "\n", "one_hot_targets", "=", "one_hot_targets", "[", "...", ",", "1", ":", "]", "\n", "cls_loss_src", "=", "self", ".", "cls_loss_func", "(", "cls_preds", ",", "one_hot_targets", ",", "weights", "=", "cls_weights", ")", "# [N, M]", "\n", "cls_loss", "=", "cls_loss_src", ".", "sum", "(", ")", "/", "batch_size", "\n", "\n", "cls_loss", "=", "cls_loss", "*", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ".", "LOSS_WEIGHTS", "[", "'cls_weight'", "]", "\n", "tb_dict", "=", "{", "\n", "'rpn_loss_cls'", ":", "cls_loss", ".", "item", "(", ")", "\n", "}", "\n", "return", "cls_loss", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.add_sin_difference": [[137, 145], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "add_sin_difference", "(", "boxes1", ",", "boxes2", ",", "dim", "=", "6", ")", ":", "\n", "        ", "assert", "dim", "!=", "-", "1", "\n", "rad_pred_encoding", "=", "torch", ".", "sin", "(", "boxes1", "[", "...", ",", "dim", ":", "dim", "+", "1", "]", ")", "*", "torch", ".", "cos", "(", "boxes2", "[", "...", ",", "dim", ":", "dim", "+", "1", "]", ")", "\n", "rad_tg_encoding", "=", "torch", ".", "cos", "(", "boxes1", "[", "...", ",", "dim", ":", "dim", "+", "1", "]", ")", "*", "torch", ".", "sin", "(", "boxes2", "[", "...", ",", "dim", ":", "dim", "+", "1", "]", ")", "\n", "boxes1", "=", "torch", ".", "cat", "(", "[", "boxes1", "[", "...", ",", ":", "dim", "]", ",", "rad_pred_encoding", ",", "boxes1", "[", "...", ",", "dim", "+", "1", ":", "]", "]", ",", "dim", "=", "-", "1", ")", "\n", "boxes2", "=", "torch", ".", "cat", "(", "[", "boxes2", "[", "...", ",", ":", "dim", "]", ",", "rad_tg_encoding", ",", "boxes2", "[", "...", ",", "dim", "+", "1", ":", "]", "]", ",", "dim", "=", "-", "1", ")", "\n", "return", "boxes1", ",", "boxes2", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.get_direction_target": [[146, 161], ["anchors.view.view.view", "utils.common_utils.limit_period", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.scatter_", "torch.zeros.scatter_", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.clamp.unsqueeze().long", "torch.clamp.unsqueeze().long", "list", "torch.clamp.unsqueeze", "torch.clamp.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.limit_period"], ["", "@", "staticmethod", "\n", "def", "get_direction_target", "(", "anchors", ",", "reg_targets", ",", "one_hot", "=", "True", ",", "dir_offset", "=", "0", ",", "num_bins", "=", "2", ")", ":", "\n", "        ", "batch_size", "=", "reg_targets", ".", "shape", "[", "0", "]", "\n", "anchors", "=", "anchors", ".", "view", "(", "batch_size", ",", "-", "1", ",", "anchors", ".", "shape", "[", "-", "1", "]", ")", "\n", "rot_gt", "=", "reg_targets", "[", "...", ",", "6", "]", "+", "anchors", "[", "...", ",", "6", "]", "\n", "offset_rot", "=", "common_utils", ".", "limit_period", "(", "rot_gt", "-", "dir_offset", ",", "0", ",", "2", "*", "np", ".", "pi", ")", "\n", "dir_cls_targets", "=", "torch", ".", "floor", "(", "offset_rot", "/", "(", "2", "*", "np", ".", "pi", "/", "num_bins", ")", ")", ".", "long", "(", ")", "\n", "dir_cls_targets", "=", "torch", ".", "clamp", "(", "dir_cls_targets", ",", "min", "=", "0", ",", "max", "=", "num_bins", "-", "1", ")", "\n", "\n", "if", "one_hot", ":", "\n", "            ", "dir_targets", "=", "torch", ".", "zeros", "(", "*", "list", "(", "dir_cls_targets", ".", "shape", ")", ",", "num_bins", ",", "dtype", "=", "anchors", ".", "dtype", ",", "\n", "device", "=", "dir_cls_targets", ".", "device", ")", "\n", "dir_targets", ".", "scatter_", "(", "-", "1", ",", "dir_cls_targets", ".", "unsqueeze", "(", "dim", "=", "-", "1", ")", ".", "long", "(", ")", ",", "1.0", ")", "\n", "dir_cls_targets", "=", "dir_targets", "\n", "", "return", "dir_cls_targets", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.get_box_reg_layer_loss": [[162, 215], ["anchor_head_template.AnchorHeadTemplate.forward_ret_dict.get", "int", "positives.float", "positives.sum().float", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "isinstance", "torch.cat.view().repeat", "torch.cat.view().repeat", "box_preds.view.view.view", "anchor_head_template.AnchorHeadTemplate.add_sin_difference", "anchor_head_template.AnchorHeadTemplate.reg_loss_func", "anchor_head_template.AnchorHeadTemplate.sum", "loc_loss.item", "anchor_head_template.AnchorHeadTemplate.get_direction_target", "anchor_head_template.AnchorHeadTemplate.view", "positives.type_as", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "anchor_head_template.AnchorHeadTemplate.dir_loss_func", "anchor_head_template.AnchorHeadTemplate.item", "positives.sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "positives.type_as.sum", "anchor_head_template.AnchorHeadTemplate.sum", "anchor.permute().contiguous().view", "anchor.permute().contiguous", "anchor.permute"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.add_sin_difference", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.get_direction_target"], ["", "def", "get_box_reg_layer_loss", "(", "self", ")", ":", "\n", "        ", "box_preds", "=", "self", ".", "forward_ret_dict", "[", "'box_preds'", "]", "\n", "box_dir_cls_preds", "=", "self", ".", "forward_ret_dict", ".", "get", "(", "'dir_cls_preds'", ",", "None", ")", "\n", "box_reg_targets", "=", "self", ".", "forward_ret_dict", "[", "'box_reg_targets'", "]", "\n", "box_cls_labels", "=", "self", ".", "forward_ret_dict", "[", "'box_cls_labels'", "]", "\n", "batch_size", "=", "int", "(", "box_preds", ".", "shape", "[", "0", "]", ")", "\n", "\n", "positives", "=", "box_cls_labels", ">", "0", "\n", "reg_weights", "=", "positives", ".", "float", "(", ")", "\n", "pos_normalizer", "=", "positives", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", ".", "float", "(", ")", "\n", "reg_weights", "/=", "torch", ".", "clamp", "(", "pos_normalizer", ",", "min", "=", "1.0", ")", "\n", "\n", "if", "isinstance", "(", "self", ".", "anchors", ",", "list", ")", ":", "\n", "            ", "if", "self", ".", "use_multihead", ":", "\n", "                ", "anchors", "=", "torch", ".", "cat", "(", "\n", "[", "anchor", ".", "permute", "(", "3", ",", "4", ",", "0", ",", "1", ",", "2", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "anchor", ".", "shape", "[", "-", "1", "]", ")", "for", "anchor", "in", "\n", "self", ".", "anchors", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "anchors", "=", "torch", ".", "cat", "(", "self", ".", "anchors", ",", "dim", "=", "-", "3", ")", "\n", "", "", "else", ":", "\n", "            ", "anchors", "=", "self", ".", "anchors", "\n", "", "anchors", "=", "anchors", ".", "view", "(", "1", ",", "-", "1", ",", "anchors", ".", "shape", "[", "-", "1", "]", ")", ".", "repeat", "(", "batch_size", ",", "1", ",", "1", ")", "\n", "box_preds", "=", "box_preds", ".", "view", "(", "batch_size", ",", "-", "1", ",", "\n", "box_preds", ".", "shape", "[", "-", "1", "]", "//", "self", ".", "num_anchors_per_location", "if", "not", "self", ".", "use_multihead", "else", "\n", "box_preds", ".", "shape", "[", "-", "1", "]", ")", "\n", "# sin(a - b) = sinacosb-cosasinb", "\n", "box_preds_sin", ",", "reg_targets_sin", "=", "self", ".", "add_sin_difference", "(", "box_preds", ",", "box_reg_targets", ")", "\n", "loc_loss_src", "=", "self", ".", "reg_loss_func", "(", "box_preds_sin", ",", "reg_targets_sin", ",", "weights", "=", "reg_weights", ")", "# [N, M]", "\n", "loc_loss", "=", "loc_loss_src", ".", "sum", "(", ")", "/", "batch_size", "\n", "\n", "loc_loss", "=", "loc_loss", "*", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ".", "LOSS_WEIGHTS", "[", "'loc_weight'", "]", "\n", "box_loss", "=", "loc_loss", "\n", "tb_dict", "=", "{", "\n", "'rpn_loss_loc'", ":", "loc_loss", ".", "item", "(", ")", "\n", "}", "\n", "\n", "if", "box_dir_cls_preds", "is", "not", "None", ":", "\n", "            ", "dir_targets", "=", "self", ".", "get_direction_target", "(", "\n", "anchors", ",", "box_reg_targets", ",", "\n", "dir_offset", "=", "self", ".", "model_cfg", ".", "DIR_OFFSET", ",", "\n", "num_bins", "=", "self", ".", "model_cfg", ".", "NUM_DIR_BINS", "\n", ")", "\n", "\n", "dir_logits", "=", "box_dir_cls_preds", ".", "view", "(", "batch_size", ",", "-", "1", ",", "self", ".", "model_cfg", ".", "NUM_DIR_BINS", ")", "\n", "weights", "=", "positives", ".", "type_as", "(", "dir_logits", ")", "\n", "weights", "/=", "torch", ".", "clamp", "(", "weights", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", ",", "min", "=", "1.0", ")", "\n", "dir_loss", "=", "self", ".", "dir_loss_func", "(", "dir_logits", ",", "dir_targets", ",", "weights", "=", "weights", ")", "\n", "dir_loss", "=", "dir_loss", ".", "sum", "(", ")", "/", "batch_size", "\n", "dir_loss", "=", "dir_loss", "*", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ".", "LOSS_WEIGHTS", "[", "'dir_weight'", "]", "\n", "box_loss", "+=", "dir_loss", "\n", "tb_dict", "[", "'rpn_loss_dir'", "]", "=", "dir_loss", ".", "item", "(", ")", "\n", "\n", "", "return", "box_loss", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.get_loss": [[216, 224], ["anchor_head_template.AnchorHeadTemplate.get_cls_layer_loss", "anchor_head_template.AnchorHeadTemplate.get_box_reg_layer_loss", "tb_dict.update", "rpn_loss.item"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.get_cls_layer_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.get_box_reg_layer_loss"], ["", "def", "get_loss", "(", "self", ")", ":", "\n", "        ", "cls_loss", ",", "tb_dict", "=", "self", ".", "get_cls_layer_loss", "(", ")", "\n", "box_loss", ",", "tb_dict_box", "=", "self", ".", "get_box_reg_layer_loss", "(", ")", "\n", "tb_dict", ".", "update", "(", "tb_dict_box", ")", "\n", "rpn_loss", "=", "cls_loss", "+", "box_loss", "\n", "\n", "tb_dict", "[", "'rpn_loss'", "]", "=", "rpn_loss", ".", "item", "(", ")", "\n", "return", "rpn_loss", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_predicted_boxes": [[225, 273], ["isinstance", "torch.cat.view().repeat", "torch.cat.view().repeat", "anchor_head_template.AnchorHeadTemplate.box_coder.decode_torch", "isinstance", "cls_preds.view().float", "box_preds.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "utils.common_utils.limit_period", "utils.common_utils.limit_period", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.view", "isinstance", "isinstance", "dir_cls_preds.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.max", "torch.max", "torch.max", "torch.max", "cls_preds.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "isinstance", "dir_labels.to", "anchor.permute().contiguous().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "anchor.permute().contiguous", "anchor.permute"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_coder_utils.PointResidualCoder.decode_torch", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.limit_period", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.common_utils.limit_period"], ["", "def", "generate_predicted_boxes", "(", "self", ",", "batch_size", ",", "cls_preds", ",", "box_preds", ",", "dir_cls_preds", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_size:\n            cls_preds: (N, H, W, C1)\n            box_preds: (N, H, W, C2)\n            dir_cls_preds: (N, H, W, C3)\n\n        Returns:\n            batch_cls_preds: (B, num_boxes, num_classes)\n            batch_box_preds: (B, num_boxes, 7+C)\n\n        \"\"\"", "\n", "if", "isinstance", "(", "self", ".", "anchors", ",", "list", ")", ":", "\n", "            ", "if", "self", ".", "use_multihead", ":", "\n", "                ", "anchors", "=", "torch", ".", "cat", "(", "[", "anchor", ".", "permute", "(", "3", ",", "4", ",", "0", ",", "1", ",", "2", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "anchor", ".", "shape", "[", "-", "1", "]", ")", "\n", "for", "anchor", "in", "self", ".", "anchors", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "anchors", "=", "torch", ".", "cat", "(", "self", ".", "anchors", ",", "dim", "=", "-", "3", ")", "\n", "", "", "else", ":", "\n", "            ", "anchors", "=", "self", ".", "anchors", "\n", "", "num_anchors", "=", "anchors", ".", "view", "(", "-", "1", ",", "anchors", ".", "shape", "[", "-", "1", "]", ")", ".", "shape", "[", "0", "]", "\n", "batch_anchors", "=", "anchors", ".", "view", "(", "1", ",", "-", "1", ",", "anchors", ".", "shape", "[", "-", "1", "]", ")", ".", "repeat", "(", "batch_size", ",", "1", ",", "1", ")", "\n", "batch_cls_preds", "=", "cls_preds", ".", "view", "(", "batch_size", ",", "num_anchors", ",", "-", "1", ")", ".", "float", "(", ")", "if", "not", "isinstance", "(", "cls_preds", ",", "list", ")", "else", "cls_preds", "\n", "batch_box_preds", "=", "box_preds", ".", "view", "(", "batch_size", ",", "num_anchors", ",", "-", "1", ")", "if", "not", "isinstance", "(", "box_preds", ",", "list", ")", "else", "torch", ".", "cat", "(", "box_preds", ",", "dim", "=", "1", ")", ".", "view", "(", "batch_size", ",", "num_anchors", ",", "-", "1", ")", "\n", "batch_box_preds", "=", "self", ".", "box_coder", ".", "decode_torch", "(", "batch_box_preds", ",", "batch_anchors", ")", "\n", "\n", "if", "dir_cls_preds", "is", "not", "None", ":", "\n", "            ", "dir_offset", "=", "self", ".", "model_cfg", ".", "DIR_OFFSET", "\n", "dir_limit_offset", "=", "self", ".", "model_cfg", ".", "DIR_LIMIT_OFFSET", "\n", "dir_cls_preds", "=", "dir_cls_preds", ".", "view", "(", "batch_size", ",", "num_anchors", ",", "-", "1", ")", "if", "not", "isinstance", "(", "dir_cls_preds", ",", "list", ")", "else", "torch", ".", "cat", "(", "dir_cls_preds", ",", "dim", "=", "1", ")", ".", "view", "(", "batch_size", ",", "num_anchors", ",", "-", "1", ")", "\n", "dir_labels", "=", "torch", ".", "max", "(", "dir_cls_preds", ",", "dim", "=", "-", "1", ")", "[", "1", "]", "\n", "\n", "period", "=", "(", "2", "*", "np", ".", "pi", "/", "self", ".", "model_cfg", ".", "NUM_DIR_BINS", ")", "\n", "dir_rot", "=", "common_utils", ".", "limit_period", "(", "\n", "batch_box_preds", "[", "...", ",", "6", "]", "-", "dir_offset", ",", "dir_limit_offset", ",", "period", "\n", ")", "\n", "batch_box_preds", "[", "...", ",", "6", "]", "=", "dir_rot", "+", "dir_offset", "+", "period", "*", "dir_labels", ".", "to", "(", "batch_box_preds", ".", "dtype", ")", "\n", "\n", "", "if", "isinstance", "(", "self", ".", "box_coder", ",", "box_coder_utils", ".", "PreviousResidualDecoder", ")", ":", "\n", "            ", "batch_box_preds", "[", "...", ",", "6", "]", "=", "common_utils", ".", "limit_period", "(", "\n", "-", "(", "batch_box_preds", "[", "...", ",", "6", "]", "+", "np", ".", "pi", "/", "2", ")", ",", "offset", "=", "0.5", ",", "period", "=", "np", ".", "pi", "*", "2", "\n", ")", "\n", "\n", "", "return", "batch_cls_preds", ",", "batch_box_preds", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.forward": [[274, 276], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.SingleHead.__init__": [[10, 96], ["backbones_2d.BaseBEVBackbone.__init__", "anchor_head_multi.SingleHead.register_buffer", "anchor_head_multi.SingleHead.model_cfg.get", "anchor_head_multi.SingleHead.init_weights", "torch.ModuleDict", "torch.ModuleDict", "range", "conv_cls_list.append", "torch.Sequential", "torch.Sequential", "anchor_head_multi.SingleHead.conv_box.modules", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "anchor_head_multi.SingleHead.model_cfg.get", "torch.Conv2d", "torch.Conv2d", "conv_cls_list.extend", "torch.Conv2d", "torch.Conv2d", "reg_config.split", "int", "range", "cur_conv_list.append", "torch.Sequential", "torch.Sequential", "anchor_head_multi.SingleHead.conv_box_names.append", "isinstance", "cur_conv_list.extend", "torch.Conv2d", "torch.Conv2d", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.init.constant_", "torch.init.constant_", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.SingleHead.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "input_channels", ",", "num_class", ",", "num_anchors_per_location", ",", "code_size", ",", "rpn_head_cfg", "=", "None", ",", "\n", "head_label_indices", "=", "None", ",", "separate_reg_config", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "rpn_head_cfg", ",", "input_channels", ")", "\n", "\n", "self", ".", "num_anchors_per_location", "=", "num_anchors_per_location", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "code_size", "=", "code_size", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "separate_reg_config", "=", "separate_reg_config", "\n", "self", ".", "register_buffer", "(", "'head_label_indices'", ",", "head_label_indices", ")", "\n", "\n", "if", "self", ".", "separate_reg_config", "is", "not", "None", ":", "\n", "            ", "code_size_cnt", "=", "0", "\n", "self", ".", "conv_box", "=", "nn", ".", "ModuleDict", "(", ")", "\n", "self", ".", "conv_box_names", "=", "[", "]", "\n", "num_middle_conv", "=", "self", ".", "separate_reg_config", ".", "NUM_MIDDLE_CONV", "\n", "num_middle_filter", "=", "self", ".", "separate_reg_config", ".", "NUM_MIDDLE_FILTER", "\n", "conv_cls_list", "=", "[", "]", "\n", "c_in", "=", "input_channels", "\n", "for", "k", "in", "range", "(", "num_middle_conv", ")", ":", "\n", "                ", "conv_cls_list", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "\n", "c_in", ",", "num_middle_filter", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_middle_filter", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "c_in", "=", "num_middle_filter", "\n", "", "conv_cls_list", ".", "append", "(", "nn", ".", "Conv2d", "(", "\n", "c_in", ",", "self", ".", "num_anchors_per_location", "*", "self", ".", "num_class", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", "\n", ")", ")", "\n", "self", ".", "conv_cls", "=", "nn", ".", "Sequential", "(", "*", "conv_cls_list", ")", "\n", "\n", "for", "reg_config", "in", "self", ".", "separate_reg_config", ".", "REG_LIST", ":", "\n", "                ", "reg_name", ",", "reg_channel", "=", "reg_config", ".", "split", "(", "':'", ")", "\n", "reg_channel", "=", "int", "(", "reg_channel", ")", "\n", "cur_conv_list", "=", "[", "]", "\n", "c_in", "=", "input_channels", "\n", "for", "k", "in", "range", "(", "num_middle_conv", ")", ":", "\n", "                    ", "cur_conv_list", ".", "extend", "(", "[", "\n", "nn", ".", "Conv2d", "(", "\n", "c_in", ",", "num_middle_filter", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "num_middle_filter", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", ")", "\n", "c_in", "=", "num_middle_filter", "\n", "\n", "", "cur_conv_list", ".", "append", "(", "nn", ".", "Conv2d", "(", "\n", "c_in", ",", "self", ".", "num_anchors_per_location", "*", "int", "(", "reg_channel", ")", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", "\n", ")", ")", "\n", "code_size_cnt", "+=", "reg_channel", "\n", "self", ".", "conv_box", "[", "f'conv_{reg_name}'", "]", "=", "nn", ".", "Sequential", "(", "*", "cur_conv_list", ")", "\n", "self", ".", "conv_box_names", ".", "append", "(", "f'conv_{reg_name}'", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "conv_box", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "", "", "", "assert", "code_size_cnt", "==", "code_size", ",", "f'Code size does not match: {code_size_cnt}:{code_size}'", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv_cls", "=", "nn", ".", "Conv2d", "(", "\n", "input_channels", ",", "self", ".", "num_anchors_per_location", "*", "self", ".", "num_class", ",", "\n", "kernel_size", "=", "1", "\n", ")", "\n", "self", ".", "conv_box", "=", "nn", ".", "Conv2d", "(", "\n", "input_channels", ",", "self", ".", "num_anchors_per_location", "*", "self", ".", "code_size", ",", "\n", "kernel_size", "=", "1", "\n", ")", "\n", "\n", "", "if", "self", ".", "model_cfg", ".", "get", "(", "'USE_DIRECTION_CLASSIFIER'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "self", ".", "conv_dir_cls", "=", "nn", ".", "Conv2d", "(", "\n", "input_channels", ",", "\n", "self", ".", "num_anchors_per_location", "*", "self", ".", "model_cfg", ".", "NUM_DIR_BINS", ",", "\n", "kernel_size", "=", "1", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv_dir_cls", "=", "None", "\n", "", "self", ".", "use_multihead", "=", "self", ".", "model_cfg", ".", "get", "(", "'USE_MULTIHEAD'", ",", "False", ")", "\n", "self", ".", "init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.SingleHead.init_weights": [[97, 103], ["isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "numpy.log", "numpy.log"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "pi", "=", "0.01", "\n", "if", "isinstance", "(", "self", ".", "conv_cls", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv_cls", ".", "bias", ",", "-", "np", ".", "log", "(", "(", "1", "-", "pi", ")", "/", "pi", ")", ")", "\n", "", "else", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv_cls", "[", "-", "1", "]", ".", "bias", ",", "-", "np", ".", "log", "(", "(", "1", "-", "pi", ")", "/", "pi", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.SingleHead.forward": [[104, 149], ["anchor_head_multi.SingleHead.conv_cls", "super().forward", "anchor_head_multi.SingleHead.conv_box", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "box_preds.view.view.permute().contiguous", "cls_preds.view.view.permute().contiguous", "box_preds.view.view.view().permute().contiguous", "cls_preds.view.view.view().permute().contiguous", "box_preds.view.view.view", "cls_preds.view.view.view", "anchor_head_multi.SingleHead.conv_dir_cls", "box_preds_list.append", "dir_cls_preds.permute().contiguous.permute().contiguous.view().permute().contiguous", "dir_cls_preds.permute().contiguous.permute().contiguous.view", "dir_cls_preds.permute().contiguous.permute().contiguous.permute().contiguous", "box_preds.view.view.permute", "cls_preds.view.view.permute", "box_preds.view.view.view().permute", "cls_preds.view.view.view().permute", "dir_cls_preds.permute().contiguous.permute().contiguous.view().permute", "dir_cls_preds.permute().contiguous.permute().contiguous.permute", "box_preds.view.view.view", "cls_preds.view.view.view", "dir_cls_preds.permute().contiguous.permute().contiguous.view"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward"], ["", "", "def", "forward", "(", "self", ",", "spatial_features_2d", ")", ":", "\n", "        ", "ret_dict", "=", "{", "}", "\n", "spatial_features_2d", "=", "super", "(", ")", ".", "forward", "(", "{", "'spatial_features'", ":", "spatial_features_2d", "}", ")", "[", "'spatial_features_2d'", "]", "\n", "\n", "cls_preds", "=", "self", ".", "conv_cls", "(", "spatial_features_2d", ")", "\n", "\n", "if", "self", ".", "separate_reg_config", "is", "None", ":", "\n", "            ", "box_preds", "=", "self", ".", "conv_box", "(", "spatial_features_2d", ")", "\n", "", "else", ":", "\n", "            ", "box_preds_list", "=", "[", "]", "\n", "for", "reg_name", "in", "self", ".", "conv_box_names", ":", "\n", "                ", "box_preds_list", ".", "append", "(", "self", ".", "conv_box", "[", "reg_name", "]", "(", "spatial_features_2d", ")", ")", "\n", "", "box_preds", "=", "torch", ".", "cat", "(", "box_preds_list", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "not", "self", ".", "use_multihead", ":", "\n", "            ", "box_preds", "=", "box_preds", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "cls_preds", "=", "cls_preds", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "", "else", ":", "\n", "            ", "H", ",", "W", "=", "box_preds", ".", "shape", "[", "2", ":", "]", "\n", "batch_size", "=", "box_preds", ".", "shape", "[", "0", "]", "\n", "box_preds", "=", "box_preds", ".", "view", "(", "-", "1", ",", "self", ".", "num_anchors_per_location", ",", "\n", "self", ".", "code_size", ",", "H", ",", "W", ")", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "4", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "cls_preds", "=", "cls_preds", ".", "view", "(", "-", "1", ",", "self", ".", "num_anchors_per_location", ",", "\n", "self", ".", "num_class", ",", "H", ",", "W", ")", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "4", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "box_preds", "=", "box_preds", ".", "view", "(", "batch_size", ",", "-", "1", ",", "self", ".", "code_size", ")", "\n", "cls_preds", "=", "cls_preds", ".", "view", "(", "batch_size", ",", "-", "1", ",", "self", ".", "num_class", ")", "\n", "\n", "", "if", "self", ".", "conv_dir_cls", "is", "not", "None", ":", "\n", "            ", "dir_cls_preds", "=", "self", ".", "conv_dir_cls", "(", "spatial_features_2d", ")", "\n", "if", "self", ".", "use_multihead", ":", "\n", "                ", "dir_cls_preds", "=", "dir_cls_preds", ".", "view", "(", "\n", "-", "1", ",", "self", ".", "num_anchors_per_location", ",", "self", ".", "model_cfg", ".", "NUM_DIR_BINS", ",", "H", ",", "W", ")", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "4", ",", "\n", "2", ")", ".", "contiguous", "(", ")", "\n", "dir_cls_preds", "=", "dir_cls_preds", ".", "view", "(", "batch_size", ",", "-", "1", ",", "self", ".", "model_cfg", ".", "NUM_DIR_BINS", ")", "\n", "", "else", ":", "\n", "                ", "dir_cls_preds", "=", "dir_cls_preds", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "dir_cls_preds", "=", "None", "\n", "\n", "", "ret_dict", "[", "'cls_preds'", "]", "=", "cls_preds", "\n", "ret_dict", "[", "'box_preds'", "]", "=", "box_preds", "\n", "ret_dict", "[", "'dir_cls_preds'", "]", "=", "dir_cls_preds", "\n", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.__init__": [[152, 173], ["anchor_head_template.AnchorHeadTemplate.__init__", "anchor_head_multi.AnchorHeadMulti.model_cfg.get", "anchor_head_multi.AnchorHeadMulti.make_multihead", "anchor_head_multi.AnchorHeadMulti.model_cfg.get", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.make_multihead"], ["    ", "def", "__init__", "(", "self", ",", "model_cfg", ",", "input_channels", ",", "num_class", ",", "class_names", ",", "grid_size", ",", "point_cloud_range", ",", "\n", "predict_boxes_when_training", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ",", "class_names", "=", "class_names", ",", "grid_size", "=", "grid_size", ",", "\n", "point_cloud_range", "=", "point_cloud_range", ",", "predict_boxes_when_training", "=", "predict_boxes_when_training", "\n", ")", "\n", "self", ".", "model_cfg", "=", "model_cfg", "\n", "self", ".", "separate_multihead", "=", "self", ".", "model_cfg", ".", "get", "(", "'SEPARATE_MULTIHEAD'", ",", "False", ")", "\n", "\n", "if", "self", ".", "model_cfg", ".", "get", "(", "'SHARED_CONV_NUM_FILTER'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "shared_conv_num_filter", "=", "self", ".", "model_cfg", ".", "SHARED_CONV_NUM_FILTER", "\n", "self", ".", "shared_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "shared_conv_num_filter", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "shared_conv_num_filter", ",", "eps", "=", "1e-3", ",", "momentum", "=", "0.01", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shared_conv", "=", "None", "\n", "shared_conv_num_filter", "=", "input_channels", "\n", "", "self", ".", "rpn_heads", "=", "None", "\n", "self", ".", "make_multihead", "(", "shared_conv_num_filter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.make_multihead": [[174, 197], ["torch.ModuleList", "torch.ModuleList", "class_names.extend", "sum", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "anchor_head_multi.SingleHead", "rpn_heads.append", "numpy.array", "len", "anchor_head_multi.AnchorHeadMulti.model_cfg.get", "class_names.index", "anchor_head_multi.AnchorHeadMulti.class_names.index"], "methods", ["None"], ["", "def", "make_multihead", "(", "self", ",", "input_channels", ")", ":", "\n", "        ", "rpn_head_cfgs", "=", "self", ".", "model_cfg", ".", "RPN_HEAD_CFGS", "\n", "rpn_heads", "=", "[", "]", "\n", "class_names", "=", "[", "]", "\n", "for", "rpn_head_cfg", "in", "rpn_head_cfgs", ":", "\n", "            ", "class_names", ".", "extend", "(", "rpn_head_cfg", "[", "'HEAD_CLS_NAME'", "]", ")", "\n", "\n", "", "for", "rpn_head_cfg", "in", "rpn_head_cfgs", ":", "\n", "            ", "num_anchors_per_location", "=", "sum", "(", "[", "self", ".", "num_anchors_per_location", "[", "class_names", ".", "index", "(", "head_cls", ")", "]", "\n", "for", "head_cls", "in", "rpn_head_cfg", "[", "'HEAD_CLS_NAME'", "]", "]", ")", "\n", "head_label_indices", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "\n", "self", ".", "class_names", ".", "index", "(", "cur_name", ")", "+", "1", "for", "cur_name", "in", "rpn_head_cfg", "[", "'HEAD_CLS_NAME'", "]", "\n", "]", ")", ")", "\n", "\n", "rpn_head", "=", "SingleHead", "(", "\n", "self", ".", "model_cfg", ",", "input_channels", ",", "\n", "len", "(", "rpn_head_cfg", "[", "'HEAD_CLS_NAME'", "]", ")", "if", "self", ".", "separate_multihead", "else", "self", ".", "num_class", ",", "\n", "num_anchors_per_location", ",", "self", ".", "box_coder", ".", "code_size", ",", "rpn_head_cfg", ",", "\n", "head_label_indices", "=", "head_label_indices", ",", "\n", "separate_reg_config", "=", "self", ".", "model_cfg", ".", "get", "(", "'SEPARATE_REG_CONFIG'", ",", "None", ")", "\n", ")", "\n", "rpn_heads", ".", "append", "(", "rpn_head", ")", "\n", "", "self", ".", "rpn_heads", "=", "nn", ".", "ModuleList", "(", "rpn_heads", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.forward": [[198, 244], ["anchor_head_multi.AnchorHeadMulti.model_cfg.get", "anchor_head_multi.AnchorHeadMulti.forward_ret_dict.update", "anchor_head_multi.AnchorHeadMulti.shared_conv", "ret_dicts.append", "anchor_head_multi.AnchorHeadMulti.assign_targets", "anchor_head_multi.AnchorHeadMulti.forward_ret_dict.update", "anchor_head_multi.AnchorHeadMulti.generate_predicted_boxes", "isinstance", "rpn_head", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "ret.get", "len", "multihead_label_mapping.append"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_predicted_boxes"], ["", "def", "forward", "(", "self", ",", "data_dict", ")", ":", "\n", "        ", "spatial_features_2d", "=", "data_dict", "[", "'spatial_features_2d'", "]", "\n", "if", "self", ".", "shared_conv", "is", "not", "None", ":", "\n", "            ", "spatial_features_2d", "=", "self", ".", "shared_conv", "(", "spatial_features_2d", ")", "\n", "\n", "", "ret_dicts", "=", "[", "]", "\n", "for", "rpn_head", "in", "self", ".", "rpn_heads", ":", "\n", "            ", "ret_dicts", ".", "append", "(", "rpn_head", "(", "spatial_features_2d", ")", ")", "\n", "\n", "", "cls_preds", "=", "[", "ret_dict", "[", "'cls_preds'", "]", "for", "ret_dict", "in", "ret_dicts", "]", "\n", "box_preds", "=", "[", "ret_dict", "[", "'box_preds'", "]", "for", "ret_dict", "in", "ret_dicts", "]", "\n", "ret", "=", "{", "\n", "'cls_preds'", ":", "cls_preds", "if", "self", ".", "separate_multihead", "else", "torch", ".", "cat", "(", "cls_preds", ",", "dim", "=", "1", ")", ",", "\n", "'box_preds'", ":", "box_preds", "if", "self", ".", "separate_multihead", "else", "torch", ".", "cat", "(", "box_preds", ",", "dim", "=", "1", ")", ",", "\n", "}", "\n", "\n", "if", "self", ".", "model_cfg", ".", "get", "(", "'USE_DIRECTION_CLASSIFIER'", ",", "False", ")", ":", "\n", "            ", "dir_cls_preds", "=", "[", "ret_dict", "[", "'dir_cls_preds'", "]", "for", "ret_dict", "in", "ret_dicts", "]", "\n", "ret", "[", "'dir_cls_preds'", "]", "=", "dir_cls_preds", "if", "self", ".", "separate_multihead", "else", "torch", ".", "cat", "(", "dir_cls_preds", ",", "dim", "=", "1", ")", "\n", "\n", "", "self", ".", "forward_ret_dict", ".", "update", "(", "ret", ")", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "targets_dict", "=", "self", ".", "assign_targets", "(", "\n", "gt_boxes", "=", "data_dict", "[", "'gt_boxes'", "]", "\n", ")", "\n", "self", ".", "forward_ret_dict", ".", "update", "(", "targets_dict", ")", "\n", "\n", "", "if", "not", "self", ".", "training", "or", "self", ".", "predict_boxes_when_training", ":", "\n", "            ", "batch_cls_preds", ",", "batch_box_preds", "=", "self", ".", "generate_predicted_boxes", "(", "\n", "batch_size", "=", "data_dict", "[", "'batch_size'", "]", ",", "\n", "cls_preds", "=", "ret", "[", "'cls_preds'", "]", ",", "box_preds", "=", "ret", "[", "'box_preds'", "]", ",", "dir_cls_preds", "=", "ret", ".", "get", "(", "'dir_cls_preds'", ",", "None", ")", "\n", ")", "\n", "\n", "if", "isinstance", "(", "batch_cls_preds", ",", "list", ")", ":", "\n", "                ", "multihead_label_mapping", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "len", "(", "batch_cls_preds", ")", ")", ":", "\n", "                    ", "multihead_label_mapping", ".", "append", "(", "self", ".", "rpn_heads", "[", "idx", "]", ".", "head_label_indices", ")", "\n", "\n", "", "data_dict", "[", "'multihead_label_mapping'", "]", "=", "multihead_label_mapping", "\n", "\n", "", "data_dict", "[", "'batch_cls_preds'", "]", "=", "batch_cls_preds", "\n", "data_dict", "[", "'batch_box_preds'", "]", "=", "batch_box_preds", "\n", "data_dict", "[", "'cls_preds_normalized'", "]", "=", "False", "\n", "\n", "", "return", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.get_cls_layer_loss": [[245, 302], ["int", "positives.float", "positives.sum().float", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.scatter_", "torch.zeros.scatter_", "enumerate", "isinstance", "cared.type_as", "cls_targets.unsqueeze().long", "cls_pred.view.view.view", "anchor_head_multi.AnchorHeadMulti.cls_loss_func", "cls_losses.item", "positives.sum", "list", "anchor_head_multi.AnchorHeadMulti.sum", "cls_targets.unsqueeze"], "methods", ["None"], ["", "def", "get_cls_layer_loss", "(", "self", ")", ":", "\n", "        ", "loss_weights", "=", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ".", "LOSS_WEIGHTS", "\n", "if", "'pos_cls_weight'", "in", "loss_weights", ":", "\n", "            ", "pos_cls_weight", "=", "loss_weights", "[", "'pos_cls_weight'", "]", "\n", "neg_cls_weight", "=", "loss_weights", "[", "'neg_cls_weight'", "]", "\n", "", "else", ":", "\n", "            ", "pos_cls_weight", "=", "neg_cls_weight", "=", "1.0", "\n", "\n", "", "cls_preds", "=", "self", ".", "forward_ret_dict", "[", "'cls_preds'", "]", "\n", "box_cls_labels", "=", "self", ".", "forward_ret_dict", "[", "'box_cls_labels'", "]", "\n", "if", "not", "isinstance", "(", "cls_preds", ",", "list", ")", ":", "\n", "            ", "cls_preds", "=", "[", "cls_preds", "]", "\n", "", "batch_size", "=", "int", "(", "cls_preds", "[", "0", "]", ".", "shape", "[", "0", "]", ")", "\n", "cared", "=", "box_cls_labels", ">=", "0", "# [N, num_anchors]", "\n", "positives", "=", "box_cls_labels", ">", "0", "\n", "negatives", "=", "box_cls_labels", "==", "0", "\n", "negative_cls_weights", "=", "negatives", "*", "1.0", "*", "neg_cls_weight", "\n", "\n", "cls_weights", "=", "(", "negative_cls_weights", "+", "pos_cls_weight", "*", "positives", ")", ".", "float", "(", ")", "\n", "\n", "reg_weights", "=", "positives", ".", "float", "(", ")", "\n", "if", "self", ".", "num_class", "==", "1", ":", "\n", "# class agnostic", "\n", "            ", "box_cls_labels", "[", "positives", "]", "=", "1", "\n", "", "pos_normalizer", "=", "positives", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", ".", "float", "(", ")", "\n", "\n", "reg_weights", "/=", "torch", ".", "clamp", "(", "pos_normalizer", ",", "min", "=", "1.0", ")", "\n", "cls_weights", "/=", "torch", ".", "clamp", "(", "pos_normalizer", ",", "min", "=", "1.0", ")", "\n", "cls_targets", "=", "box_cls_labels", "*", "cared", ".", "type_as", "(", "box_cls_labels", ")", "\n", "one_hot_targets", "=", "torch", ".", "zeros", "(", "\n", "*", "list", "(", "cls_targets", ".", "shape", ")", ",", "self", ".", "num_class", "+", "1", ",", "dtype", "=", "cls_preds", "[", "0", "]", ".", "dtype", ",", "device", "=", "cls_targets", ".", "device", "\n", ")", "\n", "one_hot_targets", ".", "scatter_", "(", "-", "1", ",", "cls_targets", ".", "unsqueeze", "(", "dim", "=", "-", "1", ")", ".", "long", "(", ")", ",", "1.0", ")", "\n", "one_hot_targets", "=", "one_hot_targets", "[", "...", ",", "1", ":", "]", "\n", "start_idx", "=", "c_idx", "=", "0", "\n", "cls_losses", "=", "0", "\n", "\n", "for", "idx", ",", "cls_pred", "in", "enumerate", "(", "cls_preds", ")", ":", "\n", "            ", "cur_num_class", "=", "self", ".", "rpn_heads", "[", "idx", "]", ".", "num_class", "\n", "cls_pred", "=", "cls_pred", ".", "view", "(", "batch_size", ",", "-", "1", ",", "cur_num_class", ")", "\n", "if", "self", ".", "separate_multihead", ":", "\n", "                ", "one_hot_target", "=", "one_hot_targets", "[", ":", ",", "start_idx", ":", "start_idx", "+", "cls_pred", ".", "shape", "[", "1", "]", ",", "\n", "c_idx", ":", "c_idx", "+", "cur_num_class", "]", "\n", "c_idx", "+=", "cur_num_class", "\n", "", "else", ":", "\n", "                ", "one_hot_target", "=", "one_hot_targets", "[", ":", ",", "start_idx", ":", "start_idx", "+", "cls_pred", ".", "shape", "[", "1", "]", "]", "\n", "", "cls_weight", "=", "cls_weights", "[", ":", ",", "start_idx", ":", "start_idx", "+", "cls_pred", ".", "shape", "[", "1", "]", "]", "\n", "cls_loss_src", "=", "self", ".", "cls_loss_func", "(", "cls_pred", ",", "one_hot_target", ",", "weights", "=", "cls_weight", ")", "# [N, M]", "\n", "cls_loss", "=", "cls_loss_src", ".", "sum", "(", ")", "/", "batch_size", "\n", "cls_loss", "=", "cls_loss", "*", "loss_weights", "[", "'cls_weight'", "]", "\n", "cls_losses", "+=", "cls_loss", "\n", "start_idx", "+=", "cls_pred", ".", "shape", "[", "1", "]", "\n", "", "assert", "start_idx", "==", "one_hot_targets", ".", "shape", "[", "1", "]", "\n", "tb_dict", "=", "{", "\n", "'rpn_loss_cls'", ":", "cls_losses", ".", "item", "(", ")", "\n", "}", "\n", "return", "cls_losses", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.get_box_reg_layer_loss": [[303, 374], ["anchor_head_multi.AnchorHeadMulti.forward_ret_dict.get", "positives.float", "positives.sum().float", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "int", "isinstance", "torch.cat.view().repeat", "torch.cat.view().repeat", "enumerate", "isinstance", "box_pred.view.view.view", "positives.sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "anchor_head_multi.AnchorHeadMulti.add_sin_difference", "anchor_head_multi.AnchorHeadMulti.reg_loss_func", "anchor_head_multi.AnchorHeadMulti.reg_loss_func", "anchor_head_multi.AnchorHeadMulti.sum", "tb_dict.get", "loc_loss.item", "anchor_head_multi.AnchorHeadMulti.get_direction_target", "box_dir_cls_pred.view", "positives.type_as", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "anchor_head_multi.AnchorHeadMulti.dir_loss_func", "isinstance", "positives.type_as.sum", "anchor_head_multi.AnchorHeadMulti.sum", "tb_dict.get", "anchor_head_multi.AnchorHeadMulti.item", "anchor.permute().contiguous().view", "anchor.permute().contiguous", "anchor.permute"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.add_sin_difference", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.get_direction_target"], ["", "def", "get_box_reg_layer_loss", "(", "self", ")", ":", "\n", "        ", "box_preds", "=", "self", ".", "forward_ret_dict", "[", "'box_preds'", "]", "\n", "box_dir_cls_preds", "=", "self", ".", "forward_ret_dict", ".", "get", "(", "'dir_cls_preds'", ",", "None", ")", "\n", "box_reg_targets", "=", "self", ".", "forward_ret_dict", "[", "'box_reg_targets'", "]", "\n", "box_cls_labels", "=", "self", ".", "forward_ret_dict", "[", "'box_cls_labels'", "]", "\n", "\n", "positives", "=", "box_cls_labels", ">", "0", "\n", "reg_weights", "=", "positives", ".", "float", "(", ")", "\n", "pos_normalizer", "=", "positives", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", ".", "float", "(", ")", "\n", "reg_weights", "/=", "torch", ".", "clamp", "(", "pos_normalizer", ",", "min", "=", "1.0", ")", "\n", "\n", "if", "not", "isinstance", "(", "box_preds", ",", "list", ")", ":", "\n", "            ", "box_preds", "=", "[", "box_preds", "]", "\n", "", "batch_size", "=", "int", "(", "box_preds", "[", "0", "]", ".", "shape", "[", "0", "]", ")", "\n", "\n", "if", "isinstance", "(", "self", ".", "anchors", ",", "list", ")", ":", "\n", "            ", "if", "self", ".", "use_multihead", ":", "\n", "                ", "anchors", "=", "torch", ".", "cat", "(", "\n", "[", "anchor", ".", "permute", "(", "3", ",", "4", ",", "0", ",", "1", ",", "2", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "anchor", ".", "shape", "[", "-", "1", "]", ")", "\n", "for", "anchor", "in", "self", ".", "anchors", "]", ",", "dim", "=", "0", "\n", ")", "\n", "", "else", ":", "\n", "                ", "anchors", "=", "torch", ".", "cat", "(", "self", ".", "anchors", ",", "dim", "=", "-", "3", ")", "\n", "", "", "else", ":", "\n", "            ", "anchors", "=", "self", ".", "anchors", "\n", "", "anchors", "=", "anchors", ".", "view", "(", "1", ",", "-", "1", ",", "anchors", ".", "shape", "[", "-", "1", "]", ")", ".", "repeat", "(", "batch_size", ",", "1", ",", "1", ")", "\n", "\n", "start_idx", "=", "0", "\n", "box_losses", "=", "0", "\n", "tb_dict", "=", "{", "}", "\n", "for", "idx", ",", "box_pred", "in", "enumerate", "(", "box_preds", ")", ":", "\n", "            ", "box_pred", "=", "box_pred", ".", "view", "(", "\n", "batch_size", ",", "-", "1", ",", "\n", "box_pred", ".", "shape", "[", "-", "1", "]", "//", "self", ".", "num_anchors_per_location", "if", "not", "self", ".", "use_multihead", "else", "box_pred", ".", "shape", "[", "-", "1", "]", "\n", ")", "\n", "box_reg_target", "=", "box_reg_targets", "[", ":", ",", "start_idx", ":", "start_idx", "+", "box_pred", ".", "shape", "[", "1", "]", "]", "\n", "reg_weight", "=", "reg_weights", "[", ":", ",", "start_idx", ":", "start_idx", "+", "box_pred", ".", "shape", "[", "1", "]", "]", "\n", "# sin(a - b) = sinacosb-cosasinb", "\n", "if", "box_dir_cls_preds", "is", "not", "None", ":", "\n", "                ", "box_pred_sin", ",", "reg_target_sin", "=", "self", ".", "add_sin_difference", "(", "box_pred", ",", "box_reg_target", ")", "\n", "loc_loss_src", "=", "self", ".", "reg_loss_func", "(", "box_pred_sin", ",", "reg_target_sin", ",", "weights", "=", "reg_weight", ")", "# [N, M]", "\n", "", "else", ":", "\n", "                ", "loc_loss_src", "=", "self", ".", "reg_loss_func", "(", "box_pred", ",", "box_reg_target", ",", "weights", "=", "reg_weight", ")", "# [N, M]", "\n", "", "loc_loss", "=", "loc_loss_src", ".", "sum", "(", ")", "/", "batch_size", "\n", "\n", "loc_loss", "=", "loc_loss", "*", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ".", "LOSS_WEIGHTS", "[", "'loc_weight'", "]", "\n", "box_losses", "+=", "loc_loss", "\n", "tb_dict", "[", "'rpn_loss_loc'", "]", "=", "tb_dict", ".", "get", "(", "'rpn_loss_loc'", ",", "0", ")", "+", "loc_loss", ".", "item", "(", ")", "\n", "\n", "if", "box_dir_cls_preds", "is", "not", "None", ":", "\n", "                ", "if", "not", "isinstance", "(", "box_dir_cls_preds", ",", "list", ")", ":", "\n", "                    ", "box_dir_cls_preds", "=", "[", "box_dir_cls_preds", "]", "\n", "", "dir_targets", "=", "self", ".", "get_direction_target", "(", "\n", "anchors", ",", "box_reg_targets", ",", "\n", "dir_offset", "=", "self", ".", "model_cfg", ".", "DIR_OFFSET", ",", "\n", "num_bins", "=", "self", ".", "model_cfg", ".", "NUM_DIR_BINS", "\n", ")", "\n", "box_dir_cls_pred", "=", "box_dir_cls_preds", "[", "idx", "]", "\n", "dir_logit", "=", "box_dir_cls_pred", ".", "view", "(", "batch_size", ",", "-", "1", ",", "self", ".", "model_cfg", ".", "NUM_DIR_BINS", ")", "\n", "weights", "=", "positives", ".", "type_as", "(", "dir_logit", ")", "\n", "weights", "/=", "torch", ".", "clamp", "(", "weights", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", ",", "min", "=", "1.0", ")", "\n", "\n", "weight", "=", "weights", "[", ":", ",", "start_idx", ":", "start_idx", "+", "box_pred", ".", "shape", "[", "1", "]", "]", "\n", "dir_target", "=", "dir_targets", "[", ":", ",", "start_idx", ":", "start_idx", "+", "box_pred", ".", "shape", "[", "1", "]", "]", "\n", "dir_loss", "=", "self", ".", "dir_loss_func", "(", "dir_logit", ",", "dir_target", ",", "weights", "=", "weight", ")", "\n", "dir_loss", "=", "dir_loss", ".", "sum", "(", ")", "/", "batch_size", "\n", "dir_loss", "=", "dir_loss", "*", "self", ".", "model_cfg", ".", "LOSS_CONFIG", ".", "LOSS_WEIGHTS", "[", "'dir_weight'", "]", "\n", "box_losses", "+=", "dir_loss", "\n", "tb_dict", "[", "'rpn_loss_dir'", "]", "=", "tb_dict", ".", "get", "(", "'rpn_loss_dir'", ",", "0", ")", "+", "dir_loss", ".", "item", "(", ")", "\n", "", "start_idx", "+=", "box_pred", ".", "shape", "[", "1", "]", "\n", "", "return", "box_losses", ",", "tb_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.__init__": [[13, 38], ["point_head_template.PointHeadTemplate.__init__", "point_intra_part_head.PointIntraPartOffsetHead.make_fc_layers", "point_intra_part_head.PointIntraPartOffsetHead.make_fc_layers", "target_cfg.get", "point_intra_part_head.PointIntraPartOffsetHead.make_fc_layers", "getattr"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.make_fc_layers"], ["def", "__init__", "(", "self", ",", "num_class", ",", "input_channels", ",", "model_cfg", ",", "predict_boxes_when_training", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model_cfg", "=", "model_cfg", ",", "num_class", "=", "num_class", ")", "\n", "self", ".", "predict_boxes_when_training", "=", "predict_boxes_when_training", "\n", "self", ".", "cls_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "fc_cfg", "=", "self", ".", "model_cfg", ".", "CLS_FC", ",", "\n", "input_channels", "=", "input_channels", ",", "\n", "output_channels", "=", "num_class", "\n", ")", "\n", "self", ".", "part_reg_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "fc_cfg", "=", "self", ".", "model_cfg", ".", "PART_FC", ",", "\n", "input_channels", "=", "input_channels", ",", "\n", "output_channels", "=", "3", "\n", ")", "\n", "target_cfg", "=", "self", ".", "model_cfg", ".", "TARGET_CONFIG", "\n", "if", "target_cfg", ".", "get", "(", "'BOX_CODER'", ",", "None", ")", "is", "not", "None", ":", "\n", "            ", "self", ".", "box_coder", "=", "getattr", "(", "box_coder_utils", ",", "target_cfg", ".", "BOX_CODER", ")", "(", "\n", "**", "target_cfg", ".", "BOX_CODER_CONFIG", "\n", ")", "\n", "self", ".", "box_layers", "=", "self", ".", "make_fc_layers", "(", "\n", "fc_cfg", "=", "self", ".", "model_cfg", ".", "REG_FC", ",", "\n", "input_channels", "=", "input_channels", ",", "\n", "output_channels", "=", "self", ".", "box_coder", ".", "code_size", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "box_layers", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets": [[39, 67], ["utils.box_utils.enlarge_box3d().view", "point_intra_part_head.PointIntraPartOffsetHead.assign_stack_targets", "gt_boxes.shape.__len__", "str", "point_coords.shape.__len__", "str", "utils.box_utils.enlarge_box3d", "gt_boxes.view"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.assign_stack_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.nuscenes.nuscenes_dataset.NuScenesDataset.__len__", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.utils.box_utils.enlarge_box3d"], ["", "", "def", "assign_targets", "(", "self", ",", "input_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            input_dict:\n                point_features: (N1 + N2 + N3 + ..., C)\n                batch_size:\n                point_coords: (N1 + N2 + N3 + ..., 4) [bs_idx, x, y, z]\n                gt_boxes (optional): (B, M, 8)\n        Returns:\n            point_cls_labels: (N1 + N2 + N3 + ...), long type, 0:background, -1:ignored\n            point_part_labels: (N1 + N2 + N3 + ..., 3)\n        \"\"\"", "\n", "point_coords", "=", "input_dict", "[", "'point_coords'", "]", "\n", "gt_boxes", "=", "input_dict", "[", "'gt_boxes'", "]", "\n", "assert", "gt_boxes", ".", "shape", ".", "__len__", "(", ")", "==", "3", ",", "'gt_boxes.shape=%s'", "%", "str", "(", "gt_boxes", ".", "shape", ")", "\n", "assert", "point_coords", ".", "shape", ".", "__len__", "(", ")", "in", "[", "2", "]", ",", "'points.shape=%s'", "%", "str", "(", "point_coords", ".", "shape", ")", "\n", "\n", "batch_size", "=", "gt_boxes", ".", "shape", "[", "0", "]", "\n", "extend_gt_boxes", "=", "box_utils", ".", "enlarge_box3d", "(", "\n", "gt_boxes", ".", "view", "(", "-", "1", ",", "gt_boxes", ".", "shape", "[", "-", "1", "]", ")", ",", "extra_width", "=", "self", ".", "model_cfg", ".", "TARGET_CONFIG", ".", "GT_EXTRA_WIDTH", "\n", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "gt_boxes", ".", "shape", "[", "-", "1", "]", ")", "\n", "targets_dict", "=", "self", ".", "assign_stack_targets", "(", "\n", "points", "=", "point_coords", ",", "gt_boxes", "=", "gt_boxes", ",", "extend_gt_boxes", "=", "extend_gt_boxes", ",", "\n", "set_ignore_flag", "=", "True", ",", "use_ball_constraint", "=", "False", ",", "\n", "ret_part_labels", "=", "True", ",", "ret_box_labels", "=", "(", "self", ".", "box_layers", "is", "not", "None", ")", "\n", ")", "\n", "\n", "return", "targets_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.get_loss": [[68, 78], ["point_intra_part_head.PointIntraPartOffsetHead.get_cls_layer_loss", "point_intra_part_head.PointIntraPartOffsetHead.get_part_layer_loss", "point_intra_part_head.PointIntraPartOffsetHead.get_box_layer_loss"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_multi.AnchorHeadMulti.get_cls_layer_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.get_part_layer_loss", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_head_template.PointHeadTemplate.get_box_layer_loss"], ["", "def", "get_loss", "(", "self", ",", "tb_dict", "=", "None", ")", ":", "\n", "        ", "tb_dict", "=", "{", "}", "if", "tb_dict", "is", "None", "else", "tb_dict", "\n", "point_loss_cls", ",", "tb_dict", "=", "self", ".", "get_cls_layer_loss", "(", "tb_dict", ")", "\n", "point_loss_part", ",", "tb_dict", "=", "self", ".", "get_part_layer_loss", "(", "tb_dict", ")", "\n", "point_loss", "=", "point_loss_cls", "+", "point_loss_part", "\n", "\n", "if", "self", ".", "box_layers", "is", "not", "None", ":", "\n", "            ", "point_loss_box", ",", "tb_dict", "=", "self", ".", "get_box_layer_loss", "(", "tb_dict", ")", "\n", "point_loss", "+=", "point_loss_box", "\n", "", "return", "point_loss", ",", "tb_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.forward": [[79, 128], ["point_intra_part_head.PointIntraPartOffsetHead.cls_layers", "point_intra_part_head.PointIntraPartOffsetHead.part_reg_layers", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid.max", "point_intra_part_head.PointIntraPartOffsetHead.box_layers", "point_intra_part_head.PointIntraPartOffsetHead.assign_targets", "point_intra_part_head.PointIntraPartOffsetHead.get", "point_intra_part_head.PointIntraPartOffsetHead.get", "point_intra_part_head.PointIntraPartOffsetHead.generate_predicted_boxes"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.point_intra_part_head.PointIntraPartOffsetHead.assign_targets", "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.dense_heads.anchor_head_template.AnchorHeadTemplate.generate_predicted_boxes"], ["", "def", "forward", "(", "self", ",", "batch_dict", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            batch_dict:\n                batch_size:\n                point_features: (N1 + N2 + N3 + ..., C) or (B, N, C)\n                point_coords: (N1 + N2 + N3 + ..., 4) [bs_idx, x, y, z]\n                point_labels (optional): (N1 + N2 + N3 + ...)\n                gt_boxes (optional): (B, M, 8)\n        Returns:\n            batch_dict:\n                point_cls_scores: (N1 + N2 + N3 + ..., 1)\n                point_part_offset: (N1 + N2 + N3 + ..., 3)\n        \"\"\"", "\n", "point_features", "=", "batch_dict", "[", "'point_features'", "]", "\n", "point_cls_preds", "=", "self", ".", "cls_layers", "(", "point_features", ")", "# (total_points, num_class)", "\n", "point_part_preds", "=", "self", ".", "part_reg_layers", "(", "point_features", ")", "\n", "\n", "ret_dict", "=", "{", "\n", "'point_cls_preds'", ":", "point_cls_preds", ",", "\n", "'point_part_preds'", ":", "point_part_preds", ",", "\n", "}", "\n", "if", "self", ".", "box_layers", "is", "not", "None", ":", "\n", "            ", "point_box_preds", "=", "self", ".", "box_layers", "(", "point_features", ")", "\n", "ret_dict", "[", "'point_box_preds'", "]", "=", "point_box_preds", "\n", "\n", "", "point_cls_scores", "=", "torch", ".", "sigmoid", "(", "point_cls_preds", ")", "\n", "point_part_offset", "=", "torch", ".", "sigmoid", "(", "point_part_preds", ")", "\n", "batch_dict", "[", "'point_cls_scores'", "]", ",", "_", "=", "point_cls_scores", ".", "max", "(", "dim", "=", "-", "1", ")", "\n", "batch_dict", "[", "'point_part_offset'", "]", "=", "point_part_offset", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "targets_dict", "=", "self", ".", "assign_targets", "(", "batch_dict", ")", "\n", "ret_dict", "[", "'point_cls_labels'", "]", "=", "targets_dict", "[", "'point_cls_labels'", "]", "\n", "ret_dict", "[", "'point_part_labels'", "]", "=", "targets_dict", ".", "get", "(", "'point_part_labels'", ")", "\n", "ret_dict", "[", "'point_box_labels'", "]", "=", "targets_dict", ".", "get", "(", "'point_box_labels'", ")", "\n", "\n", "", "if", "self", ".", "box_layers", "is", "not", "None", "and", "(", "not", "self", ".", "training", "or", "self", ".", "predict_boxes_when_training", ")", ":", "\n", "            ", "point_cls_preds", ",", "point_box_preds", "=", "self", ".", "generate_predicted_boxes", "(", "\n", "points", "=", "batch_dict", "[", "'point_coords'", "]", "[", ":", ",", "1", ":", "4", "]", ",", "\n", "point_cls_preds", "=", "point_cls_preds", ",", "point_box_preds", "=", "ret_dict", "[", "'point_box_preds'", "]", "\n", ")", "\n", "batch_dict", "[", "'batch_cls_preds'", "]", "=", "point_cls_preds", "\n", "batch_dict", "[", "'batch_box_preds'", "]", "=", "point_box_preds", "\n", "batch_dict", "[", "'batch_index'", "]", "=", "batch_dict", "[", "'point_coords'", "]", "[", ":", ",", "0", "]", "\n", "batch_dict", "[", "'cls_preds_normalized'", "]", "=", "False", "\n", "\n", "", "self", ".", "forward_ret_dict", "=", "ret_dict", "\n", "return", "batch_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.model_utils.model_nms_utils.class_agnostic_nms": [[6, 26], ["torch.topk", "scores_mask.nonzero().view", "getattr", "min", "scores_mask.nonzero"], "function", ["None"], ["def", "class_agnostic_nms", "(", "box_scores", ",", "box_preds", ",", "nms_config", ",", "score_thresh", "=", "None", ")", ":", "\n", "    ", "src_box_scores", "=", "box_scores", "\n", "if", "score_thresh", "is", "not", "None", ":", "\n", "        ", "scores_mask", "=", "(", "box_scores", ">=", "score_thresh", ")", "\n", "box_scores", "=", "box_scores", "[", "scores_mask", "]", "\n", "box_preds", "=", "box_preds", "[", "scores_mask", "]", "\n", "\n", "", "selected", "=", "[", "]", "\n", "if", "box_scores", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "        ", "box_scores_nms", ",", "indices", "=", "torch", ".", "topk", "(", "box_scores", ",", "k", "=", "min", "(", "nms_config", ".", "NMS_PRE_MAXSIZE", ",", "box_scores", ".", "shape", "[", "0", "]", ")", ")", "\n", "boxes_for_nms", "=", "box_preds", "[", "indices", "]", "\n", "keep_idx", ",", "selected_scores", "=", "getattr", "(", "iou3d_nms_utils", ",", "nms_config", ".", "NMS_TYPE", ")", "(", "\n", "boxes_for_nms", "[", ":", ",", "0", ":", "7", "]", ",", "box_scores_nms", ",", "nms_config", ".", "NMS_THRESH", ",", "**", "nms_config", "\n", ")", "\n", "selected", "=", "indices", "[", "keep_idx", "[", ":", "nms_config", ".", "NMS_POST_MAXSIZE", "]", "]", "\n", "\n", "", "if", "score_thresh", "is", "not", "None", ":", "\n", "        ", "original_idxs", "=", "scores_mask", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "selected", "=", "original_idxs", "[", "selected", "]", "\n", "", "return", "selected", ",", "src_box_scores", "[", "selected", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.model_utils.model_nms_utils.multi_classes_nms": [[28, 66], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.topk", "getattr", "box_scores.new_ones().long", "min", "box_scores.new_ones", "len"], "function", ["None"], ["", "def", "multi_classes_nms", "(", "cls_scores", ",", "box_preds", ",", "nms_config", ",", "score_thresh", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        cls_scores: (N, num_class)\n        box_preds: (N, 7 + C)\n        nms_config:\n        score_thresh:\n\n    Returns:\n\n    \"\"\"", "\n", "pred_scores", ",", "pred_labels", ",", "pred_boxes", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "k", "in", "range", "(", "cls_scores", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "if", "score_thresh", "is", "not", "None", ":", "\n", "            ", "scores_mask", "=", "(", "cls_scores", "[", ":", ",", "k", "]", ">=", "score_thresh", ")", "\n", "box_scores", "=", "cls_scores", "[", "scores_mask", ",", "k", "]", "\n", "cur_box_preds", "=", "box_preds", "[", "scores_mask", "]", "\n", "", "else", ":", "\n", "            ", "box_scores", "=", "cls_scores", "[", ":", ",", "k", "]", "\n", "\n", "", "selected", "=", "[", "]", "\n", "if", "box_scores", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "box_scores_nms", ",", "indices", "=", "torch", ".", "topk", "(", "box_scores", ",", "k", "=", "min", "(", "nms_config", ".", "NMS_PRE_MAXSIZE", ",", "box_scores", ".", "shape", "[", "0", "]", ")", ")", "\n", "boxes_for_nms", "=", "cur_box_preds", "[", "indices", "]", "\n", "keep_idx", ",", "selected_scores", "=", "getattr", "(", "iou3d_nms_utils", ",", "nms_config", ".", "NMS_TYPE", ")", "(", "\n", "boxes_for_nms", "[", ":", ",", "0", ":", "7", "]", ",", "box_scores_nms", ",", "nms_config", ".", "NMS_THRESH", ",", "**", "nms_config", "\n", ")", "\n", "selected", "=", "indices", "[", "keep_idx", "[", ":", "nms_config", ".", "NMS_POST_MAXSIZE", "]", "]", "\n", "\n", "", "pred_scores", ".", "append", "(", "box_scores", "[", "selected", "]", ")", "\n", "pred_labels", ".", "append", "(", "box_scores", ".", "new_ones", "(", "len", "(", "selected", ")", ")", ".", "long", "(", ")", "*", "k", ")", "\n", "pred_boxes", ".", "append", "(", "cur_box_preds", "[", "selected", "]", ")", "\n", "\n", "", "pred_scores", "=", "torch", ".", "cat", "(", "pred_scores", ",", "dim", "=", "0", ")", "\n", "pred_labels", "=", "torch", ".", "cat", "(", "pred_labels", ",", "dim", "=", "0", ")", "\n", "pred_boxes", "=", "torch", ".", "cat", "(", "pred_boxes", ",", "dim", "=", "0", ")", "\n", "\n", "return", "pred_scores", ",", "pred_labels", ",", "pred_boxes", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules._PointnetSAModuleBase.__init__": [[33, 38], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["xyz_flipped", ",", "\n", "pointnet2_utils", ".", "furthest_point_sample", "(", "xyz", ",", "self", ".", "npoint", ")", "\n", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "if", "self", ".", "npoint", "is", "not", "None", "else", "None", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "groupers", ")", ")", ":", "\n", "            ", "new_features", "=", "self", ".", "groupers", "[", "i", "]", "(", "xyz", ",", "new_xyz", ",", "features", ")", "# (B, C, npoint, nsample)", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules._PointnetSAModuleBase.forward": [[39, 81], ["xyz.transpose().contiguous", "range", "pointnet2_utils.gather_operation().transpose().contiguous", "len", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "new_features.squeeze.squeeze.squeeze", "new_features_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "xyz.transpose", "pointnet2_utils.gather_operation().transpose", "new_features.squeeze.squeeze.size", "pointnet2_utils.gather_operation", "pointnet2_utils.furthest_point_sample"], "methods", ["None"], ["\n", "new_features", "=", "self", ".", "mlps", "[", "i", "]", "(", "new_features", ")", "# (B, mlp[-1], npoint, nsample)", "\n", "if", "self", ".", "pool_method", "==", "'max_pool'", ":", "\n", "                ", "new_features", "=", "F", ".", "max_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], npoint, 1)", "\n", "", "elif", "self", ".", "pool_method", "==", "'avg_pool'", ":", "\n", "                ", "new_features", "=", "F", ".", "avg_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], npoint, 1)", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "new_features", "=", "new_features", ".", "squeeze", "(", "-", "1", ")", "# (B, mlp[-1], npoint)", "\n", "new_features_list", ".", "append", "(", "new_features", ")", "\n", "\n", "", "return", "new_xyz", ",", "torch", ".", "cat", "(", "new_features_list", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "", "", "class", "PointnetSAModuleMSG", "(", "_PointnetSAModuleBase", ")", ":", "\n", "    ", "\"\"\"Pointnet set abstraction layer with multiscale grouping\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "*", ",", "npoint", ":", "int", ",", "radii", ":", "List", "[", "float", "]", ",", "nsamples", ":", "List", "[", "int", "]", ",", "mlps", ":", "List", "[", "List", "[", "int", "]", "]", ",", "bn", ":", "bool", "=", "True", ",", "\n", "use_xyz", ":", "bool", "=", "True", ",", "pool_method", "=", "'max_pool'", ")", ":", "\n", "        ", "\"\"\"\n        :param npoint: int\n        :param radii: list of float, list of radii to group with\n        :param nsamples: list of int, number of samples in each ball query\n        :param mlps: list of list of int, spec of the pointnet before the global pooling for each scale\n        :param bn: whether to use batchnorm\n        :param use_xyz:\n        :param pool_method: max_pool / avg_pool\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "len", "(", "radii", ")", "==", "len", "(", "nsamples", ")", "==", "len", "(", "mlps", ")", "\n", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "groupers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlps", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "radii", ")", ")", ":", "\n", "            ", "radius", "=", "radii", "[", "i", "]", "\n", "nsample", "=", "nsamples", "[", "i", "]", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetSAModuleMSG.__init__": [[100, 130], ["pointnet2_modules._PointnetSAModuleBase.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "len", "len", "len", "len", "pointnet2_modules.PointnetSAModuleMSG.groupers.append", "pointnet2_modules.PointnetSAModuleMSG.mlps.append", "pytorch_utils.SharedMLP", "pointnet2_utils.QueryAndGroup", "pointnet2_utils.GroupAll"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["\n", "\n", "", "", "class", "PointnetSAModule", "(", "PointnetSAModuleMSG", ")", ":", "\n", "    ", "\"\"\"Pointnet set abstraction layer\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "*", ",", "mlp", ":", "List", "[", "int", "]", ",", "npoint", ":", "int", "=", "None", ",", "radius", ":", "float", "=", "None", ",", "nsample", ":", "int", "=", "None", ",", "\n", "bn", ":", "bool", "=", "True", ",", "use_xyz", ":", "bool", "=", "True", ",", "pool_method", "=", "'max_pool'", ")", ":", "\n", "        ", "\"\"\"\n        :param mlp: list of int, spec of the pointnet before the global max_pool\n        :param npoint: int, number of features\n        :param radius: float, radius of ball\n        :param nsample: int, number of samples in the ball query\n        :param bn: whether to use batchnorm\n        :param use_xyz:\n        :param pool_method: max_pool / avg_pool\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "mlps", "=", "[", "mlp", "]", ",", "npoint", "=", "npoint", ",", "radii", "=", "[", "radius", "]", ",", "nsamples", "=", "[", "nsample", "]", ",", "bn", "=", "bn", ",", "use_xyz", "=", "use_xyz", ",", "\n", "pool_method", "=", "pool_method", "\n", ")", "\n", "\n", "\n", "", "", "class", "PointnetFPModule", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "r\"\"\"Propigates the features of one set to another\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "*", ",", "mlp", ":", "List", "[", "int", "]", ",", "bn", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        :param mlp: list of int\n        :param bn: whether to use batchnorm\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetSAModule.__init__": [[149, 166], ["pointnet2_modules.PointnetSAModuleMSG.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["\n", "if", "known", "is", "not", "None", ":", "\n", "            ", "dist", ",", "idx", "=", "pointnet2_utils", ".", "three_nn", "(", "unknown", ",", "known", ")", "\n", "dist_recip", "=", "1.0", "/", "(", "dist", "+", "1e-8", ")", "\n", "norm", "=", "torch", ".", "sum", "(", "dist_recip", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "weight", "=", "dist_recip", "/", "norm", "\n", "\n", "interpolated_feats", "=", "pointnet2_utils", ".", "three_interpolate", "(", "known_feats", ",", "idx", ",", "weight", ")", "\n", "", "else", ":", "\n", "            ", "interpolated_feats", "=", "known_feats", ".", "expand", "(", "*", "known_feats", ".", "size", "(", ")", "[", "0", ":", "2", "]", ",", "unknown", ".", "size", "(", "1", ")", ")", "\n", "\n", "", "if", "unknow_feats", "is", "not", "None", ":", "\n", "            ", "new_features", "=", "torch", ".", "cat", "(", "[", "interpolated_feats", ",", "unknow_feats", "]", ",", "dim", "=", "1", ")", "# (B, C2 + C1, n)", "\n", "", "else", ":", "\n", "            ", "new_features", "=", "interpolated_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetSAModuleVotes.__init__": [[173, 213], ["torch.Module.__init__", "pytorch_utils.SharedMLP", "pointnet2_utils.QueryAndGroup", "pointnet2_utils.GroupAll", "len"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["", "", "if", "__name__", "==", "\"__main__\"", ":", "\n", "    ", "pass", "\n", "", ""]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetSAModuleVotes.forward": [[215, 278], ["xyz.transpose().contiguous", "pointnet2_modules.PointnetSAModuleVotes.mlp_module", "torch.avg_pool2d.squeeze", "pointnet2_utils.furthest_point_sample", "pointnet2_utils.gather_operation().transpose().contiguous", "pointnet2_modules.PointnetSAModuleVotes.grouper", "pointnet2_modules.PointnetSAModuleVotes.grouper", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "xyz.transpose", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "pointnet2_utils.gather_operation().transpose", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.avg_pool2d.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "float", "pointnet2_utils.gather_operation", "torch.avg_pool2d.size", "torch.exp.unsqueeze", "torch.exp.unsqueeze", "torch.exp.unsqueeze", "grouped_xyz.pow().sum", "grouped_xyz.pow"], "methods", ["None"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetSAModuleMSGVotes.__init__": [[284, 314], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "len", "len", "len", "len", "pointnet2_modules.PointnetSAModuleMSGVotes.groupers.append", "pointnet2_modules.PointnetSAModuleMSGVotes.mlps.append", "pytorch_utils.SharedMLP", "pointnet2_utils.QueryAndGroup", "pointnet2_utils.GroupAll"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetSAModuleMSGVotes.forward": [[315, 360], ["xyz.transpose().contiguous", "range", "pointnet2_utils.furthest_point_sample", "pointnet2_utils.gather_operation().transpose().contiguous", "len", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "new_features.squeeze.squeeze.squeeze", "new_features_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "xyz.transpose", "pointnet2_utils.gather_operation().transpose", "new_features.squeeze.squeeze.size", "pointnet2_utils.gather_operation"], "methods", ["None"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetFPModule.__init__": [[373, 376], ["torch.Module.__init__", "pytorch_utils.SharedMLP"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetFPModule.forward": [[377, 423], ["torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "pointnet2_modules.PointnetFPModule.mlp", "torch.cat.squeeze", "torch.cat.squeeze", "torch.cat.squeeze", "pointnet2_utils.three_nn", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "pointnet2_utils.three_interpolate", "known_feats.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "unknown.size", "known_feats.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetLFPModuleMSG.__init__": [[429, 460], ["torch.Module.__init__", "pytorch_utils.SharedMLP", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "len", "len", "len", "len", "pointnet2_modules.PointnetLFPModuleMSG.groupers.append", "pointnet2_modules.PointnetLFPModuleMSG.mlps.append", "pointnet2_utils.QueryAndGroup", "pytorch_utils.SharedMLP"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_modules.PointnetLFPModuleMSG.forward": [[461, 504], ["range", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "len", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.cat.squeeze", "torch.cat.squeeze", "torch.cat.squeeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "pointnet2_modules.PointnetLFPModuleMSG.post_mlp", "new_features_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.RandomDropout.__init__": [[42, 46], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["def", "forward", "(", "ctx", ",", "features", ":", "torch", ".", "Tensor", ",", "idx", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.RandomDropout.forward": [[47, 50], ["pointnet2.feature_dropout_no_scaling", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["\n", "assert", "features", ".", "is_contiguous", "(", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.FurthestPointSampling.forward": [[53, 75], ["_ext.furthest_point_sampling", "ctx.mark_non_differentiable"], "methods", ["None"], ["B", ",", "npoint", "=", "idx", ".", "size", "(", ")", "\n", "_", ",", "C", ",", "N", "=", "features", ".", "size", "(", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "npoint", ")", "\n", "\n", "pointnet2", ".", "gather_points_wrapper", "(", "B", ",", "C", ",", "N", ",", "npoint", ",", "features", ",", "idx", ",", "output", ")", "\n", "\n", "ctx", ".", "for_backwards", "=", "(", "idx", ",", "C", ",", "N", ")", "\n", "return", "output", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ")", ":", "\n", "        ", "idx", ",", "C", ",", "N", "=", "ctx", ".", "for_backwards", "\n", "B", ",", "npoint", "=", "idx", ".", "size", "(", ")", "\n", "\n", "grad_features", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "N", ")", ".", "zero_", "(", ")", ")", "\n", "grad_out_data", "=", "grad_out", ".", "data", ".", "contiguous", "(", ")", "\n", "pointnet2", ".", "gather_points_grad_wrapper", "(", "B", ",", "C", ",", "N", ",", "npoint", ",", "grad_out_data", ",", "idx", ",", "grad_features", ".", "data", ")", "\n", "return", "grad_features", ",", "None", "\n", "\n", "\n", "", "", "gather_operation", "=", "GatherOperation", ".", "apply", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.FurthestPointSampling.backward": [[76, 79], ["None"], "methods", ["None"], ["class", "ThreeNN", "(", "Function", ")", ":", "\n", "\n", "    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "unknown", ":", "torch", ".", "Tensor", ",", "known", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GatherOperation.forward": [[85, 109], ["features.size", "_ext.gather_points"], "methods", ["None"], ["\n", "assert", "unknown", ".", "is_contiguous", "(", ")", "\n", "assert", "known", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "N", ",", "_", "=", "unknown", ".", "size", "(", ")", "\n", "m", "=", "known", ".", "size", "(", "1", ")", "\n", "dist2", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "N", ",", "3", ")", "\n", "idx", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "B", ",", "N", ",", "3", ")", "\n", "\n", "pointnet2", ".", "three_nn_wrapper", "(", "B", ",", "N", ",", "m", ",", "unknown", ",", "known", ",", "dist2", ",", "idx", ")", "\n", "return", "torch", ".", "sqrt", "(", "dist2", ")", ",", "idx", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "a", "=", "None", ",", "b", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", "\n", "\n", "\n", "", "", "three_nn", "=", "ThreeNN", ".", "apply", "\n", "\n", "\n", "class", "ThreeInterpolate", "(", "Function", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GatherOperation.backward": [[110, 116], ["_ext.gather_points_grad", "grad_out.contiguous"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ":", "torch", ".", "Tensor", ",", "idx", ":", "torch", ".", "Tensor", ",", "weight", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.ThreeNN.forward": [[122, 144], ["_ext.three_nn", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["assert", "idx", ".", "is_contiguous", "(", ")", "\n", "assert", "weight", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "c", ",", "m", "=", "features", ".", "size", "(", ")", "\n", "n", "=", "idx", ".", "size", "(", "1", ")", "\n", "ctx", ".", "three_interpolate_for_backward", "=", "(", "idx", ",", "weight", ",", "m", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "c", ",", "n", ")", "\n", "\n", "pointnet2", ".", "three_interpolate_wrapper", "(", "B", ",", "c", ",", "m", ",", "n", ",", "features", ",", "idx", ",", "weight", ",", "output", ")", "\n", "return", "output", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param grad_out: (B, C, N) tensor with gradients of outputs\n        :return:\n            grad_features: (B, C, M) tensor with gradients of features\n            None:\n            None:\n        \"\"\"", "\n", "idx", ",", "weight", ",", "m", "=", "ctx", ".", "three_interpolate_for_backward", "\n", "B", ",", "c", ",", "n", "=", "grad_out", ".", "size", "(", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.ThreeNN.backward": [[145, 148], ["None"], "methods", ["None"], ["\n", "grad_features", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "c", ",", "m", ")", ".", "zero_", "(", ")", ")", "\n", "grad_out_data", "=", "grad_out", ".", "data", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.ThreeInterpolate.forward": [[154, 179], ["features.size", "idx.size", "_ext.three_interpolate"], "methods", ["None"], ["\n", "\n", "class", "GroupingOperation", "(", "Function", ")", ":", "\n", "\n", "    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ":", "torch", ".", "Tensor", ",", "idx", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param features: (B, C, N) tensor of features to group\n        :param idx: (B, npoint, nsample) tensor containing the indicies of features to group with\n        :return:\n            output: (B, C, npoint, nsample) tensor\n        \"\"\"", "\n", "assert", "features", ".", "is_contiguous", "(", ")", "\n", "assert", "idx", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "nfeatures", ",", "nsample", "=", "idx", ".", "size", "(", ")", "\n", "_", ",", "C", ",", "N", "=", "features", ".", "size", "(", ")", "\n", "output", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "nfeatures", ",", "nsample", ")", "\n", "\n", "pointnet2", ".", "group_points_wrapper", "(", "B", ",", "C", ",", "N", ",", "nfeatures", ",", "nsample", ",", "features", ",", "idx", ",", "output", ")", "\n", "\n", "ctx", ".", "for_backwards", "=", "(", "idx", ",", "N", ")", "\n", "return", "output", "\n", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.ThreeInterpolate.backward": [[180, 205], ["_ext.three_interpolate_grad", "grad_out.contiguous"], "methods", ["None"], ["def", "backward", "(", "ctx", ",", "grad_out", ":", "torch", ".", "Tensor", ")", "->", "Tuple", "[", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "\"\"\"\n        :param ctx:\n        :param grad_out: (B, C, npoint, nsample) tensor of the gradients of the output from forward\n        :return:\n            grad_features: (B, C, N) gradient of the features\n        \"\"\"", "\n", "idx", ",", "N", "=", "ctx", ".", "for_backwards", "\n", "\n", "B", ",", "C", ",", "npoint", ",", "nsample", "=", "grad_out", ".", "size", "(", ")", "\n", "grad_features", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "B", ",", "C", ",", "N", ")", ".", "zero_", "(", ")", ")", "\n", "\n", "grad_out_data", "=", "grad_out", ".", "data", ".", "contiguous", "(", ")", "\n", "pointnet2", ".", "group_points_grad_wrapper", "(", "B", ",", "C", ",", "N", ",", "npoint", ",", "nsample", ",", "grad_out_data", ",", "idx", ",", "grad_features", ".", "data", ")", "\n", "return", "grad_features", ",", "None", "\n", "\n", "\n", "", "", "grouping_operation", "=", "GroupingOperation", ".", "apply", "\n", "\n", "\n", "class", "BallQuery", "(", "Function", ")", ":", "\n", "\n", "    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "radius", ":", "float", ",", "nsample", ":", "int", ",", "xyz", ":", "torch", ".", "Tensor", ",", "new_xyz", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupingOperation.forward": [[211, 234], ["idx.size", "features.size", "_ext.group_points"], "methods", ["None"], ["\n", "assert", "new_xyz", ".", "is_contiguous", "(", ")", "\n", "assert", "xyz", ".", "is_contiguous", "(", ")", "\n", "\n", "B", ",", "N", ",", "_", "=", "xyz", ".", "size", "(", ")", "\n", "npoint", "=", "new_xyz", ".", "size", "(", "1", ")", "\n", "idx", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "B", ",", "npoint", ",", "nsample", ")", ".", "zero_", "(", ")", "\n", "\n", "pointnet2", ".", "ball_query_wrapper", "(", "B", ",", "N", ",", "npoint", ",", "radius", ",", "nsample", ",", "new_xyz", ",", "xyz", ",", "idx", ")", "\n", "return", "idx", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "a", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", ",", "None", ",", "None", "\n", "\n", "\n", "", "", "ball_query", "=", "BallQuery", ".", "apply", "\n", "\n", "\n", "class", "QueryAndGroup", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "radius", ":", "float", ",", "nsample", ":", "int", ",", "use_xyz", ":", "bool", "=", "True", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupingOperation.backward": [[235, 256], ["_ext.group_points_grad", "grad_out.contiguous"], "methods", ["None"], ["\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "radius", ",", "self", ".", "nsample", ",", "self", ".", "use_xyz", "=", "radius", ",", "nsample", ",", "use_xyz", "\n", "\n", "", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "new_xyz", ":", "torch", ".", "Tensor", ",", "features", ":", "torch", ".", "Tensor", "=", "None", ")", "->", "Tuple", "[", "torch", ".", "Tensor", "]", ":", "\n", "        ", "\"\"\"\n        :param xyz: (B, N, 3) xyz coordinates of the features\n        :param new_xyz: (B, npoint, 3) centroids\n        :param features: (B, C, N) descriptors of the features\n        :return:\n            new_features: (B, 3 + C, npoint, nsample)\n        \"\"\"", "\n", "idx", "=", "ball_query", "(", "self", ".", "radius", ",", "self", ".", "nsample", ",", "xyz", ",", "new_xyz", ")", "\n", "xyz_trans", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "grouped_xyz", "=", "grouping_operation", "(", "xyz_trans", ",", "idx", ")", "# (B, 3, npoint, nsample)", "\n", "grouped_xyz", "-=", "new_xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "if", "features", "is", "not", "None", ":", "\n", "            ", "grouped_features", "=", "grouping_operation", "(", "features", ",", "idx", ")", "\n", "if", "self", ".", "use_xyz", ":", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.BallQuery.forward": [[262, 286], ["_ext.ball_query", "ctx.mark_non_differentiable"], "methods", ["None"], ["new_features", "=", "grouped_xyz", "\n", "\n", "", "return", "new_features", "\n", "\n", "\n", "", "", "class", "GroupAll", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "use_xyz", ":", "bool", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_xyz", "=", "use_xyz", "\n", "\n", "", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "new_xyz", ":", "torch", ".", "Tensor", ",", "features", ":", "torch", ".", "Tensor", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :param xyz: (B, N, 3) xyz coordinates of the features\n        :param new_xyz: ignored\n        :param features: (B, C, N) descriptors of the features\n        :return:\n            new_features: (B, C + 3, 1, N)\n        \"\"\"", "\n", "grouped_xyz", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "2", ")", "\n", "if", "features", "is", "not", "None", ":", "\n", "            ", "grouped_features", "=", "features", ".", "unsqueeze", "(", "2", ")", "\n", "if", "self", ".", "use_xyz", ":", "\n", "                ", "new_features", "=", "torch", ".", "cat", "(", "[", "grouped_xyz", ",", "grouped_features", "]", ",", "dim", "=", "1", ")", "# (B, 3 + C, 1, N)", "\n", "", "else", ":", "\n", "                ", "new_features", "=", "grouped_features", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.BallQuery.backward": [[287, 290], ["None"], "methods", ["None"], ["", "", "else", ":", "\n", "            ", "new_features", "=", "grouped_xyz", "\n", "\n", "", "return", "new_features", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.QueryAndGroup.__init__": [[307, 317], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.QueryAndGroup.forward": [[318, 378], ["ball_query", "xyz.transpose().contiguous", "grouping_operation", "new_xyz.transpose().unsqueeze", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "grouping_operation", "ret.append", "ret.append", "len", "tuple", "range", "xyz.transpose", "new_xyz.transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.__init__": [[388, 392], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pointnet2_utils.GroupAll.forward": [[393, 427], ["xyz.transpose().unsqueeze", "features.unsqueeze", "xyz.transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], []], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.SharedMLP.__init__": [[16, 38], ["torch.ReLU", "torch.ReLU", "torch.Sequential.__init__", "range", "pytorch_utils.SharedMLP.add_module", "len", "pytorch_utils.Conv2d"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "args", ":", "List", "[", "int", "]", ",", "\n", "*", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "first", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "args", ")", "-", "1", ")", ":", "\n", "            ", "self", ".", "add_module", "(", "\n", "name", "+", "'layer{}'", ".", "format", "(", "i", ")", ",", "\n", "Conv2d", "(", "\n", "args", "[", "i", "]", ",", "\n", "args", "[", "i", "+", "1", "]", ",", "\n", "bn", "=", "(", "not", "first", "or", "not", "preact", "or", "(", "i", "!=", "0", ")", ")", "and", "bn", ",", "\n", "activation", "=", "activation", "\n", "if", "(", "not", "first", "or", "not", "preact", "or", "(", "i", "!=", "0", ")", ")", "else", "None", ",", "\n", "preact", "=", "preact", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils._BNBase.__init__": [[44, 50], ["torch.Sequential.__init__", "pytorch_utils._BNBase.add_module", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "batch_norm"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ",", "batch_norm", "=", "None", ",", "name", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "name", "+", "\"bn\"", ",", "batch_norm", "(", "in_size", ")", ")", "\n", "\n", "nn", ".", "init", ".", "constant_", "(", "self", "[", "0", "]", ".", "weight", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", "[", "0", "]", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BatchNorm1d.__init__": [[54, 56], ["pytorch_utils._BNBase.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ":", "int", ",", "*", ",", "name", ":", "str", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "in_size", ",", "batch_norm", "=", "nn", ".", "BatchNorm1d", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BatchNorm2d.__init__": [[60, 62], ["pytorch_utils._BNBase.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ":", "int", ",", "name", ":", "str", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "in_size", ",", "batch_norm", "=", "nn", ".", "BatchNorm2d", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BatchNorm3d.__init__": [[66, 68], ["pytorch_utils._BNBase.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ":", "int", ",", "name", ":", "str", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "in_size", ",", "batch_norm", "=", "nn", ".", "BatchNorm3d", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils._ConvBase.__init__": [[72, 124], ["torch.Sequential.__init__", "conv", "init", "pytorch_utils._ConvBase.add_module", "torch.init.constant_", "torch.init.constant_", "batch_norm", "batch_norm", "pytorch_utils._ConvBase.add_module", "pytorch_utils._ConvBase.add_module", "pytorch_utils._ConvBase.add_module", "pytorch_utils._ConvBase.add_module"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "activation", ",", "\n", "bn", ",", "\n", "init", ",", "\n", "conv", "=", "None", ",", "\n", "batch_norm", "=", "None", ",", "\n", "bias", "=", "True", ",", "\n", "preact", "=", "False", ",", "\n", "name", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "bias", "=", "bias", "and", "(", "not", "bn", ")", "\n", "conv_unit", "=", "conv", "(", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "bias", "=", "bias", "\n", ")", "\n", "init", "(", "conv_unit", ".", "weight", ")", "\n", "if", "bias", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "conv_unit", ".", "bias", ",", "0", ")", "\n", "\n", "", "if", "bn", ":", "\n", "            ", "if", "not", "preact", ":", "\n", "                ", "bn_unit", "=", "batch_norm", "(", "out_size", ")", "\n", "", "else", ":", "\n", "                ", "bn_unit", "=", "batch_norm", "(", "in_size", ")", "\n", "\n", "", "", "if", "preact", ":", "\n", "            ", "if", "bn", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'bn'", ",", "bn_unit", ")", "\n", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'activation'", ",", "activation", ")", "\n", "\n", "", "", "self", ".", "add_module", "(", "name", "+", "'conv'", ",", "conv_unit", ")", "\n", "\n", "if", "not", "preact", ":", "\n", "            ", "if", "bn", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'bn'", ",", "bn_unit", ")", "\n", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'activation'", ",", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.Conv1d.__init__": [[128, 157], ["torch.ReLU", "torch.ReLU", "pytorch_utils._ConvBase.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ":", "int", ",", "\n", "out_size", ":", "int", ",", "\n", "*", ",", "\n", "kernel_size", ":", "int", "=", "1", ",", "\n", "stride", ":", "int", "=", "1", ",", "\n", "padding", ":", "int", "=", "0", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "init", "=", "nn", ".", "init", ".", "kaiming_normal_", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "activation", ",", "\n", "bn", ",", "\n", "init", ",", "\n", "conv", "=", "nn", ".", "Conv1d", ",", "\n", "batch_norm", "=", "BatchNorm1d", ",", "\n", "bias", "=", "bias", ",", "\n", "preact", "=", "preact", ",", "\n", "name", "=", "name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.Conv2d.__init__": [[162, 191], ["torch.ReLU", "torch.ReLU", "pytorch_utils._ConvBase.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ":", "int", ",", "\n", "out_size", ":", "int", ",", "\n", "*", ",", "\n", "kernel_size", ":", "Tuple", "[", "int", ",", "int", "]", "=", "(", "1", ",", "1", ")", ",", "\n", "stride", ":", "Tuple", "[", "int", ",", "int", "]", "=", "(", "1", ",", "1", ")", ",", "\n", "padding", ":", "Tuple", "[", "int", ",", "int", "]", "=", "(", "0", ",", "0", ")", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "init", "=", "nn", ".", "init", ".", "kaiming_normal_", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "activation", ",", "\n", "bn", ",", "\n", "init", ",", "\n", "conv", "=", "nn", ".", "Conv2d", ",", "\n", "batch_norm", "=", "BatchNorm2d", ",", "\n", "bias", "=", "bias", ",", "\n", "preact", "=", "preact", ",", "\n", "name", "=", "name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.Conv3d.__init__": [[196, 225], ["torch.ReLU", "torch.ReLU", "pytorch_utils._ConvBase.__init__"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ":", "int", ",", "\n", "out_size", ":", "int", ",", "\n", "*", ",", "\n", "kernel_size", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", "=", "(", "0", ",", "0", ",", "0", ")", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "init", "=", "nn", ".", "init", ".", "kaiming_normal_", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "activation", ",", "\n", "bn", ",", "\n", "init", ",", "\n", "conv", "=", "nn", ".", "Conv3d", ",", "\n", "batch_norm", "=", "BatchNorm3d", ",", "\n", "bias", "=", "bias", ",", "\n", "preact", "=", "preact", ",", "\n", "name", "=", "name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.FC.__init__": [[230, 264], ["torch.ReLU", "torch.ReLU", "torch.Sequential.__init__", "torch.Linear", "torch.Linear", "pytorch_utils.FC.add_module", "init", "torch.init.constant_", "torch.init.constant_", "pytorch_utils.FC.add_module", "pytorch_utils.FC.add_module", "pytorch_utils.FC.add_module", "pytorch_utils.FC.add_module", "pytorch_utils.BatchNorm1d", "pytorch_utils.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ":", "int", ",", "\n", "out_size", ":", "int", ",", "\n", "*", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "init", "=", "None", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "fc", "=", "nn", ".", "Linear", "(", "in_size", ",", "out_size", ",", "bias", "=", "not", "bn", ")", "\n", "if", "init", "is", "not", "None", ":", "\n", "            ", "init", "(", "fc", ".", "weight", ")", "\n", "", "if", "not", "bn", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "fc", ".", "bias", ",", "0", ")", "\n", "\n", "", "if", "preact", ":", "\n", "            ", "if", "bn", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'bn'", ",", "BatchNorm1d", "(", "in_size", ")", ")", "\n", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'activation'", ",", "activation", ")", "\n", "\n", "", "", "self", ".", "add_module", "(", "name", "+", "'fc'", ",", "fc", ")", "\n", "\n", "if", "not", "preact", ":", "\n", "            ", "if", "bn", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'bn'", ",", "BatchNorm1d", "(", "out_size", ")", ")", "\n", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'activation'", ",", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.__init__": [[276, 293], ["pytorch_utils.BNMomentumScheduler.step", "isinstance", "RuntimeError", "type"], "methods", ["home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step"], ["    ", "def", "__init__", "(", "\n", "self", ",", "model", ",", "bn_lambda", ",", "last_epoch", "=", "-", "1", ",", "\n", "setter", "=", "set_bn_momentum_default", "\n", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "model", ",", "nn", ".", "Module", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"Class '{}' is not a PyTorch nn Module\"", ".", "format", "(", "\n", "type", "(", "model", ")", ".", "__name__", "\n", ")", "\n", ")", "\n", "\n", "", "self", ".", "model", "=", "model", "\n", "self", ".", "setter", "=", "setter", "\n", "self", ".", "lmbd", "=", "bn_lambda", "\n", "\n", "self", ".", "step", "(", "last_epoch", "+", "1", ")", "\n", "self", ".", "last_epoch", "=", "last_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.BNMomentumScheduler.step": [[294, 300], ["pytorch_utils.BNMomentumScheduler.model.apply", "pytorch_utils.BNMomentumScheduler.setter", "pytorch_utils.BNMomentumScheduler.lmbd"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "epoch", "=", "None", ")", ":", "\n", "        ", "if", "epoch", "is", "None", ":", "\n", "            ", "epoch", "=", "self", ".", "last_epoch", "+", "1", "\n", "\n", "", "self", ".", "last_epoch", "=", "epoch", "\n", "self", ".", "model", ".", "apply", "(", "self", ".", "setter", "(", "self", ".", "lmbd", "(", "epoch", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.thu17cyz_3DIoUMatch.pointnet2.pytorch_utils.set_bn_momentum_default": [[265, 272], ["isinstance"], "function", ["None"], ["", "", "", "", "def", "set_bn_momentum_default", "(", "bn_momentum", ")", ":", "\n", "\n", "    ", "def", "fn", "(", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm1d", ",", "nn", ".", "BatchNorm2d", ",", "nn", ".", "BatchNorm3d", ")", ")", ":", "\n", "            ", "m", ".", "momentum", "=", "bn_momentum", "\n", "\n", "", "", "return", "fn", "\n", "\n"]]}