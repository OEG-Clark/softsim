{"home.repos.pwc.inspect_result.Aunsiels_CSK.None.run_for_subject.run_for_subject": [[11, 141], ["rq.get_current_job", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory", "quasimodo.data_structures.inputs.Inputs", "pattern_submodule.process.add_subjects", "quasimodo.data_structures.module_reference_interface.ModuleReferenceInterface", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory.get_submodule", "factory.get_submodule.process", "result.append", "rq.get_current_job.save_meta", "pattern_submodule.process.add_generated_facts", "result.append", "result.append", "result.append", "time.time", "dict", "[].append", "rq.get_current_job.save_meta", "dict", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory.get_submodule", "time.time", "factory.get_submodule.process", "submodule.process.get_generated_facts", "dict", "factory.get_submodule.get_name", "[].append", "rq.get_current_job.save_meta", "dict", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory.get_submodule", "dict", "time.time", "factory.get_submodule.get_name", "submodule.process.get_generated_facts", "[].append", "rq.get_current_job.save_meta", "factory.get_submodule.process", "dict", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory.get_submodule", "time.time", "factory.get_submodule.process", "dict", "factory.get_submodule.get_name", "[].append", "rq.get_current_job.save_meta", "dict", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory.get_submodule", "factory.get_submodule.process", "x.to_dict", "time.time", "quasimodo.data_structures.subject.Subject", "x.to_dict", "time.time", "pattern_submodule.process.add_generated_facts", "factory.get_submodule.process", "time.time", "x.to_dict", "time.time", "submodule.process.get_generated_facts", "subject.lower", "submodule.process.get_generated_facts", "step_info[].append", "submodule.process.get_generated_facts", "len", "generated_fact.to_dict", "submodule.process.get_generated_facts", "submodule.process.get_generated_facts", "x.to_dict", "submodule.process.get_generated_facts"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_factory_interface.SubmoduleFactoryInterface.get_submodule", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_factory_interface.SubmoduleFactoryInterface.get_submodule", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_factory_interface.SubmoduleFactoryInterface.get_submodule", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_factory_interface.SubmoduleFactoryInterface.get_submodule", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_factory_interface.SubmoduleFactoryInterface.get_submodule", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["def", "run_for_subject", "(", "subject", ")", ":", "\n", "    ", "job", "=", "get_current_job", "(", ")", "\n", "\n", "factory", "=", "DefaultSubmoduleFactory", "(", ")", "\n", "\n", "submodule_generation_names", "=", "[", "\n", "\"google-autocomplete\"", ",", "\n", "\"bing-autocomplete\"", ",", "\n", "\"yahoo-questions\"", ",", "\n", "\"answerscom-questions\"", ",", "\n", "\"quora-questions\"", ",", "\n", "\"reddit-questions\"", ",", "\n", "\"fact-combinor\"", ",", "\n", "]", "\n", "\n", "submodule_normalization_names", "=", "[", "\n", "\"lower-case\"", ",", "\n", "\"tbc-cleaner\"", ",", "\n", "\"only-subject\"", ",", "\n", "\"filter-object\"", ",", "\n", "\"no-personal\"", ",", "\n", "\"singular-subject\"", ",", "\n", "\"cleaning-predicate\"", ",", "\n", "\"basic-modality\"", ",", "\n", "\"present-continuous\"", ",", "\n", "\"are-transformation\"", ",", "\n", "\"can-transformation\"", ",", "\n", "\"be-normalization\"", ",", "\n", "\"identical-subj-obj\"", ",", "\n", "\"present-conjugate\"", "\n", "]", "\n", "\n", "submodule_normalization_global_names", "=", "[", "\n", "\"similar-object-remover\"", ",", "\n", "\"fact-combinor\"", "\n", "]", "\n", "\n", "submodule_validation_names", "=", "[", "\n", "\"google-book\"", ",", "\n", "\"flickr-clusters\"", ",", "\n", "\"imagetag\"", ",", "\n", "\"wikipedia-cooccurrence\"", ",", "\n", "\"simple-wikipedia-cooccurrence\"", ",", "\n", "\"conceptual-captions\"", ",", "\n", "\"what-questions\"", "\n", "]", "\n", "\n", "empty_input", "=", "Inputs", "(", ")", "\n", "empty_input", "=", "empty_input", ".", "add_subjects", "(", "{", "Subject", "(", "subject", ".", "lower", "(", ")", ")", "}", ")", "\n", "\n", "module_reference", "=", "ModuleReferenceInterface", "(", "\"\"", ")", "\n", "\n", "pattern_submodule", "=", "factory", ".", "get_submodule", "(", "\"manual-patterns-google\"", ",", "module_reference", ")", "\n", "empty_input", "=", "pattern_submodule", ".", "process", "(", "empty_input", ")", "\n", "\n", "result", "=", "[", "]", "\n", "\n", "result", ".", "append", "(", "dict", "(", ")", ")", "\n", "result", "[", "-", "1", "]", "[", "\"step name\"", "]", "=", "\"Assertion Generation\"", "\n", "result", "[", "-", "1", "]", "[", "\"steps\"", "]", "=", "[", "]", "\n", "job", ".", "meta", "=", "result", "\n", "job", ".", "save_meta", "(", ")", "\n", "generated_facts", "=", "[", "]", "\n", "for", "submodule_name", "in", "submodule_generation_names", ":", "\n", "        ", "submodule", "=", "factory", ".", "get_submodule", "(", "submodule_name", ",", "module_reference", ")", "\n", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "input_temp", "=", "submodule", ".", "process", "(", "empty_input", ")", "\n", "generated_facts", "+=", "input_temp", ".", "get_generated_facts", "(", ")", "\n", "step_info", "=", "dict", "(", ")", "\n", "step_info", "[", "\"name\"", "]", "=", "submodule", ".", "get_name", "(", ")", "\n", "step_info", "[", "\"facts\"", "]", "=", "[", "x", ".", "to_dict", "(", ")", "for", "x", "in", "input_temp", ".", "get_generated_facts", "(", ")", "]", "\n", "step_info", "[", "\"time\"", "]", "=", "time", ".", "time", "(", ")", "-", "begin_time", "\n", "result", "[", "-", "1", "]", "[", "\"steps\"", "]", ".", "append", "(", "step_info", ")", "\n", "job", ".", "meta", "=", "result", "\n", "job", ".", "save_meta", "(", ")", "\n", "", "new_input", "=", "empty_input", ".", "add_generated_facts", "(", "generated_facts", ")", "\n", "\n", "result", ".", "append", "(", "dict", "(", ")", ")", "\n", "result", "[", "-", "1", "]", "[", "\"step name\"", "]", "=", "\"Assertion Normalization\"", "\n", "result", "[", "-", "1", "]", "[", "\"steps\"", "]", "=", "[", "]", "\n", "for", "submodule_name", "in", "submodule_normalization_names", ":", "\n", "        ", "submodule", "=", "factory", ".", "get_submodule", "(", "submodule_name", ",", "module_reference", ")", "\n", "step_info", "=", "dict", "(", ")", "\n", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "step_info", "[", "\"name\"", "]", "=", "submodule", ".", "get_name", "(", ")", "\n", "step_info", "[", "\"modifications\"", "]", "=", "[", "]", "\n", "for", "generated_fact", "in", "new_input", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "input_temp", "=", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "input_temp", "=", "submodule", ".", "process", "(", "input_temp", ")", "\n", "if", "len", "(", "input_temp", ".", "get_generated_facts", "(", ")", ")", "!=", "1", "or", "input_temp", ".", "get_generated_facts", "(", ")", "[", "0", "]", "!=", "generated_fact", ":", "\n", "                ", "modification", "=", "{", "\n", "\"from\"", ":", "generated_fact", ".", "to_dict", "(", ")", ",", "\n", "\"to\"", ":", "[", "x", ".", "to_dict", "(", ")", "for", "x", "in", "input_temp", ".", "get_generated_facts", "(", ")", "]", "\n", "}", "\n", "step_info", "[", "\"modifications\"", "]", ".", "append", "(", "modification", ")", "\n", "", "", "step_info", "[", "\"time\"", "]", "=", "time", ".", "time", "(", ")", "-", "begin_time", "\n", "result", "[", "-", "1", "]", "[", "\"steps\"", "]", ".", "append", "(", "step_info", ")", "\n", "job", ".", "meta", "=", "result", "\n", "job", ".", "save_meta", "(", ")", "\n", "new_input", "=", "submodule", ".", "process", "(", "new_input", ")", "\n", "\n", "", "result", ".", "append", "(", "dict", "(", ")", ")", "\n", "result", "[", "-", "1", "]", "[", "\"step name\"", "]", "=", "\"Assertion Normalization Global\"", "\n", "result", "[", "-", "1", "]", "[", "\"steps\"", "]", "=", "[", "]", "\n", "for", "submodule_name", "in", "submodule_normalization_global_names", ":", "\n", "        ", "submodule", "=", "factory", ".", "get_submodule", "(", "submodule_name", ",", "module_reference", ")", "\n", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "new_input", "=", "submodule", ".", "process", "(", "new_input", ")", "\n", "step_info", "=", "dict", "(", ")", "\n", "step_info", "[", "\"name\"", "]", "=", "submodule", ".", "get_name", "(", ")", "\n", "step_info", "[", "\"facts\"", "]", "=", "[", "x", ".", "to_dict", "(", ")", "for", "x", "in", "new_input", ".", "get_generated_facts", "(", ")", "]", "\n", "step_info", "[", "\"time\"", "]", "=", "time", ".", "time", "(", ")", "-", "begin_time", "\n", "result", "[", "-", "1", "]", "[", "\"steps\"", "]", ".", "append", "(", "step_info", ")", "\n", "job", ".", "meta", "=", "result", "\n", "job", ".", "save_meta", "(", ")", "\n", "\n", "", "result", ".", "append", "(", "dict", "(", ")", ")", "\n", "result", "[", "-", "1", "]", "[", "\"step name\"", "]", "=", "\"Assertion Validation\"", "\n", "result", "[", "-", "1", "]", "[", "\"steps\"", "]", "=", "[", "]", "\n", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "for", "submodule_name", "in", "submodule_validation_names", ":", "\n", "        ", "submodule", "=", "factory", ".", "get_submodule", "(", "submodule_name", ",", "module_reference", ")", "\n", "new_input", "=", "submodule", ".", "process", "(", "new_input", ")", "\n", "", "step_info", "=", "dict", "(", ")", "\n", "step_info", "[", "\"name\"", "]", "=", "\"All validations\"", "\n", "step_info", "[", "\"facts\"", "]", "=", "[", "x", ".", "to_dict", "(", ")", "for", "x", "in", "new_input", ".", "get_generated_facts", "(", ")", "]", "\n", "step_info", "[", "\"time\"", "]", "=", "time", ".", "time", "(", ")", "-", "begin_time", "\n", "result", "[", "-", "1", "]", "[", "\"steps\"", "]", ".", "append", "(", "step_info", ")", "\n", "job", ".", "meta", "=", "result", "\n", "job", ".", "save_meta", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.perplexity.compute_ppl.get_perplexity": [[13, 30], ["tokenizer", "range", "torch.exp", "tokenizer.input_ids.size", "max", "tokenizer.input_ids[].to", "encodings.input_ids[].to.clone", "lls.append", "torch.no_grad", "model", "torch.stack().sum", "torch.stack"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.tokenizer"], ["def", "get_perplexity", "(", "sentence", ")", ":", "\n", "\t", "encodings", "=", "tokenizer", "(", "sentence", ",", "return_tensors", "=", "'pt'", ")", "\n", "max_length", "=", "model", ".", "config", ".", "n_positions", "\n", "stride", "=", "512", "\n", "lls", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "encodings", ".", "input_ids", ".", "size", "(", "1", ")", ",", "stride", ")", ":", "\n", "\t\t", "begin_loc", "=", "max", "(", "i", "+", "stride", "-", "max_length", ",", "0", ")", "\n", "end_loc", "=", "i", "+", "stride", "\n", "input_ids", "=", "encodings", ".", "input_ids", "[", ":", ",", "begin_loc", ":", "end_loc", "]", ".", "to", "(", "device", ")", "\n", "target_ids", "=", "input_ids", ".", "clone", "(", ")", "\n", "target_ids", "[", ":", ",", ":", "-", "stride", "]", "=", "-", "100", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "outputs", "=", "model", "(", "input_ids", ",", "labels", "=", "target_ids", ")", "\n", "log_likelihood", "=", "outputs", "[", "0", "]", "# * stride", "\n", "", "lls", ".", "append", "(", "log_likelihood", ")", "\n", "", "ppl", "=", "torch", ".", "exp", "(", "torch", ".", "stack", "(", "lls", ")", ".", "sum", "(", ")", "/", "(", "i", "+", "1", ")", ")", "\n", "return", "ppl", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.sentence_batcher.SentenceBatcher.__init__": [[6, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sentences", ",", "max_size", ",", "size_function", ")", ":", "\n", "        ", "self", ".", "_sentences", "=", "sentences", "\n", "self", ".", "_max_size", "=", "max_size", "\n", "self", ".", "_size_function", "=", "size_function", "\n", "self", ".", "_current_index_iteration", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.sentence_batcher.SentenceBatcher.__iter__": [[12, 15], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_current_index_iteration", "=", "0", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.sentence_batcher.SentenceBatcher.__next__": [[16, 29], ["len", "sentence_batcher.SentenceBatcher._size_function", "sentence_batcher.TooLongBatchException", "len", "str"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", "->", "List", "[", "Any", "]", ":", "\n", "        ", "if", "self", ".", "_current_index_iteration", ">=", "len", "(", "self", ".", "_sentences", ")", ":", "\n", "            ", "raise", "StopIteration", "\n", "", "total_size", "=", "0", "\n", "initial_index", "=", "self", ".", "_current_index_iteration", "\n", "while", "total_size", "<", "self", ".", "_max_size", "and", "self", ".", "_current_index_iteration", "<", "len", "(", "self", ".", "_sentences", ")", ":", "\n", "            ", "total_size", "+=", "self", ".", "_size_function", "(", "self", ".", "_sentences", "[", "self", ".", "_current_index_iteration", "]", ")", "\n", "self", ".", "_current_index_iteration", "+=", "1", "\n", "", "if", "total_size", ">=", "self", ".", "_max_size", ":", "\n", "            ", "self", ".", "_current_index_iteration", "-=", "1", "\n", "", "if", "self", ".", "_current_index_iteration", "==", "initial_index", ":", "\n", "            ", "raise", "TooLongBatchException", "(", "\"The \"", "+", "str", "(", "initial_index", ")", "+", "\" index is too long.\"", ")", "\n", "", "return", "self", ".", "_sentences", "[", "initial_index", ":", "self", ".", "_current_index_iteration", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.sentence_batcher.TooLongBatchException.__init__": [[33, 35], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "message", ")", ":", "\n", "        ", "self", ".", "message", "=", "message", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.__init__": [[3, 7], ["dict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "nexts", "=", "dict", "(", ")", "\n", "self", ".", "is_terminal", "=", "False", "\n", "self", ".", "value", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add": [[8, 10], ["parsing_node.ParsingNode.add_with_final_value"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_with_final_value"], ["", "def", "add", "(", "self", ",", "word", ")", ":", "\n", "        ", "self", ".", "add_with_final_value", "(", "word", ",", "word", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_with_final_value": [[11, 17], ["len", "parsing_node.ParsingNode.create_terminal_node", "parsing_node.ParsingNode._create_transition_to_new_node_if_required", "parsing_node.ParsingNode._add_to_next_node"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.create_terminal_node", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode._create_transition_to_new_node_if_required", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode._add_to_next_node"], ["", "def", "add_with_final_value", "(", "self", ",", "final_value", ",", "remaining", ")", ":", "\n", "        ", "if", "len", "(", "remaining", ")", "==", "0", ":", "\n", "            ", "self", ".", "create_terminal_node", "(", "final_value", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_create_transition_to_new_node_if_required", "(", "remaining", ")", "\n", "self", ".", "_add_to_next_node", "(", "remaining", ",", "final_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode._add_to_next_node": [[18, 20], ["parsing_node.ParsingNode.nexts[].add_with_final_value"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_with_final_value"], ["", "", "def", "_add_to_next_node", "(", "self", ",", "remaining", ",", "word", ")", ":", "\n", "        ", "self", ".", "nexts", "[", "remaining", "[", "0", "]", "]", ".", "add_with_final_value", "(", "word", ",", "remaining", "[", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode._create_transition_to_new_node_if_required": [[21, 24], ["parsing_node.ParsingNode._create_transition_to_new_node"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode._create_transition_to_new_node"], ["", "def", "_create_transition_to_new_node_if_required", "(", "self", ",", "remaining", ")", ":", "\n", "        ", "if", "remaining", "[", "0", "]", "not", "in", "self", ".", "nexts", ":", "\n", "            ", "self", ".", "_create_transition_to_new_node", "(", "remaining", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode._create_transition_to_new_node": [[25, 28], ["parsing_node.ParsingNode"], "methods", ["None"], ["", "", "def", "_create_transition_to_new_node", "(", "self", ",", "symbol", ")", ":", "\n", "        ", "new_node", "=", "ParsingNode", "(", ")", "\n", "self", ".", "nexts", "[", "symbol", "]", "=", "new_node", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.create_terminal_node": [[29, 32], ["None"], "methods", ["None"], ["", "def", "create_terminal_node", "(", "self", ",", "word", ")", ":", "\n", "        ", "self", ".", "is_terminal", "=", "True", "\n", "self", ".", "value", "=", "word", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.get_next_node": [[33, 35], ["parsing_node.ParsingNode.nexts.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_next_node", "(", "self", ",", "character", ")", ":", "\n", "        ", "return", "self", ".", "nexts", ".", "get", "(", "character", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_sentence": [[36, 40], ["sentence.split", "parsing_node.ParsingNode.add_with_return_begin"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_with_return_begin"], ["", "def", "add_sentence", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "sentence_split", "=", "sentence", ".", "split", "(", "\" \"", ")", "\n", "for", "word", "in", "sentence_split", ":", "\n", "            ", "self", ".", "add_with_return_begin", "(", "word", ",", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_with_return_begin": [[41, 49], ["parsing_node.ParsingNode.initialize_or_increase_value", "len", "parsing_node.ParsingNode._create_transition_to_new_node_if_required", "parsing_node.ParsingNode.add_to_next_node_with_return_begin"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.initialize_or_increase_value", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode._create_transition_to_new_node_if_required", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_to_next_node_with_return_begin"], ["", "", "def", "add_with_return_begin", "(", "self", ",", "remaining", ",", "final_node", ")", ":", "\n", "        ", "self", ".", "initialize_or_increase_value", "(", ")", "\n", "if", "len", "(", "remaining", ")", "==", "0", ":", "\n", "            ", "if", "\" \"", "not", "in", "self", ".", "nexts", ":", "\n", "                ", "self", ".", "nexts", "[", "\" \"", "]", "=", "final_node", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "_create_transition_to_new_node_if_required", "(", "remaining", ")", "\n", "self", ".", "add_to_next_node_with_return_begin", "(", "remaining", ",", "final_node", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.initialize_or_increase_value": [[50, 55], ["None"], "methods", ["None"], ["", "", "def", "initialize_or_increase_value", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "value", "is", "None", ":", "\n", "            ", "self", ".", "value", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "value", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_to_next_node_with_return_begin": [[56, 58], ["parsing_node.ParsingNode.nexts[].add_with_return_begin"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_with_return_begin"], ["", "", "def", "add_to_next_node_with_return_begin", "(", "self", ",", "remaining", ",", "final_node", ")", ":", "\n", "        ", "self", ".", "nexts", "[", "remaining", "[", "0", "]", "]", ".", "add_with_return_begin", "(", "remaining", "[", "1", ":", "]", ",", "final_node", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.read_word": [[59, 65], ["len", "parsing_node.ParsingNode.nexts[].read_word"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.read_word"], ["", "def", "read_word", "(", "self", ",", "word", ")", ":", "\n", "        ", "if", "len", "(", "word", ")", "==", "0", ":", "\n", "            ", "return", "self", "\n", "", "if", "word", "[", "0", "]", "in", "self", ".", "nexts", ":", "\n", "            ", "return", "self", ".", "nexts", "[", "word", "[", "0", "]", "]", ".", "read_word", "(", "word", "[", "1", ":", "]", ")", "\n", "", "return", "None", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_submodule_factory.DefaultSubmoduleFactory.__init__": [[70, 132], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_submodules", "=", "{", "\n", "\"google-autocomplete\"", ":", "GoogleAutocompleteSubmodule", ",", "\n", "\"animal-seeds\"", ":", "AnimalSubmodule", ",", "\n", "\"wikidata-seeds\"", ":", "WikidataSubmodule", ",", "\n", "\"manual-patterns-google\"", ":", "ManualPatternsGoogleSubmodule", ",", "\n", "\"bing-autocomplete\"", ":", "BingAutocompleteSubmodule", ",", "\n", "\"only-subject\"", ":", "OnlySubjectSubmodule", ",", "\n", "\"no-personal\"", ":", "NoPersonalSubmodule", ",", "\n", "\"linear-combination\"", ":", "LinearCombinationSubmodule", ",", "\n", "\"linear-combination-weighted\"", ":", "LinearCombinationWeightedSubmodule", ",", "\n", "\"singular-subject\"", ":", "ToSingularSubjectSubmodule", ",", "\n", "\"present-continuous\"", ":", "PresentContinuousSubmodule", ",", "\n", "\"basic-modality\"", ":", "BasicModalitySubmodule", ",", "\n", "\"cleaning-predicate\"", ":", "CleaningPredicateSubmodule", ",", "\n", "\"wikipedia-cooccurrence\"", ":", "WikipediaCooccurrenceSubmodule", ",", "\n", "\"simple-wikipedia-cooccurrence\"", ":", "SimpleWikipediaCooccurrenceSubmodule", ",", "\n", "\"antonym-checking\"", ":", "AntonymCheckingSubmodule", ",", "\n", "\"are-transformation\"", ":", "AreTransformationSubmodule", ",", "\n", "\"filter-object\"", ":", "FilterObjectSubmodule", ",", "\n", "\"can-transformation\"", ":", "CanTransformationSubmodule", ",", "\n", "\"incomplete-modality\"", ":", "IncompleteModalitySubmodule", ",", "\n", "\"occupations-seeds\"", ":", "OccupationsSubmodule", ",", "\n", "\"conceptnet-subjects\"", ":", "ConceptnetSubjectsSubmodule", ",", "\n", "\"be-normalization\"", ":", "BeNormalizationSubmodule", ",", "\n", "\"reddit-questions\"", ":", "RedditQuestionsSubmodule", ",", "\n", "\"quora-questions\"", ":", "QuoraQuestionsSubmodule", ",", "\n", "\"conceptnet-seeds\"", ":", "ConceptNetSeedsSubmodule", ",", "\n", "\"answerscom-questions\"", ":", "AnswerscomQuestionsSubmodule", ",", "\n", "\"imagetag\"", ":", "ImagetagSubmodule", ",", "\n", "\"flickr-clusters\"", ":", "FlickrClustersSubmodule", ",", "\n", "\"google-book\"", ":", "GoogleBookSubmodule", ",", "\n", "\"web-count\"", ":", "WebCountSubmodule", ",", "\n", "\"web-regression\"", ":", "WebRegressionSubmodule", ",", "\n", "\"youtube-count\"", ":", "YoutubeCountSubmodule", ",", "\n", "\"youtube-regression\"", ":", "YoutubeRegressionSubmodule", ",", "\n", "\"flickr-count\"", ":", "FlickrCountSubmodule", ",", "\n", "\"flickr-regression\"", ":", "FlickrRegressionSubmodule", ",", "\n", "\"pinterest-count\"", ":", "PinterestCountSubmodule", ",", "\n", "\"pinterest-regression\"", ":", "PinterestRegressionSubmodule", ",", "\n", "\"istockphoto-count\"", ":", "IstockphotoCountSubmodule", ",", "\n", "\"istockphoto-regression\"", ":", "IstockphotoRegressionSubmodule", ",", "\n", "\"subjects-wordnet\"", ":", "SubjectsWordnetSubmodule", ",", "\n", "\"yahoo-questions\"", ":", "YahooQuestionsSubmodule", ",", "\n", "\"subject-removal\"", ":", "SubjectRemovalSubmodule", ",", "\n", "\"lower-case\"", ":", "ToLowerCaseSubmodule", ",", "\n", "\"fact-combinor\"", ":", "FactCombinor", ",", "\n", "\"identical-subj-obj\"", ":", "IdenticalSubjectObjectSubmodule", ",", "\n", "\"conceptual-captions\"", ":", "ConceptualCaptionsComparatorSubmodule", ",", "\n", "\"tbc-cleaner\"", ":", "TBCCleaner", ",", "\n", "\"tsv-output\"", ":", "TSVOutputSubmodule", ",", "\n", "\"present-conjugate\"", ":", "PresentConjugateNormalization", ",", "\n", "\"statistics\"", ":", "StatisticsSubmodule", ",", "\n", "\"what-questions\"", ":", "WhatQuestionsComparatorSubmodule", ",", "\n", "\"forgotten-subjects\"", ":", "ForgottenSubjectsSubmodule", ",", "\n", "\"saliency-typicality\"", ":", "SaliencyAndTypicalityComputationSubmodule", ",", "\n", "\"similar-object-remover\"", ":", "SimilarObjectRemover", ",", "\n", "\"circle-saliency\"", ":", "CircleSaliency", ",", "\n", "\"filter-language-questions\"", ":", "FilterLanguageQuestions", ",", "\n", "\"clean-subject\"", ":", "CleanSubject", ",", "\n", "\"special-subjects\"", ":", "SpecialSubjects", ",", "\n", "\"perplexity\"", ":", "PerplexitySubmodule", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_submodule_factory.DefaultSubmoduleFactory.get_submodule": [[134, 139], ["None"], "methods", ["None"], ["", "def", "get_submodule", "(", "self", ",", "submodule_name", ",", "module_reference", ")", ":", "\n", "        ", "if", "submodule_name", "in", "self", ".", "_submodules", ":", "\n", "            ", "return", "self", ".", "_submodules", "[", "submodule_name", "]", "(", "module_reference", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.module_factory_interface.ModuleFactoryInterface.get_module": [[6, 15], ["None"], "methods", ["None"], ["def", "get_module", "(", "self", ",", "module_name", ")", ":", "\n", "        ", "\"\"\"get_module\n        Returns a module given a name\n        :param module_name: The name of the module\n        :type module_name: str\n        :return: A module\n        :rtype: ModuleInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.__init__": [[12, 20], ["dict", "dict", "dict", "dict", "dict", "dict", "set"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "found", "=", "dict", "(", ")", "\n", "self", ".", "sentences", "=", "dict", "(", ")", "\n", "self", ".", "modalities", "=", "dict", "(", ")", "\n", "self", ".", "patterns", "=", "dict", "(", ")", "\n", "self", ".", "modules", "=", "dict", "(", ")", "\n", "self", ".", "submodules", "=", "dict", "(", ")", "\n", "self", ".", "all_submodules", "=", "set", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.initialize_for_generated_fact": [[21, 30], ["parts_of_facts.get_fact_without_modality", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "dict", "quasimodo.data_structures.multiple_pattern.MultiplePattern", "quasimodo.data_structures.multiple_module_reference.MultipleModuleReference", "quasimodo.data_structures.multiple_submodule_reference.MultipleSubmoduleReference"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.get_fact_without_modality"], ["", "def", "initialize_for_generated_fact", "(", "self", ",", "generated_fact", ")", ":", "\n", "        ", "fact_without_modality", "=", "get_fact_without_modality", "(", "generated_fact", ")", "\n", "if", "fact_without_modality", "not", "in", "self", ".", "found", ":", "\n", "            ", "self", ".", "found", "[", "fact_without_modality", "]", "=", "None", "\n", "self", ".", "sentences", "[", "fact_without_modality", "]", "=", "MultipleSourceOccurrence", "(", ")", "\n", "self", ".", "modalities", "[", "fact_without_modality", "]", "=", "dict", "(", ")", "\n", "self", ".", "patterns", "[", "fact_without_modality", "]", "=", "MultiplePattern", "(", ")", "\n", "self", ".", "modules", "[", "fact_without_modality", "]", "=", "MultipleModuleReference", "(", ")", "\n", "self", ".", "submodules", "[", "fact_without_modality", "]", "=", "MultipleSubmoduleReference", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_score": [[31, 37], ["parts_of_facts.get_fact_without_modality", "parts_of_facts.PartsOfFacts.found[].get_score().add", "generated_fact.get_score", "parts_of_facts.PartsOfFacts.found[].get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.get_fact_without_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "", "def", "add_score", "(", "self", ",", "generated_fact", ")", ":", "\n", "        ", "fact_without_modality", "=", "get_fact_without_modality", "(", "generated_fact", ")", "\n", "if", "self", ".", "found", "[", "fact_without_modality", "]", "is", "None", ":", "\n", "            ", "self", ".", "found", "[", "fact_without_modality", "]", "=", "generated_fact", "\n", "", "else", ":", "\n", "            ", "self", ".", "found", "[", "fact_without_modality", "]", ".", "get_score", "(", ")", ".", "add", "(", "generated_fact", ".", "get_score", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_sentence_source": [[38, 41], ["parts_of_facts.get_fact_without_modality", "generated_fact.get_sentence_source"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.get_fact_without_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source"], ["", "", "def", "add_sentence_source", "(", "self", ",", "generated_fact", ")", ":", "\n", "        ", "fact_without_modality", "=", "get_fact_without_modality", "(", "generated_fact", ")", "\n", "self", ".", "sentences", "[", "fact_without_modality", "]", "+=", "generated_fact", ".", "get_sentence_source", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_modality": [[42, 49], ["generated_fact.get_fact", "parts_of_facts.get_fact_without_modality", "len", "quasimodo.data_structures.modality.read_sentence", "parts_of_facts.get_modality", "parts_of_facts.get_modality", "parts_of_facts.PartsOfFacts.modalities[].get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_fact", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.get_fact_without_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.read_sentence", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "add_modality", "(", "self", ",", "generated_fact", ")", ":", "\n", "        ", "fact", "=", "generated_fact", ".", "get_fact", "(", ")", "\n", "fact_without_modality", "=", "get_fact_without_modality", "(", "generated_fact", ")", "\n", "if", "len", "(", "get_modality", "(", "fact", ")", ")", ">", "0", ":", "\n", "            ", "for", "modality_temp", ",", "score", "in", "read_sentence", "(", "get_modality", "(", "fact", ")", ")", ":", "\n", "                ", "self", ".", "modalities", "[", "fact_without_modality", "]", "[", "modality_temp", "]", "=", "self", ".", "modalities", "[", "fact_without_modality", "]", ".", "get", "(", "modality_temp", ",", "0", ")", "+", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_pattern": [[50, 53], ["parts_of_facts.get_fact_without_modality", "parts_of_facts.PartsOfFacts.patterns[].add_pattern", "generated_fact.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.get_fact_without_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "", "", "def", "add_pattern", "(", "self", ",", "generated_fact", ")", ":", "\n", "        ", "fact_without_modality", "=", "get_fact_without_modality", "(", "generated_fact", ")", "\n", "self", ".", "patterns", "[", "fact_without_modality", "]", ".", "add_pattern", "(", "generated_fact", ".", "get_pattern", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_modules": [[54, 58], ["parts_of_facts.get_fact_without_modality", "generated_fact.get_score", "parts_of_facts.PartsOfFacts.modules[].add_reference"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.get_fact_without_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference"], ["", "def", "add_modules", "(", "self", ",", "generated_fact", ")", ":", "\n", "        ", "fact_without_modality", "=", "get_fact_without_modality", "(", "generated_fact", ")", "\n", "for", "_", ",", "module_source", ",", "_", "in", "generated_fact", ".", "get_score", "(", ")", ".", "scores", ":", "\n", "            ", "self", ".", "modules", "[", "fact_without_modality", "]", ".", "add_reference", "(", "module_source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_submodules": [[59, 64], ["parts_of_facts.get_fact_without_modality", "generated_fact.get_score", "parts_of_facts.PartsOfFacts.submodules[].add_reference", "parts_of_facts.PartsOfFacts.all_submodules.add"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.get_fact_without_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["", "", "def", "add_submodules", "(", "self", ",", "generated_fact", ")", ":", "\n", "        ", "fact_without_modality", "=", "get_fact_without_modality", "(", "generated_fact", ")", "\n", "for", "score", ",", "_", ",", "submodules_source", "in", "generated_fact", ".", "get_score", "(", ")", ".", "scores", ":", "\n", "            ", "self", ".", "submodules", "[", "fact_without_modality", "]", ".", "add_reference", "(", "submodules_source", ")", "\n", "self", ".", "all_submodules", ".", "add", "(", "submodules_source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.update": [[65, 73], ["parts_of_facts.PartsOfFacts.initialize_for_generated_fact", "parts_of_facts.PartsOfFacts.add_score", "parts_of_facts.PartsOfFacts.add_sentence_source", "parts_of_facts.PartsOfFacts.add_modality", "parts_of_facts.PartsOfFacts.add_pattern", "parts_of_facts.PartsOfFacts.add_modules", "parts_of_facts.PartsOfFacts.add_submodules"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.initialize_for_generated_fact", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_modules", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.add_submodules"], ["", "", "def", "update", "(", "self", ",", "generated_fact", ")", ":", "\n", "        ", "self", ".", "initialize_for_generated_fact", "(", "generated_fact", ")", "\n", "self", ".", "add_score", "(", "generated_fact", ")", "\n", "self", ".", "add_sentence_source", "(", "generated_fact", ")", "\n", "self", ".", "add_modality", "(", "generated_fact", ")", "\n", "self", ".", "add_pattern", "(", "generated_fact", ")", "\n", "self", ".", "add_modules", "(", "generated_fact", ")", "\n", "self", ".", "add_submodules", "(", "generated_fact", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.from_generated_facts": [[74, 81], ["PartsOfFacts.PartsOfFacts", "sorted", "PartsOfFacts.PartsOfFacts.update"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.update"], ["", "@", "staticmethod", "\n", "def", "from_generated_facts", "(", "generated_facts", ")", ":", "\n", "        ", "parts_of_facts", "=", "PartsOfFacts", "(", ")", "\n", "for", "generated_fact", "in", "sorted", "(", "generated_facts", ",", "\n", "key", "=", "predicate_to_number", ")", ":", "\n", "            ", "parts_of_facts", ".", "update", "(", "generated_fact", ")", "\n", "", "return", "parts_of_facts", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.merge_into_generated_facts": [[82, 91], ["quasimodo.data_structures.modality.Modality.from_modalities_and_scores", "new_gfs.append", "parts_of_facts.PartsOfFacts.modalities[].items", "generated_fact.change_sentence().change_modality().change_pattern", "generated_fact.change_sentence().change_modality", "generated_fact.change_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.from_modalities_and_scores", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_sentence"], ["", "def", "merge_into_generated_facts", "(", "self", ")", ":", "\n", "        ", "new_gfs", "=", "[", "]", "\n", "for", "fact_without_modality", "in", "self", ".", "found", ":", "\n", "            ", "generated_fact", "=", "self", ".", "found", "[", "fact_without_modality", "]", "\n", "new_modality", "=", "Modality", ".", "from_modalities_and_scores", "(", "self", ".", "modalities", "[", "fact_without_modality", "]", ".", "items", "(", ")", ")", "\n", "new_gfs", ".", "append", "(", "generated_fact", ".", "change_sentence", "(", "self", ".", "sentences", "[", "fact_without_modality", "]", ")", "\n", ".", "change_modality", "(", "new_modality", ")", "\n", ".", "change_pattern", "(", "self", ".", "patterns", "[", "fact_without_modality", "]", ")", ")", "\n", "", "return", "new_gfs", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_all_submodules": [[92, 94], ["None"], "methods", ["None"], ["", "def", "get_all_submodules", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "all_submodules", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_tbc_score": [[95, 106], ["None"], "methods", ["None"], ["", "def", "get_tbc_score", "(", "self", ",", "fact", ")", ":", "\n", "        ", "number_tbc", "=", "0", "\n", "total", "=", "0", "\n", "for", "modality_raw", "in", "self", ".", "modalities", "[", "fact", "]", ":", "\n", "            ", "total", "+=", "self", ".", "modalities", "[", "fact", "]", "[", "modality_raw", "]", "\n", "if", "\"TBC\"", "in", "modality_raw", ":", "\n", "                ", "number_tbc", "+=", "self", ".", "modalities", "[", "fact", "]", "[", "modality_raw", "]", "\n", "", "", "if", "total", ">", "0", ":", "\n", "            ", "if", "total", "==", "number_tbc", ":", "\n", "                ", "return", "1.0", "\n", "", "", "return", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_fact_row": [[107, 132], ["quasimodo.data_structures.modality.Modality.from_modalities_and_scores", "fact.is_negative", "result.append", "parts_of_facts.PartsOfFacts.get_all_submodules", "dict", "result.append", "result.append", "fact.get_subject().get", "fact.get_predicate().get", "fact.get_object().get", "parts_of_facts.PartsOfFacts.modalities[].items", "result.append", "result.append", "result.append", "result.append", "parts_of_facts.PartsOfFacts.patterns[].to_str", "parts_of_facts.PartsOfFacts.found[].get_score", "parts_of_facts.PartsOfFacts.sentences[].get_total_number_occurrences", "sum", "result.append", "result.append", "parts_of_facts.PartsOfFacts.modalities.get().values", "fact.get_subject", "fact.get_predicate", "fact.get_object", "parts_of_facts.PartsOfFacts.modalities.get", "dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.from_modalities_and_scores", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_all_submodules", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.get_total_number_occurrences", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_fact_row", "(", "self", ",", "fact", ")", ":", "\n", "        ", "result", "=", "[", "fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", ",", "fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ",", "fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "]", "\n", "modality", "=", "Modality", ".", "from_modalities_and_scores", "(", "self", ".", "modalities", "[", "fact", "]", ".", "items", "(", ")", ")", "\n", "if", "modality", ":", "\n", "            ", "result", ".", "append", "(", "modality", ")", "\n", "", "else", ":", "\n", "            ", "result", ".", "append", "(", "\" \"", ")", "\n", "", "if", "fact", ".", "is_negative", "(", ")", ":", "\n", "            ", "result", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "result", ".", "append", "(", "0", ")", "\n", "", "result", ".", "append", "(", "self", ".", "patterns", "[", "fact", "]", ".", "to_str", "(", ")", ")", "\n", "names", "=", "self", ".", "get_all_submodules", "(", ")", "\n", "scores_per_submodules", "=", "dict", "(", ")", "\n", "for", "score", ",", "_", ",", "name", "in", "self", ".", "found", "[", "fact", "]", ".", "get_score", "(", ")", ".", "scores", ":", "\n", "            ", "if", "name", "in", "names", ":", "\n", "                ", "scores_per_submodules", "[", "name", "]", "=", "score", "\n", "", "", "for", "name", "in", "names", ":", "\n", "            ", "if", "name", "in", "scores_per_submodules", ":", "\n", "                ", "result", ".", "append", "(", "scores_per_submodules", "[", "name", "]", ")", "\n", "", "else", ":", "\n", "                ", "result", ".", "append", "(", "\"\"", ")", "\n", "", "", "result", ".", "append", "(", "self", ".", "sentences", "[", "fact", "]", ".", "get_total_number_occurrences", "(", ")", ")", "\n", "result", ".", "append", "(", "sum", "(", "self", ".", "modalities", ".", "get", "(", "fact", ",", "dict", "(", ")", ")", ".", "values", "(", ")", ")", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_header": [[133, 140], ["parts_of_facts.PartsOfFacts.get_all_submodules", "temp.append", "temp.append", "temp.append", "submodule.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_all_submodules", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "get_header", "(", "self", ")", ":", "\n", "        ", "temp", "=", "[", "\"subject\"", ",", "\"predicate\"", ",", "\"object\"", ",", "\"modality\"", ",", "\"is negative\"", ",", "\"patterns\"", "]", "\n", "for", "submodule", "in", "self", ".", "get_all_submodules", "(", ")", ":", "\n", "            ", "temp", ".", "append", "(", "submodule", ".", "get_name", "(", ")", ")", "\n", "", "temp", ".", "append", "(", "\"number sentences\"", ")", "\n", "temp", ".", "append", "(", "\"number modalities\"", ")", "\n", "return", "temp", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_generated_fact_with_score_from_classifier": [[141, 155], ["quasimodo.data_structures.multiple_scores.MultipleScore", "parts_of_facts.PartsOfFacts.get_fact_row", "clf.predict", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "fact.get_subject", "fact.get_predicate", "fact.get_object", "quasimodo.data_structures.modality.Modality.from_modalities_and_scores", "fact.is_negative", "parts_of_facts.PartsOfFacts.modalities[].items"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_fact_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.from_modalities_and_scores", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "get_generated_fact_with_score_from_classifier", "(", "self", ",", "fact", ",", "clf", ")", ":", "\n", "        ", "multiple_score", "=", "MultipleScore", "(", ")", "\n", "row", "=", "self", ".", "get_fact_row", "(", "fact", ")", "\n", "score", "=", "clf", ".", "predict", "(", "fact", ",", "row", ")", "\n", "multiple_score", ".", "add_score", "(", "score", ",", "self", ".", "modules", "[", "fact", "]", ",", "self", ".", "submodules", "[", "fact", "]", ")", "\n", "return", "GeneratedFact", "(", "\n", "fact", ".", "get_subject", "(", ")", ",", "\n", "fact", ".", "get_predicate", "(", ")", ",", "\n", "fact", ".", "get_object", "(", ")", ",", "\n", "Modality", ".", "from_modalities_and_scores", "(", "self", ".", "modalities", "[", "fact", "]", ".", "items", "(", ")", ")", ",", "\n", "fact", ".", "is_negative", "(", ")", ",", "\n", "multiple_score", ",", "\n", "self", ".", "sentences", "[", "fact", "]", ",", "\n", "self", ".", "patterns", "[", "fact", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_all_facts": [[156, 158], ["parts_of_facts.PartsOfFacts.found.keys"], "methods", ["None"], ["", "def", "get_all_facts", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "found", ".", "keys", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.get_fact_without_modality": [[160, 162], ["generated_fact.get_fact().change_modality", "generated_fact.get_fact"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_fact"], ["", "", "def", "get_fact_without_modality", "(", "generated_fact", ")", ":", "\n", "    ", "return", "generated_fact", ".", "get_fact", "(", ")", ".", "change_modality", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.get_modality": [[164, 171], ["fact.get_modality", "modality.get.get"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_modality", "(", "fact", ")", ":", "\n", "    ", "modality", "=", "fact", ".", "get_modality", "(", ")", "\n", "if", "modality", "is", "not", "None", ":", "\n", "        ", "modality", "=", "modality", ".", "get", "(", ")", "\n", "", "else", ":", "\n", "        ", "modality", "=", "\"\"", "\n", "", "return", "modality", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.predicate_to_number": [[186, 202], ["str", "str.startswith", "str.split", "generated_fact.get_predicate", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["def", "predicate_to_number", "(", "generated_fact", ")", ":", "\n", "# Lowest score have the priority during merging", "\n", "# For example, if \"be in\" is before \"be\", then \"be, in school\" becomes", "\n", "# \"be in, school\"", "\n", "    ", "predicate", "=", "str", "(", "generated_fact", ".", "get_predicate", "(", ")", ")", "\n", "if", "predicate", "==", "\"has_property\"", ":", "\n", "        ", "return", "0", "\n", "", "if", "predicate", ".", "startswith", "(", "\"has_\"", ")", ":", "\n", "        ", "return", "-", "10000", "\n", "", "predicate_s", "=", "predicate", ".", "split", "(", "\" \"", ")", "\n", "# We do not want predicate that are too long", "\n", "# With 4, we can have predicate with a comparison like", "\n", "# be more interesting than", "\n", "if", "len", "(", "predicate_s", ")", ">", "4", "or", "predicate_s", "[", "-", "1", "]", "not", "in", "PREPOSITIONS", ":", "\n", "        ", "return", "len", "(", "predicate", ")", "\n", "", "return", "-", "len", "(", "predicate", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_workflow.DefaultWorkflow.__init__": [[11, 23], ["quasimodo.data_structures.workflow_interface.WorkflowInterface.__init__", "default_workflow.DefaultWorkflow._factory.get_module", "default_module_factory.DefaultModuleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_module_factory.DefaultModuleFactory.get_module"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"patterns\"", ",", "\n", "\"pattern-fusion\"", ",", "\n", "\"assertion-generation\"", ",", "\n", "\"archit\"", ",", "\n", "\"assertion-normalization\"", ",", "\n", "\"assertion-validation\"", ",", "\n", "\"assertion-fusion\"", ",", "\n", "\"output\"", "]", "\n", "super", "(", "DefaultWorkflow", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultModuleFactory", "(", ")", ")", "\n", "self", ".", "_seeds", "=", "self", ".", "_factory", ".", "get_module", "(", "\"all-seeds\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_workflow.DefaultWorkflow.generate_input": [[24, 27], ["default_workflow.DefaultWorkflow._seeds.process", "quasimodo.data_structures.inputs.Inputs"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process"], ["", "def", "generate_input", "(", "self", ")", ":", "\n", "# just give an empty input to the seed module", "\n", "        ", "return", "self", ".", "_seeds", ".", "process", "(", "Inputs", "(", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_module_factory.DefaultModuleFactory.get_module": [[20, 44], ["quasimodo.assertion_generation.assertion_generation_module.AssertionGenerationModule", "quasimodo.seeds.animal_seed_module.AnimalSeedModule", "quasimodo.patterns.pattern_module.PatternModule", "quasimodo.patterns.pattern_fusion_module.PatternFusionModule", "quasimodo.assertion_normalization.assertion_normalization_module.AssertionNormalizationModule", "quasimodo.assertion_validation.assertion_validation_module.AssertionValidationModule", "quasimodo.assertion_fusion.assertion_fusion_module.AssertionFusionModule", "quasimodo.seeds.occupations_seed_module.OccupationsSeedModule", "quasimodo.seeds.all_seeds_module.AllSeedsModule", "quasimodo.web_search.archit_module.ArchitModule", "quasimodo.assertion_output.output_module.OutputModule"], "methods", ["None"], ["def", "get_module", "(", "self", ",", "module_name", ")", ":", "\n", "        ", "if", "module_name", "==", "\"assertion-generation\"", ":", "\n", "            ", "return", "AssertionGenerationModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"animal-seeds\"", ":", "\n", "            ", "return", "AnimalSeedModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"patterns\"", ":", "\n", "            ", "return", "PatternModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"pattern-fusion\"", ":", "\n", "            ", "return", "PatternFusionModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"assertion-normalization\"", ":", "\n", "            ", "return", "AssertionNormalizationModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"assertion-validation\"", ":", "\n", "            ", "return", "AssertionValidationModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"assertion-fusion\"", ":", "\n", "            ", "return", "AssertionFusionModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"occupations-seeds\"", ":", "\n", "            ", "return", "OccupationsSeedModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"all-seeds\"", ":", "\n", "            ", "return", "AllSeedsModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"archit\"", ":", "\n", "            ", "return", "ArchitModule", "(", ")", "\n", "", "elif", "module_name", "==", "\"output\"", ":", "\n", "            ", "return", "OutputModule", "(", ")", "\n", "", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serializable.Serializable.to_dict": [[3, 5], ["None"], "methods", ["None"], ["    ", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.fact_combinor.FactCombinor.__init__": [[7, 11], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Fact Combinor\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.fact_combinor.FactCombinor.process": [[12, 15], ["quasimodo.parts_of_facts.PartsOfFacts.from_generated_facts", "input_interface.replace_generated_facts", "input_interface.get_generated_facts", "quasimodo.parts_of_facts.PartsOfFacts.from_generated_facts.merge_into_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.from_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.merge_into_generated_facts"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "parts_of_facts", "=", "PartsOfFacts", ".", "from_generated_facts", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", "\n", "return", "input_interface", ".", "replace_generated_facts", "(", "parts_of_facts", ".", "merge_into_generated_facts", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parameters_reader.ParametersReader.__init__": [[14, 21], ["dict", "open", "line.strip().split.strip().split.strip().split", "len", "line.strip().split.strip().split.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "parameters_file", "=", "DEFAULT_PARAMETERS_FILE", ")", ":", "\n", "        ", "self", ".", "parameters", "=", "dict", "(", ")", "\n", "with", "open", "(", "parameters_file", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "len", "(", "line", ")", "==", "2", ":", "\n", "                    ", "self", ".", "parameters", "[", "line", "[", "0", "]", "]", "=", "line", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parameters_reader.ParametersReader.get_parameter": [[22, 24], ["parameters_reader.ParametersReader.parameters.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "", "", "", "def", "get_parameter", "(", "self", ",", "parameter_name", ")", ":", "\n", "        ", "return", "self", ".", "parameters", ".", "get", "(", "parameter_name", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker.__init__": [[235, 243], ["dict", "statement_maker.StatementMaker._load_q2s", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker._load_q2s"], ["    ", "def", "__init__", "(", "self", ",", "use_cache", "=", "True", ")", ":", "\n", "        ", "self", ".", "_filename", "=", "\"cache.tsv\"", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "CACHE_DIR", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "CACHE_DIR", ")", "\n", "", "self", ".", "_use_cache", "=", "use_cache", "\n", "# Load previous q2s", "\n", "self", ".", "_q2s", "=", "dict", "(", ")", "\n", "self", ".", "_load_q2s", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker._load_q2s": [[244, 254], ["os.path.isfile", "open", "line.strip().split.strip().split.strip().split", "len", "line.strip().split.strip().split.strip"], "methods", ["None"], ["", "def", "_load_q2s", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_use_cache", ":", "\n", "            ", "return", "\n", "", "if", "os", ".", "path", ".", "isfile", "(", "CACHE_DIR", "+", "self", ".", "_filename", ")", ":", "\n", "            ", "with", "open", "(", "CACHE_DIR", "+", "self", ".", "_filename", ")", "as", "f", ":", "\n", "                ", "for", "line", "in", "f", ":", "\n", "                    ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "len", "(", "line", ")", "<", "2", ":", "\n", "                        ", "continue", "\n", "", "self", ".", "_q2s", "[", "line", "[", "0", "]", "]", "=", "line", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker._save_q2s": [[255, 262], ["open", "f.write", "statement.strip", "question.strip"], "methods", ["None"], ["", "", "", "", "def", "_save_q2s", "(", "self", ",", "question", ",", "statement", ",", "subject", ")", ":", "\n", "        ", "if", "not", "self", ".", "_use_cache", ":", "\n", "            ", "return", "\n", "", "self", ".", "_q2s", "[", "question", "]", "=", "statement", "\n", "with", "open", "(", "CACHE_DIR", "+", "self", ".", "_filename", ",", "\"a\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "question", ".", "strip", "(", ")", "+", "\"\\t\"", "+", "statement", ".", "strip", "(", ")", "+", "\n", "\"\\t\"", "+", "subject", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker.to_statement": [[263, 318], ["question.replace.replace.replace().replace().replace", "question.replace.replace.replace", "statement_maker.get_pos_and_tokens_from_question", "statement_maker._correct_tokens", "enumerate", "statement_maker.StatementMaker._save_q2s", "question.replace.replace.strip", "len", "statement_maker.is_form_of_be", "statement_maker.StatementMaker.split", "enumerate", "statement_maker.correct_statement", "question.replace.replace.replace().replace", "len", "statement_maker.is_form_of_be", "statement_maker.is_personal_pronoun", "statement_maker.is_form_of_be", "statement_maker.StatementMaker.split.insert", "question.replace.replace.strip", "statement_maker.process_general_be_form", "statement_maker.is_form_do_present", "question.replace.replace.replace", "statement_maker.is_form_of_can", "statement_maker.process_can_form", "statement_maker.StatementMaker.process_ca_nt", "statement_maker.is_modal_or_auxiliary"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.get_pos_and_tokens_from_question", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker._correct_tokens", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker._save_q2s", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_of_be", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.correct_statement", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_of_be", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_personal_pronoun", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_of_be", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.process_general_be_form", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_do_present", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_of_can", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.process_can_form", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker.process_ca_nt", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_modal_or_auxiliary"], ["", "", "def", "to_statement", "(", "self", ",", "question", ",", "subject", ",", "safe_source", "=", "False", ")", ":", "\n", "        ", "question", "=", "question", ".", "replace", "(", "\"&amp;\"", ",", "\" & \"", ")", ".", "replace", "(", "\"&gt;\"", ",", "\" > \"", ")", ".", "replace", "(", "\"&lt;\"", ",", "\" < \"", ")", "\n", "if", "question", ".", "strip", "(", ")", "in", "self", ".", "_q2s", ":", "\n", "            ", "return", "self", ".", "_q2s", "[", "question", ".", "strip", "(", ")", "]", "\n", "", "question", "=", "question", ".", "replace", "(", "\" cant \"", ",", "\" can't \"", ")", "\n", "pos", ",", "tokens", "=", "get_pos_and_tokens_from_question", "(", "question", ")", "\n", "if", "len", "(", "pos", ")", "<=", "2", ":", "\n", "            ", "return", "\"\"", "\n", "# Correct nano - particule", "\n", "", "tokens", ",", "pos", "=", "_correct_tokens", "(", "tokens", ",", "pos", ")", "\n", "\n", "# replace n't by not", "\n", "to_negate", "=", "None", "\n", "negated_verb", "=", "None", "\n", "for", "i", ",", "token", "in", "enumerate", "(", "tokens", ")", ":", "\n", "            ", "if", "token", "==", "\"n't\"", "and", "i", "-", "1", ">=", "0", "and", "tokens", "[", "i", "-", "1", "]", "in", "NEGATE_VERB", ":", "\n", "                ", "to_negate", "=", "i", "-", "1", "\n", "break", "\n", "", "", "if", "to_negate", "is", "not", "None", ":", "\n", "            ", "del", "tokens", "[", "to_negate", "+", "1", "]", "\n", "del", "pos", "[", "to_negate", "+", "1", "]", "\n", "negated_verb", "=", "tokens", "[", "to_negate", "]", "\n", "\n", "", "if", "is_form_of_be", "(", "tokens", "[", "1", "]", ")", "and", "len", "(", "tokens", ")", "==", "4", ":", "\n", "            ", "statement", "=", "\" \"", ".", "join", "(", "[", "tokens", "[", "2", "]", ",", "tokens", "[", "1", "]", ",", "tokens", "[", "3", "]", "]", ")", "\n", "", "elif", "is_form_of_be", "(", "tokens", "[", "1", "]", ")", "and", "is_personal_pronoun", "(", "tokens", "[", "2", "]", ")", ":", "\n", "            ", "statement", "=", "\" \"", ".", "join", "(", "[", "tokens", "[", "2", "]", ",", "tokens", "[", "1", "]", "]", "+", "tokens", "[", "3", ":", "]", ")", "\n", "", "elif", "is_form_of_be", "(", "tokens", "[", "1", "]", ")", ":", "\n", "            ", "statement", "=", "process_general_be_form", "(", "pos", ",", "tokens", ",", "subject", ")", "\n", "", "elif", "is_form_do_present", "(", "tokens", "[", "1", "]", ")", ":", "\n", "            ", "statement", "=", "\" \"", ".", "join", "(", "tokens", "[", "2", ":", "]", ")", "\n", "", "elif", "is_form_of_can", "(", "tokens", "[", "1", "]", ")", ":", "\n", "            ", "statement", "=", "process_can_form", "(", "pos", ",", "tokens", ")", "\n", "", "elif", "tokens", "[", "1", "]", "==", "\"ca\"", "and", "tokens", "[", "2", "]", "==", "\"n't\"", ":", "\n", "            ", "statement", "=", "self", ".", "process_ca_nt", "(", "subject", ",", "tokens", ")", "\n", "", "elif", "not", "is_modal_or_auxiliary", "(", "tokens", "[", "1", "]", ")", ":", "\n", "            ", "statement", "=", "\" \"", ".", "join", "(", "tokens", "[", "1", ":", "]", ")", "\n", "", "else", ":", "\n", "            ", "statement", "=", "question", "\n", "\n", "", "if", "negated_verb", "is", "not", "None", ":", "\n", "            ", "statement_split", "=", "statement", ".", "split", "(", "\" \"", ")", "\n", "position_verb", "=", "None", "\n", "for", "i", ",", "word", "in", "enumerate", "(", "statement_split", ")", ":", "\n", "                ", "if", "word", "==", "negated_verb", ":", "\n", "                    ", "position_verb", "=", "i", "\n", "break", "\n", "", "", "if", "position_verb", "is", "not", "None", ":", "\n", "                ", "statement_split", ".", "insert", "(", "i", "+", "1", ",", "\"not\"", ")", "\n", "statement", "=", "\" \"", ".", "join", "(", "statement_split", ")", "\n", "\n", "", "", "if", "not", "safe_source", ":", "\n", "            ", "statement", "=", "correct_statement", "(", "statement", ")", "\n", "", "self", ".", "_save_q2s", "(", "question", ",", "statement", ",", "subject", ")", "\n", "return", "statement", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker.process_ca_nt": [[319, 326], ["statement_maker.StatementMaker.to_statement"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker.to_statement"], ["", "def", "process_ca_nt", "(", "self", ",", "subject", ",", "tokens", ")", ":", "\n", "# I have to turn it to an affirmation to make openIE work", "\n", "        ", "temp", "=", "self", ".", "to_statement", "(", "tokens", "[", "0", "]", "+", "\" can \"", "+", "\n", "\" \"", ".", "join", "(", "tokens", "[", "3", ":", "]", ")", ",", "subject", ")", "\n", "statement", "=", "temp", "\n", "# return temp.replace(\" can \", \" cannot \")", "\n", "return", "statement", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker._correct_tokens": [[28, 45], ["range", "len", "res_tokens.append", "res_pos.append"], "function", ["None"], ["def", "_correct_tokens", "(", "tokens", ",", "pos", ")", ":", "\n", "    ", "merge_next", "=", "False", "\n", "res_tokens", "=", "[", "]", "\n", "res_pos", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "tokens", ")", ")", ":", "\n", "        ", "if", "tokens", "[", "i", "]", "==", "\"-\"", "and", "res_tokens", ":", "\n", "            ", "res_tokens", "[", "-", "1", "]", "=", "res_tokens", "[", "-", "1", "]", "+", "\"-\"", "\n", "res_pos", "[", "-", "1", "]", "=", "(", "res_pos", "[", "-", "1", "]", "[", "0", "]", "+", "\"-\"", ",", "res_pos", "[", "-", "1", "]", "[", "1", "]", ")", "\n", "merge_next", "=", "True", "\n", "", "elif", "merge_next", ":", "\n", "            ", "merge_next", "=", "False", "\n", "res_tokens", "[", "-", "1", "]", "=", "res_tokens", "[", "-", "1", "]", "+", "tokens", "[", "i", "]", "\n", "res_pos", "[", "-", "1", "]", "=", "(", "res_pos", "[", "-", "1", "]", "[", "0", "]", "+", "pos", "[", "i", "]", "[", "0", "]", ",", "pos", "[", "i", "]", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "res_tokens", ".", "append", "(", "tokens", "[", "i", "]", ")", "\n", "res_pos", ".", "append", "(", "pos", "[", "i", "]", ")", "\n", "", "", "return", "res_tokens", ",", "res_pos", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_of_be": [[47, 49], ["None"], "function", ["None"], ["", "def", "is_form_of_be", "(", "word", ")", ":", "\n", "    ", "return", "word", "in", "[", "\"are\"", ",", "\"is\"", ",", "\"was\"", ",", "\"were\"", ",", "\"am\"", ",", "\"be\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_personal_pronoun": [[51, 53], ["None"], "function", ["None"], ["", "def", "is_personal_pronoun", "(", "word", ")", ":", "\n", "    ", "return", "word", "in", "[", "\"there\"", ",", "\"it\"", ",", "\"i\"", ",", "\"they\"", ",", "\"she\"", ",", "\"he\"", ",", "\"we\"", ",", "\"you\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_of_can": [[55, 57], ["None"], "function", ["None"], ["", "def", "is_form_of_can", "(", "word", ")", ":", "\n", "    ", "return", "word", "in", "[", "\"can\"", ",", "\"could\"", ",", "\"cannot\"", ",", "\"can't\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_do_present": [[59, 61], ["None"], "function", ["None"], ["", "def", "is_form_do_present", "(", "word", ")", ":", "\n", "    ", "return", "word", "in", "[", "\"do\"", ",", "\"does\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_modal_or_auxiliary": [[63, 67], ["statement_maker.is_form_of_can", "statement_maker.is_form_of_be", "statement_maker.is_form_do_present"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_of_can", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_of_be", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.is_form_do_present"], ["", "def", "is_modal_or_auxiliary", "(", "word", ")", ":", "\n", "    ", "return", "is_form_of_can", "(", "word", ")", "or", "is_form_of_be", "(", "word", ")", "or", "is_form_do_present", "(", "word", ")", "or", "word", "in", "[", "\"should\"", ",", "\"must\"", ",", "\"would\"", ",", "\"may\"", ",", "\"did\"", ",", "\"have\"", ",", "\"has\"", ",", "\"might\"", ",", "\"shall\"", ",", "\"will\"", "]", "or", "\"n't\"", "in", "word", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.get_pos_and_tokens_from_question": [[69, 82], ["_nlp", "tokens.append", "pos.append"], "function", ["None"], ["", "def", "get_pos_and_tokens_from_question", "(", "question", ")", ":", "\n", "    ", "tokens", "=", "[", "]", "\n", "pos", "=", "[", "]", "\n", "for", "token", "in", "_nlp", "(", "question", ")", ":", "\n", "        ", "if", "token", ".", "text", "==", "\"'s\"", ":", "\n", "            ", "tokens", "[", "-", "1", "]", "=", "tokens", "[", "-", "1", "]", "+", "\"'s\"", "\n", "pos", "[", "-", "1", "]", "=", "(", "pos", "[", "-", "1", "]", "[", "TEXT", "]", "+", "\"'s\"", ",", "pos", "[", "-", "1", "]", "[", "POS", "]", ")", "\n", "", "elif", "token", ".", "text", "==", "\"?\"", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "tokens", ".", "append", "(", "token", ".", "text", ")", "\n", "pos", ".", "append", "(", "(", "token", ".", "text", ",", "token", ".", "tag_", ")", ")", "\n", "", "", "return", "pos", ",", "tokens", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.process_general_be_form": [[84, 142], ["quasimodo.inflect_accessor.DEFAULT_INFLECT.to_plural", "range", "statement_maker.clean_multiple_parts", "statement_maker.build_statement_from_multiple_parts", "len", "begin.append", "tokens_begin.append", "begin.append", "tokens_begin.append", "end.append", "end.append", "len", "begin.append", "middle.append", "len"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.clean_multiple_parts", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.build_statement_from_multiple_parts"], ["", "def", "process_general_be_form", "(", "pos", ",", "tokens", ",", "subject", ")", ":", "\n", "    ", "subject_plural", "=", "DEFAULT_INFLECT", ".", "to_plural", "(", "subject", ")", "\n", "begin", "=", "[", "]", "\n", "middle", "=", "[", "]", "\n", "end", "=", "[", "]", "\n", "tokens_begin", "=", "[", "]", "\n", "found_noun", "=", "False", "\n", "found_second", "=", "False", "\n", "found_something_else", "=", "False", "\n", "found_final_adj", "=", "False", "\n", "found_cc", "=", "False", "\n", "found_in", "=", "False", "\n", "for", "i", "in", "range", "(", "2", ",", "len", "(", "pos", ")", ")", ":", "\n", "        ", "current_text_pos", "=", "pos", "[", "i", "]", "\n", "subject_appeared", "=", "(", "subject", "in", "\" \"", ".", "join", "(", "begin", ")", "+", "\" \"", "+", "current_text_pos", "[", "TEXT", "]", "or", "\n", "subject_plural", "in", "\" \"", ".", "join", "(", "begin", ")", "+", "\" \"", "+", "current_text_pos", "[", "TEXT", "]", ")", "\n", "if", "not", "found_noun", "and", "subject_appeared", "and", "(", "\n", "not", "found_cc", "or", "\"NN\"", "in", "current_text_pos", "[", "POS", "]", "or", "\"VBZ\"", "in", "current_text_pos", "[", "POS", "]", ")", ":", "\n", "            ", "if", "(", "tokens", "[", "1", "]", "!=", "\"are\"", "or", "\"NNS\"", "==", "current_text_pos", "[", "1", "]", "or", "found_cc", "or", "\"CC\"", "in", "current_text_pos", "[", "POS", "]", "\n", "or", "(", "i", "!=", "len", "(", "pos", ")", "-", "1", "and", "\"NN\"", "in", "current_text_pos", "[", "POS", "]", "and", "(", "\n", "\"RB\"", "in", "pos", "[", "i", "+", "1", "]", "[", "POS", "]", "or", "\"JJ\"", "in", "pos", "[", "i", "+", "1", "]", "[", "POS", "]", ")", ")", ")", "and", "(", "current_text_pos", "[", "POS", "]", "!=", "\"VBG\"", "and", "current_text_pos", "[", "POS", "]", "!=", "\"DT\"", "and", "\n", "(", "\"JJ\"", "not", "in", "current_text_pos", "[", "POS", "]", "or", "len", "(", "pos", ")", "<", "8", ")", ")", ":", "\n", "                ", "if", "\"CC\"", "in", "current_text_pos", "[", "POS", "]", ":", "\n", "                    ", "found_cc", "=", "True", "\n", "", "elif", "found_cc", "and", "\"NN\"", "in", "current_text_pos", "[", "POS", "]", ":", "\n", "                    ", "found_noun", "=", "True", "\n", "", "elif", "not", "found_cc", ":", "\n", "                    ", "found_noun", "=", "True", "\n", "", "", "begin", ".", "append", "(", "current_text_pos", "[", "TEXT", "]", ")", "\n", "tokens_begin", ".", "append", "(", "current_text_pos", "[", "POS", "]", ")", "\n", "", "elif", "found_noun", "and", "not", "found_something_else", "and", "not", "found_second", "and", "(", "\"CC\"", "in", "current_text_pos", "[", "POS", "]", "or", "\"of\"", "==", "current_text_pos", "[", "TEXT", "]", ")", ":", "\n", "            ", "found_cc", "=", "True", "\n", "found_noun", "=", "False", "\n", "begin", ".", "append", "(", "current_text_pos", "[", "TEXT", "]", ")", "\n", "tokens_begin", ".", "append", "(", "current_text_pos", "[", "POS", "]", ")", "\n", "", "elif", "found_noun", "and", "not", "found_something_else", "and", "found_second", "and", "(", "\"CC\"", "in", "current_text_pos", "[", "POS", "]", "or", "\"of\"", "==", "current_text_pos", "[", "TEXT", "]", ")", ":", "\n", "            ", "found_second", "=", "False", "\n", "end", ".", "append", "(", "current_text_pos", "[", "TEXT", "]", ")", "\n", "", "elif", "not", "found_something_else", "and", "found_noun", "and", "(", "\"NN\"", "in", "current_text_pos", "[", "POS", "]", "or", "\"IN\"", "in", "current_text_pos", "[", "0", "]", ")", "and", "not", "found_final_adj", ":", "\n", "            ", "if", "\"IN\"", "in", "current_text_pos", "[", "TEXT", "]", ":", "\n", "                ", "found_in", "=", "True", "\n", "", "found_second", "=", "True", "\n", "end", ".", "append", "(", "current_text_pos", "[", "TEXT", "]", ")", "\n", "", "elif", "not", "found_noun", ":", "\n", "            ", "begin", ".", "append", "(", "current_text_pos", "[", "TEXT", "]", ")", "\n", "", "else", ":", "\n", "            ", "if", "\"JJ\"", "in", "current_text_pos", "[", "POS", "]", ":", "\n", "                ", "found_final_adj", "=", "True", "\n", "", "found_something_else", "=", "True", "\n", "middle", ".", "append", "(", "current_text_pos", "[", "TEXT", "]", ")", "\n", "", "", "begin", ",", "middle", ",", "end", "=", "clean_multiple_parts", "(", "begin", ",", "middle", ",", "end", ",", "tokens", ")", "\n", "statement", "=", "build_statement_from_multiple_parts", "(", "begin", ",", "middle", ",", "end", ",", "found_in", ",", "tokens", ",", "tokens_begin", ")", "\n", "return", "statement", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.clean_multiple_parts": [[144, 153], ["None"], "function", ["None"], ["", "def", "clean_multiple_parts", "(", "begin", ",", "middle", ",", "end", ",", "tokens", ")", ":", "\n", "    ", "if", "middle", "and", "middle", "[", "0", "]", "==", "tokens", "[", "1", "]", ":", "\n", "        ", "middle", "=", "middle", "[", "1", ":", "]", "\n", "", "if", "end", "and", "end", "[", "0", "]", "==", "tokens", "[", "1", "]", ":", "\n", "        ", "end", "=", "end", "[", "1", ":", "]", "\n", "", "if", "begin", "[", "-", "1", "]", "==", "\"not\"", ":", "\n", "        ", "begin", "=", "begin", "[", ":", "-", "1", "]", "\n", "middle", "=", "[", "\"not\"", "]", "+", "middle", "\n", "", "return", "begin", ",", "middle", ",", "end", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.build_statement_from_multiple_parts": [[155, 186], ["len", "len", "len", "len", "len", "mid.startswith"], "function", ["None"], ["", "def", "build_statement_from_multiple_parts", "(", "begin", ",", "middle", ",", "end", ",", "found_in", ",", "tokens", ",", "tokens_begin", ")", ":", "\n", "    ", "begin", "=", "[", "x", "for", "x", "in", "begin", "if", "x", "!=", "tokens", "[", "1", "]", "]", "\n", "if", "len", "(", "begin", ")", "==", "0", ":", "\n", "        ", "statement", "=", "\"\"", "\n", "", "elif", "len", "(", "middle", ")", "==", "0", "and", "len", "(", "end", ")", "==", "0", ":", "\n", "        ", "statement", "=", "\"\"", "\n", "", "elif", "len", "(", "middle", ")", "==", "0", ":", "\n", "        ", "statement", "=", "\" \"", ".", "join", "(", "begin", ")", "+", "\" \"", "+", "tokens", "[", "1", "]", "+", "\" \"", "+", "\" \"", ".", "join", "(", "end", ")", "\n", "", "elif", "len", "(", "end", ")", "==", "0", ":", "\n", "        ", "statement", "=", "\" \"", ".", "join", "(", "begin", ")", "+", "\" \"", "+", "tokens", "[", "1", "]", "+", "\" \"", "+", "\" \"", ".", "join", "(", "middle", ")", "\n", "", "elif", "found_in", ":", "\n", "        ", "statement", "=", "\" \"", ".", "join", "(", "begin", ")", "+", "\" \"", "+", "tokens", "[", "1", "]", "+", "\" \"", "+", "\" \"", ".", "join", "(", "middle", ")", "+", "\" \"", "+", "\" \"", ".", "join", "(", "end", ")", "\n", "", "elif", "tokens", "[", "1", "]", "==", "\"are\"", "and", "\"NN\"", "in", "tokens_begin", "[", "-", "1", "]", "and", "tokens", "[", "0", "]", "==", "\"why\"", ":", "\n", "        ", "statement", "=", "\" \"", ".", "join", "(", "begin", ")", "+", "\" have \"", "+", "\" \"", ".", "join", "(", "middle", ")", "+", "\" \"", "+", "\" \"", ".", "join", "(", "end", ")", "\n", "", "else", ":", "\n", "        ", "mid", "=", "\" \"", ".", "join", "(", "middle", ")", "\n", "if", "mid", ".", "startswith", "(", "tokens", "[", "1", "]", "+", "\" \"", ")", ":", "\n", "            ", "statement", "=", "\" \"", ".", "join", "(", "begin", ")", "+", "\" \"", "+", "\" \"", ".", "join", "(", "end", ")", "+", "\" \"", "+", "mid", "\n", "", "else", ":", "\n", "            ", "statement", "=", "\" \"", ".", "join", "(", "begin", ")", "+", "\" \"", "+", "\" \"", ".", "join", "(", "end", ")", "+", "\" \"", "+", "tokens", "[", "1", "]", "+", "\" \"", "+", "mid", "\n", "", "", "return", "statement", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.process_can_form": [[188, 203], ["len", "range", "len"], "function", ["None"], ["", "def", "process_can_form", "(", "pos", ",", "tokens", ")", ":", "\n", "    ", "statement", "=", "\"\"", "\n", "if", "len", "(", "tokens", ")", "==", "4", ":", "\n", "        ", "statement", "=", "tokens", "[", "2", "]", "+", "\" \"", "+", "tokens", "[", "1", "]", "+", "\" \"", "+", "tokens", "[", "3", "]", "\n", "", "else", ":", "\n", "# Look for first verb, in base form", "\n", "        ", "found_noun", "=", "False", "\n", "for", "i", "in", "range", "(", "len", "(", "pos", ")", ")", ":", "\n", "            ", "current_text_pos", "=", "pos", "[", "i", "]", "\n", "if", "current_text_pos", "[", "1", "]", "==", "\"VBP\"", "or", "current_text_pos", "[", "1", "]", "==", "\"VB\"", "and", "found_noun", ":", "\n", "                ", "statement", "=", "\" \"", ".", "join", "(", "tokens", "[", "2", ":", "i", "]", ")", "+", "\" \"", "+", "tokens", "[", "1", "]", "+", "\" \"", "+", "\" \"", ".", "join", "(", "tokens", "[", "i", ":", "]", ")", "\n", "break", "\n", "", "elif", "\"NN\"", "in", "current_text_pos", "[", "1", "]", ":", "\n", "                ", "found_noun", "=", "True", "\n", "", "", "", "return", "statement", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.correct_statement": [[205, 231], ["language_check.correct().lower", "len", "language_check.LanguageTool.check", "statement.strip", "language_check.correct", "logging.error", "time.sleep", "time.sleep", "subprocess.call", "time.sleep", "statement_maker.correct_statement", "language_check.LanguageTool", "logging.error"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.correct_statement"], ["", "def", "correct_statement", "(", "statement", ")", ":", "\n", "    ", "if", "len", "(", "statement", ".", "strip", "(", ")", ")", "==", "0", ":", "\n", "        ", "return", "\"\"", "\n", "", "global", "_tool", "\n", "try", ":", "\n", "        ", "matches", "=", "_tool", ".", "check", "(", "statement", ")", "\n", "", "except", ":", "\n", "        ", "try", ":", "\n", "            ", "logging", ".", "error", "(", "\"Problem with LanguageTools for \"", "+", "statement", ")", "\n", "time", ".", "sleep", "(", "60", ")", "\n", "try", ":", "\n", "                ", "del", "_tool", "\n", "", "except", "NameError", ":", "\n", "                ", "pass", "\n", "", "time", ".", "sleep", "(", "60", ")", "\n", "call", "(", "[", "\"killall\"", ",", "\"java\"", "]", ")", "\n", "time", ".", "sleep", "(", "60", ")", "\n", "try", ":", "\n", "                ", "_tool", "=", "language_check", ".", "LanguageTool", "(", "'en-US'", ")", "\n", "", "except", ":", "\n", "                ", "raise", "\n", "", "return", "correct_statement", "(", "statement", ")", "\n", "", "except", ":", "\n", "            ", "logging", ".", "error", "(", "\"Problem with LanguageTools for \"", "+", "statement", ")", "\n", "raise", "\n", "", "", "return", "language_check", ".", "correct", "(", "statement", ",", "matches", ")", ".", "lower", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.UnknownSerializedObject.__init__": [[20, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "message", ")", ":", "\n", "        ", "self", ".", "message", "=", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_seeds": [[24, 26], ["serialized_object_reader.read_seed"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_seed"], ["", "", "def", "read_seeds", "(", "seeds", ")", ":", "\n", "    ", "return", "[", "read_seed", "(", "x", ")", "for", "x", "in", "seeds", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_pattern": [[28, 39], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.multiple_pattern.MultiplePattern", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.data_structures.multiple_pattern.MultiplePattern.add_pattern", "json.dumps", "serialized_object_reader.read_pattern"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_pattern"], ["", "def", "read_pattern", "(", "pattern", ")", ":", "\n", "    ", "if", "pattern", "[", "\"type\"", "]", "==", "\"NO_PATTERN\"", ":", "\n", "        ", "return", "None", "\n", "", "if", "pattern", "[", "\"type\"", "]", "==", "\"MultiplePattern\"", ":", "\n", "        ", "multiple_pattern", "=", "MultiplePattern", "(", ")", "\n", "for", "pattern_temp", "in", "pattern", "[", "\"patterns\"", "]", ":", "\n", "            ", "multiple_pattern", ".", "add_pattern", "(", "read_pattern", "(", "pattern_temp", ")", ")", "\n", "", "return", "multiple_pattern", "\n", "", "if", "pattern", "[", "\"type\"", "]", "==", "\"PatternGoogle\"", ":", "\n", "        ", "return", "PatternGoogle", "(", "pattern", "[", "\"prefix\"", "]", ",", "pattern", "[", "\"relation\"", "]", ",", "pattern", "[", "\"negative\"", "]", ")", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown pattern type\"", "+", "json", ".", "dumps", "(", "pattern", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_patterns": [[41, 43], ["serialized_object_reader.read_pattern"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_pattern"], ["", "def", "read_patterns", "(", "patterns", ")", ":", "\n", "    ", "return", "[", "read_pattern", "(", "x", ")", "for", "x", "in", "patterns", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_predicate": [[45, 49], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.predicate.Predicate", "json.dumps"], "function", ["None"], ["", "def", "read_predicate", "(", "predicate", ")", ":", "\n", "    ", "if", "predicate", "[", "\"type\"", "]", "==", "\"Predicate\"", ":", "\n", "        ", "return", "Predicate", "(", "predicate", "[", "\"value\"", "]", ")", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown predicate type:\"", "+", "json", ".", "dumps", "(", "predicate", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_object": [[51, 55], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.object.Object", "json.dumps"], "function", ["None"], ["", "def", "read_object", "(", "obj", ")", ":", "\n", "    ", "if", "obj", "[", "\"type\"", "]", "==", "\"Object\"", ":", "\n", "        ", "return", "Object", "(", "obj", "[", "\"value\"", "]", ")", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown object type:\"", "+", "json", ".", "dumps", "(", "obj", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_modality": [[57, 63], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.modality.Modality", "json.dumps"], "function", ["None"], ["", "def", "read_modality", "(", "modality", ")", ":", "\n", "    ", "if", "modality", "[", "\"type\"", "]", "==", "\"NO_MODALITY\"", ":", "\n", "        ", "return", "None", "\n", "", "if", "modality", "[", "\"type\"", "]", "==", "\"Modality\"", ":", "\n", "        ", "return", "Modality", "(", "modality", "[", "\"value\"", "]", ")", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown modality type:\"", "+", "json", ".", "dumps", "(", "modality", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_module_reference": [[65, 74], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.multiple_module_reference.MultipleModuleReference", "quasimodo.data_structures.module_reference_interface.ModuleReferenceInterface", "quasimodo.data_structures.multiple_module_reference.MultipleModuleReference.add_reference", "json.dumps", "serialized_object_reader.read_module_reference"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_module_reference"], ["", "def", "read_module_reference", "(", "module_reference", ")", ":", "\n", "    ", "if", "module_reference", "[", "\"type\"", "]", "==", "\"MultipleModuleReference\"", ":", "\n", "        ", "multiple_module_reference", "=", "MultipleModuleReference", "(", ")", "\n", "for", "reference", "in", "module_reference", "[", "\"references\"", "]", ":", "\n", "            ", "multiple_module_reference", ".", "add_reference", "(", "read_module_reference", "(", "reference", ")", ")", "\n", "", "return", "multiple_module_reference", "\n", "", "if", "module_reference", "[", "\"type\"", "]", "==", "\"ModuleReference\"", ":", "\n", "        ", "return", "ModuleReferenceInterface", "(", "module_reference", "[", "\"name\"", "]", ")", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown module reference type:\"", "+", "json", ".", "dumps", "(", "module_reference", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_submodule_reference": [[76, 85], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.multiple_submodule_reference.MultipleSubmoduleReference", "quasimodo.data_structures.submodule_reference_interface.SubmoduleReferenceInterface", "quasimodo.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "json.dumps", "serialized_object_reader.read_submodule_reference"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_submodule_reference"], ["", "def", "read_submodule_reference", "(", "submodule_reference", ")", ":", "\n", "    ", "if", "submodule_reference", "[", "\"type\"", "]", "==", "\"MultipleSubmoduleReference\"", ":", "\n", "        ", "multiple_submodule_reference", "=", "MultipleSubmoduleReference", "(", ")", "\n", "for", "reference", "in", "submodule_reference", "[", "\"references\"", "]", ":", "\n", "            ", "multiple_submodule_reference", ".", "add_reference", "(", "read_submodule_reference", "(", "reference", ")", ")", "\n", "", "return", "multiple_submodule_reference", "\n", "", "if", "submodule_reference", "[", "\"type\"", "]", "==", "\"SubmoduleReference\"", ":", "\n", "        ", "return", "SubmoduleReferenceInterface", "(", "submodule_reference", "[", "\"name\"", "]", ")", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown module reference type:\"", "+", "json", ".", "dumps", "(", "submodule_reference", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_score": [[87, 98], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "json.dumps", "serialized_object_reader.read_module_reference", "serialized_object_reader.read_submodule_reference"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_module_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_submodule_reference"], ["", "def", "read_score", "(", "score", ")", ":", "\n", "    ", "if", "score", "[", "\"type\"", "]", "==", "\"MultipleScore\"", ":", "\n", "        ", "multiple_score", "=", "MultipleScore", "(", ")", "\n", "for", "score_temp", "in", "score", "[", "\"scores\"", "]", ":", "\n", "            ", "multiple_score", ".", "add_score", "(", "\n", "score_temp", "[", "\"score\"", "]", ",", "\n", "read_module_reference", "(", "score_temp", "[", "\"module_from\"", "]", ")", ",", "\n", "read_submodule_reference", "(", "score_temp", "[", "\"submodule_from\"", "]", ")", "\n", ")", "\n", "", "return", "multiple_score", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown score type:\"", "+", "json", ".", "dumps", "(", "score", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_generated_fact": [[100, 113], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.generated_fact.GeneratedFact", "serialized_object_reader.read_subject", "serialized_object_reader.read_predicate", "serialized_object_reader.read_object", "serialized_object_reader.read_modality", "serialized_object_reader.read_score", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_dict", "serialized_object_reader.read_pattern", "json.dumps"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_pattern"], ["", "def", "read_generated_fact", "(", "generated_fact", ")", ":", "\n", "    ", "if", "generated_fact", "[", "\"type\"", "]", "==", "\"GeneratedFact\"", ":", "\n", "        ", "return", "GeneratedFact", "(", "\n", "read_subject", "(", "generated_fact", "[", "\"subject\"", "]", ")", ",", "\n", "read_predicate", "(", "generated_fact", "[", "\"predicate\"", "]", ")", ",", "\n", "read_object", "(", "generated_fact", "[", "\"object\"", "]", ")", ",", "\n", "read_modality", "(", "generated_fact", "[", "\"modality\"", "]", ")", ",", "\n", "generated_fact", "[", "\"negative\"", "]", ",", "\n", "read_score", "(", "generated_fact", "[", "\"score\"", "]", ")", ",", "\n", "MultipleSourceOccurrence", ".", "from_dict", "(", "generated_fact", "[", "\"sentence_source\"", "]", ")", ",", "\n", "read_pattern", "(", "generated_fact", "[", "\"pattern\"", "]", ")", "\n", ")", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown generated fact type\"", "+", "json", ".", "dumps", "(", "generated_fact", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_generated_facts": [[115, 117], ["serialized_object_reader.read_generated_fact"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_generated_fact"], ["", "def", "read_generated_facts", "(", "generated_facts", ")", ":", "\n", "    ", "return", "[", "read_generated_fact", "(", "x", ")", "for", "x", "in", "generated_facts", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_subjects": [[119, 121], ["serialized_object_reader.read_subject"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_subject"], ["", "def", "read_subjects", "(", "subjects", ")", ":", "\n", "    ", "return", "[", "read_subject", "(", "x", ")", "for", "x", "in", "subjects", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_objects": [[123, 125], ["serialized_object_reader.read_object"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_object"], ["", "def", "read_objects", "(", "objects", ")", ":", "\n", "    ", "return", "[", "read_object", "(", "x", ")", "for", "x", "in", "objects", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_subject": [[127, 131], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.subject.Subject", "json.dumps"], "function", ["None"], ["", "def", "read_subject", "(", "subject", ")", ":", "\n", "    ", "if", "subject", "[", "\"type\"", "]", "==", "\"Subject\"", ":", "\n", "        ", "return", "Subject", "(", "subject", "[", "\"value\"", "]", ")", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown subject type:\"", "+", "json", ".", "dumps", "(", "subject", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_seed": [[133, 142], ["serialized_object_reader.UnknownSerializedObject", "quasimodo.data_structures.fact.Fact", "serialized_object_reader.read_subject", "serialized_object_reader.read_predicate", "serialized_object_reader.read_object", "serialized_object_reader.read_modality", "json.dumps"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_modality"], ["", "def", "read_seed", "(", "seed", ")", ":", "\n", "    ", "if", "seed", "[", "\"type\"", "]", "==", "\"Fact\"", ":", "\n", "        ", "return", "Fact", "(", "\n", "read_subject", "(", "seed", "[", "\"subject\"", "]", ")", ",", "\n", "read_predicate", "(", "seed", "[", "\"predicate\"", "]", ")", ",", "\n", "read_object", "(", "seed", "[", "\"object\"", "]", ")", ",", "\n", "read_modality", "(", "seed", "[", "\"modality\"", "]", ")", ",", "\n", "seed", "[", "\"negative\"", "]", ")", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown seed type\"", "+", "json", ".", "dumps", "(", "seed", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.__init__": [[11, 15], ["spacy.load"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load"], ["    ", "def", "__init__", "(", "self", ",", "model", "=", "\"en_core_web_sm\"", ")", ":", "\n", "        ", "if", "model", "is", "None", ":", "\n", "            ", "model", "=", "\"en_core_web_sm\"", "\n", "", "self", ".", "_nlp", "=", "spacy", ".", "load", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.lemmatize": [[16, 19], ["spacy_accessor.SpacyAccessor._nlp"], "methods", ["None"], ["", "def", "lemmatize", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "tokens", "=", "self", ".", "_nlp", "(", "sentence", ")", "\n", "return", "[", "x", ".", "lemma_", "for", "x", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple": [[20, 39], ["quasimodo.sentence_batcher.SentenceBatcher", "spacy_accessor.SpacyAccessor.lemmatize", "lemmatized_sentences.append", "SEPARATOR.join", "len", "lemmatized_sentences.append", "lemma.split", "enumerate", "lemmatized_sentences[].append", "len", "lemmatized_sentences[].append", "lemmatized_sentences.append", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["", "def", "lemmatize_multiple", "(", "self", ",", "sentences", ")", ":", "\n", "        ", "sb", "=", "SentenceBatcher", "(", "sentences", ",", "self", ".", "_nlp", ".", "max_length", ",", "lambda", "x", ":", "len", "(", "x", ")", "+", "LEN_SEPARATOR", ")", "\n", "batch_lemmatization", "=", "[", "self", ".", "lemmatize", "(", "SEPARATOR", ".", "join", "(", "x", ")", ")", "for", "x", "in", "sb", "]", "\n", "lemmatized_sentences", "=", "[", "]", "\n", "for", "batch", "in", "batch_lemmatization", ":", "\n", "            ", "lemmatized_sentences", ".", "append", "(", "[", "]", ")", "\n", "for", "lemma", "in", "batch", ":", "\n", "                ", "if", "lemma", "==", "SEPARATOR", ":", "\n", "                    ", "lemmatized_sentences", ".", "append", "(", "[", "]", ")", "\n", "", "elif", "SEPARATOR", "in", "lemma", ":", "\n", "                    ", "lemma_parts", "=", "lemma", ".", "split", "(", "SEPARATOR", ")", "\n", "for", "i", ",", "part", "in", "enumerate", "(", "lemma_parts", ")", ":", "\n", "                        ", "if", "len", "(", "part", ")", ">", "0", ":", "\n", "                            ", "lemmatized_sentences", "[", "-", "1", "]", ".", "append", "(", "part", ")", "\n", "", "if", "i", "!=", "len", "(", "lemma_parts", ")", "-", "1", ":", "\n", "                            ", "lemmatized_sentences", ".", "append", "(", "[", "]", ")", "\n", "", "", "", "else", ":", "\n", "                    ", "lemmatized_sentences", "[", "-", "1", "]", ".", "append", "(", "lemma", ")", "\n", "", "", "", "return", "lemmatized_sentences", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.annotate": [[40, 42], ["spacy_accessor.SpacyAccessor._nlp"], "methods", ["None"], ["", "def", "annotate", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "return", "self", ".", "_nlp", "(", "sentence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.get_default_annotator": [[47, 52], ["spacy_accessor.SpacyAccessor"], "function", ["None"], ["def", "get_default_annotator", "(", ")", ":", "\n", "    ", "global", "spacy_annotator", "\n", "if", "spacy_annotator", "is", "None", ":", "\n", "        ", "spacy_annotator", "=", "SpacyAccessor", "(", ")", "\n", "", "return", "spacy_annotator", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.__init__": [[18, 26], ["dict", "dict", "inflect.engine", "set", "open", "inflect_accessor.InflectAccessor._proper_name.add", "line.strip().lower", "line.strip"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_conversions_singular", "=", "dict", "(", ")", "\n", "self", ".", "_conversions_plural", "=", "dict", "(", ")", "\n", "self", ".", "_plural_engine", "=", "inflect", ".", "engine", "(", ")", "\n", "self", ".", "_proper_name", "=", "set", "(", ")", "\n", "with", "open", "(", "FILENAME", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "self", ".", "_proper_name", ".", "add", "(", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular": [[27, 37], ["inflect_accessor.InflectAccessor._plural_engine.singular_noun", "word.endswith"], "methods", ["None"], ["", "", "", "def", "to_singular", "(", "self", ",", "word", ")", ":", "\n", "        ", "if", "word", "in", "self", ".", "_conversions_singular", ":", "\n", "            ", "return", "self", ".", "_conversions_singular", "[", "word", "]", "\n", "", "singular", "=", "self", ".", "_plural_engine", ".", "singular_noun", "(", "word", ")", "\n", "if", "not", "singular", "or", "word", "in", "NON_PLURAL", "or", "word", ".", "endswith", "(", "\"sis\"", ")", "or", "word", "in", "self", ".", "_proper_name", ":", "\n", "            ", "self", ".", "_conversions_singular", "[", "word", "]", "=", "word", "\n", "", "else", ":", "\n", "            ", "self", ".", "_conversions_singular", "[", "word", "]", "=", "singular", "\n", "", "return", "self", ".", "_conversions_singular", "[", "word", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural": [[38, 44], ["inflect_accessor.InflectAccessor._plural_engine.plural"], "methods", ["None"], ["", "def", "to_plural", "(", "self", ",", "word", ")", ":", "\n", "        ", "if", "word", "in", "self", ".", "_conversions_plural", ":", "\n", "            ", "return", "self", ".", "_conversions_plural", "[", "word", "]", "\n", "", "plural", "=", "self", ".", "_plural_engine", ".", "plural", "(", "word", ")", "\n", "self", ".", "_conversions_plural", "[", "word", "]", "=", "plural", "\n", "return", "plural", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.occupations_submodule.OccupationsSubmodule.__init__": [[13, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Occupation Seeds\"", "\n", "self", ".", "_filename", "=", "FILENAME", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.subject_file_submodule.SubjectFileSubmodule.__init__": [[8, 13], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Subject File\"", "\n", "self", ".", "_filename", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.subject_file_submodule.SubjectFileSubmodule.process": [[14, 22], ["logging.info", "input_interface.add_subjects", "open", "subjects.append", "quasimodo.data_structures.subject.Subject", "line.strip().lower", "line.strip"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start Subject generation from the file \"", "+", "self", ".", "_filename", ")", "\n", "subjects", "=", "[", "]", "\n", "# Read the subjects from a file", "\n", "with", "open", "(", "self", ".", "_filename", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "subjects", ".", "append", "(", "Subject", "(", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ")", ")", "\n", "", "", "return", "input_interface", ".", "add_subjects", "(", "subjects", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.conceptnet_subjects_submodule.ConceptnetSubjectsSubmodule.__init__": [[14, 19], ["quasimodo.seeds.subject_file_submodule.SubjectFileSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Conceptnet Subject Seeds\"", "\n", "self", ".", "_filename", "=", "FILENAME", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.conceptnet_seeds_submodule.ConceptNetSeedsSubmodule.__init__": [[13, 17], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"ConceptNet Seeds\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.conceptnet_seeds_submodule.ConceptNetSeedsSubmodule.process": [[18, 28], ["logging.info", "logging.info", "input_interface.add_seeds", "open", "len", "line.strip.strip.strip", "line.strip.strip.split", "facts.append", "quasimodo.data_structures.fact.Fact"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_seeds"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start ConceptNet Seeds gathering\"", ")", "\n", "facts", "=", "[", "]", "\n", "with", "open", "(", "SEEDS_LOCATION", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "spo", "=", "line", ".", "split", "(", "\"\\t\"", ")", "\n", "facts", ".", "append", "(", "Fact", "(", "spo", "[", "0", "]", ",", "spo", "[", "1", "]", ",", "spo", "[", "2", "]", ")", ")", "\n", "", "", "logging", ".", "info", "(", "\"%d seeds from ConceptNet where loaded\"", ",", "len", "(", "facts", ")", ")", "\n", "return", "input_interface", ".", "add_seeds", "(", "facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.animal_submodule.AnimalSubmodule.__init__": [[16, 21], ["quasimodo.seeds.subject_file_submodule.SubjectFileSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Animal Seeds\"", "\n", "self", ".", "_filename", "=", "FILENAME", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.special_subjects.SpecialSubjects.__init__": [[50, 54], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Special subjects\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.special_subjects.SpecialSubjects.process": [[55, 60], ["logging.info", "input_interface.add_subjects", "quasimodo.data_structures.subject.Subject", "x.lower"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start special subjects\"", ")", "\n", "subjects", "=", "COUNTRIES", "+", "SEAS", "+", "RIVERS", "+", "MONTS", "+", "OTHERS", "\n", "subjects", "=", "[", "Subject", "(", "x", ".", "lower", "(", ")", ")", "for", "x", "in", "subjects", "]", "\n", "return", "input_interface", ".", "add_subjects", "(", "subjects", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.forgotten_subjects_submodule.ForgottenSubjectsSubmodule.__init__": [[33, 37], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Forgotten subjects submodule\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.forgotten_subjects_submodule.ForgottenSubjectsSubmodule.process": [[38, 62], ["logging.info", "os.path.exists", "os.path.exists", "input_interface.add_subjects", "open", "f.write", "open", "open", "line.strip().split.strip().split.strip().split", "int", "line.strip().split.strip().split.strip", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_singular", "subjects.append", "forgotten_subjects_submodule.contains_personal", "forgotten_subjects_submodule.starts_with_article", "subjects.append", "quasimodo.data_structures.subject.Subject", "line.strip().split.strip().split.strip", "quasimodo.data_structures.subject.Subject", "s.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular", "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.forgotten_subjects_submodule.contains_personal", "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.forgotten_subjects_submodule.starts_with_article", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start getting forgotten subjects\"", ")", "\n", "subjects", "=", "[", "]", "\n", "if", "path", ".", "exists", "(", "FORGOTTEN_SUBJECTS_FILE", ")", ":", "\n", "# Read the subjects from a file", "\n", "            ", "with", "open", "(", "FORGOTTEN_SUBJECTS_FILE", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "                ", "for", "line", "in", "f", ":", "\n", "                    ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "subject", "=", "line", "[", "0", "]", "\n", "if", "contains_personal", "(", "subject", ")", "or", "starts_with_article", "(", "subject", ")", ":", "\n", "                        ", "continue", "\n", "", "n_occurrences", "=", "int", "(", "line", "[", "1", "]", ")", "\n", "if", "n_occurrences", ">", "THRESHOLD_OCCURRENCES", ":", "\n", "                        ", "subjects", ".", "append", "(", "Subject", "(", "subject", ")", ")", "\n", "", "", "", "", "with", "open", "(", "NEW_SUBJECTS_FILE", ",", "\"a\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"\\n\"", ".", "join", "(", "[", "s", ".", "get", "(", ")", "for", "s", "in", "subjects", "]", ")", "+", "\"\\n\"", ")", "\n", "", "subjects", "=", "[", "]", "\n", "if", "path", ".", "exists", "(", "NEW_SUBJECTS_FILE", ")", ":", "\n", "            ", "with", "open", "(", "NEW_SUBJECTS_FILE", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "                ", "for", "line", "in", "f", ":", "\n", "                    ", "subject", "=", "line", ".", "strip", "(", ")", "\n", "subject_sing", "=", "DEFAULT_INFLECT", ".", "to_singular", "(", "subject", ")", "\n", "subjects", ".", "append", "(", "Subject", "(", "subject_sing", ")", ")", "\n", "", "", "", "return", "input_interface", ".", "add_subjects", "(", "subjects", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.forgotten_subjects_submodule.contains_personal": [[19, 22], ["subject.split", "any"], "function", ["None"], ["def", "contains_personal", "(", "subject", ")", ":", "\n", "    ", "subject_split", "=", "subject", ".", "split", "(", "\" \"", ")", "\n", "return", "any", "(", "[", "word", "in", "PERSONALS", "for", "word", "in", "subject_split", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.forgotten_subjects_submodule.starts_with_article": [[24, 29], ["subject.split", "len"], "function", ["None"], ["", "def", "starts_with_article", "(", "subject", ")", ":", "\n", "    ", "subject_split", "=", "subject", ".", "split", "(", "\" \"", ")", "\n", "if", "len", "(", "subject_split", ")", ">", "0", "and", "subject_split", "[", "0", "]", "in", "USELESS_ARTICLE", ":", "\n", "        ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.wikidata_submodule.WikidataSubmodule.__init__": [[16, 21], ["quasimodo.seeds.subject_file_submodule.SubjectFileSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Wikidata Seeds\"", "\n", "self", ".", "_filename", "=", "FILENAME", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.animal_seed_module.AnimalSeedModule.__init__": [[11, 16], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"animal-seeds\"", "]", "\n", "super", "(", "AnimalSeedModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Animal Seed module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.animal_seed_module.AnimalSeedModule.process": [[17, 20], ["logging.info", "animal_seed_module.AnimalSeedModule._submodules[].process"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Generate animal seeds\"", ")", "\n", "return", "self", ".", "_submodules", "[", "0", "]", ".", "process", "(", "input_interface", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.subjects_wordnet_submodule.SubjectsWordnetSubmodule.__init__": [[9, 13], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Subject Wordnet\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.subjects_wordnet_submodule.SubjectsWordnetSubmodule.process": [[14, 27], ["logging.info", "set", "input_interface.add_subjects", "x.lemma_names", "subjects.append", "nltk.corpus.wordnet.all_synsets", "set.add", "quasimodo.data_structures.subject.Subject", "x.pos", "lemma_name.replace().lower", "lemma_name.replace"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start subjects from wordnet\"", ")", "\n", "subjects", "=", "[", "]", "\n", "all_lemma_names", "=", "[", "x", ".", "lemma_names", "(", ")", "\n", "for", "x", "in", "wn", ".", "all_synsets", "(", ")", "if", "x", ".", "pos", "(", ")", "==", "\"n\"", "]", "\n", "all_lemmas", "=", "set", "(", ")", "\n", "for", "lemma_names", "in", "all_lemma_names", ":", "\n", "            ", "for", "lemma_name", "in", "lemma_names", ":", "\n", "                ", "all_lemmas", ".", "add", "(", "lemma_name", ".", "replace", "(", "\"_\"", ",", "\" \"", ")", ".", "lower", "(", ")", ")", "\n", "\n", "", "", "for", "subject", "in", "all_lemmas", ":", "\n", "            ", "subjects", ".", "append", "(", "Subject", "(", "subject", ")", ")", "\n", "", "return", "input_interface", ".", "add_subjects", "(", "subjects", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.occupations_seed_module.OccupationsSeedModule.__init__": [[8, 13], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"occupations-seeds\"", "]", "\n", "super", "(", "OccupationsSeedModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Occupation module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.occupations_seed_module.OccupationsSeedModule.process": [[14, 17], ["logging.info", "occupations_seed_module.OccupationsSeedModule._submodules[].process"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Generate occupations seeds\"", ")", "\n", "return", "self", ".", "_submodules", "[", "0", "]", ".", "process", "(", "input_interface", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.all_seeds_module.AllSeedsModule.__init__": [[8, 17], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"animal-seeds\"", ",", "\"wikidata-seeds\"", ",", "\"occupations-seeds\"", ",", "\n", "\"conceptnet-subjects\"", ",", "\"subjects-wordnet\"", ",", "\n", "\"forgotten-subjects\"", ",", "\n", "\"special-subjects\"", ",", "\n", "\"subject-removal\"", "]", "\n", "super", "(", "AllSeedsModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"All Seeds module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.seeds.all_seeds_module.AllSeedsModule.process": [[18, 25], ["logging.info", "logging.info", "sm.process", "str", "sm.process.get_number_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_number_subjects"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Generate all seeds\"", ")", "\n", "for", "sm", "in", "self", ".", "_submodules", ":", "\n", "            ", "input_interface", "=", "sm", ".", "process", "(", "input_interface", ")", "\n", "", "logging", ".", "info", "(", "\"We have \"", "+", "str", "(", "input_interface", ".", "get_number_subjects", "(", ")", ")", "+", "\n", "\" subjects\"", ")", "\n", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.__init__": [[40, 51], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__", "dict", "dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Saliency and typicality\"", "\n", "self", ".", "total_per_subject", "=", "dict", "(", ")", "\n", "self", ".", "total_per_po", "=", "dict", "(", ")", "\n", "self", ".", "idx2keys", "=", "[", "]", "\n", "self", ".", "idx2total", "=", "[", "]", "\n", "self", ".", "vectors", "=", "None", "\n", "self", ".", "probabilities_po", "=", "None", "\n", "self", ".", "closest_indexes", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.get_all_triples_as_tsv": [[52, 71], ["input_interface.get_generated_facts", "generated_fact.get_tsv", "generated_fact.get_subject().get", "saliency_and_typicality_computation_submodule.get_raw_predicate", "generated_fact.get_object().get", "triples.append", "generated_fact.get_predicate().get", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.max_tau.get", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.max_sigma.get", "generated_fact.get_subject", "generated_fact.get_object", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.max_tau.get", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.max_sigma.get", "str", "generated_fact.get_predicate", "generated_fact.get_score", "str"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_tsv", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.get_raw_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "get_all_triples_as_tsv", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "triples", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "row_tsv", "=", "generated_fact", ".", "get_tsv", "(", ")", "\n", "subj", "=", "generated_fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "pred", "=", "get_raw_predicate", "(", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "score", "=", "generated_fact", ".", "get_score", "(", ")", ".", "scores", "[", "0", "]", "[", "0", "]", "\n", "po", "=", "pred", "+", "\" \"", "+", "obj", "\n", "if", "self", ".", "max_tau", ".", "get", "(", "subj", ",", "0", ")", "!=", "0", ":", "\n", "                ", "tau", "=", "score", "/", "self", ".", "total_per_subject", "[", "subj", "]", "/", "self", ".", "max_tau", ".", "get", "(", "subj", ",", "0", ")", "\n", "", "else", ":", "\n", "                ", "tau", "=", "score", "/", "self", ".", "total_per_subject", "[", "subj", "]", "\n", "", "if", "self", ".", "max_sigma", ".", "get", "(", "po", ",", "0", ")", "!=", "0", ":", "\n", "                ", "sigma", "=", "score", "/", "self", ".", "total_per_po", "[", "po", "]", "/", "self", ".", "max_sigma", ".", "get", "(", "po", ",", "0", ")", "\n", "", "else", ":", "\n", "                ", "sigma", "=", "score", "/", "self", ".", "total_per_po", "[", "po", "]", "\n", "", "triples", ".", "append", "(", "row_tsv", "+", "\"\\t\"", "+", "str", "(", "tau", ")", "+", "\"\\t\"", "+", "str", "(", "sigma", ")", ")", "\n", "", "return", "triples", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.set_max_tau_and_sigma": [[72, 85], ["dict", "dict", "input_interface.get_generated_facts", "generated_fact.get_subject().get", "saliency_and_typicality_computation_submodule.get_raw_predicate", "generated_fact.get_object().get", "max", "max", "generated_fact.get_predicate().get", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.max_tau.get", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.max_sigma.get", "generated_fact.get_subject", "generated_fact.get_object", "generated_fact.get_predicate", "generated_fact.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.get_raw_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "set_max_tau_and_sigma", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "self", ".", "max_tau", "=", "dict", "(", ")", "\n", "self", ".", "max_sigma", "=", "dict", "(", ")", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subj", "=", "generated_fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "pred", "=", "get_raw_predicate", "(", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "score", "=", "generated_fact", ".", "get_score", "(", ")", ".", "scores", "[", "0", "]", "[", "0", "]", "\n", "po", "=", "pred", "+", "\" \"", "+", "obj", "\n", "self", ".", "max_tau", "[", "subj", "]", "=", "max", "(", "score", "/", "self", ".", "total_per_subject", "[", "subj", "]", ",", "\n", "self", ".", "max_tau", ".", "get", "(", "subj", ",", "0", ")", ")", "\n", "self", ".", "max_sigma", "[", "po", "]", "=", "max", "(", "score", "/", "self", ".", "total_per_po", "[", "po", "]", ",", "\n", "self", ".", "max_sigma", ".", "get", "(", "po", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.process": [[86, 99], ["logging.info", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.initialize_statistics", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.initialize_idx_correspondences", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.initialize_po_vectors", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.set_closest_indexes", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.compute_probabilities", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.match_probabilities", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.set_max_tau_and_sigma", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.save_final_results"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.initialize_statistics", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.initialize_idx_correspondences", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.initialize_po_vectors", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.set_closest_indexes", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.compute_probabilities", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.match_probabilities", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.set_max_tau_and_sigma", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.save_final_results"], ["", "", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start TSV output submodule\"", ")", "\n", "\n", "self", ".", "initialize_statistics", "(", "input_interface", ")", "\n", "self", ".", "initialize_idx_correspondences", "(", ")", "\n", "self", ".", "initialize_po_vectors", "(", ")", "\n", "self", ".", "set_closest_indexes", "(", ")", "\n", "self", ".", "compute_probabilities", "(", ")", "\n", "self", ".", "match_probabilities", "(", ")", "\n", "self", ".", "set_max_tau_and_sigma", "(", "input_interface", ")", "\n", "self", ".", "save_final_results", "(", "input_interface", ")", "\n", "\n", "return", "input_interface", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.save_final_results": [[100, 103], ["saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.get_all_triples_as_tsv", "saliency_and_typicality_computation_submodule.save_tsv_triples"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.get_all_triples_as_tsv", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.save_tsv_triples"], ["", "def", "save_final_results", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "triples", "=", "self", ".", "get_all_triples_as_tsv", "(", "input_interface", ")", "\n", "save_tsv_triples", "(", "triples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.match_probabilities": [[104, 107], ["enumerate"], "methods", ["None"], ["", "def", "match_probabilities", "(", "self", ")", ":", "\n", "        ", "for", "i", ",", "key", "in", "enumerate", "(", "self", ".", "idx2keys", ")", ":", "\n", "            ", "self", ".", "total_per_po", "[", "key", "]", "=", "self", ".", "probabilities_po", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.set_closest_indexes": [[108, 119], ["range", "gensim.matutils.argsort", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.closest_indexes.append", "numpy.dot"], "methods", ["None"], ["", "", "def", "set_closest_indexes", "(", "self", ")", ":", "\n", "        ", "self", ".", "closest_indexes", "=", "[", "]", "\n", "distances_temp", "=", "None", "\n", "for", "i", "in", "range", "(", "self", ".", "vectors", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "i", "%", "SLICE_SIZE", "==", "0", ":", "\n", "                ", "distances_temp", "=", "np", ".", "dot", "(", "self", ".", "vectors", "[", "i", ":", "i", "+", "SLICE_SIZE", "]", ",", "self", ".", "vectors", ".", "T", ")", "\n", "", "idx_closest", "=", "matutils", ".", "argsort", "(", "distances_temp", "[", "i", "%", "SLICE_SIZE", "]", ",", "\n", "topn", "=", "TOPK", ",", "\n", "reverse", "=", "True", ")", "\n", "self", ".", "closest_indexes", ".", "append", "(", "[", "(", "j", ",", "(", "1", "-", "distances_temp", "[", "i", "%", "SLICE_SIZE", "]", "[", "j", "]", ")", ")", "for", "j", "in", "idx_closest", "]", ")", "\n", "", "return", "self", ".", "closest_indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.compute_probabilities": [[120, 127], ["numpy.zeros", "range", "sum", "sum"], "methods", ["None"], ["", "def", "compute_probabilities", "(", "self", ")", ":", "\n", "        ", "self", ".", "probabilities_po", "=", "np", ".", "zeros", "(", "self", ".", "vectors", ".", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "vectors", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "closest_indexes", "=", "self", ".", "closest_indexes", "[", "i", "]", "\n", "norm", "=", "sum", "(", "[", "x", "[", "1", "]", "for", "x", "in", "closest_indexes", "]", ")", "\n", "weighted_sum", "=", "sum", "(", "[", "x", "[", "1", "]", "*", "self", ".", "idx2total", "[", "x", "[", "0", "]", "]", "for", "x", "in", "closest_indexes", "]", ")", "\n", "self", ".", "probabilities_po", "[", "i", "]", "=", "weighted_sum", "/", "norm", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.initialize_po_vectors": [[128, 145], ["gensim.load", "numpy.zeros", "enumerate", "numpy.sqrt().reshape", "nltk.tokenize.word_tokenize.lower().replace", "nltk.tokenize.word_tokenize", "len", "numpy.sqrt", "nltk.tokenize.word_tokenize.lower", "gensim.load.get_vector"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load"], ["", "", "def", "initialize_po_vectors", "(", "self", ")", ":", "\n", "        ", "model", "=", "api", ".", "load", "(", "\"word2vec-google-news-300\"", ")", "\n", "self", ".", "vectors", "=", "np", ".", "zeros", "(", "(", "len", "(", "self", ".", "idx2keys", ")", ",", "model", ".", "vector_size", ")", ")", "\n", "for", "i", ",", "sentence", "in", "enumerate", "(", "self", ".", "idx2keys", ")", ":", "\n", "            ", "sentence", "=", "sentence", ".", "lower", "(", ")", ".", "replace", "(", "\"_\"", ",", "\" \"", ")", "\n", "sentence", "=", "word_tokenize", "(", "sentence", ")", "\n", "counter", "=", "0", "\n", "for", "word", "in", "sentence", ":", "\n", "                ", "if", "word", "in", "model", ".", "vocab", ":", "\n", "                    ", "self", ".", "vectors", "[", "i", "]", "+=", "model", ".", "get_vector", "(", "word", ")", "\n", "counter", "+=", "1", "\n", "", "", "if", "counter", "==", "0", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "self", ".", "vectors", "[", "i", "]", "=", "self", ".", "vectors", "[", "i", "]", "/", "counter", "\n", "", "", "norms", "=", "np", ".", "sqrt", "(", "(", "self", ".", "vectors", "*", "self", ".", "vectors", ")", ".", "sum", "(", "axis", "=", "1", ")", ")", ".", "reshape", "(", "self", ".", "vectors", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "vectors", "/=", "norms", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.initialize_idx_correspondences": [[146, 149], ["list", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.total_per_po.keys"], "methods", ["None"], ["", "def", "initialize_idx_correspondences", "(", "self", ")", ":", "\n", "        ", "self", ".", "idx2keys", "=", "list", "(", "self", ".", "total_per_po", ".", "keys", "(", ")", ")", "\n", "self", ".", "idx2total", "=", "[", "self", ".", "total_per_po", "[", "key", "]", "for", "key", "in", "self", ".", "idx2keys", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.initialize_statistics": [[150, 161], ["dict", "dict", "input_interface.get_generated_facts", "generated_fact.get_subject().get", "saliency_and_typicality_computation_submodule.get_raw_predicate", "generated_fact.get_object().get", "generated_fact.get_predicate().get", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.total_per_subject.setdefault", "saliency_and_typicality_computation_submodule.SaliencyAndTypicalityComputationSubmodule.total_per_po.setdefault", "generated_fact.get_subject", "generated_fact.get_object", "generated_fact.get_predicate", "generated_fact.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.get_raw_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "initialize_statistics", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "self", ".", "total_per_subject", "=", "dict", "(", ")", "\n", "self", ".", "total_per_po", "=", "dict", "(", ")", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subj", "=", "generated_fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "pred", "=", "get_raw_predicate", "(", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "score", "=", "generated_fact", ".", "get_score", "(", ")", ".", "scores", "[", "0", "]", "[", "0", "]", "\n", "self", ".", "total_per_subject", "[", "subj", "]", "=", "self", ".", "total_per_subject", ".", "setdefault", "(", "subj", ",", "0", ")", "+", "score", "\n", "po", "=", "pred", "+", "\" \"", "+", "obj", "\n", "self", ".", "total_per_po", "[", "po", "]", "=", "self", ".", "total_per_po", ".", "setdefault", "(", "po", ",", "0", ")", "+", "score", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.save_tsv_triples": [[21, 28], ["quasimodo.assertion_output.tsv_output_submodule.get_version", "open", "f.write", "f.write", "str"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.tsv_output_submodule.get_version"], ["def", "save_tsv_triples", "(", "triples", ")", ":", "\n", "    ", "version", "=", "get_version", "(", ")", "\n", "save_file", "=", "OUT_DIR", "+", "\"quasimodo\"", "+", "str", "(", "version", ")", "+", "\".tsv\"", "\n", "with", "open", "(", "save_file", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "\"\\t\"", ".", "join", "(", "[", "\"subject\"", ",", "\"predicate\"", ",", "\"object\"", ",", "\"modality\"", ",", "\"is_negative\"", ",", "\"score\"", ",", "\"sentences source\"", ",", "\n", "\"typicality\"", ",", "\"saliency\"", "]", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "\"\\n\"", ".", "join", "(", "triples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.get_raw_predicate": [[30, 36], ["None"], "function", ["None"], ["", "", "def", "get_raw_predicate", "(", "predicate", ")", ":", "\n", "    ", "if", "\"has_body_part\"", "==", "predicate", ":", "\n", "        ", "return", "\"have\"", "\n", "", "if", "\"has_\"", "in", "predicate", ":", "\n", "        ", "return", "\"be\"", "\n", "", "return", "predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.statistics.StatisticsSubmodule.__init__": [[29, 33], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Statistics Output\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.statistics.StatisticsSubmodule.process": [[34, 127], ["logging.info", "statistics.append", "input_interface.get_generated_facts", "statistics.append", "statistics.append", "statistics.append", "collections.Counter", "collections.Counter.items", "statistics.append", "statistics.append", "set", "statistics.append", "statistics.append", "set", "statistics.append", "statistics.append", "dict", "input_interface.get_generated_facts", "statistics.append", "subjects.append", "predicates.append", "objects.append", "open", "open", "set", "statistics.append", "statistics.get_version", "len", "generated_fact.get_subject().get", "generated_fact.get_predicate().get", "generated_fact.get_object().get", "len", "len", "len", "predicates_10.append", "len", "animals.append", "set.add", "len", "occupations.append", "set.add", "len", "generated_fact.get_score", "scores.append", "open", "f.write", "input_interface.get_generated_facts", "set", "set", "set", "len", "len", "line.strip", "line.strip", "set.add", "dict.get", "float", "float", "generated_fact.get_subject", "generated_fact.get_predicate", "generated_fact.get_object", "input_interface.get_generated_facts", "set", "s.get_name", "numpy.mean", "numpy.std", "str", "dict.get", "len", "input_interface.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.tsv_output_submodule.get_version", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start statistics output submodule\"", ")", "\n", "\n", "statistics", "=", "[", "]", "\n", "\n", "statistics", ".", "append", "(", "\"%d facts generated\"", "%", "len", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "\n", "subjects", "=", "[", "]", "\n", "predicates", "=", "[", "]", "\n", "objects", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subjects", ".", "append", "(", "generated_fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "predicates", ".", "append", "(", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "objects", ".", "append", "(", "(", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", ")", "\n", "\n", "", "statistics", ".", "append", "(", "\"There are %d subjects\"", "%", "len", "(", "set", "(", "subjects", ")", ")", ")", "\n", "statistics", ".", "append", "(", "\"There are %d predicates\"", "%", "len", "(", "set", "(", "predicates", ")", ")", ")", "\n", "statistics", ".", "append", "(", "\"There are %d objects\"", "%", "len", "(", "set", "(", "objects", ")", ")", ")", "\n", "\n", "predicate_counter", "=", "Counter", "(", "predicates", ")", "\n", "predicates_10", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "predicate_counter", ".", "items", "(", ")", ":", "\n", "            ", "if", "value", ">=", "10", ":", "\n", "                ", "predicates_10", ".", "append", "(", "key", ")", "\n", "", "", "statistics", ".", "append", "(", "\"%d predicates appear more than 10 times\"", "%", "len", "(", "predicates_10", ")", ")", "\n", "\n", "statistics", ".", "append", "(", "\"There are %0.2f facts per subject\"", "%", "\n", "(", "len", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", "/", "len", "(", "set", "(", "subjects", ")", ")", ")", ")", "\n", "\n", "animals", "=", "[", "]", "\n", "with", "open", "(", "ANIMALS_FILENAME", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "animals", ".", "append", "(", "line", ".", "strip", "(", ")", ")", "\n", "", "", "animal_facts", "=", "0", "\n", "animals_found", "=", "set", "(", ")", "\n", "for", "subject", "in", "subjects", ":", "\n", "            ", "if", "subject", "in", "animals", ":", "\n", "                ", "animal_facts", "+=", "1", "\n", "animals_found", ".", "add", "(", "subject", ")", "\n", "", "", "statistics", ".", "append", "(", "\"There are %d facts about animals\"", "%", "animal_facts", ")", "\n", "statistics", ".", "append", "(", "\"%d different animals were found\"", "%", "len", "(", "animals_found", ")", ")", "\n", "\n", "occupations", "=", "[", "]", "\n", "with", "open", "(", "OCCUPATIONS_FILENAME", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "occupations", ".", "append", "(", "line", ".", "strip", "(", ")", ")", "\n", "", "", "occupations_facts", "=", "0", "\n", "occupations_found", "=", "set", "(", ")", "\n", "for", "subject", "in", "subjects", ":", "\n", "            ", "if", "subject", "in", "occupations", ":", "\n", "                ", "occupations_facts", "+=", "1", "\n", "occupations_found", ".", "add", "(", "subject", ")", "\n", "", "", "statistics", ".", "append", "(", "\"There are %d facts about occupations\"", "%", "occupations_facts", ")", "\n", "statistics", ".", "append", "(", "\"%d different occupations were found\"", "%", "len", "(", "occupations_found", ")", ")", "\n", "\n", "n_found", "=", "dict", "(", ")", "\n", "interesting_submodules", "=", "[", "\n", "\"Google Autocomplete\"", ",", "\n", "\"Answers.com Questions\"", ",", "\n", "\"Reddit Questions\"", ",", "\n", "\"Yahoo Questions\"", ",", "\n", "\"Quora Questions\"", ",", "\n", "\"Bing Autocomplete\"", ",", "\n", "\"CoreNLP\"", ",", "\n", "\"OpenIE5\"", ",", "\n", "\"Manual\"", "\n", "]", "\n", "scores", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "scores_temp", "=", "generated_fact", ".", "get_score", "(", ")", ".", "scores", "\n", "submodules_temp", "=", "set", "(", ")", "\n", "for", "score", ",", "_", ",", "submodule_source", "in", "scores_temp", ":", "\n", "                ", "for", "s", "in", "submodule_source", ".", "_references", ":", "\n", "                    ", "submodules_temp", ".", "add", "(", "s", ".", "get_name", "(", ")", ")", "\n", "", "scores", ".", "append", "(", "score", ")", "\n", "", "for", "submodule", "in", "submodules_temp", ":", "\n", "                ", "n_found", "[", "submodule", "]", "=", "n_found", ".", "get", "(", "submodule", ",", "0.0", ")", "+", "1.0", "\n", "\n", "", "", "for", "submodule", "in", "n_found", ":", "\n", "            ", "statistics", ".", "append", "(", "\"%.2f facts were extracted/validated from %s\"", "%", "\n", "(", "(", "n_found", ".", "get", "(", "submodule", ",", "0", ")", "/", "len", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", "*", "100.0", ")", ",", "\n", "submodule", ")", ")", "\n", "\n", "", "statistics", ".", "append", "(", "\"The mean score is %.2f and the standard deviation is %.2f\"", "%", "\n", "(", "float", "(", "np", ".", "mean", "(", "scores", ")", ")", ",", "float", "(", "np", ".", "std", "(", "scores", ")", ")", ")", ")", "\n", "\n", "while", "True", ":", "\n", "            ", "version", "=", "get_version", "(", ")", "\n", "with", "open", "(", "OUT_DIR", "+", "\"statistics\"", "+", "str", "(", "version", ")", "+", "\".txt\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "\"\\n\"", ".", "join", "(", "statistics", ")", ")", "\n", "break", "\n", "\n", "", "", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.statistics.get_version": [[17, 25], ["re.compile", "os.listdir", "re.compile.match", "max", "int", "regex_output.match.group"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.match"], ["def", "get_version", "(", ")", ":", "\n", "    ", "version", "=", "1", "\n", "regex_output", "=", "re", ".", "compile", "(", "r\"quasimodo(?P<version>\\d+).tsv\"", ")", "\n", "for", "file", "in", "os", ".", "listdir", "(", "OUT_DIR", ")", ":", "\n", "        ", "match", "=", "regex_output", ".", "match", "(", "file", ")", "\n", "if", "match", "is", "not", "None", ":", "\n", "            ", "version", "=", "max", "(", "version", ",", "int", "(", "match", ".", "group", "(", "\"version\"", ")", ")", ")", "\n", "", "", "return", "version", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.output_module.OutputModule.__init__": [[8, 13], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"saliency-typicality\"", ",", "\"statistics\"", "]", "# circle-saliency, saliency-typicality", "\n", "super", "(", "OutputModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Output Module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.output_module.OutputModule.process": [[14, 19], ["logging.info", "submodule.process"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the output module\"", ")", "\n", "for", "submodule", "in", "self", ".", "_submodules", ":", "\n", "            ", "input_interface", "=", "submodule", ".", "process", "(", "input_interface", ")", "\n", "", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.tsv_output_submodule.TSVOutputSubmodule.__init__": [[40, 44], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"TSV Output\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.tsv_output_submodule.TSVOutputSubmodule.process": [[45, 50], ["logging.info", "tsv_output_submodule.get_all_triples_as_tsv", "tsv_output_submodule.save_tsv_triples"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.get_all_triples_as_tsv", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.save_tsv_triples"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start TSV output submodule\"", ")", "\n", "triples", "=", "get_all_triples_as_tsv", "(", "input_interface", ")", "\n", "save_tsv_triples", "(", "triples", ")", "\n", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.tsv_output_submodule.get_version": [[13, 21], ["re.compile", "os.listdir", "re.compile.match", "max", "int", "regex_output.match.group"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.match"], ["def", "get_version", "(", ")", ":", "\n", "    ", "version", "=", "1", "\n", "regex_output", "=", "re", ".", "compile", "(", "\"quasimodo(?P<version>\\d+).tsv\"", ")", "\n", "for", "file", "in", "os", ".", "listdir", "(", "OUT_DIR", ")", ":", "\n", "        ", "match", "=", "regex_output", ".", "match", "(", "file", ")", "\n", "if", "match", "is", "not", "None", ":", "\n", "            ", "version", "=", "max", "(", "version", ",", "int", "(", "match", ".", "group", "(", "\"version\"", ")", ")", "+", "1", ")", "\n", "", "", "return", "version", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.tsv_output_submodule.get_all_triples_as_tsv": [[23, 28], ["input_interface.get_generated_facts", "triples.append", "generated_fact.get_tsv"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_tsv"], ["", "def", "get_all_triples_as_tsv", "(", "input_interface", ")", ":", "\n", "    ", "triples", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "        ", "triples", ".", "append", "(", "generated_fact", ".", "get_tsv", "(", ")", ")", "\n", "", "return", "triples", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.tsv_output_submodule.save_tsv_triples": [[30, 36], ["tsv_output_submodule.get_version", "open", "f.write", "f.write", "str"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.tsv_output_submodule.get_version"], ["", "def", "save_tsv_triples", "(", "triples", ")", ":", "\n", "    ", "version", "=", "get_version", "(", ")", "\n", "save_file", "=", "OUT_DIR", "+", "\"quasimodo\"", "+", "str", "(", "version", ")", "+", "\".tsv\"", "\n", "with", "open", "(", "save_file", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "\"\\t\"", ".", "join", "(", "[", "\"subject\"", ",", "\"predicate\"", ",", "\"object\"", ",", "\"modality\"", ",", "\"is_negative\"", ",", "\"score\"", ",", "\"sentences source\"", "]", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "\"\\n\"", ".", "join", "(", "triples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.__init__": [[34, 45], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__", "dict", "dict", "dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Saliency and typicality\"", "\n", "self", ".", "total_per_po", "=", "dict", "(", ")", "\n", "self", ".", "total_per_po_per_subject", "=", "dict", "(", ")", "\n", "self", ".", "idx2keys", "=", "[", "]", "\n", "self", ".", "keys2idx", "=", "dict", "(", ")", "\n", "self", ".", "vectors", "=", "None", "\n", "self", ".", "saliencies", "=", "[", "]", "\n", "self", ".", "closest_indexes", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.compute_sigma": [[46, 66], ["len", "circle_saliency.CircleSaliency.total_per_po_per_subject.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "compute_sigma", "(", "self", ",", "subj", ",", "po", ",", "score", ")", ":", "\n", "        ", "cum_sum", "=", "0", "\n", "sigma", "=", "0", "\n", "i", "=", "0", "\n", "j", "=", "0", "\n", "idx", "=", "self", ".", "keys2idx", "[", "po", "]", "\n", "while", "cum_sum", "<", "score", "*", "N", "and", "i", "<", "TOPK", "and", "j", "<", "len", "(", "self", ".", "closest_indexes", "[", "idx", "]", ")", ":", "\n", "            ", "current_closest", ",", "similarity", "=", "self", ".", "closest_indexes", "[", "idx", "]", "[", "j", "]", "\n", "j", "+=", "1", "\n", "if", "current_closest", "==", "idx", ":", "\n", "                ", "continue", "\n", "", "key", "=", "self", ".", "idx2keys", "[", "current_closest", "]", "\n", "non_subj_score", "=", "self", ".", "total_per_po", "[", "key", "]", "-", "self", ".", "total_per_po_per_subject", ".", "get", "(", "(", "subj", ",", "key", ")", ",", "0", ")", "\n", "# Ignore po from the subject", "\n", "if", "non_subj_score", "<", "1e-4", ":", "\n", "                ", "continue", "\n", "", "cum_sum", "+=", "non_subj_score", "*", "similarity", "\n", "sigma", "=", "1", "-", "similarity", "\n", "i", "+=", "1", "\n", "", "return", "sigma", ",", "score", "/", "self", ".", "total_per_po", "[", "po", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.get_all_triples_as_tsv": [[67, 74], ["enumerate", "input_interface.get_generated_facts", "generated_fact.get_tsv", "triples.append", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_tsv"], ["", "def", "get_all_triples_as_tsv", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "triples", "=", "[", "]", "\n", "for", "i", ",", "generated_fact", "in", "enumerate", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", ":", "\n", "            ", "row_tsv", "=", "generated_fact", ".", "get_tsv", "(", ")", "\n", "neighborhood_sigma", ",", "local_sigma", "=", "self", ".", "saliencies", "[", "i", "]", "\n", "triples", ".", "append", "(", "row_tsv", "+", "\"\\t\"", "+", "str", "(", "neighborhood_sigma", ")", "+", "\"\\t\"", "+", "str", "(", "local_sigma", ")", ")", "\n", "", "return", "triples", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.set_sigmas": [[75, 85], ["input_interface.get_generated_facts", "generated_fact.get_subject().get", "quasimodo.assertion_output.saliency_and_typicality_computation_submodule.get_raw_predicate", "generated_fact.get_object().get", "circle_saliency.CircleSaliency.compute_sigma", "circle_saliency.CircleSaliency.saliencies.append", "generated_fact.get_predicate().get", "generated_fact.get_subject", "generated_fact.get_object", "generated_fact.get_predicate", "generated_fact.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.get_raw_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.compute_sigma", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "set_sigmas", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "self", ".", "saliencies", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subj", "=", "generated_fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "pred", "=", "get_raw_predicate", "(", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "score", "=", "generated_fact", ".", "get_score", "(", ")", ".", "scores", "[", "0", "]", "[", "0", "]", "\n", "po", "=", "pred", "+", "\" \"", "+", "obj", "\n", "sigma", "=", "self", ".", "compute_sigma", "(", "subj", ",", "po", ",", "score", ")", "\n", "self", ".", "saliencies", ".", "append", "(", "sigma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.process": [[86, 97], ["logging.info", "circle_saliency.CircleSaliency.initialize_statistics", "circle_saliency.CircleSaliency.initialize_idx_correspondences", "circle_saliency.CircleSaliency.initialize_po_vectors", "circle_saliency.CircleSaliency.set_closest_indexes", "circle_saliency.CircleSaliency.set_sigmas", "circle_saliency.CircleSaliency.save_final_results"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.initialize_statistics", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.initialize_idx_correspondences", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.initialize_po_vectors", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.set_closest_indexes", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.set_sigmas", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.save_final_results"], ["", "", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start TSV output submodule\"", ")", "\n", "\n", "self", ".", "initialize_statistics", "(", "input_interface", ")", "\n", "self", ".", "initialize_idx_correspondences", "(", ")", "\n", "self", ".", "initialize_po_vectors", "(", ")", "\n", "self", ".", "set_closest_indexes", "(", ")", "\n", "self", ".", "set_sigmas", "(", "input_interface", ")", "\n", "self", ".", "save_final_results", "(", "input_interface", ")", "\n", "\n", "return", "input_interface", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.save_final_results": [[98, 101], ["circle_saliency.CircleSaliency.get_all_triples_as_tsv", "circle_saliency.save_tsv_triples"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.get_all_triples_as_tsv", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.save_tsv_triples"], ["", "def", "save_final_results", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "triples", "=", "self", ".", "get_all_triples_as_tsv", "(", "input_interface", ")", "\n", "save_tsv_triples", "(", "triples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.set_closest_indexes": [[102, 107], ["quasimodo.assertion_output.closest_indexes.ClosestIndexes", "quasimodo.assertion_output.closest_indexes.ClosestIndexes.get_closest_indexes"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.closest_indexes.ClosestIndexes.get_closest_indexes"], ["", "def", "set_closest_indexes", "(", "self", ")", ":", "\n", "        ", "closest_indexes", "=", "ClosestIndexes", "(", "self", ".", "vectors", ")", "\n", "self", ".", "closest_indexes", "=", "closest_indexes", ".", "get_closest_indexes", "(", "\n", "TOPK", ",", "SLICE_SIZE", ")", "\n", "return", "self", ".", "closest_indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.initialize_po_vectors": [[108, 125], ["gensim.load", "numpy.zeros", "enumerate", "numpy.sqrt().reshape", "nltk.tokenize.word_tokenize.lower().replace", "nltk.tokenize.word_tokenize", "len", "numpy.sqrt", "nltk.tokenize.word_tokenize.lower", "gensim.load.get_vector"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load"], ["", "def", "initialize_po_vectors", "(", "self", ")", ":", "\n", "        ", "model", "=", "api", ".", "load", "(", "\"word2vec-google-news-300\"", ")", "\n", "self", ".", "vectors", "=", "np", ".", "zeros", "(", "(", "len", "(", "self", ".", "idx2keys", ")", ",", "model", ".", "vector_size", ")", ")", "\n", "for", "i", ",", "sentence", "in", "enumerate", "(", "self", ".", "idx2keys", ")", ":", "\n", "            ", "sentence", "=", "sentence", ".", "lower", "(", ")", ".", "replace", "(", "\"_\"", ",", "\" \"", ")", "\n", "sentence", "=", "word_tokenize", "(", "sentence", ")", "\n", "counter", "=", "0", "\n", "for", "word", "in", "sentence", ":", "\n", "                ", "if", "word", "in", "model", ".", "vocab", ":", "\n", "                    ", "self", ".", "vectors", "[", "i", "]", "+=", "model", ".", "get_vector", "(", "word", ")", "\n", "counter", "+=", "1", "\n", "", "", "if", "counter", "==", "0", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "self", ".", "vectors", "[", "i", "]", "=", "self", ".", "vectors", "[", "i", "]", "/", "counter", "\n", "", "", "norms", "=", "np", ".", "sqrt", "(", "(", "self", ".", "vectors", "*", "self", ".", "vectors", ")", ".", "sum", "(", "axis", "=", "1", ")", ")", ".", "reshape", "(", "self", ".", "vectors", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "vectors", "/=", "norms", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.initialize_idx_correspondences": [[126, 130], ["list", "enumerate", "circle_saliency.CircleSaliency.total_per_po.keys", "circle_saliency.CircleSaliency.total_per_po.keys"], "methods", ["None"], ["", "def", "initialize_idx_correspondences", "(", "self", ")", ":", "\n", "        ", "self", ".", "idx2keys", "=", "list", "(", "self", ".", "total_per_po", ".", "keys", "(", ")", ")", "\n", "for", "i", ",", "key", "in", "enumerate", "(", "self", ".", "total_per_po", ".", "keys", "(", ")", ")", ":", "\n", "            ", "self", ".", "keys2idx", "[", "key", "]", "=", "i", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.CircleSaliency.initialize_statistics": [[131, 142], ["dict", "dict", "input_interface.get_generated_facts", "generated_fact.get_subject().get", "quasimodo.assertion_output.saliency_and_typicality_computation_submodule.get_raw_predicate", "generated_fact.get_object().get", "generated_fact.get_predicate().get", "circle_saliency.CircleSaliency.total_per_po.get", "circle_saliency.CircleSaliency.total_per_po_per_subject.get", "generated_fact.get_subject", "generated_fact.get_object", "generated_fact.get_predicate", "generated_fact.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.saliency_and_typicality_computation_submodule.get_raw_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "", "def", "initialize_statistics", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "self", ".", "total_per_po", "=", "dict", "(", ")", "\n", "self", ".", "total_per_po_per_subject", "=", "dict", "(", ")", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subj", "=", "generated_fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "pred", "=", "get_raw_predicate", "(", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "score", "=", "generated_fact", ".", "get_score", "(", ")", ".", "scores", "[", "0", "]", "[", "0", "]", "\n", "po", "=", "pred", "+", "\" \"", "+", "obj", "\n", "self", ".", "total_per_po", "[", "po", "]", "=", "self", ".", "total_per_po", ".", "get", "(", "po", ",", "0", ")", "+", "score", "\n", "self", ".", "total_per_po_per_subject", "[", "(", "subj", ",", "po", ")", "]", "=", "self", ".", "total_per_po_per_subject", ".", "get", "(", "(", "subj", ",", "po", ")", ",", "0", ")", "+", "score", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.circle_saliency.save_tsv_triples": [[23, 30], ["quasimodo.assertion_output.tsv_output_submodule.get_version", "open", "f.write", "f.write", "str"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.tsv_output_submodule.get_version"], ["def", "save_tsv_triples", "(", "triples", ")", ":", "\n", "    ", "version", "=", "get_version", "(", ")", "\n", "save_file", "=", "OUT_DIR", "+", "\"quasimodo\"", "+", "str", "(", "version", ")", "+", "\".tsv\"", "\n", "with", "open", "(", "save_file", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "\"\\t\"", ".", "join", "(", "[", "\"subject\"", ",", "\"predicate\"", ",", "\"object\"", ",", "\"modality\"", ",", "\"is_negative\"", ",", "\"score\"", ",", "\"sentences source\"", ",", "\n", "\"neighborhood sigma\"", ",", "\"local sigma\"", "]", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "\"\\n\"", ".", "join", "(", "triples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.closest_indexes.ClosestIndexes.__init__": [[9, 15], ["numpy.sqrt().reshape", "numpy.sqrt"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "similarities", ")", ":", "\n", "        ", "self", ".", "vectors", "=", "similarities", "\n", "# Normalize just in case", "\n", "norms", "=", "np", ".", "sqrt", "(", "(", "self", ".", "vectors", "*", "self", ".", "vectors", ")", ".", "sum", "(", "axis", "=", "1", ")", ")", ".", "reshape", "(", "\n", "self", ".", "vectors", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "vectors", "/=", "norms", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.closest_indexes.ClosestIndexes.get_closest_indexes": [[16, 30], ["range", "gensim.matutils.argsort", "closest_indexes.append", "numpy.dot"], "methods", ["None"], ["", "def", "get_closest_indexes", "(", "self", ",", "top_k", ",", "slice_size", "=", "SLICE_SIZE", ")", ":", "\n", "        ", "closest_indexes", "=", "[", "]", "\n", "similarity_temp", "=", "None", "\n", "for", "i", "in", "range", "(", "self", ".", "vectors", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "i", "%", "slice_size", "==", "0", ":", "\n", "                ", "similarity_temp", "=", "np", ".", "dot", "(", "self", ".", "vectors", "[", "i", ":", "i", "+", "slice_size", "]", ",", "\n", "self", ".", "vectors", ".", "T", ")", "\n", "", "idx_closest", "=", "matutils", ".", "argsort", "(", "similarity_temp", "[", "i", "%", "slice_size", "]", ",", "\n", "topn", "=", "top_k", ",", "\n", "reverse", "=", "True", ")", "\n", "closest_indexes", ".", "append", "(", "\n", "[", "(", "j", ",", "(", "1.0", "+", "similarity_temp", "[", "i", "%", "slice_size", "]", "[", "j", "]", ")", "/", "2.0", ")", "\n", "for", "j", "in", "idx_closest", "]", ")", "\n", "", "return", "closest_indexes", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_module_reference.MultipleModuleReference.__init__": [[6, 14], ["module_reference_interface.ModuleReferenceInterface.__init__", "module_reference.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\"\"", ")", "\n", "if", "module_reference", "is", "None", ":", "\n", "            ", "self", ".", "_name", "=", "\"\"", "\n", "self", ".", "_references", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "_name", "=", "module_reference", ".", "get_name", "(", ")", "\n", "self", ".", "_references", "=", "[", "module_reference", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_module_reference.MultipleModuleReference.add_reference": [[15, 18], ["multiple_module_reference.MultipleModuleReference._references.append", "set", "x.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "", "def", "add_reference", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "self", ".", "_references", ".", "append", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"; \"", ".", "join", "(", "set", "(", "[", "x", ".", "get_name", "(", ")", "for", "x", "in", "self", ".", "_references", "if", "x", "is", "not", "None", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_module_reference.MultipleModuleReference.is_from": [[19, 21], ["any", "x.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "is_from", "(", "self", ",", "module_name", ")", ":", "\n", "        ", "return", "any", "(", "[", "x", ".", "get_name", "(", ")", "==", "module_name", "for", "x", "in", "self", ".", "_references", "if", "x", "is", "not", "None", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_module_reference.MultipleModuleReference.to_dict": [[22, 29], ["dict", "res[].append", "reference.to_dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict"], ["", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"MultipleModuleReference\"", "\n", "res", "[", "\"references\"", "]", "=", "[", "]", "\n", "for", "reference", "in", "self", ".", "_references", ":", "\n", "            ", "res", "[", "\"references\"", "]", ".", "append", "(", "reference", ".", "to_dict", "(", ")", ")", "\n", "", "return", "res", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.__init__": [[17, 23], ["workflow_interface.WorkflowInterface.get_workflow", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.get_workflow"], ["def", "__init__", "(", "self", ",", "module_names", ",", "module_factory", ")", ":", "\n", "        ", "self", ".", "_module_names", "=", "module_names", "\n", "self", ".", "_factory", "=", "module_factory", "\n", "self", ".", "_workflow", "=", "self", ".", "get_workflow", "(", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "OUT_DIR", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "OUT_DIR", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.get_workflow": [[24, 34], ["workflow.append", "workflow_interface.WorkflowInterface._factory.get_module"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_module_factory.DefaultModuleFactory.get_module"], ["", "", "def", "get_workflow", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_workflow\n        Gives the  workflow\n        :return: The list of the modules\n        :rtype: List[ModuleInterface]\n        \"\"\"", "\n", "workflow", "=", "[", "]", "\n", "for", "name", "in", "self", ".", "_module_names", ":", "\n", "            ", "workflow", ".", "append", "(", "self", ".", "_factory", ".", "get_module", "(", "name", ")", ")", "\n", "", "return", "workflow", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.generate_input": [[35, 42], ["None"], "methods", ["None"], ["", "def", "generate_input", "(", "self", ")", ":", "\n", "        ", "\"\"\"generate_input\n        Generate the input of the workflow, in general the seeds\n        :return: The input for this workflow\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.run": [[43, 51], ["workflow_interface.WorkflowInterface.run_from"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.run_from"], ["", "def", "run", "(", "self", ",", "input_interface", ",", "save", "=", "False", ")", ":", "\n", "        ", "\"\"\"run\n        Do one pass over the workflow\n        :param input: the input of the workflow\n        :return: the result of the workflow, as an input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "self", ".", "run_from", "(", "input_interface", ",", "save", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.run_from": [[52, 69], ["ValueError", "logging.info", "module.process", "len", "workflow_interface.WorkflowInterface.generate_input", "module.process.save", "workflow_interface.WorkflowInterface._load_last", "str", "module.get_name", "len", "module.process.get_generated_facts", "str", "int", "time.time"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_complete.TestWorkflow.generate_input", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.save", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface._load_last", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "run_from", "(", "self", ",", "input_interface", "=", "None", ",", "save", "=", "False", ",", "idx_from", "=", "0", ")", ":", "\n", "        ", "modules", "=", "self", ".", "_workflow", "\n", "temp_input", "=", "input_interface", "\n", "if", "idx_from", ">=", "len", "(", "modules", ")", "or", "idx_from", "<", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"The index is incorrect\"", ")", "\n", "", "elif", "idx_from", "==", "0", "and", "input_interface", "is", "None", ":", "\n", "            ", "input_interface", "=", "self", ".", "generate_input", "(", ")", "\n", "", "elif", "input_interface", "is", "None", ":", "\n", "            ", "input_interface", "=", "self", ".", "_load_last", "(", "modules", "[", "idx_from", "-", "1", "]", ")", "\n", "", "temp_input", "=", "input_interface", "\n", "for", "module", "in", "modules", "[", "idx_from", ":", "]", ":", "\n", "            ", "logging", ".", "info", "(", "\"We have \"", "+", "str", "(", "len", "(", "temp_input", ".", "get_generated_facts", "(", ")", ")", ")", "+", "\" facts\"", ")", "\n", "temp_input", "=", "module", ".", "process", "(", "temp_input", ")", "\n", "if", "save", ":", "\n", "                ", "temp_input", ".", "save", "(", "OUT_DIR", "+", "\"out_\"", "+", "str", "(", "int", "(", "time", ".", "time", "(", ")", ")", ")", "+", "\"_\"", "+", "\n", "module", ".", "get_name", "(", ")", ")", "\n", "", "", "return", "temp_input", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface._load_last": [[70, 78], ["os.listdir", "workflow_interface.WorkflowInterface.generate_input", "inputs.Inputs", "inputs.Inputs.load", "sorted", "module.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_complete.TestWorkflow.generate_input", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "_load_last", "(", "self", ",", "module", ")", ":", "\n", "        ", "outs", "=", "os", ".", "listdir", "(", "OUT_DIR", ")", "\n", "outs", "=", "[", "x", "for", "x", "in", "outs", "if", "module", ".", "get_name", "(", ")", "in", "x", "]", "\n", "if", "outs", ":", "\n", "            ", "filename", "=", "sorted", "(", "outs", ")", "[", "-", "1", "]", "\n", "in_temp", "=", "Inputs", "(", ")", "\n", "return", "in_temp", ".", "load", "(", "OUT_DIR", "+", "filename", ")", "\n", "", "return", "self", ".", "generate_input", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.__str__": [[79, 85], ["res.append", "res.append", "str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "res", "=", "[", "]", "\n", "res", ".", "append", "(", "\"WORKFLOW\"", ")", "\n", "for", "module", "in", "self", ".", "_workflow", ":", "\n", "            ", "res", ".", "append", "(", "str", "(", "module", ")", ")", "\n", "", "return", "\"\\n\"", ".", "join", "(", "res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.print_index": [[86, 91], ["print", "str", "module.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "print_index", "(", "self", ")", ":", "\n", "        ", "count", "=", "0", "\n", "for", "module", "in", "self", ".", "_workflow", ":", "\n", "            ", "print", "(", "\"[\"", ",", "str", "(", "count", ")", ",", "\"]:\"", ",", "module", ".", "get_name", "(", ")", ")", "\n", "count", "+=", "1", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.change_subject": [[9, 11], ["None"], "methods", ["None"], ["def", "change_subject", "(", "self", ",", "new_subject", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.change_predicate": [[12, 14], ["None"], "methods", ["None"], ["", "def", "change_predicate", "(", "self", ",", "new_predicate", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.change_object": [[15, 17], ["None"], "methods", ["None"], ["", "def", "change_object", "(", "self", ",", "new_object", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.change_modality": [[18, 20], ["None"], "methods", ["None"], ["", "def", "change_modality", "(", "self", ",", "new_modality", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.change_negativity": [[21, 23], ["None"], "methods", ["None"], ["", "def", "change_negativity", "(", "self", ",", "is_negative", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.__init__": [[24, 29], ["fact_interface.FactInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_score", "=", "None", "\n", "self", ".", "_pattern", "=", "None", "# An optional PatternInterface", "\n", "self", ".", "_sentence_source", "=", "\"\"", "# A string", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_score": [[30, 37], ["None"], "methods", ["None"], ["", "def", "get_score", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_score\n        Returns the score of the fact\n        :return: the score\n        :rtype: MultipleScore\n        \"\"\"", "\n", "return", "self", ".", "_score", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern": [[38, 45], ["None"], "methods", ["None"], ["", "def", "get_pattern", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_pattern\n        Returns the pattern from which the fact was extracted, if it exists\n        :return: an optional pattern\n        :rtype: PatternInterface or None\n        \"\"\"", "\n", "return", "self", ".", "_pattern", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source": [[46, 53], ["None"], "methods", ["None"], ["", "def", "get_sentence_source", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_sentence_source\n        Returns the sentence from which the fact was extracted\n        :return: a sentence\n        :rtype: str\n        \"\"\"", "\n", "return", "self", ".", "_sentence_source", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.__str__": [[54, 59], ["str", "generated_fact_interface.GeneratedFactInterface.get_sentence_source", "str", "generated_fact_interface.GeneratedFactInterface.get_pattern", "str", "fact_interface.FactInterface.__str__", "generated_fact_interface.GeneratedFactInterface.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.__str__", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "super", "(", ")", ".", "__str__", "(", ")", "+", "\" Score: \"", "+", "str", "(", "self", ".", "get_score", "(", ")", ")", "+", "\" From pattern: \"", "+", "str", "(", "self", ".", "get_pattern", "(", ")", ")", "+", "\" From sentence: \"", "+", "str", "(", "self", ".", "get_sentence_source", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.__repr__": [[60, 62], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_fact": [[63, 70], ["None"], "methods", ["None"], ["", "def", "get_fact", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_fact\n        Get the fact\n        :return: The fact\n        :rtype: FactInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.change_score": [[71, 80], ["None"], "methods", ["None"], ["", "def", "change_score", "(", "self", ",", "new_score", ")", ":", "\n", "        ", "\"\"\"change_score\n        Change the score of the generated fact\n        :param new_score: the new score to put\n        :type new_score: Float\n        :return: A generated fact with the new score\n        :rtype: GeneratedFactInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.__init__": [[6, 14], ["submodule_reference_interface.SubmoduleReferenceInterface.__init__", "submodule_reference.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["    ", "def", "__init__", "(", "self", ",", "submodule_reference", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\"\"", ")", "\n", "if", "submodule_reference", "is", "None", ":", "\n", "            ", "self", ".", "_name", "=", "\"\"", "\n", "self", ".", "_references", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "_name", "=", "submodule_reference", ".", "get_name", "(", ")", "\n", "self", ".", "_references", "=", "[", "submodule_reference", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference": [[15, 18], ["multiple_submodule_reference.MultipleSubmoduleReference._references.append", "set", "x.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "", "def", "add_reference", "(", "self", ",", "submodule_reference", ")", ":", "\n", "        ", "self", ".", "_references", ".", "append", "(", "submodule_reference", ")", "\n", "self", ".", "_name", "=", "\"; \"", ".", "join", "(", "set", "(", "[", "x", ".", "get_name", "(", ")", "for", "x", "in", "self", ".", "_references", "if", "x", "is", "not", "None", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.is_from": [[19, 21], ["any", "x.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "is_from", "(", "self", ",", "submodule_name", ")", ":", "\n", "        ", "return", "any", "(", "[", "x", ".", "get_name", "(", ")", "==", "submodule_name", "for", "x", "in", "self", ".", "_references", "if", "x", "is", "not", "None", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.to_dict": [[22, 29], ["dict", "res[].append", "reference.to_dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict"], ["", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"MultipleSubmoduleReference\"", "\n", "res", "[", "\"references\"", "]", "=", "[", "]", "\n", "for", "reference", "in", "self", ".", "_references", ":", "\n", "            ", "res", "[", "\"references\"", "]", ".", "append", "(", "reference", ".", "to_dict", "(", ")", ")", "\n", "", "return", "res", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality_interface.ModalityInterface.__init__": [[9, 11], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_modality", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality_interface.ModalityInterface.get": [[12, 14], ["None"], "methods", ["None"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_modality", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.__init__": [[22, 29], ["input_interface.InputInterface.__init__", "set"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ",", "seeds", "=", "None", ",", "patterns", "=", "None", ",", "generated_facts", "=", "None", ",", "subjects", "=", "None", ",", "objs", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_seeds", "=", "seeds", "or", "[", "]", "\n", "self", ".", "_patterns", "=", "patterns", "or", "[", "]", "\n", "self", ".", "_generated_facts", "=", "generated_facts", "or", "[", "]", "\n", "self", ".", "_subjects", "=", "subjects", "or", "set", "(", ")", "\n", "self", ".", "_objects", "=", "objs", "or", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.add_patterns": [[30, 39], ["inputs.Inputs.replace_patterns", "inputs.Inputs.get_patterns"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns"], ["", "def", "add_patterns", "(", "self", ",", "new_patterns", ")", ":", "\n", "        ", "\"\"\"add_patterns\n        Adds patterns to the input\n        :param new_patterns: the patterns to add\n        :type new_patterns: List[PatternInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "self", ".", "replace_patterns", "(", "self", ".", "get_patterns", "(", ")", "+", "new_patterns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.add_seeds": [[40, 49], ["inputs.Inputs.replace_seeds", "inputs.Inputs.get_seeds"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_seeds"], ["", "def", "add_seeds", "(", "self", ",", "new_seeds", ")", ":", "\n", "        ", "\"\"\"add_seeds\n        Adds seeds to the input\n        :param new_seeds: the patterns to add\n        :type new_seeds: List[FactInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "self", ".", "replace_seeds", "(", "self", ".", "get_seeds", "(", ")", "+", "new_seeds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.add_generated_facts": [[50, 60], ["inputs.Inputs.replace_generated_facts", "inputs.Inputs.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "add_generated_facts", "(", "self", ",", "new_generated_facts", ")", ":", "\n", "        ", "\"\"\"add_generated_facts\n        Adds generated facts to the input\n        :param new_generated_facts: the generated facts to add\n        :type new_generated_facts: List[GeneratedFactInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "self", ".", "replace_generated_facts", "(", "self", ".", "get_generated_facts", "(", ")", "+", "\n", "new_generated_facts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.add_subjects": [[61, 70], ["inputs.Inputs.replace_subjects", "inputs.Inputs.get_subjects().union", "set", "inputs.Inputs.get_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects"], ["", "def", "add_subjects", "(", "self", ",", "new_subjects", ")", ":", "\n", "        ", "\"\"\"add_subjects\n        Adds subjects to the input\n        :param new_subjects: the subjects to add\n        :type new_subjects: List[SubjectInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "self", ".", "replace_subjects", "(", "self", ".", "get_subjects", "(", ")", ".", "union", "(", "set", "(", "new_subjects", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.add_objects": [[71, 80], ["inputs.Inputs.replace_objects", "inputs.Inputs.get_objects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_objects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_objects"], ["", "def", "add_objects", "(", "self", ",", "new_objects", ")", ":", "\n", "        ", "\"\"\"add_objects\n        Adds objects to the input\n        :param new_objects: the objects to add\n        :type new_objects: List[ObjectInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "self", ".", "replace_objects", "(", "self", ".", "get_objects", "(", ")", "+", "new_objects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.replace_seeds": [[81, 94], ["inputs.Inputs", "inputs.Inputs.get_patterns", "inputs.Inputs.get_generated_facts", "inputs.Inputs.get_subjects", "inputs.Inputs.get_objects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_objects"], ["", "def", "replace_seeds", "(", "self", ",", "new_seeds", ")", ":", "\n", "        ", "\"\"\"replace_seeds\n        Replaces seeds to the input\n        :param new_seeds: the patterns to replace\n        :type new_seeds: List[FactInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "Inputs", "(", "new_seeds", ",", "\n", "self", ".", "get_patterns", "(", ")", ",", "\n", "self", ".", "get_generated_facts", "(", ")", ",", "\n", "self", ".", "get_subjects", "(", ")", ",", "\n", "self", ".", "get_objects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.replace_patterns": [[95, 108], ["inputs.Inputs", "inputs.Inputs.get_seeds", "inputs.Inputs.get_generated_facts", "inputs.Inputs.get_subjects", "inputs.Inputs.get_objects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_objects"], ["", "def", "replace_patterns", "(", "self", ",", "new_patterns", ")", ":", "\n", "        ", "\"\"\"replace_patterns\n        Replaces patterns to the input\n        :param new_patterns: the patterns to replace\n        :type new_patterns: List[PatternInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "Inputs", "(", "self", ".", "get_seeds", "(", ")", ",", "\n", "new_patterns", ",", "\n", "self", ".", "get_generated_facts", "(", ")", ",", "\n", "self", ".", "get_subjects", "(", ")", ",", "\n", "self", ".", "get_objects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.replace_generated_facts": [[109, 122], ["inputs.Inputs", "inputs.Inputs.get_seeds", "inputs.Inputs.get_patterns", "inputs.Inputs.get_subjects", "inputs.Inputs.get_objects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_objects"], ["", "def", "replace_generated_facts", "(", "self", ",", "new_generated_facts", ")", ":", "\n", "        ", "\"\"\"replace_generated_facts\n        Replaces generated facts to the input\n        :param new_generated_facts: the generated facts to replace\n        :type new_generated_facts: List[GeneratedFactInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "Inputs", "(", "self", ".", "get_seeds", "(", ")", ",", "\n", "self", ".", "get_patterns", "(", ")", ",", "\n", "new_generated_facts", ",", "\n", "self", ".", "get_subjects", "(", ")", ",", "\n", "self", ".", "get_objects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.replace_subjects": [[123, 136], ["inputs.Inputs", "inputs.Inputs.get_seeds", "inputs.Inputs.get_patterns", "inputs.Inputs.get_generated_facts", "set", "inputs.Inputs.get_objects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_objects"], ["", "def", "replace_subjects", "(", "self", ",", "new_subjects", ")", ":", "\n", "        ", "\"\"\"replace_subjects\n        Replaces subjects to the input\n        :param new_subjects: the subjects to replace\n        :type new_subjects: List[SubjectInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "Inputs", "(", "self", ".", "get_seeds", "(", ")", ",", "\n", "self", ".", "get_patterns", "(", ")", ",", "\n", "self", ".", "get_generated_facts", "(", ")", ",", "\n", "set", "(", "new_subjects", ")", ",", "\n", "self", ".", "get_objects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.replace_objects": [[137, 150], ["inputs.Inputs", "inputs.Inputs.get_seeds", "inputs.Inputs.get_patterns", "inputs.Inputs.get_generated_facts", "inputs.Inputs.get_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects"], ["", "def", "replace_objects", "(", "self", ",", "new_objects", ")", ":", "\n", "        ", "\"\"\"replace_objects\n        Replaces objects to the input\n        :param new_objects: the objects to replace\n        :type new_objects: List[ObjectInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "return", "Inputs", "(", "self", ".", "get_seeds", "(", ")", ",", "\n", "self", ".", "get_patterns", "(", ")", ",", "\n", "self", ".", "get_generated_facts", "(", ")", ",", "\n", "self", ".", "get_subjects", "(", ")", ",", "\n", "new_objects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.save": [[151, 168], ["dict", "x.to_dict", "x.to_dict", "x.to_dict", "x.to_dict", "x.to_dict", "open", "json.dump"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict"], ["", "def", "save", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"save\n        Saves the object into a file\n        :param filename: the file where to save the object\n        :type filename: str\n        :return: True\n        :rtype: bool\n        \"\"\"", "\n", "dump", "=", "dict", "(", ")", "\n", "dump", "[", "SEEDS", "]", "=", "[", "x", ".", "to_dict", "(", ")", "for", "x", "in", "self", ".", "_seeds", "]", "\n", "dump", "[", "PATTERNS", "]", "=", "[", "x", ".", "to_dict", "(", ")", "for", "x", "in", "self", ".", "_patterns", "]", "\n", "dump", "[", "GENERATED_FACTS", "]", "=", "[", "x", ".", "to_dict", "(", ")", "for", "x", "in", "self", ".", "_generated_facts", "]", "\n", "dump", "[", "SUBJECTS", "]", "=", "[", "x", ".", "to_dict", "(", ")", "for", "x", "in", "self", ".", "_subjects", "]", "\n", "dump", "[", "OBJECTS", "]", "=", "[", "x", ".", "to_dict", "(", ")", "for", "x", "in", "self", ".", "_objects", "]", "\n", "with", "open", "(", "filename", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "dump", ",", "f", ")", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.inputs.Inputs.load": [[169, 187], ["inputs.Inputs", "open", "json.load", "read_input.replace_objects.replace_objects.replace_seeds", "read_input.replace_objects.replace_objects.replace_patterns", "read_input.replace_objects.replace_objects.replace_generated_facts", "read_input.replace_objects.replace_objects.replace_subjects", "read_input.replace_objects.replace_objects.replace_objects", "quasimodo.serialized_object_reader.read_seeds", "quasimodo.serialized_object_reader.read_patterns", "quasimodo.serialized_object_reader.read_generated_facts", "quasimodo.serialized_object_reader.read_subjects", "quasimodo.serialized_object_reader.read_objects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_objects", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_objects"], ["", "def", "load", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"load\n        Loads an input\n        :param filename: the file containing the input\n        :type filename: str\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "read_input", "=", "Inputs", "(", ")", "\n", "with", "open", "(", "filename", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "input_json", "=", "json", ".", "load", "(", "f", ")", "\n", "read_input", "=", "read_input", ".", "replace_seeds", "(", "serialized_object_reader", ".", "read_seeds", "(", "input_json", "[", "SEEDS", "]", ")", ")", "\n", "read_input", "=", "read_input", ".", "replace_patterns", "(", "serialized_object_reader", ".", "read_patterns", "(", "input_json", "[", "PATTERNS", "]", ")", ")", "\n", "read_input", "=", "read_input", ".", "replace_generated_facts", "(", "\n", "serialized_object_reader", ".", "read_generated_facts", "(", "input_json", "[", "GENERATED_FACTS", "]", ")", ")", "\n", "read_input", "=", "read_input", ".", "replace_subjects", "(", "serialized_object_reader", ".", "read_subjects", "(", "input_json", "[", "SUBJECTS", "]", ")", ")", "\n", "read_input", "=", "read_input", ".", "replace_objects", "(", "serialized_object_reader", ".", "read_objects", "(", "input_json", "[", "OBJECTS", "]", ")", ")", "\n", "", "return", "read_input", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.object_interface.ObjectInterface.__init__": [[9, 11], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_object", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.object_interface.ObjectInterface.get": [[12, 14], ["None"], "methods", ["None"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_object", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_reference_interface.SubmoduleReferenceInterface.to_dict": [[10, 15], ["dict", "submodule_reference_interface.SubmoduleReferenceInterface.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"SubmoduleReference\"", "\n", "res", "[", "\"name\"", "]", "=", "self", ".", "get_name", "(", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_reference_interface.SubmoduleReferenceInterface.__init__": [[16, 18], ["referencable_interface.ReferencableInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ",", "name", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "name", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.predicate.Predicate.to_dict": [[10, 15], ["dict", "predicate.Predicate.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"Predicate\"", "\n", "res", "[", "\"value\"", "]", "=", "self", ".", "get", "(", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.predicate.Predicate.__init__": [[16, 19], ["predicate_interface.PredicateInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ",", "predicate", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_predicate", "=", "predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.predicate.Predicate.get_natural_representation": [[20, 28], ["predicate.Predicate.get().startswith", "predicate.Predicate.get().startswith", "predicate.Predicate.get", "predicate.Predicate.get", "predicate.Predicate.get", "predicate.Predicate.get", "predicate.Predicate.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_natural_representation", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "get", "(", ")", "==", "\"has_body_part\"", ":", "\n", "            ", "return", "\"have\"", "\n", "", "if", "self", ".", "get", "(", ")", ".", "startswith", "(", "\"has_\"", ")", ":", "\n", "            ", "return", "\"are\"", "\n", "", "if", "self", ".", "get", "(", ")", ".", "startswith", "(", "\"be \"", ")", ":", "\n", "            ", "return", "\"are \"", "+", "self", ".", "get", "(", ")", "[", "3", ":", "]", "\n", "", "return", "self", ".", "get", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.module_interface.ModuleInterface.process": [[10, 12], ["None"], "methods", ["None"], ["def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.module_interface.ModuleInterface.__init__": [[13, 22], ["module_interface.ModuleInterface._get_submodules"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.module_interface.ModuleInterface._get_submodules"], ["", "def", "__init__", "(", "self", ",", "submodules_names", ",", "submodules_factory", ")", ":", "\n", "        ", "self", ".", "_submodules", "=", "[", "]", "\n", "# The submodules names are used during the generation of the submodules", "\n", "# The order is conserved", "\n", "self", ".", "_submodules_names", "=", "submodules_names", "\n", "# To create the submodules", "\n", "self", ".", "_submodules_factory", "=", "submodules_factory", "\n", "# Initialize the submodules", "\n", "self", ".", "_submodules", "=", "self", ".", "_get_submodules", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.module_interface.ModuleInterface._get_submodules": [[23, 34], ["submodules.append", "module_interface.ModuleInterface._submodules_factory.get_submodule"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_factory_interface.SubmoduleFactoryInterface.get_submodule"], ["", "def", "_get_submodules", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_submodules\n        Generates the submodules of this module\n        :return: the submodules\n        :rtype: List[SubmoduleInterface]\n        \"\"\"", "\n", "submodules", "=", "[", "]", "\n", "for", "name", "in", "self", ".", "_submodules_names", ":", "\n", "            ", "submodules", ".", "append", "(", "self", ".", "_submodules_factory", ".", "get_submodule", "(", "name", ",", "\n", "self", ")", ")", "\n", "", "return", "submodules", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.module_interface.ModuleInterface.__str__": [[35, 40], ["res.append", "module_interface.ModuleInterface.get_name", "str"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "res", "=", "[", "\"--> MODULE: \"", "+", "self", ".", "get_name", "(", ")", "]", "\n", "for", "submodule", "in", "self", ".", "_submodules", ":", "\n", "            ", "res", ".", "append", "(", "str", "(", "submodule", ")", ")", "\n", "", "return", "\"\\n\"", ".", "join", "(", "res", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_interface.SubmoduleInterface.__init__": [[10, 12], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_module_reference", "=", "None", "# ModuleReferenceInterface", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_interface.SubmoduleInterface.__str__": [[13, 15], ["submodule_interface.SubmoduleInterface.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"----> SUBMODULE: \"", "+", "self", ".", "get_name", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_interface.SubmoduleInterface.clean": [[16, 18], ["None"], "methods", ["None"], ["", "def", "clean", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.__init__": [[9, 15], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_subject", "=", "None", "# SubjectInterface", "\n", "self", ".", "_predicate", "=", "None", "# PredicateInterface", "\n", "self", ".", "_object", "=", "None", "# ObjectInterface", "\n", "self", ".", "_modality", "=", "None", "# Optinal ModalityInterface", "\n", "self", ".", "_negative", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject": [[16, 23], ["None"], "methods", ["None"], ["", "def", "get_subject", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_subject\n        The subject of the fact\n        :return: The subject\n        :rtype: SubjectInterface\n        \"\"\"", "\n", "return", "self", ".", "_subject", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate": [[24, 31], ["None"], "methods", ["None"], ["", "def", "get_predicate", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_predicate\n        Gives the predicate of the fact\n        :return: the predicate\n        :rtype: PredicateInterface\n        \"\"\"", "\n", "return", "self", ".", "_predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object": [[32, 39], ["None"], "methods", ["None"], ["", "def", "get_object", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_object\n        Gives the object of the fact\n        :return: the object\n        :rtype: ObjectInterface\n        \"\"\"", "\n", "return", "self", ".", "_object", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_modality": [[40, 47], ["None"], "methods", ["None"], ["", "def", "get_modality", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_modality\n        Gives the modality of the fact\n        :return: the optional modality\n        :rtype: ModalityInterface or None\n        \"\"\"", "\n", "return", "self", ".", "_modality", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.has_modality": [[48, 55], ["None"], "methods", ["None"], ["", "def", "has_modality", "(", "self", ")", ":", "\n", "        ", "\"\"\"has_modality\n        Whether the fact has a modality\n        :return: has the fact a modality\n        :rtype: Boolean\n        \"\"\"", "\n", "return", "self", ".", "_modality", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.is_negative": [[56, 62], ["None"], "methods", ["None"], ["", "def", "is_negative", "(", "self", ")", ":", "\n", "        ", "\"\"\"is_negative\n        :return: whether the fact is negative or not\n        :rtype: bool\n        \"\"\"", "\n", "return", "self", ".", "_negative", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_po": [[63, 69], ["str", "str.startswith", "str"], "methods", ["None"], ["", "def", "get_po", "(", "self", ")", ":", "\n", "        ", "\"\"\"Get combination of P and O\"\"\"", "\n", "predicate", "=", "str", "(", "self", ".", "_predicate", ")", "\n", "if", "predicate", ".", "startswith", "(", "\"has_property\"", ")", ":", "\n", "            ", "predicate", "=", "\"be\"", "\n", "", "return", "predicate", "+", "\" \"", "+", "str", "(", "self", ".", "_object", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.__str__": [[70, 81], ["fact_interface.FactInterface.is_negative", "fact_interface.FactInterface.has_modality", "str", "str", "fact_interface.FactInterface.get_object", "fact_interface.FactInterface.get_modality", "str", "str", "fact_interface.FactInterface.get_predicate", "fact_interface.FactInterface.get_object", "str", "str", "fact_interface.FactInterface.get_subject", "fact_interface.FactInterface.get_predicate", "str", "fact_interface.FactInterface.get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.has_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "negation", "=", "\"\"", "\n", "if", "self", ".", "is_negative", "(", ")", ":", "\n", "            ", "negation", "=", "\"not \"", "\n", "", "if", "self", ".", "has_modality", "(", ")", ":", "\n", "            ", "return", "negation", "+", "\"(\"", "+", "str", "(", "self", ".", "get_subject", "(", ")", ")", "+", "\", \"", "+", "str", "(", "self", ".", "get_predicate", "(", ")", ")", "+", "\", \"", "+", "str", "(", "self", ".", "get_object", "(", ")", ")", "+", "\")[\"", "+", "str", "(", "self", ".", "get_modality", "(", ")", ")", "+", "\"]\"", "\n", "", "return", "negation", "+", "\"(\"", "+", "str", "(", "self", ".", "get_subject", "(", ")", ")", "+", "\", \"", "+", "str", "(", "self", ".", "get_predicate", "(", ")", ")", "+", "\", \"", "+", "str", "(", "self", ".", "get_object", "(", ")", ")", "+", "\")\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.__repr__": [[82, 84], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.__hash__": [[85, 90], ["hash", "hash", "fact_interface.FactInterface.is_negative", "hash", "hash", "fact_interface.FactInterface.get_po", "fact_interface.FactInterface.get_subject", "fact_interface.FactInterface.get_modality"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_po", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality"], ["", "def", "__hash__", "(", "self", ")", ":", "\n", "        ", "return", "hash", "(", "self", ".", "get_subject", "(", ")", ")", "+", "hash", "(", "self", ".", "get_modality", "(", ")", ")", "+", "hash", "(", "self", ".", "get_po", "(", ")", ")", "+", "hash", "(", "self", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.__eq__": [[91, 98], ["isinstance", "fact_interface.FactInterface.get_subject", "other.get_subject", "fact_interface.FactInterface.get_po", "other.get_po", "fact_interface.FactInterface.get_modality", "other.get_modality", "fact_interface.FactInterface.is_negative", "other.is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_po", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_po", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "__eq__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "other", ",", "FactInterface", ")", ":", "\n", "            ", "return", "False", "\n", "", "return", "self", ".", "get_subject", "(", ")", "==", "other", ".", "get_subject", "(", ")", "and", "self", ".", "get_po", "(", ")", "==", "other", ".", "get_po", "(", ")", "and", "self", ".", "get_modality", "(", ")", "==", "other", ".", "get_modality", "(", ")", "and", "self", ".", "is_negative", "(", ")", "==", "other", ".", "is_negative", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.change_subject": [[99, 108], ["None"], "methods", ["None"], ["", "def", "change_subject", "(", "self", ",", "new_subject", ")", ":", "\n", "        ", "\"\"\"change_subject\n        Return a new fact with the subject changed\n        :param new_subject: the new subject to put\n        :type new_subject: str or SubjectInterface\n        :return: the new fact\n        :rtype: FactInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.change_predicate": [[109, 118], ["None"], "methods", ["None"], ["", "def", "change_predicate", "(", "self", ",", "new_predicate", ")", ":", "\n", "        ", "\"\"\"change_predicate\n        Change the predicate of the fact\n        :param new_predicate: the predicate to write\n        :type new_predicate: str or PredicateInterface\n        :return: a new fact\n        :rtype: FactInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.change_object": [[119, 128], ["None"], "methods", ["None"], ["", "def", "change_object", "(", "self", ",", "new_object", ")", ":", "\n", "        ", "\"\"\"change_object\n        Change the object of the fact\n        :param new_object: the object to update\n        :type new_object: str or ObjectInterface\n        :return: a new fact\n        :rtype: FactInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.change_modality": [[129, 138], ["None"], "methods", ["None"], ["", "def", "change_modality", "(", "self", ",", "new_modality", ")", ":", "\n", "        ", "\"\"\"change_modality\n        Change the modality of the fact\n        :param new_modality: the new modality to update\n        :type new_modality: str or ModalityInterface\n        :return: a new fact\n        :rtype: FactInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.to_dict": [[6, 17], ["dict", "res[].append", "score[].to_dict", "score[].to_dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict"], ["    ", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"MultipleScore\"", "\n", "res", "[", "\"scores\"", "]", "=", "[", "]", "\n", "for", "score", "in", "self", ".", "scores", ":", "\n", "            ", "res", "[", "\"scores\"", "]", ".", "append", "(", "\n", "{", "\"score\"", ":", "score", "[", "0", "]", ",", "\n", "\"module_from\"", ":", "score", "[", "1", "]", ".", "to_dict", "(", ")", ",", "\n", "\"submodule_from\"", ":", "score", "[", "2", "]", ".", "to_dict", "(", ")", "}", "\n", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.__init__": [[18, 20], ["None"], "methods", ["None"], ["", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "scores", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score": [[21, 23], ["multiple_scores.MultipleScore.scores.append"], "methods", ["None"], ["", "def", "add_score", "(", "self", ",", "score", ",", "module_from", ",", "submodule_from", ")", ":", "\n", "        ", "self", ".", "scores", ".", "append", "(", "(", "score", ",", "module_from", ",", "submodule_from", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.__add__": [[24, 29], ["multiple_scores.MultipleScore", "multiple_scores.MultipleScore.add_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score"], ["", "def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "new_scores", "=", "MultipleScore", "(", ")", "\n", "for", "score", "in", "self", ".", "scores", "+", "other", ".", "scores", ":", "\n", "            ", "new_scores", ".", "add_score", "(", "score", "[", "0", "]", ",", "score", "[", "1", "]", ",", "score", "[", "2", "]", ")", "\n", "", "return", "new_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add": [[30, 33], ["multiple_scores.MultipleScore.add_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score"], ["", "def", "add", "(", "self", ",", "other", ")", ":", "\n", "        ", "for", "score", "in", "other", ".", "scores", ":", "\n", "            ", "self", ".", "add_score", "(", "score", "[", "0", "]", ",", "score", "[", "1", "]", ",", "score", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.__str__": [[34, 36], ["map"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"MultipleScore(\"", "+", "\" // \"", ".", "join", "(", "[", "\", \"", ".", "join", "(", "map", "(", "str", ",", "x", ")", ")", "for", "x", "in", "self", ".", "scores", "]", ")", "+", "\")\"", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.submodule_factory_interface.SubmoduleFactoryInterface.get_submodule": [[6, 15], ["None"], "methods", ["None"], ["def", "get_submodule", "(", "self", ",", "submodule_name", ",", "module_reference", ")", ":", "\n", "        ", "\"\"\"get_submodule\n        Returns a submodule given a name\n        :param submodule_name: The name of the submodule\n        :type submodule_name: str\n        :return: A submodule\n        :rtype: SubmoduleInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.object.Object.to_dict": [[10, 15], ["dict", "object.Object.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"Object\"", "\n", "res", "[", "\"value\"", "]", "=", "self", ".", "get", "(", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.object.Object.__init__": [[16, 19], ["object_interface.ObjectInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ",", "obj", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_object", "=", "obj", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.to_dict": [[18, 36], ["dict", "generated_fact.GeneratedFact._subject.to_dict", "generated_fact.GeneratedFact._predicate.to_dict", "generated_fact.GeneratedFact._object.to_dict", "generated_fact.GeneratedFact._score.to_dict", "generated_fact.GeneratedFact._sentence_source.to_dict", "generated_fact.GeneratedFact._modality.to_dict", "generated_fact.GeneratedFact._pattern.to_dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict"], ["def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"GeneratedFact\"", "\n", "res", "[", "\"subject\"", "]", "=", "self", ".", "_subject", ".", "to_dict", "(", ")", "\n", "res", "[", "\"predicate\"", "]", "=", "self", ".", "_predicate", ".", "to_dict", "(", ")", "\n", "res", "[", "\"object\"", "]", "=", "self", ".", "_object", ".", "to_dict", "(", ")", "\n", "if", "self", ".", "_modality", "is", "not", "None", ":", "\n", "            ", "res", "[", "\"modality\"", "]", "=", "self", ".", "_modality", ".", "to_dict", "(", ")", "\n", "", "else", ":", "\n", "            ", "res", "[", "\"modality\"", "]", "=", "{", "\"type\"", ":", "\"NO_MODALITY\"", "}", "\n", "", "res", "[", "\"negative\"", "]", "=", "self", ".", "_negative", "\n", "res", "[", "\"score\"", "]", "=", "self", ".", "_score", ".", "to_dict", "(", ")", "\n", "res", "[", "\"sentence_source\"", "]", "=", "self", ".", "_sentence_source", ".", "to_dict", "(", ")", "\n", "if", "self", ".", "_pattern", "is", "not", "None", ":", "\n", "            ", "res", "[", "\"pattern\"", "]", "=", "self", ".", "_pattern", ".", "to_dict", "(", ")", "\n", "", "else", ":", "\n", "            ", "res", "[", "\"pattern\"", "]", "=", "{", "\"type\"", ":", "\"NO_PATTERN\"", "}", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.__init__": [[37, 61], ["generated_fact_interface.GeneratedFactInterface.__init__", "type", "subject.Subject", "type", "predicate.Predicate", "type", "object.Object", "modality.Modality", "type", "modality.Modality"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ",", "subject", ",", "predicate", ",", "obj", ",", "modality", ",", "negative", ",", "score", ",", "sentence_source", ",", "pattern", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "type", "(", "subject", ")", "==", "str", ":", "\n", "            ", "self", ".", "_subject", "=", "Subject", "(", "subject", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_subject", "=", "subject", "# SubjectInterface", "\n", "", "if", "type", "(", "predicate", ")", "==", "str", ":", "\n", "            ", "self", ".", "_predicate", "=", "Predicate", "(", "predicate", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_predicate", "=", "predicate", "# PredicateInterface", "\n", "", "if", "type", "(", "obj", ")", "==", "str", ":", "\n", "            ", "self", ".", "_object", "=", "Object", "(", "obj", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_object", "=", "obj", "# ObjectInterface", "\n", "", "if", "modality", "is", "None", ":", "\n", "            ", "self", ".", "_modality", "=", "Modality", "(", ")", "\n", "", "elif", "type", "(", "modality", ")", "==", "str", ":", "\n", "            ", "self", ".", "_modality", "=", "Modality", "(", "modality", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_modality", "=", "modality", "# Optional ModalityInterface", "\n", "", "self", ".", "_negative", "=", "negative", "\n", "self", ".", "_score", "=", "score", "\n", "self", ".", "_sentence_source", "=", "sentence_source", "\n", "self", ".", "_pattern", "=", "pattern", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_fact": [[62, 68], ["fact.Fact", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "get_fact", "(", "self", ")", ":", "\n", "        ", "return", "Fact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_subject": [[69, 78], ["generated_fact.GeneratedFact", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.is_negative", "generated_fact.GeneratedFact.get_score", "generated_fact.GeneratedFact.get_sentence_source", "generated_fact.GeneratedFact.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "def", "change_subject", "(", "self", ",", "new_subject", ")", ":", "\n", "        ", "return", "GeneratedFact", "(", "new_subject", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ",", "\n", "self", ".", "get_score", "(", ")", ",", "\n", "self", ".", "get_sentence_source", "(", ")", ",", "\n", "self", ".", "get_pattern", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_predicate": [[79, 88], ["generated_fact.GeneratedFact", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.is_negative", "generated_fact.GeneratedFact.get_score", "generated_fact.GeneratedFact.get_sentence_source", "generated_fact.GeneratedFact.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "def", "change_predicate", "(", "self", ",", "new_predicate", ")", ":", "\n", "        ", "return", "GeneratedFact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "new_predicate", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ",", "\n", "self", ".", "get_score", "(", ")", ",", "\n", "self", ".", "get_sentence_source", "(", ")", ",", "\n", "self", ".", "get_pattern", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_object": [[89, 98], ["generated_fact.GeneratedFact", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.is_negative", "generated_fact.GeneratedFact.get_score", "generated_fact.GeneratedFact.get_sentence_source", "generated_fact.GeneratedFact.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "def", "change_object", "(", "self", ",", "new_object", ")", ":", "\n", "        ", "return", "GeneratedFact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "new_object", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ",", "\n", "self", ".", "get_score", "(", ")", ",", "\n", "self", ".", "get_sentence_source", "(", ")", ",", "\n", "self", ".", "get_pattern", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_modality": [[99, 108], ["generated_fact.GeneratedFact", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.is_negative", "generated_fact.GeneratedFact.get_score", "generated_fact.GeneratedFact.get_sentence_source", "generated_fact.GeneratedFact.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "def", "change_modality", "(", "self", ",", "new_modality", ")", ":", "\n", "        ", "return", "GeneratedFact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "new_modality", ",", "\n", "self", ".", "is_negative", "(", ")", ",", "\n", "self", ".", "get_score", "(", ")", ",", "\n", "self", ".", "get_sentence_source", "(", ")", ",", "\n", "self", ".", "get_pattern", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_negativity": [[109, 118], ["generated_fact.GeneratedFact", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.get_score", "generated_fact.GeneratedFact.get_sentence_source", "generated_fact.GeneratedFact.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "def", "change_negativity", "(", "self", ",", "is_negative", ")", ":", "\n", "        ", "return", "GeneratedFact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "is_negative", ",", "\n", "self", ".", "get_score", "(", ")", ",", "\n", "self", ".", "get_sentence_source", "(", ")", ",", "\n", "self", ".", "get_pattern", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_score": [[119, 135], ["generated_fact.GeneratedFact", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.is_negative", "generated_fact.GeneratedFact.get_sentence_source", "generated_fact.GeneratedFact.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "def", "change_score", "(", "self", ",", "new_score", ")", ":", "\n", "        ", "\"\"\"change_score\n        Change the score of the generated fact\n        :param new_score: the new score to put\n        :type new_score: Float\n        :return: A generated fact with the new score\n        :rtype: GeneratedFactInterface\n        \"\"\"", "\n", "return", "GeneratedFact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ",", "\n", "new_score", ",", "\n", "self", ".", "get_sentence_source", "(", ")", ",", "\n", "self", ".", "get_pattern", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_pattern": [[136, 145], ["generated_fact.GeneratedFact", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.is_negative", "generated_fact.GeneratedFact.get_score", "generated_fact.GeneratedFact.get_sentence_source"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source"], ["", "def", "change_pattern", "(", "self", ",", "new_pattern", ")", ":", "\n", "        ", "return", "GeneratedFact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ",", "\n", "self", ".", "get_score", "(", ")", ",", "\n", "self", ".", "get_sentence_source", "(", ")", ",", "\n", "new_pattern", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_sentence": [[146, 155], ["generated_fact.GeneratedFact", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.is_negative", "generated_fact.GeneratedFact.get_score", "generated_fact.GeneratedFact.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "def", "change_sentence", "(", "self", ",", "new_sentence", ")", ":", "\n", "        ", "return", "GeneratedFact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ",", "\n", "self", ".", "get_score", "(", ")", ",", "\n", "new_sentence", ",", "\n", "self", ".", "get_pattern", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.remove_sentence": [[156, 165], ["generated_fact.GeneratedFact", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.is_negative", "generated_fact.GeneratedFact.get_score", "multiple_source_occurrence.MultipleSourceOccurrence", "generated_fact.GeneratedFact.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "def", "remove_sentence", "(", "self", ")", ":", "\n", "        ", "return", "GeneratedFact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ",", "\n", "self", ".", "get_score", "(", ")", ",", "\n", "MultipleSourceOccurrence", "(", ")", ",", "\n", "self", ".", "get_pattern", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_tsv": [[166, 174], ["generated_fact.GeneratedFact.get_subject().get", "generated_fact.GeneratedFact.get_predicate().get", "generated_fact.GeneratedFact.get_object().get", "str", "str", "str", "generated_fact.GeneratedFact.get_modality().get", "int", "generated_fact.GeneratedFact.get_sentence_source", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.GeneratedFact.is_negative", "generated_fact.GeneratedFact.get_modality", "generated_fact.GeneratedFact.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "get_tsv", "(", "self", ")", ":", "\n", "        ", "return", "\"\\t\"", ".", "join", "(", "(", "self", ".", "get_subject", "(", ")", ".", "get", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ".", "get", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ".", "get", "(", ")", "or", "\" \"", ",", "\n", "str", "(", "int", "(", "self", ".", "is_negative", "(", ")", ")", ")", ",", "\n", "str", "(", "self", ".", "get_score", "(", ")", ".", "scores", "[", "0", "]", "[", "0", "]", ")", ",", "\n", "str", "(", "self", ".", "get_sentence_source", "(", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.contains_a_verb_in_predicate": [[175, 195], ["generated_fact.GeneratedFact.get_subject().get", "generated_fact.GeneratedFact.get_predicate().get", "generated_fact.GeneratedFact.get_object().get", "generated_fact.GeneratedFact.split", "generated_fact.GeneratedFact.count", "quasimodo.spacy_accessor.get_default_annotator", "quasimodo.spacy_accessor.get_default_annotator.annotate", "any", "generated_fact.GeneratedFact.get_subject", "generated_fact.GeneratedFact.get_predicate", "generated_fact.GeneratedFact.get_object", "generated_fact.can_be_verb"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.get_default_annotator", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.annotate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.can_be_verb"], ["", "def", "contains_a_verb_in_predicate", "(", "self", ")", ":", "\n", "        ", "subject", "=", "self", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "predicate", "=", "self", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "obj", "=", "self", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "predicate_parts", "=", "predicate", ".", "split", "(", "\" \"", ")", "\n", "if", "not", "any", "(", "[", "can_be_verb", "(", "x", ")", "for", "x", "in", "predicate_parts", "]", ")", ":", "\n", "            ", "return", "False", "\n", "", "n_words_subject", "=", "subject", ".", "count", "(", "\" \"", ")", "\n", "spacy_annotator", "=", "get_default_annotator", "(", ")", "\n", "annotations", "=", "spacy_annotator", ".", "annotate", "(", "subject", "+", "\" \"", "+", "predicate", "+", "\" \"", "+", "obj", ")", "\n", "counter", "=", "0", "\n", "contains_verb", "=", "False", "\n", "for", "token", "in", "annotations", ":", "\n", "            ", "if", "counter", "<", "n_words_subject", ":", "\n", "                ", "counter", "+=", "1", "\n", "", "else", ":", "\n", "                ", "if", "token", ".", "text", "in", "predicate", "and", "(", "token", ".", "pos_", "==", "\"VERB\"", "or", "\n", "token", ".", "pos_", "==", "\"AUX\"", ")", ":", "\n", "                    ", "contains_verb", "=", "True", "\n", "", "", "", "return", "contains_verb", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.can_be_verb": [[197, 202], ["nltk.corpus.wordnet.synsets", "synset.pos"], "function", ["None"], ["", "", "def", "can_be_verb", "(", "word", ")", ":", "\n", "    ", "for", "synset", "in", "wn", ".", "synsets", "(", "word", ")", ":", "\n", "        ", "if", "synset", ".", "pos", "(", ")", "==", "\"v\"", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.process_interface.ProcessInterface.process": [[6, 15], ["None"], "methods", ["None"], ["def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "\"\"\"process\n        Do the processing\n        :param input_interface: the input to process\n        :type input_interface: InputInterface\n        :return: the result of the processing\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.__init__": [[6, 11], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_score", "=", "0.0", "# a float", "\n", "self", ".", "_relation", "=", "None", "\n", "self", ".", "_group", "=", "\"\"", "\n", "self", ".", "_negative", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.match": [[12, 21], ["None"], "methods", ["None"], ["", "def", "match", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "\"\"\"match\n        Whether a sentence match the current pattern\n        :param sentence: The sentence to check\n        :type sentence: str\n        :return: whether the sentence matches or not\n        :rtype: Boolean\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.score_sentence": [[22, 31], ["None"], "methods", ["None"], ["", "def", "score_sentence", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "\"\"\"score_sentence\n        Gives a score to a sentence\n        :param sentence: a sentence to score\n        :type sentence: str\n        :return: the score of the sentence\n        :rtype: float\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.to_str": [[32, 39], ["None"], "methods", ["None"], ["", "def", "to_str", "(", "self", ")", ":", "\n", "        ", "\"\"\"to_str\n        Gets a string representation of the pattern\n        :return: a string representing the pattern\n        :rtype: str\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.to_str_subject": [[40, 49], ["None"], "methods", ["None"], ["", "def", "to_str_subject", "(", "self", ",", "subject", ")", ":", "\n", "        ", "\"\"\"to_str_subject\n        Returns the pattern with the subject\n        :param subject: the subject to add to the pattern\n        :type subject: str\n        :return: The pattern with the subject in it\n        :rtype: str\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.to_str_object": [[50, 59], ["None"], "methods", ["None"], ["", "def", "to_str_object", "(", "self", ",", "obj", ")", ":", "\n", "        ", "\"\"\"to_str_object\n        Gives the patterns with a fix object\n        :param obj: the object to include\n        :type obj: str\n        :return: the pattern with the obj fixed\n        :rtype: str\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.to_str_so": [[60, 71], ["None"], "methods", ["None"], ["", "def", "to_str_so", "(", "self", ",", "subj", ",", "obj", ")", ":", "\n", "        ", "\"\"\"to_str_so\n        Gives the pattern with both the subject and the object fixed\n        :param subj: The subject to fix\n        :type subj: str\n        :param obj: The object to fix\n        :type obj: str\n        :return: the pattern completly fixed\n        :rtype: str\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score": [[72, 79], ["None"], "methods", ["None"], ["", "def", "get_score", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_score\n        Gives the score of the pattern\n        :return: the score\n        :rtype: float\n        \"\"\"", "\n", "return", "self", ".", "_score", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_relation": [[80, 87], ["None"], "methods", ["None"], ["", "def", "get_relation", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_relation\n        Get the relation of the pattern\n        :return: the relation\n        :rtype: Option[str]\n        \"\"\"", "\n", "return", "self", ".", "_relation", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_group": [[88, 95], ["None"], "methods", ["None"], ["", "def", "get_group", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_group\n        Get the group of the pattern\n        :return: the group\n        :rtype: str\n        \"\"\"", "\n", "return", "self", ".", "_group", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.__str__": [[96, 101], ["str", "pattern_interface.PatternInterface.get_group", "str", "pattern_interface.PatternInterface.get_score", "str", "pattern_interface.PatternInterface.to_str"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_group", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"Pattern(\"", "+", "self", ".", "to_str", "(", ")", "+", "\", \"", "+", "\"Relation=\"", "+", "str", "(", "self", ".", "_relation", ")", "+", "\", \"", "+", "\"Score=\"", "+", "str", "(", "self", ".", "get_score", "(", ")", ")", "+", "\", \"", "+", "\"Group=\"", "+", "str", "(", "self", ".", "get_group", "(", ")", ")", "+", "\")\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative": [[102, 104], ["None"], "methods", ["None"], ["", "def", "is_negative", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_negative", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.module_reference_interface.ModuleReferenceInterface.to_dict": [[10, 15], ["dict", "module_reference_interface.ModuleReferenceInterface.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"ModuleReference\"", "\n", "res", "[", "\"name\"", "]", "=", "self", ".", "get_name", "(", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.module_reference_interface.ModuleReferenceInterface.__init__": [[16, 18], ["referencable_interface.ReferencableInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ",", "name", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "name", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.__init__": [[9, 11], ["dict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "occurrences", "=", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw": [[12, 17], ["multiple_source_occurrence.MultipleSourceOccurrence", "multiple_source_occurrence.MultipleSourceOccurrence.add_raw"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw"], ["", "@", "classmethod", "\n", "def", "from_raw", "(", "cls", ",", "text", ",", "source", ",", "n_occurrences", ")", ":", "\n", "        ", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "mso", ".", "add_raw", "(", "text", ",", "source", ",", "n_occurrences", ")", "\n", "return", "mso", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw": [[18, 28], ["isinstance", "quasimodo.data_structures.referencable_interface.ReferencableInterface", "dict", "[].append"], "methods", ["None"], ["", "def", "add_raw", "(", "self", ",", "text", ",", "source", ",", "n_occurrences", "=", "1", ")", ":", "\n", "        ", "if", "isinstance", "(", "source", ",", "str", ")", ":", "\n", "            ", "source", "=", "ReferencableInterface", "(", "source", ")", "\n", "", "if", "text", "not", "in", "self", ".", "occurrences", ":", "\n", "            ", "self", ".", "occurrences", "[", "text", "]", "=", "dict", "(", ")", "\n", "self", ".", "occurrences", "[", "text", "]", "[", "\"sources\"", "]", "=", "[", "]", "\n", "self", ".", "occurrences", "[", "text", "]", "[", "\"n_occurrences\"", "]", "=", "0", "\n", "", "if", "source", "not", "in", "self", ".", "occurrences", "[", "text", "]", "[", "\"sources\"", "]", ":", "\n", "            ", "self", ".", "occurrences", "[", "text", "]", "[", "\"sources\"", "]", ".", "append", "(", "source", ")", "\n", "", "self", ".", "occurrences", "[", "text", "]", "[", "\"n_occurrences\"", "]", "+=", "n_occurrences", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.get_total_number_occurrences": [[29, 34], ["None"], "methods", ["None"], ["", "def", "get_total_number_occurrences", "(", "self", ")", ":", "\n", "        ", "total", "=", "0", "\n", "for", "text", "in", "self", ".", "occurrences", ":", "\n", "            ", "total", "+=", "self", ".", "occurrences", "[", "text", "]", "[", "\"n_occurrences\"", "]", "\n", "", "return", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.to_dict": [[35, 44], ["dict", "dict", "dict", "source.to_dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict"], ["", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"MultipleSourceOccurrence\"", "\n", "res", "[", "\"occurrences\"", "]", "=", "dict", "(", ")", "\n", "for", "key", "in", "self", ".", "occurrences", ":", "\n", "            ", "res", "[", "\"occurrences\"", "]", "[", "key", "]", "=", "dict", "(", ")", "\n", "res", "[", "\"occurrences\"", "]", "[", "key", "]", "[", "\"sources\"", "]", "=", "[", "source", ".", "to_dict", "(", ")", "for", "source", "in", "self", ".", "occurrences", "[", "key", "]", "[", "\"sources\"", "]", "]", "\n", "res", "[", "\"occurrences\"", "]", "[", "key", "]", "[", "\"n_occurrences\"", "]", "=", "self", ".", "occurrences", "[", "key", "]", "[", "\"n_occurrences\"", "]", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.__add__": [[45, 54], ["multiple_source_occurrence.MultipleSourceOccurrence", "multiple_source_occurrence.MultipleSourceOccurrence.add_raw"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw"], ["", "def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "for", "mso_temp", "in", "[", "self", ",", "other", "]", ":", "\n", "            ", "for", "key", "in", "mso_temp", ".", "occurrences", ":", "\n", "                ", "occurrences", "=", "mso_temp", ".", "occurrences", "[", "key", "]", "[", "\"n_occurrences\"", "]", "\n", "for", "source", "in", "mso_temp", ".", "occurrences", "[", "key", "]", "[", "\"sources\"", "]", ":", "\n", "                    ", "mso", ".", "add_raw", "(", "key", ",", "source", ",", "occurrences", ")", "\n", "occurrences", "=", "0", "\n", "", "", "", "return", "mso", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_dict": [[55, 67], ["multiple_source_occurrence.MultipleSourceOccurrence", "UnknownSerializedObject", "dict", "json.dumps", "read_submodule_reference"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_submodule_reference"], ["", "@", "classmethod", "\n", "def", "from_dict", "(", "cls", ",", "dictionary", ")", ":", "\n", "        ", "from", "quasimodo", ".", "serialized_object_reader", "import", "UnknownSerializedObject", ",", "read_submodule_reference", "\n", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "if", "dictionary", "[", "\"type\"", "]", "==", "\"MultipleSourceOccurrence\"", ":", "\n", "            ", "for", "key", "in", "dictionary", "[", "\"occurrences\"", "]", ":", "\n", "                ", "mso", ".", "occurrences", "[", "key", "]", "=", "dict", "(", ")", "\n", "mso", ".", "occurrences", "[", "key", "]", "[", "\"sources\"", "]", "=", "[", "read_submodule_reference", "(", "source", ")", "\n", "for", "source", "in", "dictionary", "[", "\"occurrences\"", "]", "[", "key", "]", "[", "\"sources\"", "]", "]", "\n", "mso", ".", "occurrences", "[", "key", "]", "[", "\"n_occurrences\"", "]", "=", "dictionary", "[", "\"occurrences\"", "]", "[", "key", "]", "[", "\"n_occurrences\"", "]", "\n", "", "return", "mso", "\n", "", "raise", "UnknownSerializedObject", "(", "\"Unknown module reference type:\"", "+", "json", ".", "dumps", "(", "dictionary", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.__str__": [[68, 75], ["sentences.append", "str", "source.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "sentences", "=", "[", "]", "\n", "for", "key", "in", "self", ".", "occurrences", ":", "\n", "            ", "sentences", ".", "append", "(", "key", "+", "\" x#x\"", "+", "str", "(", "self", ".", "occurrences", "[", "key", "]", "[", "\"n_occurrences\"", "]", ")", "+", "\" x#x\"", "+", "\n", "\", \"", ".", "join", "(", "[", "source", ".", "get_name", "(", ")", "for", "source", "in", "self", ".", "occurrences", "[", "key", "]", "[", "\"sources\"", "]", "\n", "if", "source", "is", "not", "None", "]", ")", ")", "\n", "", "return", "\" // \"", ".", "join", "(", "sentences", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.predicate_interface.PredicateInterface.__init__": [[9, 11], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_predicate", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.predicate_interface.PredicateInterface.get": [[12, 14], ["None"], "methods", ["None"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_predicate", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.subject_interface.SubjectInterface.__init__": [[9, 11], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_subject", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.subject_interface.SubjectInterface.get": [[12, 14], ["None"], "methods", ["None"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_subject", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_dict": [[15, 27], ["dict", "fact.Fact._subject.to_dict", "fact.Fact._predicate.to_dict", "fact.Fact._object.to_dict", "fact.Fact._modality.to_dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict"], ["def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"Fact\"", "\n", "res", "[", "\"subject\"", "]", "=", "self", ".", "_subject", ".", "to_dict", "(", ")", "\n", "res", "[", "\"predicate\"", "]", "=", "self", ".", "_predicate", ".", "to_dict", "(", ")", "\n", "res", "[", "\"object\"", "]", "=", "self", ".", "_object", ".", "to_dict", "(", ")", "\n", "if", "self", ".", "_modality", "is", "not", "None", ":", "\n", "            ", "res", "[", "\"modality\"", "]", "=", "self", ".", "_modality", ".", "to_dict", "(", ")", "\n", "", "else", ":", "\n", "            ", "res", "[", "\"modality\"", "]", "=", "{", "\"type\"", ":", "\"NO_MODALITY\"", "}", "\n", "", "res", "[", "\"negative\"", "]", "=", "self", ".", "_negative", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.__init__": [[28, 49], ["fact_interface.FactInterface.__init__", "type", "subject.Subject", "type", "predicate.Predicate", "type", "object.Object", "modality.Modality", "type", "modality.Modality"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ",", "subject", ",", "predicate", ",", "obj", ",", "modality", "=", "None", ",", "negative", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "type", "(", "subject", ")", "==", "str", ":", "\n", "            ", "self", ".", "_subject", "=", "Subject", "(", "subject", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_subject", "=", "subject", "\n", "", "if", "type", "(", "predicate", ")", "==", "str", ":", "\n", "            ", "self", ".", "_predicate", "=", "Predicate", "(", "predicate", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_predicate", "=", "predicate", "\n", "", "if", "type", "(", "obj", ")", "==", "str", ":", "\n", "            ", "self", ".", "_object", "=", "Object", "(", "obj", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_object", "=", "obj", "\n", "", "self", ".", "_negative", "=", "negative", "\n", "if", "modality", "is", "None", ":", "\n", "            ", "self", ".", "_modality", "=", "Modality", "(", ")", "\n", "", "elif", "type", "(", "modality", ")", "==", "str", ":", "\n", "            ", "self", ".", "_modality", "=", "Modality", "(", "modality", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_modality", "=", "modality", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_subject": [[50, 56], ["fact.Fact", "fact.Fact.get_predicate", "fact.Fact.get_object", "fact.Fact.get_modality", "fact.Fact.is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "", "def", "change_subject", "(", "self", ",", "new_subject", ")", ":", "\n", "        ", "return", "Fact", "(", "new_subject", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate": [[57, 63], ["fact.Fact", "fact.Fact.get_subject", "fact.Fact.get_object", "fact.Fact.get_modality", "fact.Fact.is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "change_predicate", "(", "self", ",", "new_predicate", ")", ":", "\n", "        ", "return", "Fact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "new_predicate", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_object": [[64, 70], ["fact.Fact", "fact.Fact.get_subject", "fact.Fact.get_predicate", "fact.Fact.get_modality", "fact.Fact.is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "change_object", "(", "self", ",", "new_object", ")", ":", "\n", "        ", "return", "Fact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "new_object", ",", "\n", "self", ".", "get_modality", "(", ")", ",", "\n", "self", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_modality": [[71, 77], ["fact.Fact", "fact.Fact.get_subject", "fact.Fact.get_predicate", "fact.Fact.get_object", "fact.Fact.is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "change_modality", "(", "self", ",", "new_modality", ")", ":", "\n", "        ", "return", "Fact", "(", "self", ".", "get_subject", "(", ")", ",", "\n", "self", ".", "get_predicate", "(", ")", ",", "\n", "self", ".", "get_object", "(", ")", ",", "\n", "new_modality", ",", "\n", "self", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence": [[78, 99], ["fact.Fact.get_subject().get_plural", "fact.Fact.get_predicate().get_natural_representation", "str", "fact.Fact.get_modality().get_normal_modalities", "fact.Fact.get_modality().get_some_modalities", "fact.Fact.is_negative", "quasimodo.statement_maker.correct_statement", "fact.Fact.get_object", "fact.Fact.get_subject", "fact.Fact.get_predicate", "fact.Fact.get_modality", "fact.Fact.get_modality", "fact.Fact.startswith"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.subject.Subject.get_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.predicate.Predicate.get_natural_representation", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_normal_modalities", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_some_modalities", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.correct_statement", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality"], ["", "def", "to_sentence", "(", "self", ")", ":", "\n", "        ", "subject", "=", "self", ".", "get_subject", "(", ")", ".", "get_plural", "(", ")", "\n", "predicate", "=", "self", ".", "get_predicate", "(", ")", ".", "get_natural_representation", "(", ")", "\n", "obj", "=", "str", "(", "self", ".", "get_object", "(", ")", ")", "\n", "normal_modality", "=", "self", ".", "get_modality", "(", ")", ".", "get_normal_modalities", "(", ")", "\n", "if", "normal_modality", ":", "\n", "            ", "normal_modality", "=", "\"[\"", "+", "normal_modality", "+", "\"] \"", "\n", "", "some_modality", "=", "self", ".", "get_modality", "(", ")", ".", "get_some_modalities", "(", ")", "\n", "if", "some_modality", ":", "\n", "            ", "some_modality", "=", "\"(\"", "+", "some_modality", "+", "\") \"", "\n", "", "if", "self", ".", "is_negative", "(", ")", ":", "\n", "            ", "if", "predicate", "in", "NEGATE_VERB", ":", "\n", "                ", "predicate", "+=", "\" not\"", "\n", "", "elif", "predicate", "==", "\"can\"", ":", "\n", "                ", "predicate", "+=", "\"not\"", "\n", "", "elif", "predicate", ".", "startswith", "(", "\"are \"", ")", ":", "\n", "                ", "predicate", "=", "\"are not \"", "+", "predicate", "[", "3", ":", "]", "\n", "", "else", ":", "\n", "                ", "predicate", "=", "\"do not \"", "+", "predicate", "\n", "", "", "return", "correct_statement", "(", "some_modality", "+", "subject", "+", "\" \"", "+", "predicate", "+", "\n", "\" \"", "+", "normal_modality", "+", "obj", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.to_dict": [[7, 14], ["dict", "res[].append", "pattern.to_dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict"], ["    ", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"MultiplePattern\"", "\n", "res", "[", "\"patterns\"", "]", "=", "[", "]", "\n", "for", "pattern", "in", "self", ".", "_patterns", ":", "\n", "            ", "res", "[", "\"patterns\"", "]", ".", "append", "(", "pattern", ".", "to_dict", "(", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.__init__": [[15, 32], ["pattern_interface.PatternInterface.__init__", "isinstance", "pattern.get_score", "pattern.get_relation", "pattern.get_group", "pattern.is_negative", "isinstance", "multiple_pattern.MultiplePattern.add_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_relation", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_group", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern"], ["", "def", "__init__", "(", "self", ",", "pattern", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "pattern", "is", "not", "None", "and", "not", "isinstance", "(", "pattern", ",", "MultiplePattern", ")", ":", "\n", "            ", "self", ".", "_patterns", "=", "[", "pattern", "]", "\n", "self", ".", "_score", "=", "pattern", ".", "get_score", "(", ")", "\n", "self", ".", "_relation", "=", "pattern", ".", "get_relation", "(", ")", "\n", "self", ".", "_group", "=", "pattern", ".", "get_group", "(", ")", "\n", "self", ".", "_negative", "=", "pattern", ".", "is_negative", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_patterns", "=", "[", "]", "\n", "self", ".", "_score", "=", "0", "\n", "self", ".", "_relation", "=", "\"\"", "\n", "self", ".", "_group", "=", "\"\"", "\n", "self", ".", "_negative", "=", "False", "\n", "", "if", "isinstance", "(", "pattern", ",", "MultiplePattern", ")", ":", "\n", "            ", "for", "pattern_temp", "in", "pattern", ".", "_patterns", ":", "\n", "                ", "self", ".", "add_pattern", "(", "pattern_temp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern": [[33, 49], ["isinstance", "multiple_pattern.MultiplePattern.add_pattern", "multiple_pattern.MultiplePattern._patterns.append", "all", "sum", "len", "set", "set", "pattern.is_negative", "pattern.get_score", "pattern.get_relation", "pattern.get_group", "pattern.get_relation"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_relation", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_group", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_relation"], ["", "", "", "def", "add_pattern", "(", "self", ",", "pattern", ")", ":", "\n", "        ", "if", "isinstance", "(", "pattern", ",", "MultiplePattern", ")", ":", "\n", "            ", "for", "pattern_temp", "in", "pattern", ".", "_patterns", ":", "\n", "                ", "self", ".", "add_pattern", "(", "pattern_temp", ")", "\n", "", "", "elif", "pattern", "is", "not", "None", ":", "\n", "            ", "self", ".", "_patterns", ".", "append", "(", "pattern", ")", "\n", "self", ".", "_score", "=", "sum", "(", "[", "pattern", ".", "get_score", "(", ")", "\n", "for", "pattern", "in", "self", ".", "_patterns", "]", ")", "/", "len", "(", "self", ".", "_patterns", ")", "\n", "self", ".", "_relation", "=", "\"; \"", ".", "join", "(", "set", "(", "[", "pattern", ".", "get_relation", "(", ")", "\n", "for", "pattern", "in", "self", ".", "_patterns", "if", "pattern", ".", "get_relation", "(", ")", "is", "not", "None", "]", ")", ")", "\n", "self", ".", "_group", "=", "\"; \"", ".", "join", "(", "set", "(", "[", "pattern", ".", "get_group", "(", ")", "\n", "for", "pattern", "in", "self", ".", "_patterns", "]", ")", ")", "\n", "# TODO: something more clever?", "\n", "self", ".", "_negative", "=", "all", "(", "[", "pattern", ".", "is_negative", "(", ")", "\n", "for", "pattern", "in", "self", ".", "_patterns", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.match": [[50, 59], ["all", "pattern.match"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.match"], ["", "", "def", "match", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "\"\"\"match\n        Whether a sentence match the current pattern\n        :param sentence: The sentence to check\n        :type sentence: str\n        :return: whether the sentence matches or not\n        :rtype: Boolean\n        \"\"\"", "\n", "return", "all", "(", "[", "pattern", ".", "match", "(", "sentence", ")", "for", "pattern", "in", "self", ".", "_patterns", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.score_sentence": [[60, 70], ["sum", "len", "pattern.score_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.score_sentence"], ["", "def", "score_sentence", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "\"\"\"score_sentence\n        Gives a score to a sentence\n        :param sentence: a sentence to score\n        :type sentence: str\n        :return: the score of the sentence\n        :rtype: float\n        \"\"\"", "\n", "return", "sum", "(", "[", "pattern", ".", "score_sentence", "(", "sentence", ")", "\n", "for", "pattern", "in", "self", ".", "_patterns", "]", ")", "/", "len", "(", "self", ".", "_patterns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.to_str": [[71, 78], ["set", "pattern.to_str"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str"], ["", "def", "to_str", "(", "self", ")", ":", "\n", "        ", "\"\"\"to_str\n        Gets a string representation of the pattern\n        :return: a string representing the pattern\n        :rtype: str\n        \"\"\"", "\n", "return", "\"; \"", ".", "join", "(", "set", "(", "[", "pattern", ".", "to_str", "(", ")", "for", "pattern", "in", "self", ".", "_patterns", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.to_str_subject": [[79, 89], ["pattern.to_str_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str_subject"], ["", "def", "to_str_subject", "(", "self", ",", "subject", ")", ":", "\n", "        ", "\"\"\"to_str_subject\n        Returns the pattern with the subject\n        :param subject: the subject to add to the pattern\n        :type subject: str\n        :return: The pattern with the subject in it\n        :rtype: str\n        \"\"\"", "\n", "return", "\"; \"", ".", "join", "(", "[", "pattern", ".", "to_str_subject", "(", "subject", ")", "\n", "for", "pattern", "in", "self", ".", "_patterns", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.to_str_object": [[90, 100], ["pattern.to_str_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str_object"], ["", "def", "to_str_object", "(", "self", ",", "obj", ")", ":", "\n", "        ", "\"\"\"to_str_object\n        Gives the patterns with a fix object\n        :param obj: the object to include\n        :type obj: str\n        :return: the pattern with the obj fixed\n        :rtype: str\n        \"\"\"", "\n", "return", "\"; \"", ".", "join", "(", "[", "pattern", ".", "to_str_object", "(", "obj", ")", "\n", "for", "pattern", "in", "self", ".", "_patterns", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.to_str_so": [[101, 113], ["pattern.to_str_so"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str_so"], ["", "def", "to_str_so", "(", "self", ",", "subj", ",", "obj", ")", ":", "\n", "        ", "\"\"\"to_str_so\n        Gives the pattern with both the subject and the object fixed\n        :param subj: The subject to fix\n        :type subj: str\n        :param obj: The object to fix\n        :type obj: str\n        :return: the pattern completly fixed\n        :rtype: str\n        \"\"\"", "\n", "return", "\"; \"", ".", "join", "(", "[", "pattern", ".", "to_str_so", "(", "subj", ",", "obj", ")", "\n", "for", "pattern", "in", "self", ".", "_patterns", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get": [[6, 13], ["None"], "methods", ["None"], ["def", "get", "(", "self", ")", ":", "\n", "        ", "\"\"\"get\n        Gives the value of the SPOM\n        :return: the value\n        :rtype: str\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.__str__": [[14, 16], ["str", "spom_interface.SPOMInterface.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.__hash__": [[17, 19], ["hash", "spom_interface.SPOMInterface.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "__hash__", "(", "self", ")", ":", "\n", "        ", "return", "hash", "(", "self", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.__eq__": [[20, 24], ["isinstance", "spom_interface.SPOMInterface.get", "other.get", "spom_interface.SPOMInterface.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "__eq__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "other", ",", "SPOMInterface", ")", ":", "\n", "            ", "return", "self", ".", "get", "(", ")", "==", "other", "\n", "", "return", "self", ".", "get", "(", ")", "==", "other", ".", "get", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.__repr__": [[25, 27], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.to_dict": [[30, 35], ["dict", "modality.Modality.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"Modality\"", "\n", "res", "[", "\"value\"", "]", "=", "self", ".", "get", "(", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.__init__": [[36, 39], ["modality_interface.ModalityInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ",", "modality", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_modality", "=", "modality", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_modalities_and_scores": [[40, 42], ["modality.read_sentence", "modality.Modality.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.read_sentence", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_modalities_and_scores", "(", "self", ")", ":", "\n", "        ", "return", "read_sentence", "(", "self", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.is_empty": [[43, 45], ["len", "modality.Modality.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "is_empty", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "get", "(", ")", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.contains_completing_part": [[46, 48], ["modality.Modality.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "contains_completing_part", "(", "self", ")", ":", "\n", "        ", "return", "\"TBC\"", "in", "self", ".", "get", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_number_completing_parts": [[49, 51], ["modality.Modality.get().count", "modality.Modality.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_number_completing_parts", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get", "(", ")", ".", "count", "(", "\"TBC\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.from_modalities_and_scores": [[52, 56], ["modality.get_multiple_parts_combination", "modality.Modality"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.get_multiple_parts_combination"], ["", "@", "staticmethod", "\n", "def", "from_modalities_and_scores", "(", "modality_score_pairs", ")", ":", "\n", "        ", "raw_modality", "=", "get_multiple_parts_combination", "(", "modality_score_pairs", ")", "\n", "return", "Modality", "(", "raw_modality", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_some_modalities": [[57, 63], ["re.compile", "re.compile.finditer", "modality.Modality.get", "some_modalities.append", "match.group"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_some_modalities", "(", "self", ")", ":", "\n", "        ", "regex", "=", "re", ".", "compile", "(", "\"some\\[subj/(?P<name>[^\\]]*)\\]\"", ")", "\n", "some_modalities", "=", "[", "]", "\n", "for", "match", "in", "regex", ".", "finditer", "(", "self", ".", "get", "(", ")", ")", ":", "\n", "            ", "some_modalities", ".", "append", "(", "match", ".", "group", "(", "\"name\"", ")", ")", "\n", "", "return", "\"/\"", ".", "join", "(", "some_modalities", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_normal_modalities": [[64, 70], ["modality.Modality.get_modalities_and_scores", "res.append"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_modalities_and_scores"], ["", "def", "get_normal_modalities", "(", "self", ")", ":", "\n", "        ", "res", "=", "[", "]", "\n", "for", "modality", ",", "_", "in", "self", ".", "get_modalities_and_scores", "(", ")", ":", "\n", "            ", "if", "\"TBC\"", "not", "in", "modality", "and", "\"some[\"", "not", "in", "modality", ":", "\n", "                ", "res", ".", "append", "(", "modality", ")", "\n", "", "", "return", "\"/\"", ".", "join", "(", "res", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.get_multiple_parts_combination": [[7, 11], ["str"], "function", ["None"], ["def", "get_multiple_parts_combination", "(", "sentence_score_pairs", ")", ":", "\n", "    ", "return", "\" // \"", ".", "join", "(", "[", "x", "[", "0", "]", "+", "\" x#x\"", "+", "str", "(", "x", "[", "1", "]", ")", "\n", "for", "x", "in", "sentence_score_pairs", "\n", "if", "x", "[", "0", "]", "!=", "\"\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.read_sentence": [[13, 23], ["sentence.split", "part.split", "len", "res.append", "res.append", "part_score[].strip", "part_score[].strip", "int"], "function", ["None"], ["", "def", "read_sentence", "(", "sentence", ")", ":", "\n", "    ", "res", "=", "[", "]", "\n", "sentence_parts", "=", "sentence", ".", "split", "(", "\" // \"", ")", "\n", "for", "part", "in", "sentence_parts", ":", "\n", "        ", "part_score", "=", "part", ".", "split", "(", "\"x#x\"", ")", "\n", "if", "len", "(", "part_score", ")", "==", "1", ":", "\n", "            ", "res", ".", "append", "(", "(", "part_score", "[", "0", "]", ".", "strip", "(", ")", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "res", ".", "append", "(", "(", "part_score", "[", "0", "]", ".", "strip", "(", ")", ",", "int", "(", "part_score", "[", "1", "]", ")", ")", ")", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.__init__": [[3, 9], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_seeds", "=", "[", "]", "# List of FactInterface", "\n", "self", ".", "_patterns", "=", "[", "]", "# List of PatternInterface", "\n", "self", ".", "_generated_facts", "=", "[", "]", "# List of GeneratedFactInterface", "\n", "self", ".", "_subjects", "=", "None", "\n", "self", ".", "_objects", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_seeds": [[10, 17], ["None"], "methods", ["None"], ["", "def", "get_seeds", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_seeds\n        Gives the seed part of the input\n        :return: the seeds\n        :rtype: FactInterface\n        \"\"\"", "\n", "return", "self", ".", "_seeds", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_patterns": [[18, 31], ["list", "filter", "x.get_group"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_group"], ["", "def", "get_patterns", "(", "self", ",", "group", "=", "None", ")", ":", "\n", "        ", "\"\"\"get_patterns\n        Return the pattern part of the input\n        :param group: the group of the pattern\n        :type group: str\n        :return: the seeds\n        :rtype: PatternInterface\n        \"\"\"", "\n", "if", "group", "is", "None", ":", "\n", "            ", "return", "self", ".", "_patterns", "\n", "", "else", ":", "\n", "            ", "return", "list", "(", "filter", "(", "lambda", "x", ":", "x", ".", "get_group", "(", ")", "==", "group", ",", "\n", "self", ".", "_patterns", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_generated_facts": [[32, 39], ["None"], "methods", ["None"], ["", "", "def", "get_generated_facts", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_generated_facts\n        Return the generated facts part of the input\n        :return: the generated facts\n        :rtype: GeneratedFactInterface\n        \"\"\"", "\n", "return", "self", ".", "_generated_facts", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects": [[40, 47], ["None"], "methods", ["None"], ["", "def", "get_subjects", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_subjects\n        Gives the subjects of the input\n        :return: the subjects considered by the input\n        :rtype: List[SubjectInterface]\n        \"\"\"", "\n", "return", "self", ".", "_subjects", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_objects": [[48, 55], ["None"], "methods", ["None"], ["", "def", "get_objects", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_objects\n        Gives the objects of the input\n        :return: the objects considered by the input\n        :rtype: List[ObjectInterface]\n        \"\"\"", "\n", "return", "self", ".", "_objects", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.has_subjects": [[56, 62], ["None"], "methods", ["None"], ["", "def", "has_subjects", "(", "self", ")", ":", "\n", "        ", "\"\"\"has_subjects\n        :return: whether the input contains subjects\n        :rtype: bool\n        \"\"\"", "\n", "return", "self", ".", "_subjects", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.has_objects": [[63, 69], ["None"], "methods", ["None"], ["", "def", "has_objects", "(", "self", ")", ":", "\n", "        ", "\"\"\"has_objects\n        :return: whether the input contains objects\n        :rtype: bool\n        \"\"\"", "\n", "return", "self", ".", "_objects", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.save": [[70, 79], ["None"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"save\n        Saves the object into a file\n        :param filename: the file where to save the object\n        :type filename: str\n        :return: True\n        :rtype: bool\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load": [[80, 89], ["None"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"load\n        Loads an input\n        :param filename: the file containing the input\n        :type filename: str\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_patterns": [[90, 99], ["None"], "methods", ["None"], ["", "def", "add_patterns", "(", "self", ",", "new_patterns", ")", ":", "\n", "        ", "\"\"\"add_patterns\n        Adds patterns to the input\n        :param new_patterns: the patterns to add\n        :type new_patterns: List[PatternInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_seeds": [[100, 109], ["None"], "methods", ["None"], ["", "def", "add_seeds", "(", "self", ",", "new_seeds", ")", ":", "\n", "        ", "\"\"\"add_seeds\n        Adds seeds to the input\n        :param new_seeds: the patterns to add\n        :type new_seeds: List[FactInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts": [[110, 119], ["None"], "methods", ["None"], ["", "def", "add_generated_facts", "(", "self", ",", "new_generated_facts", ")", ":", "\n", "        ", "\"\"\"add_generated_facts\n        Adds generated facts to the input\n        :param new_generated_facts: the generated facts to add\n        :type new_generated_facts: List[GeneratedFactInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects": [[120, 129], ["None"], "methods", ["None"], ["", "def", "add_subjects", "(", "self", ",", "new_subjects", ")", ":", "\n", "        ", "\"\"\"add_subjects\n        Adds subjects to the input\n        :param new_subjects: the subjects to add\n        :type new_subjects: List[SubjectInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_objects": [[130, 139], ["None"], "methods", ["None"], ["", "def", "add_objects", "(", "self", ",", "new_objects", ")", ":", "\n", "        ", "\"\"\"add_objects\n        Adds objects to the input\n        :param new_objects: the objects to add\n        :type new_objects: List[ObjectInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_patterns": [[140, 149], ["None"], "methods", ["None"], ["", "def", "replace_patterns", "(", "self", ",", "new_patterns", ")", ":", "\n", "        ", "\"\"\"replace_patterns\n        Replaces patterns to the input\n        :param new_patterns: the patterns to replace\n        :type new_patterns: List[PatternInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_seeds": [[150, 159], ["None"], "methods", ["None"], ["", "def", "replace_seeds", "(", "self", ",", "new_seeds", ")", ":", "\n", "        ", "\"\"\"replace_seeds\n        Replaces seeds to the input\n        :param new_seeds: the patterns to replace\n        :type new_seeds: List[FactInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts": [[160, 169], ["None"], "methods", ["None"], ["", "def", "replace_generated_facts", "(", "self", ",", "new_generated_facts", ")", ":", "\n", "        ", "\"\"\"replace_generated_facts\n        Replaces generated facts to the input\n        :param new_generated_facts: the generated facts to replace\n        :type new_generated_facts: List[GeneratedFactInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_subjects": [[170, 179], ["None"], "methods", ["None"], ["", "def", "replace_subjects", "(", "self", ",", "new_subjects", ")", ":", "\n", "        ", "\"\"\"replace_subjects\n        Replaces subjects to the input\n        :param new_subjects: the subjects to replace\n        :type new_subjects: List[SubjectInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_number_subjects": [[180, 182], ["len"], "methods", ["None"], ["", "def", "get_number_subjects", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_subjects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_objects": [[183, 192], ["None"], "methods", ["None"], ["", "def", "replace_objects", "(", "self", ",", "new_objects", ")", ":", "\n", "        ", "\"\"\"replace_objects\n        Replaces objects to the input\n        :param new_objects: the objects to replace\n        :type new_objects: List[ObjectInterface]\n        :return: a new input\n        :rtype: InputInterface\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.__init__": [[6, 8], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "_name", "=", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name": [[9, 14], ["None"], "methods", ["None"], ["", "def", "get_name", "(", "self", ")", ":", "\n", "        ", "\"\"\"get_name\n        Gives the name of the module\n        \"\"\"", "\n", "return", "self", ".", "_name", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.__str__": [[15, 17], ["str", "referencable_interface.ReferencableInterface.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"Reference(\"", "+", "str", "(", "self", ".", "get_name", "(", ")", ")", "+", "\")\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.__hash__": [[18, 20], ["hash", "referencable_interface.ReferencableInterface.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "__hash__", "(", "self", ")", ":", "\n", "        ", "return", "hash", "(", "self", ".", "get_name", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.__eq__": [[21, 23], ["isinstance", "other.get_name", "referencable_interface.ReferencableInterface.get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "__eq__", "(", "self", ",", "other", ")", ":", "\n", "        ", "return", "isinstance", "(", "other", ",", "ReferencableInterface", ")", "and", "other", ".", "get_name", "(", ")", "==", "self", ".", "get_name", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.subject.Subject.to_dict": [[11, 16], ["dict", "subject.Subject.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"Subject\"", "\n", "res", "[", "\"value\"", "]", "=", "self", ".", "get", "(", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.subject.Subject.__init__": [[17, 20], ["subject_interface.SubjectInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ",", "subject", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_subject", "=", "subject", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.subject.Subject.get_plural": [[21, 23], ["inflect_accessor.DEFAULT_INFLECT.to_plural", "subject.Subject.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_plural", "(", "self", ")", ":", "\n", "        ", "return", "DEFAULT_INFLECT", ".", "to_plural", "(", "self", ".", "get", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_module.PatternModule.__init__": [[12, 17], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"manual-patterns-google\"", "]", "\n", "super", "(", "PatternModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Pattern Module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_module.PatternModule.process": [[18, 31], ["logging.info", "input_interface.get_patterns", "quasimodo.data_structures.inputs.Inputs", "new_inputs.append", "inputs.get_patterns", "input_interface.get_seeds", "input_interface.get_generated_facts", "input_interface.get_subjects", "input_interface.get_objects", "submodule.process"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_objects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the Pattern Generation module\"", ")", "\n", "new_inputs", "=", "[", "]", "\n", "for", "submodule", "in", "self", ".", "_submodules", ":", "\n", "            ", "new_inputs", ".", "append", "(", "submodule", ".", "process", "(", "input_interface", ")", ")", "\n", "", "new_patterns", "=", "input_interface", ".", "get_patterns", "(", ")", "\n", "for", "inputs", "in", "new_inputs", ":", "\n", "            ", "new_patterns", "+=", "inputs", ".", "get_patterns", "(", ")", "\n", "", "return", "Inputs", "(", "input_interface", ".", "get_seeds", "(", ")", ",", "\n", "new_patterns", ",", "\n", "input_interface", ".", "get_generated_facts", "(", ")", ",", "\n", "input_interface", ".", "get_subjects", "(", ")", ",", "\n", "input_interface", ".", "get_objects", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.manual_patterns_google_submodule.ManualPatternsGoogleSubmodule.__init__": [[11, 15], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Manual patterns google\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.manual_patterns_google_submodule.ManualPatternsGoogleSubmodule.process": [[16, 49], ["logging.info", "input_interface.add_patterns", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_patterns"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the manual patterns for browsers submodule\"", ")", "\n", "new_patterns", "=", "[", "PatternGoogle", "(", "\"why did <SUBJ>\"", ")", ",", "\n", "PatternGoogle", "(", "\"why aren't <SUBJS>\"", ",", "relation", "=", "\"has_property\"", ",", "negative", "=", "True", ")", ",", "\n", "PatternGoogle", "(", "\"why are <SUBJS>\"", ",", "relation", "=", "\"has_property\"", ")", ",", "\n", "PatternGoogle", "(", "\"why is <SUBJ>\"", ",", "relation", "=", "\"has_property\"", ")", ",", "\n", "PatternGoogle", "(", "\"why is a <SUBJ>\"", ",", "\n", "relation", "=", "\"has_property\"", ")", ",", "\n", "PatternGoogle", "(", "\"why isn't <SUBJ>\"", ",", "relation", "=", "\"has_property\"", ",", "negative", "=", "True", ")", ",", "\n", "PatternGoogle", "(", "\"why isn't a <SUBJ>\"", ",", "\n", "relation", "=", "\"has_property\"", ",", "negative", "=", "True", ")", ",", "\n", "PatternGoogle", "(", "\"why do <SUBJS>\"", ")", ",", "\n", "PatternGoogle", "(", "\"why does a <SUBJ>\"", ")", ",", "\n", "PatternGoogle", "(", "\"why does <SUBJ>\"", ")", ",", "\n", "PatternGoogle", "(", "\"why don't <SUBJS>\"", ",", "negative", "=", "True", ")", ",", "\n", "PatternGoogle", "(", "\"why doesn't <SUBJ>\"", ",", "negative", "=", "True", ")", ",", "\n", "PatternGoogle", "(", "\"why doesn't a <SUBJ>\"", ",", "negative", "=", "True", ")", ",", "\n", "PatternGoogle", "(", "\"why can <SUBJS>\"", ",", "\"CAN\"", ")", ",", "\n", "PatternGoogle", "(", "\"why can a <SUBJ>\"", ",", "\"CAN\"", ")", ",", "\n", "PatternGoogle", "(", "\"why can't <SUBJS>\"", ",", "\"CAN\"", ",", "True", ")", ",", "\n", "PatternGoogle", "(", "\"why can't a <SUBJ>\"", ",", "\"CAN\"", ",", "True", ")", ",", "\n", "PatternGoogle", "(", "\"how are <SUBJS>\"", ",", "relation", "=", "\"has_property\"", ")", ",", "\n", "PatternGoogle", "(", "\"how is <SUBJ>\"", ",", "relation", "=", "\"has_property\"", ")", ",", "\n", "PatternGoogle", "(", "\"how is a <SUBJ>\"", ",", "\n", "relation", "=", "\"has_property\"", ")", ",", "\n", "PatternGoogle", "(", "\"how do <SUBJS>\"", ")", ",", "\n", "PatternGoogle", "(", "\"how does <SUBJ>\"", ")", ",", "\n", "PatternGoogle", "(", "\"how does a <SUBJ>\"", ")", ",", "\n", "PatternGoogle", "(", "\"how can <SUBJS>\"", ",", "\"CAN\"", ")", ",", "\n", "PatternGoogle", "(", "\"how can a <SUBJ>\"", ",", "\"CAN\"", ")", ",", "\n", "PatternGoogle", "(", "\"why <SUBJ>\"", ")", ",", "\n", "PatternGoogle", "(", "\"why a <SUBJ>\"", ")", "]", "\n", "return", "input_interface", ".", "add_patterns", "(", "new_patterns", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict": [[13, 20], ["dict"], "methods", ["None"], ["def", "to_dict", "(", "self", ")", ":", "\n", "        ", "res", "=", "dict", "(", ")", "\n", "res", "[", "\"type\"", "]", "=", "\"PatternGoogle\"", "\n", "res", "[", "\"prefix\"", "]", "=", "self", ".", "_prefix", "\n", "res", "[", "\"relation\"", "]", "=", "self", ".", "_relation", "\n", "res", "[", "\"negative\"", "]", "=", "self", ".", "_negative", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str_object": [[21, 23], ["None"], "methods", ["None"], ["", "def", "to_str_object", "(", "self", ",", "obj", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str_so": [[24, 26], ["None"], "methods", ["None"], ["", "def", "to_str_so", "(", "self", ",", "subj", ",", "obj", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.__init__": [[27, 38], ["quasimodo.data_structures.pattern_interface.PatternInterface.__init__", "re.compile", "pattern_google.PatternGoogle._prefix.replace().replace().replace", "pattern_google.PatternGoogle._prefix.replace().replace", "pattern_google.PatternGoogle._prefix.replace"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["", "def", "__init__", "(", "self", ",", "prefix", ",", "relation", "=", "\"has_property\"", ",", "negative", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_prefix", "=", "prefix", "# we need to give the prefix of the query", "\n", "# No score for now", "\n", "self", ".", "_score", "=", "1.0", "\n", "self", ".", "_negative", "=", "negative", "\n", "self", ".", "_relation", "=", "relation", "\n", "self", ".", "_group", "=", "\"google-autocomplete\"", "\n", "self", ".", "_regex", "=", "re", ".", "compile", "(", "self", ".", "_prefix", ".", "replace", "(", "\"<SUBJ>\"", ",", "\".*\"", ")", "\n", ".", "replace", "(", "\"<OBJ>\"", ",", "\".*\"", ")", "\n", ".", "replace", "(", "\"<SUBJS>\"", ",", "\".*\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.score_sentence": [[39, 44], ["pattern_google.PatternGoogle.match"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.match"], ["", "def", "score_sentence", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "if", "self", ".", "match", "(", "sentence", ")", ":", "\n", "            ", "return", "1.0", "\n", "", "else", ":", "\n", "            ", "return", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str": [[45, 47], ["None"], "methods", ["None"], ["", "", "def", "to_str", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_prefix", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str_subject": [[48, 64], ["quasimodo.inflect_accessor.DEFAULT_INFLECT.to_singular", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_plural", "subject.get", "subject.get", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_plural.split", "pattern_google.PatternGoogle._prefix.replace().replace().replace", "pattern_google.PatternGoogle._prefix.replace().replace().replace", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_singular.split", "nltk.corpus.wordnet.synsets", "nltk.corpus.wordnet.synsets", "subject.get", "pattern_google.PatternGoogle._prefix.replace().replace", "pattern_google.PatternGoogle._prefix.replace().replace", "subject.get", "pattern_google.PatternGoogle._prefix.replace", "pattern_google.PatternGoogle._prefix.replace", "subject.get", "subject.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "to_str_subject", "(", "self", ",", "subject", ")", ":", "\n", "        ", "sing", "=", "DEFAULT_INFLECT", ".", "to_singular", "(", "subject", ".", "get", "(", ")", ")", "\n", "plur", "=", "DEFAULT_INFLECT", ".", "to_plural", "(", "subject", ".", "get", "(", ")", ")", "\n", "last_sing", "=", "\"\"", "\n", "if", "sing", ":", "\n", "            ", "last_sing", "=", "sing", ".", "split", "(", "\" \"", ")", "[", "-", "1", "]", "\n", "", "last_plur", "=", "plur", ".", "split", "(", "\" \"", ")", "[", "-", "1", "]", "\n", "if", "(", "(", "not", "sing", "or", "sing", "==", "subject", ".", "get", "(", ")", ")", "and", "\n", "wordnet", ".", "synsets", "(", "last_plur", ")", ")", "or", "not", "wordnet", ".", "synsets", "(", "last_sing", ")", ":", "\n", "            ", "return", "self", ".", "_prefix", ".", "replace", "(", "\"<SUBJ>\"", ",", "subject", ".", "get", "(", ")", ")", ".", "replace", "(", "\"<OBJ>\"", ",", "\"\"", ")", ".", "replace", "(", "\"<SUBJS>\"", ",", "plur", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "_prefix", ".", "replace", "(", "\"<SUBJ>\"", ",", "subject", ".", "get", "(", ")", ")", ".", "replace", "(", "\"<OBJ>\"", ",", "\"\"", ")", ".", "replace", "(", "\"<SUBJS>\"", ",", "subject", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.match": [[65, 67], ["pattern_google.PatternGoogle._regex.search"], "methods", ["None"], ["", "", "def", "match", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "return", "self", ".", "_regex", ".", "search", "(", "sentence", ")", "is", "not", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_fusion_module.PatternFusionModule.__init__": [[11, 16], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "]", "\n", "super", "(", "PatternFusionModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Pattern Fusion Module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_fusion_module.PatternFusionModule.process": [[17, 21], ["logging.info"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "# Nothing for now", "\n", "        ", "logging", ".", "info", "(", "\"Start the pattern fusion module\"", ")", "\n", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.assertion_fusion_module.AssertionFusionModule.__init__": [[11, 17], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"linear-combination-weighted\"", ",", "\n", "]", "\n", "super", "(", "AssertionFusionModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Assertion Fusion Module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.assertion_fusion_module.AssertionFusionModule.process": [[18, 23], ["logging.info", "submodule.process"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the assertion fusion module\"", ")", "\n", "for", "submodule", "in", "self", ".", "_submodules", ":", "\n", "            ", "input_interface", "=", "submodule", ".", "process", "(", "input_interface", ")", "\n", "", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.__init__": [[31, 82], ["gensim.load", "pandas.read_csv", "sklearn.linear_model.LogisticRegressionCV", "trainer.Trainer.create_patterns_features", "enumerate", "sklearn.preprocessing.QuantileTransformer", "trainer.Trainer.qt.fit_transform().reshape", "trainer.Trainer._to_keep_columns.append", "trainer.Trainer.set_perplexity_quantile", "trainer.Trainer.set_perplexity_quantile", "trainer.Trainer.set_perplexity_quantile", "trainer.Trainer.set_perplexity_quantile", "trainer.Trainer.set_perplexity_quantile", "trainer.Trainer.set_perplexity_quantile", "trainer.Trainer.set_perplexity_quantile", "trainer.Trainer.set_perplexity_quantile", "trainer.Trainer.set_perplexity_quantile", "trainer.Trainer.set_perplexity_quantile", "dict", "dict", "sklearn.preprocessing.StandardScaler", "trainer.Trainer.scaler.fit", "logging.info", "sklearn.impute.SimpleImputer", "trainer.Trainer._df[].isna().astype", "enumerate", "logging.info", "trainer.Trainer.qt.fit_transform", "str", "trainer.Trainer._df[].isna", "trainer.Trainer._df[].values.reshape", "len", "str"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.create_patterns_features", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit"], ["def", "__init__", "(", "self", ",", "df_file", ")", ":", "\n", "        ", "self", ".", "_model", "=", "api", ".", "load", "(", "\n", "\"glove-wiki-gigaword-50\"", ")", "\n", "self", ".", "_df", "=", "pd", ".", "read_csv", "(", "df_file", ",", "sep", "=", "\"\\t\"", ",", "index_col", "=", "False", ")", "\n", "# self._clf = GaussianNBWithMissingValues()", "\n", "# self._clf = AdaBoostClassifier(n_estimators=200)", "\n", "self", ".", "_clf", "=", "LogisticRegressionCV", "(", "max_iter", "=", "5000", ",", "n_jobs", "=", "-", "1", ")", "\n", "self", ".", "_filter", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "self", ".", "_df", ".", "columns", ")", "\n", "if", "x", "in", "to_keep_columns", "]", "\n", "self", ".", "_to_keep_columns", "=", "[", "x", "for", "x", "in", "self", ".", "_df", ".", "columns", "if", "\n", "x", "in", "to_keep_columns", "]", "\n", "\n", "# Feature creation", "\n", "for", "x", "in", "self", ".", "_df", ".", "columns", ":", "\n", "            ", "if", "x", "not", "in", "to_keep_columns", ":", "\n", "                ", "logging", ".", "info", "(", "str", "(", "x", ")", "+", "\" was ignored\"", ")", "\n", "", "", "for", "x", "in", "self", ".", "_to_keep_columns", ":", "\n", "            ", "self", ".", "_df", "[", "x", "+", "\"_is_nan\"", "]", "=", "self", ".", "_df", "[", "x", "]", ".", "isna", "(", ")", ".", "astype", "(", "float", ")", "\n", "", "self", ".", "_to_keep_columns", "+=", "[", "x", "+", "\"_is_nan\"", "for", "x", "in", "self", ".", "_to_keep_columns", "]", "\n", "self", ".", "create_patterns_features", "(", ")", "\n", "self", ".", "perplexity_index", "=", "0", "\n", "for", "i", ",", "x", "in", "enumerate", "(", "self", ".", "_to_keep_columns", ")", ":", "\n", "            ", "if", "x", "==", "\"Perplexity submodule\"", ":", "\n", "                ", "self", ".", "perplexity_index", "=", "i", "\n", "", "", "self", ".", "qt", "=", "preprocessing", ".", "QuantileTransformer", "(", "n_quantiles", "=", "10", ")", "\n", "self", ".", "_df", "[", "\"Perplexity quantiles\"", "]", "=", "self", ".", "qt", ".", "fit_transform", "(", "\n", "self", ".", "_df", "[", "\"Perplexity submodule\"", "]", ".", "values", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", ")", ".", "reshape", "(", "-", "1", ")", "\n", "self", ".", "_to_keep_columns", ".", "append", "(", "\"Perplexity quantiles\"", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0", ",", "0.1", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0.1", ",", "0.2", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0.2", ",", "0.3", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0.3", ",", "0.4", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0.4", ",", "0.5", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0.5", ",", "0.6", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0.6", ",", "0.7", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0.7", ",", "0.8", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0.8", ",", "0.9", ")", "\n", "self", ".", "set_perplexity_quantile", "(", "0.9", ",", "1", ")", "\n", "# self.set_closest_features()", "\n", "self", ".", "_mini_perplexity_cache", "=", "dict", "(", ")", "\n", "self", ".", "_maxi_perplexity_cache", "=", "dict", "(", ")", "\n", "\n", "# End", "\n", "self", ".", "_all_df", "=", "self", ".", "_df", "\n", "self", ".", "scaler", "=", "preprocessing", ".", "StandardScaler", "(", ")", "\n", "self", ".", "scaler", ".", "fit", "(", "self", ".", "_all_df", "[", "self", ".", "_to_keep_columns", "]", ")", "\n", "self", ".", "_df", "=", "self", ".", "_df", "[", "self", ".", "_df", "[", "\"label\"", "]", "!=", "-", "1", "]", "\n", "logging", ".", "info", "(", "str", "(", "len", "(", "self", ".", "_df", ")", ")", "+", "\" annotated facts given.\"", ")", "\n", "self", ".", "inputer", "=", "SimpleImputer", "(", "missing_values", "=", "np", ".", "nan", ",", "\n", "strategy", "=", "'constant'", ",", "fill_value", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_closest_features": [[83, 102], ["trainer.Trainer.get_vectors", "quasimodo.assertion_output.closest_indexes.ClosestIndexes", "quasimodo.assertion_output.closest_indexes.ClosestIndexes.get_closest_indexes", "trainer.Trainer._df.iterrows", "numpy.zeros", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.get_vectors", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_output.closest_indexes.ClosestIndexes.get_closest_indexes"], ["", "def", "set_closest_features", "(", "self", ")", ":", "\n", "        ", "vectors", "=", "self", ".", "get_vectors", "(", ")", "\n", "closest_indexes_compute", "=", "ClosestIndexes", "(", "vectors", ")", "\n", "closest_indexes", "=", "closest_indexes_compute", ".", "get_closest_indexes", "(", "\n", "2", ",", "SLICE_SIZE", ")", "\n", "for", "column", "in", "self", ".", "_to_keep_columns", ":", "\n", "            ", "if", "column", "in", "self", ".", "_df", ".", "columns", ":", "\n", "                ", "self", ".", "_df", "[", "column", "+", "\"-closest\"", "]", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "_df", ")", ")", "\n", "", "", "closest_columns", "=", "[", "column", "+", "\"-closest\"", "\n", "for", "column", "in", "self", ".", "_to_keep_columns", "\n", "if", "column", "in", "self", ".", "_df", ".", "columns", "]", "\n", "for", "i", ",", "row", "in", "self", ".", "_df", ".", "iterrows", "(", ")", ":", "\n", "            ", "to_copy", "=", "self", ".", "_df", ".", "iloc", "[", "closest_indexes", "[", "i", "]", "[", "1", "]", "[", "0", "]", "]", "\n", "self", ".", "_df", ".", "loc", "[", "i", ",", "closest_columns", "]", "=", "[", "\n", "to_copy", "[", "column", "]", "*", "closest_indexes", "[", "i", "]", "[", "1", "]", "[", "1", "]", "\n", "for", "column", "in", "self", ".", "_to_keep_columns", "\n", "if", "column", "in", "self", ".", "_df", ".", "columns", "\n", "]", "\n", "", "self", ".", "_to_keep_columns", "+=", "closest_columns", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.get_vectors": [[103, 114], ["numpy.zeros", "trainer.Trainer._df.iterrows", "trainer.Trainer._get_array_generated_fact", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer._get_array_generated_fact"], ["", "def", "get_vectors", "(", "self", ")", ":", "\n", "        ", "vector", "=", "np", ".", "zeros", "(", "(", "len", "(", "self", ".", "_df", ")", ",", "\n", "self", ".", "_model", ".", "vector_size", "*", "3", ")", ",", "\n", "dtype", "=", "float", ")", "\n", "for", "i", ",", "row", "in", "self", ".", "_df", ".", "iterrows", "(", ")", ":", "\n", "            ", "vector", "[", "i", ",", ":", "]", "=", "self", ".", "_get_array_generated_fact", "(", "\n", "row", ".", "subject", ",", "\n", "row", ".", "predicate", ",", "\n", "row", ".", "object", "\n", ")", "\n", "", "return", "vector", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.get_all_patterns": [[115, 121], ["set", "trainer.get_patterns", "set.add"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["", "def", "get_all_patterns", "(", "self", ")", ":", "\n", "        ", "patterns", "=", "set", "(", ")", "\n", "for", "string_patterns", "in", "self", ".", "_df", "[", "\"patterns\"", "]", ":", "\n", "            ", "for", "pattern", "in", "get_patterns", "(", "string_patterns", ")", ":", "\n", "                ", "patterns", ".", "add", "(", "pattern", ")", "\n", "", "", "return", "patterns", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.add_patterns_to_df": [[122, 129], ["len", "enumerate", "numpy.zeros", "trainer.get_patterns"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns"], ["", "def", "add_patterns_to_df", "(", "self", ")", ":", "\n", "        ", "size", "=", "len", "(", "self", ".", "_df", ")", "\n", "for", "pattern", "in", "self", ".", "patterns", ":", "\n", "            ", "self", ".", "_df", "[", "pattern", "]", "=", "np", ".", "zeros", "(", "size", ")", "\n", "", "for", "i", ",", "string_patterns", "in", "enumerate", "(", "self", ".", "_df", "[", "\"patterns\"", "]", ")", ":", "\n", "            ", "for", "pattern", "in", "get_patterns", "(", "string_patterns", ")", ":", "\n", "                ", "self", ".", "_df", "[", "pattern", "]", ".", "iloc", "[", "i", "]", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.get_pattern_row": [[130, 137], ["numpy.zeros", "trainer.get_patterns", "len", "trainer.Trainer.patterns.index"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.evalui.evalui.index"], ["", "", "", "def", "get_pattern_row", "(", "self", ",", "pattern", ")", ":", "\n", "        ", "pattern_features", "=", "np", ".", "zeros", "(", "len", "(", "self", ".", "patterns", ")", ")", "\n", "row_patterns", "=", "get_patterns", "(", "pattern", ")", "\n", "for", "pattern", "in", "row_patterns", ":", "\n", "            ", "if", "pattern", "in", "self", ".", "patterns", ":", "\n", "                ", "pattern_features", "[", "self", ".", "patterns", ".", "index", "(", "pattern", ")", "]", "+=", "1", "\n", "", "", "return", "pattern_features", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.create_patterns_features": [[138, 144], ["list", "trainer.Trainer.add_patterns_to_df", "trainer.Trainer.get_all_patterns", "enumerate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.add_patterns_to_df", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.get_all_patterns"], ["", "def", "create_patterns_features", "(", "self", ")", ":", "\n", "        ", "self", ".", "patterns", "=", "list", "(", "self", ".", "get_all_patterns", "(", ")", ")", "\n", "self", ".", "patterns_index", "=", "[", "i", "for", "i", ",", "x", "in", "enumerate", "(", "self", ".", "_df", ".", "columns", ")", "if", "x", "==", "\"patterns\"", "]", "[", "0", "]", "\n", "self", ".", "add_patterns_to_df", "(", ")", "\n", "self", ".", "_to_keep_columns", "+=", "self", ".", "patterns", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.train": [[145, 166], ["logging.info", "trainer.Trainer._df.iterrows", "numpy.array().astype", "trainer.Trainer.inputer.fit", "trainer.Trainer.inputer.transform", "trainer.Trainer.scaler.transform", "numpy.array().astype", "logging.info", "logging.info", "SMOTE", "SMOTE.fit_resample", "trainer.Trainer._clf.fit", "logging.info", "numpy.array", "trainer.Trainer.append", "numpy.array().astype.append", "trainer.Trainer._clf.score", "numpy.array", "numpy.array", "sum", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.score"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "x_input", "=", "[", "]", "\n", "y", "=", "[", "]", "\n", "logging", ".", "info", "(", "\"Preparing data from\"", ")", "\n", "for", "i", ",", "row", "in", "self", ".", "_df", ".", "iterrows", "(", ")", ":", "\n", "            ", "x", "=", "np", ".", "array", "(", "row", "[", "self", ".", "_to_keep_columns", "]", ")", "\n", "x_input", ".", "append", "(", "x", ")", "\n", "y", ".", "append", "(", "row", "[", "\"label\"", "]", ")", "\n", "", "x_input", "=", "np", ".", "array", "(", "x_input", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "self", ".", "inputer", ".", "fit", "(", "x_input", ")", "\n", "x_input", "=", "self", ".", "inputer", ".", "transform", "(", "x_input", ")", "\n", "x_input", "=", "self", ".", "scaler", ".", "transform", "(", "x_input", ")", "\n", "y", "=", "np", ".", "array", "(", "y", ")", ".", "astype", "(", "int", ")", "\n", "logging", ".", "info", "(", "\"Random classifier %0.2f\"", ",", "sum", "(", "y", ")", "/", "len", "(", "y", ")", ")", "\n", "logging", ".", "info", "(", "\"Learning model...\"", ")", "\n", "from", "imblearn", ".", "over_sampling", "import", "SMOTE", "\n", "smote", "=", "SMOTE", "(", ")", "\n", "x_input", ",", "y", "=", "smote", ".", "fit_resample", "(", "x_input", ",", "y", ")", "\n", "self", ".", "_clf", ".", "fit", "(", "x_input", ",", "y", ")", "\n", "logging", ".", "info", "(", "\"Accuracy on original data: %0.2f\"", ",", "\n", "self", ".", "_clf", ".", "score", "(", "x_input", ",", "y", ")", ")", "\n", "# logging.info(\"Parameters:\")", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.predict": [[182, 212], ["numpy.array", "features[].astype", "numpy.concatenate", "trainer.Trainer.astype", "numpy.concatenate", "trainer.Trainer.scaler.transform", "trainer.Trainer.inputer.transform", "trainer.Trainer.set_perplexity_quantile_row", "trainer.Trainer.set_perplexity_quantile_row", "trainer.Trainer.set_perplexity_quantile_row", "trainer.Trainer.set_perplexity_quantile_row", "trainer.Trainer.set_perplexity_quantile_row", "trainer.Trainer.set_perplexity_quantile_row", "trainer.Trainer.set_perplexity_quantile_row", "trainer.Trainer.set_perplexity_quantile_row", "trainer.Trainer.set_perplexity_quantile_row", "trainer.Trainer.set_perplexity_quantile_row", "numpy.isnan().astype", "trainer.Trainer.qt.transform().reshape", "trainer.Trainer.get_pattern_row().astype", "trainer.Trainer._clf.predict_proba", "numpy.isnan", "trainer.Trainer.qt.transform", "trainer.Trainer.get_pattern_row"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict_proba", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.get_pattern_row"], ["", "def", "predict", "(", "self", ",", "fact", ",", "features", ")", ":", "\n", "        ", "features", "=", "np", ".", "array", "(", "features", ")", "\n", "pattern", "=", "features", "[", "self", ".", "patterns_index", "]", "\n", "features", "[", "features", "==", "\"\"", "]", "=", "np", ".", "nan", "\n", "features", "=", "features", "[", "self", ".", "_filter", "]", ".", "astype", "(", "float", ")", "\n", "features", "=", "np", ".", "concatenate", "(", "(", "features", ",", "np", ".", "isnan", "(", "features", ")", ".", "astype", "(", "float", ")", ")", ")", "\n", "features", "=", "features", ".", "astype", "(", "np", ".", "float64", ")", "\n", "perplexity", "=", "features", "[", "self", ".", "perplexity_index", "]", "\n", "perplexity_features", "=", "[", "\n", "self", ".", "qt", ".", "transform", "(", "\n", "[", "[", "perplexity", "]", "]", "\n", ")", ".", "reshape", "(", "-", "1", ")", "[", "0", "]", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0", ",", "0.1", ")", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0.1", ",", "0.2", ")", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0.2", ",", "0.3", ")", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0.3", ",", "0.4", ")", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0.4", ",", "0.5", ")", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0.5", ",", "0.6", ")", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0.6", ",", "0.7", ")", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0.7", ",", "0.8", ")", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0.8", ",", "0.9", ")", ",", "\n", "self", ".", "set_perplexity_quantile_row", "(", "perplexity", ",", "0.9", ",", "1", ")", "]", "\n", "features", "=", "np", ".", "concatenate", "(", "\n", "(", "features", ",", "self", ".", "get_pattern_row", "(", "pattern", ")", ".", "astype", "(", "float", ")", ",", "\n", "perplexity_features", ")", ")", "\n", "features", "=", "self", ".", "scaler", ".", "transform", "(", "[", "features", "]", ")", "\n", "features", "=", "self", ".", "inputer", ".", "transform", "(", "features", ")", "\n", "# 0 because only one point", "\n", "# 1 because positive is one", "\n", "return", "self", ".", "_clf", ".", "predict_proba", "(", "features", ")", "[", "0", "]", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer._get_array": [[213, 226], ["str().lower().replace", "nltk.tokenize.word_tokenize", "numpy.zeros", "str().lower", "trainer.Trainer._model.get_vector", "str"], "methods", ["None"], ["", "def", "_get_array", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "sentence", "=", "str", "(", "sentence", ")", ".", "lower", "(", ")", ".", "replace", "(", "\"_\"", ",", "\" \"", ")", "\n", "sentence", "=", "word_tokenize", "(", "sentence", ")", "\n", "res", "=", "np", ".", "zeros", "(", "self", ".", "_model", ".", "vector_size", ")", "\n", "counter", "=", "0", "\n", "for", "word", "in", "sentence", ":", "\n", "            ", "if", "word", "in", "self", ".", "_model", ".", "vocab", ":", "\n", "                ", "res", "+=", "self", ".", "_model", ".", "get_vector", "(", "word", ")", "\n", "counter", "+=", "1", "\n", "", "", "if", "counter", "==", "0", ":", "\n", "            ", "return", "res", "\n", "", "else", ":", "\n", "            ", "return", "res", "/", "counter", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer._get_array_generated_fact": [[227, 232], ["trainer.Trainer._get_array", "trainer.Trainer._get_array", "trainer.Trainer._get_array", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer._get_array", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer._get_array", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer._get_array"], ["", "", "def", "_get_array_generated_fact", "(", "self", ",", "subj", ",", "pred", ",", "obj", ")", ":", "\n", "        ", "subj", "=", "self", ".", "_get_array", "(", "subj", ")", "\n", "pred", "=", "self", ".", "_get_array", "(", "pred", ")", "\n", "obj", "=", "self", ".", "_get_array", "(", "obj", ")", "\n", "return", "np", ".", "concatenate", "(", "[", "subj", ",", "pred", ",", "obj", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile": [[233, 239], ["trainer.Trainer._df[].quantile", "trainer.Trainer._df[].quantile", "trainer.Trainer._to_keep_columns.append", "int", "str", "str"], "methods", ["None"], ["", "def", "set_perplexity_quantile", "(", "self", ",", "threshold_min", ",", "threshold", ")", ":", "\n", "        ", "mini", "=", "self", ".", "_df", "[", "'Perplexity submodule'", "]", ".", "quantile", "(", "threshold_min", ")", "\n", "maxi", "=", "self", ".", "_df", "[", "'Perplexity submodule'", "]", ".", "quantile", "(", "threshold", ")", "\n", "self", ".", "_df", "[", "\"Perplexity submodule \"", "+", "str", "(", "threshold", ")", "]", "=", "[", "\n", "int", "(", "mini", "<=", "x", "<=", "maxi", ")", "for", "x", "in", "self", ".", "_df", "[", "\"Perplexity submodule\"", "]", "]", "\n", "self", ".", "_to_keep_columns", ".", "append", "(", "\"Perplexity submodule \"", "+", "str", "(", "threshold", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.Trainer.set_perplexity_quantile_row": [[240, 248], ["int", "trainer.Trainer._all_df[].quantile", "trainer.Trainer._all_df[].quantile"], "methods", ["None"], ["", "def", "set_perplexity_quantile_row", "(", "self", ",", "x", ",", "threshold_min", ",", "threshold", ")", ":", "\n", "        ", "if", "threshold_min", "not", "in", "self", ".", "_mini_perplexity_cache", ":", "\n", "            ", "mini", "=", "self", ".", "_all_df", "[", "'Perplexity submodule'", "]", ".", "quantile", "(", "threshold_min", ")", "\n", "self", ".", "_mini_perplexity_cache", "[", "threshold_min", "]", "=", "mini", "\n", "", "if", "threshold", "not", "in", "self", ".", "_maxi_perplexity_cache", ":", "\n", "            ", "maxi", "=", "self", ".", "_all_df", "[", "'Perplexity submodule'", "]", ".", "quantile", "(", "threshold", ")", "\n", "self", ".", "_maxi_perplexity_cache", "[", "threshold", "]", "=", "maxi", "\n", "", "return", "int", "(", "self", ".", "_mini_perplexity_cache", "[", "threshold_min", "]", "<=", "x", "<=", "self", ".", "_maxi_perplexity_cache", "[", "threshold", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns": [[249, 253], ["string_patterns.split", "type"], "function", ["None"], ["", "", "def", "get_patterns", "(", "string_patterns", ")", ":", "\n", "    ", "if", "type", "(", "string_patterns", ")", "==", "float", ":", "\n", "        ", "return", "[", "]", "\n", "", "return", "string_patterns", ".", "split", "(", "\"; \"", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.linear_combination_weighted_submodule.LinearCombinationWeightedSubmodule.__init__": [[39, 43], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Linear Combination Per Module Submodule\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.linear_combination_weighted_submodule.LinearCombinationWeightedSubmodule.process": [[44, 67], ["logging.info", "logging.info", "quasimodo.parts_of_facts.PartsOfFacts.from_generated_facts", "logging.info", "quasimodo.assertion_fusion.trainer.Trainer", "quasimodo.assertion_fusion.trainer.Trainer.train", "logging.info", "quasimodo.parts_of_facts.PartsOfFacts.from_generated_facts.get_all_facts", "sorted", "input_interface.replace_generated_facts", "input_interface.get_generated_facts", "logging.info", "linear_combination_weighted_submodule._save_weights", "sorted.append", "quasimodo.parts_of_facts.PartsOfFacts.from_generated_facts.get_generated_fact_with_score_from_classifier", "sum", "x.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.from_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.train", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_all_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.linear_combination_weighted_submodule._save_weights", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_generated_fact_with_score_from_classifier", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start linear combining per module submodule\"", ")", "\n", "\n", "logging", ".", "info", "(", "\"Grouping facts\"", ")", "\n", "parts_of_facts", "=", "PartsOfFacts", ".", "from_generated_facts", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", "\n", "\n", "if", "save_weights", ":", "\n", "            ", "logging", ".", "info", "(", "\"Saving weights facts\"", ")", "\n", "_save_weights", "(", "parts_of_facts", ")", "\n", "\n", "", "logging", ".", "info", "(", "\"Training the model...\"", ")", "\n", "trainer", "=", "Trainer", "(", "save_file", ")", "\n", "trainer", ".", "train", "(", ")", "\n", "\n", "logging", ".", "info", "(", "\"Generating new facts\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "for", "fact", "in", "parts_of_facts", ".", "get_all_facts", "(", ")", ":", "\n", "            ", "new_generated_facts", ".", "append", "(", "parts_of_facts", ".", "get_generated_fact_with_score_from_classifier", "(", "fact", ",", "trainer", ")", ")", "\n", "\n", "", "new_generated_facts", "=", "sorted", "(", "new_generated_facts", ",", "\n", "key", "=", "lambda", "x", ":", "-", "sum", "(", "[", "score", "[", "0", "]", "for", "score", "in", "x", ".", "get_score", "(", ")", ".", "scores", "]", ")", ")", "\n", "\n", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.linear_combination_weighted_submodule._save_weights": [[18, 35], ["linear_combination_weighted_submodule.get_annotated_data", "parts_of_facts.get_header", "parts_of_facts.get_header.append", "parts_of_facts.get_all_facts", "parts_of_facts.get_fact_row", "parts_of_facts.get_fact_row.append", "save.append", "open", "get_annotated_data.get", "str", "f.write", "fact.get_subject().get", "fact.get_predicate().get", "fact.get_object().get", "str", "int", "fact.get_subject", "fact.get_predicate", "fact.get_object", "fact.is_negative"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.linear_combination_weighted_submodule.get_annotated_data", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_header", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_all_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parts_of_facts.PartsOfFacts.get_fact_row", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["def", "_save_weights", "(", "parts_of_facts", ")", ":", "\n", "    ", "annotations", "=", "get_annotated_data", "(", ")", "\n", "header", "=", "parts_of_facts", ".", "get_header", "(", ")", "\n", "header", ".", "append", "(", "\"label\"", ")", "\n", "save", "=", "[", "\"\\t\"", ".", "join", "(", "header", ")", "]", "\n", "for", "fact", "in", "parts_of_facts", ".", "get_all_facts", "(", ")", ":", "\n", "        ", "row", "=", "parts_of_facts", ".", "get_fact_row", "(", "fact", ")", "\n", "row", ".", "append", "(", "annotations", ".", "get", "(", "(", "fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", ",", "\n", "fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ",", "\n", "fact", ".", "get_object", "(", ")", ".", "get", "(", ")", ",", "\n", "str", "(", "int", "(", "fact", ".", "is_negative", "(", ")", ")", ")", ")", ",", "\n", "-", "1", ")", ")", "\n", "row", "=", "[", "str", "(", "x", ")", "for", "x", "in", "row", "]", "\n", "save", ".", "append", "(", "\"\\t\"", ".", "join", "(", "row", ")", ")", "\n", "", "with", "open", "(", "save_file", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "for", "element", "in", "save", ":", "\n", "            ", "f", ".", "write", "(", "element", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.linear_combination_weighted_submodule.get_annotated_data": [[69, 76], ["dict", "open", "line.strip().split.strip().split", "line.strip().split.strip"], "function", ["None"], ["", "", "def", "get_annotated_data", "(", ")", ":", "\n", "    ", "annotations", "=", "dict", "(", ")", "\n", "with", "open", "(", "annotations_file", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "annotations", "[", "(", "line", "[", "0", "]", ",", "line", "[", "1", "]", ",", "line", "[", "2", "]", ",", "line", "[", "3", "]", ")", "]", "=", "line", "[", "4", "]", "\n", "", "", "return", "annotations", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.linear_combination_submodule.LinearCombinationSubmodule.__init__": [[12, 16], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Linear Combination Submodule\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.linear_combination_submodule.LinearCombinationSubmodule.process": [[17, 65], ["logging.info", "dict", "dict", "dict", "dict", "dict", "input_interface.get_generated_facts", "sorted", "input_interface.replace_generated_facts", "g.get_fact", "max", "sorted.append", "g.get_sentence_source", "d_gf_patterns[].add_pattern", "quasimodo.data_structures.multiple_module_reference.MultipleModuleReference", "quasimodo.data_structures.multiple_submodule_reference.MultipleSubmoduleReference", "g.get_sentence_source", "quasimodo.data_structures.multiple_pattern.MultiplePattern", "quasimodo.data_structures.generated_fact.GeneratedFact", "g.get_score", "d_gf_modules[].add_reference", "d_gf_submodules[].add_reference", "g.get_pattern", "g.get_score", "d_gf_modules[].add_reference", "d_gf_submodules[].add_reference", "g.get_pattern", "key.get_subject", "key.get_predicate", "key.get_object", "key.get_modality", "key.is_negative", "x.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_fact", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start linear combining submodule\"", ")", "\n", "# group the tuples", "\n", "d_gf", "=", "dict", "(", ")", "\n", "d_gf_sentences", "=", "dict", "(", ")", "\n", "d_gf_modules", "=", "dict", "(", ")", "\n", "d_gf_submodules", "=", "dict", "(", ")", "\n", "d_gf_patterns", "=", "dict", "(", ")", "\n", "for", "g", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "fact", "=", "g", ".", "get_fact", "(", ")", "\n", "if", "fact", "in", "d_gf", ":", "\n", "                ", "for", "score", ",", "module_source", ",", "submodule_source", "in", "g", ".", "get_score", "(", ")", ".", "scores", ":", "\n", "                    ", "d_gf", "[", "fact", "]", "+=", "score", "\n", "d_gf_modules", "[", "fact", "]", ".", "add_reference", "(", "module_source", ")", "\n", "d_gf_submodules", "[", "fact", "]", ".", "add_reference", "(", "submodule_source", ")", "\n", "", "d_gf_sentences", "[", "fact", "]", "+=", "g", ".", "get_sentence_source", "(", ")", "\n", "d_gf_patterns", "[", "fact", "]", ".", "add_pattern", "(", "g", ".", "get_pattern", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "d_gf_modules", "[", "fact", "]", "=", "MultipleModuleReference", "(", "self", ".", "_module_reference", ")", "\n", "d_gf_submodules", "[", "fact", "]", "=", "MultipleSubmoduleReference", "(", "self", ")", "\n", "for", "score", ",", "module_source", ",", "submodule_source", "in", "g", ".", "get_score", "(", ")", ".", "scores", ":", "\n", "                    ", "d_gf", "[", "fact", "]", "=", "score", "\n", "d_gf_modules", "[", "fact", "]", ".", "add_reference", "(", "module_source", ")", "\n", "d_gf_submodules", "[", "fact", "]", ".", "add_reference", "(", "submodule_source", ")", "\n", "", "d_gf_sentences", "[", "fact", "]", "=", "g", ".", "get_sentence_source", "(", ")", "\n", "d_gf_patterns", "[", "fact", "]", "=", "MultiplePattern", "(", "g", ".", "get_pattern", "(", ")", ")", "\n", "# Find the maximum", "\n", "", "", "maxi", "=", "0.000001", "\n", "for", "key", "in", "d_gf", ":", "\n", "            ", "maxi", "=", "max", "(", "maxi", ",", "d_gf", "[", "key", "]", ")", "\n", "# Normalize", "\n", "", "for", "key", "in", "d_gf", ":", "\n", "            ", "d_gf", "[", "key", "]", "/=", "maxi", "\n", "# Transform to generated facts", "\n", "", "new_generated_facts", "=", "[", "]", "\n", "for", "key", "in", "d_gf", ":", "\n", "            ", "new_generated_facts", ".", "append", "(", "GeneratedFact", "(", "\n", "key", ".", "get_subject", "(", ")", ",", "\n", "key", ".", "get_predicate", "(", ")", ",", "\n", "key", ".", "get_object", "(", ")", ",", "\n", "key", ".", "get_modality", "(", ")", ",", "\n", "key", ".", "is_negative", "(", ")", ",", "\n", "d_gf", "[", "key", "]", ",", "\n", "d_gf_sentences", "[", "key", "]", ",", "\n", "d_gf_patterns", "[", "key", "]", ")", ")", "\n", "", "new_generated_facts", "=", "sorted", "(", "new_generated_facts", ",", "\n", "key", "=", "lambda", "x", ":", "-", "x", ".", "get_score", "(", ")", ")", "\n", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.__init__": [[8, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "epsilon", "=", "1e-4", ")", ":", "\n", "        ", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "means", "=", "None", "\n", "self", ".", "standard_deviations", "=", "None", "\n", "self", ".", "prior", "=", "None", "\n", "self", ".", "y_unique", "=", "None", "\n", "self", ".", "values", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit": [[16, 24], ["gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_unique_y", "gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_prior", "gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_means_and_standard_deviations", "gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_values"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_unique_y", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_prior", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_means_and_standard_deviations", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_values"], ["", "def", "fit", "(", "self", ",", "x_input", ",", "y", ")", ":", "\n", "        ", "if", "x_input", "is", "None", "or", "y", "is", "None", ":", "\n", "            ", "return", "self", "\n", "", "self", ".", "set_unique_y", "(", "y", ")", "\n", "self", ".", "set_prior", "(", "y", ")", "\n", "self", ".", "set_means_and_standard_deviations", "(", "x_input", ",", "y", ")", "\n", "self", ".", "set_values", "(", "x_input", ",", "y", ",", "self", ".", "y_unique", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_unique_y": [[25, 27], ["numpy.unique"], "methods", ["None"], ["", "def", "set_unique_y", "(", "self", ",", "y", ")", ":", "\n", "        ", "self", ".", "y_unique", "=", "np", ".", "unique", "(", "y", ")", "# This is sorted", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict_proba": [[28, 33], ["numpy.apply_along_axis", "numpy.apply_along_axis", "gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_all_likelihoods", "gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_all_posterior"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_all_likelihoods", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_all_posterior"], ["", "def", "predict_proba", "(", "self", ",", "x_input", ")", ":", "\n", "        ", "likelihoods", "=", "np", ".", "apply_along_axis", "(", "\n", "lambda", "x", ":", "self", ".", "get_all_likelihoods", "(", "x", ")", ",", "1", ",", "x_input", ")", "\n", "probabilities", "=", "np", ".", "apply_along_axis", "(", "lambda", "x", ":", "self", ".", "get_all_posterior", "(", "x", ")", ",", "1", ",", "likelihoods", ")", "\n", "return", "probabilities", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict": [[34, 41], ["gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict_proba", "numpy.argmax", "numpy.array", "res.append"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict_proba"], ["", "def", "predict", "(", "self", ",", "x_input", ")", ":", "\n", "        ", "probabilities", "=", "self", ".", "predict_proba", "(", "x_input", ")", "\n", "indexes", "=", "np", ".", "argmax", "(", "probabilities", ",", "axis", "=", "1", ")", "\n", "res", "=", "[", "]", "\n", "for", "index", "in", "indexes", ":", "\n", "            ", "res", ".", "append", "(", "self", ".", "y_unique", "[", "index", "]", ")", "\n", "", "return", "np", ".", "array", "(", "res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_values": [[42, 56], ["dict", "enumerate", "enumerate", "enumerate", "dict", "range", "numpy.isnan", "range", "len", "[].get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "set_values", "(", "self", ",", "x_input", ",", "y", ",", "y_unique", ")", ":", "\n", "        ", "n_features", "=", "x_input", ".", "shape", "[", "1", "]", "\n", "n_classes", "=", "y_unique", ".", "shape", "[", "0", "]", "\n", "reversed_label", "=", "dict", "(", ")", "\n", "for", "i", ",", "label", "in", "enumerate", "(", "y_unique", ")", ":", "\n", "            ", "reversed_label", "[", "label", "]", "=", "i", "\n", "", "self", ".", "values", "=", "[", "[", "dict", "(", ")", "for", "_", "in", "range", "(", "n_features", ")", "]", "for", "_", "in", "range", "(", "n_classes", ")", "]", "\n", "for", "idx", ",", "row", "in", "enumerate", "(", "x_input", ")", ":", "\n", "            ", "j", "=", "reversed_label", "[", "y", "[", "idx", "]", "]", "\n", "for", "i", ",", "value", "in", "enumerate", "(", "row", ")", ":", "\n", "                ", "if", "np", ".", "isnan", "(", "value", ")", ":", "\n", "                    ", "continue", "\n", "", "if", "len", "(", "self", ".", "values", "[", "j", "]", "[", "i", "]", ")", "<=", "3", ":", "\n", "                    ", "self", ".", "values", "[", "j", "]", "[", "i", "]", "[", "value", "]", "=", "self", ".", "values", "[", "j", "]", "[", "i", "]", ".", "get", "(", "value", ",", "0", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_all_posterior": [[57, 70], ["enumerate", "numpy.array", "numpy.exp.max", "numpy.exp", "numpy.exp.append", "numpy.log", "math.log", "numpy.exp().sum", "numpy.exp"], "methods", ["None"], ["", "", "", "", "def", "get_all_posterior", "(", "self", ",", "likelihoods", ")", ":", "\n", "        ", "if", "self", ".", "prior", "is", "None", ":", "\n", "            ", "return", "[", "1", "/", "likelihoods", ".", "shape", "[", "0", "]", "]", "*", "likelihoods", ".", "shape", "[", "0", "]", "\n", "", "res", "=", "[", "]", "\n", "for", "i", ",", "likelihood", "in", "enumerate", "(", "likelihoods", ")", ":", "\n", "            ", "temp", "=", "likelihood", "+", "math", ".", "log", "(", "self", ".", "prior", "[", "i", "]", ")", "\n", "res", ".", "append", "(", "temp", ")", "\n", "", "res", "=", "np", ".", "array", "(", "res", ")", "\n", "max_res", "=", "res", ".", "max", "(", ")", "\n", "normalization_term", "=", "max_res", "+", "np", ".", "log", "(", "np", ".", "exp", "(", "res", "-", "max_res", ")", ".", "sum", "(", ")", ")", "\n", "res", "-=", "normalization_term", "\n", "res", "=", "np", ".", "exp", "(", "res", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_all_likelihoods": [[71, 101], ["range", "numpy.array", "range", "result.append", "numpy.isnan", "min", "math.log", "len", "len", "gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_gaussian", "len", "sum", "[].values"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_gaussian"], ["", "def", "get_all_likelihoods", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "means", "is", "None", "or", "self", ".", "standard_deviations", "is", "None", ":", "\n", "            ", "if", "x", "is", "not", "None", ":", "\n", "                ", "return", "[", "1", "/", "x", ".", "shape", "[", "0", "]", "]", "*", "x", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "return", "[", "]", "\n", "", "", "result", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "means", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "product", "=", "0.0", "\n", "for", "j", "in", "range", "(", "self", ".", "means", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "if", "not", "np", ".", "isnan", "(", "x", "[", "j", "]", ")", ":", "\n", "                    ", "if", "self", ".", "values", "is", "not", "None", "and", "len", "(", "self", ".", "values", "[", "i", "]", "[", "j", "]", ")", "==", "0", ":", "\n", "                        ", "temp", "=", "0.0", "\n", "", "elif", "self", ".", "values", "is", "not", "None", "and", "len", "(", "self", ".", "values", "[", "i", "]", "[", "j", "]", ")", "==", "1", ":", "\n", "                        ", "if", "x", "[", "j", "]", "in", "self", ".", "values", "[", "i", "]", "[", "j", "]", ":", "\n", "                            ", "temp", "=", "1.0", "\n", "", "else", ":", "\n", "                            ", "temp", "=", "0.0", "\n", "", "", "elif", "self", ".", "values", "is", "not", "None", "and", "len", "(", "self", ".", "values", "[", "i", "]", "[", "j", "]", ")", "==", "2", ":", "\n", "                        ", "if", "x", "[", "j", "]", "in", "self", ".", "values", "[", "i", "]", "[", "j", "]", ":", "\n", "                            ", "temp", "=", "self", ".", "values", "[", "i", "]", "[", "j", "]", "[", "x", "[", "j", "]", "]", "/", "sum", "(", "self", ".", "values", "[", "i", "]", "[", "j", "]", ".", "values", "(", ")", ")", "\n", "", "else", ":", "\n", "                            ", "temp", "=", "0.0", "\n", "", "", "else", ":", "\n", "                        ", "temp", "=", "self", ".", "get_gaussian", "(", "x", "[", "j", "]", ",", "self", ".", "means", "[", "i", ",", "j", "]", ",", "self", ".", "standard_deviations", "[", "i", ",", "j", "]", ")", "\n", "# We do not want zero probabilities", "\n", "", "temp", "=", "min", "(", "1.0", ",", "temp", "+", "self", ".", "epsilon", ")", "\n", "product", "+=", "math", ".", "log", "(", "temp", ")", "\n", "", "", "result", ".", "append", "(", "product", ")", "\n", "", "return", "np", ".", "array", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_gaussian": [[102, 110], ["abs", "math.exp", "abs", "math.sqrt"], "methods", ["None"], ["", "def", "get_gaussian", "(", "self", ",", "x", ",", "mean", ",", "standard_deviation", ")", ":", "\n", "        ", "if", "abs", "(", "standard_deviation", ")", "<", "self", ".", "epsilon", ":", "\n", "            ", "if", "abs", "(", "x", "-", "mean", ")", "<", "self", ".", "epsilon", ":", "\n", "                ", "return", "1.0", "\n", "", "else", ":", "\n", "                ", "return", "0.0", "\n", "", "", "return", "1.0", "/", "math", ".", "sqrt", "(", "2", "*", "math", ".", "pi", "*", "standard_deviation", "**", "2", ")", "*", "math", ".", "exp", "(", "-", "(", "x", "-", "mean", ")", "**", "2", "/", "2.0", "/", "standard_deviation", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_prior": [[111, 116], ["collections.Counter"], "methods", ["None"], ["", "def", "set_prior", "(", "self", ",", "y", ")", ":", "\n", "        ", "self", ".", "prior", "=", "collections", ".", "Counter", "(", "y", ")", "\n", "for", "key", "in", "self", ".", "y_unique", ":", "\n", "            ", "self", ".", "prior", "[", "key", "]", "/=", "y", ".", "shape", "[", "0", "]", "\n", "", "return", "self", ".", "prior", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_means_and_standard_deviations": [[117, 135], ["numpy.ones", "numpy.ones", "dict", "range", "range", "numpy.mean", "numpy.std", "numpy.isnan"], "methods", ["None"], ["", "def", "set_means_and_standard_deviations", "(", "self", ",", "x_input", ",", "y", ")", ":", "\n", "        ", "n_features", "=", "x_input", ".", "shape", "[", "1", "]", "\n", "n_classes", "=", "self", ".", "y_unique", ".", "shape", "[", "0", "]", "\n", "self", ".", "means", "=", "np", ".", "ones", "(", "(", "n_classes", ",", "n_features", ")", ")", "\n", "self", ".", "standard_deviations", "=", "np", ".", "ones", "(", "(", "n_classes", ",", "n_features", ")", ")", "\n", "specific_input", "=", "dict", "(", ")", "\n", "for", "out_class", "in", "self", ".", "y_unique", ":", "\n", "            ", "specific_input", "[", "out_class", "]", "=", "x_input", "[", "y", "==", "out_class", "]", "\n", "", "for", "i", "in", "range", "(", "n_classes", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "n_features", ")", ":", "\n", "                ", "temp", "=", "specific_input", "[", "self", ".", "y_unique", "[", "i", "]", "]", "[", ":", ",", "j", "]", "\n", "temp", "=", "temp", "[", "~", "np", ".", "isnan", "(", "temp", ")", "]", "\n", "if", "temp", ".", "shape", "[", "0", "]", "<=", "1", ":", "\n", "                    ", "self", ".", "means", "[", "i", ",", "j", "]", "=", "0", "\n", "self", ".", "standard_deviations", "[", "i", ",", "j", "]", "=", "0", "\n", "", "else", ":", "\n", "                    ", "self", ".", "means", "[", "i", ",", "j", "]", "=", "np", ".", "mean", "(", "temp", ")", "\n", "self", ".", "standard_deviations", "[", "i", ",", "j", "]", "=", "np", ".", "std", "(", "temp", ",", "ddof", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.score": [[136, 139], ["gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict", "sum"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict"], ["", "", "", "", "def", "score", "(", "self", ",", "x_input", ",", "y", ")", ":", "\n", "        ", "predictions", "=", "self", ".", "predict", "(", "x_input", ")", "\n", "return", "sum", "(", "predictions", "==", "y", ")", "/", "y", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_params": [[140, 142], ["None"], "methods", ["None"], ["", "def", "get_params", "(", "self", ",", "deep", "=", "True", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_params": [[143, 145], ["None"], "methods", ["None"], ["", "def", "set_params", "(", "self", ",", "params", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.incomplete_modality_submodule.IncompleteModalitySubmodule.__init__": [[7, 11], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Incomplete Modality\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.incomplete_modality_submodule.IncompleteModalitySubmodule.process": [[12, 45], ["logging.info", "input_interface.get_generated_facts", "dict", "input_interface.replace_generated_facts", "gf.get_subject().get", "gf_subj[].append", "gf0.get_object().get", "gf.get_subject", "gf1.get_object().get", "new_gfs.append", "gf0.get_object", "gf0.has_modality", "new_gfs.append", "gf1.get_object", "gf0.get_predicate().get", "gf1.get_predicate().get", "gf0.change_modality", "gf1.get_predicate().get", "gf0.get_modality().get", "gf0.get_predicate", "gf1.get_predicate", "gf1.get_predicate", "gf0.get_modality"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.has_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the incomplete modality processing\"", ")", "\n", "gfs", "=", "input_interface", ".", "get_generated_facts", "(", ")", "\n", "# group by subject", "\n", "gf_subj", "=", "dict", "(", ")", "\n", "for", "gf", "in", "gfs", ":", "\n", "            ", "subj", "=", "gf", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "if", "subj", "in", "gf_subj", ":", "\n", "                ", "gf_subj", "[", "subj", "]", ".", "append", "(", "gf", ")", "\n", "", "else", ":", "\n", "                ", "gf_subj", "[", "subj", "]", "=", "[", "gf", "]", "\n", "", "", "new_gfs", "=", "[", "]", "\n", "for", "subj", "in", "gf_subj", ":", "\n", "# for each object, we check if it appears in a predicate", "\n", "            ", "for", "gf0", "in", "gf_subj", "[", "subj", "]", ":", "\n", "                ", "found", "=", "False", "\n", "obj0", "=", "gf0", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "for", "gf1", "in", "gf_subj", "[", "subj", "]", ":", "\n", "                    ", "obj1", "=", "gf1", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "if", "(", "obj0", "in", "gf1", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "or", "(", "obj0", "in", "obj1", "and", "obj0", "!=", "obj1", ")", ")", "and", "gf0", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "in", "gf1", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ":", "\n", "# Modify modality", "\n", "                        ", "found", "=", "True", "\n", "modality", "=", "\"TBC\"", "\n", "if", "gf0", ".", "has_modality", "(", ")", ":", "\n", "                            ", "modality", "+=", "\" \"", "+", "gf0", ".", "get_modality", "(", ")", ".", "get", "(", ")", "\n", "", "new_gfs", ".", "append", "(", "gf0", ".", "change_modality", "(", "modality", ")", ")", "\n", "break", "\n", "", "", "if", "not", "found", ":", "\n", "                    ", "new_gfs", ".", "append", "(", "gf0", ")", "\n", "", "", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_gfs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.useless_punctuation_cleaner.UselessPunctuationCleaner.__init__": [[11, 15], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Useless Punctuation Cleaner\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.useless_punctuation_cleaner.UselessPunctuationCleaner.process": [[16, 28], ["logging.info", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "generated_fact.get_object().get", "nltk.word_tokenize", "generated_fact.change_object", "new_generated_facts.append", "generated_fact.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the removal of the punctuation\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "tokens", "=", "nltk", ".", "word_tokenize", "(", "obj", ")", "\n", "while", "tokens", "and", "tokens", "[", "-", "1", "]", "in", "string", ".", "punctuation", ":", "\n", "                ", "tokens", "=", "tokens", "[", ":", "-", "1", "]", "\n", "", "if", "tokens", ":", "\n", "                ", "new_generated_fact", "=", "generated_fact", ".", "change_object", "(", "\" \"", ".", "join", "(", "tokens", ")", ")", "\n", "new_generated_facts", ".", "append", "(", "new_generated_fact", ")", "\n", "", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.filter_object_submodule.FilterObjectSubmodule.__init__": [[33, 37], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Filter Object\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.filter_object_submodule.FilterObjectSubmodule.process": [[38, 70], ["logging.info", "input_interface.get_subjects", "input_interface.get_generated_facts", "logging.info", "input_interface.replace_generated_facts", "generated_fact.change_object.change_object.get_object().get", "generated_fact.change_object.change_object.get_object().get().split", "generated_fact.change_object.change_object.get_predicate().get", "filter_object_submodule._is_totally_forbidden", "generated_fact.change_object.change_object.change_object", "len", "new_generated_facts.append", "len", "len", "generated_fact.change_object.change_object.get_object", "len", "D_ENCHANT.check", "generated_fact.change_object.change_object.get_object().get", "generated_fact.change_object.change_object.get_predicate", "[].isalnum", "new_obj.append", "len", "input_interface.get_generated_facts", "generated_fact.change_object.change_object.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.filter_object_submodule._is_totally_forbidden", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the filtering object\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "all_subjects", "=", "input_interface", ".", "get_subjects", "(", ")", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "if", "obj", "in", "forbidden", "or", "_is_totally_forbidden", "(", "obj", ",", "totally_forbidden", ")", "or", "len", "(", "obj", ")", "==", "1", ":", "\n", "                ", "continue", "\n", "", "if", "\" \"", "not", "in", "obj", "and", "not", "D_ENCHANT", ".", "check", "(", "obj", ")", "and", "not", "obj", "in", "all_subjects", ":", "\n", "                ", "continue", "\n", "", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", ".", "split", "(", "\" \"", ")", "\n", "predicate", "=", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "if", "predicate", "==", "obj", "[", "0", "]", ":", "\n", "                ", "obj", "=", "obj", "[", "1", ":", "]", "\n", "# Remove last punctuation", "\n", "", "changed_last", "=", "False", "\n", "if", "obj", "and", "obj", "[", "-", "1", "]", "and", "not", "obj", "[", "-", "1", "]", "[", "-", "1", "]", ".", "isalnum", "(", ")", ":", "\n", "                ", "obj", "[", "-", "1", "]", "=", "obj", "[", "-", "1", "]", "[", ":", "-", "1", "]", "\n", "changed_last", "=", "True", "\n", "", "new_obj", "=", "[", "]", "\n", "for", "p", "in", "obj", ":", "\n", "                ", "if", "p", "not", "in", "dirty_words", ":", "\n", "                    ", "new_obj", ".", "append", "(", "p", ")", "\n", "", "", "if", "(", "obj", "!=", "new_obj", "or", "changed_last", ")", "and", "len", "(", "new_obj", ")", "!=", "0", ":", "\n", "                ", "generated_fact", "=", "generated_fact", ".", "change_object", "(", "\" \"", ".", "join", "(", "new_obj", ")", ".", "strip", "(", ")", ")", "\n", "", "if", "len", "(", "new_obj", ")", "!=", "0", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "generated_fact", ")", "\n", "\n", "", "", "logging", ".", "info", "(", "\"%d facts were removed by the object cleaner\"", ",", "\n", "len", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", "-", "len", "(", "new_generated_facts", ")", ")", "\n", "\n", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.filter_object_submodule._is_totally_forbidden": [[21, 29], ["sentence.split"], "function", ["None"], ["def", "_is_totally_forbidden", "(", "sentence", ",", "forbidden", ")", ":", "\n", "    ", "s", "=", "sentence", ".", "split", "(", "\" \"", ")", "\n", "if", "\"quiz let\"", "in", "sentence", ":", "\n", "        ", "return", "True", "\n", "", "for", "w", "in", "s", ":", "\n", "        ", "if", "w", "in", "forbidden", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.BeNormalizationSubmodule.__init__": [[31, 35], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Be Normalization\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.BeNormalizationSubmodule.process": [[36, 43], ["logging.info", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "be_normalization_submodule.process_generated_fact", "new_gfs.append"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.process_generated_fact"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"normalize the form of be\"", ")", "\n", "new_gfs", "=", "[", "]", "\n", "for", "gf", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "new_generated_fact", "=", "process_generated_fact", "(", "gf", ")", "\n", "new_gfs", ".", "append", "(", "new_generated_fact", ")", "\n", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_gfs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.starts_by_word": [[5, 7], ["sentence.startswith"], "function", ["None"], ["def", "starts_by_word", "(", "sentence", ",", "word", ")", ":", "\n", "    ", "return", "sentence", ".", "startswith", "(", "word", "+", "\" \"", ")", "or", "sentence", "==", "word", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.replace_first_word": [[9, 14], ["sentence.split.split"], "function", ["None"], ["", "def", "replace_first_word", "(", "sentence", ",", "replacement", ")", ":", "\n", "    ", "sentence", "=", "sentence", ".", "split", "(", "\" \"", ")", "\n", "sentence", "[", "0", "]", "=", "replacement", "\n", "sentence", "=", "\" \"", ".", "join", "(", "sentence", ")", "\n", "return", "sentence", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.process_generated_fact": [[16, 27], ["generated_fact.get_predicate().get", "be_normalization_submodule.starts_by_word", "be_normalization_submodule.starts_by_word", "be_normalization_submodule.replace_first_word", "generated_fact.change_predicate", "be_normalization_submodule.starts_by_word", "generated_fact.get_predicate", "be_normalization_submodule.replace_first_word", "generated_fact.change_predicate"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.starts_by_word", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.starts_by_word", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.replace_first_word", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.starts_by_word", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.be_normalization_submodule.replace_first_word", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate"], ["", "def", "process_generated_fact", "(", "generated_fact", ")", ":", "\n", "    ", "predicate", "=", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "if", "starts_by_word", "(", "predicate", ",", "\"is\"", ")", "or", "starts_by_word", "(", "predicate", ",", "\"are\"", ")", ":", "\n", "        ", "predicate", "=", "replace_first_word", "(", "predicate", ",", "\"be\"", ")", "\n", "new_generated_fact", "=", "generated_fact", ".", "change_predicate", "(", "predicate", ")", "\n", "", "elif", "starts_by_word", "(", "predicate", ",", "\"were\"", ")", ":", "\n", "        ", "predicate", "=", "replace_first_word", "(", "predicate", ",", "\"was\"", ")", "\n", "new_generated_fact", "=", "generated_fact", ".", "change_predicate", "(", "predicate", ")", "\n", "", "else", ":", "\n", "        ", "new_generated_fact", "=", "generated_fact", "\n", "", "return", "new_generated_fact", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.present_conjugate_normalization.PresentConjugateNormalization.__init__": [[8, 12], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"No conjugate for present\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.present_conjugate_normalization.PresentConjugateNormalization.process": [[13, 27], ["logging.info", "nltk.stem.WordNetLemmatizer", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "g.get_predicate().get", "g.get_predicate().get.split", "new_generated_facts.append", "new_generated_facts.append", "g.get_predicate", "len", "g.change_predicate", "nltk.stem.WordNetLemmatizer.lemmatize"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the conjugate present\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "lemmatizer", "=", "WordNetLemmatizer", "(", ")", "\n", "for", "g", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "predicate", "=", "g", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "pred_l", "=", "predicate", ".", "split", "(", "\" \"", ")", "\n", "if", "len", "(", "pred_l", ")", ">", "0", "and", "pred_l", "[", "0", "]", "[", "-", "1", "]", "==", "\"s\"", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "\n", "g", ".", "change_predicate", "(", "(", "lemmatizer", ".", "lemmatize", "(", "pred_l", "[", "0", "]", ",", "pos", "=", "\"v\"", ")", "\n", "+", "\" \"", "+", "\" \"", ".", "join", "(", "pred_l", "[", "1", ":", "]", ")", ")", ".", "strip", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "g", ")", "\n", "", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.similar_object_remover.SimilarObjectRemover.__init__": [[14, 18], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Similar Object Remover\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.similar_object_remover.SimilarObjectRemover.process": [[19, 45], ["logging.info", "dict", "input_interface.get_generated_facts", "nltk.stem.WordNetLemmatizer", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "generated_fact.get_subject", "generated_fact.get_predicate", "generated_fact.get_object", "[].add", "generated_fact.get_subject", "generated_fact.get_predicate", "generated_fact.get_object().get", "quasimodo.data_structures.object.Object", "dict", "set", "new_generated_facts.append", "new_generated_facts.append", "generated_fact.get_object", "nltk.stem.WordNetLemmatizer.lemmatize", "generated_fact.change_object", "quasimodo.data_structures.object.Object.split"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_object"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the removing of similar objects\"", ")", "\n", "# Group generated facts by subject, predicate and object", "\n", "groups", "=", "dict", "(", ")", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subject", "=", "generated_fact", ".", "get_subject", "(", ")", "\n", "if", "subject", "not", "in", "groups", ":", "\n", "                ", "groups", "[", "subject", "]", "=", "dict", "(", ")", "\n", "", "predicate", "=", "generated_fact", ".", "get_predicate", "(", ")", "\n", "if", "predicate", "not", "in", "groups", "[", "subject", "]", ":", "\n", "                ", "groups", "[", "subject", "]", "[", "predicate", "]", "=", "set", "(", ")", "\n", "", "obj", "=", "generated_fact", ".", "get_object", "(", ")", "\n", "groups", "[", "subject", "]", "[", "predicate", "]", ".", "add", "(", "obj", ")", "\n", "", "lemmatizer", "=", "WordNetLemmatizer", "(", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subject", "=", "generated_fact", ".", "get_subject", "(", ")", "\n", "predicate", "=", "generated_fact", ".", "get_predicate", "(", ")", "\n", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "obj", "=", "\" \"", ".", "join", "(", "[", "lemmatizer", ".", "lemmatize", "(", "x", ")", "for", "x", "in", "obj", ".", "split", "(", ")", "if", "x", "not", "in", "USELESS_ARTICLE", "]", ")", "\n", "obj", "=", "Object", "(", "obj", ")", "\n", "if", "obj", "in", "groups", "[", "subject", "]", "[", "predicate", "]", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "generated_fact", ".", "change_object", "(", "obj", ")", ")", "\n", "", "else", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "generated_fact", ")", "\n", "", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.to_singular_subject_submodule.ToSingularSubjectSubmodule.__init__": [[9, 13], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"To Singular Subject Submodule\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.to_singular_subject_submodule.ToSingularSubjectSubmodule.process": [[14, 27], ["logging.info", "set", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "g.get_subject().get", "singular_maker.to_singular", "x.get", "new_generated_facts.append", "new_generated_facts.append", "input_interface.get_subjects", "g.get_subject", "g.change_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_subject"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Turn subject to singular\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "subjects", "=", "set", "(", "[", "x", ".", "get", "(", ")", "for", "x", "in", "input_interface", ".", "get_subjects", "(", ")", "]", ")", "\n", "singular_maker", "=", "DEFAULT_INFLECT", "\n", "for", "g", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subj", "=", "g", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "singular", "=", "singular_maker", ".", "to_singular", "(", "subj", ")", "\n", "if", "singular", "not", "in", "subjects", "or", "singular", "==", "subj", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "g", ")", "\n", "", "else", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "g", ".", "change_subject", "(", "singular", ")", ")", "\n", "", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.no_personal_submodule.NoPersonalSubmodule.__init__": [[28, 32], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"No Personal\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.no_personal_submodule.NoPersonalSubmodule.process": [[33, 43], ["logging.info", "list", "logging.info", "input_interface.replace_generated_facts", "filter", "input_interface.get_generated_facts", "len", "len", "input_interface.get_generated_facts", "no_personal_submodule.should_be_removed"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.no_personal_submodule.should_be_removed"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the removal of personal words\"", ")", "\n", "new_generated_facts", "=", "list", "(", "filter", "(", "\n", "lambda", "x", ":", "not", "should_be_removed", "(", "x", ")", ",", "\n", "input_interface", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "\n", "logging", ".", "info", "(", "\"%d facts were removed by the personal words cleaner\"", ",", "\n", "len", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", "-", "len", "(", "new_generated_facts", ")", ")", "\n", "\n", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.no_personal_submodule.should_be_removed": [[10, 24], ["fact.get_object().get().split", "any", "quasimodo.spacy_accessor.get_default_annotator", "quasimodo.spacy_accessor.get_default_annotator.annotate", "fact.get_object().get", "fact.get_object().get", "fact.get_object", "fact.get_predicate().get", "fact.get_object", "fact.get_subject().get", "fact.get_predicate", "fact.get_subject"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.get_default_annotator", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.annotate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["def", "should_be_removed", "(", "fact", ")", ":", "\n", "    ", "obj_words", "=", "fact", ".", "get_object", "(", ")", ".", "get", "(", ")", ".", "split", "(", "\" \"", ")", "\n", "if", "any", "(", "[", "y", "in", "PERSONALS", "for", "y", "in", "obj_words", "]", ")", ":", "\n", "        ", "return", "True", "\n", "", "if", "\"it\"", "in", "obj_words", ":", "\n", "        ", "spacy_annotator", "=", "get_default_annotator", "(", ")", "\n", "spo", "=", "fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", "+", "\" \"", "+", "fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "+", "\" \"", "+", "fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "annotation", "=", "spacy_annotator", ".", "annotate", "(", "spo", ")", "\n", "for", "token", "in", "annotation", ":", "\n", "            ", "if", "token", ".", "text", "==", "\"it\"", "and", "token", ".", "dep_", "!=", "\"nsubj\"", ":", "\n", "                ", "return", "True", "\n", "", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.can_transformation_submodule.CanTransformationSubmodule.__init__": [[39, 43], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Can Transformation\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.can_transformation_submodule.CanTransformationSubmodule.process": [[44, 53], ["logging.info", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "can_transformation_submodule.transform_generated_fact", "can_transformation_submodule.is_can_with_verb", "new_gfs.append"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.can_transformation_submodule.transform_generated_fact", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.can_transformation_submodule.is_can_with_verb"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the transformation of can predicates\"", ")", "\n", "new_gfs", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "# Correct OPENIE output", "\n", "            ", "new_generated_fact", "=", "transform_generated_fact", "(", "generated_fact", ")", "\n", "if", "is_can_with_verb", "(", "new_generated_fact", ")", ":", "\n", "                ", "new_gfs", ".", "append", "(", "new_generated_fact", ")", "\n", "", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_gfs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.can_transformation_submodule.transform_generated_fact": [[7, 24], ["generated_fact.get_predicate().get", "generated_fact.get_object().get", "generated_fact.get_predicate", "generated_fact.get_object", "generated_fact.change_object", "generated_fact.change_object().change_predicate", "generated_fact.get_object().get.replace", "new_generated_fact.change_predicate.change_object", "new_generated_fact.change_predicate.change_predicate", "generated_fact.change_object", "generated_fact.get_object().get.replace", "generated_fact.get_pattern", "generated_fact.get_pattern().to_str", "generated_fact.get_object().get.replace", "generated_fact.get_pattern"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["def", "transform_generated_fact", "(", "generated_fact", ")", ":", "\n", "    ", "new_generated_fact", "=", "generated_fact", "\n", "predicate", "=", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "if", "predicate", "==", "\"can\"", "and", "obj", "[", ":", "4", "]", "==", "\"can \"", ":", "\n", "        ", "if", "obj", "[", ":", "7", "]", "!=", "\"can be \"", ":", "\n", "            ", "new_generated_fact", "=", "generated_fact", ".", "change_object", "(", "obj", ".", "replace", "(", "\"can \"", ",", "\"\"", ")", ")", "\n", "", "else", ":", "\n", "            ", "new_generated_fact", "=", "generated_fact", ".", "change_object", "(", "obj", ".", "replace", "(", "\"can be \"", ",", "\"\"", ")", ")", ".", "change_predicate", "(", "\"can be\"", ")", "\n", "", "", "elif", "predicate", "==", "\"be\"", ":", "\n", "        ", "if", "obj", "[", ":", "4", "]", "==", "\"can \"", ":", "\n", "            ", "new_generated_fact", "=", "new_generated_fact", ".", "change_object", "(", "obj", ".", "replace", "(", "\"can \"", ",", "\"\"", ")", ")", "\n", "", "if", "generated_fact", ".", "get_pattern", "(", ")", "is", "not", "None", "and", "\"why can\"", "in", "generated_fact", ".", "get_pattern", "(", ")", ".", "to_str", "(", ")", ":", "\n", "            ", "new_generated_fact", "=", "new_generated_fact", ".", "change_predicate", "(", "\"can be\"", ")", "\n", "", "", "return", "new_generated_fact", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.can_transformation_submodule.is_can_with_verb": [[25, 36], ["generated_fact.get_predicate().get().split", "quasimodo.assertion_generation.openie_fact_generator_submodule.get_synsets", "generated_fact.get_predicate", "len", "generated_fact.get_object().get", "generated_fact.get_predicate().get", "synset.pos", "generated_fact.get_object", "generated_fact.get_predicate"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_synsets", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "is_can_with_verb", "(", "generated_fact", ")", ":", "\n", "    ", "if", "generated_fact", ".", "get_predicate", "(", ")", "!=", "\"can\"", ":", "\n", "        ", "return", "True", "\n", "", "predicate_split", "=", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ".", "split", "(", "\" \"", ")", "\n", "if", "len", "(", "predicate_split", ")", ">", "1", ":", "\n", "        ", "return", "True", "\n", "", "synsets", "=", "get_synsets", "(", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "for", "synset", "in", "synsets", ":", "\n", "        ", "if", "synset", ".", "pos", "(", ")", "==", "\"v\"", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.are_transformation_submodule.AreTransformationSubmodule.__init__": [[15, 19], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Are transformation\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.are_transformation_submodule.AreTransformationSubmodule.process": [[20, 50], ["logging.info", "input_interface.get_generated_facts", "dict", "os.listdir", "input_interface.replace_generated_facts", "gf.get_predicate().get", "gf.get_object().get", "new_gfs.append", "filename.replace", "open", "line.strip.strip.strip", "gf.get_predicate", "gf.get_object", "gf.change_predicate", "quasimodo.spacy_accessor.get_default_annotator", "quasimodo.spacy_accessor.get_default_annotator.lemmatize", "gf.change_predicate", "gf.change_predicate", "gf.get_pattern", "gf.get_pattern().get_relation", "gf.get_pattern().get_relation", "gf.get_pattern", "gf.get_pattern"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.get_default_annotator", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_relation", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_relation", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_pattern"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the are predicate transformation\"", ")", "\n", "gfs", "=", "input_interface", ".", "get_generated_facts", "(", ")", "\n", "conversion", "=", "dict", "(", ")", "\n", "for", "filename", "in", "os", ".", "listdir", "(", "path_to_properties", ")", ":", "\n", "            ", "name", "=", "\"has_\"", "+", "filename", ".", "replace", "(", "\".txt\"", ",", "\"\"", ")", "\n", "with", "open", "(", "path_to_properties", "+", "filename", ")", "as", "f", ":", "\n", "                ", "for", "line", "in", "f", ":", "\n", "                    ", "line", "=", "line", ".", "strip", "(", ")", "\n", "conversion", "[", "line", "]", "=", "name", "\n", "", "", "", "new_gfs", "=", "[", "]", "\n", "for", "gf", "in", "gfs", ":", "\n", "            ", "predicate", "=", "gf", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "obj", "=", "gf", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "if", "predicate", "in", "[", "\"be\"", ",", "\"are\"", ",", "\"is\"", ",", "\"hasProperty\"", ",", "\"have\"", ",", "\"has\"", "]", ":", "\n", "                ", "if", "obj", "in", "conversion", ":", "\n", "                    ", "new_gf", "=", "gf", ".", "change_predicate", "(", "conversion", "[", "obj", "]", ")", "\n", "", "else", ":", "\n", "                    ", "spacy_annotator", "=", "get_default_annotator", "(", ")", "\n", "obj_lemmatized", "=", "\" \"", ".", "join", "(", "spacy_annotator", ".", "lemmatize", "(", "obj", ")", ")", "\n", "if", "obj_lemmatized", "in", "conversion", ":", "\n", "                        ", "new_gf", "=", "gf", ".", "change_predicate", "(", "conversion", "[", "obj_lemmatized", "]", ")", "\n", "", "elif", "gf", ".", "get_pattern", "(", ")", "is", "not", "None", "and", "gf", ".", "get_pattern", "(", ")", ".", "get_relation", "(", ")", "is", "not", "None", "and", "predicate", "!=", "\"have\"", "and", "predicate", "!=", "\"has\"", ":", "\n", "                        ", "new_gf", "=", "gf", ".", "change_predicate", "(", "gf", ".", "get_pattern", "(", ")", ".", "get_relation", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "new_gf", "=", "gf", "\n", "", "", "", "else", ":", "\n", "                ", "new_gf", "=", "gf", "\n", "", "new_gfs", ".", "append", "(", "new_gf", ")", "\n", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_gfs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.cleaning_predicate_submodule.CleaningPredicateSubmodule.__init__": [[11, 15], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Cleaning predicate\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.cleaning_predicate_submodule.CleaningPredicateSubmodule.process": [[16, 49], ["logging.info", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "generated_fact.change_predicate.change_predicate.get_predicate().get", "generated_fact.change_predicate.get_predicate().get.split", "new_generated_facts.append", "all", "generated_fact.change_predicate.change_predicate.contains_a_verb_in_predicate", "len", "len", "generated_fact.change_predicate.change_predicate.change_predicate", "generated_fact.change_predicate.change_predicate.change_predicate().change_negativity", "generated_fact.change_predicate.change_predicate.change_predicate", "generated_fact.change_predicate.change_predicate.get_predicate", "new_predicate_parts.append", "len", "len", "generated_fact.change_predicate.change_predicate.change_predicate", "x.isalnum", "x.isspace"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.contains_a_verb_in_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.change_negativity", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start cleaning predicates\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "predicate", "=", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "if", "predicate", "in", "forbidden_predicate", ":", "\n", "                ", "continue", "\n", "", "if", "not", "all", "(", "[", "x", ".", "isalnum", "(", ")", "or", "x", ".", "isspace", "(", ")", "for", "x", "in", "predicate", "]", ")", ":", "\n", "                ", "continue", "\n", "", "predicate_parts", "=", "predicate", ".", "split", "(", "\" \"", ")", "\n", "if", "not", "generated_fact", ".", "contains_a_verb_in_predicate", "(", ")", ":", "\n", "                ", "continue", "\n", "", "new_predicate_parts", "=", "[", "]", "\n", "for", "p", "in", "predicate_parts", ":", "\n", "                ", "if", "p", "not", "in", "dirty_words", ":", "\n", "                    ", "new_predicate_parts", ".", "append", "(", "p", ")", "\n", "", "", "if", "len", "(", "predicate_parts", ")", "!=", "len", "(", "new_predicate_parts", ")", ":", "\n", "                ", "generated_fact", "=", "generated_fact", ".", "change_predicate", "(", "\n", "\" \"", ".", "join", "(", "new_predicate_parts", ")", ".", "strip", "(", ")", ")", "\n", "", "if", "predicate_parts", "[", "0", "]", "==", "\"not\"", ":", "\n", "                ", "if", "len", "(", "predicate_parts", ")", "==", "1", ":", "\n", "                    ", "continue", "\n", "", "generated_fact", "=", "generated_fact", ".", "change_predicate", "(", "\n", "\" \"", ".", "join", "(", "new_predicate_parts", "[", "1", ":", "]", ")", ".", "strip", "(", ")", ")", ".", "change_negativity", "(", "True", ")", "\n", "", "if", "predicate_parts", "[", "0", "]", "==", "\"to\"", ":", "\n", "                ", "if", "len", "(", "predicate_parts", ")", "==", "1", ":", "\n", "                    ", "continue", "\n", "", "generated_fact", "=", "generated_fact", ".", "change_predicate", "(", "\n", "\" \"", ".", "join", "(", "new_predicate_parts", "[", "1", ":", "]", ")", ".", "strip", "(", ")", ")", "\n", "", "new_generated_facts", ".", "append", "(", "generated_fact", ")", "\n", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.identical_subject_object_submodule.IdenticalSubjectObjectSubmodule.__init__": [[7, 11], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Identical subject/object\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.identical_subject_object_submodule.IdenticalSubjectObjectSubmodule.process": [[12, 19], ["logging.info", "logging.info", "input_interface.replace_generated_facts", "input_interface.get_generated_facts", "len", "len", "g.get_subject().get", "g.get_object().get", "input_interface.get_generated_facts", "g.get_subject", "g.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start identical subject/object removal\"", ")", "\n", "new_gfs", "=", "[", "g", "for", "g", "in", "input_interface", ".", "get_generated_facts", "(", ")", "\n", "if", "g", ".", "get_subject", "(", ")", ".", "get", "(", ")", "!=", "g", ".", "get_object", "(", ")", ".", "get", "(", ")", "]", "\n", "logging", ".", "info", "(", "\"%d facts were removed by the personal words cleaner\"", ",", "\n", "len", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", "-", "len", "(", "new_gfs", ")", ")", "\n", "return", "input_interface", ".", "replace_generated_facts", "(", "new_gfs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.antonym_checking_submodule.AntonymCheckingSubmodule.__init__": [[8, 12], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Antonym Checking\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.antonym_checking_submodule.AntonymCheckingSubmodule.process": [[13, 51], ["logging.info", "dict", "input_interface.get_generated_facts", "input_interface.get_generated_facts", "g.get_subject().get", "g.get_object().get", "g.get_predicate().get", "g.is_negative", "nltk.corpus.wordnet.synsets", "g.get_subject().get", "g.get_object().get", "g.get_predicate().get", "g.is_negative", "nltk.corpus.wordnet.synsets", "synset.lemmas", "synset.lemmas", "g.get_score().add_score", "g.get_subject", "g.get_object", "g.get_predicate", "lemma.antonyms", "g.get_subject", "g.get_object", "g.get_predicate", "dict.setdefault().setdefault", "g.get_score", "dict", "[].add", "dict.setdefault", "dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the antonym checking\"", ")", "\n", "antonyms", "=", "dict", "(", ")", "\n", "for", "g", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subj", "=", "g", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "obj", "=", "g", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "pred", "=", "g", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "if", "g", ".", "is_negative", "(", ")", ":", "\n", "                ", "pred", "=", "\"not \"", "+", "pred", "\n", "", "for", "synset", "in", "wn", ".", "synsets", "(", "obj", ")", ":", "\n", "                ", "for", "lemma", "in", "synset", ".", "lemmas", "(", ")", ":", "\n", "                    ", "for", "antonym", "in", "lemma", ".", "antonyms", "(", ")", ":", "\n", "                        ", "if", "subj", "in", "antonyms", ":", "\n", "                            ", "if", "pred", "in", "antonyms", "[", "subj", "]", ":", "\n", "                                ", "antonyms", "[", "subj", "]", "[", "pred", "]", ".", "add", "(", "antonym", ")", "\n", "", "else", ":", "\n", "                                ", "antonyms", "[", "subj", "]", "[", "pred", "]", "=", "{", "antonym", "}", "\n", "", "", "else", ":", "\n", "                            ", "antonyms", "[", "subj", "]", "=", "dict", "(", ")", "\n", "antonyms", "[", "subj", "]", "[", "pred", "]", "=", "{", "antonym", "}", "\n", "", "", "", "", "", "for", "g", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "found", "=", "False", "\n", "subj", "=", "g", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "obj", "=", "g", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "pred", "=", "g", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "if", "g", ".", "is_negative", "(", ")", ":", "\n", "                ", "pred", "=", "\"not \"", "+", "pred", "\n", "", "for", "synset", "in", "wn", ".", "synsets", "(", "obj", ")", ":", "\n", "                ", "if", "found", ":", "\n", "                    ", "break", "\n", "", "for", "lemma", "in", "synset", ".", "lemmas", "(", ")", ":", "\n", "                    ", "if", "lemma", "in", "antonyms", ".", "setdefault", "(", "subj", ",", "dict", "(", ")", ")", ".", "setdefault", "(", "pred", ",", "[", "]", ")", ":", "\n", "                        ", "found", "=", "True", "\n", "break", "\n", "", "", "", "if", "not", "found", ":", "\n", "                ", "g", ".", "get_score", "(", ")", ".", "add_score", "(", "1.0", ",", "self", ".", "_module_reference", ",", "self", ")", "\n", "", "", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.tbc_cleaner.TBCCleaner.__init__": [[7, 11], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"TBC Cleaner\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.tbc_cleaner.TBCCleaner.process": [[12, 38], ["logging.info", "input_interface.get_generated_facts", "logging.info", "logging.info", "input_interface.replace_generated_facts", "generated_fact.get_modality", "generated_fact.get_modality.get_number_completing_parts", "generated_fact.get_sentence_source().get_total_number_occurrences", "generated_fact.get_modality.get_modalities_and_scores", "new_generated_facts.append", "new_generated_facts.append", "generated_fact.get_sentence_source"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_number_completing_parts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.get_total_number_occurrences", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_modalities_and_scores", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the cleaning of TBC\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "n_removed", "=", "0", "\n", "n_not_removed", "=", "0", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "modality", "=", "generated_fact", ".", "get_modality", "(", ")", "\n", "if", "modality", ".", "get_number_completing_parts", "(", ")", ">=", "1", ":", "\n", "                ", "n_sentences", "=", "generated_fact", ".", "get_sentence_source", "(", ")", ".", "get_total_number_occurrences", "(", ")", "\n", "n_tbc", "=", "0", "\n", "for", "modality_raw", ",", "score", "in", "modality", ".", "get_modalities_and_scores", "(", ")", ":", "\n", "                    ", "if", "\"TBC\"", "in", "modality_raw", ":", "\n", "                        ", "n_tbc", "=", "score", "\n", "# When we have as many TBC as sentences,", "\n", "# it means all contain it and so we can remove the fact", "\n", "", "", "if", "n_tbc", "!=", "n_sentences", ":", "\n", "                    ", "new_generated_facts", ".", "append", "(", "generated_fact", ")", "\n", "n_not_removed", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "n_removed", "+=", "1", "\n", "", "", "else", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "generated_fact", ")", "\n", "", "", "logging", ".", "info", "(", "\"%d facts were removed by the TBC cleaner\"", ",", "n_removed", ")", "\n", "logging", ".", "info", "(", "\"%d facts were not removed by the TBC cleaner\"", ",", "\n", "n_not_removed", ")", "\n", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.filter_language_questions.FilterLanguageQuestions.__init__": [[29, 33], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Filter language questions\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.filter_language_questions.FilterLanguageQuestions.process": [[34, 43], ["logging.info", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "g.get_predicate().get", "g.get_object().get", "new_generated_facts.append", "g.get_predicate", "g.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start filtering the language questions\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "for", "g", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "predicate", "=", "g", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "obj", "=", "g", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "if", "predicate", "!=", "\"be in\"", "or", "obj", "not", "in", "LANGUAGES", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "g", ")", "\n", "", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.basic_modality_submodule.BasicModalitySubmodule.__init__": [[8, 12], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Basic modality\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.basic_modality_submodule.BasicModalitySubmodule.process": [[13, 64], ["logging.info", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "generated_fact.change_object.change_object.get_predicate().get().split", "generated_fact.change_object.change_object.get_object().get().split", "dict", "generated_fact.change_object.change_object.get_modality().get_modalities_and_scores", "generated_fact.change_object.change_object.get_sentence_source().get_total_number_occurrences", "new_generated_facts.append", "len", "len", "len", "generated_fact.change_object.change_object.change_modality", "generated_fact.change_object.change_object.get_predicate().get", "generated_fact.change_object.change_object.get_object().get", "generated_fact.change_object.change_object.get_modality", "generated_fact.change_object.change_object.get_sentence_source", "quasimodo.data_structures.modality.get_multiple_parts_combination", "len", "len", "generated_fact.change_object.change_object.change_predicate", "len", "len", "generated_fact.change_object.change_object.change_object", "new_predicate.append", "new_obj.append", "dict.items", "generated_fact.change_object.change_object.get_predicate", "generated_fact.change_object.change_object.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.Modality.get_modalities_and_scores", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.get_total_number_occurrences", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.modality.get_multiple_parts_combination", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start basic modality recognition\"", ")", "\n", "# still has several meanings...", "\n", "modality_words", "=", "[", "\"always\"", ",", "\"commonly\"", ",", "\"often\"", ",", "\"sometimes\"", ",", "\n", "\"only\"", ",", "\"rarely\"", ",", "\"mostly\"", ",", "\"especially\"", ",", "\n", "\"generally\"", ",", "\"at_time\"", ",", "\"still\"", ",", "\"constantly\"", ",", "\n", "\"almost\"", ",", "\"never\"", "]", "\n", "modality_pred", "=", "[", "\"now\"", "]", "\n", "new_generated_facts", "=", "[", "]", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "predicate_split", "=", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ".", "split", "(", "\" \"", ")", "\n", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", ".", "split", "(", "\" \"", ")", "\n", "modality_d", "=", "dict", "(", ")", "\n", "for", "modality", ",", "score", "in", "generated_fact", ".", "get_modality", "(", ")", ".", "get_modalities_and_scores", "(", ")", ":", "\n", "                ", "if", "modality", "not", "in", "modality_d", ":", "\n", "                    ", "modality_d", "[", "modality", "]", "=", "0", "\n", "", "modality_d", "[", "modality", "]", "+=", "score", "\n", "", "new_predicate", "=", "[", "]", "\n", "new_obj", "=", "[", "]", "\n", "n_occurrences", "=", "generated_fact", ".", "get_sentence_source", "(", ")", ".", "get_total_number_occurrences", "(", ")", "\n", "if", "len", "(", "predicate_split", ")", ">", "1", ":", "\n", "                ", "for", "predicate_part", "in", "predicate_split", ":", "\n", "                    ", "if", "predicate_part", "in", "modality_words", "or", "predicate_part", "in", "modality_pred", ":", "\n", "                        ", "if", "predicate_part", "not", "in", "modality_d", ":", "\n", "                            ", "modality_d", "[", "predicate_part", "]", "=", "0", "\n", "", "modality_d", "[", "predicate_part", "]", "+=", "n_occurrences", "\n", "", "else", ":", "\n", "                        ", "new_predicate", ".", "append", "(", "predicate_part", ")", "\n", "", "", "", "else", ":", "\n", "                ", "new_predicate", "=", "predicate_split", "\n", "", "if", "len", "(", "obj", ")", ">", "1", ":", "\n", "                ", "for", "o", "in", "obj", ":", "\n", "                    ", "if", "o", "in", "modality_words", ":", "\n", "                        ", "if", "o", "not", "in", "modality_d", ":", "\n", "                            ", "modality_d", "[", "o", "]", "=", "0", "\n", "", "modality_d", "[", "o", "]", "+=", "n_occurrences", "\n", "", "else", ":", "\n", "                        ", "new_obj", ".", "append", "(", "o", ")", "\n", "", "", "", "else", ":", "\n", "                ", "new_obj", "=", "obj", "\n", "", "if", "len", "(", "modality_d", ")", "!=", "0", ":", "\n", "                ", "generated_fact", "=", "generated_fact", ".", "change_modality", "(", "\n", "get_multiple_parts_combination", "(", "\n", "modality_d", ".", "items", "(", ")", "\n", ")", ")", "\n", "if", "len", "(", "predicate_split", ")", "!=", "len", "(", "new_predicate", ")", ":", "\n", "                    ", "generated_fact", "=", "generated_fact", ".", "change_predicate", "(", "\" \"", ".", "join", "(", "new_predicate", ")", ".", "strip", "(", ")", ")", "\n", "", "if", "len", "(", "obj", ")", "!=", "len", "(", "new_obj", ")", ":", "\n", "                    ", "generated_fact", "=", "generated_fact", ".", "change_object", "(", "\" \"", ".", "join", "(", "new_obj", ")", ".", "strip", "(", ")", ")", "\n", "", "", "new_generated_facts", ".", "append", "(", "generated_fact", ")", "\n", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.to_lower_case_submodule.ToLowerCaseSubmodule.__init__": [[7, 11], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"To lower Case\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.to_lower_case_submodule.ToLowerCaseSubmodule.process": [[12, 25], ["logging.info", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "gf.get_subject().get().lower().strip", "gf.get_predicate().get().lower().strip", "gf.get_object().get().lower().strip", "gf.change_subject().change_object().change_predicate", "new_gfs.append", "gf.get_subject().get().lower", "gf.get_predicate().get().lower", "gf.get_object().get().lower", "gf.change_subject().change_object", "gf.get_subject().get", "gf.get_predicate().get", "gf.get_object().get", "gf.change_subject", "gf.get_subject", "gf.get_predicate", "gf.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the lowering case\"", ")", "\n", "\n", "new_gfs", "=", "[", "]", "\n", "for", "gf", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subj", "=", "gf", ".", "get_subject", "(", ")", ".", "get", "(", ")", ".", "lower", "(", ")", ".", "strip", "(", ")", "\n", "pred", "=", "gf", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ".", "lower", "(", ")", ".", "strip", "(", ")", "\n", "obj", "=", "gf", ".", "get_object", "(", ")", ".", "get", "(", ")", ".", "lower", "(", ")", ".", "strip", "(", ")", "\n", "new_gf", "=", "gf", ".", "change_subject", "(", "subj", ")", ".", "change_object", "(", "obj", ")", ".", "change_predicate", "(", "pred", ")", "\n", "new_gfs", ".", "append", "(", "new_gf", ")", "\n", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_gfs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.only_subject_submodule.OnlySubjectSubmodule.__init__": [[35, 39], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Only Subject\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.only_subject_submodule.OnlySubjectSubmodule.process": [[40, 71], ["logging.info", "only_subject_submodule.get_subjects_in_all_forms", "list", "list", "collections.Counter", "collections.Counter.items", "logging.info", "input_interface.replace_generated_facts", "filter", "filter", "x.get_subject().get", "to_save.append", "input_interface.get_generated_facts", "input_interface.get_generated_facts", "len", "len", "x.get_subject", "str", "open", "f.write", "logging.info", "logging.info", "input_interface.get_generated_facts", "x.get_subject().get().lower", "x.get_subject().get().lower", "x.get_subject().get", "x.get_subject().get", "x.get_subject", "x.get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.only_subject_submodule.get_subjects_in_all_forms", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the filtering the given subjects\"", ")", "\n", "subjects", ",", "_", "=", "get_subjects_in_all_forms", "(", "input_interface", ")", "\n", "\n", "new_generated_facts", "=", "list", "(", "filter", "(", "\n", "lambda", "x", ":", "x", ".", "get_subject", "(", ")", ".", "get", "(", ")", ".", "lower", "(", ")", "in", "subjects", ",", "\n", "input_interface", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "\n", "discarded_generated_facts", "=", "list", "(", "filter", "(", "\n", "lambda", "x", ":", "x", ".", "get_subject", "(", ")", ".", "get", "(", ")", ".", "lower", "(", ")", "not", "in", "subjects", ",", "\n", "input_interface", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "forgotten_subjects", "=", "[", "x", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "for", "x", "in", "discarded_generated_facts", "]", "\n", "counter_forgotten_subjects", "=", "Counter", "(", "forgotten_subjects", ")", "\n", "to_save", "=", "[", "]", "\n", "for", "subject", ",", "value", "in", "counter_forgotten_subjects", ".", "items", "(", ")", ":", "\n", "            ", "to_save", ".", "append", "(", "subject", "+", "\"\\t\"", "+", "str", "(", "value", ")", ")", "\n", "", "while", "True", ":", "\n", "            ", "try", ":", "\n", "                ", "with", "open", "(", "FORGOTTEN_SUBJECTS_FILE", ",", "\"w\"", ")", "as", "f", ":", "\n", "                    ", "f", ".", "write", "(", "\"\\n\"", ".", "join", "(", "to_save", ")", ")", "\n", "", "break", "\n", "", "except", "OSError", "as", "e", ":", "\n", "                ", "logging", ".", "info", "(", "\"Problem when saving forgotten subjects.  Trying\"", "\n", "\"again...\"", ")", "\n", "logging", ".", "info", "(", "e", ")", "\n", "", "", "logging", ".", "info", "(", "\"%d facts were removed by the subject cleaner\"", ",", "\n", "len", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", "-", "len", "(", "\n", "new_generated_facts", ")", ")", "\n", "\n", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.only_subject_submodule.get_subjects_in_all_forms": [[13, 31], ["set", "dict", "input_interface.get_subjects", "set.discard", "set.discard", "set.discard", "subject.get().lower", "set.add", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_plural", "set.add", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_singular", "set.add", "subject.get"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["def", "get_subjects_in_all_forms", "(", "input_interface", ")", ":", "\n", "    ", "subjects", "=", "set", "(", ")", "\n", "variations", "=", "dict", "(", ")", "\n", "for", "subject", "in", "input_interface", ".", "get_subjects", "(", ")", ":", "\n", "        ", "original_subject", "=", "subject", ".", "get", "(", ")", ".", "lower", "(", ")", "\n", "variations", "[", "original_subject", "]", "=", "original_subject", "\n", "subjects", ".", "add", "(", "original_subject", ")", "\n", "plural_subject", "=", "DEFAULT_INFLECT", ".", "to_plural", "(", "original_subject", ")", "\n", "subjects", ".", "add", "(", "plural_subject", ")", "\n", "variations", "[", "plural_subject", "]", "=", "original_subject", "\n", "singular_subject", "=", "DEFAULT_INFLECT", ".", "to_singular", "(", "original_subject", ")", "\n", "if", "singular_subject", ":", "\n", "            ", "subjects", ".", "add", "(", "singular_subject", ")", "\n", "variations", "[", "singular_subject", "]", "=", "original_subject", "\n", "", "", "subjects", ".", "discard", "(", "\"it\"", ")", "\n", "subjects", ".", "discard", "(", "\"its\"", ")", "\n", "subjects", ".", "discard", "(", "\"me\"", ")", "\n", "return", "subjects", ",", "variations", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.assertion_normalization_module.AssertionNormalizationModule.__init__": [[12, 35], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"lower-case\"", ",", "\n", "\"clean-subject\"", ",", "\n", "\"only-subject\"", ",", "\n", "\"no-personal\"", ",", "\n", "\"filter-object\"", ",", "\n", "\"cleaning-predicate\"", ",", "\n", "\"singular-subject\"", ",", "\n", "\"basic-modality\"", ",", "\n", "\"present-continuous\"", ",", "\n", "\"are-transformation\"", ",", "\n", "\"can-transformation\"", ",", "\n", "\"be-normalization\"", ",", "\n", "\"identical-subj-obj\"", ",", "\n", "\"present-conjugate\"", ",", "\n", "\"similar-object-remover\"", ",", "\n", "\"filter-language-questions\"", ",", "\n", "\"fact-combinor\"", ",", "\n", "\"tbc-cleaner\"", "\n", "]", "\n", "super", "(", "AssertionNormalizationModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Assertion Normalization Module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.assertion_normalization_module.AssertionNormalizationModule.process": [[36, 54], ["logging.info", "submodule.process", "logging.info", "assertion_normalization_module.contains_beach_have_sand", "submodule.clean", "submodule.process.get_subjects", "logging.info", "logging.info", "submodule.process.get_generated_facts", "logging.info", "logging.info", "len", "logging.info", "submodule.process.get_generated_facts", "str", "str", "len", "submodule.process.get_generated_facts", "submodule.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.assertion_normalization_module.contains_beach_have_sand", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the assertion normalization module\"", ")", "\n", "for", "submodule", "in", "self", ".", "_submodules", ":", "\n", "            ", "input_interface", "=", "submodule", ".", "process", "(", "input_interface", ")", "\n", "logging", ".", "info", "(", "\"We have \"", "+", "str", "(", "len", "(", "\n", "input_interface", ".", "get_generated_facts", "(", ")", ")", ")", "+", "\" facts.\"", ")", "\n", "if", "\"beach\"", "in", "input_interface", ".", "get_subjects", "(", ")", ":", "\n", "                ", "logging", ".", "info", "(", "\"beach is a subject\"", ")", "\n", "", "else", ":", "\n", "                ", "logging", ".", "info", "(", "\"beach is not a subject\"", ")", "\n", "", "if", "contains_beach_have_sand", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", ":", "\n", "                ", "logging", ".", "info", "(", "\"Still beach have sand\"", ")", "\n", "", "else", ":", "\n", "                ", "logging", ".", "info", "(", "\"Beach have sand disappeared\"", ")", "\n", "", "if", "len", "(", "input_interface", ".", "get_generated_facts", "(", ")", ")", ">", "0", ":", "\n", "                ", "logging", ".", "info", "(", "\"The first fact is: \"", "+", "str", "(", "input_interface", ".", "get_generated_facts", "(", ")", "[", "0", "]", ")", ")", "\n", "", "submodule", ".", "clean", "(", ")", "\n", "", "return", "input_interface", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.assertion_normalization_module.contains_beach_have_sand": [[56, 63], ["gf.get_object().get", "gf.get_subject().get", "gf.get_subject().get", "gf.get_predicate().get", "gf.get_predicate().get", "gf.get_object", "gf.get_subject", "gf.get_subject", "gf.get_predicate", "gf.get_predicate"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "", "def", "contains_beach_have_sand", "(", "gfs", ")", ":", "\n", "    ", "for", "gf", "in", "gfs", ":", "\n", "        ", "if", "(", "(", "gf", ".", "get_subject", "(", ")", ".", "get", "(", ")", "==", "\"beach\"", "or", "gf", ".", "get_subject", "(", ")", ".", "get", "(", ")", "==", "\"beaches\"", ")", "\n", "and", "(", "gf", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "==", "\"have\"", "or", "gf", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "==", "\"has\"", ")", "\n", "and", "gf", ".", "get_object", "(", ")", ".", "get", "(", ")", "==", "\"sand\"", ")", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "False", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.present_continuous_submodule.PresentContinuousSubmodule.__init__": [[8, 12], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"No Present Continuous\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.present_continuous_submodule.PresentContinuousSubmodule.process": [[13, 30], ["logging.info", "nltk.stem.WordNetLemmatizer", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "g.get_predicate().get", "g.get_predicate().get.split", "new_generated_facts.append", "g.get_predicate", "len", "g.change_predicate", "new_generated_facts.append", "len", "nltk.stem.WordNetLemmatizer.lemmatize"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the cleaning of present continuous\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "lemmatizer", "=", "WordNetLemmatizer", "(", ")", "\n", "for", "g", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "predicate", "=", "g", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "pred_l", "=", "predicate", ".", "split", "(", "\" \"", ")", "\n", "if", "len", "(", "pred_l", ")", ">", "1", "and", "pred_l", "[", "0", "]", "in", "[", "\"are\"", ",", "\"is\"", ",", "\"be\"", "]", "and", "\"ing\"", "==", "pred_l", "[", "1", "]", "[", "-", "3", ":", "]", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "\n", "g", ".", "change_predicate", "(", "(", "lemmatizer", ".", "lemmatize", "(", "pred_l", "[", "1", "]", ",", "pos", "=", "\"v\"", ")", "\n", "+", "\" \"", "+", "\" \"", ".", "join", "(", "pred_l", "[", "2", ":", "]", ")", ")", ".", "strip", "(", ")", ")", ")", "\n", "", "elif", "len", "(", "pred_l", ")", ">", "0", "and", "pred_l", "[", "0", "]", "[", "-", "3", ":", "]", "==", "\"ing\"", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "new_generated_facts", ".", "append", "(", "g", ")", "\n", "", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.subject_removal_submodule.SubjectRemovalSubmodule.__init__": [[15, 19], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Subject Removal\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.subject_removal_submodule.SubjectRemovalSubmodule.process": [[20, 29], ["logging.info", "set", "list", "input_interface.replace_subjects", "input_interface.get_subjects", "quasimodo.data_structures.subject.Subject", "list.remove"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start removing some subjects\"", ")", "\n", "subjects", "=", "set", "(", "input_interface", ".", "get_subjects", "(", ")", ")", "\n", "for", "subject", "in", "to_remove", ":", "\n", "            ", "subject", "=", "Subject", "(", "subject", ")", "\n", "if", "subject", "in", "subjects", ":", "\n", "                ", "subjects", ".", "remove", "(", "subject", ")", "\n", "", "", "subjects", "=", "list", "(", "subjects", ")", "\n", "return", "input_interface", ".", "replace_subjects", "(", "subjects", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.clean_subject.CleanSubject.__init__": [[7, 11], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Filter language questions\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.clean_subject.CleanSubject.process": [[12, 23], ["logging.info", "input_interface.get_generated_facts", "input_interface.replace_generated_facts", "g.change_subject.change_subject.get_subject().get", "g.change_subject.get_subject().get.startswith", "new_generated_facts.append", "g.change_subject.change_subject.change_subject", "g.change_subject.get_subject().get.startswith", "g.change_subject.change_subject.get_subject", "g.change_subject.change_subject.change_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.change_subject"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start filtering the language questions\"", ")", "\n", "new_generated_facts", "=", "[", "]", "\n", "for", "g", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subject", "=", "g", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "if", "subject", ".", "startswith", "(", "\"a \"", ")", ":", "\n", "                ", "g", "=", "g", ".", "change_subject", "(", "subject", "[", "2", ":", "]", ")", "\n", "", "elif", "subject", ".", "startswith", "(", "\"an \"", ")", ":", "\n", "                ", "g", "=", "g", ".", "change_subject", "(", "subject", "[", "2", ":", "]", ")", "\n", "", "new_generated_facts", ".", "append", "(", "g", ")", "\n", "", "return", "input_interface", ".", "replace_generated_facts", "(", "new_generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_lower_case.TestToSingular.setUp": [[13, 16], ["quasimodo.assertion_normalization.to_lower_case_submodule.ToLowerCaseSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "to_lower_case", "=", "ToLowerCaseSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_lower_case.TestToSingular.test_subject": [[17, 24], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_to_lower_case.TestToSingular.empty_input.add_generated_facts().add_subjects", "test_to_lower_case.TestToSingular.to_lower_case.process", "test_to_lower_case.TestToSingular.get_generated_facts", "test_to_lower_case.TestToSingular.assertEqual", "test_to_lower_case.TestToSingular.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_subject().get", "test_to_lower_case.TestToSingular.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_subject", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"Lions\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"lion\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "to_lower_case", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"lions\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_lower_case.TestToSingular.test_predicate": [[25, 32], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_to_lower_case.TestToSingular.empty_input.add_generated_facts().add_subjects", "test_to_lower_case.TestToSingular.to_lower_case.process", "test_to_lower_case.TestToSingular.get_generated_facts", "test_to_lower_case.TestToSingular.assertEqual", "test_to_lower_case.TestToSingular.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "test_to_lower_case.TestToSingular.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_predicate", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"lions\"", ",", "\"is A\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", ",", "generated_fact", "]", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"lion\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "to_lower_case", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "2", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"is a\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_lower_case.TestToSingular.test_object": [[33, 40], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_to_lower_case.TestToSingular.empty_input.add_generated_facts().add_subjects", "test_to_lower_case.TestToSingular.to_lower_case.process", "test_to_lower_case.TestToSingular.get_generated_facts", "test_to_lower_case.TestToSingular.assertEqual", "test_to_lower_case.TestToSingular.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_object().get", "test_to_lower_case.TestToSingular.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_object", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"is a\"", ",", "\"cAt\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"lion\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "to_lower_case", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"cat\"", ",", "generated_facts", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_lower_case.TestToSingular.test_do_nothing": [[41, 48], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_to_lower_case.TestToSingular.empty_input.add_generated_facts().add_subjects", "test_to_lower_case.TestToSingular.to_lower_case.process", "test_to_lower_case.TestToSingular.get_generated_facts", "test_to_lower_case.TestToSingular.assertEqual", "test_to_lower_case.TestToSingular.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_subject().get", "test_to_lower_case.TestToSingular.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_do_nothing", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"crisis\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"lion\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "to_lower_case", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"crisis\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_all_seeds.TestAllSeeds.setUp": [[9, 13], ["quasimodo.seeds.all_seeds_module.AllSeedsModule", "quasimodo.data_structures.inputs.Inputs", "test_all_seeds.TestAllSeeds.all_seeds_module.process"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process"], ["    ", "def", "setUp", "(", "self", ")", ":", "\n", "        ", "self", ".", "all_seeds_module", "=", "AllSeedsModule", "(", ")", "\n", "empty_input", "=", "Inputs", "(", ")", "\n", "self", ".", "inputs", "=", "self", ".", "all_seeds_module", ".", "process", "(", "empty_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_all_seeds.TestAllSeeds.test_contains_animal": [[14, 16], ["test_all_seeds.TestAllSeeds.assertIn", "test_all_seeds.TestAllSeeds.inputs.get_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects"], ["", "def", "test_contains_animal", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertIn", "(", "\"worm\"", ",", "self", ".", "inputs", ".", "get_subjects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_all_seeds.TestAllSeeds.test_contains_occupation": [[17, 19], ["test_all_seeds.TestAllSeeds.assertIn", "test_all_seeds.TestAllSeeds.inputs.get_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects"], ["", "def", "test_contains_occupation", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertIn", "(", "\"doctor\"", ",", "self", ".", "inputs", ".", "get_subjects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_all_seeds.TestAllSeeds.test_contains_noun": [[20, 22], ["test_all_seeds.TestAllSeeds.assertIn", "test_all_seeds.TestAllSeeds.inputs.get_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects"], ["", "def", "test_contains_noun", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertIn", "(", "\"pen\"", ",", "self", ".", "inputs", ".", "get_subjects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_all_seeds.TestAllSeeds.test_subject_removal": [[23, 25], ["test_all_seeds.TestAllSeeds.assertNotIn", "test_all_seeds.TestAllSeeds.inputs.get_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects"], ["", "def", "test_subject_removal", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertNotIn", "(", "\"it\"", ",", "self", ".", "inputs", ".", "get_subjects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_patterns.TestGooglePatterns.test_get_str": [[9, 13], ["quasimodo.patterns.pattern_google.PatternGoogle", "test_google_patterns.TestGooglePatterns.assertEqual", "quasimodo.patterns.pattern_google.PatternGoogle.to_str_subject", "quasimodo.data_structures.subject.Subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str_subject"], ["    ", "def", "test_get_str", "(", "self", ")", ":", "\n", "        ", "pattern", "=", "PatternGoogle", "(", "\"how are <SUBJS>\"", ")", "\n", "self", ".", "assertEqual", "(", "pattern", ".", "to_str_subject", "(", "Subject", "(", "\"perl oyster\"", ")", ")", ",", "\n", "\"how are perl oysters\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_animal_submodule.TestAnimalSubmodule.setUp": [[10, 14], ["quasimodo.seeds.animal_submodule.AnimalSubmodule", "quasimodo.seeds.animal_seed_module.AnimalSeedModule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "animal_submodule", "=", "AnimalSubmodule", "(", "None", ")", "\n", "self", ".", "animal_module", "=", "AnimalSeedModule", "(", ")", "\n", "self", ".", "empty_input_interface", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_animal_submodule.TestAnimalSubmodule.test_something": [[15, 18], ["test_animal_submodule.TestAnimalSubmodule.animal_submodule.process", "test_animal_submodule.TestAnimalSubmodule.assertIn", "test_animal_submodule.TestAnimalSubmodule.get_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects"], ["", "def", "test_something", "(", "self", ")", ":", "\n", "        ", "animal_input_interface", "=", "self", ".", "animal_submodule", ".", "process", "(", "self", ".", "empty_input_interface", ")", "\n", "self", ".", "assertIn", "(", "\"worm\"", ",", "animal_input_interface", ".", "get_subjects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_animal_submodule.TestAnimalSubmodule.test_animal_module": [[19, 22], ["test_animal_submodule.TestAnimalSubmodule.animal_module.process", "test_animal_submodule.TestAnimalSubmodule.assertIn", "test_animal_submodule.TestAnimalSubmodule.get_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects"], ["", "def", "test_animal_module", "(", "self", ")", ":", "\n", "        ", "animal_input_interface", "=", "self", ".", "animal_module", ".", "process", "(", "self", ".", "empty_input_interface", ")", "\n", "self", ".", "assertIn", "(", "\"worm\"", ",", "animal_input_interface", ".", "get_subjects", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inputs.TestInput.test_serialize_multiple_source_occurrence": [[21, 27], ["quasimodo.data_structures.multiple_submodule_reference.MultipleSubmoduleReference", "quasimodo.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "print", "test_inputs.TestInput.assertIsNotNone", "quasimodo.data_structures.submodule_reference_interface.SubmoduleReferenceInterface", "quasimodo.data_structures.submodule_reference_interface.SubmoduleReferenceInterface", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw.to_dict", "json.dumps", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw.to_dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_dict"], ["    ", "def", "test_serialize_multiple_source_occurrence", "(", "self", ")", ":", "\n", "        ", "msr", "=", "MultipleSubmoduleReference", "(", "SubmoduleReferenceInterface", "(", "\"Submodule0\"", ")", ")", "\n", "msr", ".", "add_reference", "(", "SubmoduleReferenceInterface", "(", "\"Submodule0\"", ")", ")", "\n", "mso", "=", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"baba is you\"", ",", "msr", ",", "1", ")", "\n", "print", "(", "mso", ".", "to_dict", "(", ")", ")", "\n", "self", ".", "assertIsNotNone", "(", "json", ".", "dumps", "(", "mso", ".", "to_dict", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inputs.TestInput.test_save": [[28, 98], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.multiple_module_reference.MultipleModuleReference", "quasimodo.data_structures.multiple_module_reference.MultipleModuleReference.add_reference", "quasimodo.data_structures.multiple_submodule_reference.MultipleSubmoduleReference", "quasimodo.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_pattern.MultiplePattern", "quasimodo.data_structures.multiple_pattern.MultiplePattern.add_pattern", "quasimodo.data_structures.multiple_pattern.MultiplePattern", "quasimodo.data_structures.multiple_pattern.MultiplePattern.add_pattern", "quasimodo.data_structures.multiple_pattern.MultiplePattern.add_pattern", "inputs.replace_objects.replace_objects.replace_seeds", "inputs.replace_objects.replace_objects.replace_patterns", "inputs.replace_objects.replace_objects.replace_subjects", "inputs.replace_objects.replace_objects.replace_generated_facts", "inputs.replace_objects.replace_objects.replace_objects", "inputs.replace_objects.replace_objects.save", "inputs.replace_objects.replace_objects.load", "test_inputs.TestInput.assertEqual", "test_inputs.TestInput.assertEqual", "test_inputs.TestInput.assertEqual", "test_inputs.TestInput.assertEqual", "test_inputs.TestInput.assertEqual", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.data_structures.module_reference_interface.ModuleReferenceInterface", "quasimodo.data_structures.module_reference_interface.ModuleReferenceInterface", "quasimodo.data_structures.submodule_reference_interface.SubmoduleReferenceInterface", "quasimodo.data_structures.submodule_reference_interface.SubmoduleReferenceInterface", "quasimodo.data_structures.module_reference_interface.ModuleReferenceInterface", "quasimodo.data_structures.submodule_reference_interface.SubmoduleReferenceInterface", "quasimodo.data_structures.module_reference_interface.ModuleReferenceInterface", "quasimodo.data_structures.submodule_reference_interface.SubmoduleReferenceInterface", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.fact.Fact", "quasimodo.data_structures.fact.Fact", "quasimodo.data_structures.object.Object", "quasimodo.data_structures.object.Object", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "inputs.replace_objects.replace_objects.get_generated_facts", "inputs.replace_objects.load.get_generated_facts", "inputs.replace_objects.replace_objects.get_subjects", "inputs.replace_objects.load.get_generated_facts", "inputs.replace_objects.replace_objects.get_patterns", "inputs.replace_objects.load.get_patterns", "inputs.replace_objects.replace_objects.get_seeds", "inputs.replace_objects.load.get_seeds", "inputs.replace_objects.replace_objects.get_objects", "inputs.replace_objects.load.get_objects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_submodule_reference.MultipleSubmoduleReference.add_reference", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_pattern.MultiplePattern.add_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_objects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.save", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_seeds", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_objects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_objects"], ["", "def", "test_save", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "Inputs", "(", ")", "\n", "subjects", "=", "[", "Subject", "(", "\"baba\"", ")", ",", "Subject", "(", "\"coko\"", ")", "]", "\n", "patterns", "=", "[", "PatternGoogle", "(", "\"why are\"", ")", ",", "\n", "PatternGoogle", "(", "\"Why are\"", ",", "\"hasProperty\"", ",", "True", ")", "]", "\n", "mmr", "=", "MultipleModuleReference", "(", "ModuleReferenceInterface", "(", "\"Module0\"", ")", ")", "\n", "mmr", ".", "add_reference", "(", "ModuleReferenceInterface", "(", "\"Module1\"", ")", ")", "\n", "msr", "=", "MultipleSubmoduleReference", "(", "SubmoduleReferenceInterface", "(", "\"Submodule0\"", ")", ")", "\n", "msr", ".", "add_reference", "(", "SubmoduleReferenceInterface", "(", "\"Submodule0\"", ")", ")", "\n", "ms0", "=", "MultipleScore", "(", ")", "\n", "ms0", ".", "add_score", "(", "1.0", ",", "ModuleReferenceInterface", "(", "\"Module0\"", ")", ",", "SubmoduleReferenceInterface", "(", "\"Submodule0\"", ")", ")", "\n", "ms1", "=", "MultipleScore", "(", ")", "\n", "ms1", ".", "add_score", "(", "1.0", ",", "mmr", ",", "msr", ")", "\n", "ms1", ".", "add_score", "(", "0.5", ",", "ModuleReferenceInterface", "(", "\"Module1\"", ")", ",", "SubmoduleReferenceInterface", "(", "\"Submodule2\"", ")", ")", "\n", "mp0", "=", "MultiplePattern", "(", ")", "\n", "mp0", ".", "add_pattern", "(", "patterns", "[", "0", "]", ")", "\n", "mp1", "=", "MultiplePattern", "(", ")", "\n", "mp1", ".", "add_pattern", "(", "patterns", "[", "0", "]", ")", "\n", "mp1", ".", "add_pattern", "(", "patterns", "[", "1", "]", ")", "\n", "gfs", "=", "[", "\n", "GeneratedFact", "(", "\n", "\"baba\"", ",", "\n", "\"is\"", ",", "\n", "\"you\"", ",", "\n", "\"sometimes\"", ",", "\n", "False", ",", "\n", "ms0", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"baba is you\"", ",", "msr", ",", "1", ")", ",", "\n", "mp0", "\n", ")", ",", "\n", "GeneratedFact", "(", "\n", "\"coko\"", ",", "\n", "\"is\"", ",", "\n", "\"dead\"", ",", "\n", "\"always\"", ",", "\n", "True", ",", "\n", "ms1", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"toto is always dead\"", ",", "msr", ",", "1", ")", ",", "\n", "mp1", "\n", ")", "\n", "]", "\n", "seeds", "=", "[", "\n", "Fact", "(", "\n", "\"baba\"", ",", "\n", "\"is\"", ",", "\n", "\"us\"", ",", "\n", "None", ",", "\n", "False", "\n", ")", ",", "\n", "Fact", "(", "\n", "\"coko\"", ",", "\n", "\"are\"", ",", "\n", "\"missing\"", ",", "\n", "\"coucou\"", ",", "\n", "True", "\n", ")", "\n", "]", "\n", "objects", "=", "[", "Object", "(", "\"missing\"", ")", ",", "Object", "(", "\"you\"", ")", "]", "\n", "inputs", "=", "inputs", ".", "replace_seeds", "(", "seeds", ")", "\n", "inputs", "=", "inputs", ".", "replace_patterns", "(", "patterns", ")", "\n", "inputs", "=", "inputs", ".", "replace_subjects", "(", "subjects", ")", "\n", "inputs", "=", "inputs", ".", "replace_generated_facts", "(", "gfs", ")", "\n", "inputs", "=", "inputs", ".", "replace_objects", "(", "objects", ")", "\n", "inputs", ".", "save", "(", "\"temp.json\"", ")", "\n", "inputs_read", "=", "inputs", ".", "load", "(", "\"temp.json\"", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ",", "len", "(", "inputs_read", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_subjects", "(", ")", ")", ",", "len", "(", "inputs_read", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_patterns", "(", ")", ")", ",", "len", "(", "inputs_read", ".", "get_patterns", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_seeds", "(", ")", ")", ",", "len", "(", "inputs_read", ".", "get_seeds", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_objects", "(", ")", ")", ",", "len", "(", "inputs_read", ".", "get_objects", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_clean_subject.TestCleanSubject.setUp": [[12, 15], ["quasimodo.assertion_normalization.clean_subject.CleanSubject", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "cleaning_predicate", "=", "CleanSubject", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_clean_subject.TestCleanSubject.test_potato": [[16, 26], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_clean_subject.TestCleanSubject.empty_input.add_generated_facts", "test_clean_subject.TestCleanSubject.cleaning_predicate.process", "test_clean_subject.TestCleanSubject.get_generated_facts", "test_clean_subject.TestCleanSubject.assertEqual", "test_clean_subject.TestCleanSubject.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_potato", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"a potato\"", ",", "\"be\"", ",", "\"baked\"", ",", "\"\"", ",", "\n", "False", ",", "\n", "0.0", ",", "\n", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"potato\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_clean_subject.TestCleanSubject.test_nothing": [[27, 37], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_clean_subject.TestCleanSubject.empty_input.add_generated_facts", "test_clean_subject.TestCleanSubject.cleaning_predicate.process", "test_clean_subject.TestCleanSubject.get_generated_facts", "test_clean_subject.TestCleanSubject.assertEqual", "test_clean_subject.TestCleanSubject.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_nothing", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"potato\"", ",", "\"be\"", ",", "\"baked\"", ",", "\"\"", ",", "\n", "False", ",", "\n", "0.0", ",", "\n", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"potato\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_sentence_batcher.TestSentenceBatcher.test_empty": [[8, 11], ["quasimodo.sentence_batcher.SentenceBatcher", "test_sentence_batcher.TestSentenceBatcher.assertEqual", "len"], "methods", ["None"], ["    ", "def", "test_empty", "(", "self", ")", ":", "\n", "        ", "sb", "=", "SentenceBatcher", "(", "[", "]", ",", "1", ",", "len", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "[", "x", "for", "x", "in", "sb", "]", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_sentence_batcher.TestSentenceBatcher.test_one_element": [[12, 17], ["quasimodo.sentence_batcher.SentenceBatcher", "test_sentence_batcher.TestSentenceBatcher.assertEqual", "test_sentence_batcher.TestSentenceBatcher.assertEqual", "len"], "methods", ["None"], ["", "def", "test_one_element", "(", "self", ")", ":", "\n", "        ", "sb", "=", "SentenceBatcher", "(", "[", "\"The sky is blue\"", "]", ",", "30", ",", "len", ")", "\n", "batches", "=", "[", "x", "for", "x", "in", "sb", "]", "\n", "self", ".", "assertEqual", "(", "len", "(", "batches", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "batches", ",", "[", "[", "\"The sky is blue\"", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_sentence_batcher.TestSentenceBatcher.test_two_elements_in_one_batch": [[18, 23], ["quasimodo.sentence_batcher.SentenceBatcher", "test_sentence_batcher.TestSentenceBatcher.assertEqual"], "methods", ["None"], ["", "def", "test_two_elements_in_one_batch", "(", "self", ")", ":", "\n", "        ", "sentences", "=", "[", "\"The sky is blue\"", ",", "\"pandas are white\"", "]", "\n", "sb", "=", "SentenceBatcher", "(", "sentences", ",", "100", ",", "len", ")", "\n", "batches", "=", "[", "x", "for", "x", "in", "sb", "]", "\n", "self", ".", "assertEqual", "(", "batches", ",", "[", "sentences", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_sentence_batcher.TestSentenceBatcher.test_two_elements_in_two_batches": [[24, 29], ["quasimodo.sentence_batcher.SentenceBatcher", "test_sentence_batcher.TestSentenceBatcher.assertEqual"], "methods", ["None"], ["", "def", "test_two_elements_in_two_batches", "(", "self", ")", ":", "\n", "        ", "sentences", "=", "[", "\"The sky is blue\"", ",", "\"pandas are white\"", "]", "\n", "sb", "=", "SentenceBatcher", "(", "sentences", ",", "20", ",", "len", ")", "\n", "batches", "=", "[", "x", "for", "x", "in", "sb", "]", "\n", "self", ".", "assertEqual", "(", "batches", ",", "[", "[", "sentences", "[", "0", "]", "]", ",", "[", "sentences", "[", "1", "]", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_sentence_batcher.TestSentenceBatcher.test_three_elements_in_two_batches": [[30, 35], ["quasimodo.sentence_batcher.SentenceBatcher", "test_sentence_batcher.TestSentenceBatcher.assertEqual"], "methods", ["None"], ["", "def", "test_three_elements_in_two_batches", "(", "self", ")", ":", "\n", "        ", "sentences", "=", "[", "\"The sky is blue\"", ",", "\"pandas are white\"", ",", "\"the bear is small\"", "]", "\n", "sb", "=", "SentenceBatcher", "(", "sentences", ",", "40", ",", "len", ")", "\n", "batches", "=", "[", "x", "for", "x", "in", "sb", "]", "\n", "self", ".", "assertEqual", "(", "batches", ",", "[", "sentences", "[", "0", ":", "2", "]", ",", "sentences", "[", "2", ":", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_sentence_batcher.TestSentenceBatcher.test_one_element_too_long": [[36, 41], ["quasimodo.sentence_batcher.SentenceBatcher", "test_sentence_batcher.TestSentenceBatcher.assertRaises"], "methods", ["None"], ["", "def", "test_one_element_too_long", "(", "self", ")", ":", "\n", "        ", "sentences", "=", "[", "\"The sky is blue\"", "]", "\n", "sb", "=", "SentenceBatcher", "(", "sentences", ",", "5", ",", "len", ")", "\n", "with", "self", ".", "assertRaises", "(", "TooLongBatchException", ")", ":", "\n", "            ", "[", "x", "for", "x", "in", "sb", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_quora.TestQuora.setUp": [[10, 13], ["quasimodo.assertion_generation.quora_questions_submodule.QuoraQuestionsSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "quora", "=", "QuoraQuestionsSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_quora.TestQuora.test_elephant": [[14, 21], ["test_quora.TestQuora.empty_input.add_subjects", "test_quora.TestQuora.quora.process", "test_quora.TestQuora.get_generated_facts", "test_quora.TestQuora.assertEqual", "test_quora.TestQuora.assertIn", "test_quora.TestQuora.assertTrue", "len", "generated_facts[].get_subject().get", "generated_facts[].is_negative", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_elephant", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "empty_input", ".", "add_subjects", "(", "{", "Subject", "(", "\"elephant\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "quora", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertIn", "(", "\"elephant\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertTrue", "(", "generated_facts", "[", "0", "]", ".", "is_negative", "(", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.setUp": [[11, 14], ["quasimodo.assertion_normalization.cleaning_predicate_submodule.CleaningPredicateSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "cleaning_predicate", "=", "CleaningPredicateSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_so": [[15, 22], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_so", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is so\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"is\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_xbox": [[23, 29], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_xbox", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"xbox\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_no_change": [[30, 37], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_no_change", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"is\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_no_verb": [[38, 45], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "print", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_no_verb", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"table\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "print", "(", "generated_facts", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_no_verb2": [[46, 53], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "print", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_no_verb2", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"wall\"", ",", "\"clock\"", ",", "\"yellow\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "print", "(", "generated_facts", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_conjugated_verb": [[54, 60], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_conjugated_verb", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"elephant\"", ",", "\"going\"", ",", "\"nowhere\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_conjugated_verb2": [[61, 67], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_conjugated_verb2", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"elephant\"", ",", "\"go\"", ",", "\"nowhere\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_conjugated_verb3": [[68, 74], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_conjugated_verb3", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"elephant\"", ",", "\"goes\"", ",", "\"nowhere\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_not_digest": [[75, 84], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "test_cleaning_predicate.TestCleaningPredicate.assertTrue", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].is_negative", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_not_digest", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"elephant\"", ",", "\"not digests\"", ",", "\"fruits\"", ",", "\"\"", ",", "\n", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ",", "\"digests\"", ")", "\n", "self", ".", "assertTrue", "(", "generated_facts", "[", "0", "]", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_empty_predicate": [[85, 91], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_empty_predicate", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"elephant\"", ",", "\"\"", ",", "\"fruits\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_cleaning_predicate.TestCleaningPredicate.test_has_beach": [[92, 99], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_cleaning_predicate.TestCleaningPredicate.empty_input.add_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.cleaning_predicate.process", "test_cleaning_predicate.TestCleaningPredicate.get_generated_facts", "test_cleaning_predicate.TestCleaningPredicate.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_has_beach", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"beach\"", ",", "\"has\"", ",", "\"sand\"", ",", "\"\"", ",", "False", ",", "\n", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_autocomplete.TestGoogleAutocomplete.setUp": [[13, 17], ["quasimodo.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule", "quasimodo.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "autocomplete", "=", "GoogleAutocompleteSubmodule", "(", "None", ",", "use_cache", "=", "False", ")", "\n", "self", ".", "autocomplete_cache", "=", "GoogleAutocompleteSubmodule", "(", "None", ",", "use_cache", "=", "True", ",", "cache_name", "=", "\"google-cache-test\"", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_autocomplete.TestGoogleAutocomplete.test_elephant": [[18, 22], ["test_google_autocomplete.TestGoogleAutocomplete.autocomplete.get_suggestion", "test_google_autocomplete.TestGoogleAutocomplete.assertFalse", "test_google_autocomplete.TestGoogleAutocomplete.assertEqual", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion"], ["", "def", "test_elephant", "(", "self", ")", ":", "\n", "        ", "suggestions", ",", "from_cache", "=", "self", ".", "autocomplete", ".", "get_suggestion", "(", "\"why are elephants\"", ")", "\n", "self", ".", "assertFalse", "(", "from_cache", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "suggestions", ")", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_autocomplete.TestGoogleAutocomplete.test_cache": [[23, 31], ["test_google_autocomplete.TestGoogleAutocomplete.autocomplete_cache.get_suggestion", "test_google_autocomplete.TestGoogleAutocomplete.autocomplete_cache.get_suggestion", "test_google_autocomplete.TestGoogleAutocomplete.assertTrue", "test_google_autocomplete.TestGoogleAutocomplete.assertEqual", "test_google_autocomplete.TestGoogleAutocomplete.autocomplete_cache.cache.delete_cache", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache"], ["", "def", "test_cache", "(", "self", ")", ":", "\n", "        ", "_", ",", "_", "=", "self", ".", "autocomplete_cache", ".", "get_suggestion", "(", "\"why are elephants\"", ")", "\n", "# Remove information of the previous query", "\n", "self", ".", "autocomplete_cache", ".", "local_cache", "[", "\"query_regex\"", "]", "=", "\"\"", "\n", "suggestions", ",", "from_cache", "=", "self", ".", "autocomplete_cache", ".", "get_suggestion", "(", "\"why are elephants\"", ")", "\n", "self", ".", "assertTrue", "(", "from_cache", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "suggestions", ")", ",", "10", ")", "\n", "self", ".", "autocomplete_cache", ".", "cache", ".", "delete_cache", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_autocomplete.TestGoogleAutocomplete.test_process": [[32, 38], ["test_google_autocomplete.TestGoogleAutocomplete.empty_input.add_subjects().add_patterns", "test_google_autocomplete.TestGoogleAutocomplete.autocomplete.process", "test_google_autocomplete.TestGoogleAutocomplete.assertTrue", "test_google_autocomplete.TestGoogleAutocomplete.assertTrue", "test_google_autocomplete.TestGoogleAutocomplete.empty_input.add_subjects", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "test_google_autocomplete.TestGoogleAutocomplete.get_generated_facts", "len", "test_google_autocomplete.TestGoogleAutocomplete.get_generated_facts", "x.get_object().get", "quasimodo.data_structures.subject.Subject", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_process", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "empty_input", ".", "add_subjects", "(", "[", "Subject", "(", "\"elephant\"", ")", "]", ")", ".", "add_patterns", "(", "[", "PatternGoogle", "(", "\"why are <SUBJS>\"", ")", "]", ")", "\n", "inputs", "=", "self", ".", "autocomplete", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ">", "20", ")", "\n", "trunk_facts", "=", "[", "x", "for", "x", "in", "inputs", ".", "get_generated_facts", "(", ")", "if", "\"trunk\"", "in", "x", ".", "get_object", "(", ")", ".", "get", "(", ")", "]", "\n", "self", ".", "assertTrue", "(", "len", "(", "trunk_facts", ")", ">", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_autocomplete.TestGoogleAutocomplete.test_vegetarian_negative_pattern": [[39, 51], ["test_google_autocomplete.TestGoogleAutocomplete.empty_input.add_subjects().add_patterns", "test_google_autocomplete.TestGoogleAutocomplete.autocomplete.process", "test_google_autocomplete.TestGoogleAutocomplete.assertTrue", "print", "test_google_autocomplete.TestGoogleAutocomplete.assertTrue", "test_google_autocomplete.TestGoogleAutocomplete.empty_input.add_subjects", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "test_google_autocomplete.TestGoogleAutocomplete.get_generated_facts", "len", "test_google_autocomplete.TestGoogleAutocomplete.get_generated_facts", "quasimodo.data_structures.subject.Subject", "x.get_object().get", "x.is_negative", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_vegetarian_negative_pattern", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "empty_input", ".", "add_subjects", "(", "\n", "[", "Subject", "(", "\"vegetarian\"", ")", "]", ")", ".", "add_patterns", "(", "\n", "[", "PatternGoogle", "(", "\"why don't <SUBJS>\"", ",", "negative", "=", "True", ")", "]", ")", "\n", "inputs", "=", "self", ".", "autocomplete", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ">", "0", ")", "\n", "meat_facts", "=", "[", "x", "for", "x", "in", "inputs", ".", "get_generated_facts", "(", ")", "if", "\n", "\"meat\"", "==", "x", ".", "get_object", "(", ")", ".", "get", "(", ")", "and", "\n", "not", "x", ".", "is_negative", "(", ")", "\n", "]", "\n", "print", "(", "meat_facts", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "meat_facts", ")", "==", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_autocomplete.TestGoogleAutocomplete.test_vegetarian_positive_pattern": [[52, 65], ["test_google_autocomplete.TestGoogleAutocomplete.empty_input.add_subjects().add_patterns", "test_google_autocomplete.TestGoogleAutocomplete.autocomplete.process", "quasimodo.assertion_normalization.cleaning_predicate_submodule.CleaningPredicateSubmodule", "quasimodo.assertion_normalization.cleaning_predicate_submodule.CleaningPredicateSubmodule.process", "test_google_autocomplete.TestGoogleAutocomplete.assertTrue", "test_google_autocomplete.TestGoogleAutocomplete.assertTrue", "test_google_autocomplete.TestGoogleAutocomplete.empty_input.add_subjects", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "quasimodo.assertion_normalization.cleaning_predicate_submodule.CleaningPredicateSubmodule.process.get_generated_facts", "len", "quasimodo.assertion_normalization.cleaning_predicate_submodule.CleaningPredicateSubmodule.process.get_generated_facts", "quasimodo.data_structures.subject.Subject", "x.get_object().get", "x.is_negative", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_vegetarian_positive_pattern", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "empty_input", ".", "add_subjects", "(", "\n", "[", "Subject", "(", "\"vegetarian\"", ")", "]", ")", ".", "add_patterns", "(", "\n", "[", "PatternGoogle", "(", "\"why do <SUBJS>\"", ")", "]", ")", "\n", "inputs", "=", "self", ".", "autocomplete", ".", "process", "(", "inputs", ")", "\n", "predicate_cleaning", "=", "CleaningPredicateSubmodule", "(", "None", ")", "\n", "inputs", "=", "predicate_cleaning", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ">", "0", ")", "\n", "meat_facts", "=", "[", "x", "for", "x", "in", "inputs", ".", "get_generated_facts", "(", ")", "if", "\n", "\"meat\"", "==", "x", ".", "get_object", "(", ")", ".", "get", "(", ")", "and", "\n", "not", "x", ".", "is_negative", "(", ")", "\n", "]", "\n", "self", ".", "assertTrue", "(", "len", "(", "meat_facts", ")", ">", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_perplexity.TestPerplexity.test_simple": [[14, 36], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.assertion_validation.perplexity_submodule.PerplexitySubmodule", "quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.inputs.Inputs.add_generated_facts", "quasimodo.assertion_validation.perplexity_submodule.PerplexitySubmodule.process", "quasimodo.assertion_validation.perplexity_submodule.PerplexitySubmodule.process.get_generated_facts", "test_perplexity.TestPerplexity.assertEqual", "test_perplexity.TestPerplexity.assertEqual", "test_perplexity.TestPerplexity.assertLessEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "len", "[].get_score", "[].get_score", "quasimodo.assertion_validation.perplexity_submodule.PerplexitySubmodule.process.get_generated_facts", "quasimodo.assertion_validation.perplexity_submodule.PerplexitySubmodule.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["    ", "def", "test_simple", "(", "self", ")", ":", "\n", "        ", "score", "=", "MultipleScore", "(", ")", "\n", "generated_fact", "=", "GeneratedFact", "(", "\n", "\"cat\"", ",", "\n", "\"love\"", ",", "\n", "\"catnip\"", ",", "\n", "\"\"", ",", "\n", "False", ",", "\n", "score", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"cats love catnip\"", ",", "None", ",", "1", ")", ")", "\n", "submodule", "=", "PerplexitySubmodule", "(", "None", ")", "\n", "empty_input", "=", "Inputs", "(", ")", "\n", "inputs", "=", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "submodule", ".", "process", "(", "inputs", ")", "\n", "new_gfs", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "\n", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", "\n", ")", ".", "scores", ")", ")", "\n", "self", ".", "assertLessEqual", "(", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", ".", "scores", "[", "0", "]", "[", "0", "]", ",", "\n", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_perplexity.TestPerplexity.test_nothing": [[37, 55], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.assertion_validation.perplexity_submodule.PerplexitySubmodule", "quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.inputs.Inputs.add_generated_facts", "quasimodo.assertion_validation.perplexity_submodule.PerplexitySubmodule.process", "quasimodo.assertion_validation.perplexity_submodule.PerplexitySubmodule.process.get_generated_facts", "test_perplexity.TestPerplexity.assertEqual", "test_perplexity.TestPerplexity.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "len", "[].get_score", "quasimodo.assertion_validation.perplexity_submodule.PerplexitySubmodule.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_nothing", "(", "self", ")", ":", "\n", "        ", "score", "=", "MultipleScore", "(", ")", "\n", "generated_fact", "=", "GeneratedFact", "(", "\n", "\"cat\"", ",", "\n", "\"love\"", ",", "\n", "\"catnip\"", ",", "\n", "\"\"", ",", "\n", "False", ",", "\n", "score", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"cats lovessz catnip\"", ",", "None", ",", "1", ")", ")", "\n", "submodule", "=", "PerplexitySubmodule", "(", "None", ")", "\n", "empty_input", "=", "Inputs", "(", ")", "\n", "inputs", "=", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "submodule", ".", "process", "(", "inputs", ")", "\n", "new_gfs", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "\n", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", "\n", ")", ".", "scores", ")", ")", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_subject_0": [[21, 24], ["test_query_to_regex.transform_text_subject", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject"], ["    ", "def", "test_subject_0", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_subject", "(", "\"why are elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_subject_1": [[25, 28], ["test_query_to_regex.transform_text_subject", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject"], ["", "def", "test_subject_1", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_subject", "(", "\"why can elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_subject_2": [[29, 32], ["test_query_to_regex.transform_text_subject", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject"], ["", "def", "test_subject_2", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_subject", "(", "\"why is elephant\"", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_subject_3": [[33, 36], ["test_query_to_regex.transform_text_subject", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject"], ["", "def", "test_subject_3", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_subject", "(", "\"why can't elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_subject_4": [[37, 40], ["test_query_to_regex.transform_text_subject", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject"], ["", "def", "test_subject_4", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_subject", "(", "\"why do elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_subject_5": [[41, 44], ["test_query_to_regex.transform_text_subject", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject"], ["", "def", "test_subject_5", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_subject", "(", "\"why does elephant\"", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_subject_6": [[45, 48], ["test_query_to_regex.transform_text_subject", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject"], ["", "def", "test_subject_6", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_subject", "(", "\"how does elephant\"", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_subject_7": [[49, 52], ["test_query_to_regex.transform_text_subject", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject"], ["", "def", "test_subject_7", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_subject", "(", "\"why elephant\"", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_subject_8": [[53, 56], ["test_query_to_regex.transform_text_subject", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject"], ["", "def", "test_subject_8", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_subject", "(", "\"why elephant men\"", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant-men\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_pattern_0": [[57, 60], ["test_query_to_regex.transform_text_pattern", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_pattern"], ["", "def", "test_pattern_0", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_pattern", "(", "\"why are elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "\"why-are-\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_pattern_1": [[61, 64], ["test_query_to_regex.transform_text_pattern", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_pattern"], ["", "def", "test_pattern_1", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_pattern", "(", "\"why can elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "\"why-can-\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_pattern_2": [[65, 68], ["test_query_to_regex.transform_text_pattern", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_pattern"], ["", "def", "test_pattern_2", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_pattern", "(", "\"why is elephant\"", ")", "\n", "self", ".", "assertEqual", "(", "\"why-is-\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_pattern_3": [[69, 72], ["test_query_to_regex.transform_text_pattern", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_pattern"], ["", "def", "test_pattern_3", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_pattern", "(", "\"why can't elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "\"why-can_t-\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_pattern_4": [[73, 76], ["test_query_to_regex.transform_text_pattern", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_pattern"], ["", "def", "test_pattern_4", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_pattern", "(", "\"why do elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "\"why-do-\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_pattern_5": [[77, 80], ["test_query_to_regex.transform_text_pattern", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_pattern"], ["", "def", "test_pattern_5", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_pattern", "(", "\"why does elephant\"", ")", "\n", "self", ".", "assertEqual", "(", "\"why-does-\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_pattern_6": [[81, 84], ["test_query_to_regex.transform_text_pattern", "test_query_to_regex.TestQueryToRegex.assertEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_pattern"], ["", "def", "test_pattern_6", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_pattern", "(", "\"how does elephant\"", ")", "\n", "self", ".", "assertEqual", "(", "\"how-does-\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.TestQueryToRegex.test_pattern_7": [[85, 90], ["test_query_to_regex.transform_text_pattern", "test_query_to_regex.TestQueryToRegex.assertIn", "test_query_to_regex.TestQueryToRegex.assertNotIn", "test_query_to_regex.TestQueryToRegex.assertIn"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_pattern"], ["", "def", "test_pattern_7", "(", "self", ")", ":", "\n", "        ", "regex", "=", "transform_text_pattern", "(", "\"why elephant\"", ")", "\n", "self", ".", "assertIn", "(", "\"why\"", ",", "regex", ")", "\n", "self", ".", "assertNotIn", "(", "\"elephant\"", ",", "regex", ")", "\n", "self", ".", "assertIn", "(", "\"[^\"", ",", "regex", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_subject": [[7, 11], ["quasimodo.cache.cachable_querying_system.to_filename", "quasimodo.cache.cachable_querying_system.get_regex_from_query_by_subject"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.to_filename", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.get_regex_from_query_by_subject"], ["def", "transform_text_subject", "(", "text", ")", ":", "\n", "    ", "filename", "=", "to_filename", "(", "text", ")", "\n", "regex", "=", "get_regex_from_query_by_subject", "(", "filename", ")", "\n", "return", "regex", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_query_to_regex.transform_text_pattern": [[13, 17], ["quasimodo.cache.cachable_querying_system.to_filename", "quasimodo.cache.cachable_querying_system.get_regex_from_query_by_pattern"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.to_filename", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.get_regex_from_query_by_pattern"], ["", "def", "transform_text_pattern", "(", "text", ")", ":", "\n", "    ", "filename", "=", "to_filename", "(", "text", ")", "\n", "regex", "=", "get_regex_from_query_by_pattern", "(", "filename", ")", "\n", "return", "regex", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_conjuagate_present.TestConjugatePresent.setUp": [[11, 14], ["quasimodo.assertion_normalization.present_conjugate_normalization.PresentConjugateNormalization", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "present_conjugate", "=", "PresentConjugateNormalization", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_conjuagate_present.TestConjugatePresent.test_nothing": [[15, 22], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_conjuagate_present.TestConjugatePresent.empty_input.add_generated_facts", "test_conjuagate_present.TestConjugatePresent.present_conjugate.process", "test_conjuagate_present.TestConjugatePresent.get_generated_facts", "test_conjuagate_present.TestConjugatePresent.assertEqual", "test_conjuagate_present.TestConjugatePresent.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_nothing", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"adapt\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "present_conjugate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"adapt\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_conjuagate_present.TestConjugatePresent.test_s": [[23, 30], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_conjuagate_present.TestConjugatePresent.empty_input.add_generated_facts", "test_conjuagate_present.TestConjugatePresent.present_conjugate.process", "test_conjuagate_present.TestConjugatePresent.get_generated_facts", "test_conjuagate_present.TestConjugatePresent.assertEqual", "test_conjuagate_present.TestConjugatePresent.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_s", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"adapts\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "present_conjugate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"adapt\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_conjuagate_present.TestConjugatePresent.test_false_s": [[31, 38], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_conjuagate_present.TestConjugatePresent.empty_input.add_generated_facts", "test_conjuagate_present.TestConjugatePresent.present_conjugate.process", "test_conjuagate_present.TestConjugatePresent.get_generated_facts", "test_conjuagate_present.TestConjugatePresent.assertEqual", "test_conjuagate_present.TestConjugatePresent.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_false_s", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"pass\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "present_conjugate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"pass\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.setUp": [[12, 18], ["quasimodo.data_structures.referencable_interface.ReferencableInterface", "quasimodo.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule", "quasimodo.statement_maker.StatementMaker", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "dummy_reference", "=", "ReferencableInterface", "(", "\"Dummy reference\"", ")", "\n", "self", ".", "openie_fact_generator", "=", "OpenIEFactGeneratorSubmodule", "(", "dummy_reference", ")", "\n", "self", ".", "openie_fact_generator", ".", "statement_maker", "=", "StatementMaker", "(", "use_cache", "=", "False", ")", "\n", "self", ".", "openie_fact_generator", ".", "_name", "=", "\"OPENIE\"", "# Dummy name only useful for testing", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_no_suggestion": [[19, 22], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_no_suggestion", "(", "self", ")", ":", "\n", "        ", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_one_suggestion": [[23, 30], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_one_suggestion", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do lions eat zebras\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"lions\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"eat\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"zebras\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_one_suggestion_with_a": [[31, 38], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_one_suggestion_with_a", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why does a lion eat zebras\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"lion\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"eat\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"zebras\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_one_suggestion_with_the": [[39, 46], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_one_suggestion_with_the", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why does the lion eat zebras\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"lion\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"eat\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"zebras\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_very_short_suggestion": [[47, 54], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_very_short_suggestion", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do lions eat\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"lions\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"can\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"eat\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_can_short_suggestion": [[55, 62], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_can_short_suggestion", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why can lions eat\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"lions\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"can\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"eat\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_cannot_short_suggestion": [[63, 71], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object", "new_gfs[].is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "test_cannot_short_suggestion", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why cannot lions eat\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"lions\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"can\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"eat\"", ")", "\n", "self", ".", "assertTrue", "(", "new_gfs", "[", "0", "]", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_cannot_short_suggestion_pattern": [[72, 81], ["quasimodo.patterns.pattern_google.PatternGoogle", "test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object", "new_gfs[].is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "test_cannot_short_suggestion_pattern", "(", "self", ")", ":", "\n", "        ", "pattern", "=", "PatternGoogle", "(", "\"why cannot\"", ",", "\"can\"", ",", "True", ")", "\n", "suggestion", "=", "(", "\"why cannot lions eat\"", ",", "1.0", ",", "pattern", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"lions\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"can\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"eat\"", ")", "\n", "self", ".", "assertTrue", "(", "new_gfs", "[", "0", "]", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_arent_short_suggestion_pattern": [[82, 91], ["quasimodo.patterns.pattern_google.PatternGoogle", "test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object", "new_gfs[].is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "test_arent_short_suggestion_pattern", "(", "self", ")", ":", "\n", "        ", "pattern", "=", "PatternGoogle", "(", "\"why aren't\"", ",", "\"ARN'T\"", ",", "True", ")", "\n", "suggestion", "=", "(", "\"why aren't lions fat\"", ",", "1.0", ",", "pattern", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"lions\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"are\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"fat\"", ")", "\n", "self", ".", "assertTrue", "(", "new_gfs", "[", "0", "]", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_cannot_short_suggestion1": [[92, 100], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object", "new_gfs[].is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "test_cannot_short_suggestion1", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why can't lions eat\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"lions\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"can\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"eat\"", ")", "\n", "self", ".", "assertTrue", "(", "new_gfs", "[", "0", "]", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_can_short_suggestion_1": [[101, 108], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_can_short_suggestion_1", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why can a lion eat\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"a lion\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"can\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"eat\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_short_incorrect_suggestion": [[109, 113], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_short_incorrect_suggestion", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do lion proutkoko eat\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_single_can_suggestion": [[114, 118], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_single_can_suggestion", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why can lion\"", ",", "1.0", ",", "None", ",", "\"lion\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_extend": [[119, 126], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "list", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "len", "map", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_extend", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do african people have noses and lips\"", ",", "1.0", ",", "None", ",", "\"african people\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "3", ")", "\n", "objs", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "get_object", "(", ")", ",", "new_gfs", ")", ")", "\n", "self", ".", "assertIn", "(", "\"noses\"", ",", "objs", ")", "\n", "self", ".", "assertIn", "(", "\"lips\"", ",", "objs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_extend_2": [[127, 134], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "list", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "len", "map", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_extend_2", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are pandas black and white\"", ",", "1.0", ",", "None", ",", "\"pandas\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "2", ")", "\n", "objs", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "get_object", "(", ")", ",", "new_gfs", ")", ")", "\n", "self", ".", "assertIn", "(", "\"black\"", ",", "objs", ")", "\n", "self", ".", "assertIn", "(", "\"white\"", ",", "objs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_than": [[135, 142], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_than", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are elephants better than lions\"", ",", "1.0", ",", "None", ",", "\"elephants\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"are better than\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"lions\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_long_object": [[143, 150], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "list", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "map", "len", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_long_object", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do elephants have long noses\"", ",", "1.0", ",", "None", ",", "\"elephants\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "new_gfs", ")", ">=", "2", ")", "\n", "objs", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "get_object", "(", ")", ",", "new_gfs", ")", ")", "\n", "self", ".", "assertIn", "(", "\"noses\"", ",", "objs", ")", "\n", "self", ".", "assertIn", "(", "\"long noses\"", ",", "objs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_long_object_with_multiple_modalities": [[151, 161], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "list", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "test_openie_fact_generator.TestOpenIEFactGenerator.assertIn", "map", "new_gfs[].get_modality().get", "new_gfs[].get_modality().get", "new_gfs[].get_modality().get", "len", "x.get_object", "new_gfs[].get_modality", "new_gfs[].get_modality", "new_gfs[].get_modality"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality"], ["", "def", "test_long_object_with_multiple_modalities", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do african elephants have long noses\"", ",", "1.0", ",", "None", ",", "\"elephants\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "new_gfs", ")", ">=", "2", ")", "\n", "objs", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "get_object", "(", ")", ",", "new_gfs", ")", ")", "\n", "self", ".", "assertIn", "(", "\"noses\"", ",", "objs", ")", "\n", "self", ".", "assertIn", "(", "\"long noses\"", ",", "objs", ")", "\n", "self", ".", "assertIn", "(", "\"TBC[\"", ",", "new_gfs", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"some[\"", ",", "new_gfs", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"long noses\"", ",", "new_gfs", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_are_not": [[162, 170], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object", "new_gfs[].is_negative", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "test_are_not", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are elephants not in africa\"", ",", "1.0", ",", "None", ",", "\"elephants\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "new_gfs", ")", ">=", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"are in\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"africa\"", ")", "\n", "self", ".", "assertTrue", "(", "new_gfs", "[", "0", "]", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_is_not": [[171, 179], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object", "new_gfs[].is_negative", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "test_is_not", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why is thomas not in africa\"", ",", "1.0", ",", "None", ",", "\"thomas\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "new_gfs", ")", ">=", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"thomas\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"is in\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"africa\"", ")", "\n", "self", ".", "assertTrue", "(", "new_gfs", "[", "0", "]", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_there": [[180, 188], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertFalse", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object", "new_gfs[].is_negative", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "test_there", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are there elephants in africa\"", ",", "1.0", ",", "None", ",", "\"elephants\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "new_gfs", ")", ">=", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"elephants\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"are in\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"africa\"", ")", "\n", "self", ".", "assertFalse", "(", "new_gfs", "[", "0", "]", ".", "is_negative", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_does": [[189, 196], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_does", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why does panda climb tree\"", ",", "1.0", ",", "None", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "new_gfs", ")", ">=", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"panda\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"climb\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"tree\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_always": [[197, 204], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_always", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why does pandas climb always in tree\"", ",", "1.0", ",", "None", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "new_gfs", ")", ">=", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"pandas\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"always climb in\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"tree\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_can_simple_ignore": [[205, 209], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertTrue", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_can_simple_ignore", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why does leather quality\"", ",", "1.0", ",", "None", ",", "\"leather\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "new_gfs", ")", "==", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_can_simple_not_ignore": [[210, 217], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_can_simple_not_ignore", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why does leather die\"", ",", "1.0", ",", "None", ",", "\"leather\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"leather\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"can\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"die\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_ing_simple": [[218, 225], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_ing_simple", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why is drinking coffee bad\"", ",", "1.0", ",", "None", ",", "\"drinking coffee\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"drinking coffee\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"is\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"bad\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_ing_after_verb": [[226, 233], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator._openie_from_file", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertNotEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._openie_from_file", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_ing_after_verb", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do vegetarians go back to eating meat\"", ",", "\n", "1.0", ",", "None", ",", "\"vegetarian\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "_openie_from_file", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"vegetarians\"", ")", "\n", "self", ".", "assertNotEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"meat\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_complex_subject": [[234, 240], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_complex_subject", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are japanese things cute\"", ",", "1.0", ",", "None", ",", "\"thing\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"japanese things\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ",", "\"cute\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_fart": [[241, 248], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "print", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_fart", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do farts smell worse in the shower\"", ",", "\n", "1.0", ",", "None", ",", "\"farts\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "print", "(", "new_gfs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"farts\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_baby": [[249, 256], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "print", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_baby", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"how are babies actually made\"", ",", "\n", "1.0", ",", "None", ",", "\"baby\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "print", "(", "new_gfs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "2", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"babies\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator._test_poop": [[257, 265], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator.get_generated_facts", "print", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject", "new_gfs[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "_test_poop", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do dogs poop in kennel\"", ",", "\n", "1.0", ",", "None", ",", "\"dog\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "print", "(", "new_gfs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"dog\"", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"poop in\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_openie_fact_generator.TestOpenIEFactGenerator.test_baby_from_file": [[266, 274], ["test_openie_fact_generator.TestOpenIEFactGenerator.openie_fact_generator._openie_from_file", "print", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "test_openie_fact_generator.TestOpenIEFactGenerator.assertEqual", "len", "new_gfs[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._openie_from_file", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_baby_from_file", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"how are babies actually made\"", ",", "\n", "1.0", ",", "None", ",", "\"baby\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "_openie_from_file", "(", "[", "suggestion", "]", ")", "\n", "print", "(", "new_gfs", ")", "\n", "# Here the object is empty", "\n", "self", ".", "assertEqual", "(", "len", "(", "new_gfs", ")", ",", "0", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ",", "\"babies\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_present_continuous.TestPresentContinuous.setUp": [[11, 14], ["quasimodo.assertion_normalization.present_continuous_submodule.PresentContinuousSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "present_continuous", "=", "PresentContinuousSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_present_continuous.TestPresentContinuous.test_nothing": [[15, 22], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_present_continuous.TestPresentContinuous.empty_input.add_generated_facts", "test_present_continuous.TestPresentContinuous.present_continuous.process", "test_present_continuous.TestPresentContinuous.get_generated_facts", "test_present_continuous.TestPresentContinuous.assertEqual", "test_present_continuous.TestPresentContinuous.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_nothing", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"adapt\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "present_continuous", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"adapt\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_present_continuous.TestPresentContinuous.test_be_ing": [[23, 30], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_present_continuous.TestPresentContinuous.empty_input.add_generated_facts", "test_present_continuous.TestPresentContinuous.present_continuous.process", "test_present_continuous.TestPresentContinuous.get_generated_facts", "test_present_continuous.TestPresentContinuous.assertEqual", "test_present_continuous.TestPresentContinuous.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_be_ing", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is adapting\"", ",", "\"nothing\"", ",", "MultipleSourceOccurrence", "(", ")", ",", "False", ",", "0.0", ",", "\"\"", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "present_continuous", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"adapt\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_present_continuous.TestPresentContinuous.test_ing": [[31, 37], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_present_continuous.TestPresentContinuous.empty_input.add_generated_facts", "test_present_continuous.TestPresentContinuous.present_continuous.process", "test_present_continuous.TestPresentContinuous.get_generated_facts", "test_present_continuous.TestPresentContinuous.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_ing", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"adapting\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "present_continuous", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_spacy_accessor.TestSpacyAccessor.test_lemmatization": [[8, 11], ["quasimodo.spacy_accessor.SpacyAccessor", "test_spacy_accessor.TestSpacyAccessor.assertEqual", "quasimodo.spacy_accessor.SpacyAccessor.lemmatize"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["    ", "def", "test_lemmatization", "(", "self", ")", ":", "\n", "        ", "spacy_accessor", "=", "SpacyAccessor", "(", ")", "\n", "self", ".", "assertEqual", "(", "spacy_accessor", ".", "lemmatize", "(", "\"The birds are here\"", ")", ",", "[", "\"the\"", ",", "\"bird\"", ",", "\"be\"", ",", "\"here\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_spacy_accessor.TestSpacyAccessor.test_lemmatize_multiple_sentences": [[12, 16], ["quasimodo.spacy_accessor.SpacyAccessor", "test_spacy_accessor.TestSpacyAccessor.assertEqual", "quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple"], ["", "def", "test_lemmatize_multiple_sentences", "(", "self", ")", ":", "\n", "        ", "spacy_accessor", "=", "SpacyAccessor", "(", ")", "\n", "self", ".", "assertEqual", "(", "spacy_accessor", ".", "lemmatize_multiple", "(", "[", "\"the birds are here\"", ",", "\"the elephants are big\"", "]", ")", ",", "\n", "[", "[", "\"the\"", ",", "\"bird\"", ",", "\"be\"", ",", "\"here\"", "]", ",", "[", "\"the\"", ",", "\"elephant\"", ",", "\"be\"", ",", "\"big\"", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_spacy_accessor.TestSpacyAccessor.test_lemmatize_multiple_sentences_two_parts": [[17, 22], ["quasimodo.spacy_accessor.SpacyAccessor", "test_spacy_accessor.TestSpacyAccessor.assertEqual", "quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple"], ["", "def", "test_lemmatize_multiple_sentences_two_parts", "(", "self", ")", ":", "\n", "        ", "spacy_accessor", "=", "SpacyAccessor", "(", ")", "\n", "spacy_accessor", ".", "_nlp", ".", "max_length", "=", "30", "\n", "self", ".", "assertEqual", "(", "spacy_accessor", ".", "lemmatize_multiple", "(", "[", "\"the birds are here\"", ",", "\"the elephants are big\"", "]", ")", ",", "\n", "[", "[", "\"the\"", ",", "\"bird\"", ",", "\"be\"", ",", "\"here\"", "]", ",", "[", "\"the\"", ",", "\"elephant\"", ",", "\"be\"", ",", "\"big\"", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_spacy_accessor.TestSpacyAccessor.test_lemmatize_multiple_sentences_with_ending_tab": [[23, 27], ["quasimodo.spacy_accessor.SpacyAccessor", "test_spacy_accessor.TestSpacyAccessor.assertEqual", "quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple"], ["", "def", "test_lemmatize_multiple_sentences_with_ending_tab", "(", "self", ")", ":", "\n", "        ", "spacy_accessor", "=", "SpacyAccessor", "(", ")", "\n", "self", ".", "assertEqual", "(", "spacy_accessor", ".", "lemmatize_multiple", "(", "[", "\"the birds are here\\t\"", ",", "\"the elephants are big\"", "]", ")", ",", "\n", "[", "[", "\"the\"", ",", "\"bird\"", ",", "\"be\"", ",", "\"here\"", ",", "\"\\t\"", "]", ",", "[", "\"the\"", ",", "\"elephant\"", ",", "\"be\"", ",", "\"big\"", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_wikipedia_cooccurrence.TestWikipediaCooccurrence.setUp": [[12, 15], ["quasimodo.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "wikipedia_no_cache", "=", "WikipediaCooccurrenceSubmodule", "(", "None", ",", "False", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_wikipedia_cooccurrence.TestWikipediaCooccurrence.test_lion": [[16, 29], ["range", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.empty_input.add_generated_facts", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.wikipedia_no_cache.process", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.assertEqual", "[].get_score", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.assertEqual", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.assertTrue", "quasimodo.data_structures.generated_fact.GeneratedFact", "gfs.append", "len", "len", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.get_generated_facts", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.get_generated_facts", "x[].get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "test_lion", "(", "self", ")", ":", "\n", "        ", "n_copies", "=", "10", "\n", "gfs", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_copies", ")", ":", "\n", "            ", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "gfs", ".", "append", "(", "generated_fact", ")", "\n", "", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "gfs", ")", "\n", "inputs", "=", "self", ".", "wikipedia_no_cache", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "n_copies", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "scores", "=", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", "\n", "scores_wikipedia", "=", "[", "x", "for", "x", "in", "scores", ".", "scores", "if", "x", "[", "2", "]", ".", "get_name", "(", ")", "==", "\"Wikipedia Cooccurrence\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "scores_wikipedia", ")", ")", "\n", "self", ".", "assertTrue", "(", "scores_wikipedia", "[", "0", "]", "[", "0", "]", "!=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_wikipedia_cooccurrence.TestWikipediaCooccurrence.test_cache": [[30, 44], ["quasimodo.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.empty_input.add_generated_facts", "quasimodo.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.process", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.empty_input.add_generated_facts", "quasimodo.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.process", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.assertEqual", "[].get_score", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.assertEqual", "test_wikipedia_cooccurrence.TestWikipediaCooccurrence.assertTrue", "quasimodo.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.cache.delete_cache", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "len", "quasimodo.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.process.get_generated_facts", "quasimodo.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.process.get_generated_facts", "x[].get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "test_cache", "(", "self", ")", ":", "\n", "        ", "wikipedia_cache", "=", "WikipediaCooccurrenceSubmodule", "(", "None", ",", "True", ",", "\"wikipedia-cache-test\"", ")", "\n", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "wikipedia_cache", ".", "process", "(", "inputs", ")", "\n", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "wikipedia_cache", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "scores", "=", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", "\n", "scores_wikipedia", "=", "[", "x", "for", "x", "in", "scores", ".", "scores", "if", "x", "[", "2", "]", ".", "get_name", "(", ")", "==", "\"Wikipedia Cooccurrence\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "scores_wikipedia", ")", ")", "\n", "self", ".", "assertTrue", "(", "scores_wikipedia", "[", "0", "]", "[", "0", "]", "!=", "0", ")", "\n", "wikipedia_cache", ".", "cache", ".", "delete_cache", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.setUp": [[12, 18], ["quasimodo.data_structures.referencable_interface.ReferencableInterface", "quasimodo.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule", "quasimodo.data_structures.inputs.Inputs", "quasimodo.assertion_normalization.are_transformation_submodule.AreTransformationSubmodule"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "dummy_reference", "=", "ReferencableInterface", "(", "\"Dummy reference\"", ")", "\n", "self", ".", "openie_fact_generator", "=", "OpenIEFactGeneratorSubmodule", "(", "dummy_reference", ")", "\n", "self", ".", "openie_fact_generator", ".", "_name", "=", "\"OPENIE\"", "# Dummy name only useful for testing", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "self", ".", "are_transformation", "=", "AreTransformationSubmodule", "(", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.test_color": [[19, 26], ["test_are_transformation.TestAreTransformation.openie_fact_generator.get_generated_facts", "test_are_transformation.TestAreTransformation.empty_input.add_generated_facts", "test_are_transformation.TestAreTransformation.are_transformation.process", "test_are_transformation.TestAreTransformation.assertEqual", "test_are_transformation.TestAreTransformation.assertEqual", "len", "[].get_predicate", "test_are_transformation.TestAreTransformation.get_generated_facts", "test_are_transformation.TestAreTransformation.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_color", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are pandas black\"", ",", "1.0", ",", "None", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "are_transformation", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"has_color\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.test_color1": [[27, 34], ["test_are_transformation.TestAreTransformation.openie_fact_generator.get_generated_facts", "test_are_transformation.TestAreTransformation.empty_input.add_generated_facts", "test_are_transformation.TestAreTransformation.are_transformation.process", "test_are_transformation.TestAreTransformation.assertEqual", "test_are_transformation.TestAreTransformation.assertEqual", "len", "[].get_predicate", "test_are_transformation.TestAreTransformation.get_generated_facts", "test_are_transformation.TestAreTransformation.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_color1", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are pandas white\"", ",", "1.0", ",", "None", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "are_transformation", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"has_color\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.test_body": [[35, 42], ["test_are_transformation.TestAreTransformation.openie_fact_generator.get_generated_facts", "test_are_transformation.TestAreTransformation.empty_input.add_generated_facts", "test_are_transformation.TestAreTransformation.are_transformation.process", "test_are_transformation.TestAreTransformation.assertEqual", "test_are_transformation.TestAreTransformation.assertEqual", "len", "[].get_predicate", "test_are_transformation.TestAreTransformation.get_generated_facts", "test_are_transformation.TestAreTransformation.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_body", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do pandas have hands\"", ",", "1.0", ",", "None", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "are_transformation", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"has_body_part\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.test_body2": [[43, 50], ["test_are_transformation.TestAreTransformation.openie_fact_generator.get_generated_facts", "test_are_transformation.TestAreTransformation.empty_input.add_generated_facts", "test_are_transformation.TestAreTransformation.are_transformation.process", "test_are_transformation.TestAreTransformation.assertEqual", "test_are_transformation.TestAreTransformation.assertEqual", "len", "[].get_predicate", "test_are_transformation.TestAreTransformation.get_generated_facts", "test_are_transformation.TestAreTransformation.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_body2", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do elephants have trunks\"", ",", "1.0", ",", "None", ",", "\"elephant\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "are_transformation", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"has_body_part\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.test_trait": [[51, 58], ["test_are_transformation.TestAreTransformation.openie_fact_generator.get_generated_facts", "test_are_transformation.TestAreTransformation.empty_input.add_generated_facts", "test_are_transformation.TestAreTransformation.are_transformation.process", "test_are_transformation.TestAreTransformation.assertEqual", "test_are_transformation.TestAreTransformation.assertEqual", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "[].get_predicate", "test_are_transformation.TestAreTransformation.get_generated_facts", "test_are_transformation.TestAreTransformation.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_trait", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are pandas nice\"", ",", "1.0", ",", "PatternGoogle", "(", "\"why are\"", ",", "\"has_property\"", ",", "1.0", ")", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "are_transformation", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"has_trait\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.test_property": [[59, 66], ["test_are_transformation.TestAreTransformation.openie_fact_generator.get_generated_facts", "test_are_transformation.TestAreTransformation.empty_input.add_generated_facts", "test_are_transformation.TestAreTransformation.are_transformation.process", "test_are_transformation.TestAreTransformation.assertEqual", "test_are_transformation.TestAreTransformation.assertEqual", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "[].get_predicate", "test_are_transformation.TestAreTransformation.get_generated_facts", "test_are_transformation.TestAreTransformation.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_property", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are pandas dead\"", ",", "1.0", ",", "PatternGoogle", "(", "\"why are\"", ",", "\"has_property\"", ",", "1.0", ")", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "are_transformation", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"has_property\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.test_property_no_relation": [[67, 74], ["test_are_transformation.TestAreTransformation.openie_fact_generator.get_generated_facts", "test_are_transformation.TestAreTransformation.empty_input.add_generated_facts", "test_are_transformation.TestAreTransformation.are_transformation.process", "test_are_transformation.TestAreTransformation.assertEqual", "test_are_transformation.TestAreTransformation.assertEqual", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "[].get_predicate", "test_are_transformation.TestAreTransformation.get_generated_facts", "test_are_transformation.TestAreTransformation.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_property_no_relation", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are pandas dead\"", ",", "1.0", ",", "PatternGoogle", "(", "\"why are\"", ")", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "are_transformation", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"has_property\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.test_quick": [[75, 82], ["test_are_transformation.TestAreTransformation.openie_fact_generator.get_generated_facts", "test_are_transformation.TestAreTransformation.empty_input.add_generated_facts", "test_are_transformation.TestAreTransformation.are_transformation.process", "test_are_transformation.TestAreTransformation.assertEqual", "test_are_transformation.TestAreTransformation.assertEqual", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "[].get_predicate", "test_are_transformation.TestAreTransformation.get_generated_facts", "test_are_transformation.TestAreTransformation.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_quick", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why are pandas quick\"", ",", "1.0", ",", "PatternGoogle", "(", "\"why are\"", ",", "\"has_property\"", ",", "1.0", ")", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "are_transformation", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"has_movement\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_are_transformation.TestAreTransformation.test_ignore": [[83, 90], ["test_are_transformation.TestAreTransformation.openie_fact_generator.get_generated_facts", "test_are_transformation.TestAreTransformation.empty_input.add_generated_facts", "test_are_transformation.TestAreTransformation.are_transformation.process", "test_are_transformation.TestAreTransformation.assertEqual", "test_are_transformation.TestAreTransformation.assertEqual", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "[].get_predicate", "test_are_transformation.TestAreTransformation.get_generated_facts", "test_are_transformation.TestAreTransformation.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_ignore", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do pandas eat bamboo\"", ",", "1.0", ",", "PatternGoogle", "(", "\"why do\"", ",", "\"has_property\"", ",", "1.0", ")", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "are_transformation", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"eat\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_filter_object.TestFilterObject.setUp": [[11, 14], ["quasimodo.assertion_normalization.filter_object_submodule.FilterObjectSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "cleaning_predicate", "=", "FilterObjectSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_filter_object.TestFilterObject.test_forbidden": [[15, 21], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_filter_object.TestFilterObject.empty_input.add_generated_facts", "test_filter_object.TestFilterObject.cleaning_predicate.process", "test_filter_object.TestFilterObject.get_generated_facts", "test_filter_object.TestFilterObject.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_forbidden", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is\"", ",", "\"used\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_filter_object.TestFilterObject.test_totally_forbidden": [[22, 28], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_filter_object.TestFilterObject.empty_input.add_generated_facts", "test_filter_object.TestFilterObject.cleaning_predicate.process", "test_filter_object.TestFilterObject.get_generated_facts", "test_filter_object.TestFilterObject.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_totally_forbidden", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is\"", ",", "\"useful minecraft\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_filter_object.TestFilterObject.test_one_letter": [[29, 35], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_filter_object.TestFilterObject.empty_input.add_generated_facts", "test_filter_object.TestFilterObject.cleaning_predicate.process", "test_filter_object.TestFilterObject.get_generated_facts", "test_filter_object.TestFilterObject.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_one_letter", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is\"", ",", "\"a\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_filter_object.TestFilterObject.test_dirty": [[36, 43], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_filter_object.TestFilterObject.empty_input.add_generated_facts", "test_filter_object.TestFilterObject.cleaning_predicate.process", "test_filter_object.TestFilterObject.get_generated_facts", "test_filter_object.TestFilterObject.assertEqual", "test_filter_object.TestFilterObject.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_object().get", "generated_facts[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_dirty", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is\"", ",", "\"their time\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"time\"", ",", "generated_facts", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_filter_object.TestFilterObject.test_no_change": [[44, 51], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_filter_object.TestFilterObject.empty_input.add_generated_facts", "test_filter_object.TestFilterObject.cleaning_predicate.process", "test_filter_object.TestFilterObject.get_generated_facts", "test_filter_object.TestFilterObject.assertEqual", "test_filter_object.TestFilterObject.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_object().get", "generated_facts[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_no_change", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is\"", ",", "\"time\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"time\"", ",", "generated_facts", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_tbc_cleaner.TestTBCCleaner.test_remove": [[12, 22], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.add_generated_facts", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process", "test_tbc_cleaner.TestTBCCleaner.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["    ", "def", "test_remove", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "Inputs", "(", ")", "\n", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "mso", ".", "add_raw", "(", "\"elephants eat big bananas\"", ",", "None", ",", "1", ")", "\n", "gfs", "=", "[", "GeneratedFact", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"bananas\"", ",", "\"TBC[big bananas]\"", ",", "0", ",", "MultipleScore", "(", ")", ",", "\n", "mso", ")", "]", "\n", "inputs", "=", "inputs", ".", "add_generated_facts", "(", "gfs", ")", "\n", "tbc_cleaner", "=", "TBCCleaner", "(", "None", ")", "\n", "inputs", "=", "tbc_cleaner", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_tbc_cleaner.TestTBCCleaner.test_remove2": [[23, 33], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.add_generated_facts", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process", "test_tbc_cleaner.TestTBCCleaner.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_remove2", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "Inputs", "(", ")", "\n", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "mso", ".", "add_raw", "(", "\"elephants eat big bananas\"", ",", "None", ",", "2", ")", "\n", "gfs", "=", "[", "GeneratedFact", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"bananas\"", ",", "\"TBC[big bananas] x#x2\"", ",", "0", ",", "MultipleScore", "(", ")", ",", "\n", "mso", ")", "]", "\n", "inputs", "=", "inputs", ".", "add_generated_facts", "(", "gfs", ")", "\n", "tbc_cleaner", "=", "TBCCleaner", "(", "None", ")", "\n", "inputs", "=", "tbc_cleaner", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_tbc_cleaner.TestTBCCleaner.test_remove3": [[34, 45], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.add_generated_facts", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process", "test_tbc_cleaner.TestTBCCleaner.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_remove3", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "Inputs", "(", ")", "\n", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "mso", ".", "add_raw", "(", "\"elephants eat big bananas\"", ",", "None", ",", "1", ")", "\n", "mso", ".", "add_raw", "(", "\"elephants eat big and fat bananas\"", ",", "None", ",", "1", ")", "\n", "gfs", "=", "[", "GeneratedFact", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"bananas\"", ",", "\"TBC[big bananas] x#x2\"", ",", "0", ",", "MultipleScore", "(", ")", ",", "\n", "mso", ")", "]", "\n", "inputs", "=", "inputs", ".", "add_generated_facts", "(", "gfs", ")", "\n", "tbc_cleaner", "=", "TBCCleaner", "(", "None", ")", "\n", "inputs", "=", "tbc_cleaner", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_tbc_cleaner.TestTBCCleaner.test_not_remove": [[46, 56], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.add_generated_facts", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process", "test_tbc_cleaner.TestTBCCleaner.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_not_remove", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "Inputs", "(", ")", "\n", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "mso", ".", "add_raw", "(", "\"elephants eat big bananas\"", ",", "None", ",", "2", ")", "\n", "gfs", "=", "[", "GeneratedFact", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"bananas\"", ",", "\"TBC[big bananas]\"", ",", "0", ",", "MultipleScore", "(", ")", ",", "\n", "mso", ")", "]", "\n", "inputs", "=", "inputs", ".", "add_generated_facts", "(", "gfs", ")", "\n", "tbc_cleaner", "=", "TBCCleaner", "(", "None", ")", "\n", "inputs", "=", "tbc_cleaner", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_tbc_cleaner.TestTBCCleaner.test_not_remove2": [[57, 68], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.add_generated_facts", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process", "test_tbc_cleaner.TestTBCCleaner.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.assertion_normalization.tbc_cleaner.TBCCleaner.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_not_remove2", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "Inputs", "(", ")", "\n", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "mso", ".", "add_raw", "(", "\"elephants eat big bananas\"", ",", "None", ",", "1", ")", "\n", "mso", ".", "add_raw", "(", "\"elephants eat small bananas\"", ",", "None", ",", "1", ")", "\n", "gfs", "=", "[", "GeneratedFact", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"bananas\"", ",", "\"TBC[big bananas] // TBC[small bananas]\"", ",", "0", ",", "MultipleScore", "(", ")", ",", "\n", "mso", ")", "]", "\n", "inputs", "=", "inputs", ".", "add_generated_facts", "(", "gfs", ")", "\n", "tbc_cleaner", "=", "TBCCleaner", "(", "None", ")", "\n", "inputs", "=", "tbc_cleaner", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_simple_wikipedia.TestSimpleWikipediaCooccurrence.setUp": [[12, 15], ["quasimodo.assertion_validation.simple_wikipedia_cooccurrence_submodule.SimpleWikipediaCooccurrenceSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "simple_wikipedia_no_cache", "=", "SimpleWikipediaCooccurrenceSubmodule", "(", "None", ",", "False", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_simple_wikipedia.TestSimpleWikipediaCooccurrence.test_lion": [[16, 25], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.empty_input.add_generated_facts", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.simple_wikipedia_no_cache.process", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.assertEqual", "[].get_score", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.assertEqual", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.assertTrue", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "len", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.get_generated_facts", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.get_generated_facts", "x[].get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "test_lion", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "simple_wikipedia_no_cache", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "scores", "=", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", "\n", "scores_wikipedia", "=", "[", "x", "for", "x", "in", "scores", ".", "scores", "if", "x", "[", "2", "]", ".", "get_name", "(", ")", "==", "\"Simple Wikipedia Cooccurrence\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "scores_wikipedia", ")", ")", "\n", "self", ".", "assertTrue", "(", "scores_wikipedia", "[", "0", "]", "[", "0", "]", "!=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_simple_wikipedia.TestSimpleWikipediaCooccurrence.test_cache": [[26, 40], ["quasimodo.assertion_validation.simple_wikipedia_cooccurrence_submodule.SimpleWikipediaCooccurrenceSubmodule", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.empty_input.add_generated_facts", "quasimodo.assertion_validation.simple_wikipedia_cooccurrence_submodule.SimpleWikipediaCooccurrenceSubmodule.process", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.empty_input.add_generated_facts", "quasimodo.assertion_validation.simple_wikipedia_cooccurrence_submodule.SimpleWikipediaCooccurrenceSubmodule.process", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.assertEqual", "[].get_score", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.assertEqual", "test_simple_wikipedia.TestSimpleWikipediaCooccurrence.assertTrue", "quasimodo.assertion_validation.simple_wikipedia_cooccurrence_submodule.SimpleWikipediaCooccurrenceSubmodule.cache.delete_cache", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "len", "quasimodo.assertion_validation.simple_wikipedia_cooccurrence_submodule.SimpleWikipediaCooccurrenceSubmodule.process.get_generated_facts", "quasimodo.assertion_validation.simple_wikipedia_cooccurrence_submodule.SimpleWikipediaCooccurrenceSubmodule.process.get_generated_facts", "x[].get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "test_cache", "(", "self", ")", ":", "\n", "        ", "wikipedia_cache", "=", "SimpleWikipediaCooccurrenceSubmodule", "(", "None", ",", "True", ",", "\"simple-wikipedia-cache-test\"", ")", "\n", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "wikipedia_cache", ".", "process", "(", "inputs", ")", "\n", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "wikipedia_cache", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "scores", "=", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", "\n", "scores_wikipedia", "=", "[", "x", "for", "x", "in", "scores", ".", "scores", "if", "x", "[", "2", "]", ".", "get_name", "(", ")", "==", "\"Simple Wikipedia Cooccurrence\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "scores_wikipedia", ")", ")", "\n", "self", ".", "assertTrue", "(", "scores_wikipedia", "[", "0", "]", "[", "0", "]", "!=", "0", ")", "\n", "wikipedia_cache", ".", "cache", ".", "delete_cache", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_book.TestGoogleBook.setUp": [[12, 15], ["quasimodo.assertion_validation.google_book_submodule.GoogleBookSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "google_book_no_cache", "=", "GoogleBookSubmodule", "(", "None", ",", "False", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_book.TestGoogleBook.test_lion_eat_zebras": [[16, 25], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_google_book.TestGoogleBook.empty_input.add_generated_facts", "test_google_book.TestGoogleBook.google_book_no_cache.process", "test_google_book.TestGoogleBook.assertEqual", "[].get_score", "test_google_book.TestGoogleBook.assertEqual", "test_google_book.TestGoogleBook.assertTrue", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "len", "test_google_book.TestGoogleBook.get_generated_facts", "test_google_book.TestGoogleBook.get_generated_facts", "x[].get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "test_lion_eat_zebras", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "google_book_no_cache", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "scores", "=", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", "\n", "scores_google_book", "=", "[", "x", "for", "x", "in", "scores", ".", "scores", "if", "x", "[", "2", "]", ".", "get_name", "(", ")", "==", "\"Google Book Submodule\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "scores_google_book", ")", ")", "\n", "self", ".", "assertTrue", "(", "scores_google_book", "[", "0", "]", "[", "0", "]", "!=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_book.TestGoogleBook.test_lion_eat_code": [[26, 35], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_google_book.TestGoogleBook.empty_input.add_generated_facts", "test_google_book.TestGoogleBook.google_book_no_cache.process", "test_google_book.TestGoogleBook.assertEqual", "[].get_score", "test_google_book.TestGoogleBook.assertEqual", "test_google_book.TestGoogleBook.assertTrue", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "len", "test_google_book.TestGoogleBook.get_generated_facts", "test_google_book.TestGoogleBook.get_generated_facts", "x[].get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "test_lion_eat_code", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"code\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "google_book_no_cache", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "scores", "=", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", "\n", "scores_google_book", "=", "[", "x", "for", "x", "in", "scores", ".", "scores", "if", "x", "[", "2", "]", ".", "get_name", "(", ")", "==", "\"Google Book Submodule\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "scores_google_book", ")", ")", "\n", "self", ".", "assertTrue", "(", "scores_google_book", "[", "0", "]", "[", "0", "]", "==", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_google_book.TestGoogleBook.test_cache": [[36, 50], ["quasimodo.assertion_validation.google_book_submodule.GoogleBookSubmodule", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_google_book.TestGoogleBook.empty_input.add_generated_facts", "quasimodo.assertion_validation.google_book_submodule.GoogleBookSubmodule.process", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_google_book.TestGoogleBook.empty_input.add_generated_facts", "quasimodo.assertion_validation.google_book_submodule.GoogleBookSubmodule.process", "test_google_book.TestGoogleBook.assertEqual", "[].get_score", "test_google_book.TestGoogleBook.assertEqual", "test_google_book.TestGoogleBook.assertTrue", "quasimodo.assertion_validation.google_book_submodule.GoogleBookSubmodule.cache.delete_cache", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "len", "quasimodo.assertion_validation.google_book_submodule.GoogleBookSubmodule.process.get_generated_facts", "quasimodo.assertion_validation.google_book_submodule.GoogleBookSubmodule.process.get_generated_facts", "x[].get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "test_cache", "(", "self", ")", ":", "\n", "        ", "google_book_cache", "=", "GoogleBookSubmodule", "(", "None", ",", "True", ",", "cache_name", "=", "\"google-book-cache-temp\"", ")", "\n", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "google_book_cache", ".", "process", "(", "inputs", ")", "\n", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "google_book_cache", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "scores", "=", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", "\n", "scores_google_book", "=", "[", "x", "for", "x", "in", "scores", ".", "scores", "if", "x", "[", "2", "]", ".", "get_name", "(", ")", "==", "\"Google Book Submodule\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "scores_google_book", ")", ")", "\n", "self", ".", "assertTrue", "(", "scores_google_book", "[", "0", "]", "[", "0", "]", "!=", "0", ")", "\n", "google_book_cache", ".", "cache", ".", "delete_cache", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_linear_weighted_combination.TestLinearWeightedCombination.setUp": [[15, 19], ["quasimodo.data_structures.referencable_interface.ReferencableInterface", "quasimodo.assertion_fusion.linear_combination_weighted_submodule.LinearCombinationWeightedSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "dummy_reference", "=", "ReferencableInterface", "(", "\"Dummy reference\"", ")", "\n", "self", ".", "linear_combination", "=", "LinearCombinationWeightedSubmodule", "(", "self", ".", "dummy_reference", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_linear_weighted_combination.TestLinearWeightedCombination.test_combination": [[20, 43], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "gfs.append", "test_linear_weighted_combination.TestLinearWeightedCombination.empty_input.add_generated_facts", "test_linear_weighted_combination.TestLinearWeightedCombination.linear_combination.process", "test_linear_weighted_combination.TestLinearWeightedCombination.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "gfs.append", "quasimodo.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "test_linear_weighted_combination.TestLinearWeightedCombination.get_generated_facts", "quasimodo.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule", "quasimodo.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_combination", "(", "self", ")", ":", "\n", "        ", "dataset", "=", "[", "(", "\"elephant\"", ",", "\"download\"", ",", "\"baby\"", ",", "0", ")", ",", "(", "\"elephant\"", ",", "\"climb\"", ",", "\"trunk\"", ",", "0", ")", ",", "\n", "(", "\"elephant\"", ",", "\"bear\"", ",", "\"baby\"", ",", "1", ")", ",", "(", "\"elephant\"", ",", "\"download this cute illustration with\"", ",", "\"baby\"", ",", "0", ")", ",", "\n", "(", "\"elephant\"", ",", "\"be\"", ",", "\"ear\"", ",", "0", ")", ",", "(", "\"elephant\"", ",", "\"fry\"", ",", "\"ear\"", ",", "0", ")", ",", "(", "\"elephant\"", ",", "\"trek\"", ",", "\"travel\"", ",", "0", ")", ",", "\n", "(", "\"elephant\"", ",", "\"forbid love in\"", ",", "\"water\"", ",", "0", ")", ",", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"bark\"", ",", "1", ")", ",", "\n", "(", "\"elephant\"", ",", "\"have\"", ",", "\"tusks\"", ",", "1", ")", "]", "\n", "gfs", "=", "[", "]", "\n", "pos", "=", "0", "\n", "for", "subject", ",", "predicate", ",", "obj", ",", "truth", "in", "dataset", ":", "\n", "            ", "pos", "+=", "1", "\n", "score", "=", "MultipleScore", "(", ")", "\n", "if", "pos", "%", "2", "==", "0", ":", "\n", "                ", "score", ".", "add_score", "(", "truth", ",", "self", ".", "dummy_reference", ",", "GoogleAutocompleteSubmodule", "(", "self", ".", "dummy_reference", ")", ")", "\n", "", "else", ":", "\n", "                ", "score", ".", "add_score", "(", "truth", ",", "self", ".", "dummy_reference", ",", "BingAutocompleteSubmodule", "(", "self", ".", "dummy_reference", ")", ")", "\n", "", "gfs", ".", "append", "(", "GeneratedFact", "(", "subject", ",", "predicate", ",", "obj", ",", "\"\"", ",", "False", ",", "score", ",", "MultipleSourceOccurrence", "(", ")", ")", ")", "\n", "", "score2", "=", "MultipleScore", "(", ")", "\n", "score2", ".", "add_score", "(", "1", ",", "self", ".", "dummy_reference", ",", "GoogleAutocompleteSubmodule", "(", "self", ".", "dummy_reference", ")", ")", "\n", "gfs", ".", "append", "(", "GeneratedFact", "(", "\"elephant\"", ",", "\"be\"", ",", "\"big\"", ",", "\"\"", ",", "False", ",", "score2", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"elephants are big\"", ",", "None", ",", "1", ")", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "gfs", ")", "\n", "inputs", "=", "self", ".", "linear_combination", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "dataset", ")", "+", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_similar_object_remover.TestSimilarObjectRemover.test_article": [[11, 20], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process.add_generated_facts", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process", "test_similar_object_remover.TestSimilarObjectRemover.assertEqual", "test_similar_object_remover.TestSimilarObjectRemover.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "len", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process.get_generated_facts", "set", "x.get_object().get", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process.get_generated_facts", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["    ", "def", "test_article", "(", "self", ")", ":", "\n", "        ", "gfs", "=", "[", "GeneratedFact", "(", "\"bee\"", ",", "\"make\"", ",", "\"hive\"", ",", "\"\"", ",", "False", ",", "0.1", ",", "MultipleSourceOccurrence", "(", ")", ")", ",", "\n", "GeneratedFact", "(", "\"bee\"", ",", "\"make\"", ",", "\"a hive\"", ",", "\"\"", ",", "False", ",", "0.1", ",", "MultipleSourceOccurrence", "(", ")", ")", "]", "\n", "inputs", "=", "Inputs", "(", ")", "\n", "inputs", "=", "inputs", ".", "add_generated_facts", "(", "gfs", ")", "\n", "remover", "=", "SimilarObjectRemover", "(", "None", ")", "\n", "inputs", "=", "remover", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ",", "2", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "set", "(", "[", "x", ".", "get_object", "(", ")", ".", "get", "(", ")", "for", "x", "in", "inputs", ".", "get_generated_facts", "(", ")", "]", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_similar_object_remover.TestSimilarObjectRemover.test_plural": [[21, 30], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process.add_generated_facts", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process", "test_similar_object_remover.TestSimilarObjectRemover.assertEqual", "test_similar_object_remover.TestSimilarObjectRemover.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "len", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process.get_generated_facts", "set", "x.get_object().get", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process.get_generated_facts", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_plural", "(", "self", ")", ":", "\n", "        ", "gfs", "=", "[", "GeneratedFact", "(", "\"bee\"", ",", "\"make\"", ",", "\"hive\"", ",", "\"\"", ",", "False", ",", "0.1", ",", "MultipleSourceOccurrence", "(", ")", ")", ",", "\n", "GeneratedFact", "(", "\"bee\"", ",", "\"make\"", ",", "\"hives\"", ",", "\"\"", ",", "False", ",", "0.1", ",", "MultipleSourceOccurrence", "(", ")", ")", "]", "\n", "inputs", "=", "Inputs", "(", ")", "\n", "inputs", "=", "inputs", ".", "add_generated_facts", "(", "gfs", ")", "\n", "remover", "=", "SimilarObjectRemover", "(", "None", ")", "\n", "inputs", "=", "remover", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ",", "2", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "set", "(", "[", "x", ".", "get_object", "(", ")", ".", "get", "(", ")", "for", "x", "in", "inputs", ".", "get_generated_facts", "(", ")", "]", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_similar_object_remover.TestSimilarObjectRemover.test_plural_and_article": [[31, 40], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process.add_generated_facts", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process", "test_similar_object_remover.TestSimilarObjectRemover.assertEqual", "test_similar_object_remover.TestSimilarObjectRemover.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "len", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process.get_generated_facts", "set", "x.get_object().get", "quasimodo.assertion_normalization.similar_object_remover.SimilarObjectRemover.process.get_generated_facts", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_plural_and_article", "(", "self", ")", ":", "\n", "        ", "gfs", "=", "[", "GeneratedFact", "(", "\"bee\"", ",", "\"make\"", ",", "\"hive\"", ",", "\"\"", ",", "False", ",", "0.1", ",", "MultipleSourceOccurrence", "(", ")", ")", ",", "\n", "GeneratedFact", "(", "\"bee\"", ",", "\"make\"", ",", "\"the hives\"", ",", "\"\"", ",", "False", ",", "0.1", ",", "MultipleSourceOccurrence", "(", ")", ")", "]", "\n", "inputs", "=", "Inputs", "(", ")", "\n", "inputs", "=", "inputs", ".", "add_generated_facts", "(", "gfs", ")", "\n", "remover", "=", "SimilarObjectRemover", "(", "None", ")", "\n", "inputs", "=", "remover", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ",", "2", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "set", "(", "[", "x", ".", "get_object", "(", ")", ".", "get", "(", ")", "for", "x", "in", "inputs", ".", "get_generated_facts", "(", ")", "]", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_be_normalization.TestBeNormalization.setUp": [[11, 14], ["quasimodo.assertion_normalization.be_normalization_submodule.BeNormalizationSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "be_normalization", "=", "BeNormalizationSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_be_normalization.TestBeNormalization.test_is_alone": [[15, 22], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_be_normalization.TestBeNormalization.empty_input.add_generated_facts", "test_be_normalization.TestBeNormalization.be_normalization.process", "test_be_normalization.TestBeNormalization.get_generated_facts", "test_be_normalization.TestBeNormalization.assertEqual", "test_be_normalization.TestBeNormalization.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_is_alone", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "be_normalization", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"be\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_be_normalization.TestBeNormalization.test_are_alone": [[23, 30], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_be_normalization.TestBeNormalization.empty_input.add_generated_facts", "test_be_normalization.TestBeNormalization.be_normalization.process", "test_be_normalization.TestBeNormalization.get_generated_facts", "test_be_normalization.TestBeNormalization.assertEqual", "test_be_normalization.TestBeNormalization.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_are_alone", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"are\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "be_normalization", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"be\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_be_normalization.TestBeNormalization.test_were_alone": [[31, 38], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_be_normalization.TestBeNormalization.empty_input.add_generated_facts", "test_be_normalization.TestBeNormalization.be_normalization.process", "test_be_normalization.TestBeNormalization.get_generated_facts", "test_be_normalization.TestBeNormalization.assertEqual", "test_be_normalization.TestBeNormalization.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_were_alone", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"were\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "be_normalization", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"was\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_be_normalization.TestBeNormalization.test_is_not_alone": [[39, 46], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_be_normalization.TestBeNormalization.empty_input.add_generated_facts", "test_be_normalization.TestBeNormalization.be_normalization.process", "test_be_normalization.TestBeNormalization.get_generated_facts", "test_be_normalization.TestBeNormalization.assertEqual", "test_be_normalization.TestBeNormalization.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_is_not_alone", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"is adapted\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "be_normalization", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"be adapted\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_be_normalization.TestBeNormalization.test_are_not_alone": [[47, 54], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_be_normalization.TestBeNormalization.empty_input.add_generated_facts", "test_be_normalization.TestBeNormalization.be_normalization.process", "test_be_normalization.TestBeNormalization.get_generated_facts", "test_be_normalization.TestBeNormalization.assertEqual", "test_be_normalization.TestBeNormalization.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_are_not_alone", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"are adapted\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "be_normalization", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"be adapted\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_be_normalization.TestBeNormalization.test_were_not_alone": [[55, 62], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_be_normalization.TestBeNormalization.empty_input.add_generated_facts", "test_be_normalization.TestBeNormalization.be_normalization.process", "test_be_normalization.TestBeNormalization.get_generated_facts", "test_be_normalization.TestBeNormalization.assertEqual", "test_be_normalization.TestBeNormalization.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_were_not_alone", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"were adapted\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "be_normalization", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"was adapted\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_be_normalization.TestBeNormalization.test_no_change": [[63, 70], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_be_normalization.TestBeNormalization.empty_input.add_generated_facts", "test_be_normalization.TestBeNormalization.be_normalization.process", "test_be_normalization.TestBeNormalization.get_generated_facts", "test_be_normalization.TestBeNormalization.assertEqual", "test_be_normalization.TestBeNormalization.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_predicate"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "test_no_change", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"adapted\"", ",", "\"nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "be_normalization", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"adapted\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_statement_maker.TestStatementMaker.setUp": [[57, 59], ["quasimodo.statement_maker.StatementMaker"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "statement_maker", "=", "StatementMaker", "(", "use_cache", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_statement_maker.TestStatementMaker.test_dataset": [[60, 63], ["test_statement_maker.TestStatementMaker.assertEqual", "test_statement_maker.TestStatementMaker.statement_maker.to_statement"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker.to_statement"], ["", "def", "test_dataset", "(", "self", ")", ":", "\n", "        ", "for", "question", ",", "subject", ",", "statement", "in", "dataset", ":", "\n", "            ", "self", ".", "assertEqual", "(", "statement", ",", "self", ".", "statement_maker", ".", "to_statement", "(", "question", ",", "subject", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_statement_maker.TestStatementMaker._test_temp": [[64, 67], ["test_statement_maker.TestStatementMaker.assertEqual", "test_statement_maker.TestStatementMaker.statement_maker.to_statement"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker.to_statement"], ["", "", "def", "_test_temp", "(", "self", ")", ":", "\n", "        ", "for", "question", ",", "subject", ",", "statement", "in", "[", "(", "\"why are lily pads zipping\"", ",", "\"lily pad\"", ",", "\"lily pads are zipping\"", ")", "]", ":", "\n", "            ", "self", ".", "assertEqual", "(", "statement", ",", "self", ".", "statement_maker", ".", "to_statement", "(", "question", ",", "subject", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_gaussian_nb_with_missing_values.TestFilterObject.test_gaussian2": [[10, 16], ["test_gaussian_nb_with_missing_values.TestFilterObject.gaussian_nb.get_gaussian", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_gaussian"], ["    ", "def", "test_gaussian2", "(", "self", ")", ":", "\n", "        ", "std", "=", "-", "0.1339048038303071", "\n", "mean", "=", "-", "0.1339048038303071", "\n", "x", "=", "150.10086283379565", "\n", "temp", "=", "self", ".", "gaussian_nb", ".", "get_gaussian", "(", "x", ",", "mean", ",", "std", ")", "\n", "self", ".", "assertAlmostEqual", "(", "temp", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_gaussian_nb_with_missing_values.TestFilterObject.test_prior": [[17, 24], ["numpy.array", "test_gaussian_nb_with_missing_values.TestFilterObject.gaussian_nb.set_unique_y", "test_gaussian_nb_with_missing_values.TestFilterObject.gaussian_nb.set_prior", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_unique_y", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.set_prior"], ["", "def", "test_prior", "(", "self", ")", ":", "\n", "        ", "y", "=", "np", ".", "array", "(", "[", "1", "]", "*", "10", "+", "[", "0", "]", "*", "5", ")", "\n", "self", ".", "gaussian_nb", ".", "set_unique_y", "(", "y", ")", "\n", "self", ".", "gaussian_nb", ".", "set_prior", "(", "y", ")", "\n", "prior", "=", "self", ".", "gaussian_nb", ".", "prior", "\n", "self", ".", "assertAlmostEqual", "(", "prior", "[", "0", "]", ",", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "prior", "[", "1", "]", ",", "0.67", ",", "places", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_gaussian_nb_with_missing_values.TestFilterObject.test_means_standard_deviations": [[25, 46], ["numpy.array", "numpy.array", "test_gaussian_nb_with_missing_values.TestFilterObject.gaussian_nb.fit", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit"], ["", "def", "test_means_standard_deviations", "(", "self", ")", ":", "\n", "        ", "x", "=", "[", "[", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", "]", ",", "\n", "[", "1", ",", "-", "1", "]", ",", "\n", "[", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "0", "]", ",", "\n", "[", "2", ",", "3", "]", "]", "\n", "y", "=", "[", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", "]", "\n", "x", "=", "np", ".", "array", "(", "x", ")", "\n", "y", "=", "np", ".", "array", "(", "y", ")", "\n", "self", ".", "gaussian_nb", ".", "fit", "(", "x", ",", "y", ")", "\n", "means", "=", "self", ".", "gaussian_nb", ".", "means", "\n", "standard_deviations", "=", "self", ".", "gaussian_nb", ".", "standard_deviations", "\n", "self", ".", "assertAlmostEqual", "(", "means", "[", "0", ",", "0", "]", ",", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "means", "[", "0", ",", "1", "]", ",", "-", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "means", "[", "1", ",", "0", "]", ",", "1.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "means", "[", "1", ",", "1", "]", ",", "1", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "standard_deviations", "[", "0", ",", "0", "]", "**", "2", ",", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "standard_deviations", "[", "0", ",", "1", "]", "**", "2", ",", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "standard_deviations", "[", "1", ",", "0", "]", "**", "2", ",", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "standard_deviations", "[", "1", ",", "1", "]", "**", "2", ",", "3", ",", "places", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_gaussian_nb_with_missing_values.TestFilterObject.test_means_standard_deviations_with_nan": [[47, 59], ["test_gaussian_nb_with_missing_values.TestFilterObject.gaussian_nb.fit", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit"], ["", "def", "test_means_standard_deviations_with_nan", "(", "self", ")", ":", "\n", "        ", "self", ".", "gaussian_nb", ".", "fit", "(", "self", ".", "x", ",", "self", ".", "y", ")", "\n", "means", "=", "self", ".", "gaussian_nb", ".", "means", "\n", "standard_deviations", "=", "self", ".", "gaussian_nb", ".", "standard_deviations", "\n", "self", ".", "assertAlmostEqual", "(", "means", "[", "0", ",", "0", "]", ",", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "means", "[", "0", ",", "1", "]", ",", "-", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "means", "[", "1", ",", "0", "]", ",", "1.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "means", "[", "1", ",", "1", "]", ",", "1", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "standard_deviations", "[", "0", ",", "0", "]", "**", "2", ",", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "standard_deviations", "[", "0", ",", "1", "]", "**", "2", ",", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "standard_deviations", "[", "1", ",", "0", "]", "**", "2", ",", "0.33", ",", "places", "=", "2", ")", "\n", "self", ".", "assertAlmostEqual", "(", "standard_deviations", "[", "1", ",", "1", "]", "**", "2", ",", "3", ",", "places", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_gaussian_nb_with_missing_values.TestFilterObject.test_likelihoods": [[60, 68], ["test_gaussian_nb_with_missing_values.TestFilterObject.gaussian_nb.fit", "numpy.array", "test_gaussian_nb_with_missing_values.TestFilterObject.gaussian_nb.get_all_likelihoods", "test_gaussian_nb_with_missing_values.TestFilterObject.assertNotAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertNotAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertNotAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertNotAlmostEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_all_likelihoods"], ["", "def", "test_likelihoods", "(", "self", ")", ":", "\n", "        ", "self", ".", "gaussian_nb", ".", "fit", "(", "self", ".", "x", ",", "self", ".", "y", ")", "\n", "x_in", "=", "np", ".", "array", "(", "[", "1", ",", "0", "]", ")", "\n", "likelihoods", "=", "self", ".", "gaussian_nb", ".", "get_all_likelihoods", "(", "x_in", ")", "\n", "self", ".", "assertNotAlmostEqual", "(", "likelihoods", "[", "0", "]", ",", "0", ",", "places", "=", "2", ")", "\n", "self", ".", "assertNotAlmostEqual", "(", "likelihoods", "[", "0", "]", ",", "1", ",", "places", "=", "2", ")", "\n", "self", ".", "assertNotAlmostEqual", "(", "likelihoods", "[", "1", "]", ",", "0", ",", "places", "=", "2", ")", "\n", "self", ".", "assertNotAlmostEqual", "(", "likelihoods", "[", "1", "]", ",", "1", ",", "places", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_gaussian_nb_with_missing_values.TestFilterObject.setUp": [[69, 84], ["numpy.array", "numpy.array", "numpy.array", "quasimodo.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues"], "methods", ["None"], ["", "def", "setUp", "(", "self", ")", ":", "\n", "        ", "self", ".", "x", "=", "[", "[", "0", ",", "np", ".", "nan", "]", ",", "# 0", "\n", "[", "np", ".", "nan", ",", "0", "]", ",", "# 0", "\n", "[", "0", ",", "0", "]", ",", "# 0", "\n", "[", "1", ",", "-", "1", "]", ",", "# 0", "\n", "[", "1", ",", "np", ".", "nan", "]", ",", "# 1", "\n", "[", "np", ".", "nan", ",", "0", "]", ",", "# 1", "\n", "[", "1", ",", "0", "]", ",", "# 1", "\n", "[", "2", ",", "3", "]", "]", "# 1", "\n", "self", ".", "y", "=", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", "]", "\n", "self", ".", "y_uniq", "=", "[", "0", ",", "1", "]", "\n", "self", ".", "x", "=", "np", ".", "array", "(", "self", ".", "x", ")", "\n", "self", ".", "y", "=", "np", ".", "array", "(", "self", ".", "y", ")", "\n", "self", ".", "y_uniq", "=", "np", ".", "array", "(", "self", ".", "y_uniq", ")", "\n", "self", ".", "gaussian_nb", "=", "GaussianNBWithMissingValues", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_gaussian_nb_with_missing_values.TestFilterObject.test_predict_proba": [[85, 95], ["quasimodo.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues", "quasimodo.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit", "numpy.array", "quasimodo.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict_proba", "test_gaussian_nb_with_missing_values.TestFilterObject.assertNotAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertNotAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertNotAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertNotAlmostEqual", "test_gaussian_nb_with_missing_values.TestFilterObject.assertGreater"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict_proba"], ["", "def", "test_predict_proba", "(", "self", ")", ":", "\n", "        ", "clf", "=", "GaussianNBWithMissingValues", "(", ")", "\n", "clf", ".", "fit", "(", "self", ".", "x", ",", "self", ".", "y", ")", "\n", "x_in", "=", "np", ".", "array", "(", "[", "[", "1", ",", "0", "]", "]", ")", "\n", "proba", "=", "clf", ".", "predict_proba", "(", "x_in", ")", "\n", "self", ".", "assertNotAlmostEqual", "(", "proba", "[", "0", "]", "[", "0", "]", ",", "0", ",", "places", "=", "2", ")", "\n", "self", ".", "assertNotAlmostEqual", "(", "proba", "[", "0", "]", "[", "0", "]", ",", "1", ",", "places", "=", "2", ")", "\n", "self", ".", "assertNotAlmostEqual", "(", "proba", "[", "0", "]", "[", "1", "]", ",", "0", ",", "places", "=", "2", ")", "\n", "self", ".", "assertNotAlmostEqual", "(", "proba", "[", "0", "]", "[", "1", "]", ",", "1", ",", "places", "=", "2", ")", "\n", "self", ".", "assertGreater", "(", "proba", "[", "0", "]", "[", "1", "]", ",", "proba", "[", "0", "]", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_gaussian_nb_with_missing_values.TestFilterObject.test_gaussian": [[96, 99], ["test_gaussian_nb_with_missing_values.TestFilterObject.gaussian_nb.get_gaussian", "test_gaussian_nb_with_missing_values.TestFilterObject.assertAlmostEqual"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.get_gaussian"], ["", "def", "test_gaussian", "(", "self", ")", ":", "\n", "        ", "gaussian", "=", "self", ".", "gaussian_nb", ".", "get_gaussian", "(", "0.441", ",", "1", ",", "0.447213595", ")", "\n", "self", ".", "assertAlmostEqual", "(", "gaussian", ",", "0.40842", ",", "places", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact_combinor.TestFactCombinor.setUp": [[14, 19], ["quasimodo.data_structures.referencable_interface.ReferencableInterface", "quasimodo.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "dummy_reference", "=", "ReferencableInterface", "(", "\"Dummy reference\"", ")", "\n", "self", ".", "openie_fact_generator", "=", "OpenIEFactGeneratorSubmodule", "(", "dummy_reference", ")", "\n", "self", ".", "openie_fact_generator", ".", "_name", "=", "\"OPENIE\"", "# Dummy name only useful for testing", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact_combinor.TestFactCombinor.test_combination": [[20, 47], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_fact_combinor.TestFactCombinor.empty_input.add_generated_facts", "quasimodo.fact_combinor.FactCombinor", "quasimodo.fact_combinor.FactCombinor.process", "test_fact_combinor.TestFactCombinor.assertEqual", "test_fact_combinor.TestFactCombinor.assertEqual", "str", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertIn", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "len", "[].get_sentence_source", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "[].get_score", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_combination", "(", "self", ")", ":", "\n", "        ", "score0", "=", "MultipleScore", "(", ")", "\n", "score0", ".", "add_score", "(", "1", ",", "None", ",", "None", ")", "\n", "score1", "=", "MultipleScore", "(", ")", "\n", "score1", ".", "add_score", "(", "0.5", ",", "None", ",", "None", ")", "\n", "score2", "=", "MultipleScore", "(", ")", "\n", "score2", ".", "add_score", "(", "0.7", ",", "None", ",", "None", ")", "\n", "generated_fact0", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"\"", ",", "False", ",", "score0", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"lions eat zebras\"", ",", "None", ",", "1", ")", ")", "\n", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "mso", ".", "add_raw", "(", "\"lions eat zebras\"", ",", "None", ",", "2", ")", "\n", "mso", ".", "add_raw", "(", "\"lions eat small zebras\"", ",", "None", ",", "1", ")", "\n", "generated_fact1", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"\"", ",", "False", ",", "score1", ",", "\n", "mso", ")", "\n", "generated_fact2", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"\"", ",", "False", ",", "score2", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"lions eat small zebras\"", ",", "None", ",", "1", ")", ")", "\n", "new_gfs", "=", "[", "generated_fact0", ",", "generated_fact1", ",", "generated_fact2", "]", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "fact_combinor", "=", "FactCombinor", "(", "None", ")", "\n", "inputs", "=", "fact_combinor", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "3", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", ".", "scores", ")", ")", "\n", "sentence", "=", "str", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_sentence_source", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"lions eat zebras\"", ",", "sentence", ")", "\n", "self", ".", "assertIn", "(", "\"lions eat small zebras\"", ",", "sentence", ")", "\n", "self", ".", "assertIn", "(", "\"x#x3\"", ",", "sentence", ")", "\n", "self", ".", "assertIn", "(", "\"x#x2\"", ",", "sentence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact_combinor.TestFactCombinor.test_combination_modalities": [[48, 61], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_fact_combinor.TestFactCombinor.empty_input.add_generated_facts", "quasimodo.fact_combinor.FactCombinor", "quasimodo.fact_combinor.FactCombinor.process", "test_fact_combinor.TestFactCombinor.assertEqual", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertIn", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "[].get_modality().get", "[].get_modality().get", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "[].get_modality", "[].get_modality", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_combination_modalities", "(", "self", ")", ":", "\n", "        ", "score0", "=", "MultipleScore", "(", ")", "\n", "score0", ".", "add_score", "(", "1", ",", "None", ",", "None", ")", "\n", "score1", "=", "MultipleScore", "(", ")", "\n", "score1", ".", "add_score", "(", "0.5", ",", "None", ",", "None", ")", "\n", "generated_fact0", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"some\"", ",", "False", ",", "score0", ",", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"lions eat zebras\"", ",", "None", ",", "1", ")", ")", "\n", "generated_fact1", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"often\"", ",", "False", ",", "score1", ",", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"lions eat zebras\"", ",", "None", ",", "1", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact0", ",", "generated_fact1", "]", ")", "\n", "fact_combinor", "=", "FactCombinor", "(", "None", ")", "\n", "inputs", "=", "fact_combinor", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertIn", "(", "\"some\"", ",", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"often\"", ",", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact_combinor.TestFactCombinor.test_combination_modalities_tbc": [[62, 93], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_fact_combinor.TestFactCombinor.empty_input.add_generated_facts", "quasimodo.fact_combinor.FactCombinor", "quasimodo.fact_combinor.FactCombinor.process", "test_fact_combinor.TestFactCombinor.assertEqual", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertIn", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "[].get_modality().get", "str", "str", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "[].get_sentence_source", "[].get_sentence_source", "[].get_modality", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_combination_modalities_tbc", "(", "self", ")", ":", "\n", "        ", "score0", "=", "MultipleScore", "(", ")", "\n", "score0", ".", "add_score", "(", "1", ",", "None", ",", "None", ")", "\n", "score1", "=", "MultipleScore", "(", ")", "\n", "score1", ".", "add_score", "(", "0.5", ",", "None", ",", "None", ")", "\n", "generated_fact0", "=", "GeneratedFact", "(", "\"parent\"", ",", "\"have\"", ",", "\"children\"", ",", "\n", "\"TBC[many]\"", ",", "\n", "False", ",", "\n", "score0", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\n", "\"parents have many children\"", ",", "None", ",", "\n", "1", ")", ")", "\n", "generated_fact1", "=", "GeneratedFact", "(", "\"parent\"", ",", "\"have\"", ",", "\"children\"", ",", "\n", "\"\"", ",", "\n", "False", ",", "\n", "score1", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\n", "\"parents have children\"", ",", "None", ",", "1", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact0", ",", "\n", "generated_fact1", "]", ")", "\n", "fact_combinor", "=", "FactCombinor", "(", "None", ")", "\n", "inputs", "=", "fact_combinor", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertIn", "(", "\"TBC[many]\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"parents have many children x#x1\"", ",", "\n", "str", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "\n", "0", "]", ".", "get_sentence_source", "(", ")", ")", ")", "\n", "self", ".", "assertIn", "(", "\"parents have children x#x1\"", ",", "\n", "str", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "\n", "0", "]", ".", "get_sentence_source", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact_combinor.TestFactCombinor.test_combination_modalities_long": [[94, 128], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_fact_combinor.TestFactCombinor.empty_input.add_generated_facts", "quasimodo.fact_combinor.FactCombinor", "quasimodo.fact_combinor.FactCombinor.process", "test_fact_combinor.TestFactCombinor.assertEqual", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "[].get_modality().get", "str", "str", "[].get_predicate", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "[].get_sentence_source", "[].get_sentence_source", "[].get_modality", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_combination_modalities_long", "(", "self", ")", ":", "\n", "        ", "score0", "=", "MultipleScore", "(", ")", "\n", "score0", ".", "add_score", "(", "1", ",", "None", ",", "None", ")", "\n", "score1", "=", "MultipleScore", "(", ")", "\n", "score1", ".", "add_score", "(", "0.5", ",", "None", ",", "None", ")", "\n", "generated_fact0", "=", "GeneratedFact", "(", "\"parent\"", ",", "\"go\"", ",", "\"to Paris\"", ",", "\n", "\"TBC[many]\"", ",", "\n", "False", ",", "\n", "score0", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\n", "\"parents have many children\"", ",", "None", ",", "\n", "1", ")", ")", "\n", "generated_fact1", "=", "GeneratedFact", "(", "\"parent\"", ",", "\"go to\"", ",", "\"Paris\"", ",", "\n", "\"\"", ",", "\n", "False", ",", "\n", "score1", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\n", "\"parents have children\"", ",", "None", ",", "1", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact0", ",", "\n", "generated_fact1", "]", ")", "\n", "fact_combinor", "=", "FactCombinor", "(", "None", ")", "\n", "inputs", "=", "fact_combinor", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertIn", "(", "\"TBC[many]\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"parents have many children x#x1\"", ",", "\n", "str", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "\n", "0", "]", ".", "get_sentence_source", "(", ")", ")", ")", "\n", "self", ".", "assertIn", "(", "\"parents have children x#x1\"", ",", "\n", "str", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "\n", "0", "]", ".", "get_sentence_source", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"go to\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "\n", "0", "]", ".", "get_predicate", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact_combinor.TestFactCombinor.test_combination_modalities_long_fart": [[129, 160], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_fact_combinor.TestFactCombinor.empty_input.add_generated_facts", "quasimodo.fact_combinor.FactCombinor", "quasimodo.fact_combinor.FactCombinor.process", "test_fact_combinor.TestFactCombinor.assertEqual", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertIn", "test_fact_combinor.TestFactCombinor.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "[].get_modality().get", "[].get_modality().get", "[].get_predicate", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "[].get_modality", "[].get_modality", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_combination_modalities_long_fart", "(", "self", ")", ":", "\n", "        ", "score0", "=", "MultipleScore", "(", ")", "\n", "score0", ".", "add_score", "(", "1", ",", "None", ",", "None", ")", "\n", "score1", "=", "MultipleScore", "(", ")", "\n", "score1", ".", "add_score", "(", "0.5", ",", "None", ",", "None", ")", "\n", "generated_fact0", "=", "GeneratedFact", "(", "\"fart\"", ",", "\"smell\"", ",", "\"worse in shower\"", ",", "\n", "\"always x#x9 // often x#x2\"", ",", "\n", "False", ",", "\n", "score0", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\n", "\"farts smell worse in the shower\"", ",", "\n", "None", ",", "\n", "1", ")", ")", "\n", "generated_fact1", "=", "GeneratedFact", "(", "\"fart\"", ",", "\"smell worse in\"", ",", "\"shower\"", ",", "\n", "\"TBC[hot shower] x#x5 // always x#x1 // TBC[when shower] x#x1\"", ",", "\n", "False", ",", "\n", "score1", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\n", "\"farts smell worse in the shower\"", ",", "None", ",", "1", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact0", ",", "\n", "generated_fact1", "]", ")", "\n", "fact_combinor", "=", "FactCombinor", "(", "None", ")", "\n", "inputs", "=", "fact_combinor", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertIn", "(", "\"often\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"always x#x10\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"smell worse in\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "\n", "0", "]", ".", "get_predicate", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact_combinor.TestFactCombinor.test_beach": [[161, 181], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_fact_combinor.TestFactCombinor.empty_input.add_generated_facts", "quasimodo.fact_combinor.FactCombinor", "quasimodo.fact_combinor.FactCombinor.process", "test_fact_combinor.TestFactCombinor.assertEqual", "len", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.add_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_beach", "(", "self", ")", ":", "\n", "        ", "score0", "=", "MultipleScore", "(", ")", "\n", "score0", ".", "add_score", "(", "1", ",", "None", ",", "None", ")", "\n", "mso", "=", "MultipleSourceOccurrence", "(", ")", "\n", "mso", ".", "add_raw", "(", "\"beaches have sand\"", ",", "\"Google Autocomplete\"", ",", "4", ")", "\n", "mso", ".", "add_raw", "(", "\"some beaches have sand\"", ",", "\"Google Autocomplete\"", ",", "2", ")", "\n", "mso", ".", "add_raw", "(", "\"some beaches have sand and some rocks\"", ",", "\"Google \"", "\n", "\"Autocomplete\"", ",", "1", ")", "\n", "mso", ".", "add_raw", "(", "\"all beaches have sand\"", ",", "\"Google Autocomplete\"", ",", "4", ")", "\n", "mso", ".", "add_raw", "(", "\"beach have sand\"", ",", "\"Google Autocomplete\"", ",", "1", ")", "\n", "generated_fact0", "=", "GeneratedFact", "(", "\"beach\"", ",", "\"have\"", ",", "\"sand\"", ",", "\n", "\"some[subj/some] x#x3 // \"", "\n", "\"some[subj/all] x#x4\"", ",", "\n", "False", ",", "\n", "score0", ",", "\n", "mso", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact0", "]", ")", "\n", "fact_combinor", "=", "FactCombinor", "(", "None", ")", "\n", "inputs", "=", "fact_combinor", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact_combinor.TestFactCombinor.test_combination_has_property": [[182, 209], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_fact_combinor.TestFactCombinor.empty_input.add_generated_facts", "quasimodo.fact_combinor.FactCombinor", "quasimodo.fact_combinor.FactCombinor.process", "test_fact_combinor.TestFactCombinor.assertEqual", "test_fact_combinor.TestFactCombinor.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "[].get_predicate", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts", "quasimodo.fact_combinor.FactCombinor.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_combination_has_property", "(", "self", ")", ":", "\n", "        ", "score0", "=", "MultipleScore", "(", ")", "\n", "score0", ".", "add_score", "(", "1", ",", "None", ",", "None", ")", "\n", "score1", "=", "MultipleScore", "(", ")", "\n", "score1", ".", "add_score", "(", "0.5", ",", "None", ",", "None", ")", "\n", "generated_fact0", "=", "GeneratedFact", "(", "\"fart\"", ",", "\"has_property\"", ",", "\"in shower\"", ",", "\n", "\"always x#x9 // often x#x2\"", ",", "\n", "False", ",", "\n", "score0", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\n", "\"farts are in shower\"", ",", "\n", "None", ",", "\n", "1", ")", ")", "\n", "generated_fact1", "=", "GeneratedFact", "(", "\"fart\"", ",", "\"be in\"", ",", "\"shower\"", ",", "\n", "\"TBC[hot shower] x#x5 // always x#x1 // TBC[when shower] x#x1\"", ",", "\n", "False", ",", "\n", "score1", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\n", "\"farts smell worse in the shower\"", ",", "None", ",", "1", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact0", ",", "\n", "generated_fact1", "]", ")", "\n", "fact_combinor", "=", "FactCombinor", "(", "None", ")", "\n", "inputs", "=", "fact_combinor", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"be in\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "\n", "0", "]", ".", "get_predicate", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_filter_language.TestFilterLanguages.setUp": [[13, 16], ["quasimodo.assertion_normalization.filter_language_questions.FilterLanguageQuestions", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "cleaning_predicate", "=", "FilterLanguageQuestions", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_filter_language.TestFilterLanguages.test_french": [[17, 26], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_filter_language.TestFilterLanguages.empty_input.add_generated_facts", "test_filter_language.TestFilterLanguages.cleaning_predicate.process", "test_filter_language.TestFilterLanguages.get_generated_facts", "test_filter_language.TestFilterLanguages.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_french", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"potato\"", ",", "\"be in\"", ",", "\"french\"", ",", "\"\"", ",", "\n", "False", ",", "\n", "0.0", ",", "\n", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_filter_language.TestFilterLanguages.test_no_change": [[27, 36], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_filter_language.TestFilterLanguages.empty_input.add_generated_facts", "test_filter_language.TestFilterLanguages.cleaning_predicate.process", "test_filter_language.TestFilterLanguages.get_generated_facts", "test_filter_language.TestFilterLanguages.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_no_change", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"potato\"", ",", "\"be in\"", ",", "\"burger\"", ",", "\"\"", ",", "\n", "False", ",", "\n", "0.0", ",", "\n", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "cleaning_predicate", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_basic_modality.TestBasicModality.setUp": [[18, 25], ["quasimodo.data_structures.referencable_interface.ReferencableInterface", "quasimodo.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule", "quasimodo.data_structures.inputs.Inputs", "quasimodo.assertion_normalization.basic_modality_submodule.BasicModalitySubmodule"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "dummy_reference", "=", "ReferencableInterface", "(", "\"Dummy reference\"", ")", "\n", "self", ".", "openie_fact_generator", "=", "OpenIEFactGeneratorSubmodule", "(", "\n", "dummy_reference", ")", "\n", "self", ".", "openie_fact_generator", ".", "_name", "=", "\"OPENIE\"", "# Dummy name only useful for testing", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "self", ".", "basic_modality", "=", "BasicModalitySubmodule", "(", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_basic_modality.TestBasicModality.test_always": [[26, 40], ["test_basic_modality.TestBasicModality.openie_fact_generator.get_generated_facts", "test_basic_modality.TestBasicModality.empty_input.add_generated_facts", "test_basic_modality.TestBasicModality.basic_modality.process", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertIn", "len", "[].get_subject().get", "[].get_predicate().get", "[].get_object().get", "[].get_modality().get", "test_basic_modality.TestBasicModality.get_generated_facts", "[].get_subject", "[].get_predicate", "[].get_object", "[].get_modality", "test_basic_modality.TestBasicModality.get_generated_facts", "test_basic_modality.TestBasicModality.get_generated_facts", "test_basic_modality.TestBasicModality.get_generated_facts", "test_basic_modality.TestBasicModality.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_always", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why does panda always climb tree\"", ",", "1.0", ",", "None", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "basic_modality", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"panda\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"climb\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"tree\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"always\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_basic_modality.TestBasicModality.test_often_object": [[41, 55], ["test_basic_modality.TestBasicModality.openie_fact_generator.get_generated_facts", "test_basic_modality.TestBasicModality.empty_input.add_generated_facts", "test_basic_modality.TestBasicModality.basic_modality.process", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertIn", "len", "[].get_subject().get", "[].get_predicate().get", "[].get_object().get", "[].get_modality().get", "test_basic_modality.TestBasicModality.get_generated_facts", "[].get_subject", "[].get_predicate", "[].get_object", "[].get_modality", "test_basic_modality.TestBasicModality.get_generated_facts", "test_basic_modality.TestBasicModality.get_generated_facts", "test_basic_modality.TestBasicModality.get_generated_facts", "test_basic_modality.TestBasicModality.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_often_object", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\"why do pandas climb in tree often\"", ",", "1.0", ",", "None", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "basic_modality", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"pandas\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"climb in\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"tree\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"often\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_basic_modality.TestBasicModality.test_with_already_one_modality": [[56, 69], ["test_basic_modality.TestBasicModality.openie_fact_generator.get_generated_facts", "test_basic_modality.TestBasicModality.empty_input.add_generated_facts", "test_basic_modality.TestBasicModality.basic_modality.process", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertEqual", "test_basic_modality.TestBasicModality.assertIn", "len", "gfs[].get_subject().get", "gfs[].get_predicate().get", "gfs[].get_object().get", "gfs[].get_modality().get", "test_basic_modality.TestBasicModality.get_generated_facts", "x.get_subject", "gfs[].get_subject", "gfs[].get_predicate", "gfs[].get_object", "gfs[].get_modality"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality"], ["", "def", "test_with_already_one_modality", "(", "self", ")", ":", "\n", "        ", "suggestion", "=", "(", "\n", "\"why do african pandas eat bananas often\"", ",", "1.0", ",", "None", ",", "\"panda\"", ")", "\n", "new_gfs", "=", "self", ".", "openie_fact_generator", ".", "get_generated_facts", "(", "[", "suggestion", "]", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "basic_modality", ".", "process", "(", "inputs", ")", "\n", "gfs", "=", "[", "x", "for", "x", "in", "inputs", ".", "get_generated_facts", "(", ")", "if", "\n", "x", ".", "get_subject", "(", ")", "==", "\"pandas\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "gfs", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"pandas\"", ",", "gfs", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"eat\"", ",", "gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"bananas\"", ",", "gfs", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"often\"", ",", "gfs", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_basic_modality.TestBasicModality.test_multiple_sources": [[70, 91], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "print", "quasimodo.data_structures.generated_fact.GeneratedFact", "test_basic_modality.TestBasicModality.empty_input.add_generated_facts", "test_basic_modality.TestBasicModality.basic_modality.process", "test_basic_modality.TestBasicModality.assertEqual", "print", "test_basic_modality.TestBasicModality.assertIn", "len", "test_basic_modality.TestBasicModality.get_generated_facts", "[].get_modality().get", "test_basic_modality.TestBasicModality.get_generated_facts", "[].get_modality", "test_basic_modality.TestBasicModality.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_multiple_sources", "(", "self", ")", ":", "\n", "        ", "score", "=", "MultipleScore", "(", ")", "\n", "score", ".", "add_score", "(", "1", ",", "None", ",", "None", ")", "\n", "mso", "=", "MultipleSourceOccurrence", ".", "from_raw", "(", "\n", "\"parents have many children\"", ",", "\n", "\"Google\"", ",", "\n", "10", ")", "\n", "print", "(", "mso", ")", "\n", "generated_fact", "=", "GeneratedFact", "(", "\"parent\"", ",", "\n", "\"often have\"", ",", "\n", "\"children\"", ",", "\n", "\"TBC[many]\"", ",", "\n", "False", ",", "\n", "score", ",", "\n", "mso", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "basic_modality", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "print", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", "\n", "self", ".", "assertIn", "(", "\"often x#x10\"", ",", "\n", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_modality", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_easy": [[8, 11], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["    ", "def", "test_easy", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"herbs\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants eat herbs\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_has_property": [[12, 15], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_has_property", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"has_property\"", ",", "\"big\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants are big\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_has_color": [[16, 19], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_has_color", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"has_color\"", ",", "\"grey\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants are grey\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_body_part": [[20, 23], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_body_part", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"has_body_part\"", ",", "\"ears\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants have ears\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_some_modality": [[24, 27], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_some_modality", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"has_property\"", ",", "\"white\"", ",", "\"some[subj/white]\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"(white) elephants are white\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_always_modality": [[28, 31], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_always_modality", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"has_property\"", ",", "\"white\"", ",", "\"always\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants are [always] white\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_negative": [[32, 35], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_negative", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"grass\"", ",", "negative", "=", "True", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants do not eat grass\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_negative_are": [[36, 39], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_negative_are", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"has_property\"", ",", "\"small\"", ",", "negative", "=", "True", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants are not small\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_negate_can": [[40, 43], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_negate_can", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"can\"", ",", "\"jump\"", ",", "negative", "=", "True", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants cannot jump\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_negate_be": [[44, 47], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_negate_be", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"be in\"", ",", "\"europe\"", ",", "negative", "=", "True", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants are not in europe\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_fact.TestFact.test_sentence_with_be": [[48, 51], ["quasimodo.data_structures.fact.Fact", "test_fact.TestFact.assertEqual", "quasimodo.data_structures.fact.Fact.to_sentence"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact.Fact.to_sentence"], ["", "def", "test_sentence_with_be", "(", "self", ")", ":", "\n", "        ", "fact", "=", "Fact", "(", "\"elephant\"", ",", "\"be in\"", ",", "\"africa\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "to_sentence", "(", ")", ",", "\"elephants are in africa\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_generated_fact.TestGeneratedFact.test_fact_transformation": [[9, 21], ["quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact.get_fact", "test_generated_fact.TestGeneratedFact.assertEqual", "test_generated_fact.TestGeneratedFact.assertEqual", "test_generated_fact.TestGeneratedFact.assertEqual", "test_generated_fact.TestGeneratedFact.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.generated_fact.GeneratedFact.get_fact", "test_generated_fact.TestGeneratedFact.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.data_structures.generated_fact.GeneratedFact.get_fact.get_subject", "quasimodo.data_structures.generated_fact.GeneratedFact.get_fact.get_predicate", "quasimodo.data_structures.generated_fact.GeneratedFact.get_fact.get_object", "quasimodo.data_structures.generated_fact.GeneratedFact.get_fact.is_negative", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.data_structures.generated_fact.GeneratedFact.get_fact.is_negative"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_fact", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact.GeneratedFact.get_fact", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["    ", "def", "test_fact_transformation", "(", "self", ")", ":", "\n", "        ", "gf", "=", "GeneratedFact", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"\"", ",", "False", ",", "1.0", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"elephants do not eat zebras\"", ",", "None", ",", "1", ")", ")", "\n", "fact", "=", "gf", ".", "get_fact", "(", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "get_subject", "(", ")", ",", "\"elephant\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "get_predicate", "(", ")", ",", "\"eat\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "get_object", "(", ")", ",", "\"zebra\"", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "is_negative", "(", ")", ",", "False", ")", "\n", "gf", "=", "GeneratedFact", "(", "\"elephant\"", ",", "\"eat\"", ",", "\"zebra\"", ",", "\"\"", ",", "True", ",", "1.0", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"elephants do not eat zebras\"", ",", "None", ",", "1", ")", ")", "\n", "fact", "=", "gf", ".", "get_fact", "(", ")", "\n", "self", ".", "assertEqual", "(", "fact", ".", "is_negative", "(", ")", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_sentence_comparator.TestSentenceComparator.test_get_content": [[16, 30], ["quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule", "quasimodo.data_structures.inputs.Inputs", "test_sentence_comparator.TestSentenceComparator.empty_input.add_subjects", "quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.setup_processing", "quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.get_contents", "test_sentence_comparator.TestSentenceComparator.assertEqual", "quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.get_contents", "test_sentence_comparator.TestSentenceComparator.assertEqual", "quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.get_contents", "test_sentence_comparator.TestSentenceComparator.assertEqual", "quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.get_contents", "test_sentence_comparator.TestSentenceComparator.assertEqual", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.setup_processing", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.get_contents", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.get_contents", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.get_contents", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.get_contents"], ["    ", "def", "test_get_content", "(", "self", ")", ":", "\n", "        ", "sc", "=", "ConceptualCaptionsComparatorSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "subjects", "=", "{", "Subject", "(", "\"elephant\"", ")", ",", "Subject", "(", "\"penguin\"", ")", ",", "Subject", "(", "\"lion\"", ")", ",", "Subject", "(", "\"raccoon\"", ")", "}", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_subjects", "(", "subjects", ")", "\n", "sc", ".", "setup_processing", "(", "inputs", ")", "\n", "contents", "=", "sc", ".", "get_contents", "(", "\"elephant\"", ")", "\n", "self", ".", "assertEqual", "(", "3748", ",", "len", "(", "contents", ")", ")", "\n", "contents", "=", "sc", ".", "get_contents", "(", "\"penguin\"", ")", "\n", "self", ".", "assertEqual", "(", "1273", ",", "len", "(", "contents", ")", ")", "\n", "contents", "=", "sc", ".", "get_contents", "(", "\"lion\"", ")", "\n", "self", ".", "assertEqual", "(", "2616", ",", "len", "(", "contents", ")", ")", "\n", "contents", "=", "sc", ".", "get_contents", "(", "\"raccoon\"", ")", "\n", "self", ".", "assertEqual", "(", "365", ",", "len", "(", "contents", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_sentence_comparator.TestSentenceComparator.test_conceptual_caption": [[31, 68], ["quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule", "quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.referencable_interface.ReferencableInterface", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "gfs.append", "test_sentence_comparator.TestSentenceComparator.empty_input.add_generated_facts().add_subjects", "quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.process", "test_sentence_comparator.TestSentenceComparator.assertEqual", "test_sentence_comparator.TestSentenceComparator.assertEqual", "test_sentence_comparator.TestSentenceComparator.assertNotAlmostEqual", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.subject.Subject", "quasimodo.data_structures.multiple_scores.MultipleScore", "gfs.append", "quasimodo.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "len", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "test_sentence_comparator.TestSentenceComparator.empty_input.add_generated_facts", "len", "quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.process.get_generated_facts", "quasimodo.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule", "quasimodo.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "[].get_score", "[].get_score", "quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.process.get_generated_facts", "quasimodo.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.process.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_conceptual_caption", "(", "self", ")", ":", "\n", "        ", "sc", "=", "ConceptualCaptionsComparatorSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "self", ".", "dummy_reference", "=", "ReferencableInterface", "(", "\"DUMMY\"", ")", "\n", "\n", "dataset", "=", "[", "(", "\"elephant\"", ",", "\"download\"", ",", "\"baby\"", ",", "0", ")", ",", "\n", "(", "\"elephant\"", ",", "\"have\"", ",", "\"tusks\"", ",", "1", ")", ",", "\n", "(", "\"lion\"", ",", "\"eat\"", ",", "\"gazella\"", ",", "0", ")", ",", "\n", "(", "\"penguin\"", ",", "\"eat\"", ",", "\"fish\"", ",", "0", ")", ",", "\n", "(", "\"gorilla\"", ",", "\"eat\"", ",", "\"banana\"", ",", "0", ")", ",", "\n", "(", "\"sky\"", ",", "\"hasProperty\"", ",", "\"blue\"", ",", "0", ")", ",", "\n", "(", "\"computer\"", ",", "\"is\"", ",", "\"working\"", ",", "1", ")", ",", "\n", "(", "\"raccoon\"", ",", "\"hasProperty\"", ",", "\"blue\"", ",", "0", ")", "\n", "]", "\n", "subjects", "=", "{", "Subject", "(", "\"elephant\"", ")", ",", "Subject", "(", "\"penguin\"", ")", ",", "Subject", "(", "\"lion\"", ")", ",", "\n", "Subject", "(", "\"gorilla\"", ")", ",", "Subject", "(", "\"sky\"", ")", ",", "Subject", "(", "\"computer\"", ")", ",", "\n", "Subject", "(", "\"raccoon\"", ")", "}", "\n", "\n", "gfs", "=", "[", "]", "\n", "pos", "=", "0", "\n", "for", "subject", ",", "predicate", ",", "obj", ",", "truth", "in", "dataset", ":", "\n", "            ", "pos", "+=", "1", "\n", "score", "=", "MultipleScore", "(", ")", "\n", "if", "pos", "%", "2", "==", "0", ":", "\n", "                ", "score", ".", "add_score", "(", "truth", ",", "self", ".", "dummy_reference", ",", "GoogleAutocompleteSubmodule", "(", "self", ".", "dummy_reference", ")", ")", "\n", "", "else", ":", "\n", "                ", "score", ".", "add_score", "(", "truth", ",", "self", ".", "dummy_reference", ",", "BingAutocompleteSubmodule", "(", "self", ".", "dummy_reference", ")", ")", "\n", "", "gfs", ".", "append", "(", "GeneratedFact", "(", "subject", ",", "predicate", ",", "obj", ",", "\"\"", ",", "False", ",", "score", ",", "MultipleSourceOccurrence", "(", ")", ")", ")", "\n", "", "score2", "=", "MultipleScore", "(", ")", "\n", "score2", ".", "add_score", "(", "1", ",", "self", ".", "dummy_reference", ",", "GoogleAutocompleteSubmodule", "(", "self", ".", "dummy_reference", ")", ")", "\n", "gfs", ".", "append", "(", "GeneratedFact", "(", "\"elephant\"", ",", "\"be\"", ",", "\"big\"", ",", "\"\"", ",", "False", ",", "score2", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "\"elephants are big\"", ",", "None", ",", "1", ")", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "gfs", ")", ".", "add_subjects", "(", "subjects", ")", "\n", "inputs", "=", "sc", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "dataset", ")", "+", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", ".", "scores", ")", ",", "2", ")", "\n", "self", ".", "assertNotAlmostEqual", "(", "inputs", ".", "get_generated_facts", "(", ")", "[", "1", "]", ".", "get_score", "(", ")", ".", "scores", "[", "1", "]", "[", "0", "]", ",", "0", ",", "delta", "=", "1e-5", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.setUp": [[8, 10], ["quasimodo.inflect_accessor.InflectAccessor"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "inflect", "=", "InflectAccessor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.test_simple_singular": [[11, 13], ["test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.inflect.to_singular"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular"], ["", "def", "test_simple_singular", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_singular", "(", "\"apples\"", ")", ",", "\"apple\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.test_simple_plural": [[14, 16], ["test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.inflect.to_plural"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural"], ["", "def", "test_simple_plural", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_plural", "(", "\"apple\"", ")", ",", "\"apples\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.test_composed_plural": [[17, 20], ["test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.inflect.to_plural"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural"], ["", "def", "test_composed_plural", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_plural", "(", "\"red apple\"", ")", ",", "\n", "\"red apples\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.test_oyster": [[21, 24], ["test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.inflect.to_plural"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural"], ["", "def", "test_oyster", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_plural", "(", "\"perl oyster\"", ")", ",", "\n", "\"perl oysters\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.test_singular_no_transform": [[25, 28], ["test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.inflect.to_singular"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular"], ["", "def", "test_singular_no_transform", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_singular", "(", "\"perl oyster\"", ")", ",", "\n", "\"perl oyster\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.test_mars": [[29, 31], ["test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.inflect.to_singular"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular"], ["", "def", "test_mars", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_singular", "(", "\"mars\"", ")", ",", "\"mars\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.test_jeans": [[32, 34], ["test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.inflect.to_singular"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular"], ["", "def", "test_jeans", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_singular", "(", "\"jeans\"", ")", ",", "\"jeans\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.test_dust_bunnies": [[35, 40], ["test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.inflect.to_singular", "test_inflect.TestIdenticalSubjectObject.inflect.to_plural"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural"], ["", "def", "test_dust_bunnies", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_singular", "(", "\"dust bunnies\"", ")", ",", "\n", "\"dust bunny\"", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_plural", "(", "\"dust bunny\"", ")", ",", "\n", "\"dust bunnies\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_inflect.TestIdenticalSubjectObject.test_opera_singers": [[41, 46], ["test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.assertEqual", "test_inflect.TestIdenticalSubjectObject.inflect.to_singular", "test_inflect.TestIdenticalSubjectObject.inflect.to_plural"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural"], ["", "def", "test_opera_singers", "(", "self", ")", ":", "\n", "        ", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_singular", "(", "\"opera singers\"", ")", ",", "\n", "\"opera singer\"", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "inflect", ".", "to_plural", "(", "\"opera singer\"", ")", ",", "\n", "\"opera singers\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_associations.TestAssociation.setUp": [[16, 23], ["quasimodo.data_structures.referencable_interface.ReferencableInterface", "quasimodo.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule", "quasimodo.data_structures.inputs.Inputs", "quasimodo.assertion_validation.imagetag_submodule.ImagetagSubmodule", "quasimodo.assertion_validation.flickr_clusters_submodule.FlickrClustersSubmodule"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "dummy_reference", "=", "ReferencableInterface", "(", "\"Dummy reference\"", ")", "\n", "self", ".", "openie_fact_generator", "=", "OpenIEFactGeneratorSubmodule", "(", "dummy_reference", ")", "\n", "self", ".", "openie_fact_generator", ".", "_name", "=", "\"OPENIE\"", "# Dummy name only useful for testing", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "self", ".", "associations", "=", "ImagetagSubmodule", "(", "None", ")", "\n", "self", ".", "associations_flick_cluster", "=", "FlickrClustersSubmodule", "(", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_associations.TestAssociation.test_panda_imagetag": [[24, 32], ["test_associations.TestAssociation.empty_input.add_generated_facts().add_subjects", "test_associations.TestAssociation.associations.process", "test_associations.TestAssociation.assertEqual", "[].get_score", "test_associations.TestAssociation.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "len", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "test_associations.TestAssociation.empty_input.add_generated_facts", "test_associations.TestAssociation.get_generated_facts", "test_associations.TestAssociation.get_generated_facts", "x[].get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "test_panda_imagetag", "(", "self", ")", ":", "\n", "        ", "new_gfs", "=", "[", "GeneratedFact", "(", "\"panda\"", ",", "\"climb\"", ",", "\"tree\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "]", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", ".", "add_subjects", "(", "{", "\"panda\"", "}", ")", "\n", "inputs", "=", "self", ".", "associations", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "scores", "=", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", "\n", "scores_imagetag", "=", "[", "x", "for", "x", "in", "scores", ".", "scores", "if", "x", "[", "2", "]", ".", "get_name", "(", ")", "==", "\"Image Tag submodule\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "scores_imagetag", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_associations.TestAssociation.test_panda_flickr_cluster": [[33, 41], ["test_associations.TestAssociation.empty_input.add_generated_facts().add_subjects", "test_associations.TestAssociation.associations_flick_cluster.process", "test_associations.TestAssociation.assertEqual", "[].get_score", "test_associations.TestAssociation.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "len", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "test_associations.TestAssociation.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "test_associations.TestAssociation.get_generated_facts", "test_associations.TestAssociation.get_generated_facts", "x[].get_name"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name"], ["", "def", "test_panda_flickr_cluster", "(", "self", ")", ":", "\n", "        ", "new_gfs", "=", "[", "GeneratedFact", "(", "\"panda\"", ",", "\"live\"", ",", "\"china\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "]", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "new_gfs", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"panda\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "associations_flick_cluster", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "scores", "=", "inputs", ".", "get_generated_facts", "(", ")", "[", "0", "]", ".", "get_score", "(", ")", "\n", "scores_flickr", "=", "[", "x", "for", "x", "in", "scores", ".", "scores", "if", "x", "[", "2", "]", ".", "get_name", "(", ")", "==", "\"Flickr\"", "]", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "scores_flickr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_associations.TestAssociation.test_panda_flickr_cluster_raw": [[42, 48], ["test_associations.TestAssociation.associations_flick_cluster._get_clusters", "test_associations.TestAssociation.assertIn"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.flickr_clusters_submodule.FlickrClustersSubmodule._get_clusters"], ["", "def", "test_panda_flickr_cluster_raw", "(", "self", ")", ":", "\n", "        ", "clusters", "=", "self", ".", "associations_flick_cluster", ".", "_get_clusters", "(", "\"panda\"", ")", "\n", "merge_clusters", "=", "[", "]", "\n", "for", "cluster", "in", "clusters", ":", "\n", "            ", "merge_clusters", "+=", "cluster", "\n", "", "self", ".", "assertIn", "(", "\"china\"", ",", "merge_clusters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_normalization.TestComplete.test_first": [[20, 35], ["quasimodo.data_structures.inputs.Inputs", "logging.info", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.inputs.Inputs.add_subjects().add_generated_facts", "quasimodo.default_module_factory.DefaultModuleFactory", "quasimodo.default_module_factory.DefaultModuleFactory.get_module", "quasimodo.default_module_factory.DefaultModuleFactory.get_module.process", "factory.get_module.process.get_generated_facts", "test_normalization.TestComplete.assertEqual", "test_normalization.TestComplete.assertEqual", "test_normalization.TestComplete.assertEqual", "test_normalization.TestComplete.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.data_structures.generated_fact.GeneratedFact.get_subject", "len", "new_gfs[].get_subject().get", "new_gfs[].get_predicate().get", "new_gfs[].get_object().get", "quasimodo.data_structures.inputs.Inputs.add_subjects", "new_gfs[].get_subject", "new_gfs[].get_predicate", "new_gfs[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_module_factory.DefaultModuleFactory.get_module", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["    ", "def", "test_first", "(", "self", ")", ":", "\n", "        ", "empty_input", "=", "Inputs", "(", ")", "\n", "logging", ".", "info", "(", "\"Starting complete test for normalization\"", ")", "\n", "gf", "=", "GeneratedFact", "(", "\"elephant\"", ",", "\"are\"", ",", "\"blue?\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "\n", "MultipleSourceOccurrence", "(", ")", ",", "PatternGoogle", "(", "\"\"", ")", ")", "\n", "subjects", "=", "{", "gf", ".", "get_subject", "(", ")", "}", "\n", "input", "=", "empty_input", ".", "add_subjects", "(", "subjects", ")", ".", "add_generated_facts", "(", "[", "gf", "]", ")", "\n", "factory", "=", "DefaultModuleFactory", "(", ")", "\n", "normalization_module", "=", "factory", ".", "get_module", "(", "\"assertion-normalization\"", ")", "\n", "new_input", "=", "normalization_module", ".", "process", "(", "input", ")", "\n", "new_gfs", "=", "new_input", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "new_gfs", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"elephant\"", ",", "new_gfs", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"has_property\"", ",", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"blue\"", ",", "new_gfs", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_normalization.TestComplete.test_normalize_beach": [[36, 49], ["quasimodo.data_structures.inputs.Inputs", "logging.info", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.inputs.Inputs.add_subjects().add_generated_facts", "quasimodo.default_module_factory.DefaultModuleFactory", "quasimodo.default_module_factory.DefaultModuleFactory.get_module", "quasimodo.default_module_factory.DefaultModuleFactory.get_module.process", "factory.get_module.process.get_generated_facts", "test_normalization.TestComplete.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.data_structures.subject.Subject", "len", "quasimodo.data_structures.inputs.Inputs.add_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_module_factory.DefaultModuleFactory.get_module", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects"], ["", "def", "test_normalize_beach", "(", "self", ")", ":", "\n", "        ", "empty_input", "=", "Inputs", "(", ")", "\n", "logging", ".", "info", "(", "\"Starting complete test for normalization\"", ")", "\n", "gf", "=", "GeneratedFact", "(", "\"beaches\"", ",", "\"have\"", ",", "\"sand\"", ",", "\"\"", ",", "False", ",", "\n", "MultipleScore", "(", ")", ",", "\n", "MultipleSourceOccurrence", "(", ")", ",", "PatternGoogle", "(", "\"\"", ")", ")", "\n", "subjects", "=", "{", "Subject", "(", "\"beach\"", ")", "}", "\n", "input", "=", "empty_input", ".", "add_subjects", "(", "subjects", ")", ".", "add_generated_facts", "(", "[", "gf", "]", ")", "\n", "factory", "=", "DefaultModuleFactory", "(", ")", "\n", "normalization_module", "=", "factory", ".", "get_module", "(", "\"assertion-normalization\"", ")", "\n", "new_input", "=", "normalization_module", ".", "process", "(", "input", ")", "\n", "new_gfs", "=", "new_input", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "new_gfs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_normalization.TestComplete.test_normalize_babies": [[50, 65], ["quasimodo.data_structures.inputs.Inputs", "logging.info", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.inputs.Inputs.add_subjects().add_generated_facts", "quasimodo.default_module_factory.DefaultModuleFactory", "quasimodo.default_module_factory.DefaultModuleFactory.get_module", "quasimodo.default_module_factory.DefaultModuleFactory.get_module.process", "factory.get_module.process.get_generated_facts", "test_normalization.TestComplete.assertEqual", "test_normalization.TestComplete.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.data_structures.subject.Subject", "len", "new_gfs[].get_predicate", "quasimodo.data_structures.inputs.Inputs.add_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_module_factory.DefaultModuleFactory.get_module", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects"], ["", "def", "test_normalize_babies", "(", "self", ")", ":", "\n", "        ", "empty_input", "=", "Inputs", "(", ")", "\n", "logging", ".", "info", "(", "\"Starting complete test for normalization\"", ")", "\n", "gf", "=", "GeneratedFact", "(", "\"babies\"", ",", "\"are \"", ",", "\"made\"", ",", "\"TBC[actually made]\"", ",", "\n", "False", ",", "\n", "MultipleScore", "(", ")", ",", "\n", "MultipleSourceOccurrence", "(", ")", ",", "PatternGoogle", "(", "\"\"", ")", ")", "\n", "subjects", "=", "{", "Subject", "(", "\"baby\"", ")", "}", "\n", "input", "=", "empty_input", ".", "add_subjects", "(", "subjects", ")", ".", "add_generated_facts", "(", "[", "gf", "]", ")", "\n", "factory", "=", "DefaultModuleFactory", "(", ")", "\n", "normalization_module", "=", "factory", ".", "get_module", "(", "\"assertion-normalization\"", ")", "\n", "new_input", "=", "normalization_module", ".", "process", "(", "input", ")", "\n", "new_gfs", "=", "new_input", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "new_gfs", ")", ")", "\n", "self", ".", "assertEqual", "(", "new_gfs", "[", "0", "]", ".", "get_predicate", "(", ")", ",", "\"has_property\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_normalization.TestComplete.test_normalize_can": [[66, 80], ["quasimodo.data_structures.inputs.Inputs", "logging.info", "quasimodo.data_structures.generated_fact.GeneratedFact", "quasimodo.data_structures.inputs.Inputs.add_subjects().add_generated_facts", "quasimodo.default_module_factory.DefaultModuleFactory", "quasimodo.default_module_factory.DefaultModuleFactory.get_module", "quasimodo.default_module_factory.DefaultModuleFactory.get_module.process", "factory.get_module.process.get_generated_facts", "test_normalization.TestComplete.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.patterns.pattern_google.PatternGoogle", "quasimodo.data_structures.subject.Subject", "len", "quasimodo.data_structures.inputs.Inputs.add_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_module_factory.DefaultModuleFactory.get_module", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects"], ["", "def", "test_normalize_can", "(", "self", ")", ":", "\n", "        ", "empty_input", "=", "Inputs", "(", ")", "\n", "logging", ".", "info", "(", "\"Starting complete test for normalization\"", ")", "\n", "gf", "=", "GeneratedFact", "(", "\"nafcil\"", ",", "\"can\"", ",", "\"nafcillin\"", ",", "\"\"", ",", "\n", "False", ",", "\n", "MultipleScore", "(", ")", ",", "\n", "MultipleSourceOccurrence", "(", ")", ",", "PatternGoogle", "(", "\"\"", ")", ")", "\n", "subjects", "=", "{", "Subject", "(", "\"nafcil\"", ")", "}", "\n", "input", "=", "empty_input", ".", "add_subjects", "(", "subjects", ")", ".", "add_generated_facts", "(", "[", "gf", "]", ")", "\n", "factory", "=", "DefaultModuleFactory", "(", ")", "\n", "normalization_module", "=", "factory", ".", "get_module", "(", "\"assertion-normalization\"", ")", "\n", "new_input", "=", "normalization_module", ".", "process", "(", "input", ")", "\n", "new_gfs", "=", "new_input", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "new_gfs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_normalization.TestComplete.test_normalize_all_beach_sand": [[81, 103], ["test_normalization.TestComplete.assertTrue", "quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.inputs.Inputs.add_subjects().add_generated_facts", "quasimodo.default_module_factory.DefaultModuleFactory", "quasimodo.default_module_factory.DefaultModuleFactory.get_module", "quasimodo.default_module_factory.DefaultModuleFactory.get_module.process", "factory.get_module.process.get_generated_facts", "test_normalization.TestComplete.assertTrue", "test_normalization.TestComplete.assertTrue", "open", "quasimodo.data_structures.subject.Subject", "len", "json.loads", "gfs.append", "len", "quasimodo.data_structures.inputs.Inputs.add_subjects", "len", "line.strip", "quasimodo.serialized_object_reader.read_generated_fact", "x.get_subject().get", "x.get_predicate().get", "x.get_object().get", "x.get_subject", "x.get_predicate", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.default_module_factory.DefaultModuleFactory.get_module", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.serialized_object_reader.read_generated_fact", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_normalize_all_beach_sand", "(", "self", ")", ":", "\n", "        ", "gfs", "=", "[", "]", "\n", "with", "open", "(", "\"beach.jsonl\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "json_line", "=", "json", ".", "loads", "(", "line", ".", "strip", "(", ")", ")", "\n", "gfs", ".", "append", "(", "serialized_object_reader", ".", "read_generated_fact", "(", "\n", "json_line", ")", "\n", ")", "\n", "", "", "self", ".", "assertTrue", "(", "len", "(", "gfs", ")", ">", "1", ")", "\n", "empty_input", "=", "Inputs", "(", ")", "\n", "subjects", "=", "{", "Subject", "(", "\"beach\"", ")", "}", "\n", "input", "=", "empty_input", ".", "add_subjects", "(", "subjects", ")", ".", "add_generated_facts", "(", "gfs", ")", "\n", "factory", "=", "DefaultModuleFactory", "(", ")", "\n", "normalization_module", "=", "factory", ".", "get_module", "(", "\"assertion-normalization\"", ")", "\n", "new_input", "=", "normalization_module", ".", "process", "(", "input", ")", "\n", "new_gfs", "=", "new_input", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "new_gfs", ")", ">", "1", ")", "\n", "gfs_have", "=", "[", "x", "for", "x", "in", "new_gfs", "\n", "if", "x", ".", "get_subject", "(", ")", ".", "get", "(", ")", "==", "\"beach\"", "\n", "and", "x", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "==", "\"have\"", "\n", "and", "x", ".", "get_object", "(", ")", ".", "get", "(", ")", "==", "\"sand\"", "]", "\n", "self", ".", "assertTrue", "(", "len", "(", "gfs_have", ")", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_mongodb_cache.TestMongoDBCache.test_creation": [[8, 18], ["quasimodo.cache.mongodb_cache.MongoDBCache", "test_mongodb_cache.TestMongoDBCache.assertFalse", "quasimodo.cache.mongodb_cache.MongoDBCache.write_cache", "test_mongodb_cache.TestMongoDBCache.assertTrue", "quasimodo.cache.mongodb_cache.MongoDBCache", "test_mongodb_cache.TestMongoDBCache.assertTrue", "quasimodo.cache.mongodb_cache.MongoDBCache.delete_cache", "test_mongodb_cache.TestMongoDBCache.assertFalse", "test_mongodb_cache.TestMongoDBCache.assertFalse", "quasimodo.cache.mongodb_cache.MongoDBCache.exists_collection", "quasimodo.cache.mongodb_cache.MongoDBCache.exists_collection", "quasimodo.cache.mongodb_cache.MongoDBCache.exists_collection", "quasimodo.cache.mongodb_cache.MongoDBCache.exists_collection", "quasimodo.cache.mongodb_cache.MongoDBCache.exists_collection"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.exists_collection", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.exists_collection", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.exists_collection", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.exists_collection", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.exists_collection"], ["    ", "def", "test_creation", "(", "self", ")", ":", "\n", "        ", "cache", "=", "MongoDBCache", "(", "\"test\"", ")", "\n", "self", ".", "assertFalse", "(", "cache", ".", "exists_collection", "(", ")", ")", "\n", "cache", ".", "write_cache", "(", "\"test\"", ",", "[", "]", ")", "\n", "self", ".", "assertTrue", "(", "cache", ".", "exists_collection", "(", ")", ")", "\n", "cache2", "=", "MongoDBCache", "(", "\"test\"", ")", "\n", "self", ".", "assertTrue", "(", "cache2", ".", "exists_collection", "(", ")", ")", "\n", "cache", ".", "delete_cache", "(", ")", "\n", "self", ".", "assertFalse", "(", "cache", ".", "exists_collection", "(", ")", ")", "\n", "self", ".", "assertFalse", "(", "cache2", ".", "exists_collection", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_mongodb_cache.TestMongoDBCache.test_write_read": [[19, 31], ["quasimodo.cache.mongodb_cache.MongoDBCache", "quasimodo.cache.mongodb_cache.MongoDBCache.delete_cache", "quasimodo.cache.mongodb_cache.MongoDBCache", "quasimodo.cache.mongodb_cache.MongoDBCache.read_cache", "test_mongodb_cache.TestMongoDBCache.assertIsNone", "quasimodo.cache.mongodb_cache.MongoDBCache.write_cache", "quasimodo.cache.mongodb_cache.MongoDBCache.read_cache", "test_mongodb_cache.TestMongoDBCache.assertIsNotNone", "test_mongodb_cache.TestMongoDBCache.assertEqual", "quasimodo.cache.mongodb_cache.MongoDBCache.delete_cache"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache"], ["", "def", "test_write_read", "(", "self", ")", ":", "\n", "        ", "cache", "=", "MongoDBCache", "(", "\"testrw\"", ")", "\n", "cache", ".", "delete_cache", "(", ")", "\n", "cache", "=", "MongoDBCache", "(", "\"testrw\"", ")", "\n", "cache_value", "=", "cache", ".", "read_cache", "(", "\"elephant\"", ")", "\n", "self", ".", "assertIsNone", "(", "cache_value", ")", "\n", "cache", ".", "write_cache", "(", "\"elephant\"", ",", "[", "[", "\"elephants are big\"", ",", "0", "]", "]", ")", "\n", "cache_value", "=", "cache", ".", "read_cache", "(", "\"elephant\"", ")", "\n", "self", ".", "assertIsNotNone", "(", "cache_value", ")", "\n", "suggestions", "=", "cache_value", "\n", "self", ".", "assertEqual", "(", "[", "[", "\"elephants are big\"", ",", "0", "]", "]", ",", "suggestions", ")", "\n", "cache", ".", "delete_cache", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_mongodb_cache.TestMongoDBCache._test_write_read_other": [[32, 42], ["quasimodo.cache.mongodb_cache.MongoDBCache", "quasimodo.cache.mongodb_cache.MongoDBCache.read_cache", "test_mongodb_cache.TestMongoDBCache.assertIsNone", "quasimodo.cache.mongodb_cache.MongoDBCache.write_cache", "quasimodo.cache.mongodb_cache.MongoDBCache.read_cache", "test_mongodb_cache.TestMongoDBCache.assertIsNotNone", "test_mongodb_cache.TestMongoDBCache.assertEqual", "quasimodo.cache.mongodb_cache.MongoDBCache.delete_cache"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache"], ["", "def", "_test_write_read_other", "(", "self", ")", ":", "\n", "        ", "cache", "=", "MongoDBCache", "(", "\"testrw\"", ",", "mongodb_location", "=", "\"YOURLOCATION\"", ")", "\n", "cache_value", "=", "cache", ".", "read_cache", "(", "\"elephant\"", ")", "\n", "self", ".", "assertIsNone", "(", "cache_value", ")", "\n", "cache", ".", "write_cache", "(", "\"elephant\"", ",", "[", "(", "\"elephants are big\"", ",", "0", ")", "]", ")", "\n", "cache_value", "=", "cache", ".", "read_cache", "(", "\"elephant\"", ")", "\n", "self", ".", "assertIsNotNone", "(", "cache_value", ")", "\n", "suggestions", "=", "cache_value", "\n", "self", ".", "assertEqual", "(", "[", "\"elephants are big\"", "]", ",", "suggestions", ")", "\n", "cache", ".", "delete_cache", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_complete.TestComplete.test_all_workflow": [[19, 26], ["test_complete.TestWorkflow", "test_complete.TestWorkflow.generate_input", "TestWorkflow.run", "TestWorkflow.run.get_generated_facts", "print", "test_complete.TestComplete.assertTrue", "map", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_complete.TestWorkflow.generate_input", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.workflow_interface.WorkflowInterface.run", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["    ", "def", "test_all_workflow", "(", "self", ")", ":", "\n", "        ", "workflow", "=", "TestWorkflow", "(", ")", "\n", "inputs", "=", "workflow", ".", "generate_input", "(", ")", "\n", "inputs", "=", "workflow", ".", "run", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "print", "(", "\"\\n\"", ".", "join", "(", "map", "(", "str", ",", "generated_facts", ")", ")", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "generated_facts", ")", ">", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_complete.TestWorkflow.__init__": [[38, 46], ["quasimodo.data_structures.workflow_interface.WorkflowInterface.__init__", "quasimodo.default_module_factory.DefaultModuleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"patterns\"", ",", "\n", "\"pattern-fusion\"", ",", "\n", "\"assertion-generation\"", ",", "\n", "\"assertion-normalization\"", ",", "\n", "\"assertion-validation\"", "]", "\n", "#\"assertion-fusion\"]", "\n", "super", "(", "TestWorkflow", ",", "self", ")", ".", "__init__", "(", "module_names", ",", "DefaultModuleFactory", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_complete.TestWorkflow.generate_input": [[47, 51], ["quasimodo.data_structures.inputs.Inputs", "quasimodo.data_structures.inputs.Inputs.add_subjects", "quasimodo.data_structures.subject.Subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects"], ["", "def", "generate_input", "(", "self", ")", ":", "\n", "# just give an empty input to the seed module", "\n", "        ", "empty_input", "=", "Inputs", "(", ")", "\n", "return", "empty_input", ".", "add_subjects", "(", "{", "Subject", "(", "\"elephant\"", ")", "}", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_bing_autocomplete.TestBingAutocomplete.setUp": [[12, 17], ["quasimodo.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule", "quasimodo.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "autocomplete", "=", "BingAutocompleteSubmodule", "(", "None", ",", "use_cache", "=", "False", ",", "look_new", "=", "True", ")", "\n", "self", ".", "autocomplete_cache", "=", "BingAutocompleteSubmodule", "(", "None", ",", "use_cache", "=", "True", ",", "\n", "cache_name", "=", "\"google-cache-test\"", ",", "look_new", "=", "True", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_bing_autocomplete.TestBingAutocomplete.test_elephant": [[18, 22], ["test_bing_autocomplete.TestBingAutocomplete.autocomplete.get_suggestion", "test_bing_autocomplete.TestBingAutocomplete.assertFalse", "test_bing_autocomplete.TestBingAutocomplete.assertEqual", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion"], ["", "def", "test_elephant", "(", "self", ")", ":", "\n", "        ", "suggestions", ",", "from_cache", "=", "self", ".", "autocomplete", ".", "get_suggestion", "(", "\"why are elephants\"", ")", "\n", "self", ".", "assertFalse", "(", "from_cache", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "suggestions", ")", ",", "8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_bing_autocomplete.TestBingAutocomplete.test_cache": [[23, 30], ["test_bing_autocomplete.TestBingAutocomplete.autocomplete_cache.get_suggestion", "time.sleep", "test_bing_autocomplete.TestBingAutocomplete.autocomplete_cache.get_suggestion", "test_bing_autocomplete.TestBingAutocomplete.assertTrue", "test_bing_autocomplete.TestBingAutocomplete.assertEqual", "test_bing_autocomplete.TestBingAutocomplete.autocomplete_cache.cache.delete_cache", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache"], ["", "def", "test_cache", "(", "self", ")", ":", "\n", "        ", "_", ",", "_", "=", "self", ".", "autocomplete_cache", ".", "get_suggestion", "(", "\"why are elephants\"", ")", "\n", "time", ".", "sleep", "(", "10", ")", "\n", "suggestions", ",", "from_cache", "=", "self", ".", "autocomplete_cache", ".", "get_suggestion", "(", "\"why are elephants\"", ")", "\n", "self", ".", "assertTrue", "(", "from_cache", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "suggestions", ")", ",", "8", ")", "\n", "self", ".", "autocomplete_cache", ".", "cache", ".", "delete_cache", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_bing_autocomplete.TestBingAutocomplete._test_process": [[31, 37], ["test_bing_autocomplete.TestBingAutocomplete.empty_input.add_subjects().add_patterns", "test_bing_autocomplete.TestBingAutocomplete.autocomplete.process", "test_bing_autocomplete.TestBingAutocomplete.assertTrue", "test_bing_autocomplete.TestBingAutocomplete.assertTrue", "test_bing_autocomplete.TestBingAutocomplete.empty_input.add_subjects", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "test_bing_autocomplete.TestBingAutocomplete.get_generated_facts", "len", "test_bing_autocomplete.TestBingAutocomplete.get_generated_facts", "x.get_object().get", "quasimodo.data_structures.subject.Subject", "x.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "_test_process", "(", "self", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "empty_input", ".", "add_subjects", "(", "[", "Subject", "(", "\"elephant\"", ")", "]", ")", ".", "add_patterns", "(", "[", "PatternGoogle", "(", "\"why are <SUBJS>\"", ")", "]", ")", "\n", "inputs", "=", "self", ".", "autocomplete", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertTrue", "(", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ">", "16", ")", "\n", "trunk_facts", "=", "[", "x", "for", "x", "in", "inputs", ".", "get_generated_facts", "(", ")", "if", "\"trunk\"", "in", "x", ".", "get_object", "(", ")", ".", "get", "(", ")", "]", "\n", "self", ".", "assertTrue", "(", "len", "(", "trunk_facts", ")", ">", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_singular.TestToSingular.setUp": [[13, 16], ["quasimodo.assertion_normalization.to_singular_subject_submodule.ToSingularSubjectSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "to_singular", "=", "ToSingularSubjectSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_singular.TestToSingular.test_turn_singular": [[17, 24], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_to_singular.TestToSingular.empty_input.add_generated_facts().add_subjects", "test_to_singular.TestToSingular.to_singular.process", "test_to_singular.TestToSingular.get_generated_facts", "test_to_singular.TestToSingular.assertEqual", "test_to_singular.TestToSingular.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_subject().get", "test_to_singular.TestToSingular.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_turn_singular", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"lions\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"lion\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "to_singular", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"lion\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_singular.TestToSingular.test_turn_singular_duplicate": [[25, 32], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_to_singular.TestToSingular.empty_input.add_generated_facts().add_subjects", "test_to_singular.TestToSingular.to_singular.process", "test_to_singular.TestToSingular.get_generated_facts", "test_to_singular.TestToSingular.assertEqual", "test_to_singular.TestToSingular.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_subject().get", "test_to_singular.TestToSingular.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_turn_singular_duplicate", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"lions\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", ",", "generated_fact", "]", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"lion\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "to_singular", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "2", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"lion\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_singular.TestToSingular.test_do_nothing": [[33, 40], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_to_singular.TestToSingular.empty_input.add_generated_facts().add_subjects", "test_to_singular.TestToSingular.to_singular.process", "test_to_singular.TestToSingular.get_generated_facts", "test_to_singular.TestToSingular.assertEqual", "test_to_singular.TestToSingular.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_subject().get", "test_to_singular.TestToSingular.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_do_nothing", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"lion\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"lion\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "to_singular", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"lion\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_singular.TestToSingular.test_crisis": [[41, 48], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_to_singular.TestToSingular.empty_input.add_generated_facts().add_subjects", "test_to_singular.TestToSingular.to_singular.process", "test_to_singular.TestToSingular.get_generated_facts", "test_to_singular.TestToSingular.assertEqual", "test_to_singular.TestToSingular.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_subject().get", "test_to_singular.TestToSingular.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_crisis", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"crisis\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"lion\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "to_singular", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"crisis\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_to_singular.TestToSingular.test_texas": [[49, 56], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_to_singular.TestToSingular.empty_input.add_generated_facts().add_subjects", "test_to_singular.TestToSingular.to_singular.process", "test_to_singular.TestToSingular.get_generated_facts", "test_to_singular.TestToSingular.assertEqual", "test_to_singular.TestToSingular.assertEqual", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_subject().get", "test_to_singular.TestToSingular.empty_input.add_generated_facts", "quasimodo.data_structures.subject.Subject", "generated_facts[].get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "test_texas", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"texas\"", ",", "\"is a\"", ",", "\"cat\"", ",", "\"\"", ",", "False", ",", "MultipleScore", "(", ")", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", ".", "add_subjects", "(", "{", "Subject", "(", "\"lion\"", ")", "}", ")", "\n", "inputs", "=", "self", ".", "to_singular", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"texas\"", ",", "generated_facts", "[", "0", "]", ".", "get_subject", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_identical_subject_object.TestIdenticalSubjectObject.setUp": [[11, 14], ["quasimodo.assertion_normalization.identical_subject_object_submodule.IdenticalSubjectObjectSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "identical", "=", "IdenticalSubjectObjectSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_identical_subject_object.TestIdenticalSubjectObject.test_removal": [[15, 20], ["test_identical_subject_object.TestIdenticalSubjectObject.empty_input.replace_generated_facts", "test_identical_subject_object.TestIdenticalSubjectObject.identical.process", "test_identical_subject_object.TestIdenticalSubjectObject.assertEqual", "quasimodo.data_structures.generated_fact.GeneratedFact", "len", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "test_identical_subject_object.TestIdenticalSubjectObject.get_generated_facts"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.replace_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts"], ["", "def", "test_removal", "(", "self", ")", ":", "\n", "        ", "new_gfs", "=", "[", "GeneratedFact", "(", "\"lion\"", ",", "\"eat\"", ",", "\"lion\"", ",", "\"some\"", ",", "False", ",", "None", ",", "MultipleSourceOccurrence", "(", ")", ")", "]", "\n", "inputs", "=", "self", ".", "empty_input", ".", "replace_generated_facts", "(", "new_gfs", ")", "\n", "inputs", "=", "self", ".", "identical", ".", "process", "(", "inputs", ")", "\n", "self", ".", "assertEqual", "(", "0", ",", "len", "(", "inputs", ".", "get_generated_facts", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_can_transformation.TestCanTransformation.setUp": [[12, 15], ["quasimodo.assertion_normalization.can_transformation_submodule.CanTransformationSubmodule", "quasimodo.data_structures.inputs.Inputs"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "can_transformation", "=", "CanTransformationSubmodule", "(", "None", ")", "\n", "self", ".", "empty_input", "=", "Inputs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_can_transformation.TestCanTransformation.test_can_duplicate": [[16, 24], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_can_transformation.TestCanTransformation.empty_input.add_generated_facts", "test_can_transformation.TestCanTransformation.can_transformation.process", "test_can_transformation.TestCanTransformation.get_generated_facts", "test_can_transformation.TestCanTransformation.assertEqual", "test_can_transformation.TestCanTransformation.assertEqual", "test_can_transformation.TestCanTransformation.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_object().get", "generated_facts[].get_predicate", "generated_facts[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_can_duplicate", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"can\"", ",", "\"can nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "can_transformation", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"can\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"nothing\"", ",", "generated_facts", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_can_transformation.TestCanTransformation.test_can_be_duplicate": [[25, 33], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_can_transformation.TestCanTransformation.empty_input.add_generated_facts", "test_can_transformation.TestCanTransformation.can_transformation.process", "test_can_transformation.TestCanTransformation.get_generated_facts", "test_can_transformation.TestCanTransformation.assertEqual", "test_can_transformation.TestCanTransformation.assertEqual", "test_can_transformation.TestCanTransformation.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_object().get", "generated_facts[].get_predicate", "generated_facts[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_can_be_duplicate", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"can\"", ",", "\"can be nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "can_transformation", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"can be\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"nothing\"", ",", "generated_facts", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_can_transformation.TestCanTransformation.test_be_can_duplicate": [[34, 42], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_can_transformation.TestCanTransformation.empty_input.add_generated_facts", "test_can_transformation.TestCanTransformation.can_transformation.process", "test_can_transformation.TestCanTransformation.get_generated_facts", "test_can_transformation.TestCanTransformation.assertEqual", "test_can_transformation.TestCanTransformation.assertEqual", "test_can_transformation.TestCanTransformation.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_object().get", "generated_facts[].get_predicate", "generated_facts[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_be_can_duplicate", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"be\"", ",", "\"can nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "can_transformation", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"be\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"nothing\"", ",", "generated_facts", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.tests.test_can_transformation.TestCanTransformation.test_be_can_duplicate_pattern": [[43, 51], ["quasimodo.data_structures.generated_fact.GeneratedFact", "test_can_transformation.TestCanTransformation.empty_input.add_generated_facts", "test_can_transformation.TestCanTransformation.can_transformation.process", "test_can_transformation.TestCanTransformation.get_generated_facts", "test_can_transformation.TestCanTransformation.assertEqual", "test_can_transformation.TestCanTransformation.assertEqual", "test_can_transformation.TestCanTransformation.assertEqual", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "quasimodo.patterns.pattern_google.PatternGoogle", "len", "generated_facts[].get_predicate().get", "generated_facts[].get_object().get", "generated_facts[].get_predicate", "generated_facts[].get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "test_be_can_duplicate_pattern", "(", "self", ")", ":", "\n", "        ", "generated_fact", "=", "GeneratedFact", "(", "\"test\"", ",", "\"be\"", ",", "\"can nothing\"", ",", "\"\"", ",", "False", ",", "0.0", ",", "MultipleSourceOccurrence", "(", ")", ",", "PatternGoogle", "(", "\"why can <SUBJ>\"", ")", ")", "\n", "inputs", "=", "self", ".", "empty_input", ".", "add_generated_facts", "(", "[", "generated_fact", "]", ")", "\n", "inputs", "=", "self", ".", "can_transformation", ".", "process", "(", "inputs", ")", "\n", "generated_facts", "=", "inputs", ".", "get_generated_facts", "(", ")", "\n", "self", ".", "assertEqual", "(", "1", ",", "len", "(", "generated_facts", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"can be\"", ",", "generated_facts", "[", "0", "]", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ")", "\n", "self", ".", "assertEqual", "(", "\"nothing\"", ",", "generated_facts", "[", "0", "]", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.pinterest_regression_submodule.PinterestRegressionSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Pinterest regression\"", "\n", "self", ".", "_index", "=", "10", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.istockphoto_count_submodule.IstockphotoCountSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Istockphoto count\"", "\n", "self", ".", "_index", "=", "11", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.youtube_count_submodule.YoutubeCountSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Youtube count\"", "\n", "self", ".", "_index", "=", "5", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.archit_module.ArchitModule.__init__": [[8, 24], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\n", "\"web-count\"", ",", "\n", "\"web-regression\"", ",", "\n", "\"youtube-count\"", ",", "\n", "\"youtube-regression\"", ",", "\n", "\"flickr-count\"", ",", "\n", "\"flickr-regression\"", ",", "\n", "\"pinterest-count\"", ",", "\n", "\"pinterest-regression\"", ",", "\n", "\"istockphoto-count\"", ",", "\n", "\"istockphoto-regression\"", "\n", "]", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Archit Module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.archit_module.ArchitModule.process": [[25, 30], ["logging.info", "submodule.process"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the archit module\"", ")", "\n", "for", "submodule", "in", "self", ".", "_submodules", ":", "\n", "            ", "input_interface", "=", "submodule", ".", "process", "(", "input_interface", ")", "\n", "", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.istockphoto_regression_submodule.IstockphotoRegressionSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Istockphoto regression\"", "\n", "self", ".", "_index", "=", "12", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.archit_submodule.ArchitSubmodule.__init__": [[18, 23], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Archit submodule\"", "# To redefine", "\n", "self", ".", "_index", "=", "-", "1", "# column of the feature", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.archit_submodule.ArchitSubmodule.process": [[24, 59], ["logging.info", "set", "input_interface.get_generated_facts", "input_interface.add_generated_facts", "set.add", "open", "line.strip().split.strip().split.strip().split", "float", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "new_gfs.append", "gf.get_subject().get", "gf.get_predicate().get", "gf.get_object().get", "quasimodo.data_structures.generated_fact.GeneratedFact", "line.strip().split.strip().split.strip", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence", "gf.get_subject", "gf.get_predicate", "gf.get_object"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the \"", "+", "self", ".", "_name", "+", "\" archit submodule\"", ")", "\n", "first", "=", "True", "\n", "spos", "=", "set", "(", ")", "\n", "for", "gf", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "spos", ".", "add", "(", "(", "gf", ".", "get_subject", "(", ")", ".", "get", "(", ")", ",", "\n", "gf", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ",", "\n", "gf", ".", "get_object", "(", ")", ".", "get", "(", ")", ")", ")", "\n", "", "new_gfs", "=", "[", "]", "\n", "with", "open", "(", "FILENAME", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "if", "first", ":", "\n", "                    ", "first", "=", "False", "\n", "continue", "\n", "", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "subj", "=", "line", "[", "0", "]", "\n", "pred", "=", "line", "[", "1", "]", "\n", "obj", "=", "line", "[", "2", "]", "\n", "if", "(", "subj", ",", "pred", ",", "obj", ")", "not", "in", "spos", ":", "\n", "                    ", "continue", "\n", "", "score", "=", "float", "(", "line", "[", "self", ".", "_index", "]", ")", "\n", "if", "score", "==", "0", ":", "\n", "                    ", "continue", "\n", "", "multi_score", "=", "MultipleScore", "(", ")", "\n", "multi_score", ".", "add_score", "(", "score", ",", "self", ".", "_module_reference", ",", "self", ")", "\n", "new_gfs", ".", "append", "(", "\n", "GeneratedFact", "(", "\n", "subj", ",", "\n", "pred", ",", "\n", "obj", ",", "\n", "\"\"", ",", "\n", "0", ",", "\n", "multi_score", ",", "\n", "MultipleSourceOccurrence", "(", ")", ")", ")", "\n", "", "", "return", "input_interface", ".", "add_generated_facts", "(", "new_gfs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.youtube_regression_submodule.YoutubeRegressionSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Youtube regression\"", "\n", "self", ".", "_index", "=", "6", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.pinterest_count_submodule.PinterestCountSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Pinterest count\"", "\n", "self", ".", "_index", "=", "9", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.web_count_submodule.WebCountSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Web count\"", "\n", "self", ".", "_index", "=", "3", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.flickr_regression_submodule.FlickrRegressionSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Flickr regression\"", "\n", "self", ".", "_index", "=", "8", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.web_regression_submodule.WebRegressionSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Web regression\"", "\n", "self", ".", "_index", "=", "4", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.web_search.flickr_count_submodule.FlickrCountSubmodule.__init__": [[6, 10], ["quasimodo.web_search.archit_submodule.ArchitSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Flickr count\"", "\n", "self", ".", "_index", "=", "7", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.assertion_validation_module.AssertionValidationModule.__init__": [[13, 26], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\"perplexity\"", ",", "\n", "\"google-book\"", ",", "\n", "\"flickr-clusters\"", ",", "\n", "\"imagetag\"", ",", "\n", "\"wikipedia-cooccurrence\"", ",", "\n", "\"simple-wikipedia-cooccurrence\"", ",", "\n", "\"conceptual-captions\"", ",", "\n", "\"what-questions\"", "\n", "]", "\n", "super", "(", "AssertionValidationModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Assertion Validation Module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.assertion_validation_module.AssertionValidationModule.process": [[27, 35], ["logging.info", "submodule.process", "submodule.clean", "logging.info", "logging.info", "objgraph.growth", "objgraph.most_common_types"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the assertion validation module\"", ")", "\n", "for", "submodule", "in", "self", ".", "_submodules", ":", "\n", "            ", "input_interface", "=", "submodule", ".", "process", "(", "input_interface", ")", "\n", "submodule", ".", "clean", "(", ")", "\n", "logging", ".", "info", "(", "objgraph", ".", "growth", "(", ")", ")", "\n", "logging", ".", "info", "(", "objgraph", ".", "most_common_types", "(", ")", ")", "\n", "", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.__init__": [[17, 25], ["quasimodo.assertion_validation.content_comparator.ContentComparator.__init__", "dict", "dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ",", "filename", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "subjects", "=", "[", "]", "\n", "self", ".", "variations", "=", "dict", "(", ")", "\n", "self", ".", "parsing_tree", "=", "None", "\n", "self", ".", "filename", "=", "filename", "\n", "self", ".", "per_subject", "=", "dict", "(", ")", "\n", "self", ".", "_name", "=", "\"Sentence Comparator\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.clean": [[26, 36], ["super().clean", "dict", "dict"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean"], ["", "def", "clean", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "clean", "(", ")", "\n", "del", "self", ".", "subjects", "\n", "self", ".", "subjects", "=", "[", "]", "\n", "del", "self", ".", "variations", "\n", "self", ".", "variations", "=", "dict", "(", ")", "\n", "del", "self", ".", "parsing_tree", "\n", "self", ".", "parsing_tree", "=", "None", "\n", "del", "self", ".", "per_subject", "\n", "self", ".", "per_subject", "=", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.setup_processing": [[37, 49], ["dict", "logging.info", "quasimodo.assertion_normalization.only_subject_submodule.get_subjects_in_all_forms", "sentence_comparator.get_parsing_tree", "logging.info", "logging.info", "len", "open", "sentence_comparator.SentenceComparator.add_line_to_corresponding_subjects"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_normalization.only_subject_submodule.get_subjects_in_all_forms", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.get_parsing_tree", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.add_line_to_corresponding_subjects"], ["", "def", "setup_processing", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "filename", ")", "==", "0", ":", "\n", "            ", "return", "\n", "", "self", ".", "per_subject", "=", "dict", "(", ")", "\n", "logging", ".", "info", "(", "\"Constructing parsing tree...\"", ")", "\n", "self", ".", "subjects", ",", "self", ".", "variations", "=", "get_subjects_in_all_forms", "(", "input_interface", ")", "\n", "self", ".", "parsing_tree", "=", "get_parsing_tree", "(", "self", ".", "subjects", ")", "\n", "logging", ".", "info", "(", "\"Reading sentence file...\"", ")", "\n", "with", "open", "(", "self", ".", "filename", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "self", ".", "add_line_to_corresponding_subjects", "(", "line", ")", "\n", "", "", "logging", ".", "info", "(", "\"End of preprocessing\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.add_line_to_corresponding_subjects": [[50, 56], ["line.strip.strip.strip", "sentence_comparator.SentenceComparator.process_character_in_line_and_add_subject_if_necessary"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.process_character_in_line_and_add_subject_if_necessary"], ["", "def", "add_line_to_corresponding_subjects", "(", "self", ",", "line", ")", ":", "\n", "        ", "current_nodes", "=", "[", "self", ".", "parsing_tree", "]", "\n", "line", "=", "line", ".", "strip", "(", ")", "\n", "for", "character", "in", "line", ":", "\n", "            ", "next_nodes", "=", "self", ".", "process_character_in_line_and_add_subject_if_necessary", "(", "character", ",", "current_nodes", ",", "line", ")", "\n", "current_nodes", "=", "next_nodes", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.process_character_in_line_and_add_subject_if_necessary": [[57, 68], ["node.get_next_node", "next_nodes.append", "next_nodes.append", "sentence_comparator.SentenceComparator.process_terminal_node"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.get_next_node", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.process_terminal_node"], ["", "", "def", "process_character_in_line_and_add_subject_if_necessary", "(", "self", ",", "character", ",", "current_nodes", ",", "line", ")", ":", "\n", "        ", "next_nodes", "=", "[", "]", "\n", "for", "node", "in", "current_nodes", ":", "\n", "            ", "next_node", "=", "node", ".", "get_next_node", "(", "character", ")", "\n", "if", "next_node", "is", "not", "None", ":", "\n", "                ", "next_nodes", ".", "append", "(", "next_node", ")", "\n", "if", "next_node", ".", "is_terminal", ":", "\n", "                    ", "self", ".", "process_terminal_node", "(", "line", ",", "next_node", ")", "\n", "", "", "", "if", "character", "==", "\" \"", ":", "\n", "            ", "next_nodes", ".", "append", "(", "self", ".", "parsing_tree", ")", "\n", "", "return", "next_nodes", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.process_terminal_node": [[69, 74], ["sentence_comparator.SentenceComparator.per_subject[].add", "set"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["", "def", "process_terminal_node", "(", "self", ",", "line", ",", "next_node", ")", ":", "\n", "        ", "subject", "=", "self", ".", "variations", "[", "next_node", ".", "value", "]", "\n", "if", "subject", "not", "in", "self", ".", "per_subject", ":", "\n", "            ", "self", ".", "per_subject", "[", "subject", "]", "=", "set", "(", ")", "\n", "", "self", ".", "per_subject", "[", "subject", "]", ".", "add", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.SentenceComparator.get_contents": [[75, 79], ["sentence_comparator.SentenceComparator.per_subject.get", "len", "sentence_comparator.SentenceComparator.variations.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_contents", "(", "self", ",", "subject", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "filename", ")", "==", "0", ":", "\n", "            ", "return", "[", "]", "\n", "", "return", "self", ".", "per_subject", ".", "get", "(", "self", ".", "variations", ".", "get", "(", "subject", ",", "subject", ")", ",", "[", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.sentence_comparator.get_parsing_tree": [[8, 13], ["quasimodo.parsing_node.ParsingNode", "quasimodo.parsing_node.ParsingNode.add"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["def", "get_parsing_tree", "(", "subjects", ")", ":", "\n", "    ", "root", "=", "ParsingNode", "(", ")", "\n", "for", "subject", "in", "subjects", ":", "\n", "        ", "root", ".", "add", "(", "subject", ")", "\n", "", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.GoogleBookSubmodule.__init__": [[34, 45], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__", "quasimodo.cache.mongodb_cache.MongoDBCache"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "module_reference", ",", "\n", "use_cache", "=", "True", ",", "\n", "cache_name", "=", "\"google-book-cache\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Google Book Submodule\"", "\n", "self", ".", "use_cache", "=", "use_cache", "\n", "self", ".", "cache", "=", "MongoDBCache", "(", "cache_name", ",", "\n", "mongodb_location", "=", "DEFAULT_MONGODB_LOCATION", ")", "\n", "self", ".", "internal_cache", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.GoogleBookSubmodule.clean": [[46, 50], ["super().clean"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean"], ["", "def", "clean", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "clean", "(", ")", "\n", "del", "self", ".", "internal_cache", "\n", "self", ".", "internal_cache", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.GoogleBookSubmodule._setup_cache": [[51, 61], ["dict", "os.path.isfile", "os.path.exists", "os.makedirs", "open", "line.strip().split.strip().split.strip().split", "len", "int", "line.strip().split.strip().split.strip"], "methods", ["None"], ["", "def", "_setup_cache", "(", "self", ")", ":", "\n", "        ", "self", ".", "_cache", "=", "dict", "(", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "cache_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "cache_dir", ")", "\n", "", "if", "os", ".", "path", ".", "isfile", "(", "cache_file", ")", ":", "\n", "            ", "with", "open", "(", "cache_file", ")", "as", "f", ":", "\n", "                ", "for", "line", "in", "f", ":", "\n", "                    ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "len", "(", "line", ")", "==", "2", ":", "\n", "                        ", "self", ".", "_cache", "[", "line", "[", "0", "]", "]", "=", "int", "(", "line", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.GoogleBookSubmodule.read_cache": [[62, 69], ["google_book_submodule.GoogleBookSubmodule.cache.read_all", "float"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_all"], ["", "", "", "", "", "def", "read_cache", "(", "self", ",", "query", ")", ":", "\n", "        ", "if", "self", ".", "use_cache", ":", "\n", "            ", "if", "self", ".", "internal_cache", "is", "None", ":", "\n", "                ", "self", ".", "internal_cache", "=", "self", ".", "cache", ".", "read_all", "(", ")", "\n", "", "if", "query", "in", "self", ".", "internal_cache", ":", "\n", "                ", "return", "float", "(", "self", ".", "internal_cache", "[", "query", "]", ")", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.GoogleBookSubmodule.write_cache": [[70, 73], ["google_book_submodule.GoogleBookSubmodule.cache.write_cache"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache"], ["", "def", "write_cache", "(", "self", ",", "query", ",", "total", ")", ":", "\n", "        ", "if", "self", ".", "use_cache", ":", "\n", "            ", "self", ".", "cache", ".", "write_cache", "(", "query", ",", "total", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.GoogleBookSubmodule._get_occurrences_books": [[74, 89], ["google_book_submodule.GoogleBookSubmodule.read_cache", "service.volumes().list", "service.volumes().list.execute", "google_book_submodule.match_query", "google_book_submodule.GoogleBookSubmodule.write_cache", "time.sleep", "service.volumes"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.match_query", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache"], ["", "", "def", "_get_occurrences_books", "(", "self", ",", "query", ",", "only_cache", ")", ":", "\n", "        ", "cache_value", "=", "self", ".", "read_cache", "(", "query", ")", "\n", "if", "cache_value", "is", "not", "None", ":", "\n", "            ", "return", "cache_value", "\n", "", "if", "only_cache", "or", "service", "is", "None", ":", "\n", "            ", "return", "-", "1", "\n", "", "req", "=", "service", ".", "volumes", "(", ")", ".", "list", "(", "q", "=", "query", ",", "maxResults", "=", "1", ")", "\n", "response", "=", "req", ".", "execute", "(", ")", "\n", "if", "match_query", "(", "query", ",", "response", ")", ":", "\n", "            ", "total", "=", "response", "[", "\"totalItems\"", "]", "\n", "", "else", ":", "\n", "            ", "total", "=", "0", "\n", "", "self", ".", "write_cache", "(", "query", ",", "total", ")", "\n", "time", ".", "sleep", "(", "1.0", "/", "calls_per_seconds", ")", "\n", "return", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.GoogleBookSubmodule.process": [[90, 132], ["logging.info", "input_interface.get_generated_facts", "input_interface.get_generated_facts", "logging.info", "google_book_submodule._get_query_from_fact", "max", "google_book_submodule._get_query_from_fact", "apiclient.discovery.build", "google_book_submodule.GoogleBookSubmodule._get_occurrences_books", "google_book_submodule.GoogleBookSubmodule._get_occurrences_books", "generated_fact.get_score().add_score", "logging.warning", "logging.warning", "logging.warning", "str", "str", "generated_fact.get_score", "str"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule._get_query_from_fact", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule._get_query_from_fact", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.GoogleBookSubmodule._get_occurrences_books", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.GoogleBookSubmodule._get_occurrences_books", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the verification using google book\"", ")", "\n", "global", "service", "\n", "if", "service", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "service", "=", "apiclient", ".", "discovery", ".", "build", "(", "'books'", ",", "\n", "'v1'", ",", "\n", "developerKey", "=", "api_key", ")", "\n", "", "except", "Exception", "as", "exception", ":", "\n", "                ", "logging", ".", "warning", "(", "\"When initializing Google Book: \"", "+", "\n", "str", "(", "exception", ")", ")", "\n", "", "service", "=", "None", "\n", "", "if", "service", "is", "None", ":", "\n", "            ", "logging", ".", "info", "(", "\"No service found for Google Book\"", ")", "\n", "only_cache", "=", "True", "\n", "", "else", ":", "\n", "            ", "only_cache", "=", "False", "\n", "", "maxi", "=", "0", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "query", "=", "_get_query_from_fact", "(", "generated_fact", ")", "\n", "occurrences", "=", "-", "1", "\n", "try", ":", "\n", "                ", "occurrences", "=", "self", ".", "_get_occurrences_books", "(", "query", ",", "only_cache", ")", "\n", "", "except", "Exception", "as", "exception0", ":", "\n", "                ", "logging", ".", "warning", "(", "str", "(", "exception0", ")", ")", "\n", "only_cache", "=", "True", "\n", "", "maxi", "=", "max", "(", "maxi", ",", "occurrences", ")", "\n", "", "if", "maxi", "==", "0", ":", "\n", "            ", "maxi", "=", "1", "\n", "", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "query", "=", "_get_query_from_fact", "(", "generated_fact", ")", "\n", "try", ":", "\n", "                ", "occurrences", "=", "self", ".", "_get_occurrences_books", "(", "query", ",", "only_cache", ")", "\n", "", "except", "Exception", "as", "exception1", ":", "\n", "                ", "logging", ".", "warning", "(", "str", "(", "exception1", ")", ")", "\n", "only_cache", "=", "True", "\n", "continue", "\n", "", "if", "occurrences", "!=", "-", "1", ":", "\n", "                ", "generated_fact", ".", "get_score", "(", ")", ".", "add_score", "(", "occurrences", "/", "maxi", ",", "\n", "self", ".", "_module_reference", ",", "\n", "self", ")", "\n", "", "", "return", "input_interface", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.to_singular_plural": [[134, 158], ["pred.split", "pred_res.append", "pred_res.append", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_singular", "len", "pred_res.append", "pred_res.append", "pred_res.append", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_plural", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_plural"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural"], ["", "", "def", "to_singular_plural", "(", "pred", ")", ":", "\n", "    ", "pred_l", "=", "pred", ".", "split", "(", "\" \"", ")", "\n", "pred_res", "=", "[", "]", "\n", "for", "word", "in", "pred_l", ":", "\n", "        ", "if", "word", "==", "\"be\"", ":", "\n", "            ", "pred_res", ".", "append", "(", "\"are OR is\"", ")", "\n", "", "elif", "word", "==", "\"have\"", ":", "\n", "            ", "pred_res", ".", "append", "(", "\"have OR has\"", ")", "\n", "", "else", ":", "\n", "            ", "if", "len", "(", "word", ")", "<=", "2", ":", "\n", "                ", "pred_res", ".", "append", "(", "word", ")", "\n", "continue", "\n", "", "sing", "=", "DEFAULT_INFLECT", ".", "to_singular", "(", "word", ")", "\n", "if", "not", "sing", ":", "\n", "                ", "pred_res", ".", "append", "(", "word", "+", "\n", "\" OR \"", "+", "\n", "DEFAULT_INFLECT", ".", "to_plural", "(", "word", ")", ")", "\n", "", "else", ":", "\n", "                ", "pred_res", ".", "append", "(", "word", "+", "\n", "\" OR \"", "+", "\n", "sing", "+", "\n", "\" OR \"", "+", "\n", "DEFAULT_INFLECT", ".", "to_plural", "(", "word", ")", ")", "\n", "", "", "", "return", "\" \"", ".", "join", "(", "pred_res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.query_to_regex": [[160, 178], ["re.sub().split", "range", "re.compile", "len", "re.sub", "temp.append", "temp.append", "temp.append", "temp.append", "len", "len"], "function", ["None"], ["", "def", "query_to_regex", "(", "q", ")", ":", "\n", "    ", "q", "=", "re", ".", "sub", "(", "r'[^a-zA-Z\\s]'", ",", "\"\"", ",", "q", ")", ".", "split", "(", "\" \"", ")", "\n", "temp", "=", "[", "]", "\n", "in_or", "=", "False", "\n", "for", "i", "in", "range", "(", "len", "(", "q", ")", ")", ":", "\n", "        ", "w", "=", "q", "[", "i", "]", "\n", "if", "w", "==", "\"OR\"", ":", "\n", "            ", "temp", ".", "append", "(", "\"|\"", ")", "\n", "", "else", ":", "\n", "            ", "if", "i", "!=", "len", "(", "q", ")", "-", "1", "and", "q", "[", "i", "+", "1", "]", "==", "\"OR\"", "and", "not", "in_or", ":", "\n", "                ", "temp", ".", "append", "(", "\"(\"", ")", "\n", "in_or", "=", "True", "\n", "", "temp", ".", "append", "(", "w", ")", "\n", "if", "i", "!=", "0", "and", "q", "[", "i", "-", "1", "]", "==", "\"OR\"", ":", "\n", "                ", "if", "i", ">=", "len", "(", "q", ")", "-", "1", "or", "q", "[", "i", "+", "1", "]", "!=", "\"OR\"", ":", "\n", "                    ", "temp", ".", "append", "(", "\")\"", ")", "\n", "in_or", "=", "False", "\n", "", "", "", "", "return", "re", ".", "compile", "(", "\"\"", ".", "join", "(", "temp", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.match_query": [[180, 198], ["google_book_submodule.query_to_regex", "bs4.BeautifulSoup().get_text().replace().lower", "re.sub", "len", "query_to_regex.search", "bs4.BeautifulSoup().get_text().replace", "bs4.BeautifulSoup().get_text", "bs4.BeautifulSoup"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.query_to_regex"], ["", "def", "match_query", "(", "q", ",", "response", ")", ":", "\n", "    ", "regex", "=", "query_to_regex", "(", "q", ")", "\n", "if", "\"items\"", "in", "response", ":", "\n", "        ", "items", "=", "response", "[", "\"items\"", "]", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "", "if", "len", "(", "items", ")", "==", "0", ":", "\n", "        ", "return", "False", "\n", "", "item", "=", "items", "[", "0", "]", "\n", "if", "\"searchInfo\"", "not", "in", "item", ":", "\n", "        ", "return", "False", "\n", "", "si", "=", "item", "[", "\"searchInfo\"", "]", "\n", "if", "\"textSnippet\"", "not", "in", "si", ":", "\n", "        ", "return", "False", "\n", "", "text", "=", "BeautifulSoup", "(", "si", "[", "\"textSnippet\"", "]", ")", ".", "get_text", "(", ")", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "lower", "(", ")", "\n", "text", "=", "re", ".", "sub", "(", "\"[^a-zA-Z]\"", ",", "\"\"", ",", "text", ")", "\n", "return", "regex", ".", "search", "(", "text", ")", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule._get_query_from_fact": [[200, 224], ["fact.get_subject().get", "fact.get_predicate().get", "fact.get_object().get", "fact.is_negative", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_plural", "to_singular_plural.startswith", "fact.get_subject", "fact.get_predicate", "fact.get_object", "to_singular_plural.split", "google_book_submodule.to_singular_plural", "google_book_submodule.to_singular_plural", "len", "google_book_submodule.to_singular_plural", "google_book_submodule.to_singular_plural"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.to_singular_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.to_singular_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.to_singular_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.google_book_submodule.to_singular_plural"], ["", "def", "_get_query_from_fact", "(", "fact", ")", ":", "\n", "    ", "subj", "=", "fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "pred", "=", "fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", "\n", "obj", "=", "fact", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "neg", "=", "fact", ".", "is_negative", "(", ")", "\n", "if", "pred", ".", "startswith", "(", "\"has_\"", ")", "or", "pred", "==", "\"hasProperty\"", ":", "\n", "        ", "pred", "=", "\"are OR is\"", "\n", "if", "neg", ":", "\n", "            ", "pred", "+=", "\" not\"", "\n", "", "", "else", ":", "\n", "        ", "if", "neg", ":", "\n", "            ", "pred_l", "=", "pred", ".", "split", "(", "\" \"", ")", "\n", "if", "pred_l", "[", "0", "]", "==", "\"can\"", ":", "\n", "                ", "pred", "=", "\"cannot OR can't\"", "\n", "if", "len", "(", "pred_l", ")", ">", "1", ":", "\n", "                    ", "pred", "+=", "\" \"", "+", "to_singular_plural", "(", "\" \"", ".", "join", "(", "pred_l", "[", "1", ":", "]", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "pred", "=", "\"do OR does not \"", "+", "to_singular_plural", "(", "pred", ")", "\n", "", "", "else", ":", "\n", "            ", "pred", "=", "to_singular_plural", "(", "pred", ")", "\n", "", "", "subj_plur", "=", "DEFAULT_INFLECT", ".", "to_plural", "(", "subj", ")", "\n", "q", "=", "'\"'", "+", "subj", "+", "\" OR \"", "+", "subj_plur", "+", "\" \"", "+", "pred", "+", "\" \"", "+", "to_singular_plural", "(", "obj", ")", "+", "'\"'", "\n", "return", "q", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.__init__": [[13, 19], ["quasimodo.assertion_validation.content_comparator.ContentComparator.__init__", "quasimodo.cache.mongodb_cache.MongoDBCache"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ",", "use_cache", "=", "True", ",", "cache_name", "=", "\"wikipedia-cache\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Wikipedia Cooccurrence\"", "\n", "self", ".", "use_cache", "=", "use_cache", "\n", "self", ".", "_lang", "=", "\"en\"", "\n", "self", ".", "cache", "=", "MongoDBCache", "(", "cache_name", ",", "mongodb_location", "=", "DEFAULT_MONGODB_LOCATION", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule._get_wikipedia_page_content": [[20, 50], ["wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.read_cache", "wikipedia.search", "wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.write_cache", "wikipedia.page", "logging.warning", "wikipedia.page", "logging.warning", "e2.options[].replace().replace", "e2.options[].replace", "wikipedia.page", "logging.warning"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache"], ["", "def", "_get_wikipedia_page_content", "(", "self", ",", "name", ")", ":", "\n", "        ", "content", "=", "self", ".", "read_cache", "(", "name", ")", "\n", "if", "content", "is", "not", "None", ":", "\n", "            ", "return", "content", "\n", "", "search", "=", "wikipedia", ".", "search", "(", "name", ")", "\n", "# For now, we only consider the first result", "\n", "if", "search", ":", "\n", "            ", "try", ":", "\n", "                ", "content", "=", "wikipedia", ".", "page", "(", "search", "[", "0", "]", ")", ".", "content", "\n", "", "except", "wikipedia", ".", "DisambiguationError", "as", "e", ":", "\n", "# Not clear how often it happens", "\n", "                ", "if", "e", ".", "options", ":", "\n", "                    ", "try", ":", "\n", "                        ", "content", "=", "wikipedia", ".", "page", "(", "e", ".", "options", "[", "0", "]", ")", ".", "content", "\n", "", "except", "wikipedia", ".", "DisambiguationError", "as", "e2", ":", "\n", "                        ", "if", "e2", ".", "options", ":", "\n", "                            ", "temp", "=", "e2", ".", "options", "[", "0", "]", ".", "replace", "(", "\"(\"", ",", "\"\"", ")", ".", "replace", "(", "\")\"", ",", "\"\"", ")", "\n", "try", ":", "\n", "                                ", "content", "=", "wikipedia", ".", "page", "(", "temp", ")", ".", "content", "\n", "", "except", "wikipedia", ".", "DisambiguationError", "as", "e3", ":", "\n", "                                ", "pass", "\n", "", "except", "wikipedia", ".", "exceptions", ".", "PageError", ":", "\n", "                                ", "logging", ".", "warning", "(", "\"Wikipedia page not found: \"", "+", "name", ")", "\n", "", "", "", "except", "wikipedia", ".", "exceptions", ".", "PageError", ":", "\n", "                        ", "logging", ".", "warning", "(", "\"Wikipedia page not found: \"", "+", "name", ")", "\n", "", "", "", "except", "wikipedia", ".", "exceptions", ".", "PageError", ":", "\n", "                ", "logging", ".", "warning", "(", "\"Wikipedia page not found: \"", "+", "name", ")", "\n", "", "", "self", ".", "write_cache", "(", "name", ",", "content", ")", "\n", "return", "content", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.write_cache": [[51, 55], ["wikipedia_page.replace().replace", "wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.cache.write_cache", "wikipedia_page.replace"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache"], ["", "def", "write_cache", "(", "self", ",", "wikipedia_page", ",", "content", ")", ":", "\n", "        ", "if", "self", ".", "use_cache", ":", "\n", "            ", "filename", "=", "wikipedia_page", ".", "replace", "(", "\" \"", ",", "\"_\"", ")", ".", "replace", "(", "\"/\"", ",", "\"_\"", ")", "\n", "self", ".", "cache", ".", "write_cache", "(", "filename", ",", "content", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.read_cache": [[56, 62], ["wikipedia_page.replace().replace", "wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.cache.read_cache", "wikipedia_page.replace"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache"], ["", "", "def", "read_cache", "(", "self", ",", "wikipedia_page", ")", ":", "\n", "        ", "if", "self", ".", "use_cache", ":", "\n", "            ", "filename", "=", "wikipedia_page", ".", "replace", "(", "\" \"", ",", "\"_\"", ")", ".", "replace", "(", "\"/\"", ",", "\"_\"", ")", "\n", "cache_value", "=", "self", ".", "cache", ".", "read_cache", "(", "filename", ")", "\n", "return", "cache_value", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.get_contents": [[63, 65], ["wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule._get_wikipedia_page_content"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule._get_wikipedia_page_content"], ["", "def", "get_contents", "(", "self", ",", "subject", ")", ":", "\n", "        ", "return", "[", "self", ".", "_get_wikipedia_page_content", "(", "subject", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.setup_processing": [[66, 68], ["wikipedia.set_lang"], "methods", ["None"], ["", "def", "setup_processing", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "wikipedia", ".", "set_lang", "(", "self", ".", "_lang", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.flickr_clusters_submodule.FlickrClustersSubmodule.__init__": [[13, 17], ["quasimodo.assertion_validation.association_submodule.AssociationSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Flickr\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.flickr_clusters_submodule.FlickrClustersSubmodule._get_clusters": [[18, 35], ["flickr_api.Tag.getClusters", "res.append", "logging.info", "logging.info", "logging.info", "temp.append", "tag.text.lower", "str"], "methods", ["None"], ["", "def", "_get_clusters", "(", "self", ",", "subject", ")", ":", "\n", "        ", "clusters", "=", "[", "]", "\n", "try", ":", "\n", "            ", "clusters", "=", "flickr_api", ".", "Tag", ".", "getClusters", "(", "tag", "=", "subject", ")", "\n", "", "except", "flickr_api", ".", "flickrerrors", ".", "FlickrAPIError", ":", "\n", "            ", "logging", ".", "info", "(", "subject", "+", "\" has no cluster\"", ")", "\n", "", "except", "TypeError", ":", "\n", "            ", "logging", ".", "info", "(", "\"Problem of type with \"", "+", "subject", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "logging", ".", "info", "(", "\"Unknown error \"", "+", "str", "(", "e", ")", ")", "\n", "", "res", "=", "[", "]", "\n", "for", "cluster", "in", "clusters", ":", "\n", "            ", "temp", "=", "[", "]", "\n", "for", "tag", "in", "cluster", ".", "tags", ":", "\n", "                ", "temp", ".", "append", "(", "tag", ".", "text", ".", "lower", "(", ")", ")", "\n", "", "res", ".", "append", "(", "temp", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.flickr_clusters_submodule.FlickrClustersSubmodule._get_associations": [[36, 75], ["dict", "set", "set", "os.path.isfile", "x.get", "open", "flickr_clusters_submodule.FlickrClustersSubmodule._get_clusters", "line.strip().lower().split.strip().lower().split.strip().lower().split", "set.add", "len", "res.append", "res.append", "open", "f.write", "line.strip().lower().split.strip().lower().split.strip().lower", "dict", "dict", "d[].setdefault", "d[].setdefault", "line.strip().lower().split.strip().lower().split.strip"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.flickr_clusters_submodule.FlickrClustersSubmodule._get_clusters", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["", "def", "_get_associations", "(", "self", ",", "subjects", ")", ":", "\n", "        ", "d", "=", "dict", "(", ")", "\n", "s_found", "=", "set", "(", ")", "\n", "subjects", "=", "set", "(", "[", "x", ".", "get", "(", ")", "for", "x", "in", "subjects", "]", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "filename", ")", ":", "\n", "            ", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "                ", "for", "line", "in", "f", ":", "\n", "                    ", "line", "=", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "subj", "=", "line", "[", "0", "]", "\n", "s_found", ".", "add", "(", "subj", ")", "\n", "if", "subj", "not", "in", "subjects", ":", "\n", "                        ", "continue", "\n", "", "for", "s", "in", "line", "[", "1", ":", "]", ":", "\n", "                        ", "if", "s", "==", "subj", ":", "\n", "                            ", "continue", "\n", "", "if", "subj", "in", "d", ":", "\n", "                            ", "d", "[", "subj", "]", "[", "s", "]", "=", "d", "[", "subj", "]", ".", "setdefault", "(", "s", ",", "0", ")", "+", "1", "\n", "", "else", ":", "\n", "                            ", "d", "[", "subj", "]", "=", "dict", "(", ")", "\n", "d", "[", "subj", "]", "[", "s", "]", "=", "1", "\n", "", "", "", "", "", "for", "subject", "in", "subjects", ":", "\n", "            ", "res", "=", "[", "]", "\n", "if", "subject", "not", "in", "s_found", ":", "\n", "                ", "clusters", "=", "self", ".", "_get_clusters", "(", "subject", ")", "\n", "if", "len", "(", "clusters", ")", "==", "0", ":", "\n", "                    ", "res", ".", "append", "(", "subject", ")", "\n", "", "for", "cluster", "in", "clusters", ":", "\n", "                    ", "res", ".", "append", "(", "subject", "+", "\"\\t\"", "+", "\"\\t\"", ".", "join", "(", "cluster", ")", ")", "\n", "for", "s", "in", "cluster", ":", "\n", "                        ", "if", "s", "==", "subject", ":", "\n", "                            ", "continue", "\n", "", "if", "subject", "in", "d", ":", "\n", "                            ", "d", "[", "subject", "]", "[", "s", "]", "=", "d", "[", "subject", "]", ".", "setdefault", "(", "s", ",", "0", ")", "+", "1", "\n", "", "else", ":", "\n", "                            ", "d", "[", "subject", "]", "=", "dict", "(", ")", "\n", "d", "[", "subject", "]", "[", "s", "]", "=", "1", "\n", "", "", "", "with", "open", "(", "filename", ",", "\"a\"", ")", "as", "f", ":", "\n", "                    ", "f", ".", "write", "(", "\"\\n\"", ".", "join", "(", "res", ")", "+", "\"\\n\"", ")", "\n", "", "", "", "return", "d", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.simple_wikipedia_cooccurrence_submodule.SimpleWikipediaCooccurrenceSubmodule.__init__": [[6, 11], ["quasimodo.assertion_validation.wikipedia_cooccurrence_submodule.WikipediaCooccurrenceSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ",", "use_cache", "=", "True", ",", "cache_name", "=", "\"simple-wikipedia-cache\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ",", "use_cache", ",", "cache_name", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Simple Wikipedia Cooccurrence\"", "\n", "self", ".", "_lang", "=", "\"simple\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.imagetag_submodule.ImagetagSubmodule.__init__": [[14, 18], ["quasimodo.assertion_validation.association_submodule.AssociationSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Image Tag submodule\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.imagetag_submodule.ImagetagSubmodule._get_associations": [[19, 36], ["dict", "os.path.isfile", "pickle.dump", "pickle.load", "open", "open", "open", "line.strip().lower().split.strip().lower().split.strip().lower().split", "line.strip().lower().split.strip().lower().split.strip().lower", "dict", "assos_word0.get", "line.strip().lower().split.strip().lower().split.strip"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "_get_associations", "(", "self", ",", "subjects", ")", ":", "\n", "        ", "associations", "=", "dict", "(", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "CACHE_IMAGETAG", ")", ":", "\n", "            ", "return", "pickle", ".", "load", "(", "open", "(", "CACHE_IMAGETAG", ",", "\"rb\"", ")", ")", "\n", "", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "for", "word0", "in", "line", ":", "\n", "                    ", "if", "word0", "not", "in", "associations", ":", "\n", "                        ", "associations", "[", "word0", "]", "=", "dict", "(", ")", "\n", "", "assos_word0", "=", "associations", "[", "word0", "]", "\n", "for", "word1", "in", "line", ":", "\n", "                        ", "if", "word0", "==", "word1", ":", "\n", "                            ", "continue", "\n", "", "assos_word0", "[", "word1", "]", "=", "assos_word0", ".", "get", "(", "word1", ",", "0", ")", "+", "1", "\n", "", "", "", "", "pickle", ".", "dump", "(", "associations", ",", "open", "(", "CACHE_IMAGETAG", ",", "\"wb\"", ")", ")", "\n", "return", "associations", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.conceptual_captions_comparator_submodule.ConceptualCaptionsComparatorSubmodule.__init__": [[10, 13], ["quasimodo.assertion_validation.sentence_comparator.SentenceComparator.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ",", "CONCEPTUAL_CAPTION_FILE", ")", "\n", "self", ".", "_name", "=", "\"Conceptual Caption\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.association_submodule.AssociationSubmodule.__init__": [[15, 19], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Association submodule\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.association_submodule.AssociationSubmodule._get_associations": [[20, 25], ["None"], "methods", ["None"], ["", "def", "_get_associations", "(", "self", ",", "subjects", ")", ":", "\n", "        ", "\"\"\"__get_assos\n        :return: dictionary of dictionary, d[s0][s1] is the number of\n        associations between s0 and s1\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.association_submodule.AssociationSubmodule.process": [[26, 38], ["logging.info", "association_submodule.AssociationSubmodule._get_associations", "association_submodule._get_maximum_score", "input_interface.get_generated_facts", "input_interface.get_subjects", "generated_facts.get_subject().get", "generated_facts.get_object().get", "association_submodule.AssociationSubmodule.get_name", "generated_facts.get_score().add_score", "generated_facts.get_subject", "generated_facts.get_object", "generated_facts.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.association_submodule.AssociationSubmodule._get_associations", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.perplexity_submodule._get_maximum_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the association submodule for \"", "+", "self", ".", "get_name", "(", ")", ")", "\n", "associations", "=", "self", ".", "_get_associations", "(", "input_interface", ".", "get_subjects", "(", ")", ")", "\n", "maxi", "=", "_get_maximum_score", "(", "associations", ")", "\n", "for", "generated_facts", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "subject", "=", "generated_facts", ".", "get_subject", "(", ")", ".", "get", "(", ")", "\n", "obj", "=", "generated_facts", ".", "get_object", "(", ")", ".", "get", "(", ")", "\n", "if", "subject", "in", "associations", "and", "obj", "in", "associations", "[", "subject", "]", ":", "\n", "                ", "new_score", "=", "associations", "[", "subject", "]", "[", "obj", "]", "/", "maxi", "\n", "generated_facts", ".", "get_score", "(", ")", ".", "add_score", "(", "new_score", ",", "self", ".", "_module_reference", ",", "self", ")", "\n", "", "", "del", "associations", "\n", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.association_submodule._get_maximum_score": [[5, 11], ["max"], "function", ["None"], ["def", "_get_maximum_score", "(", "associations", ")", ":", "\n", "    ", "maxi", "=", "0", "\n", "for", "word0", "in", "associations", ":", "\n", "        ", "for", "word1", "in", "associations", "[", "word0", "]", ":", "\n", "            ", "maxi", "=", "max", "(", "maxi", ",", "associations", "[", "word0", "]", "[", "word1", "]", ")", "\n", "", "", "return", "maxi", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.what_questions_comparator_submodule.WhatQuestionsComparatorSubmodule.__init__": [[10, 13], ["quasimodo.assertion_validation.sentence_comparator.SentenceComparator.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ",", "WHAT_QUESTION_FILE", ")", "\n", "self", ".", "_name", "=", "\"What questions file\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.__init__": [[135, 138], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.process": [[139, 169], ["logging.info", "input_interface.get_generated_facts", "content_comparator.group_by_subject", "len", "group_by_subject.keys", "content_comparator.lemmatize_contents", "content_comparator.ContentComparator.create_parsing_node_from_contents", "content_comparator.ContentComparator.setup_processing", "logging.info", "content_comparator.ContentComparator.get_contents", "content_comparator.get_score_generated_fact_given_parsing_node", "generated_fact.get_score().add_score", "logging.info", "len", "logging.info", "logging.info", "generated_fact.get_score", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.group_by_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.lemmatize_contents", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.create_parsing_node_from_contents", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.setup_processing", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.get_contents", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_score_generated_fact_given_parsing_node", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the content cooccurrence checking\"", ")", "\n", "while", "True", ":", "\n", "            ", "try", ":", "\n", "                ", "self", ".", "setup_processing", "(", "input_interface", ")", "\n", "break", "\n", "", "except", "OSError", "as", "e", ":", "\n", "                ", "logging", ".", "info", "(", "\"Failed to setup the content comparator, \"", "+", "str", "(", "e", ")", ")", "\n", "", "", "generated_facts", "=", "input_interface", ".", "get_generated_facts", "(", ")", "\n", "by_subject", "=", "group_by_subject", "(", "generated_facts", ")", "\n", "n_subjects", "=", "len", "(", "by_subject", ".", "keys", "(", ")", ")", "\n", "counter", "=", "0", "\n", "for", "subject", "in", "by_subject", ":", "\n", "            ", "if", "counter", "%", "1000", "==", "0", ":", "\n", "                ", "logging", ".", "info", "(", "\"%d done over %d\"", ",", "counter", ",", "n_subjects", ")", "\n", "", "counter", "+=", "1", "\n", "try", ":", "\n", "                ", "contents", "=", "self", ".", "get_contents", "(", "subject", ")", "\n", "contents", "=", "[", "x", "for", "x", "in", "contents", "if", "x", "is", "not", "None", "]", "\n", "if", "len", "(", "contents", ")", "==", "0", ":", "\n", "                    ", "logging", ".", "info", "(", "\"No content found for \"", "+", "subject", ")", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "                ", "logging", ".", "info", "(", "\"Problem with \"", "+", "subject", "+", "\" \"", "+", "str", "(", "e", ")", ")", "\n", "continue", "\n", "", "lemmatize_contents", "(", "contents", ")", "\n", "parsing_node", "=", "self", ".", "create_parsing_node_from_contents", "(", "contents", ")", "\n", "for", "generated_fact", "in", "by_subject", "[", "subject", "]", ":", "\n", "                ", "final_score", "=", "get_score_generated_fact_given_parsing_node", "(", "generated_fact", ",", "parsing_node", ")", "\n", "generated_fact", ".", "get_score", "(", ")", ".", "add_score", "(", "final_score", ",", "self", ".", "_module_reference", ",", "self", ")", "\n", "", "", "return", "input_interface", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.create_parsing_node_from_contents": [[170, 180], ["quasimodo.parsing_node.ParsingNode", "nltk.sent_tokenize", "quasimodo.parsing_node.ParsingNode.add_sentence", "logging.info", "logging.info"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.add_sentence"], ["", "def", "create_parsing_node_from_contents", "(", "self", ",", "contents", ")", ":", "\n", "        ", "parsing_node", "=", "ParsingNode", "(", ")", "\n", "for", "content", "in", "contents", ":", "\n", "            ", "for", "sentence", "in", "nltk", ".", "sent_tokenize", "(", "content", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "parsing_node", ".", "add_sentence", "(", "sentence", ")", "\n", "", "except", "RecursionError", "as", "re", ":", "\n", "                    ", "logging", ".", "info", "(", "'Recursion error for {}'", ".", "format", "(", "re", ".", "args", "[", "0", "]", ")", ")", "\n", "logging", ".", "info", "(", "sentence", ")", "\n", "", "", "", "return", "parsing_node", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.setup_processing": [[181, 183], ["None"], "methods", ["None"], ["", "def", "setup_processing", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.ContentComparator.get_contents": [[184, 186], ["None"], "methods", ["None"], ["", "def", "get_contents", "(", "self", ",", "subject", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.lemmatize_contents": [[13, 17], ["range", "len", "content_comparator.lemmatize", "contents[].lower"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["def", "lemmatize_contents", "(", "contents", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "len", "(", "contents", ")", ")", ":", "\n", "        ", "if", "contents", "[", "i", "]", "is", "not", "None", ":", "\n", "            ", "contents", "[", "i", "]", "=", "lemmatize", "(", "contents", "[", "i", "]", ".", "lower", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.negate_modal": [[19, 22], ["None"], "function", ["None"], ["", "", "", "def", "negate_modal", "(", "predicate", ")", ":", "\n", "    ", "predicate", "+=", "\" not\"", "\n", "return", "predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.negate_general_predicate": [[24, 27], ["None"], "function", ["None"], ["", "def", "negate_general_predicate", "(", "predicate", ")", ":", "\n", "    ", "predicate", "=", "\"do not \"", "+", "predicate", "\n", "return", "predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.negate_can": [[29, 34], ["len"], "function", ["None"], ["", "def", "negate_can", "(", "predicate_split", ")", ":", "\n", "    ", "predicate", "=", "\"cannot\"", "\n", "if", "len", "(", "predicate_split", ")", ">", "1", ":", "\n", "        ", "predicate", "+=", "\" \"", "+", "\" \"", ".", "join", "(", "predicate_split", "[", "1", ":", "]", ")", "\n", "", "return", "predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_property_predicate": [[36, 39], ["None"], "function", ["None"], ["", "def", "get_property_predicate", "(", ")", ":", "\n", "    ", "predicate", "=", "\"are\"", "\n", "return", "predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.group_by_subject": [[41, 50], ["dict", "g.get_subject().get().lower", "by_subject[].append", "g.get_subject().get", "g.get_subject"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "group_by_subject", "(", "generated_facts", ")", ":", "\n", "    ", "by_subject", "=", "dict", "(", ")", "\n", "for", "g", "in", "generated_facts", ":", "\n", "        ", "subj", "=", "g", ".", "get_subject", "(", ")", ".", "get", "(", ")", ".", "lower", "(", ")", "\n", "if", "subj", "in", "by_subject", ":", "\n", "            ", "by_subject", "[", "subj", "]", ".", "append", "(", "g", ")", "\n", "", "else", ":", "\n", "            ", "by_subject", "[", "subj", "]", "=", "[", "g", "]", "\n", "", "", "return", "by_subject", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.negate_predicate": [[52, 61], ["negate_general_predicate.split", "content_comparator.negate_modal", "content_comparator.negate_can", "content_comparator.negate_general_predicate"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.negate_modal", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.negate_can", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.negate_general_predicate"], ["", "def", "negate_predicate", "(", "predicate", ")", ":", "\n", "    ", "predicate_split", "=", "predicate", ".", "split", "(", "\" \"", ")", "\n", "if", "predicate_split", "[", "0", "]", "==", "\"are\"", ":", "\n", "        ", "predicate", "=", "negate_modal", "(", "predicate", ")", "\n", "", "elif", "predicate_split", "[", "0", "]", "==", "\"can\"", ":", "\n", "        ", "predicate", "=", "negate_can", "(", "predicate_split", ")", "\n", "", "else", ":", "\n", "        ", "predicate", "=", "negate_general_predicate", "(", "predicate", ")", "\n", "", "return", "predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_object_as_string": [[63, 66], ["generated_fact.get_object().get().lower", "generated_fact.get_object().get", "generated_fact.get_object"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_object"], ["", "def", "get_object_as_string", "(", "generated_fact", ")", ":", "\n", "    ", "obj", "=", "generated_fact", ".", "get_object", "(", ")", ".", "get", "(", ")", ".", "lower", "(", ")", "\n", "return", "obj", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_predicate_as_string": [[68, 77], ["generated_fact.get_predicate().get().lower", "generated_fact.is_negative", "negate_predicate.startswith", "content_comparator.get_property_predicate", "content_comparator.negate_predicate", "generated_fact.get_predicate().get", "generated_fact.get_predicate"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_property_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.negate_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_predicate"], ["", "def", "get_predicate_as_string", "(", "generated_fact", ")", ":", "\n", "    ", "predicate", "=", "generated_fact", ".", "get_predicate", "(", ")", ".", "get", "(", ")", ".", "lower", "(", ")", "\n", "is_a_property", "=", "predicate", ".", "startswith", "(", "\"has_\"", ")", "or", "predicate", "==", "\"hasProperty\"", "\n", "if", "is_a_property", ":", "\n", "        ", "predicate", "=", "get_property_predicate", "(", ")", "\n", "", "is_negative", "=", "generated_fact", ".", "is_negative", "(", ")", "\n", "if", "is_negative", ":", "\n", "        ", "predicate", "=", "negate_predicate", "(", "predicate", ")", "\n", "", "return", "predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_part_to_find_in_content": [[79, 83], ["content_comparator.get_object_as_string", "content_comparator.get_predicate_as_string", "content_comparator.lemmatize"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_object_as_string", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_predicate_as_string", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["", "def", "get_part_to_find_in_content", "(", "generated_fact", ")", ":", "\n", "    ", "obj", "=", "get_object_as_string", "(", "generated_fact", ")", "\n", "predicate", "=", "get_predicate_as_string", "(", "generated_fact", ")", "\n", "return", "lemmatize", "(", "predicate", "+", "\" \"", "+", "obj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_score_generated_fact_given_lemmatized_content": [[85, 98], ["content_comparator.get_part_to_find_in_content", "part_to_find.split.split", "range", "len", "range", "min", "len"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_part_to_find_in_content"], ["", "def", "get_score_generated_fact_given_lemmatized_content", "(", "lemmatized_content", ",", "generated_fact", ")", ":", "\n", "    ", "part_to_find", "=", "get_part_to_find_in_content", "(", "generated_fact", ")", "\n", "score", "=", "0", "\n", "counter", "=", "0", "\n", "part_to_find", "=", "part_to_find", ".", "split", "(", "\" \"", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "part_to_find", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "min", "(", "i", "+", "MAX_SIZE_TO_LOOK_FOR", "+", "1", ",", "len", "(", "part_to_find", ")", "+", "1", ")", ")", ":", "\n", "            ", "po_temp", "=", "\" \"", ".", "join", "(", "part_to_find", "[", "i", ":", "j", "]", ")", "\n", "counter", "+=", "j", "-", "i", "\n", "if", "po_temp", "in", "lemmatized_content", ":", "\n", "                ", "score", "+=", "j", "-", "i", "\n", "", "", "", "score", "/=", "counter", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_score_generated_fact_given_all_contents": [[100, 105], ["content_comparator.compute_final_score", "scores.append", "content_comparator.get_score_generated_fact_given_lemmatized_content"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.compute_final_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_score_generated_fact_given_lemmatized_content"], ["", "def", "get_score_generated_fact_given_all_contents", "(", "generated_fact", ",", "contents", ")", ":", "\n", "    ", "scores", "=", "[", "]", "\n", "for", "content", "in", "contents", ":", "\n", "        ", "scores", ".", "append", "(", "get_score_generated_fact_given_lemmatized_content", "(", "content", ",", "generated_fact", ")", ")", "\n", "", "return", "compute_final_score", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.compute_final_score": [[107, 113], ["sum", "len"], "function", ["None"], ["", "def", "compute_final_score", "(", "scores", ")", ":", "\n", "    ", "if", "scores", ":", "\n", "        ", "final_score", "=", "sum", "(", "scores", ")", "/", "len", "(", "scores", ")", "\n", "", "else", ":", "\n", "        ", "final_score", "=", "0", "\n", "", "return", "final_score", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_score_generated_fact_given_parsing_node": [[115, 131], ["content_comparator.get_part_to_find_in_content", "part_to_find.split.split", "range", "len", "range", "min", "parsing_node.read_word", "len"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.get_part_to_find_in_content", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.parsing_node.ParsingNode.read_word"], ["", "def", "get_score_generated_fact_given_parsing_node", "(", "generated_fact", ",", "parsing_node", ")", ":", "\n", "    ", "if", "parsing_node", ".", "value", "is", "None", ":", "\n", "        ", "return", "0.0", "\n", "", "part_to_find", "=", "get_part_to_find_in_content", "(", "generated_fact", ")", "\n", "score", "=", "0", "\n", "counter", "=", "0", "\n", "part_to_find", "=", "part_to_find", ".", "split", "(", "\" \"", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "part_to_find", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "min", "(", "i", "+", "MAX_SIZE_TO_LOOK_FOR", "+", "1", ",", "len", "(", "part_to_find", ")", "+", "1", ")", ")", ":", "\n", "            ", "po_temp", "=", "\" \"", ".", "join", "(", "part_to_find", "[", "i", ":", "j", "]", ")", "\n", "counter", "+=", "(", "j", "-", "i", ")", "*", "parsing_node", ".", "value", "\n", "final_node", "=", "parsing_node", ".", "read_word", "(", "po_temp", ")", "\n", "if", "final_node", "is", "not", "None", ":", "\n", "                ", "score", "+=", "(", "j", "-", "i", ")", "*", "final_node", ".", "value", "\n", "", "", "", "score", "/=", "counter", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.content_comparator.lemmatize": [[188, 190], ["lemmatizer.lemmatize", "nltk.word_tokenize"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["", "", "def", "lemmatize", "(", "s", ")", ":", "\n", "    ", "return", "\" \"", ".", "join", "(", "[", "lemmatizer", ".", "lemmatize", "(", "x", ")", "for", "x", "in", "nltk", ".", "word_tokenize", "(", "s", ")", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.perplexity_submodule.PerplexitySubmodule.__init__": [[28, 32], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "_name", "=", "\"Perplexity submodule\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.perplexity_submodule.PerplexitySubmodule.process": [[33, 55], ["logging.info", "perplexity_submodule._load_perplexity", "perplexity_submodule._get_maximum_score", "input_interface.get_generated_facts", "logging.info", "os.path.isfile", "generated_fact.get_sentence_source", "min", "generated_fact.get_score().add_score", "scores.append", "generated_fact.get_score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.perplexity_submodule._load_perplexity", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.perplexity_submodule._get_maximum_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.generated_fact_interface.GeneratedFactInterface.get_sentence_source", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_score"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the perplexity submodule\"", ")", "\n", "if", "filename", "is", "None", "or", "not", "os", ".", "path", ".", "isfile", "(", "filename", ")", ":", "\n", "            ", "logging", ".", "info", "(", "\"No perplexity given\"", ")", "\n", "return", "input_interface", "\n", "", "perplexities", "=", "_load_perplexity", "(", ")", "\n", "maxi", "=", "_get_maximum_score", "(", "perplexities", ")", "\n", "for", "generated_fact", "in", "input_interface", ".", "get_generated_facts", "(", ")", ":", "\n", "            ", "scores", "=", "[", "]", "\n", "for", "sentence", "in", "generated_fact", ".", "get_sentence_source", "(", ")", ".", "occurrences", ":", "\n", "                ", "if", "sentence", "in", "perplexities", ":", "\n", "                    ", "scores", ".", "append", "(", "perplexities", "[", "sentence", "]", ")", "\n", "", "", "if", "scores", ":", "\n", "# Choose a way to aggregate the score as we need a single score", "\n", "# Here, minimal perplexity is better", "\n", "                ", "aggregate", "=", "min", "(", "scores", ")", "\n", "new_score", "=", "aggregate", "/", "maxi", "\n", "generated_fact", ".", "get_score", "(", ")", ".", "add_score", "(", "new_score", ",", "\n", "self", ".", "_module_reference", ",", "\n", "self", ")", "\n", "", "", "del", "perplexities", "\n", "return", "input_interface", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.perplexity_submodule._load_perplexity": [[13, 20], ["dict", "open", "line.strip().split", "float", "line.strip"], "function", ["None"], ["def", "_load_perplexity", "(", ")", ":", "\n", "    ", "perplexities", "=", "dict", "(", ")", "\n", "with", "open", "(", "filename", ")", "as", "f_perplexity", ":", "\n", "        ", "for", "line", "in", "f_perplexity", ":", "\n", "            ", "p_temp", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "perplexities", "[", "p_temp", "[", "0", "]", "]", "=", "float", "(", "p_temp", "[", "1", "]", ")", "\n", "", "", "return", "perplexities", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_validation.perplexity_submodule._get_maximum_score": [[22, 24], ["max", "perplexities.values"], "function", ["None"], ["", "def", "_get_maximum_score", "(", "perplexities", ")", ":", "\n", "    ", "return", "max", "(", "perplexities", ".", "values", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.assertion_generation_module.AssertionGenerationModule.__init__": [[12, 25], ["quasimodo.data_structures.module_interface.ModuleInterface.__init__", "quasimodo.default_submodule_factory.DefaultSubmoduleFactory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "module_names", "=", "[", "\n", "\"google-autocomplete\"", ",", "\n", "\"bing-autocomplete\"", ",", "\n", "\"yahoo-questions\"", ",", "\n", "\"answerscom-questions\"", ",", "\n", "\"quora-questions\"", ",", "\n", "\"reddit-questions\"", ",", "\n", "\"fact-combinor\"", "\n", "]", "\n", "super", "(", "AssertionGenerationModule", ",", "self", ")", ".", "__init__", "(", "\n", "module_names", ",", "DefaultSubmoduleFactory", "(", ")", ")", "\n", "self", ".", "_name", "=", "\"Assertion Generation Module\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.assertion_generation_module.AssertionGenerationModule.process": [[26, 38], ["logging.info", "logging.info", "input_interface.add_generated_facts", "objgraph.growth", "submodule.process", "submodule.process.get_generated_facts", "submodule.clean", "logging.info", "logging.info", "objgraph.growth", "objgraph.most_common_types"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Start the assertion generation module\"", ")", "\n", "generated_facts", "=", "[", "]", "\n", "logging", ".", "info", "(", "objgraph", ".", "growth", "(", ")", ")", "\n", "# For now in sequence, we could make it be parallel", "\n", "for", "submodule", "in", "self", ".", "_submodules", ":", "\n", "            ", "input_temp", "=", "submodule", ".", "process", "(", "input_interface", ")", "\n", "generated_facts", "+=", "input_temp", ".", "get_generated_facts", "(", ")", "\n", "submodule", ".", "clean", "(", ")", "\n", "logging", ".", "info", "(", "objgraph", ".", "growth", "(", ")", ")", "\n", "logging", ".", "info", "(", "objgraph", ".", "most_common_types", "(", ")", ")", "\n", "", "return", "input_interface", ".", "add_generated_facts", "(", "generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.answerscom_questions_submodule.AnswerscomQuestionsSubmodule.__init__": [[14, 19], ["quasimodo.assertion_generation.question_file_submodule.QuestionFileSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "# The questions are obtained from the website answers.com", "\n", "self", ".", "_filename", "=", "FILENAME", "\n", "self", ".", "_name", "=", "\"Answers.com Questions\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_reader.OpenIEReader.__init__": [[20, 24], ["dict", "openie_reader.OpenIEReader.initialize_from_filename"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_reader.OpenIEReader.initialize_from_filename"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "sentence_to_fact", "=", "dict", "(", ")", "\n", "if", "filename", "is", "not", "None", ":", "\n", "            ", "self", ".", "initialize_from_filename", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_reader.OpenIEReader.initialize_from_filename": [[25, 50], ["os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "print", "pickle.dump", "pickle.load", "open", "open", "open", "line.strip.strip.strip", "len", "openie_reader.read_fact", "temp.append"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_reader.read_fact"], ["", "", "def", "initialize_from_filename", "(", "self", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "CACHE_OPENIE_READER", ")", ":", "\n", "            ", "self", ".", "sentence_to_fact", "=", "pickle", ".", "load", "(", "open", "(", "CACHE_OPENIE_READER", ",", "\"rb\"", ")", ")", "\n", "return", "\n", "", "print", "(", "filename", ")", "\n", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "            ", "temp", "=", "[", "]", "\n", "sentence", "=", "''", "\n", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "len", "(", "line", ")", "==", "0", ":", "\n", "                    ", "if", "sentence", "!=", "\"\"", ":", "\n", "                        ", "self", ".", "sentence_to_fact", "[", "sentence", "]", "=", "temp", "\n", "", "temp", "=", "[", "]", "\n", "sentence", "=", "\"\"", "\n", "", "else", ":", "\n", "                    ", "if", "sentence", "!=", "\"\"", ":", "\n", "                        ", "fact", "=", "read_fact", "(", "line", ")", "\n", "if", "fact", "is", "not", "None", ":", "\n", "                            ", "temp", ".", "append", "(", "fact", ")", "\n", "", "", "else", ":", "\n", "                        ", "sentence", "=", "line", "\n", "", "", "", "if", "sentence", "!=", "\"\"", ":", "\n", "                ", "self", ".", "sentence_to_fact", "[", "sentence", "]", "=", "temp", "\n", "", "", "pickle", ".", "dump", "(", "self", ".", "sentence_to_fact", ",", "open", "(", "CACHE_OPENIE_READER", ",", "\"wb\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_reader.OpenIEReader.get_from_sentence": [[51, 69], ["open", "f.write", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "logging.info", "logging.info", "time.sleep", "os.remove", "os.remove", "os.remove", "os.remove", "str"], "methods", ["None"], ["", "def", "get_from_sentence", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "if", "sentence", "in", "self", ".", "sentence_to_fact", ":", "\n", "            ", "return", "self", ".", "sentence_to_fact", "[", "sentence", "]", "\n", "", "else", ":", "\n", "            ", "counter", "=", "0", "\n", "while", "counter", "<", "10", ":", "\n", "                ", "counter", "+=", "1", "\n", "try", ":", "\n", "                    ", "with", "open", "(", "filename_no_found", ",", "\"a\"", ")", "as", "f", ":", "\n", "                        ", "f", ".", "write", "(", "sentence", "+", "\"\\n\"", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "CACHE_OPENIE_READER", ")", ":", "\n", "                            ", "os", ".", "remove", "(", "CACHE_OPENIE_READER", ")", "\n", "", "break", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "                    ", "logging", ".", "info", "(", "\"Error while writting the sentence in openie_reader\"", ")", "\n", "logging", ".", "info", "(", "str", "(", "e", ")", ")", "\n", "time", ".", "sleep", "(", "1", ")", "\n", "", "", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_reader.read_fact": [[71, 93], ["line.strip.strip", "line.strip.split", "temp[].strip", "[].split", "temp[].startswith", "len", "element.strip.strip", "len", "len", "element.strip.startswith", "element.strip.startswith", "obj.append", "obj.append"], "function", ["None"], ["", "", "", "def", "read_fact", "(", "line", ")", ":", "\n", "    ", "if", "\"Context\"", "in", "line", ":", "\n", "        ", "return", "None", "\n", "", "line", "=", "line", ".", "strip", "(", ")", "\n", "temp", "=", "line", ".", "split", "(", "\" (\"", ")", "\n", "if", "len", "(", "temp", ")", "!=", "2", "or", "temp", "[", "1", "]", ".", "startswith", "(", "\"Context\"", ")", ":", "\n", "        ", "return", "None", "\n", "", "score", "=", "temp", "[", "0", "]", ".", "strip", "(", ")", "\n", "fact", "=", "temp", "[", "1", "]", "[", ":", "-", "1", "]", ".", "split", "(", "\"; \"", ")", "\n", "if", "len", "(", "fact", ")", "<", "3", ":", "\n", "        ", "return", "None", "\n", "", "subject", "=", "fact", "[", "0", "]", "\n", "predicate", "=", "fact", "[", "1", "]", "\n", "obj", "=", "[", "]", "\n", "for", "element", "in", "fact", "[", "2", ":", "]", ":", "\n", "        ", "element", "=", "element", ".", "strip", "(", ")", "\n", "if", "len", "(", "element", ")", "!=", "0", ":", "\n", "            ", "if", "element", ".", "startswith", "(", "\"L:\"", ")", "or", "element", ".", "startswith", "(", "\"T:\"", ")", ":", "\n", "                ", "obj", ".", "append", "(", "element", "[", "2", ":", "]", ")", "\n", "", "else", ":", "\n", "                ", "obj", ".", "append", "(", "element", ")", "\n", "", "", "", "return", "[", "subject", ",", "predicate", ",", "\" \"", ".", "join", "(", "obj", ")", ",", "score", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.quora_questions_submodule.QuoraQuestionsSubmodule.__init__": [[14, 18], ["quasimodo.assertion_generation.question_file_submodule.QuestionFileSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_filename", "=", "FILENAME", "\n", "self", ".", "_name", "=", "\"Quora Questions\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule.__init__": [[29, 34], ["quasimodo.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "time_between_queries", "=", "1.0", "# The time between two queries", "\n", "self", ".", "default_number_suggestions", "=", "8", "# The maximum number of suggestions", "\n", "self", ".", "safe_source", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule.clean": [[35, 38], ["logging.info", "super().clean"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean"], ["", "def", "clean", "(", "self", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Cleaning browser\"", ")", "\n", "super", "(", ")", ".", "clean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule.get_suggestion": [[39, 53], ["None"], "methods", ["None"], ["", "def", "get_suggestion", "(", "self", ",", "query", ",", "lang", "=", "\"en\"", ",", "ds", "=", "\"\"", ")", ":", "\n", "        ", "\"\"\"get_suggestion\n        Gets suggestion from the browser to a give query\n        :param query: the query to autocomplete\n        :type query: str\n        :param lang: the language to use\n        :type lang: str\n        :param ds: An additional parameter\n        :type ds: str\n        :return: A list of scored autosuggestions with a whether the cache was\n        used or not\n        :rtype: List[((str, float), bool)]\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule._get_all_suggestions": [[54, 107], ["enumerate", "input_interface.get_patterns", "input_interface.get_subjects", "input_interface.get_subjects", "input_interface.get_patterns", "logging.info", "logging.info", "pattern.to_str_subject", "to_process.pop", "browser_autocomplete_submodule.BrowserAutocompleteSubmodule.get_suggestion", "browser_autocomplete_submodule.BrowserAutocompleteSubmodule.clean_suggestions", "browser_autocomplete_submodule.get_base_sentences", "len", "list", "str", "str", "len", "list.append", "to_process.append", "str", "str", "len", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule.clean_suggestions", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.get_base_sentences"], ["", "def", "_get_all_suggestions", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "suggestions", "=", "[", "]", "\n", "if", "PATTERN_FIRST", ":", "\n", "            ", "collection_first", "=", "input_interface", ".", "get_patterns", "(", "\"google-autocomplete\"", ")", "\n", "collection_second", "=", "input_interface", ".", "get_subjects", "(", ")", "\n", "", "else", ":", "\n", "            ", "collection_first", "=", "input_interface", ".", "get_subjects", "(", ")", "\n", "collection_second", "=", "input_interface", ".", "get_patterns", "(", "\"google-autocomplete\"", ")", "\n", "", "for", "i", ",", "first_collection_element", "in", "enumerate", "(", "collection_first", ")", ":", "\n", "            ", "if", "PATTERN_FIRST", ":", "\n", "                ", "logging", ".", "info", "(", "\"Going for pattern \"", "+", "str", "(", "first_collection_element", ")", "+", "\n", "\"[\"", "+", "str", "(", "i", "/", "len", "(", "collection_first", ")", "*", "100.0", ")", "+", "\"%]\"", ")", "\n", "", "else", ":", "\n", "                ", "logging", ".", "info", "(", "\"Going for subject \"", "+", "str", "(", "first_collection_element", ")", "+", "\n", "\"[\"", "+", "str", "(", "i", "/", "len", "(", "collection_first", ")", "*", "100.0", ")", "+", "\"%]\"", ")", "\n", "", "for", "second_collection_element", "in", "collection_second", ":", "\n", "                ", "if", "PATTERN_FIRST", ":", "\n", "                    ", "pattern", "=", "first_collection_element", "\n", "subject", "=", "second_collection_element", "\n", "", "else", ":", "\n", "                    ", "pattern", "=", "second_collection_element", "\n", "subject", "=", "first_collection_element", "\n", "# Generate the query", "\n", "", "base_query", "=", "pattern", ".", "to_str_subject", "(", "subject", ")", "\n", "base_sentences", "=", "[", "]", "\n", "# Artificially add more suggestions", "\n", "to_process", "=", "[", "[", "]", "]", "\n", "while", "to_process", ":", "\n", "                    ", "current_state", "=", "to_process", ".", "pop", "(", ")", "\n", "if", "len", "(", "current_state", ")", ">=", "LIMIT_DEPTH", "and", "look_new", ":", "\n", "                        ", "continue", "\n", "", "new_query", "=", "(", "base_query", "+", "\" \"", "+", "\"\"", ".", "join", "(", "current_state", ")", ")", ".", "strip", "(", ")", "\n", "base_suggestions", ",", "cache", "=", "self", ".", "get_suggestion", "(", "new_query", ")", "\n", "if", "base_suggestions", "is", "None", ":", "\n", "                        ", "continue", "\n", "", "if", "len", "(", "base_suggestions", ")", "==", "self", ".", "default_number_suggestions", ":", "\n", "# We go deeper", "\n", "                        ", "to_append", "=", "list", "(", "ascii_lowercase", ")", "\n", "if", "current_state", "and", "current_state", "[", "-", "1", "]", "!=", "\" \"", ":", "\n", "                            ", "to_append", ".", "append", "(", "\" \"", ")", "\n", "", "for", "c", "in", "to_append", ":", "\n", "                            ", "to_process", ".", "append", "(", "current_state", "[", ":", "]", "+", "[", "c", "]", ")", "\n", "", "", "suggestions", "+=", "self", ".", "clean_suggestions", "(", "base_suggestions", ",", "\n", "base_sentences", ",", "\n", "current_state", ",", "\n", "pattern", ",", "\n", "subject", ",", "\n", "new_query", ",", "\n", "current_state", ")", "\n", "base_sentences", "+=", "get_base_sentences", "(", "base_suggestions", ")", "\n", "if", "base_suggestions", "is", "None", ":", "\n", "                        ", "continue", "\n", "", "", "", "", "return", "suggestions", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule.clean_suggestions": [[108, 132], ["filter", "filter", "filter", "map", "list", "filter", "ranked_suggestion[].strip", "new_query.strip", "ranked_suggestion[].strip().endswith", "subject.get", "pattern.match", "ranked_suggestion[].strip", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.match"], ["", "def", "clean_suggestions", "(", "self", ",", "base_suggestions", ",", "base_sentences", ",", "new_state", ",", "\n", "pattern", ",", "subject", ",", "new_query", ",", "current_state", ")", ":", "\n", "        ", "base_suggestions", "=", "filter", "(", "\n", "lambda", "ranked_suggestion", ":", "ranked_suggestion", "[", "SUGGESTION", "]", "not", "in", "base_sentences", ",", "\n", "base_suggestions", ")", "\n", "base_suggestions", "=", "filter", "(", "\n", "lambda", "ranked_suggestion", ":", "ranked_suggestion", "[", "SUGGESTION", "]", ".", "strip", "(", ")", "\n", "!=", "new_query", ".", "strip", "(", ")", ",", "\n", "base_suggestions", ")", "\n", "base_suggestions", "=", "filter", "(", "\n", "lambda", "ranked_suggestion", ":", "\n", "not", "ranked_suggestion", "[", "SUGGESTION", "]", ".", "strip", "(", ")", ".", "endswith", "(", "\n", "\" \"", "+", "\"\"", ".", "join", "(", "current_state", ")", ".", "strip", "(", ")", ")", ",", "\n", "base_suggestions", "\n", ")", "\n", "base_suggestions", "=", "map", "(", "\n", "lambda", "ranked_suggestion", ":", "\n", "(", "ranked_suggestion", "[", "SUGGESTION", "]", ",", "\n", "ranked_suggestion", "[", "RANK", "]", "+", "len", "(", "new_state", ")", "*", "self", ".", "default_number_suggestions", ",", "\n", "pattern", ",", "subject", ".", "get", "(", ")", ")", ",", "base_suggestions", ")", "\n", "base_suggestions", "=", "list", "(", "\n", "filter", "(", "lambda", "ranked_suggestion", ":", "pattern", ".", "match", "(", "ranked_suggestion", "[", "SUGGESTION", "]", ")", ",", "\n", "base_suggestions", ")", ")", "\n", "return", "base_suggestions", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule.process": [[134, 154], ["logging.info", "logging.info", "browser_autocomplete_submodule.BrowserAutocompleteSubmodule._get_all_suggestions", "logging.info", "logging.info", "logging.info", "browser_autocomplete_submodule.BrowserAutocompleteSubmodule._openie_from_file", "logging.info", "logging.info", "browser_autocomplete_submodule.BrowserAutocompleteSubmodule.get_generated_facts", "input_interface.add_generated_facts().add_generated_facts", "browser_autocomplete_submodule.BrowserAutocompleteSubmodule.get_name", "str", "input_interface.has_subjects", "str", "str", "psutil.virtual_memory", "psutil.virtual_memory", "psutil.virtual_memory", "input_interface.add_generated_facts", "str", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule._get_all_suggestions", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._openie_from_file", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.has_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "# Needs subjects", "\n", "        ", "logging", ".", "info", "(", "\"Start submodule %s\"", ",", "self", ".", "get_name", "(", ")", ")", "\n", "logging", ".", "info", "(", "str", "(", "psutil", ".", "virtual_memory", "(", ")", ")", ")", "\n", "if", "not", "input_interface", ".", "has_subjects", "(", ")", ":", "\n", "            ", "return", "input_interface", "\n", "\n", "", "suggestions", "=", "self", ".", "_get_all_suggestions", "(", "input_interface", ")", "\n", "\n", "logging", ".", "info", "(", "\"We collected \"", "+", "str", "(", "len", "(", "suggestions", ")", ")", "+", "\" suggestions.\"", ")", "\n", "logging", ".", "info", "(", "str", "(", "psutil", ".", "virtual_memory", "(", ")", ")", ")", "\n", "\n", "# OPENIE part", "\n", "logging", ".", "info", "(", "\"OpenIE from file...\"", ")", "\n", "generated_facts_bis", "=", "self", ".", "_openie_from_file", "(", "suggestions", ")", "\n", "logging", ".", "info", "(", "\"OpenIE from coreNLP\"", ")", "\n", "logging", ".", "info", "(", "str", "(", "psutil", ".", "virtual_memory", "(", ")", ")", ")", "\n", "generated_facts", "=", "self", ".", "get_generated_facts", "(", "suggestions", ")", "\n", "\n", "return", "input_interface", ".", "add_generated_facts", "(", "generated_facts_bis", ")", ".", "add_generated_facts", "(", "generated_facts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_submodule.get_base_sentences": [[19, 22], ["list", "map"], "function", ["None"], ["def", "get_base_sentences", "(", "base_suggestions", ")", ":", "\n", "    ", "return", "list", "(", "map", "(", "lambda", "ranked_suggestion", ":", "ranked_suggestion", "[", "SUGGESTION", "]", ",", "\n", "base_suggestions", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule.__init__": [[33, 40], ["quasimodo.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule.__init__", "quasimodo.cache.cachable_querying_system.CachableQueryingSystem.__init__", "quasimodo.cache.mongodb_cache.MongoDBCache"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__", "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ",", "module_reference", ",", "use_cache", "=", "True", ",", "cache_name", "=", "\"google-cache\"", ")", ":", "\n", "        ", "BrowserAutocompleteSubmodule", ".", "__init__", "(", "self", ",", "module_reference", ")", "\n", "CachableQueryingSystem", ".", "__init__", "(", "self", ",", "MongoDBCache", "(", "cache_name", ",", "mongodb_location", "=", "DEFAULT_MONGODB_LOCATION", ")", ")", "\n", "self", ".", "_name", "=", "\"Google Autocomplete\"", "\n", "self", ".", "use_cache", "=", "use_cache", "\n", "self", ".", "time_between_queries", "=", "1.0", "\n", "self", ".", "default_number_suggestions", "=", "10", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule.clean": [[41, 45], ["super().clean"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean"], ["", "def", "clean", "(", "self", ")", ":", "\n", "        ", "super", "(", "GoogleAutocompleteSubmodule", ",", "self", ")", ".", "clean", "(", ")", "\n", "del", "self", ".", "local_cache", "\n", "self", ".", "local_cache", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule.get_suggestion": [[46, 58], ["google_autocomplete_submodule.get_request", "google_autocomplete_submodule.GoogleAutocompleteSubmodule.get_suggestions_from_response", "google_autocomplete_submodule.GoogleAutocompleteSubmodule.read_cache", "float", "query.strip"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.get_request", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.GoogleAutocompleteClient.get_suggestions_from_response", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache"], ["", "def", "get_suggestion", "(", "self", ",", "query", ",", "lang", "=", "\"en\"", ",", "ds", "=", "''", ")", ":", "\n", "        ", "\"\"\"Query Google suggest service\"\"\"", "\n", "if", "self", ".", "use_cache", ":", "\n", "            ", "cache_value", "=", "self", ".", "read_cache", "(", "query", ")", "\n", "if", "cache_value", "is", "not", "None", ":", "\n", "                ", "suggestions", ",", "is_cached", "=", "cache_value", "\n", "suggestions", "=", "[", "[", "suggestion", "[", "0", "]", ",", "float", "(", "suggestion", "[", "1", "]", ")", "]", "for", "suggestion", "in", "suggestions", "if", "suggestion", "[", "0", "]", "!=", "query", ".", "strip", "(", ")", "]", "\n", "return", "suggestions", ",", "is_cached", "\n", "", "", "if", "not", "look_new", "or", "not", "query", ":", "\n", "            ", "return", "None", ",", "False", "\n", "", "response", "=", "get_request", "(", "query", ",", "ds", ",", "lang", ")", "\n", "return", "self", ".", "get_suggestions_from_response", "(", "response", ",", "query", ",", "ds", ",", "lang", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_submodule.GoogleAutocompleteSubmodule.get_suggestions_from_response": [[59, 74], ["time.time", "json.loads", "time.sleep", "logging.warning", "time.sleep", "google_autocomplete_submodule.GoogleAutocompleteSubmodule.get_suggestion", "response.content.decode", "google_autocomplete_submodule.GoogleAutocompleteSubmodule.write_cache", "max", "range", "len", "query.strip", "time.time"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache"], ["", "def", "get_suggestions_from_response", "(", "self", ",", "response", ",", "query", ",", "ds", ",", "lang", ")", ":", "\n", "        ", "if", "response", ".", "ok", ":", "\n", "            ", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "result", "=", "json", ".", "loads", "(", "response", ".", "content", ".", "decode", "(", "\"utf-8\"", ")", ")", "\n", "suggestions", "=", "[", "[", "result", "[", "1", "]", "[", "ranking", "]", ",", "ranking", "]", "for", "ranking", "in", "range", "(", "len", "(", "result", "[", "1", "]", ")", ")", "if", "result", "[", "1", "]", "[", "ranking", "]", "!=", "query", ".", "strip", "(", ")", "]", "\n", "if", "self", ".", "use_cache", ":", "\n", "                ", "self", ".", "write_cache", "(", "query", ",", "suggestions", ")", "\n", "# We sleep only if the data was not cached", "\n", "", "time", ".", "sleep", "(", "max", "(", "[", "0", ",", "self", ".", "time_between_queries", "-", "(", "time", ".", "time", "(", ")", "-", "begin_time", ")", "]", ")", ")", "\n", "return", "suggestions", ",", "False", "\n", "", "else", ":", "\n", "# Kicked by the search engine", "\n", "            ", "logging", ".", "warning", "(", "\"The number of requests for the google autocomplete submodule was probably exceeded\"", ")", "\n", "time", ".", "sleep", "(", "RELOADTIME", ")", "\n", "return", "self", ".", "get_suggestion", "(", "query", ",", "lang", ",", "ds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_submodule.get_request": [[76, 81], ["urllib.parse.quote", "requests.get"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "", "", "def", "get_request", "(", "query", ",", "ds", ",", "language", ")", ":", "\n", "    ", "formatted_query", "=", "quote", "(", "query", ")", "\n", "url", "=", "baseurl", "+", "\"hl=%s&q=%s&json=t&ds=%s&client=serp\"", "%", "(", "language", ",", "formatted_query", ",", "ds", ")", "\n", "response", "=", "requests", ".", "get", "(", "url", ",", "headers", "=", "headers", ")", "\n", "return", "response", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.GoogleAutocompleteClient.__init__": [[41, 48], ["quasimodo.cache.cachable_querying_system.CachableQueryingSystem.__init__", "time.time", "quasimodo.cache.mongodb_cache.MongoDBCache"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ",", "use_cache", "=", "True", ",", "cache_name", "=", "\"google-cache\"", ")", ":", "\n", "        ", "CachableQueryingSystem", ".", "__init__", "(", "self", ",", "MongoDBCache", "(", "cache_name", ",", "mongodb_location", "=", "DEFAULT_MONGODB_LOCATION", ")", ")", "\n", "self", ".", "_name", "=", "\"Google Autocomplete\"", "\n", "self", ".", "use_cache", "=", "use_cache", "\n", "self", ".", "time_between_queries", "=", "1.5", "\n", "self", ".", "default_number_suggestions", "=", "10", "\n", "self", ".", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.GoogleAutocompleteClient.get_suggestion": [[49, 65], ["time.sleep", "google_autocomplete_client.get_request", "time.time", "google_autocomplete_client.GoogleAutocompleteClient.get_suggestions_from_response", "google_autocomplete_client.GoogleAutocompleteClient.read_cache", "max", "query.strip", "query.strip", "google_autocomplete_client.GoogleAutocompleteClient.create_new_queries", "query.strip", "float", "time.time"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.get_request", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.GoogleAutocompleteClient.get_suggestions_from_response", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.GoogleAutocompleteClient.create_new_queries"], ["", "def", "get_suggestion", "(", "self", ",", "query", ",", "lang", "=", "\"en\"", ",", "ds", "=", "''", ")", ":", "\n", "        ", "\"\"\"Query Google suggest service\"\"\"", "\n", "if", "self", ".", "use_cache", ":", "\n", "            ", "cache_value", "=", "self", ".", "read_cache", "(", "query", ".", "strip", "(", ")", ")", "\n", "if", "cache_value", "is", "not", "None", ":", "\n", "                ", "suggestions", ",", "is_cached", "=", "cache_value", "\n", "suggestions", "=", "[", "(", "suggestion", "[", "0", "]", ",", "float", "(", "suggestion", "[", "1", "]", ")", ")", "for", "suggestion", "in", "suggestions", "]", "\n", "self", ".", "create_new_queries", "(", "suggestions", ",", "query", ")", "\n", "return", "suggestions", ",", "is_cached", "\n", "", "", "if", "not", "look_new", "or", "not", "query", ".", "strip", "(", ")", ":", "\n", "            ", "return", "None", ",", "False", "\n", "# We sleep only if the data was not cached", "\n", "", "time", ".", "sleep", "(", "max", "(", "[", "0", ",", "self", ".", "time_between_queries", "-", "(", "time", ".", "time", "(", ")", "-", "self", ".", "begin_time", ")", "]", ")", ")", "\n", "response", "=", "get_request", "(", "query", ".", "strip", "(", ")", ",", "ds", ",", "lang", ")", "\n", "self", ".", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "return", "self", ".", "get_suggestions_from_response", "(", "response", ",", "query", ",", "ds", ",", "lang", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.GoogleAutocompleteClient.get_suggestions_from_response": [[66, 79], ["json.loads", "google_autocomplete_client.GoogleAutocompleteClient.create_new_queries", "logging.warning", "time.sleep", "google_autocomplete_client.GoogleAutocompleteClient.get_suggestion", "response.content.decode", "google_autocomplete_client.GoogleAutocompleteClient.write_cache", "range", "query.strip", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.GoogleAutocompleteClient.create_new_queries", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache"], ["", "def", "get_suggestions_from_response", "(", "self", ",", "response", ",", "query", ",", "ds", ",", "lang", ")", ":", "\n", "        ", "if", "response", ".", "ok", ":", "\n", "            ", "result", "=", "json", ".", "loads", "(", "response", ".", "content", ".", "decode", "(", "\"utf-8\"", ")", ")", "\n", "suggestions", "=", "[", "(", "result", "[", "1", "]", "[", "ranking", "]", ",", "ranking", ")", "for", "ranking", "in", "range", "(", "len", "(", "result", "[", "1", "]", ")", ")", "]", "\n", "if", "self", ".", "use_cache", ":", "\n", "                ", "self", ".", "write_cache", "(", "query", ".", "strip", "(", ")", ",", "suggestions", ")", "\n", "", "self", ".", "create_new_queries", "(", "suggestions", ",", "query", ")", "\n", "return", "suggestions", ",", "False", "\n", "", "else", ":", "\n", "# Kicked by the search engine", "\n", "            ", "logging", ".", "warning", "(", "\"The number of requests for the google autocomplete submodule was probably exceeded\"", ")", "\n", "time", ".", "sleep", "(", "RELOADTIME", ")", "\n", "return", "self", ".", "get_suggestion", "(", "query", ",", "lang", ",", "ds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.GoogleAutocompleteClient.create_new_queries": [[80, 89], ["len", "list", "google_autocomplete_client.send_new_queries", "list.append", "new_queries.append"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.send_new_queries"], ["", "", "def", "create_new_queries", "(", "self", ",", "suggestions", ",", "query", ")", ":", "\n", "        ", "if", "len", "(", "suggestions", ")", "==", "self", ".", "default_number_suggestions", ":", "\n", "            ", "to_append", "=", "list", "(", "ascii_lowercase", ")", "\n", "if", "query", "[", "-", "1", "]", "!=", "\" \"", ":", "\n", "                ", "to_append", ".", "append", "(", "\" \"", ")", "\n", "", "new_queries", "=", "[", "]", "\n", "for", "new_char", "in", "to_append", ":", "\n", "                ", "new_queries", ".", "append", "(", "query", "+", "new_char", ")", "\n", "", "send_new_queries", "(", "new_queries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.get_request": [[91, 96], ["urllib.parse.quote", "requests.get"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "", "", "def", "get_request", "(", "query", ",", "ds", ",", "language", ")", ":", "\n", "    ", "formatted_query", "=", "quote", "(", "query", ")", "\n", "url", "=", "baseurl", "+", "\"hl=%s&q=%s&json=t&ds=%s&client=serp\"", "%", "(", "language", ",", "formatted_query", ",", "ds", ")", "\n", "response", "=", "requests", ".", "get", "(", "url", ",", "headers", "=", "headers", ")", "\n", "return", "response", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.get_new_query": [[101, 104], ["requests.get", "requests.get.content.decode"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["def", "get_new_query", "(", ")", ":", "\n", "    ", "response", "=", "requests", ".", "get", "(", "GET_URL", ")", "\n", "return", "response", ".", "content", ".", "decode", "(", "\"utf-8\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.google_autocomplete_client.send_new_queries": [[106, 109], ["requests.post", "json.dumps"], "function", ["None"], ["", "def", "send_new_queries", "(", "queries", ")", ":", "\n", "    ", "data", "=", "{", "\"new_queries\"", ":", "queries", "}", "\n", "requests", ".", "post", "(", "POST_URL", ",", "data", "=", "json", ".", "dumps", "(", "data", ")", ",", "headers", "=", "HEADERS_JSON", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.yahoo_questions_submodule.YahooQuestionsSubmodule.__init__": [[24, 28], ["quasimodo.assertion_generation.question_file_submodule.QuestionFileSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_filename", "=", "FILENAME", "\n", "self", ".", "_name", "=", "\"Yahoo Questions\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.__init__": [[41, 49], ["quasimodo.assertion_generation.browser_autocomplete_submodule.BrowserAutocompleteSubmodule.__init__", "quasimodo.cache.cachable_querying_system.CachableQueryingSystem.__init__", "quasimodo.cache.mongodb_cache.MongoDBCache"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__", "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["def", "__init__", "(", "self", ",", "module_reference", ",", "use_cache", "=", "True", ",", "cache_name", "=", "\"bing-cache\"", ",", "look_new", "=", "False", ")", ":", "\n", "        ", "BrowserAutocompleteSubmodule", ".", "__init__", "(", "self", ",", "module_reference", ")", "\n", "CachableQueryingSystem", ".", "__init__", "(", "self", ",", "MongoDBCache", "(", "cache_name", ",", "mongodb_location", "=", "DEFAULT_MONGODB_LOCATION", ")", ")", "\n", "self", ".", "_name", "=", "\"Bing Autocomplete\"", "\n", "self", ".", "use_cache", "=", "use_cache", "\n", "self", ".", "time_between_queries", "=", "0.02", "\n", "self", ".", "default_number_suggestions", "=", "8", "\n", "self", ".", "look_new", "=", "look_new", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.clean": [[50, 54], ["super().clean"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean"], ["", "def", "clean", "(", "self", ")", ":", "\n", "        ", "super", "(", "BingAutocompleteSubmodule", ",", "self", ")", ".", "clean", "(", ")", "\n", "del", "self", ".", "local_cache", "\n", "self", ".", "local_cache", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion": [[55, 67], ["bing_autocomplete_submodule.get_response", "bing_autocomplete_submodule.BingAutocompleteSubmodule.process_response", "bing_autocomplete_submodule.BingAutocompleteSubmodule.read_cache", "float"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.get_response", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.process_response", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache"], ["", "def", "get_suggestion", "(", "self", ",", "query", ",", "lang", "=", "\"en-US\"", ",", "ds", "=", "0", ")", ":", "\n", "        ", "\"Gets Autosuggest results for a query and returns the information.\"", "\n", "if", "self", ".", "use_cache", ":", "\n", "            ", "cache_value", "=", "self", ".", "read_cache", "(", "query", ")", "\n", "if", "cache_value", "is", "not", "None", ":", "\n", "                ", "suggestions", ",", "is_cached", "=", "cache_value", "\n", "suggestions", "=", "[", "[", "suggestion", "[", "0", "]", ",", "float", "(", "suggestion", "[", "1", "]", ")", "]", "for", "suggestion", "in", "suggestions", "]", "\n", "return", "suggestions", ",", "is_cached", "\n", "", "", "if", "not", "self", ".", "look_new", "or", "not", "query", ":", "\n", "            ", "return", "None", ",", "False", "\n", "", "response", "=", "get_response", "(", "query", ",", "lang", ")", "\n", "return", "self", ".", "process_response", "(", "response", ",", "query", ",", "lang", ",", "ds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.process_response": [[68, 92], ["time.time", "json.loads", "json.loads.setdefault", "time.sleep", "logging.warning", "response.read", "suggestion_group.setdefault", "bing_autocomplete_submodule.BingAutocompleteSubmodule.write_cache", "max", "time.sleep", "bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion", "suggestions_temp.append", "range", "suggestion.setdefault", "len", "time.time"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.BingAutocompleteSubmodule.get_suggestion"], ["", "def", "process_response", "(", "self", ",", "response", ",", "query", ",", "lang", ",", "ds", ")", ":", "\n", "        ", "if", "response", ".", "status", "==", "OK", ":", "\n", "            ", "begin_time", "=", "time", ".", "time", "(", ")", "\n", "res_json", "=", "json", ".", "loads", "(", "response", ".", "read", "(", ")", ")", "\n", "suggestions_temp", "=", "[", "]", "\n", "for", "suggestion_group", "in", "res_json", ".", "setdefault", "(", "\"suggestionGroups\"", ",", "[", "]", ")", ":", "\n", "                ", "search_suggestions", "=", "suggestion_group", ".", "setdefault", "(", "\"searchSuggestions\"", ",", "[", "]", ")", "\n", "for", "suggestion", "in", "search_suggestions", ":", "\n", "                    ", "suggestions_temp", ".", "append", "(", "suggestion", ".", "setdefault", "(", "\"query\"", ",", "\"\"", ")", ")", "\n", "", "", "suggestions", "=", "[", "[", "suggestions_temp", "[", "i", "]", ",", "i", "]", "for", "i", "in", "range", "(", "len", "(", "suggestions_temp", ")", ")", "]", "\n", "if", "self", ".", "use_cache", ":", "\n", "                ", "self", ".", "write_cache", "(", "query", ",", "suggestions", ")", "\n", "", "time", ".", "sleep", "(", "max", "(", "[", "0", ",", "self", ".", "time_between_queries", "-", "(", "time", ".", "time", "(", ")", "-", "begin_time", ")", "]", ")", ")", "\n", "return", "suggestions", ",", "False", "\n", "", "else", ":", "\n", "# We surely exceeded the number of requests", "\n", "            ", "logging", ".", "warning", "(", "\"The number of requests for the bing autocomplete\"", "+", "\n", "\" submodule was\"", "+", "\n", "\" probably exceeded\"", ")", "\n", "# We force it, sometimes it does not work well...", "\n", "if", "ds", "<", "10", ":", "\n", "                ", "time", ".", "sleep", "(", "1.0", ")", "\n", "return", "self", ".", "get_suggestion", "(", "query", ",", "lang", ",", "ds", "+", "1", ")", "\n", "", "return", "None", ",", "False", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.bing_autocomplete_submodule.get_response": [[27, 34], ["http.client.HTTPSConnection", "http.client.HTTPSConnection.request", "http.client.HTTPSConnection.getresponse", "urllib.parse.quote"], "function", ["None"], ["def", "get_response", "(", "query", ",", "lang", ")", ":", "\n", "    ", "params", "=", "'?mkt='", "+", "lang", "+", "'&q='", "+", "quote", "(", "query", ")", "\n", "headers", "=", "{", "'Ocp-Apim-Subscription-Key'", ":", "subscriptionKey", "}", "\n", "conn", "=", "http", ".", "client", ".", "HTTPSConnection", "(", "host", ")", "\n", "conn", ".", "request", "(", "\"GET\"", ",", "path", "+", "params", ",", "None", ",", "headers", ")", "\n", "response", "=", "conn", ".", "getresponse", "(", ")", "\n", "return", "response", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.__init__": [[242, 253], ["quasimodo.data_structures.submodule_interface.SubmoduleInterface.__init__", "re.compile"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ",", "use_cache", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_cache", "=", "use_cache", "\n", "self", ".", "_max_query_length", "=", "99990", "\n", "self", ".", "default_number_suggestions", "=", "8", "# The maximum number of suggestions", "\n", "self", ".", "_module_reference", "=", "module_reference", "\n", "self", ".", "regex_no_alpha", "=", "re", ".", "compile", "(", "\"[^a-zA-Z]\"", ")", "\n", "self", ".", "counter", "=", "0", "\n", "self", ".", "cache_corenlp", "=", "None", "\n", "self", ".", "statement_maker", "=", "None", "\n", "self", ".", "safe_source", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.clean": [[254, 266], ["logging.info"], "methods", ["None"], ["", "def", "clean", "(", "self", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Cleaning OpenIE\"", ")", "\n", "try", ":", "\n", "            ", "del", "self", ".", "cache_corenlp", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "", "self", ".", "cache_corenlp", "=", "None", "\n", "try", ":", "\n", "            ", "del", "self", ".", "statement_maker", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "", "self", ".", "statement_maker", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_cache_corenlp": [[267, 282], ["dict", "open", "enumerate", "line.strip().split.strip().split.strip().split", "len", "logging.error", "logging.error", "line.strip().split.strip().split.strip", "str"], "methods", ["None"], ["", "def", "get_cache_corenlp", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "cache_corenlp", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "cache_corenlp", "\n", "", "cache", "=", "dict", "(", ")", "\n", "with", "open", "(", "CACHE_CORENLP_FILENAME", ")", "as", "f", ":", "\n", "            ", "for", "i", ",", "line", "in", "enumerate", "(", "f", ")", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "len", "(", "line", ")", "!=", "4", ":", "\n", "                    ", "logging", ".", "error", "(", "\"Problem when reading line \"", "+", "str", "(", "i", ")", ")", "\n", "logging", ".", "error", "(", "\"\\t\"", ".", "join", "(", "line", ")", ")", "\n", "", "else", ":", "\n", "                    ", "statement", ",", "negativity", ",", "question", ",", "json_str", "=", "line", "\n", "cache", "[", "question", "]", "=", "[", "statement", ",", "negativity", ",", "json_str", "]", "\n", "", "", "", "self", ".", "cache_corenlp", "=", "cache", "\n", "return", "cache", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process": [[283, 285], ["None"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._compute_batch_openie": [[286, 292], ["logging.info", "logging.info", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_all_batch_components_from_suggestions", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_batches_from_batch_components", "str", "psutil.virtual_memory"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_all_batch_components_from_suggestions", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_batches_from_batch_components"], ["", "def", "_compute_batch_openie", "(", "self", ",", "suggestions", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Transformation questions to statement\"", ")", "\n", "logging", ".", "info", "(", "str", "(", "psutil", ".", "virtual_memory", "(", ")", ")", ")", "\n", "full_sentence", "=", "self", ".", "get_all_batch_components_from_suggestions", "(", "suggestions", ")", "\n", "batches", "=", "self", ".", "get_batches_from_batch_components", "(", "full_sentence", ")", "\n", "return", "batches", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_all_batch_components_from_suggestions": [[293, 299], ["openie_fact_generator_submodule.remove_empty_sentences", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.transforms_suggestion_into_batch_component"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.remove_empty_sentences", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.transforms_suggestion_into_batch_component"], ["", "def", "get_all_batch_components_from_suggestions", "(", "self", ",", "suggestions", ")", ":", "\n", "        ", "full_sentence", "=", "[", "]", "\n", "for", "suggestion", "in", "suggestions", ":", "\n", "            ", "self", ".", "transforms_suggestion_into_batch_component", "(", "suggestion", ",", "full_sentence", ")", "\n", "", "full_sentence", "=", "remove_empty_sentences", "(", "full_sentence", ")", "\n", "return", "full_sentence", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_batches_from_batch_components": [[300, 314], ["range", "len", "len", "batches.append", "batches.append", "len", "len"], "methods", ["None"], ["", "def", "get_batches_from_batch_components", "(", "self", ",", "full_sentence", ")", ":", "\n", "        ", "batches", "=", "[", "]", "\n", "begin", "=", "0", "\n", "counter", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "full_sentence", ")", ")", ":", "\n", "            ", "batch_size_is_too_long", "=", "counter", "+", "3", "+", "len", "(", "full_sentence", "[", "i", "]", "[", "STATEMENT", "]", ")", ">", "self", ".", "_max_query_length", "\n", "if", "batch_size_is_too_long", ":", "\n", "                ", "batches", ".", "append", "(", "full_sentence", "[", "begin", ":", "i", "]", ")", "\n", "begin", "=", "i", "\n", "counter", "=", "0", "\n", "", "counter", "+=", "len", "(", "full_sentence", "[", "i", "]", "[", "STATEMENT", "]", ")", "+", "3", "\n", "", "if", "begin", "<", "len", "(", "full_sentence", ")", ":", "\n", "            ", "batches", ".", "append", "(", "full_sentence", "[", "begin", ":", "]", ")", "\n", "", "return", "batches", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.transforms_suggestion_into_batch_component": [[315, 354], ["openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.statement_maker.to_statement", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.replace().replace", "any", "quasimodo.statement_maker.StatementMaker", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.statement_maker.to_statement", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.replace", "full_sentence.append", "full_sentence.append", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.replace"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker.to_statement", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.statement_maker.StatementMaker.to_statement"], ["", "def", "transforms_suggestion_into_batch_component", "(", "self", ",", "\n", "suggestion", ",", "\n", "full_sentence", ")", ":", "\n", "# question to statement", "\n", "# We need this because of OpenIE very bad with questions", "\n", "        ", "if", "self", ".", "statement_maker", "is", "None", ":", "\n", "            ", "self", ".", "statement_maker", "=", "StatementMaker", "(", ")", "\n", "", "new_sentence", "=", "self", ".", "statement_maker", ".", "to_statement", "(", "suggestion", "[", "STATEMENT", "]", ",", "\n", "suggestion", "[", "SUBJECT", "]", ",", "\n", "self", ".", "safe_source", ")", "\n", "if", "new_sentence", "[", ":", "6", "]", "==", "\"there \"", ":", "\n", "            ", "new_sentence", "=", "new_sentence", "[", "6", ":", "]", "\n", "new_sentence", "=", "self", ".", "statement_maker", ".", "to_statement", "(", "\n", "\"why \"", "+", "new_sentence", ",", "suggestion", "[", "SUBJECT", "]", ",", "self", ".", "safe_source", ")", "\n", "# Deal with negative sentences", "\n", "", "new_sentence", ".", "replace", "(", "\" n't \"", ",", "\" not \"", ")", ".", "replace", "(", "\"n't \"", ",", "\" not \"", ")", "\n", "contains_negation", "=", "any", "(", "[", "\" \"", "+", "verb", "+", "\" not \"", "in", "new_sentence", "\n", "for", "verb", "in", "NEGATE_VERB", "]", ")", "\n", "if", "contains_negation", ":", "\n", "            ", "for", "verb", "in", "NEGATE_VERB", ":", "\n", "                ", "negation", "=", "\" \"", "+", "verb", "+", "\" not \"", "\n", "if", "negation", "in", "new_sentence", ":", "\n", "                    ", "full_sentence", ".", "append", "(", "[", "new_sentence", ".", "replace", "(", "negation", ",", "\" \"", "+", "verb", "+", "\" \"", ")", ",", "\n", "suggestion", "[", "SCORE", "]", ",", "\n", "suggestion", "[", "PATTERN", "]", ",", "\n", "suggestion", "[", "SUBJECT", "]", ",", "\n", "True", ",", "\n", "suggestion", "[", "STATEMENT", "]", "]", ")", "\n", "break", "\n", "", "", "", "elif", "new_sentence", "!=", "\"\"", ":", "\n", "            ", "negativity", "=", "False", "\n", "if", "\"cannot\"", "in", "suggestion", "[", "STATEMENT", "]", "or", "\"can't\"", "in", "suggestion", "[", "STATEMENT", "]", ":", "\n", "                ", "negativity", "=", "True", "\n", "", "full_sentence", ".", "append", "(", "[", "new_sentence", ",", "\n", "suggestion", "[", "SCORE", "]", ",", "\n", "suggestion", "[", "PATTERN", "]", ",", "\n", "suggestion", "[", "SUBJECT", "]", ",", "\n", "negativity", ",", "\n", "suggestion", "[", "STATEMENT", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts": [[355, 390], ["openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.read_and_filter_from_cache", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._compute_batch_openie", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.clean", "openie_fact_generator_submodule.start_corenlp_client", "logging.info", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.pop", "logging.info", "logging.info", "logging.info", "openie_fact_generator_submodule.join_sentences_from_batch", "openie_fact_generator_submodule.annotate_sentences", "start_corenlp_client.stop", "len", "len", "str", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_corenlp_result", "str", "psutil.virtual_memory", "len", "logging.error", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.read_and_filter_from_cache", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._compute_batch_openie", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.start_corenlp_client", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.join_sentences_from_batch", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.annotate_sentences", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_corenlp_result"], ["", "", "def", "get_generated_facts", "(", "self", ",", "suggestions", ")", ":", "\n", "        ", "generated_facts", "=", "[", "]", "\n", "\n", "suggestions", "=", "self", ".", "read_and_filter_from_cache", "(", "suggestions", ",", "generated_facts", ")", "\n", "batches", "=", "self", ".", "_compute_batch_openie", "(", "suggestions", ")", "\n", "was_started", "=", "False", "\n", "corenlp_client", "=", "None", "\n", "if", "batches", ":", "\n", "            ", "was_started", "=", "True", "\n", "corenlp_client", "=", "start_corenlp_client", "(", ")", "\n", "\n", "", "while", "batches", ":", "\n", "            ", "logging", ".", "info", "(", "\"%d batches remaining\"", ",", "len", "(", "batches", ")", ")", "\n", "batch", "=", "batches", ".", "pop", "(", ")", "\n", "logging", ".", "info", "(", "\"First sentence of the batch: \"", "+", "str", "(", "batch", "[", "0", "]", ")", ")", "\n", "logging", ".", "info", "(", "\"Size of the batch: %d\"", ",", "len", "(", "batch", ")", ")", "\n", "logging", ".", "info", "(", "str", "(", "psutil", ".", "virtual_memory", "(", ")", ")", ")", "\n", "# We annotate the sentence", "\n", "# And extract the triples", "\n", "sentences", "=", "join_sentences_from_batch", "(", "batch", ")", "\n", "corenlp_client", ",", "out", "=", "annotate_sentences", "(", "corenlp_client", ",", "sentences", ",", "batch", ",", "batches", ")", "\n", "self", ".", "counter", "=", "0", "\n", "if", "\"sentences\"", "not", "in", "out", ":", "\n", "                ", "continue", "\n", "", "for", "corenlp_result_sentence", "in", "out", "[", "\"sentences\"", "]", ":", "\n", "                ", "if", "self", ".", "counter", ">=", "len", "(", "batch", ")", ":", "\n", "                    ", "logging", ".", "error", "(", "\"The counter and the batch do not match. Expected: %d, Received: %d\"", ",", "\n", "len", "(", "batch", ")", ",", "self", ".", "counter", ")", "\n", "break", "\n", "", "self", ".", "process_corenlp_result", "(", "corenlp_result_sentence", ",", "batch", ",", "generated_facts", ")", "\n", "# stop the annotator", "\n", "", "", "if", "was_started", ":", "\n", "            ", "corenlp_client", ".", "stop", "(", ")", "\n", "", "self", ".", "clean", "(", ")", "\n", "return", "generated_facts", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_corenlp_result": [[391, 419], ["openie_fact_generator_submodule.get_statement_from_corenlp_sentence", "openie_fact_generator_submodule.replace_special_characters", "openie_fact_generator_submodule.are_different_sentences", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_corenlp_result_knowing_suggestion", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.write_result_suggestion", "len", "logging.debug", "logging.error", "openie_fact_generator_submodule.are_different_sentences"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_statement_from_corenlp_sentence", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.replace_special_characters", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.are_different_sentences", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_corenlp_result_knowing_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.write_result_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.are_different_sentences"], ["", "def", "process_corenlp_result", "(", "self", ",", "corenlp_result_sentence", ",", "batch", ",", "generated_facts", ")", ":", "\n", "        ", "suggestion", "=", "batch", "[", "self", ".", "counter", "]", "\n", "if", "len", "(", "corenlp_result_sentence", "[", "\"tokens\"", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "counter", "+=", "1", "\n", "logging", ".", "debug", "(", "\"Empty sentence encountered\"", ")", "\n", "return", "\n", "", "statement_extracted_from_openie", "=", "get_statement_from_corenlp_sentence", "(", "corenlp_result_sentence", ")", "\n", "statement_extracted_from_openie", "=", "replace_special_characters", "(", "statement_extracted_from_openie", ")", "\n", "batch_and_current_sentence_do_not_match", "=", "are_different_sentences", "(", "self", ".", "regex_no_alpha", ",", "\n", "statement_extracted_from_openie", ",", "\n", "suggestion", ")", "\n", "if", "batch_and_current_sentence_do_not_match", ":", "\n", "            ", "logging", ".", "error", "(", "\"The subjects do not match. Received: %s,\"", "\n", "\"Expecting: %s\"", ",", "statement_extracted_from_openie", ",", "suggestion", ")", "\n", "# Check if we went too fast", "\n", "suggestion", "=", "batch", "[", "self", ".", "counter", "-", "1", "]", "\n", "previous_batch_and_sentence_do_not_match", "=", "are_different_sentences", "(", "\n", "self", ".", "regex_no_alpha", ",", "\n", "statement_extracted_from_openie", ",", "\n", "suggestion", ")", "\n", "if", "previous_batch_and_sentence_do_not_match", ":", "\n", "                ", "self", ".", "counter", "+=", "1", "\n", "return", "\n", "", "else", ":", "\n", "                ", "self", ".", "counter", "-=", "1", "\n", "", "", "self", ".", "process_corenlp_result_knowing_suggestion", "(", "suggestion", ",", "corenlp_result_sentence", ",", "generated_facts", ")", "\n", "self", ".", "write_result_suggestion", "(", "suggestion", ",", "corenlp_result_sentence", ")", "\n", "self", ".", "counter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_corenlp_result_knowing_suggestion": [[420, 438], ["isinstance", "openie_fact_generator_submodule.get_maximal_length_of_a_predicate", "openie_fact_generator_submodule.get_maximal_object", "openie_fact_generator_submodule.get_number_words", "openie_fact_generator_submodule.contains_than_in_object", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_score_based_on_ranking", "json.loads", "len", "openie_fact_generator_submodule._simple_extraction", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_triple", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_fact_from_simple_extraction", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_subject().get", "generated_facts.append", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_subject"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_maximal_length_of_a_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_maximal_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_number_words", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.contains_than_in_object", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_score_based_on_ranking", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule._simple_extraction", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_triple", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_fact_from_simple_extraction", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.fact_interface.FactInterface.get_subject"], ["", "def", "process_corenlp_result_knowing_suggestion", "(", "self", ",", "suggestion", ",", "corenlp_result_sentence", ",", "generated_facts", ")", ":", "\n", "        ", "if", "isinstance", "(", "corenlp_result_sentence", ",", "str", ")", ":", "\n", "            ", "corenlp_result_sentence", "=", "json", ".", "loads", "(", "corenlp_result_sentence", ")", "\n", "", "maxi_length_predicate", "=", "get_maximal_length_of_a_predicate", "(", "corenlp_result_sentence", ")", "\n", "maxi_obj", "=", "get_maximal_object", "(", "corenlp_result_sentence", ",", "maxi_length_predicate", ")", "\n", "maxi_length_object", "=", "get_number_words", "(", "maxi_obj", ")", "\n", "contains_than", "=", "contains_than_in_object", "(", "corenlp_result_sentence", ")", "\n", "score_based_on_ranking", "=", "self", ".", "get_score_based_on_ranking", "(", "suggestion", ")", "\n", "if", "len", "(", "corenlp_result_sentence", "[", "\"openie\"", "]", ")", "==", "0", ":", "\n", "# Try simple extraction as OpenIE is bad for this", "\n", "            ", "se", "=", "_simple_extraction", "(", "suggestion", "[", "STATEMENT", "]", ")", "\n", "if", "se", "is", "not", "None", ":", "\n", "                ", "new_fact", "=", "self", ".", "get_fact_from_simple_extraction", "(", "se", ",", "score_based_on_ranking", ",", "suggestion", ")", "\n", "if", "suggestion", "[", "SUBJECT", "]", "in", "new_fact", ".", "get_subject", "(", ")", ".", "get", "(", ")", ":", "\n", "                    ", "generated_facts", ".", "append", "(", "new_fact", ")", "\n", "", "", "", "for", "triple", "in", "corenlp_result_sentence", "[", "\"openie\"", "]", ":", "\n", "            ", "self", ".", "process_triple", "(", "triple", ",", "suggestion", ",", "contains_than", ",", "generated_facts", ",", "maxi_length_object", ",", "\n", "maxi_length_predicate", ",", "maxi_obj", ",", "score_based_on_ranking", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_triple": [[439, 457], ["openie_fact_generator_submodule.get_spo_from_triple", "openie_fact_generator_submodule.get_negativity", "openie_fact_generator_submodule.get_modality", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.add_facts_to_generated_facts", "openie_fact_generator_submodule._try_extend", "openie_fact_generator_submodule.get_modality", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.add_facts_to_generated_facts", "openie_fact_generator_submodule.get_number_words", "openie_fact_generator_submodule.get_number_words"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_spo_from_triple", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_negativity", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.add_facts_to_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule._try_extend", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.add_facts_to_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_number_words", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_number_words"], ["", "", "def", "process_triple", "(", "self", ",", "triple", ",", "suggestion", ",", "contains_than", ",", "generated_facts", ",", "maxi_length_object", ",", "\n", "maxi_length_predicate", ",", "maxi_obj", ",", "score_based_on_ranking", ")", ":", "\n", "        ", "subject", ",", "predicate", ",", "obj", "=", "get_spo_from_triple", "(", "triple", ")", "\n", "# This is to prevent too many extractions", "\n", "# If it useful in practice to extract more than one fact?", "\n", "if", "(", "maxi_length_predicate", "!=", "get_number_words", "(", "predicate", ")", ")", "or", "(", "maxi_length_object", "!=", "get_number_words", "(", "obj", ")", "and", "contains_than", ")", ":", "\n", "            ", "return", "\n", "", "negative", "=", "get_negativity", "(", "suggestion", ")", "\n", "modality", "=", "get_modality", "(", "subject", ",", "obj", ",", "maxi_length_object", ",", "maxi_obj", ",", "suggestion", ")", "\n", "self", ".", "add_facts_to_generated_facts", "(", "generated_facts", ",", "subject", ",", "predicate", ",", "obj", ",", "modality", ",", "negative", ",", "\n", "score_based_on_ranking", ",", "suggestion", ")", "\n", "spo", "=", "_try_extend", "(", "subject", ",", "predicate", ",", "obj", ",", "suggestion", "[", "STATEMENT", "]", ")", "\n", "if", "spo", "is", "not", "None", ":", "\n", "            ", "subject", ",", "predicate", ",", "obj", "=", "spo", "\n", "modality", "=", "get_modality", "(", "subject", ",", "obj", ",", "maxi_length_object", ",", "maxi_obj", ",", "suggestion", ")", "\n", "self", ".", "add_facts_to_generated_facts", "(", "generated_facts", ",", "subject", ",", "predicate", ",", "obj", ",", "modality", ",", "negative", ",", "\n", "score_based_on_ranking", ",", "suggestion", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.add_facts_to_generated_facts": [[458, 477], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "generated_facts.append", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_plural", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_singular"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_singular"], ["", "", "def", "add_facts_to_generated_facts", "(", "self", ",", "generated_facts", ",", "subject", ",", "predicate", ",", "obj", ",", "modality", ",", "negative", ",", "\n", "score_based_on_ranking", ",", "suggestion", ")", ":", "\n", "        ", "if", "suggestion", "[", "SUBJECT", "]", "not", "in", "subject", "and", "DEFAULT_INFLECT", ".", "to_plural", "(", "suggestion", "[", "SUBJECT", "]", ")", "not", "in", "subject", "and", "DEFAULT_INFLECT", ".", "to_singular", "(", "suggestion", "[", "SUBJECT", "]", ")", "not", "in", "subject", ":", "\n", "            ", "return", "\n", "", "multiple_score", "=", "MultipleScore", "(", ")", "\n", "multiple_score", ".", "add_score", "(", "1.0", ",", "self", ".", "_module_reference", ",", "reference_corenlp", ")", "\n", "multiple_score", ".", "add_score", "(", "score_based_on_ranking", ",", "self", ".", "_module_reference", ",", "self", ")", "\n", "new_fact_corenlp", "=", "GeneratedFact", "(", "subject", ",", "\n", "predicate", ",", "\n", "obj", ",", "\n", "modality", ",", "\n", "negative", ",", "\n", "multiple_score", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "suggestion", "[", "0", "]", ",", "self", ",", "1", ")", ",", "\n", "suggestion", "[", "2", "]", ")", "\n", "generated_facts", ".", "append", "(", "new_fact_corenlp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_fact_from_simple_extraction": [[478, 495], ["quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.generated_fact.GeneratedFact", "openie_fact_generator_submodule.get_negativity", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_negativity", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw"], ["", "def", "get_fact_from_simple_extraction", "(", "self", ",", "extraction", ",", "score", ",", "suggestion", ")", ":", "\n", "        ", "negative", "=", "get_negativity", "(", "suggestion", ")", "or", "extraction", "[", "3", "]", "\n", "multiple_score", "=", "MultipleScore", "(", ")", "\n", "multiple_score", ".", "add_score", "(", "score", ",", "self", ".", "_module_reference", ",", "self", ")", "\n", "multiple_score", ".", "add_score", "(", "1.0", ",", "self", ".", "_module_reference", ",", "reference_manual", ")", "\n", "new_fact", "=", "GeneratedFact", "(", "\n", "extraction", "[", "0", "]", ",", "\n", "extraction", "[", "1", "]", ",", "\n", "extraction", "[", "2", "]", ",", "\n", "None", ",", "\n", "negative", ",", "\n", "# For the score, inverse the ranking (higher is", "\n", "# better) and add the confidence of the triple", "\n", "multiple_score", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "suggestion", "[", "0", "]", ",", "self", ",", "1", ")", ",", "\n", "suggestion", "[", "2", "]", ")", "\n", "return", "new_fact", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._take_earliest_predicate": [[496, 508], ["sentence.find", "sentence.find"], "methods", ["None"], ["", "def", "_take_earliest_predicate", "(", "self", ",", "sentence", ",", "facts", ")", ":", "\n", "        ", "earliest_predicate", "=", "-", "1", "\n", "for", "fact", "in", "facts", ":", "\n", "            ", "pos_predicate", "=", "sentence", ".", "find", "(", "fact", "[", "1", "]", ")", "\n", "if", "earliest_predicate", "==", "-", "1", ":", "\n", "                ", "earliest_predicate", "=", "pos_predicate", "\n", "", "elif", "pos_predicate", "!=", "-", "1", "and", "pos_predicate", "<", "earliest_predicate", ":", "\n", "                ", "earliest_predicate", "=", "pos_predicate", "\n", "", "", "for", "fact", "in", "facts", ":", "\n", "            ", "pos_predicate", "=", "sentence", ".", "find", "(", "fact", "[", "1", "]", ")", "\n", "if", "pos_predicate", "==", "earliest_predicate", ":", "\n", "                ", "yield", "fact", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._openie_from_file": [[509, 547], ["quasimodo.assertion_generation.openie_reader.OpenIEReader", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.transforms_suggestion_into_batch_component", "quasimodo.assertion_generation.openie_reader.OpenIEReader.get_from_sentence", "openie_fact_generator_submodule.get_negativity", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_score_based_on_ranking", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._take_earliest_predicate", "quasimodo.data_structures.multiple_scores.MultipleScore", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "quasimodo.data_structures.multiple_scores.MultipleScore.add_score", "generated_facts.append", "float", "quasimodo.data_structures.generated_fact.GeneratedFact", "fact[].replace", "logging.info", "quasimodo.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.transforms_suggestion_into_batch_component", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_reader.OpenIEReader.get_from_sentence", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_negativity", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_score_based_on_ranking", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._take_earliest_predicate", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add_score", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_source_occurrence.MultipleSourceOccurrence.from_raw"], ["", "", "", "def", "_openie_from_file", "(", "self", ",", "suggestions", ")", ":", "\n", "        ", "openie_reader", "=", "OpenIEReader", "(", ")", "\n", "generated_facts", "=", "[", "]", "\n", "new_suggestions", "=", "[", "]", "\n", "for", "suggestion", "in", "suggestions", ":", "\n", "            ", "self", ".", "transforms_suggestion_into_batch_component", "(", "suggestion", ",", "\n", "new_suggestions", ")", "\n", "", "for", "suggestion", "in", "new_suggestions", ":", "\n", "            ", "sentence", "=", "suggestion", "[", "STATEMENT", "]", "\n", "facts", "=", "openie_reader", ".", "get_from_sentence", "(", "sentence", ")", "\n", "negative", "=", "get_negativity", "(", "suggestion", ")", "\n", "facts", "=", "[", "fact", "for", "fact", "in", "facts", "if", "\n", "len", "(", "fact", ")", ">", "0", "and", "len", "(", "fact", "[", "0", "]", ")", ">", "1", "and", "len", "(", "fact", "[", "1", "]", ")", ">", "1", "and", "len", "(", "fact", "[", "2", "]", ")", ">", "1", "]", "\n", "score_based_on_ranking", "=", "self", ".", "get_score_based_on_ranking", "(", "suggestion", ")", "\n", "facts", "=", "self", ".", "_take_earliest_predicate", "(", "sentence", ",", "facts", ")", "\n", "for", "fact", "in", "facts", ":", "\n", "                ", "if", "suggestion", "[", "SUBJECT", "]", "not", "in", "fact", "[", "0", "]", ":", "\n", "                    ", "continue", "\n", "", "try", ":", "\n", "                    ", "score", "=", "float", "(", "fact", "[", "3", "]", ".", "replace", "(", "\",\"", ",", "\".\"", ")", ")", "\n", "", "except", ":", "\n", "                    ", "logging", ".", "info", "(", "\"Problem in score reading in openie5 reader with \"", "+", "fact", "[", "3", "]", ")", "\n", "continue", "\n", "", "multiple_score", "=", "MultipleScore", "(", ")", "\n", "multiple_score", ".", "add_score", "(", "score", ",", "self", ".", "_module_reference", ",", "reference_openie5", ")", "\n", "multiple_score", ".", "add_score", "(", "score_based_on_ranking", ",", "self", ".", "_module_reference", ",", "self", ")", "\n", "generated_facts", ".", "append", "(", "\n", "GeneratedFact", "(", "\n", "fact", "[", "0", "]", ",", "\n", "fact", "[", "1", "]", ",", "\n", "fact", "[", "2", "]", ",", "\n", "\"\"", ",", "\n", "negative", ",", "\n", "multiple_score", ",", "\n", "MultipleSourceOccurrence", ".", "from_raw", "(", "sentence", ",", "self", ",", "1", ")", ",", "\n", "suggestion", "[", "2", "]", ")", ")", "\n", "", "", "del", "openie_reader", "\n", "return", "generated_facts", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_score_based_on_ranking": [[548, 552], ["None"], "methods", ["None"], ["", "def", "get_score_based_on_ranking", "(", "self", ",", "suggestion", ")", ":", "\n", "        ", "score_based_on_ranking", "=", "(", "2", "*", "self", ".", "default_number_suggestions", "-", "suggestion", "[", "1", "]", ")", "/", "(", "2", "*", "self", ".", "default_number_suggestions", ")", "\n", "return", "score_based_on_ranking", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.write_result_suggestion": [[553, 564], ["open", "f.write", "logging.info", "json.dumps", "str"], "methods", ["None"], ["", "def", "write_result_suggestion", "(", "self", ",", "suggestion", ",", "corenlp_result_sentence", ")", ":", "\n", "        ", "if", "self", ".", "use_cache", ":", "\n", "            ", "while", "True", ":", "\n", "                ", "try", ":", "\n", "                    ", "with", "open", "(", "CACHE_CORENLP_FILENAME", ",", "\"a\"", ")", "as", "f", ":", "\n", "                        ", "f", ".", "write", "(", "suggestion", "[", "STATEMENT", "]", "+", "\"\\t\"", "+", "str", "(", "suggestion", "[", "NEGATIVITY", "]", ")", "+", "\n", "\"\\t\"", "+", "suggestion", "[", "QUESTION", "]", "+", "\"\\t\"", "+", "\n", "json", ".", "dumps", "(", "corenlp_result_sentence", ")", "+", "\"\\n\"", ")", "\n", "break", "\n", "", "", "except", ":", "\n", "                    ", "logging", ".", "info", "(", "\"Error while write in the cache of the corenlp\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.read_and_filter_from_cache": [[565, 586], ["openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_cache_corenlp", "os.path.isfile", "openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_corenlp_result_knowing_suggestion", "new_suggestions.append"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_cache_corenlp", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.process_corenlp_result_knowing_suggestion"], ["", "", "", "", "def", "read_and_filter_from_cache", "(", "self", ",", "suggestions", ",", "generated_facts", ")", ":", "\n", "        ", "if", "not", "self", ".", "use_cache", "or", "not", "os", ".", "path", ".", "isfile", "(", "CACHE_CORENLP_FILENAME", ")", ":", "\n", "            ", "return", "suggestions", "\n", "", "cache", "=", "self", ".", "get_cache_corenlp", "(", ")", "\n", "new_suggestions", "=", "[", "]", "\n", "for", "suggestion", "in", "suggestions", ":", "\n", "            ", "suggestion_statement", "=", "suggestion", "[", "STATEMENT", "]", "\n", "if", "suggestion_statement", "in", "cache", ":", "\n", "                ", "statement", ",", "negativity", ",", "corenlp_result", "=", "cache", "[", "suggestion_statement", "]", "\n", "suggestion", "=", "[", "statement", ",", "\n", "suggestion", "[", "SCORE", "]", ",", "\n", "suggestion", "[", "PATTERN", "]", ",", "\n", "suggestion", "[", "SUBJECT", "]", ",", "\n", "negativity", "==", "\"True\"", ",", "\n", "suggestion", "[", "STATEMENT", "]", "]", "\n", "self", ".", "process_corenlp_result_knowing_suggestion", "(", "suggestion", ",", "\n", "corenlp_result", ",", "\n", "generated_facts", ")", "\n", "", "else", ":", "\n", "                ", "new_suggestions", ".", "append", "(", "suggestion", ")", "\n", "", "", "return", "new_suggestions", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule._simple_extraction": [[46, 66], ["_nlp", "tokens.append", "tokens.index", "openie_fact_generator_submodule.get_synsets", "len", "openie_fact_generator_submodule.get_synsets", "token.text.lower", "len", "synset.pos", "synset.pos"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.evalui.evalui.index", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_synsets", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_synsets"], ["def", "_simple_extraction", "(", "sentence", ")", ":", "\n", "    ", "tokens", "=", "[", "]", "\n", "for", "token", "in", "_nlp", "(", "sentence", ")", ":", "\n", "        ", "tokens", ".", "append", "(", "token", ".", "text", ".", "lower", "(", ")", ")", "\n", "", "if", "\"can\"", "in", "tokens", ":", "\n", "        ", "idx_can", "=", "tokens", ".", "index", "(", "\"can\"", ")", "\n", "if", "tokens", "[", "0", "]", "==", "\"not\"", ":", "\n", "            ", "return", "[", "' '", ".", "join", "(", "tokens", "[", "1", ":", "idx_can", "]", ")", ",", "\"can\"", ",", "\" \"", ".", "join", "(", "tokens", "[", "idx_can", "+", "1", ":", "]", ")", ",", "True", "]", "\n", "", "return", "[", "' '", ".", "join", "(", "tokens", "[", ":", "idx_can", "]", ")", ",", "\"can\"", ",", "\" \"", ".", "join", "(", "tokens", "[", "idx_can", "+", "1", ":", "]", ")", ",", "False", "]", "\n", "", "if", "len", "(", "tokens", ")", "==", "2", "and", "tokens", "[", "1", "]", "!=", "\"work\"", ":", "\n", "        ", "for", "synset", "in", "get_synsets", "(", "tokens", "[", "1", "]", ")", ":", "\n", "            ", "if", "synset", ".", "pos", "(", ")", "==", "\"v\"", ":", "\n", "                ", "return", "[", "tokens", "[", "0", "]", ",", "\"can\"", ",", "tokens", "[", "1", "]", ",", "False", "]", "\n", "", "", "", "if", "len", "(", "tokens", ")", "==", "3", ":", "\n", "        ", "synsets", "=", "get_synsets", "(", "tokens", "[", "1", "]", ")", "\n", "# We want a verb!", "\n", "for", "synset", "in", "synsets", ":", "\n", "            ", "if", "synset", ".", "pos", "(", ")", "==", "\"v\"", ":", "\n", "                ", "return", "[", "tokens", "[", "0", "]", ",", "tokens", "[", "1", "]", ",", "tokens", "[", "2", "]", ",", "False", "]", "\n", "", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_synsets": [[68, 76], ["nltk.corpus.wordnet.synsets", "logging.info"], "function", ["None"], ["", "def", "get_synsets", "(", "word", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "try", ":", "\n", "            ", "synsets", "=", "wn", ".", "synsets", "(", "word", ")", "\n", "break", "\n", "", "except", "OSError", "as", "_", ":", "\n", "            ", "logging", ".", "info", "(", "\"Failed in finding synsets\"", ")", "\n", "", "", "return", "synsets", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule._try_extend": [[78, 89], ["sentence.find", "sentence[].strip", "len"], "function", ["None"], ["", "def", "_try_extend", "(", "subj", ",", "pred", ",", "obj", ",", "sentence", ")", ":", "\n", "# works for short sentences", "\n", "# But some problems with adjectives", "\n", "# eg african people have big nose and lips", "\n", "    ", "end", "=", "obj", "+", "\" and \"", "\n", "pos", "=", "sentence", ".", "find", "(", "end", ")", "\n", "if", "pos", "!=", "-", "1", ":", "\n", "        ", "new_obj", "=", "sentence", "[", "pos", "+", "len", "(", "end", ")", ":", "]", ".", "strip", "(", ")", "\n", "if", "\" \"", "not", "in", "new_obj", ":", "\n", "            ", "return", "subj", ",", "pred", ",", "new_obj", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.start_corenlp_client": [[91, 108], ["stanfordnlp.server.CoreNLPClient"], "function", ["None"], ["", "def", "start_corenlp_client", "(", ")", ":", "\n", "    ", "corenlp_client", "=", "CoreNLPClient", "(", "\n", "start_server", "=", "True", ",", "\n", "endpoint", "=", "'http://localhost:9000'", ",", "\n", "memory", "=", "MEMORY_CORENLP", ",", "\n", "threads", "=", "50", ",", "\n", "timeout", "=", "10000000", ",", "\n", "annotators", "=", "[", "'openie'", "]", ",", "\n", "output_format", "=", "\"json\"", ",", "\n", "properties", "=", "{", "'annotators'", ":", "'openie'", ",", "\n", "'inputFormat'", ":", "'text'", ",", "\n", "'outputFormat'", ":", "'json'", ",", "\n", "'serializer'", ":", "'edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer'", ",", "\n", "'openie.affinity_probability_cap'", ":", "'1.0'", ",", "\n", "\"openie.max_entailments_per_clause\"", ":", "\"500\"", "}", ")", "\n", "corenlp_client", ".", "TIMEOUT", "=", "100", "\n", "return", "corenlp_client", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.remove_punctuation_from_suggestion": [[110, 112], ["suggestion[].replace().replace().replace", "suggestion[].replace().replace", "suggestion[].replace"], "function", ["None"], ["", "def", "remove_punctuation_from_suggestion", "(", "suggestion", ")", ":", "\n", "    ", "return", "suggestion", "[", "STATEMENT", "]", ".", "replace", "(", "\".\"", ",", "\"\"", ")", ".", "replace", "(", "\"?\"", ",", "\"\"", ")", ".", "replace", "(", "\"!\"", ",", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.join_sentences_from_batch": [[114, 117], ["openie_fact_generator_submodule.remove_punctuation_from_suggestion"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.remove_punctuation_from_suggestion"], ["", "def", "join_sentences_from_batch", "(", "batch", ")", ":", "\n", "    ", "sentences", "=", "\" . \"", ".", "join", "(", "[", "remove_punctuation_from_suggestion", "(", "x", ")", "for", "x", "in", "batch", "]", ")", "+", "\" . \"", "\n", "return", "sentences", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.replace_special_characters": [[119, 125], ["sentence.replace.replace"], "function", ["None"], ["", "def", "replace_special_characters", "(", "sentence", ")", ":", "\n", "    ", "replacements", "=", "[", "[", "\"-LRB-\"", ",", "\"(\"", "]", ",", "[", "\"-RRB-\"", ",", "\")\"", "]", ",", "[", "\"-LSB-\"", ",", "\"[\"", "]", ",", "[", "\"-RSB-\"", ",", "\"]\"", "]", ",", "[", "\"-LCB-\"", ",", "\"{\"", "]", ",", "[", "\"-RCB-\"", ",", "\"}\"", "]", ",", "\n", "[", "\"&amp;\"", ",", "\"&\"", "]", "]", "\n", "for", "to_replace", ",", "replacement", "in", "replacements", ":", "\n", "        ", "sentence", "=", "sentence", ".", "replace", "(", "to_replace", ",", "replacement", ")", "\n", "", "return", "sentence", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.annotate_sentences": [[127, 145], ["start_corenlp_client.annotate", "logging.info", "batches.append", "dict", "logging.info", "batches.append", "dict", "logging.info", "start_corenlp_client.stop", "openie_fact_generator_submodule.start_corenlp_client", "batches.append", "dict"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.annotate", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.start_corenlp_client"], ["", "def", "annotate_sentences", "(", "corenlp_client", ",", "sentences", ",", "batch", ",", "batches", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "out", "=", "corenlp_client", ".", "annotate", "(", "sentences", ")", "\n", "", "except", "TimeoutException", ":", "\n", "        ", "logging", ".", "info", "(", "\"Timeout with: \"", "+", "sentences", ")", "\n", "batches", ".", "append", "(", "batch", ")", "\n", "out", "=", "dict", "(", ")", "\n", "", "except", "AnnotationException", ":", "\n", "        ", "logging", ".", "info", "(", "\"Annotation Error with: \"", "+", "sentences", ")", "\n", "batches", ".", "append", "(", "batch", ")", "\n", "out", "=", "dict", "(", ")", "\n", "", "except", "stanfordnlp", ".", "server", ".", "client", ".", "PermanentlyFailedException", ":", "\n", "        ", "logging", ".", "info", "(", "\"Permanent failed\"", ")", "\n", "corenlp_client", ".", "stop", "(", ")", "\n", "corenlp_client", "=", "start_corenlp_client", "(", ")", "\n", "batches", ".", "append", "(", "batch", ")", "\n", "out", "=", "dict", "(", ")", "\n", "", "return", "corenlp_client", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_statement_from_corenlp_sentence": [[147, 149], ["filter"], "function", ["None"], ["", "def", "get_statement_from_corenlp_sentence", "(", "sentence", ")", ":", "\n", "    ", "return", "\" \"", ".", "join", "(", "filter", "(", "lambda", "x", ":", "x", "!=", "\".\"", ",", "[", "x", "[", "\"word\"", "]", "for", "x", "in", "sentence", "[", "\"tokens\"", "]", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.remove_empty_sentences": [[151, 154], ["list", "filter", "len"], "function", ["None"], ["", "def", "remove_empty_sentences", "(", "full_sentence", ")", ":", "\n", "    ", "full_sentence", "=", "list", "(", "filter", "(", "lambda", "x", ":", "len", "(", "x", "[", "STATEMENT", "]", ")", ">", "0", ",", "full_sentence", ")", ")", "\n", "return", "full_sentence", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_spo_from_triple": [[156, 161], ["None"], "function", ["None"], ["", "def", "get_spo_from_triple", "(", "triple", ")", ":", "\n", "    ", "subject", "=", "triple", "[", "\"subject\"", "]", "\n", "obj", "=", "triple", "[", "\"object\"", "]", "\n", "predicate", "=", "triple", "[", "\"relation\"", "]", "\n", "return", "[", "subject", ",", "predicate", ",", "obj", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_position_subject": [[163, 170], ["suggestion[].find", "suggestion[].find", "suggestion[].find", "suggestion[].find", "suggestion[].find"], "function", ["None"], ["", "def", "get_position_subject", "(", "subject", ",", "suggestion", ")", ":", "\n", "    ", "position_subject", "=", "suggestion", "[", "STATEMENT", "]", ".", "find", "(", "subject", ")", "\n", "if", "suggestion", "[", "STATEMENT", "]", ".", "find", "(", "\"a \"", "+", "subject", ")", "!=", "-", "1", ":", "\n", "        ", "position_subject", "=", "suggestion", "[", "STATEMENT", "]", ".", "find", "(", "\"a \"", "+", "subject", ")", "\n", "", "elif", "suggestion", "[", "STATEMENT", "]", ".", "find", "(", "\"the \"", "+", "subject", ")", "!=", "-", "1", ":", "\n", "        ", "position_subject", "=", "suggestion", "[", "STATEMENT", "]", ".", "find", "(", "\"the \"", "+", "subject", ")", "\n", "", "return", "position_subject", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_negativity": [[172, 179], ["suggestion[].is_negative"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.is_negative"], ["", "def", "get_negativity", "(", "suggestion", ")", ":", "\n", "    ", "negative", "=", "False", "\n", "if", "suggestion", "[", "PATTERN", "]", "is", "not", "None", ":", "\n", "        ", "negative", "=", "suggestion", "[", "PATTERN", "]", ".", "is_negative", "(", ")", "\n", "", "if", "suggestion", "[", "NEGATIVITY", "]", ":", "\n", "        ", "negative", "=", "True", "\n", "", "return", "negative", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.contains_than_in_object": [[181, 188], ["None"], "function", ["None"], ["", "def", "contains_than_in_object", "(", "corenlp_result_sentence", ")", ":", "\n", "    ", "contains_than", "=", "False", "\n", "for", "triple", "in", "corenlp_result_sentence", "[", "\"openie\"", "]", ":", "\n", "        ", "obj", "=", "triple", "[", "\"object\"", "]", "\n", "if", "\" than \"", "in", "obj", ":", "\n", "            ", "contains_than", "=", "True", "\n", "", "", "return", "contains_than", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_number_words": [[190, 193], ["maxi_obj.count"], "function", ["None"], ["", "def", "get_number_words", "(", "maxi_obj", ")", ":", "\n", "    ", "maxi_length_object", "=", "maxi_obj", ".", "count", "(", "\" \"", ")", "+", "1", "\n", "return", "maxi_length_object", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_maximal_object": [[195, 206], ["predicate.count", "openie_fact_generator_submodule.get_number_words", "obj.count"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_number_words"], ["", "def", "get_maximal_object", "(", "corenlp_result_sentence", ",", "maxi_length_predicate", ")", ":", "\n", "    ", "maxi_length_object", "=", "1", "\n", "maxi_obj", "=", "\"\"", "\n", "for", "triple", "in", "corenlp_result_sentence", "[", "\"openie\"", "]", ":", "\n", "        ", "predicate", "=", "triple", "[", "\"relation\"", "]", "\n", "obj", "=", "triple", "[", "\"object\"", "]", "\n", "if", "maxi_length_predicate", "==", "predicate", ".", "count", "(", "\" \"", ")", "+", "1", ":", "\n", "            ", "if", "obj", ".", "count", "(", "\" \"", ")", "+", "1", ">", "maxi_length_object", ":", "\n", "                ", "maxi_length_object", "=", "get_number_words", "(", "obj", ")", "\n", "maxi_obj", "=", "obj", "\n", "", "", "", "return", "maxi_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_maximal_length_of_a_predicate": [[208, 215], ["max", "openie_fact_generator_submodule.get_number_words"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_number_words"], ["", "def", "get_maximal_length_of_a_predicate", "(", "corenlp_result_sentence", ")", ":", "\n", "    ", "maxi_length_predicate", "=", "1", "\n", "for", "triple", "in", "corenlp_result_sentence", "[", "\"openie\"", "]", ":", "\n", "        ", "predicate", "=", "triple", "[", "\"relation\"", "]", "\n", "maxi_length_predicate", "=", "max", "(", "get_number_words", "(", "predicate", ")", ",", "\n", "maxi_length_predicate", ")", "\n", "", "return", "maxi_length_predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.are_different_sentences": [[217, 221], ["regex_no_alpha.sub", "regex_no_alpha.sub"], "function", ["None"], ["", "def", "are_different_sentences", "(", "regex_no_alpha", ",", "statement_extracted_from_openie", ",", "suggestion", ")", ":", "\n", "    ", "batch_and_current_sentence_do_not_match", "=", "regex_no_alpha", ".", "sub", "(", "\"\"", ",", "statement_extracted_from_openie", ")", "!=", "regex_no_alpha", ".", "sub", "(", "\"\"", ",", "suggestion", "[", "STATEMENT", "]", ")", "\n", "return", "batch_and_current_sentence_do_not_match", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_modality": [[223, 238], ["openie_fact_generator_submodule.get_position_subject", "[].strip", "openie_fact_generator_submodule.get_number_words", "quasimodo.data_structures.modality.Modality", "quasimodo.data_structures.modality.Modality", "len"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_position_subject", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.get_number_words"], ["", "def", "get_modality", "(", "subject", ",", "obj", ",", "maxi_length_object", ",", "maxi_obj", ",", "suggestion", ")", ":", "\n", "    ", "modality_temp", "=", "\"\"", "\n", "if", "maxi_length_object", "!=", "get_number_words", "(", "obj", ")", ":", "\n", "        ", "modality_temp", "=", "\"TBC[\"", "+", "maxi_obj", "+", "\"]\"", "\n", "", "position_subject", "=", "get_position_subject", "(", "subject", ",", "suggestion", ")", "\n", "before_subject", "=", "suggestion", "[", "STATEMENT", "]", "[", ":", "position_subject", "]", ".", "strip", "(", ")", "\n", "if", "position_subject", "!=", "0", "and", "before_subject", "not", "in", "FORBIDDEN_BEFORE_SUBJECT", "and", "before_subject", "[", ":", "4", "]", "not", "in", "[", "\"why \"", ",", "\"how \"", "]", ":", "\n", "        ", "if", "len", "(", "modality_temp", ")", ">", "0", ":", "\n", "            ", "modality_temp", "+=", "\" // \"", "\n", "", "modality", "=", "Modality", "(", "modality_temp", "+", "\"some[subj\"", "+", "\"/\"", "+", "before_subject", "+", "\"]\"", ")", "\n", "", "else", ":", "\n", "        ", "modality", "=", "Modality", "(", "modality_temp", ")", "\n", "", "return", "modality", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.__init__": [[10, 14], ["quasimodo.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "self", ".", "_name", "=", "\"Question File Submodule\"", "\n", "self", ".", "_filename", "=", "None", "# To define", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule._read_questions": [[15, 21], ["open", "questions.append", "line.strip().lower", "line.strip"], "methods", ["None"], ["", "def", "_read_questions", "(", "self", ")", ":", "\n", "        ", "questions", "=", "[", "]", "\n", "with", "open", "(", "self", ".", "_filename", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "questions", ".", "append", "(", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ")", "\n", "", "", "return", "questions", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule._to_suggestion": [[22, 70], ["len", "question.split", "question.startswith", "quasimodo.patterns.pattern_google.PatternGoogle", "question.startswith", "question.startswith", "quasimodo.patterns.pattern_google.PatternGoogle", "question.find", "question.find", "len", "question.startswith", "question.startswith", "quasimodo.patterns.pattern_google.PatternGoogle", "question.startswith", "question.startswith", "quasimodo.patterns.pattern_google.PatternGoogle", "question.startswith", "question.startswith", "quasimodo.patterns.pattern_google.PatternGoogle", "question.startswith", "quasimodo.patterns.pattern_google.PatternGoogle"], "methods", ["None"], ["", "def", "_to_suggestion", "(", "self", ",", "question", ",", "subjects", ")", ":", "\n", "# No pattern, rank 1 by default", "\n", "# We take the subject the closest to the beginning", "\n", "# and the longest in case of equality", "\n", "        ", "min_pos", "=", "len", "(", "question", ")", "\n", "length", "=", "0", "\n", "subject_final", "=", "\"\"", "\n", "# Only check the third word for now", "\n", "for", "word", "in", "question", ".", "split", "(", "\" \"", ")", "[", "2", ":", "3", "]", ":", "\n", "            ", "if", "word", "in", "subjects", ":", "\n", "                ", "for", "subject", "in", "subjects", "[", "word", "]", ":", "\n", "                    ", "temp0", "=", "question", ".", "find", "(", "subject", "[", "0", "]", ")", "\n", "temp1", "=", "question", ".", "find", "(", "subject", "[", "1", "]", ")", "\n", "len_temp", "=", "len", "(", "subject", "[", "0", "]", ")", "\n", "if", "temp0", "!=", "-", "1", "and", "temp0", "<", "min_pos", ":", "\n", "                        ", "min_pos", "=", "temp0", "\n", "subject_final", "=", "subject", "[", "0", "]", "\n", "length", "=", "len_temp", "\n", "", "elif", "temp0", "!=", "-", "1", "and", "temp0", "==", "min_pos", "and", "len_temp", ">", "length", ":", "\n", "                        ", "subject_final", "=", "subject", "[", "0", "]", "\n", "length", "=", "len_temp", "\n", "", "elif", "temp1", "!=", "-", "1", "and", "temp1", "<", "min_pos", ":", "\n", "                        ", "min_pos", "=", "temp1", "\n", "subject_final", "=", "subject", "[", "0", "]", "\n", "length", "=", "len_temp", "\n", "", "elif", "temp1", "!=", "-", "1", "and", "temp1", "==", "min_pos", "and", "len_temp", ">", "length", ":", "\n", "                        ", "subject_final", "=", "subject", "[", "0", "]", "\n", "length", "=", "len_temp", "\n", "", "", "if", "subject_final", "!=", "\"\"", ":", "\n", "                    ", "break", "\n", "", "", "", "pattern", "=", "None", "\n", "if", "question", ".", "startswith", "(", "\"why are \"", ")", "and", "not", "question", ".", "startswith", "(", "\"why are not\"", ")", ":", "\n", "            ", "pattern", "=", "PatternGoogle", "(", "\"why are <SUBJS>\"", ")", "\n", "", "elif", "question", ".", "startswith", "(", "\"why is \"", ")", "and", "not", "question", ".", "startswith", "(", "\"why is not\"", ")", ":", "\n", "            ", "pattern", "=", "PatternGoogle", "(", "\"why is <SUBJ>\"", ")", "\n", "", "elif", "question", ".", "startswith", "(", "\"why does \"", ")", "and", "not", "question", ".", "startswith", "(", "\"why does not\"", ")", ":", "\n", "            ", "pattern", "=", "PatternGoogle", "(", "\"why does <SUBJ>\"", ")", "\n", "", "elif", "question", ".", "startswith", "(", "\"why do \"", ")", "and", "not", "question", ".", "startswith", "(", "\"why do not\"", ")", ":", "\n", "            ", "pattern", "=", "PatternGoogle", "(", "\"why do <SUBJS>\"", ")", "\n", "", "elif", "question", ".", "startswith", "(", "\"why can \"", ")", ":", "\n", "            ", "pattern", "=", "PatternGoogle", "(", "\"why can <SUBJS>\"", ",", "\"CAN\"", ")", "\n", "", "elif", "question", ".", "startswith", "(", "\"why can't \"", ")", ":", "\n", "            ", "pattern", "=", "PatternGoogle", "(", "\"why can't <SUBJS>\"", ",", "\"CAN\"", ",", "True", ")", "\n", "", "return", "[", "question", ",", "1", ",", "pattern", ",", "subject_final", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.process": [[71, 129], ["logging.info", "question_file_submodule.QuestionFileSubmodule._read_questions", "logging.info", "logging.info", "input_interface.get_subjects", "dict", "logging.info", "question_file_submodule.QuestionFileSubmodule._openie_from_file", "question_file_submodule.QuestionFileSubmodule.get_generated_facts", "input_interface.add_generated_facts().add_generated_facts", "question_file_submodule.QuestionFileSubmodule.get_name", "input_interface.has_subjects", "re.sub", "question.split", "question_file_submodule.QuestionFileSubmodule._to_suggestion", "questions2.append", "x.get", "quasimodo.inflect_accessor.DEFAULT_INFLECT.to_plural", "subj[].split", "d_subj[].append", "subj[].split", "input_interface.add_generated_facts", "str", "str", "x.get", "d_subj[].append", "str", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule._read_questions", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule._openie_from_file", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.openie_fact_generator_submodule.OpenIEFactGeneratorSubmodule.get_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.referencable_interface.ReferencableInterface.get_name", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.has_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule._to_suggestion", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.inflect_accessor.InflectAccessor.to_plural", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.add_generated_facts", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "process", "(", "self", ",", "input_interface", ")", ":", "\n", "# Needs subjects", "\n", "        ", "logging", ".", "info", "(", "\"Start submodule %s\"", ",", "self", ".", "get_name", "(", ")", ")", "\n", "if", "not", "input_interface", ".", "has_subjects", "(", ")", ":", "\n", "            ", "return", "input_interface", "\n", "\n", "# Read questions", "\n", "", "questions", "=", "self", ".", "_read_questions", "(", ")", "\n", "# Remove question mark at the end", "\n", "questions", "=", "[", "re", ".", "sub", "(", "\"\\?\"", ",", "\"\"", ",", "x", ")", "for", "x", "in", "questions", "]", "\n", "logging", ".", "info", "(", "\"There are \"", "+", "str", "(", "len", "(", "questions", ")", ")", "+", "\" questions\"", ")", "\n", "# Filter questions", "\n", "bad_words", "=", "[", "\"i\"", ",", "\"this\"", ",", "\"your\"", ",", "\"you\"", ",", "\"this\"", ",", "\"that\"", ",", "\"it\"", ",", "\"me\"", ",", "\n", "\"him\"", ",", "\"her\"", ",", "\"them\"", ",", "\"us\"", ",", "\"we\"", ",", "\"they\"", ",", "\"my\"", ",", "\"their\"", ",", "\n", "\"our\"", ",", "\"mine\"", ",", "\"yours\"", ",", "\"there\"", ",", "\"not\"", ",", "\"doesn't\"", ",", "\n", "\"don't\"", ",", "\"isn't\"", ",", "\"aren't\"", ",", "\"he\"", ",", "\"she\"", ",", "\"those\"", "]", "\n", "questions2", "=", "[", "]", "\n", "for", "question", "in", "questions", ":", "\n", "            ", "bad", "=", "False", "\n", "for", "word", "in", "question", ".", "split", "(", "\" \"", ")", ":", "\n", "                ", "if", "word", "in", "bad_words", ":", "\n", "                    ", "bad", "=", "True", "\n", "break", "\n", "", "", "if", "not", "bad", ":", "\n", "                ", "questions2", ".", "append", "(", "question", ")", "\n", "", "", "questions", "=", "questions2", "\n", "logging", ".", "info", "(", "\"There are \"", "+", "str", "(", "len", "(", "questions", ")", ")", "+", "\" questions after filtering\"", ")", "\n", "\n", "# Create the suggestions", "\n", "# A suggestion is (question, rank (low is better), pattern, subject)", "\n", "subjects", "=", "input_interface", ".", "get_subjects", "(", ")", "\n", "# Preprocess subjects", "\n", "subjects", "=", "[", "(", "x", ".", "get", "(", ")", ",", "DEFAULT_INFLECT", ".", "to_plural", "(", "x", ".", "get", "(", ")", ")", ")", "\n", "for", "x", "in", "subjects", "]", "\n", "d_subj", "=", "dict", "(", ")", "\n", "for", "subj", "in", "subjects", ":", "\n", "            ", "temp", "=", "subj", "[", "0", "]", ".", "split", "(", "\" \"", ")", "[", "0", "]", "\n", "if", "temp", "in", "d_subj", ":", "\n", "                ", "d_subj", "[", "temp", "]", ".", "append", "(", "subj", ")", "\n", "", "else", ":", "\n", "                ", "d_subj", "[", "temp", "]", "=", "[", "subj", "]", "\n", "", "temp1", "=", "subj", "[", "1", "]", ".", "split", "(", "\" \"", ")", "[", "0", "]", "\n", "if", "temp1", "!=", "temp", ":", "\n", "                ", "if", "temp1", "in", "d_subj", ":", "\n", "                    ", "d_subj", "[", "temp1", "]", ".", "append", "(", "subj", ")", "\n", "", "else", ":", "\n", "                    ", "d_subj", "[", "temp1", "]", "=", "[", "subj", "]", "\n", "", "", "", "suggestions", "=", "[", "self", ".", "_to_suggestion", "(", "question", ",", "d_subj", ")", "\n", "for", "question", "in", "questions", "]", "\n", "# Remove unknown subjects", "\n", "suggestions", "=", "[", "x", "for", "x", "in", "suggestions", "if", "x", "[", "3", "]", "!=", "\"\"", "]", "\n", "logging", ".", "info", "(", "\"There are \"", "+", "str", "(", "len", "(", "suggestions", ")", ")", "+", "\" questions after subject filtering\"", ")", "\n", "\n", "# OPENIE part", "\n", "generated_facts_bis", "=", "self", ".", "_openie_from_file", "(", "suggestions", ")", "\n", "generated_facts", "=", "self", ".", "get_generated_facts", "(", "suggestions", ")", "\n", "\n", "return", "input_interface", ".", "add_generated_facts", "(", "generated_facts_bis", ")", ".", "add_generated_facts", "(", "generated_facts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean": [[130, 133], ["logging.info", "super().clean"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.question_file_submodule.QuestionFileSubmodule.clean"], ["", "def", "clean", "(", "self", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Cleaning File\"", ")", "\n", "super", "(", ")", ".", "clean", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_server.get_all_queries": [[17, 44], ["enumerate", "input_interface.get_patterns", "input_interface.get_subjects", "input_interface.get_subjects", "input_interface.get_patterns", "logging.info", "logging.info", "pattern.to_str_subject", "str", "str", "str", "str", "len", "len"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.get_subjects", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.trainer.get_patterns", "home.repos.pwc.inspect_result.Aunsiels_CSK.patterns.pattern_google.PatternGoogle.to_str_subject"], ["def", "get_all_queries", "(", "input_interface", ")", ":", "\n", "    ", "if", "PATTERN_FIRST", ":", "\n", "        ", "collection_first", "=", "input_interface", ".", "get_patterns", "(", "\"google-autocomplete\"", ")", "\n", "collection_second", "=", "input_interface", ".", "get_subjects", "(", ")", "\n", "", "else", ":", "\n", "        ", "collection_first", "=", "input_interface", ".", "get_subjects", "(", ")", "\n", "collection_second", "=", "input_interface", ".", "get_patterns", "(", "\"google-autocomplete\"", ")", "\n", "", "for", "i", ",", "first_collection_element", "in", "enumerate", "(", "collection_first", ")", ":", "\n", "        ", "if", "PATTERN_FIRST", ":", "\n", "            ", "logging", ".", "info", "(", "\"Going for pattern \"", "+", "str", "(", "first_collection_element", ")", "+", "\n", "\"[\"", "+", "str", "(", "i", "/", "len", "(", "collection_first", ")", "*", "100.0", ")", "+", "\"%]\"", ")", "\n", "", "else", ":", "\n", "            ", "logging", ".", "info", "(", "\"Going for subject \"", "+", "str", "(", "first_collection_element", ")", "+", "\n", "\"[\"", "+", "str", "(", "i", "/", "len", "(", "collection_first", ")", "*", "100.0", ")", "+", "\"%]\"", ")", "\n", "", "for", "second_collection_element", "in", "collection_second", ":", "\n", "            ", "if", "PATTERN_FIRST", ":", "\n", "                ", "pattern", "=", "first_collection_element", "\n", "subject", "=", "second_collection_element", "\n", "", "else", ":", "\n", "                ", "pattern", "=", "second_collection_element", "\n", "subject", "=", "first_collection_element", "\n", "# Generate the query", "\n", "", "base_query", "=", "pattern", ".", "to_str_subject", "(", "subject", ")", "\n", "base_sentences", "=", "[", "]", "\n", "# Artificially add more suggestions", "\n", "to_process", "=", "[", "[", "]", "]", "\n", "yield", "base_query", "+", "\" \"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_server.get_hello": [[66, 69], ["app.route"], "function", ["None"], ["@", "app", ".", "route", "(", "\"/\"", ")", "\n", "def", "get_hello", "(", ")", ":", "\n", "    ", "return", "\"Hello world\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_server.get_query": [[71, 77], ["app.route", "query_queue.get_nowait"], "function", ["None"], ["", "@", "app", ".", "route", "(", "\"/get_query\"", ")", "\n", "def", "get_query", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "return", "query_queue", ".", "get_nowait", "(", ")", "\n", "", "except", "Empty", ":", "\n", "        ", "return", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.browser_autocomplete_server.add_new": [[79, 85], ["app.route", "flask.request.get_json", "query_queue.put"], "function", ["None"], ["", "", "@", "app", ".", "route", "(", "\"/add_new\"", ",", "methods", "=", "[", "\"POST\"", "]", ")", "\n", "def", "add_new", "(", ")", ":", "\n", "    ", "data", "=", "request", ".", "get_json", "(", ")", "\n", "for", "new_query", "in", "data", "[", "\"new_queries\"", "]", ":", "\n", "        ", "query_queue", ".", "put", "(", "new_query", ")", "\n", "", "return", "\"OK\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_generation.reddit_questions_submodule.RedditQuestionsSubmodule.__init__": [[15, 20], ["quasimodo.assertion_generation.question_file_submodule.QuestionFileSubmodule.__init__"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module_reference", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "module_reference", ")", "\n", "# Reddit questions are obtained from a dump of Reddit", "\n", "self", ".", "_filename", "=", "FILENAME", "\n", "self", ".", "_name", "=", "\"Reddit Questions\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.file_cache.FileCache.__init__": [[7, 11], ["os.path.exists", "os.makedirs"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cache_dir", ")", ":", "\n", "        ", "self", ".", "cache_dir", "=", "cache_dir", "+", "\"/\"", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "cache_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "cache_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.file_cache.FileCache.write_cache": [[12, 17], ["query.replace().replace().replace", "open", "f.write", "query.replace().replace", "query.replace", "str", "str"], "methods", ["None"], ["", "", "def", "write_cache", "(", "self", ",", "query", ",", "suggestions", ")", ":", "\n", "        ", "filename", "=", "self", ".", "cache_dir", "+", "query", ".", "replace", "(", "\" \"", ",", "\"-\"", ")", ".", "replace", "(", "\"'\"", ",", "\"_\"", ")", ".", "replace", "(", "\"/\"", ",", "\"-\"", ")", "\n", "with", "open", "(", "filename", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "for", "suggestion", "in", "suggestions", ":", "\n", "                ", "f", ".", "write", "(", "str", "(", "suggestion", "[", "0", "]", ")", "+", "\"\\t\"", "+", "str", "(", "suggestion", "[", "1", "]", ")", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.file_cache.FileCache.read_cache": [[18, 29], ["os.path.isfile", "query.replace().replace().replace", "open", "query.replace().replace", "line.strip().split", "suggestions.append", "query.replace", "line.strip", "float"], "methods", ["None"], ["", "", "", "def", "read_cache", "(", "self", ",", "query", ")", ":", "\n", "        ", "filename", "=", "self", ".", "cache_dir", "+", "query", ".", "replace", "(", "\" \"", ",", "\"-\"", ")", ".", "replace", "(", "\"'\"", ",", "\"_\"", ")", ".", "replace", "(", "\"/\"", ",", "\"-\"", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "filename", ")", ":", "\n", "            ", "suggestions", "=", "[", "]", "\n", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "                ", "for", "line", "in", "f", ":", "\n", "                    ", "suggestion", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "suggestions", ".", "append", "(", "(", "suggestion", "[", "0", "]", ",", "float", "(", "suggestion", "[", "1", "]", ")", ")", ")", "\n", "", "", "return", "suggestions", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.file_cache.FileCache.delete_cache": [[30, 34], ["shutil.rmtree"], "methods", ["None"], ["", "", "def", "delete_cache", "(", "self", ")", ":", "\n", "# Only delete if we are sure it is a test", "\n", "        ", "if", "\"test\"", "in", "self", ".", "cache_dir", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "self", ".", "cache_dir", ",", "ignore_errors", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.file_cache.FileCache.read_regex": [[35, 37], ["None"], "methods", ["None"], ["", "", "def", "read_regex", "(", "self", ",", "regex", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.file_cache.FileCache.read_all": [[38, 40], ["None"], "methods", ["None"], ["", "def", "read_all", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.CachableQueryingSystem.__init__": [[56, 59], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cache", ")", ":", "\n", "        ", "self", ".", "local_cache", "=", "{", "}", "\n", "self", ".", "cache", "=", "cache", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.CachableQueryingSystem.read_cache": [[60, 72], ["cachable_querying_system.to_filename", "cachable_querying_system.get_regex_from_query", "cachable_querying_system.CachableQueryingSystem.local_cache.get", "cachable_querying_system.CachableQueryingSystem.cache.read_regex"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.to_filename", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.get_regex_from_query", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_regex"], ["", "def", "read_cache", "(", "self", ",", "query", ")", ":", "\n", "        ", "filename", "=", "to_filename", "(", "query", ")", "\n", "if", "filename", "in", "self", ".", "local_cache", ":", "\n", "            ", "return", "self", ".", "local_cache", "[", "filename", "]", ",", "True", "\n", "", "else", ":", "\n", "            ", "filename_regex", "=", "get_regex_from_query", "(", "filename", ")", "\n", "if", "self", ".", "local_cache", ".", "get", "(", "\"query_regex\"", ",", "\"\"", ")", "!=", "filename_regex", ":", "\n", "                ", "self", ".", "local_cache", "=", "self", ".", "cache", ".", "read_regex", "(", "filename_regex", ")", "\n", "self", ".", "local_cache", "[", "\"query_regex\"", "]", "=", "filename_regex", "\n", "", "", "if", "filename", "in", "self", ".", "local_cache", ":", "\n", "            ", "return", "self", ".", "local_cache", "[", "filename", "]", ",", "True", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.CachableQueryingSystem.write_cache": [[73, 76], ["cachable_querying_system.to_filename", "cachable_querying_system.CachableQueryingSystem.cache.write_cache"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.to_filename", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache"], ["", "def", "write_cache", "(", "self", ",", "query", ",", "suggestions", ")", ":", "\n", "        ", "filename", "=", "to_filename", "(", "query", ")", "\n", "self", ".", "cache", ".", "write_cache", "(", "filename", ",", "suggestions", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.get_regex_from_query": [[8, 15], ["cachable_querying_system.get_regex_from_query_by_pattern", "cachable_querying_system.get_regex_from_query_by_subject"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.get_regex_from_query_by_pattern", "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.get_regex_from_query_by_subject"], ["def", "get_regex_from_query", "(", "filename", ")", ":", "\n", "# Remove the pattern to be get more results", "\n", "    ", "if", "PATTERN_FIRST", ":", "\n", "        ", "filename_regex", "=", "get_regex_from_query_by_pattern", "(", "filename", ")", "\n", "", "else", ":", "\n", "        ", "filename_regex", "=", "get_regex_from_query_by_subject", "(", "filename", ")", "\n", "", "return", "filename_regex", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.get_regex_from_query_by_subject": [[17, 32], ["filename.split", "len", "len"], "function", ["None"], ["", "def", "get_regex_from_query_by_subject", "(", "filename", ")", ":", "\n", "    ", "filename_split", "=", "filename", ".", "split", "(", "\"-\"", ")", "\n", "if", "len", "(", "filename_split", ")", "<=", "1", ":", "\n", "        ", "filename_regex", "=", "filename", "\n", "", "else", ":", "\n", "        ", "if", "filename_split", "[", "0", "]", "in", "[", "\"why\"", ",", "\"how\"", "]", ":", "\n", "            ", "if", "filename_split", "[", "1", "]", "in", "possible_second_word_question", "and", "len", "(", "filename_split", ")", ">=", "3", ":", "\n", "                ", "if", "filename_split", "[", "2", "]", "[", "-", "1", "]", "==", "\"s\"", ":", "\n", "                    ", "filename_split", "[", "2", "]", "=", "filename_split", "[", "2", "]", "[", ":", "-", "1", "]", "\n", "", "filename_regex", "=", "\"-\"", ".", "join", "(", "filename_split", "[", "2", ":", "]", ")", "\n", "", "else", ":", "\n", "                ", "filename_regex", "=", "\"-\"", ".", "join", "(", "filename_split", "[", "1", ":", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "filename_regex", "=", "filename", "\n", "", "", "return", "filename_regex", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.get_regex_from_query_by_pattern": [[34, 47], ["filename.split", "len"], "function", ["None"], ["", "def", "get_regex_from_query_by_pattern", "(", "filename", ")", ":", "\n", "    ", "filename_split", "=", "filename", ".", "split", "(", "\"-\"", ")", "\n", "if", "len", "(", "filename_split", ")", "<=", "1", ":", "\n", "        ", "filename_regex", "=", "filename", "\n", "", "else", ":", "\n", "        ", "if", "filename_split", "[", "0", "]", "in", "[", "\"why\"", ",", "\"how\"", "]", ":", "\n", "            ", "if", "filename_split", "[", "1", "]", "in", "possible_second_word_question", ":", "\n", "                ", "filename_regex", "=", "\"-\"", ".", "join", "(", "filename_split", "[", ":", "2", "]", ")", "+", "\"-\"", "\n", "", "else", ":", "\n", "                ", "filename_regex", "=", "filename_split", "[", "0", "]", "+", "\"-[^\"", "+", "\"|\"", ".", "join", "(", "possible_second_word_question", ")", "+", "\"][^-]*-\"", "\n", "", "", "else", ":", "\n", "            ", "filename_regex", "=", "filename", "\n", "", "", "return", "filename_regex", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.cachable_querying_system.to_filename": [[49, 52], ["query.replace().replace().replace", "query.replace().replace", "query.replace"], "function", ["None"], ["", "def", "to_filename", "(", "query", ")", ":", "\n", "    ", "filename", "=", "query", ".", "replace", "(", "\" \"", ",", "\"-\"", ")", ".", "replace", "(", "\"'\"", ",", "\"_\"", ")", ".", "replace", "(", "\"/\"", ",", "\"-\"", ")", "\n", "return", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.__init__": [[17, 23], ["pymongo.MongoClient", "mongodb_cache.MongoDBCache.create_collection"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.create_collection"], ["    ", "def", "__init__", "(", "self", ",", "collection_name", ",", "mongodb_location", "=", "\"mongodb://localhost:27017/\"", ")", ":", "\n", "        ", "self", ".", "collection_name", "=", "collection_name", "\n", "mongodb_client", "=", "pymongo", ".", "MongoClient", "(", "mongodb_location", ")", "\n", "self", ".", "database", "=", "mongodb_client", "[", "\"CSKDB\"", "]", "\n", "self", ".", "collection", "=", "None", "\n", "self", ".", "create_collection", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.create_collection": [[24, 26], ["None"], "methods", ["None"], ["", "def", "create_collection", "(", "self", ")", ":", "\n", "        ", "self", ".", "collection", "=", "self", ".", "database", "[", "self", ".", "collection_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.exists_collection": [[27, 29], ["mongodb_cache.MongoDBCache.database.list_collection_names"], "methods", ["None"], ["", "def", "exists_collection", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "collection_name", "in", "self", ".", "database", ".", "list_collection_names", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.delete_cache": [[30, 34], ["mongodb_cache.MongoDBCache.collection.drop"], "methods", ["None"], ["", "def", "delete_cache", "(", "self", ")", ":", "\n", "        ", "if", "\"test\"", "in", "self", ".", "collection_name", "and", "self", ".", "collection", "is", "not", "None", ":", "\n", "            ", "self", ".", "collection", ".", "drop", "(", ")", "\n", "self", ".", "collection", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_cache": [[35, 38], ["mongodb_cache.transform_query", "mongodb_cache.MongoDBCache.collection.update_one"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.transform_query"], ["", "", "def", "write_cache", "(", "self", ",", "query", ",", "suggestions", ")", ":", "\n", "        ", "query", "=", "transform_query", "(", "query", ")", "\n", "self", ".", "collection", ".", "update_one", "(", "{", "\"query\"", ":", "query", "}", ",", "{", "\"$set\"", ":", "{", "\"suggestions\"", ":", "suggestions", "}", "}", ",", "upsert", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.write_many_cache": [[39, 42], ["map", "mongodb_cache.MongoDBCache.collection.insert_many", "mongodb_cache.transform_query"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.transform_query"], ["", "def", "write_many_cache", "(", "self", ",", "query_suggestions", ")", ":", "\n", "        ", "database_entry", "=", "map", "(", "lambda", "x", ":", "{", "\"query\"", ":", "transform_query", "(", "x", "[", "0", "]", ")", ",", "\"suggestions\"", ":", "x", "[", "1", "]", "}", ",", "query_suggestions", ")", "\n", "self", ".", "collection", ".", "insert_many", "(", "database_entry", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_cache": [[43, 50], ["mongodb_cache.transform_query", "mongodb_cache.MongoDBCache.collection.find_one"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.transform_query"], ["", "def", "read_cache", "(", "self", ",", "query", ")", ":", "\n", "        ", "query", "=", "transform_query", "(", "query", ")", "\n", "database_query", "=", "{", "\"query\"", ":", "query", "}", "\n", "result", "=", "self", ".", "collection", ".", "find_one", "(", "database_query", ",", "{", "\"suggestions\"", ":", "1", "}", ")", "\n", "if", "result", ":", "\n", "            ", "return", "result", "[", "\"suggestions\"", "]", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_regex": [[51, 55], ["mongodb_cache.MongoDBCache.collection.find", "mongodb_cache.results_to_query_dictionary"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.results_to_query_dictionary"], ["", "def", "read_regex", "(", "self", ",", "query_regex", ")", ":", "\n", "        ", "database_query", "=", "{", "\"query\"", ":", "{", "\"$regex\"", ":", "query_regex", "}", "}", "\n", "results", "=", "self", ".", "collection", ".", "find", "(", "database_query", ")", "\n", "return", "results_to_query_dictionary", "(", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.MongoDBCache.read_all": [[56, 59], ["mongodb_cache.MongoDBCache.collection.find", "mongodb_cache.results_to_query_dictionary"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.results_to_query_dictionary"], ["", "def", "read_all", "(", "self", ")", ":", "\n", "        ", "results", "=", "self", ".", "collection", ".", "find", "(", ")", "\n", "return", "results_to_query_dictionary", "(", "results", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.transform_query": [[4, 6], ["query.replace().replace().replace", "query.replace().replace", "query.replace"], "function", ["None"], ["def", "transform_query", "(", "query", ")", ":", "\n", "    ", "return", "query", ".", "replace", "(", "\" \"", ",", "\"-\"", ")", ".", "replace", "(", "\"'\"", ",", "\"_\"", ")", ".", "replace", "(", "\"/\"", ",", "\"-\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.cache.mongodb_cache.results_to_query_dictionary": [[8, 13], ["None"], "function", ["None"], ["", "def", "results_to_query_dictionary", "(", "results", ")", ":", "\n", "    ", "d_results", "=", "{", "}", "\n", "for", "result", "in", "results", ":", "\n", "        ", "d_results", "[", "result", "[", "\"query\"", "]", "]", "=", "result", "[", "\"suggestions\"", "]", "\n", "", "return", "d_results", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.__init__": [[24, 29], ["quasimodo.spacy_accessor.SpacyAccessor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "name", "=", "\"Basic CSK Solver\"", "\n", "self", ".", "subject_to_objects", "=", "None", "\n", "self", ".", "object_to_subjects", "=", "None", "\n", "self", ".", "spacy_accessor", "=", "SpacyAccessor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.solver_info": [[30, 32], ["None"], "methods", ["None"], ["", "def", "solver_info", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "self", ".", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.get_frequency": [[33, 41], ["sentence.split", "wordfreq.word_frequency"], "methods", ["None"], ["", "def", "get_frequency", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "words", "=", "sentence", ".", "split", "(", "\" \"", ")", "\n", "freq", "=", "1.0", "\n", "for", "word", "in", "words", ":", "\n", "            ", "freq", "*=", "word_frequency", "(", "word", ",", "\"en\"", ")", "\n", "", "if", "freq", "==", "0", ":", "\n", "            ", "freq", "=", "1", "\n", "", "return", "freq", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.answer_question": [[42, 56], ["question.stem.lower", "basic_csk_solver.BasicCSKSolver.compute_confidences_method1", "aristomini.common.models.MultipleChoiceAnswer", "basic_csk_solver.BasicCSKSolver.spacy_accessor.lemmatize", "aristomini.common.models.ChoiceConfidence", "zip"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.compute_confidences_method1", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["", "def", "answer_question", "(", "self", ",", "question", ":", "MultipleChoiceQuestion", ")", "->", "MultipleChoiceAnswer", ":", "\n", "# pylint: disable=unused-variable", "\n", "\n", "        ", "question_text", "=", "question", ".", "stem", ".", "lower", "(", ")", "\n", "choices", "=", "question", ".", "choices", "\n", "choice_texts", "=", "[", "x", ".", "text", "for", "x", "in", "choices", "]", "\n", "\n", "question_text", "=", "\" \"", ".", "join", "(", "self", ".", "spacy_accessor", ".", "lemmatize", "(", "question_text", ")", ")", "\n", "\n", "confidences", "=", "self", ".", "compute_confidences_method1", "(", "question_text", ",", "choice_texts", ")", "\n", "\n", "return", "MultipleChoiceAnswer", "(", "\n", "[", "ChoiceConfidence", "(", "choice", ",", "confidence", ")", "\n", "for", "choice", ",", "confidence", "in", "zip", "(", "choices", ",", "confidences", ")", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.compute_confidences_method2": [[58, 66], ["basic_csk_solver.BasicCSKSolver.get_subject_associated_words", "basic_csk_solver.BasicCSKSolver.get_subject_associated_words", "confidences.append", "basic_csk_solver.BasicCSKSolver.spacy_accessor.lemmatize", "basic_csk_solver.BasicCSKSolver.compare_two_associations"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.get_subject_associated_words", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.get_subject_associated_words", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.compare_two_associations"], ["", "def", "compute_confidences_method2", "(", "self", ",", "question_text", ",", "choices", ")", ":", "\n", "        ", "confidences", ":", "List", "[", "float", "]", "=", "[", "]", "\n", "associations_question", "=", "self", ".", "get_subject_associated_words", "(", "question_text", ")", "\n", "for", "choice", "in", "choices", ":", "\n", "            ", "choice_text", "=", "\" \"", ".", "join", "(", "self", ".", "spacy_accessor", ".", "lemmatize", "(", "choice", ")", ")", "\n", "associations_choice", "=", "self", ".", "get_subject_associated_words", "(", "choice_text", ")", "\n", "confidences", ".", "append", "(", "self", ".", "compare_two_associations", "(", "associations_question", ",", "associations_choice", ")", ")", "\n", "", "return", "confidences", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.compute_confidences_method1": [[67, 75], ["basic_csk_solver.BasicCSKSolver.get_frequency_sequences_in_choices", "basic_csk_solver.BasicCSKSolver.compute_confident_choice_method1", "confidences.append"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.get_frequency_sequences_in_choices", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.compute_confident_choice_method1"], ["", "def", "compute_confidences_method1", "(", "self", ",", "question_text", ",", "choices", ")", ":", "\n", "        ", "confidences", ":", "List", "[", "float", "]", "=", "[", "]", "\n", "# This frequency helps us to know what are the distinctive elements", "\n", "w_freq", "=", "self", ".", "get_frequency_sequences_in_choices", "(", "choices", ")", "\n", "for", "choice", "in", "choices", ":", "\n", "            ", "confidence", "=", "self", ".", "compute_confident_choice_method1", "(", "question_text", ",", "choice", ",", "w_freq", ")", "\n", "confidences", ".", "append", "(", "confidence", ")", "\n", "", "return", "confidences", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.compute_confident_choice_method1": [[76, 93], ["choice_text.lower().split", "range", "basic_csk_solver.BasicCSKSolver.spacy_accessor.lemmatize", "len", "range", "basic_csk_solver.BasicCSKSolver.subject_to_objects.get().copy", "basic_csk_solver.BasicCSKSolver.object_to_subjects.get", "basic_csk_solver.BasicCSKSolver.get_confidence_associations_for_text", "w_freq.get", "choice_text.lower", "propositions_sub_parts.append", "len", "len", "basic_csk_solver.BasicCSKSolver.subject_to_objects.get"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.get_confidence_associations_for_text", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "compute_confident_choice_method1", "(", "self", ",", "question_text", ",", "choice", ",", "w_freq", ")", ":", "\n", "        ", "choice_text", "=", "\" \"", ".", "join", "(", "self", ".", "spacy_accessor", ".", "lemmatize", "(", "choice", ")", ")", "\n", "propositions", "=", "choice_text", ".", "lower", "(", ")", ".", "split", "(", "\" \"", ")", "\n", "propositions_sub_parts", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "propositions", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "propositions", ")", "+", "1", ")", ":", "\n", "                ", "propositions_sub_parts", ".", "append", "(", "\" \"", ".", "join", "(", "propositions", "[", "i", ":", "j", "]", ")", ")", "\n", "", "", "confidence", "=", "0", "\n", "for", "subpart", "in", "propositions_sub_parts", ":", "\n", "            ", "if", "len", "(", "subpart", ")", "<=", "3", ":", "\n", "                ", "continue", "\n", "", "association_score_pairs", "=", "self", ".", "subject_to_objects", ".", "get", "(", "subpart", ",", "[", "]", ")", ".", "copy", "(", ")", "\n", "association_score_pairs", "+=", "self", ".", "object_to_subjects", ".", "get", "(", "subpart", ",", "[", "]", ")", "\n", "confidence_temp", "=", "self", ".", "get_confidence_associations_for_text", "(", "association_score_pairs", ",", "question_text", ")", "\n", "confidence_temp", "/=", "w_freq", ".", "get", "(", "subpart", ",", "1.0", ")", "\n", "confidence", "+=", "confidence_temp", "\n", "", "return", "confidence", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.get_subject_associated_words": [[94, 119], ["dict", "nltk.word_tokenize", "range", "len", "range", "max", "max", "len", "dict.get", "dict.get", "math.exp", "dict.get", "math.exp"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["", "def", "get_subject_associated_words", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "association_score_pairs", "=", "dict", "(", ")", "\n", "maxi", "=", "0.01", "\n", "n_subjects", "=", "0", "\n", "for", "subject", "in", "self", ".", "subject_to_objects", ":", "\n", "            ", "if", "subject", "in", "sentence", ":", "\n", "                ", "n_subjects", "+=", "1", "\n", "for", "association", ",", "score", "in", "self", ".", "subject_to_objects", "[", "subject", "]", ":", "\n", "                    ", "association_score_pairs", "[", "association", "]", "=", "association_score_pairs", ".", "get", "(", "association", ",", "0.0", ")", "+", "math", ".", "exp", "(", "score", ")", "\n", "maxi", "=", "max", "(", "maxi", ",", "association_score_pairs", "[", "association", "]", ")", "\n", "", "", "", "for", "obj", "in", "self", ".", "object_to_subjects", ":", "\n", "            ", "if", "obj", "in", "sentence", ":", "\n", "                ", "n_subjects", "+=", "1", "\n", "for", "association", ",", "score", "in", "self", ".", "object_to_subjects", "[", "obj", "]", ":", "\n", "                    ", "association_score_pairs", "[", "association", "]", "=", "association_score_pairs", ".", "get", "(", "association", ",", "0.0", ")", "+", "math", ".", "exp", "(", "score", ")", "\n", "maxi", "=", "max", "(", "maxi", ",", "association_score_pairs", "[", "association", "]", ")", "\n", "", "", "", "if", "n_subjects", "!=", "0", ":", "\n", "            ", "for", "association", "in", "association_score_pairs", ":", "\n", "                ", "association_score_pairs", "[", "association", "]", "/=", "n_subjects", "\n", "", "", "tokens", "=", "nltk", ".", "word_tokenize", "(", "sentence", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "tokens", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "tokens", ")", "+", "1", ")", ":", "\n", "                ", "word", "=", "\" \"", ".", "join", "(", "tokens", "[", "i", ":", "j", "]", ")", "\n", "association_score_pairs", "[", "word", "]", "=", "association_score_pairs", ".", "get", "(", "word", ",", "0.0", ")", "+", "10.0", "*", "maxi", "\n", "", "", "return", "association_score_pairs", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.compare_two_associations": [[120, 130], ["set", "set", "set.intersection", "association_score_pairs0.keys", "association_score_pairs1.keys", "key.count"], "methods", ["None"], ["", "def", "compare_two_associations", "(", "self", ",", "association_score_pairs0", ",", "association_score_pairs1", ")", ":", "\n", "        ", "score", "=", "0", "\n", "keys0", "=", "set", "(", "association_score_pairs0", ".", "keys", "(", ")", ")", "\n", "keys1", "=", "set", "(", "association_score_pairs1", ".", "keys", "(", ")", ")", "\n", "final_keys", "=", "keys0", ".", "intersection", "(", "keys1", ")", "\n", "for", "key", "in", "final_keys", ":", "\n", "            ", "score0", "=", "association_score_pairs0", "[", "key", "]", "\n", "score1", "=", "association_score_pairs1", "[", "key", "]", "\n", "score", "+=", "score0", "*", "score1", "*", "key", ".", "count", "(", "\" \"", ")", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.get_confidence_associations_for_text": [[131, 141], ["set", "set.add", "re.search", "basic_csk_solver.BasicCSKSolver.get_frequency", "re.escape"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.get_frequency"], ["", "def", "get_confidence_associations_for_text", "(", "self", ",", "association_score_pairs", ",", "question_text", ")", ":", "\n", "        ", "confidence_temp", "=", "0", "\n", "done", "=", "set", "(", ")", "\n", "for", "(", "association", ",", "score", ")", "in", "association_score_pairs", ":", "\n", "            ", "if", "re", ".", "search", "(", "\"[^0-9a-zA-Z]\"", "+", "re", ".", "escape", "(", "association", ")", "+", "\n", "\"[^0-9a-zA-Z]\"", ",", "question_text", ")", "is", "not", "None", "and", "association", "not", "in", "done", ":", "\n", "                ", "done", ".", "add", "(", "association", ")", "\n", "confidence_temp", "+=", "score", "*", "1.0", "/", "self", ".", "get_frequency", "(", "association", ")", "\n", "", "", "return", "confidence_temp", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.basic_csk_solver.BasicCSKSolver.get_frequency_sequences_in_choices": [[142, 151], ["dict", "enumerate", "basic_csk_solver.BasicCSKSolver.spacy_accessor.lemmatize", "range", "choice.lower", "len", "range", "len", "dict.setdefault"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["", "def", "get_frequency_sequences_in_choices", "(", "self", ",", "choices", ")", ":", "\n", "        ", "w_freq", "=", "dict", "(", ")", "\n", "for", "i", ",", "choice", "in", "enumerate", "(", "choices", ")", ":", "\n", "            ", "propositions", "=", "self", ".", "spacy_accessor", ".", "lemmatize", "(", "choice", ".", "lower", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "propositions", ")", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "propositions", ")", "+", "1", ")", ":", "\n", "                    ", "sub_part_choice", "=", "\" \"", ".", "join", "(", "propositions", "[", "i", ":", "j", "]", ")", "\n", "w_freq", "[", "sub_part_choice", "]", "=", "w_freq", ".", "setdefault", "(", "sub_part_choice", ",", "0", ")", "+", "1", "\n", "", "", "", "return", "w_freq", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.conceptnet_basic_csk_solver.ConceptNetBasicCSKSolver.__init__": [[5, 48], ["dict", "dict", "open", "dict", "dict", "line.strip().split.strip().split.strip().split", "conceptnet_basic_csk_solver.ConceptNetBasicCSKSolver.subject_to_objects[].append", "conceptnet_basic_csk_solver.ConceptNetBasicCSKSolver.object_to_subjects[].append", "conceptnet_basic_csk_solver.ConceptNetBasicCSKSolver.subject_to_objects[].append", "conceptnet_basic_csk_solver.ConceptNetBasicCSKSolver.object_to_subjects[].append", "d_temp[].append", "d_temp[].append", "line.strip().split.strip().split.strip", "max", "max"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "name", "=", "\"ConceptNet Basic CSK solver\"", "\n", "self", ".", "subject_to_objects", "=", "dict", "(", ")", "\n", "self", ".", "object_to_subjects", "=", "dict", "(", ")", "\n", "with", "open", "(", "\"/media/julien/7dc04770-227b-40fd-a591-c8e0c3a71a37/\"", "\n", "\"commonsense_data/ConceptNet/conceptnet_20k.tsv\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "subj", "=", "line", "[", "0", "]", "\n", "obj", "=", "line", "[", "2", "]", "\n", "score", "=", "1.0", "\n", "if", "subj", "in", "self", ".", "subject_to_objects", ":", "\n", "                    ", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "subject_to_objects", "[", "subj", "]", "=", "[", "(", "obj", ",", "score", ")", "]", "\n", "", "if", "obj", "in", "self", ".", "object_to_subjects", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "obj", "]", ".", "append", "(", "(", "subj", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "obj", "]", "=", "[", "(", "subj", ",", "score", ")", "]", "\n", "", "", "", "for", "subj", "in", "self", ".", "subject_to_objects", ":", "\n", "            ", "d_temp", "=", "dict", "(", ")", "\n", "for", "value", "in", "self", ".", "subject_to_objects", "[", "subj", "]", ":", "\n", "                ", "obj", "=", "value", "[", "0", "]", "\n", "score", "=", "value", "[", "1", "]", "\n", "if", "obj", "in", "d_temp", ":", "\n", "                    ", "d_temp", "[", "obj", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "                    ", "d_temp", "[", "obj", "]", "=", "[", "score", "]", "\n", "", "", "self", ".", "subject_to_objects", "[", "subj", "]", "=", "[", "]", "\n", "for", "obj", "in", "d_temp", ":", "\n", "                ", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "max", "(", "d_temp", "[", "obj", "]", ")", ")", ")", "\n", "", "", "for", "subj", "in", "self", ".", "object_to_subjects", ":", "\n", "            ", "d_temp", "=", "dict", "(", ")", "\n", "for", "value", "in", "self", ".", "object_to_subjects", "[", "subj", "]", ":", "\n", "                ", "obj", "=", "value", "[", "0", "]", "\n", "score", "=", "value", "[", "1", "]", "\n", "if", "obj", "in", "d_temp", ":", "\n", "                    ", "d_temp", "[", "obj", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "                    ", "d_temp", "[", "obj", "]", "=", "[", "score", "]", "\n", "", "", "self", ".", "object_to_subjects", "[", "subj", "]", "=", "[", "]", "\n", "for", "obj", "in", "d_temp", ":", "\n", "                ", "self", ".", "object_to_subjects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "max", "(", "d_temp", "[", "obj", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.webchild_basic_csk_solver.WebChildBasicCSKSolver.__init__": [[5, 56], ["dict", "dict", "open", "dict", "dict", "line.strip().split.strip().split.strip().split", "webchild_basic_csk_solver.WebChildBasicCSKSolver.subject_to_objects[].append", "webchild_basic_csk_solver.WebChildBasicCSKSolver.object_to_subjects[].append", "webchild_basic_csk_solver.WebChildBasicCSKSolver.subject_to_objects[].append", "webchild_basic_csk_solver.WebChildBasicCSKSolver.subject_to_objects[].append", "webchild_basic_csk_solver.WebChildBasicCSKSolver.object_to_subjects[].append", "webchild_basic_csk_solver.WebChildBasicCSKSolver.object_to_subjects[].append", "webchild_basic_csk_solver.WebChildBasicCSKSolver.object_to_subjects[].append", "webchild_basic_csk_solver.WebChildBasicCSKSolver.object_to_subjects[].append", "d_temp[].append", "d_temp[].append", "line.strip().split.strip().split.strip", "max", "max"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "name", "=", "\"Webchild Basic CSK solver\"", "\n", "self", ".", "subject_to_objects", "=", "dict", "(", ")", "\n", "self", ".", "object_to_subjects", "=", "dict", "(", ")", "\n", "with", "open", "(", "\"/media/julien/7dc04770-227b-40fd-a591-c8e0c3a71a37/\"", "\n", "\"commonsense_data/Webchild/webchild_20k.tsv\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "subj", "=", "line", "[", "0", "]", "\n", "pred", "=", "line", "[", "1", "]", "\n", "obj", "=", "line", "[", "2", "]", "\n", "score", "=", "1.0", "\n", "if", "subj", "in", "self", ".", "subject_to_objects", ":", "\n", "                    ", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "score", ")", ")", "\n", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "pred", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "subject_to_objects", "[", "subj", "]", "=", "[", "(", "obj", ",", "score", ")", ",", "(", "pred", ",", "score", ")", "]", "\n", "", "if", "obj", "in", "self", ".", "object_to_subjects", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "obj", "]", ".", "append", "(", "(", "subj", ",", "score", ")", ")", "\n", "self", ".", "object_to_subjects", "[", "obj", "]", ".", "append", "(", "(", "pred", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "obj", "]", "=", "[", "(", "subj", ",", "score", ")", ",", "(", "pred", ",", "score", ")", "]", "\n", "", "if", "pred", "in", "self", ".", "object_to_subjects", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "pred", "]", ".", "append", "(", "(", "subj", ",", "score", ")", ")", "\n", "self", ".", "object_to_subjects", "[", "pred", "]", ".", "append", "(", "(", "obj", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "pred", "]", "=", "[", "(", "subj", ",", "score", ")", ",", "(", "obj", ",", "score", ")", "]", "\n", "", "", "", "for", "subj", "in", "self", ".", "subject_to_objects", ":", "\n", "            ", "d_temp", "=", "dict", "(", ")", "\n", "for", "value", "in", "self", ".", "subject_to_objects", "[", "subj", "]", ":", "\n", "                ", "obj", "=", "value", "[", "0", "]", "\n", "score", "=", "value", "[", "1", "]", "\n", "if", "obj", "in", "d_temp", ":", "\n", "                    ", "d_temp", "[", "obj", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "                    ", "d_temp", "[", "obj", "]", "=", "[", "score", "]", "\n", "", "", "self", ".", "subject_to_objects", "[", "subj", "]", "=", "[", "]", "\n", "for", "obj", "in", "d_temp", ":", "\n", "                ", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "max", "(", "d_temp", "[", "obj", "]", ")", ")", ")", "\n", "", "", "for", "subj", "in", "self", ".", "object_to_subjects", ":", "\n", "            ", "d_temp", "=", "dict", "(", ")", "\n", "for", "value", "in", "self", ".", "object_to_subjects", "[", "subj", "]", ":", "\n", "                ", "obj", "=", "value", "[", "0", "]", "\n", "score", "=", "value", "[", "1", "]", "\n", "if", "obj", "in", "d_temp", ":", "\n", "                    ", "d_temp", "[", "obj", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "                    ", "d_temp", "[", "obj", "]", "=", "[", "score", "]", "\n", "", "", "self", ".", "object_to_subjects", "[", "subj", "]", "=", "[", "]", "\n", "for", "obj", "in", "d_temp", ":", "\n", "                ", "self", ".", "object_to_subjects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "max", "(", "d_temp", "[", "obj", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.ours_basic_csk_solver.OurBasicCSKSolver.__init__": [[6, 61], ["basic_csk_solver.BasicCSKSolver.__init__", "dict", "dict", "ours_basic_csk_solver.OurBasicCSKSolver.spacy_accessor.lemmatize_multiple", "open", "line.strip().split.strip().split.strip().split", "line[].strip", "line[].strip", "line[].strip", "float", "dict", "dict", "f.readlines", "ours_basic_csk_solver.OurBasicCSKSolver.subject_to_objects[].append", "ours_basic_csk_solver.OurBasicCSKSolver.subject_to_objects[].append", "ours_basic_csk_solver.OurBasicCSKSolver.object_to_subjects[].append", "ours_basic_csk_solver.OurBasicCSKSolver.object_to_subjects[].append", "ours_basic_csk_solver.OurBasicCSKSolver.object_to_subjects[].append", "ours_basic_csk_solver.OurBasicCSKSolver.object_to_subjects[].append", "ours_basic_csk_solver.OurBasicCSKSolver.subject_to_objects[].append", "ours_basic_csk_solver.OurBasicCSKSolver.object_to_subjects[].append", "line.strip().split.strip().split.strip", "d_temp[].append", "d_temp[].append", "max", "max"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "\"Ours Basic CSK solver\"", "\n", "self", ".", "subject_to_objects", "=", "dict", "(", ")", "\n", "self", ".", "object_to_subjects", "=", "dict", "(", ")", "\n", "with", "open", "(", "\"/home/julien/Documents/phd/CSK/quasimodo/temp/\"", "\n", "\"quasimodo19.tsv\"", ")", "as", "f", ":", "\n", "            ", "raw_triples", "=", "f", ".", "readlines", "(", ")", "[", "1", ":", "]", "\n", "", "raw_lemmatized_triples", "=", "self", ".", "spacy_accessor", ".", "lemmatize_multiple", "(", "raw_triples", ")", "\n", "for", "line", "in", "raw_lemmatized_triples", ":", "\n", "            ", "line", "=", "\" \"", ".", "join", "(", "line", ")", "\n", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "subj", "=", "line", "[", "0", "]", ".", "strip", "(", ")", "\n", "pred", "=", "line", "[", "1", "]", ".", "strip", "(", ")", "\n", "obj", "=", "line", "[", "2", "]", ".", "strip", "(", ")", "\n", "score", "=", "float", "(", "line", "[", "5", "]", ")", "\n", "if", "subj", "in", "self", ".", "subject_to_objects", ":", "\n", "                ", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "score", ")", ")", "\n", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "pred", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "subject_to_objects", "[", "subj", "]", "=", "[", "(", "obj", ",", "score", ")", ",", "(", "pred", ",", "score", ")", "]", "\n", "", "if", "obj", "in", "self", ".", "object_to_subjects", ":", "\n", "                ", "self", ".", "object_to_subjects", "[", "obj", "]", ".", "append", "(", "(", "subj", ",", "score", ")", ")", "\n", "self", ".", "object_to_subjects", "[", "obj", "]", ".", "append", "(", "(", "pred", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "object_to_subjects", "[", "obj", "]", "=", "[", "(", "subj", ",", "score", ")", ",", "(", "pred", ",", "score", ")", "]", "\n", "", "if", "pred", "in", "self", ".", "object_to_subjects", ":", "\n", "                ", "self", ".", "object_to_subjects", "[", "pred", "]", ".", "append", "(", "(", "subj", ",", "score", ")", ")", "\n", "self", ".", "object_to_subjects", "[", "pred", "]", ".", "append", "(", "(", "obj", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "object_to_subjects", "[", "pred", "]", "=", "[", "(", "subj", ",", "score", ")", ",", "(", "obj", ",", "score", ")", "]", "\n", "", "", "for", "subj", "in", "self", ".", "subject_to_objects", ":", "\n", "            ", "d_temp", "=", "dict", "(", ")", "\n", "for", "value", "in", "self", ".", "subject_to_objects", "[", "subj", "]", ":", "\n", "                ", "obj", "=", "value", "[", "0", "]", "\n", "score", "=", "value", "[", "1", "]", "\n", "if", "obj", "in", "d_temp", ":", "\n", "                    ", "d_temp", "[", "obj", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "                    ", "d_temp", "[", "obj", "]", "=", "[", "score", "]", "\n", "", "", "self", ".", "subject_to_objects", "[", "subj", "]", "=", "[", "]", "\n", "for", "obj", "in", "d_temp", ":", "\n", "                ", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "max", "(", "d_temp", "[", "obj", "]", ")", ")", ")", "\n", "", "", "for", "subj", "in", "self", ".", "object_to_subjects", ":", "\n", "            ", "d_temp", "=", "dict", "(", ")", "\n", "for", "value", "in", "self", ".", "object_to_subjects", "[", "subj", "]", ":", "\n", "                ", "obj", "=", "value", "[", "0", "]", "\n", "score", "=", "value", "[", "1", "]", "\n", "if", "obj", "in", "d_temp", ":", "\n", "                    ", "d_temp", "[", "obj", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "                    ", "d_temp", "[", "obj", "]", "=", "[", "score", "]", "\n", "", "", "self", ".", "object_to_subjects", "[", "subj", "]", "=", "[", "]", "\n", "for", "obj", "in", "d_temp", ":", "\n", "                ", "self", ".", "object_to_subjects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "max", "(", "d_temp", "[", "obj", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.__init__": [[20, 31], ["aristomini.common.solver.SolverBase.__init__", "quasimodo.spacy_accessor.SpacyAccessor"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "\"Machine Learning Solver\"", "\n", "self", ".", "question_answer_label", "=", "[", "]", "\n", "self", ".", "preprocessed_question_answer_label", "=", "[", "]", "\n", "self", ".", "kb", "=", "None", "# A pandas dataframe", "\n", "self", ".", "kb_grouped_s", "=", "None", "\n", "self", ".", "kb_grouped_p", "=", "None", "\n", "self", ".", "kb_grouped_o", "=", "None", "\n", "self", ".", "spacy_accessor", "=", "SpacyAccessor", "(", ")", "\n", "self", ".", "clf", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.solver_info": [[32, 34], ["None"], "methods", ["None"], ["", "def", "solver_info", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "self", ".", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.load_training_data_questions": [[35, 46], ["open", "questions.append", "machine_learning_solver.MachineLearningSolver.question_answer_label.append", "json.loads", "line.strip", "int"], "methods", ["None"], ["", "def", "load_training_data_questions", "(", "self", ")", ":", "\n", "        ", "questions", "=", "[", "]", "\n", "with", "open", "(", "\"aristo-mini/questions/CommonsenseQAtrain_rand_split.jsonl\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "questions", ".", "append", "(", "json", ".", "loads", "(", "line", ".", "strip", "(", ")", ")", ")", "\n", "", "", "self", ".", "question_answer_label", "=", "[", "]", "\n", "for", "question", "in", "questions", ":", "\n", "            ", "for", "choice", "in", "question", "[", "\"question\"", "]", "[", "\"choices\"", "]", ":", "\n", "                ", "self", ".", "question_answer_label", ".", "append", "(", "(", "question", "[", "\"question\"", "]", "[", "\"stem\"", "]", ",", "\n", "choice", "[", "\"text\"", "]", ",", "\n", "int", "(", "choice", "[", "\"label\"", "]", "==", "question", "[", "\"answerKey\"", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.preprocess_question_answer_label": [[47, 58], ["machine_learning_solver.MachineLearningSolver.spacy_accessor.lemmatize_multiple", "machine_learning_solver.MachineLearningSolver.spacy_accessor.lemmatize_multiple", "range", "len", "machine_learning_solver.MachineLearningSolver.preprocessed_question_answer_label.append", "machine_learning_solver.remove_stop_words", "machine_learning_solver.remove_stop_words", "x[].lower", "x[].lower"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple", "home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.remove_stop_words", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.remove_stop_words"], ["", "", "", "def", "preprocess_question_answer_label", "(", "self", ")", ":", "\n", "        ", "questions", "=", "[", "\" \"", ".", "join", "(", "remove_stop_words", "(", "x", "[", "0", "]", ".", "lower", "(", ")", ")", ")", "for", "x", "in", "self", ".", "question_answer_label", "]", "\n", "answers", "=", "[", "\" \"", ".", "join", "(", "remove_stop_words", "(", "x", "[", "1", "]", ".", "lower", "(", ")", ")", ")", "for", "x", "in", "self", ".", "question_answer_label", "]", "\n", "questions_lemmatized", "=", "self", ".", "spacy_accessor", ".", "lemmatize_multiple", "(", "questions", ")", "\n", "answers_lemmatized", "=", "self", ".", "spacy_accessor", ".", "lemmatize_multiple", "(", "answers", ")", "\n", "self", ".", "preprocessed_question_answer_label", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "question_answer_label", ")", ")", ":", "\n", "            ", "self", ".", "preprocessed_question_answer_label", ".", "append", "(", "(", "questions_lemmatized", "[", "i", "]", ",", "\n", "answers_lemmatized", "[", "i", "]", ",", "\n", "self", ".", "question_answer_label", "[", "i", "]", "[", "2", "]", ")", ")", "\n", "", "return", "self", ".", "preprocessed_question_answer_label", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.group_kb": [[59, 63], ["machine_learning_solver.MachineLearningSolver.kb.groupby", "machine_learning_solver.MachineLearningSolver.kb.groupby", "machine_learning_solver.MachineLearningSolver.kb.groupby"], "methods", ["None"], ["", "def", "group_kb", "(", "self", ")", ":", "\n", "        ", "self", ".", "kb_grouped_s", "=", "self", ".", "kb", ".", "groupby", "(", "by", "=", "\"subject\"", ")", "\n", "self", ".", "kb_grouped_p", "=", "self", ".", "kb", ".", "groupby", "(", "by", "=", "\"predicate\"", ")", "\n", "self", ".", "kb_grouped_o", "=", "self", ".", "kb", ".", "groupby", "(", "by", "=", "\"object\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_features_lemmatized": [[64, 120], ["numpy.array", "machine_learning_solver.MachineLearningSolver.kb_grouped_s.get_group().iterrows", "machine_learning_solver.MachineLearningSolver.kb_grouped_p.get_group().iterrows", "machine_learning_solver.MachineLearningSolver.kb_grouped_o.get_group().iterrows", "machine_learning_solver.check_in", "machine_learning_solver.check_in", "machine_learning_solver.check_in", "machine_learning_solver.MachineLearningSolver.kb_grouped_s.get_group", "machine_learning_solver.check_in", "machine_learning_solver.check_in", "machine_learning_solver.MachineLearningSolver.kb_grouped_p.get_group", "machine_learning_solver.check_in", "machine_learning_solver.check_in", "machine_learning_solver.MachineLearningSolver.kb_grouped_o.get_group", "machine_learning_solver.check_in", "machine_learning_solver.check_in"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_group", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_group", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.pattern_interface.PatternInterface.get_group", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in"], ["", "def", "get_features_lemmatized", "(", "self", ",", "question", ",", "answer", ")", ":", "\n", "        ", "p_and_o_with_s", "=", "0", "\n", "p_with_s", "=", "0", "\n", "o_with_s", "=", "0", "\n", "double_link_s_to_o", "=", "0", "\n", "\n", "if", "answer", "in", "self", ".", "kb_grouped_s", ".", "groups", ":", "\n", "            ", "for", "_", ",", "row", "in", "self", ".", "kb_grouped_s", ".", "get_group", "(", "answer", ")", ".", "iterrows", "(", ")", ":", "\n", "                ", "if", "check_in", "(", "row", "[", "\"predicate\"", "]", ",", "question", ")", ":", "\n", "                    ", "if", "check_in", "(", "row", "[", "\"object\"", "]", ",", "question", ")", ":", "\n", "                        ", "p_and_o_with_s", "+=", "row", "[", "\"score\"", "]", "\n", "", "else", ":", "\n", "                        ", "p_with_s", "+=", "row", "[", "\"score\"", "]", "\n", "", "", "elif", "check_in", "(", "row", "[", "\"object\"", "]", ",", "question", ")", ":", "\n", "                    ", "o_with_s", "+=", "row", "[", "\"score\"", "]", "\n", "\n", "", "", "", "s_and_o_with_p", "=", "0", "\n", "s_with_p", "=", "0", "\n", "o_with_p", "=", "0", "\n", "\n", "if", "answer", "in", "self", ".", "kb_grouped_p", ".", "groups", ":", "\n", "            ", "for", "_", ",", "row", "in", "self", ".", "kb_grouped_p", ".", "get_group", "(", "answer", ")", ".", "iterrows", "(", ")", ":", "\n", "                ", "if", "check_in", "(", "row", "[", "\"subject\"", "]", ",", "question", ")", ":", "\n", "                    ", "if", "check_in", "(", "row", "[", "\"object\"", "]", ",", "question", ")", ":", "\n", "                        ", "s_and_o_with_p", "+=", "row", "[", "\"score\"", "]", "\n", "", "else", ":", "\n", "                        ", "s_with_p", "+=", "row", "[", "\"score\"", "]", "\n", "", "", "elif", "check_in", "(", "row", "[", "\"object\"", "]", ",", "question", ")", ":", "\n", "                    ", "o_with_p", "+=", "row", "[", "\"score\"", "]", "\n", "\n", "", "", "", "s_and_p_with_o", "=", "0", "\n", "s_with_o", "=", "0", "\n", "p_with_o", "=", "0", "\n", "double_link_o_to_s", "=", "0", "\n", "\n", "if", "answer", "in", "self", ".", "kb_grouped_o", ".", "groups", ":", "\n", "            ", "for", "_", ",", "row", "in", "self", ".", "kb_grouped_o", ".", "get_group", "(", "answer", ")", ".", "iterrows", "(", ")", ":", "\n", "                ", "if", "check_in", "(", "row", "[", "\"subject\"", "]", ",", "question", ")", ":", "\n", "                    ", "if", "check_in", "(", "row", "[", "\"predicate\"", "]", ",", "question", ")", ":", "\n", "                        ", "s_and_p_with_o", "+=", "row", "[", "\"score\"", "]", "\n", "", "else", ":", "\n", "                        ", "s_with_o", "+=", "row", "[", "\"score\"", "]", "\n", "", "", "elif", "check_in", "(", "row", "[", "\"predicate\"", "]", ",", "question", ")", ":", "\n", "                    ", "p_with_o", "+=", "row", "[", "\"score\"", "]", "\n", "\n", "", "", "", "return", "np", ".", "array", "(", "[", "p_and_o_with_s", ",", "\n", "s_and_o_with_p", ",", "\n", "s_and_p_with_o", ",", "\n", "p_with_s", ",", "\n", "o_with_s", ",", "\n", "s_with_p", ",", "\n", "o_with_p", ",", "\n", "s_with_o", ",", "\n", "p_with_o", ",", "\n", "double_link_s_to_o", ",", "\n", "double_link_o_to_s", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_features_grouped_preprocessed": [[121, 141], ["min", "range", "list", "len", "range", "len", "machine_learning_solver.MachineLearningSolver.get_features_lemmatized().astype", "machine_learning_solver.MachineLearningSolver.get_features_lemmatized", "numpy.isnan"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_features_lemmatized"], ["", "def", "get_features_grouped_preprocessed", "(", "self", ",", "question", ",", "answer", ")", ":", "\n", "        ", "question_lemmatized", "=", "\" \"", ".", "join", "(", "question", ")", "\n", "answer_lemmatized_split", "=", "answer", "\n", "result", "=", "None", "\n", "max_size", "=", "min", "(", "len", "(", "answer_lemmatized_split", ")", ",", "3", ")", "\n", "for", "size", "in", "range", "(", "max_size", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "answer_lemmatized_split", ")", ")", ":", "\n", "                ", "j", "=", "i", "+", "size", "\n", "to_add", "=", "self", ".", "get_features_lemmatized", "(", "question_lemmatized", ",", "\n", "\" \"", ".", "join", "(", "answer_lemmatized_split", "[", "i", ":", "j", "]", ")", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "to_add", "[", "np", ".", "isnan", "(", "to_add", ")", "]", "=", "0.0", "\n", "if", "result", "is", "None", ":", "\n", "                    ", "result", "=", "to_add", "\n", "", "else", ":", "\n", "                    ", "result", "+=", "to_add", "\n", "", "", "if", "result", "is", "not", "None", ":", "\n", "                ", "break", "\n", "", "", "if", "result", "is", "None", ":", "\n", "            ", "return", "[", "0.0", "]", "*", "11", "\n", "", "return", "list", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_features_from_preprocessed_qal": [[142, 144], ["machine_learning_solver.MachineLearningSolver.get_features_grouped_preprocessed"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_features_grouped_preprocessed"], ["", "def", "get_features_from_preprocessed_qal", "(", "self", ",", "qal", ")", ":", "\n", "        ", "return", "self", ".", "get_features_grouped_preprocessed", "(", "qal", "[", "0", "]", ",", "qal", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_all_features": [[145, 151], ["enumerate", "print", "all_features.append", "machine_learning_solver.MachineLearningSolver.get_features_from_preprocessed_qal"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_features_from_preprocessed_qal"], ["", "def", "get_all_features", "(", "self", ")", ":", "\n", "        ", "all_features", "=", "[", "]", "\n", "for", "i", ",", "qal", "in", "enumerate", "(", "self", ".", "preprocessed_question_answer_label", ")", ":", "\n", "            ", "print", "(", "i", ",", "end", "=", "\"\\r\"", ")", "\n", "all_features", ".", "append", "(", "self", ".", "get_features_from_preprocessed_qal", "(", "qal", ")", ")", "\n", "", "return", "all_features", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_labels": [[152, 157], ["y.append"], "methods", ["None"], ["", "def", "get_labels", "(", "self", ")", ":", "\n", "        ", "y", "=", "[", "]", "\n", "for", "qal", "in", "self", ".", "question_answer_label", ":", "\n", "            ", "y", ".", "append", "(", "qal", "[", "2", "]", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.train": [[158, 168], ["machine_learning_solver.MachineLearningSolver.load_training_data_questions", "machine_learning_solver.MachineLearningSolver.preprocess_question_answer_label", "numpy.array", "numpy.array", "sklearn.linear_model.LogisticRegressionCV", "machine_learning_solver.MachineLearningSolver.clf.fit", "print", "machine_learning_solver.MachineLearningSolver.group_kb", "machine_learning_solver.MachineLearningSolver.get_all_features", "machine_learning_solver.MachineLearningSolver.get_labels", "machine_learning_solver.MachineLearningSolver.clf.score"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.load_training_data_questions", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.preprocess_question_answer_label", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.fit", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.group_kb", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_all_features", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_labels", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.score"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "load_training_data_questions", "(", ")", "\n", "self", ".", "preprocess_question_answer_label", "(", ")", "\n", "if", "self", ".", "kb_grouped_s", "is", "None", ":", "\n", "            ", "self", ".", "group_kb", "(", ")", "\n", "", "X", "=", "np", ".", "array", "(", "self", ".", "get_all_features", "(", ")", ")", "\n", "y", "=", "np", ".", "array", "(", "self", ".", "get_labels", "(", ")", ")", "\n", "self", ".", "clf", "=", "LogisticRegressionCV", "(", "class_weight", "=", "\"balanced\"", ",", "cv", "=", "5", ")", "\n", "self", ".", "clf", ".", "fit", "(", "X", ",", "y", ")", "\n", "print", "(", "\"The score is %f\"", "%", "(", "self", ".", "clf", ".", "score", "(", "X", ",", "y", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.save_model": [[169, 172], ["open", "pickle.dump"], "methods", ["None"], ["", "def", "save_model", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "\"classifier_lr.pck\"", ",", "\"wb\"", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "self", ".", "clf", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.load_model": [[173, 176], ["open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load"], ["", "", "def", "load_model", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "\"classifier_rf.pck\"", ",", "\"rb\"", ")", "as", "f", ":", "\n", "            ", "self", ".", "clf", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.answer_question": [[177, 204], ["print", "question.stem.lower", "print", "print", "print", "machine_learning_solver.MachineLearningSolver.spacy_accessor.lemmatize", "print", "machine_learning_solver.MachineLearningSolver.predict_proba_positive", "print", "aristomini.common.models.MultipleChoiceAnswer", "print", "machine_learning_solver.MachineLearningSolver.load_model", "machine_learning_solver.MachineLearningSolver.group_kb", "machine_learning_solver.MachineLearningSolver.spacy_accessor.lemmatize", "machine_learning_solver.remove_stop_words", "aristomini.common.models.ChoiceConfidence", "machine_learning_solver.remove_stop_words", "zip", "choice.lower"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.predict_proba_positive", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.load_model", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.group_kb", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.remove_stop_words", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.remove_stop_words"], ["", "", "def", "answer_question", "(", "self", ",", "question", ":", "MultipleChoiceQuestion", ")", "->", "MultipleChoiceAnswer", ":", "\n", "# pylint: disable=unused-variable", "\n", "        ", "if", "self", ".", "clf", "is", "None", ":", "\n", "            ", "print", "(", "\"Load model\"", ")", "\n", "self", ".", "load_model", "(", ")", "\n", "", "if", "self", ".", "kb_grouped_s", "is", "None", ":", "\n", "            ", "self", ".", "group_kb", "(", ")", "\n", "\n", "", "print", "(", "\"Preprocessing question:\"", ")", "\n", "question_text", "=", "question", ".", "stem", ".", "lower", "(", ")", "\n", "print", "(", "question_text", ")", "\n", "print", "(", "\"Preprocessing choices\"", ")", "\n", "choices", "=", "question", ".", "choices", "\n", "choice_texts", "=", "[", "x", ".", "text", "for", "x", "in", "choices", "]", "\n", "print", "(", "choice_texts", ")", "\n", "\n", "question_preprocessed", "=", "self", ".", "spacy_accessor", ".", "lemmatize", "(", "\" \"", ".", "join", "(", "remove_stop_words", "(", "question_text", ")", ")", ")", "\n", "choices_preprocessed", "=", "[", "self", ".", "spacy_accessor", ".", "lemmatize", "(", "\" \"", ".", "join", "(", "remove_stop_words", "(", "choice", ".", "lower", "(", ")", ")", ")", ")", "\n", "for", "choice", "in", "choice_texts", "]", "\n", "\n", "print", "(", "\"Computing Confidence\"", ")", "\n", "confidences", "=", "self", ".", "predict_proba_positive", "(", "question_preprocessed", ",", "choices_preprocessed", ")", "\n", "print", "(", "\"Done.\"", ")", "\n", "\n", "return", "MultipleChoiceAnswer", "(", "\n", "[", "ChoiceConfidence", "(", "choice", ",", "confidence", ")", "\n", "for", "choice", ",", "confidence", "in", "zip", "(", "choices", ",", "confidences", ")", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.predict_proba_positive": [[206, 211], ["numpy.array", "machine_learning_solver.MachineLearningSolver.get_features_from_preprocessed_qal", "machine_learning_solver.MachineLearningSolver.clf.predict_proba"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.MachineLearningSolver.get_features_from_preprocessed_qal", "home.repos.pwc.inspect_result.Aunsiels_CSK.assertion_fusion.gaussian_nb_with_missing_values.GaussianNBWithMissingValues.predict_proba"], ["", "def", "predict_proba_positive", "(", "self", ",", "question_text", ",", "choice_texts", ")", ":", "\n", "        ", "features", "=", "[", "self", ".", "get_features_from_preprocessed_qal", "(", "(", "question_text", ",", "choice", ")", ")", "for", "choice", "in", "choice_texts", "]", "\n", "X", "=", "np", ".", "array", "(", "features", ")", "\n", "y_prediction", "=", "self", ".", "clf", ".", "predict_proba", "(", "X", ")", "[", ":", ",", "1", "]", "\n", "return", "y_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.remove_stop_words": [[216, 219], ["nltk.tokenize.word_tokenize"], "function", ["None"], ["def", "remove_stop_words", "(", "sentence", ")", ":", "\n", "    ", "word_tokens", "=", "word_tokenize", "(", "sentence", ")", "\n", "return", "[", "w", "for", "w", "in", "word_tokens", "if", "w", "not", "in", "stop_words", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_solver.check_in": [[221, 224], ["re.compile", "re.compile.search", "re.escape"], "function", ["None"], ["", "def", "check_in", "(", "word", ",", "sentence", ")", ":", "\n", "    ", "regex", "=", "re", ".", "compile", "(", "r\"(^|\\s)\"", "+", "re", ".", "escape", "(", "word", ")", "+", "r\"($|\\s)\"", ")", "\n", "return", "regex", ".", "search", "(", "sentence", ")", "is", "not", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_quasimodo_solver.MachineLearningQuasimodoSolver.__init__": [[8, 12], ["machine_learning_solver.MachineLearningSolver.__init__", "machine_learning_quasimodo_solver.MachineLearningQuasimodoSolver.load_kb"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_quasimodo_solver.MachineLearningQuasimodoSolver.load_kb"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "\"Quasimodo ML solver\"", "\n", "self", ".", "load_kb", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_quasimodo_solver.MachineLearningQuasimodoSolver.load_kb": [[13, 44], ["print", "print", "machine_learning_quasimodo_solver.MachineLearningQuasimodoSolver.spacy_accessor.lemmatize_multiple", "print", "pandas.DataFrame", "pandas.DataFrame", "pandas.to_numeric", "open", "line.strip().split.strip().split.strip().split", "line[].strip", "line[].strip", "kb.append", "machine_learning_quasimodo_solver.transform_predicate", "line.strip().split.strip().split.strip().split", "kb_raw.append", "raw_triples.append", "len", "line[].strip", "line.strip().split.strip().split.strip", "line.strip().split.strip().split.strip"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.quasimodo.spacy_accessor.SpacyAccessor.lemmatize_multiple", "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_quasimodo_solver.transform_predicate"], ["", "def", "load_kb", "(", "self", ")", ":", "\n", "        ", "kb_raw", "=", "[", "]", "\n", "raw_triples", "=", "[", "]", "\n", "print", "(", "\"Loading KB...\"", ")", "\n", "with", "open", "(", "\"/home/julien/Documents/phd/CSK/quasimodo/temp/quasimodo17.tsv\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "kb_raw", ".", "append", "(", "line", "[", ":", "-", "1", "]", ")", "\n", "raw_triples", ".", "append", "(", "\"\\t\"", ".", "join", "(", "line", "[", "0", ":", "3", "]", ")", ")", "\n", "", "", "print", "(", "\"Lemmatizing KB\"", ")", "\n", "raw_lemmatized_triples", "=", "self", ".", "spacy_accessor", ".", "lemmatize_multiple", "(", "raw_triples", ")", "\n", "kb", "=", "[", "]", "\n", "for", "line", "in", "raw_lemmatized_triples", ":", "\n", "            ", "line", "=", "\" \"", ".", "join", "(", "line", ")", "\n", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "subj", "=", "line", "[", "0", "]", ".", "strip", "(", ")", "\n", "pred", "=", "line", "[", "1", "]", ".", "strip", "(", ")", "\n", "if", "len", "(", "line", ")", ">", "2", ":", "\n", "                ", "obj", "=", "line", "[", "2", "]", ".", "strip", "(", ")", "\n", "", "else", ":", "\n", "                ", "obj", "=", "\"\"", "\n", "", "kb", ".", "append", "(", "[", "subj", ",", "pred", ",", "obj", "]", ")", "\n", "", "print", "(", "\"Final cleaning\"", ")", "\n", "self", ".", "kb", "=", "pd", ".", "DataFrame", "(", "kb_raw", ",", "\n", "columns", "=", "[", "\"subject\"", ",", "\"predicate\"", ",", "\"object\"", ",", "\"modality\"", ",", "\"is_negative\"", ",", "\"score\"", "]", ")", "\n", "df_spo_lemma", "=", "pd", ".", "DataFrame", "(", "kb", ",", "columns", "=", "[", "\"subject\"", ",", "\"predicate\"", ",", "\"object\"", "]", ")", "\n", "self", ".", "kb", "[", "\"subject\"", "]", "=", "df_spo_lemma", "[", "\"subject\"", "]", "\n", "self", ".", "kb", "[", "\"predicate\"", "]", "=", "df_spo_lemma", "[", "\"predicate\"", "]", "\n", "self", ".", "kb", "[", "\"object\"", "]", "=", "df_spo_lemma", "[", "\"object\"", "]", "\n", "self", ".", "kb", "[", "\"score\"", "]", "=", "pd", ".", "to_numeric", "(", "self", ".", "kb", "[", "\"score\"", "]", ")", "\n", "self", ".", "kb", "[", "\"predicate\"", "]", "=", "[", "transform_predicate", "(", "x", ")", "for", "x", "in", "self", ".", "kb", "[", "\"predicate\"", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.machine_learning_quasimodo_solver.transform_predicate": [[46, 52], ["None"], "function", ["None"], ["", "", "def", "transform_predicate", "(", "predicate", ")", ":", "\n", "    ", "if", "predicate", "==", "\"has_body_part\"", ":", "\n", "        ", "return", "\"have\"", "\n", "", "if", "\"has_\"", "in", "predicate", ":", "\n", "        ", "return", "\"be\"", "\n", "", "return", "predicate", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.custom_aristo_mini_solvers.tuplekb_basic_csk_solver.TupleKBBasicCSKSolver.__init__": [[5, 57], ["dict", "dict", "open", "dict", "dict", "line.strip().split.strip().split.strip().split", "line[].replace", "float", "tuplekb_basic_csk_solver.TupleKBBasicCSKSolver.subject_to_objects[].append", "tuplekb_basic_csk_solver.TupleKBBasicCSKSolver.object_to_subjects[].append", "tuplekb_basic_csk_solver.TupleKBBasicCSKSolver.subject_to_objects[].append", "tuplekb_basic_csk_solver.TupleKBBasicCSKSolver.subject_to_objects[].append", "tuplekb_basic_csk_solver.TupleKBBasicCSKSolver.object_to_subjects[].append", "tuplekb_basic_csk_solver.TupleKBBasicCSKSolver.object_to_subjects[].append", "tuplekb_basic_csk_solver.TupleKBBasicCSKSolver.object_to_subjects[].append", "tuplekb_basic_csk_solver.TupleKBBasicCSKSolver.object_to_subjects[].append", "d_temp[].append", "d_temp[].append", "line.strip().split.strip().split.strip", "max", "max"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "name", "=", "\"TupleKB Basic CSK solver\"", "\n", "self", ".", "subject_to_objects", "=", "dict", "(", ")", "\n", "self", ".", "object_to_subjects", "=", "dict", "(", ")", "\n", "with", "open", "(", "\"/media/julien/7dc04770-227b-40fd-a591-c8e0c3a71a37/\"", "\n", "\"commonsense_data/TupleKB/aristo-tuple-kb-v5-mar2017/\"", "\n", "\"tuplekb_spor.tsv\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "subj", "=", "line", "[", "0", "]", "\n", "pred", "=", "line", "[", "1", "]", ".", "replace", "(", "\"-\"", ",", "\" \"", ")", "\n", "obj", "=", "line", "[", "2", "]", "\n", "score", "=", "float", "(", "line", "[", "3", "]", ")", "\n", "if", "subj", "in", "self", ".", "subject_to_objects", ":", "\n", "                    ", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "score", ")", ")", "\n", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "pred", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "subject_to_objects", "[", "subj", "]", "=", "[", "(", "obj", ",", "score", ")", ",", "(", "pred", ",", "score", ")", "]", "\n", "", "if", "obj", "in", "self", ".", "object_to_subjects", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "obj", "]", ".", "append", "(", "(", "subj", ",", "score", ")", ")", "\n", "self", ".", "object_to_subjects", "[", "obj", "]", ".", "append", "(", "(", "pred", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "obj", "]", "=", "[", "(", "subj", ",", "score", ")", ",", "(", "pred", ",", "score", ")", "]", "\n", "", "if", "pred", "in", "self", ".", "object_to_subjects", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "pred", "]", ".", "append", "(", "(", "subj", ",", "score", ")", ")", "\n", "self", ".", "object_to_subjects", "[", "pred", "]", ".", "append", "(", "(", "obj", ",", "score", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "object_to_subjects", "[", "pred", "]", "=", "[", "(", "subj", ",", "score", ")", ",", "(", "obj", ",", "score", ")", "]", "\n", "", "", "", "for", "subj", "in", "self", ".", "subject_to_objects", ":", "\n", "            ", "d_temp", "=", "dict", "(", ")", "\n", "for", "value", "in", "self", ".", "subject_to_objects", "[", "subj", "]", ":", "\n", "                ", "obj", "=", "value", "[", "0", "]", "\n", "score", "=", "value", "[", "1", "]", "\n", "if", "obj", "in", "d_temp", ":", "\n", "                    ", "d_temp", "[", "obj", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "                    ", "d_temp", "[", "obj", "]", "=", "[", "score", "]", "\n", "", "", "self", ".", "subject_to_objects", "[", "subj", "]", "=", "[", "]", "\n", "for", "obj", "in", "d_temp", ":", "\n", "                ", "self", ".", "subject_to_objects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "max", "(", "d_temp", "[", "obj", "]", ")", ")", ")", "\n", "", "", "for", "subj", "in", "self", ".", "object_to_subjects", ":", "\n", "            ", "d_temp", "=", "dict", "(", ")", "\n", "for", "value", "in", "self", ".", "object_to_subjects", "[", "subj", "]", ":", "\n", "                ", "obj", "=", "value", "[", "0", "]", "\n", "score", "=", "value", "[", "1", "]", "\n", "if", "obj", "in", "d_temp", ":", "\n", "                    ", "d_temp", "[", "obj", "]", ".", "append", "(", "score", ")", "\n", "", "else", ":", "\n", "                    ", "d_temp", "[", "obj", "]", "=", "[", "score", "]", "\n", "", "", "self", ".", "object_to_subjects", "[", "subj", "]", "=", "[", "]", "\n", "for", "obj", "in", "d_temp", ":", "\n", "                ", "self", ".", "object_to_subjects", "[", "subj", "]", ".", "append", "(", "(", "obj", ",", "max", "(", "d_temp", "[", "obj", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.evalui.evalui.read_exam": [[28, 35], ["print", "aristomini.common.models.Exam", "open", "aristomini.common.models.MultipleChoiceQuestion.from_jsonl"], "function", ["None"], ["def", "read_exam", "(", "path", ":", "pathlib", ".", "Path", ")", "->", "Exam", ":", "\n", "    ", "print", "(", "\"Reading\"", ",", "path", ")", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "questions", "=", "[", "MultipleChoiceQuestion", ".", "from_jsonl", "(", "line", ")", "for", "line", "in", "f", "]", "\n", "name", "=", "path", ".", "name", "\n", "\n", "", "return", "Exam", "(", "name", "=", "name", ",", "questions", "=", "questions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.evalui.evalui.get_solver_name": [[38, 50], ["requests.get", "requests.get.content.decode", "print", "print"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.spom_interface.SPOMInterface.get"], ["def", "get_solver_name", "(", "solver_url", ":", "str", "=", "SOLVER_URL", ")", "->", "str", ":", "\n", "    ", "try", ":", "\n", "        ", "resp", "=", "requests", ".", "get", "(", "f\"{SOLVER_URL}/solver-info\"", ")", "\n", "if", "resp", ".", "status_code", "==", "200", ":", "\n", "            ", "solver_name", "=", "resp", ".", "content", ".", "decode", "(", "'utf-8'", ")", "\n", "return", "solver_name", "\n", "", "else", ":", "\n", "            ", "print", "(", "f\"received status {resp.status_code} from solver at {solver_url}\"", ")", "\n", "", "", "except", "requests", ".", "exceptions", ".", "ConnectionError", ":", "\n", "        ", "print", "(", "f\"ConnectionError: unable to connect to solver at {solver_url}\"", ")", "\n", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.evalui.evalui.index": [[53, 62], ["app.route", "jinja2.Template", "jinja2.Template.render", "open", "f.read"], "function", ["None"], ["@", "app", ".", "route", "(", "'/'", ")", "\n", "def", "index", "(", ")", ":", "# pylint: disable=unused-variable", "\n", "    ", "with", "open", "(", "EVALUI_DIR", "/", "'index.html'", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "raw_html", "=", "f", ".", "read", "(", ")", "\n", "\n", "", "template", "=", "jinja2", ".", "Template", "(", "raw_html", ")", "\n", "\n", "return", "template", ".", "render", "(", "solver_url", "=", "SOLVER_URL", ",", "\n", "exam_names", "=", "EXAM_NAMES", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.evalui.evalui.exam": [[63, 76], ["app.route", "jinja2.Template", "json.loads", "simplejson.loads", "jinja2.Template.render", "evalui.get_solver_name", "open", "f.read", "json.dumps", "simplejson.dumps", "int"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.evalui.evalui.get_solver_name"], ["", "@", "app", ".", "route", "(", "'/exam/<index>'", ")", "\n", "def", "exam", "(", "index", ":", "str", ")", ":", "# pylint: disable=unused-variable", "\n", "    ", "solver_name", "=", "get_solver_name", "(", ")", "or", "''", "\n", "\n", "with", "open", "(", "EVALUI_DIR", "/", "'exam.html'", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "raw_html", "=", "f", ".", "read", "(", ")", "\n", "\n", "", "template", "=", "jinja2", ".", "Template", "(", "raw_html", ")", "\n", "\n", "exam", "=", "json", ".", "loads", "(", "json", ".", "dumps", "(", "EXAMS", "[", "int", "(", "index", ")", "]", ")", ")", "\n", "return", "template", ".", "render", "(", "solver_name", "=", "solver_name", ",", "\n", "solver_url", "=", "SOLVER_URL", ",", "\n", "exam", "=", "exam", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.evalui.evalui.send_static": [[77, 80], ["app.route", "flask.send_from_directory"], "function", ["None"], ["", "@", "app", ".", "route", "(", "'/static/<path:path>'", ")", "\n", "def", "send_static", "(", "path", ")", ":", "\n", "    ", "return", "send_from_directory", "(", "'static'", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.__init__": [[49, 56], ["model_file.endswith", "gensim.models.Word2Vec.load_word2vec_format", "model_file.endswith", "gensim.load", "gensim.models.Word2Vec.load"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.input_interface.InputInterface.load"], ["def", "__init__", "(", "self", ",", "model_file", ":", "str", ")", "->", "None", ":", "\n", "        ", "if", "model_file", ".", "endswith", "(", "\".bin\"", ")", ":", "\n", "            ", "self", ".", "model", "=", "Word2Vec", ".", "load_word2vec_format", "(", "model_file", ",", "binary", "=", "True", ")", "\n", "", "elif", "model_file", ".", "endswith", "(", "\".model\"", ")", ":", "\n", "            ", "self", ".", "model", "=", "api", ".", "load", "(", "model_file", "[", ":", "-", "6", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "model", "=", "Word2Vec", ".", "load", "(", "model_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.embed": [[57, 68], ["numpy.average", "numpy.zeros"], "methods", ["None"], ["", "", "def", "embed", "(", "self", ",", "words", ":", "Iterable", "[", "str", "]", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"given a list of words, find their vector embeddings and return the vector mean\"\"\"", "\n", "# first find the vector embedding for each word", "\n", "vectors", "=", "[", "self", ".", "model", "[", "word", "]", "for", "word", "in", "words", "if", "word", "in", "self", ".", "model", "]", "\n", "\n", "if", "vectors", ":", "\n", "# if there are vector embeddings, take the vector average", "\n", "            ", "return", "np", ".", "average", "(", "vectors", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "# otherwise just return a zero vector", "\n", "            ", "return", "np", ".", "zeros", "(", "self", ".", "model", ".", "vector_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.goodness": [[69, 80], ["wordtwovec.cosine_similarity", "wordtwovec.WordTwoVec.embed", "wordtwovec.WordTwoVec.embed", "print", "wordtwovec.tokenizer", "wordtwovec.tokenizer"], "methods", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.cosine_similarity", "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.embed", "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.WordTwoVec.embed", "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.tokenizer", "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.tokenizer"], ["", "", "def", "goodness", "(", "self", ",", "question_stem", ":", "str", ",", "choice_text", ":", "str", ")", "->", "float", ":", "\n", "        ", "\"\"\"how good is the choice for this question?\"\"\"", "\n", "question_words", "=", "{", "word", "for", "word", "in", "tokenizer", "(", "question_stem", ")", "}", "\n", "choice_words", "=", "{", "word", "for", "word", "in", "tokenizer", "(", "choice_text", ")", "if", "word", "not", "in", "question_words", "}", "\n", "\n", "score", "=", "cosine_similarity", "(", "self", ".", "embed", "(", "question_words", ")", ",", "self", ".", "embed", "(", "choice_words", ")", ")", "\n", "\n", "if", "\"Max is doing\"", "in", "question_stem", ":", "\n", "            ", "print", "(", "choice_text", ",", "score", ")", "\n", "\n", "", "return", "score", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.stem": [[21, 25], ["functools.lru_cache", "stemmer.stem"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.stem"], ["@", "lru_cache", "(", "maxsize", "=", "1024", ")", "\n", "def", "stem", "(", "word", ":", "str", ")", "->", "str", ":", "\n", "    ", "\"\"\"stemming words is not cheap, so use a cache decorator\"\"\"", "\n", "return", "stemmer", ".", "stem", "(", "word", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.tokenizer": [[27, 30], ["wordtwovec.stem", "gensim.utils.simple_preprocess"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.stem"], ["", "def", "tokenizer", "(", "sentence", ":", "str", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "\"\"\"use gensim's `simple_preprocess` and `STOPWORDS` list\"\"\"", "\n", "return", "[", "stem", "(", "token", ")", "for", "token", "in", "simple_preprocess", "(", "sentence", ")", "if", "token", "not", "in", "STOPWORDS", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.common.wordtwovec.cosine_similarity": [[32, 42], ["numpy.dot", "numpy.dot", "numpy.dot", "math.sqrt"], "function", ["None"], ["", "def", "cosine_similarity", "(", "v1", ":", "np", ".", "ndarray", ",", "v2", ":", "np", ".", "ndarray", ")", "->", "float", ":", "\n", "    ", "\"\"\"https://en.wikipedia.org/wiki/Cosine_similarity\"\"\"", "\n", "num", "=", "np", ".", "dot", "(", "v1", ",", "v2", ")", "\n", "d1", "=", "np", ".", "dot", "(", "v1", ",", "v1", ")", "\n", "d2", "=", "np", ".", "dot", "(", "v2", ",", "v2", ")", "\n", "\n", "if", "d1", ">", "0.0", "and", "d2", ">", "0.0", ":", "\n", "        ", "return", "num", "/", "math", ".", "sqrt", "(", "d1", "*", "d2", ")", "\n", "", "else", ":", "\n", "        ", "return", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_strict.lemmatize": [[47, 56], ["nlp", "res.append"], "function", ["None"], ["def", "lemmatize", "(", "s", ")", ":", "\n", "# return s", "\n", "    ", "if", "\"has_\"", "in", "s", ":", "\n", "        ", "s", "=", "\"be\"", "\n", "", "doc", "=", "nlp", "(", "s", ")", "\n", "res", "=", "[", "]", "\n", "for", "x", "in", "doc", ":", "\n", "        ", "res", ".", "append", "(", "x", ".", "lemma_", ")", "\n", "", "return", "\" \"", ".", "join", "(", "res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_strict.compute_recall": [[58, 87], ["open", "line.strip().split.strip().split", "evaluate_strict.lemmatize", "line.strip().split.strip", "lemmatize.lower", "len", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["", "def", "compute_recall", "(", "assos", ")", ":", "\n", "    ", "n_assos", "=", "0", "\n", "n_found", "=", "0", "\n", "with", "open", "(", "\"turks_data_csk.tsv\"", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "line", "[", "0", "]", "not", "in", "assos", ":", "\n", "                ", "continue", "\n", "# print(\"SUBJECT\", line[0])", "\n", "# print(\"-----------------\")", "\n", "", "for", "sentence", "in", "line", "[", "1", ":", "]", ":", "\n", "                ", "sentence", "=", "lemmatize", "(", "sentence", ".", "lower", "(", ")", ")", "\n", "n_assos", "+=", "len", "(", "sentence", ")", "-", "len", "(", "line", "[", "0", "]", ")", "\n", "maxi", "=", "0", "\n", "best", "=", "''", "\n", "for", "relation", "in", "assos", "[", "line", "[", "0", "]", "]", ":", "\n", "                    ", "if", "line", "[", "0", "]", "in", "relation", "and", "len", "(", "relation", ")", "<=", "len", "(", "\n", "line", "[", "0", "]", ")", "+", "3", ":", "\n", "                        ", "continue", "\n", "", "if", "relation", "in", "sentence", ":", "\n", "                        ", "if", "len", "(", "relation", ")", ">", "maxi", ":", "\n", "                            ", "maxi", "=", "len", "(", "relation", ")", "\n", "best", "=", "relation", "\n", "", "", "", "n_found", "+=", "maxi", "\n", "# print(\"For:\", sentence, \"Best match:\", best)", "\n", "", "", "", "if", "n_assos", ">", "0", ":", "\n", "        ", "return", "\"%.2f\"", "%", "(", "n_found", "/", "n_assos", "*", "100", ")", "+", "\"%\"", "\n", "", "else", ":", "\n", "        ", "return", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_strict.write_top5": [[96, 108], ["dict", "open", "open", "f.write", "res.append", "line.split", "dict.setdefault"], "function", ["None"], ["def", "write_top5", "(", "basename", ")", ":", "\n", "    ", "counts", "=", "dict", "(", ")", "\n", "res", "=", "[", "]", "\n", "with", "open", "(", "basename", "+", "\".tsv\"", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "subj", "=", "line", ".", "split", "(", "\"\\t\"", ")", "[", "0", "]", "\n", "if", "counts", ".", "setdefault", "(", "subj", ",", "0", ")", ">=", "TOPK", ":", "\n", "                ", "continue", "\n", "", "counts", "[", "subj", "]", "+=", "1", "\n", "res", ".", "append", "(", "line", ")", "\n", "", "", "with", "open", "(", "basename", "+", "\"_top5.tsv\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "\"\"", ".", "join", "(", "res", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_strict.read_tsv": [[110, 133], ["dict", "open", "line.strip().split.strip().split", "evaluate_strict.lemmatize", "evaluate_strict.lemmatize", "len", "assos[].add", "assos[].add", "assos[].add", "assos[].add", "line.strip().split.strip"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["", "", "def", "read_tsv", "(", "path", ")", ":", "\n", "    ", "assos", "=", "dict", "(", ")", "\n", "with", "open", "(", "path", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "len", "(", "line", ")", "<", "3", ":", "\n", "                ", "continue", "\n", "", "subj", "=", "line", "[", "0", "]", "\n", "if", "subj", "not", "in", "subjects", ":", "\n", "                ", "continue", "\n", "", "pred", "=", "line", "[", "1", "]", "\n", "if", "pred", "in", "PREDICATES_CONCEPTNET", ":", "\n", "                ", "pred", "=", "PREDICATES_CONCEPTNET", "[", "pred", "]", "\n", "", "pred", "=", "lemmatize", "(", "pred", ")", "\n", "obj", "=", "lemmatize", "(", "line", "[", "2", "]", ")", "\n", "if", "subj", "in", "assos", ":", "\n", "                ", "assos", "[", "subj", "]", ".", "add", "(", "pred", ")", "\n", "assos", "[", "subj", "]", ".", "add", "(", "obj", ")", "\n", "assos", "[", "subj", "]", ".", "add", "(", "pred", "+", "\" \"", "+", "obj", ")", "\n", "", "else", ":", "\n", "                ", "assos", "[", "subj", "]", "=", "{", "pred", ",", "obj", "}", "\n", "assos", "[", "subj", "]", ".", "add", "(", "pred", "+", "\" \"", "+", "obj", ")", "\n", "", "", "", "return", "assos", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize": [[46, 55], ["nlp", "res.append"], "function", ["None"], ["def", "lemmatize", "(", "s", ")", ":", "\n", "# return s", "\n", "    ", "if", "\"has_\"", "in", "s", ":", "\n", "        ", "s", "=", "\"be\"", "\n", "", "doc", "=", "nlp", "(", "s", ")", "\n", "res", "=", "[", "]", "\n", "for", "x", "in", "doc", ":", "\n", "        ", "res", ".", "append", "(", "x", ".", "lemma_", ")", "\n", "", "return", "\" \"", ".", "join", "(", "res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.compute_recall": [[57, 76], ["open", "line.strip().split.strip().split", "len", "evaluate_relaxed.lemmatize", "line.strip().split.strip", "relation.split"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize"], ["", "def", "compute_recall", "(", "assos", ")", ":", "\n", "    ", "n_assos", "=", "0", "\n", "n_found", "=", "0", "\n", "with", "open", "(", "\"related_words.tsv\"", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "line", "[", "0", "]", "not", "in", "assos", ":", "\n", "                ", "continue", "\n", "", "n_assos", "+=", "len", "(", "line", ")", "-", "1", "\n", "for", "word", "in", "line", "[", "1", ":", "]", ":", "\n", "                ", "word", "=", "lemmatize", "(", "word", ")", "\n", "for", "relation", "in", "assos", "[", "line", "[", "0", "]", "]", ":", "\n", "                    ", "if", "word", "in", "relation", ".", "split", "(", "\" \"", ")", ":", "\n", "                        ", "n_found", "+=", "1", "\n", "break", "\n", "", "", "", "", "", "if", "n_assos", ">", "0", ":", "\n", "        ", "return", "\"%.2f\"", "%", "(", "n_found", "/", "n_assos", "*", "100", ")", "+", "\"%\"", "\n", "", "else", ":", "\n", "        ", "return", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.write_top5": [[87, 99], ["dict", "open", "open", "f.write", "res.append", "line.split", "dict.setdefault"], "function", ["None"], ["def", "write_top5", "(", "basename", ")", ":", "\n", "    ", "counts", "=", "dict", "(", ")", "\n", "res", "=", "[", "]", "\n", "with", "open", "(", "basename", "+", "\".tsv\"", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "subj", "=", "line", ".", "split", "(", "\"\\t\"", ")", "[", "0", "]", "\n", "if", "counts", ".", "setdefault", "(", "subj", ",", "0", ")", ">=", "TOPK", ":", "\n", "                ", "continue", "\n", "", "counts", "[", "subj", "]", "+=", "1", "\n", "res", ".", "append", "(", "line", ")", "\n", "", "", "with", "open", "(", "basename", "+", "\"_top5.tsv\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "\"\"", ".", "join", "(", "res", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.read_tsv": [[101, 124], ["dict", "open", "line.strip().split.strip().split", "evaluate_relaxed.lemmatize", "evaluate_relaxed.lemmatize", "len", "assos[].add", "assos[].add", "assos[].add", "assos[].add", "line.strip().split.strip"], "function", ["home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.lemmatize", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add", "home.repos.pwc.inspect_result.Aunsiels_CSK.data_structures.multiple_scores.MultipleScore.add"], ["", "", "def", "read_tsv", "(", "path", ")", ":", "\n", "    ", "assos", "=", "dict", "(", ")", "\n", "with", "open", "(", "path", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "len", "(", "line", ")", "<", "3", ":", "\n", "                ", "continue", "\n", "", "subj", "=", "line", "[", "0", "]", "\n", "if", "subj", "not", "in", "subjects", ":", "\n", "                ", "continue", "\n", "", "pred", "=", "line", "[", "1", "]", "\n", "if", "pred", "in", "PREDICATES_CONCEPTNET", ":", "\n", "                ", "pred", "=", "PREDICATES_CONCEPTNET", "[", "pred", "]", "\n", "", "pred", "=", "lemmatize", "(", "pred", ")", "\n", "obj", "=", "lemmatize", "(", "line", "[", "2", "]", ")", "\n", "if", "subj", "in", "assos", ":", "\n", "                ", "assos", "[", "subj", "]", ".", "add", "(", "pred", ")", "\n", "assos", "[", "subj", "]", ".", "add", "(", "obj", ")", "\n", "assos", "[", "subj", "]", ".", "add", "(", "pred", "+", "\" \"", "+", "obj", ")", "\n", "", "else", ":", "\n", "                ", "assos", "[", "subj", "]", "=", "{", "pred", ",", "obj", "}", "\n", "assos", "[", "subj", "]", ".", "add", "(", "pred", "+", "\" \"", "+", "obj", ")", "\n", "", "", "", "return", "assos", "\n", "\n"]], "home.repos.pwc.inspect_result.Aunsiels_CSK.related_words_turks.evaluate_relaxed.sort_by": [[170, 181], ["sorted", "open", "open", "f.write", "sorted.append", "line.split", "float", "str", "x[].strip"], "function", ["None"], ["def", "sort_by", "(", "basename", ",", "n", ")", ":", "\n", "    ", "temp", "=", "[", "]", "\n", "first", "=", "True", "\n", "with", "open", "(", "basename", "+", "\".tsv\"", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "if", "not", "first", ":", "\n", "                ", "temp", ".", "append", "(", "line", ".", "split", "(", "\"\\t\"", ")", ")", "\n", "", "first", "=", "False", "\n", "", "", "temp", "=", "sorted", "(", "temp", ",", "key", "=", "lambda", "x", ":", "-", "float", "(", "x", "[", "n", "]", ".", "strip", "(", ")", ")", ")", "\n", "with", "open", "(", "basename", "+", "\"_sorted\"", "+", "str", "(", "n", ")", "+", "\".tsv\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "\"\"", ".", "join", "(", "\"\\t\"", ".", "join", "(", "x", ")", "for", "x", "in", "temp", ")", ")", "\n", "\n"]]}