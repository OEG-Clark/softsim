{"home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config.__init__": [[7, 34], ["switcher.get", "logging.info", "logging.warn"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config_type", ")", ":", "\n", "        ", "switcher", "=", "{", "'random_untrimmednet_thumos14'", ":", "self", ".", "_create_random_untrimmednet_thumos14_config", ",", "\n", "'random_untrimmednet_activitynet_v1-2'", ":", "self", ".", "_create_random_untrimmednet_activitynet_v1_2_config", ",", "\n", "'random_i3d_thumos14'", ":", "self", ".", "_create_random_i3d_thumos14_config", ",", "\n", "'random_i3d_activitynet_v1-2'", ":", "self", ".", "_create_random_i3d_activitynet_v1_2_config", ",", "\n", "'beta_generator_study_untrimmednet_thumos14'", ":", "self", ".", "_create_beta_generator_study_untrimmednet_thumos14_config", ",", "\n", "'beta_generator_study_i3d_thumos14'", ":", "self", ".", "_create_beta_generator_study_i3d_thumos14_config", ",", "\n", "'beta_generator_study_untrimmednet_activitynet_v1-2'", ":", "self", ".", "_create_beta_generator_study_untrimmednet_activitynet_v1_2_config", ",", "\n", "'beta_generator_study_i3d_activitynet_v1-2'", ":", "self", ".", "_create_beta_generator_study_i3d_activitynet_v1_2_config", ",", "\n", "'dropout_study_untrimmednet_thumos14'", ":", "self", ".", "_create_dropout_study_untrimmednet_thumos14_config", ",", "\n", "'dropout_study_i3d_thumos14'", ":", "self", ".", "_create_dropout_study_i3d_thumos14_config", ",", "\n", "'dropout_study_untrimmednet_activitynet_v1-2'", ":", "self", ".", "_create_dropout_study_untrimmednet_activitynet_v1_2_config", ",", "\n", "'dropout_study_i3d_activitynet_v1-2'", ":", "self", ".", "_create_dropout_study_i3d_activitynet_v1_2_config", ",", "\n", "'best_thumos14'", ":", "self", ".", "_create_best_thumos14_config", ",", "\n", "'best_activitynet_v1-2'", ":", "self", ".", "_create_best_activitynet_v1_2_config", ",", "\n", "'hacs'", ":", "self", ".", "_create_best_hacs_config", ",", "\n", "'random_hacs'", ":", "self", ".", "_create_random_hacs_config", ",", "\n", "'playground'", ":", "self", ".", "_create_playground_config", ",", "\n", "'playground_thumos'", ":", "self", ".", "_create_playground_thumos_config", ",", "\n", "'playground_thumos_unt'", ":", "self", ".", "_create_playground_thumos_unt_config", ",", "\n", "}", "\n", "self", ".", "create_config", "=", "switcher", ".", "get", "(", "config_type", ",", "None", ")", "\n", "\n", "logging", ".", "info", "(", "'Setting config type to {}'", ".", "format", "(", "config_type", ")", ")", "\n", "if", "self", ".", "create_config", "is", "None", ":", "\n", "            ", "logging", ".", "warn", "(", "'Invalid config type {}. Setting config type is to the default playground config.'", ".", "format", "(", "config_type", ")", ")", "\n", "self", ".", "create_config", "=", "self", ".", "_create_playground_config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_random_untrimmednet_thumos14_config": [[38, 84], ["logging.info", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "numpy.random.randint", "config.rnd_choice", "config.rnd_choice"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice"], ["", "", "def", "_create_random_untrimmednet_thumos14_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a random UntrimmedNet THUMOS14 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "5", ",", "\n", "'snippet_size'", ":", "15", ",", "\n", "'stream'", ":", "0", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", "**", "rnd_choice", "(", "0", ",", "4", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'pseudo_gt_loss_dim'", ":", "1", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "rnd_choice", "(", "0", ",", "1", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'alpha_fg_loss'", ":", "0", ",", "\n", "'pseudo_gt_dropout'", ":", "rnd_choice", "(", "0", ",", "0.8", ",", "0.2", ",", "output_type", "=", "float", ")", ",", "\n", "\n", "'num_layers'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'top_k_labels'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'min_cas_score'", ":", "rnd_choice", "(", "0.01", ",", "0.15", ",", "0.01", ",", "output_type", "=", "float", ")", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "[", "0.5", "]", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'refinement_min_cas_score'", ":", "rnd_choice", "(", "0.1", ",", "0.6", ",", "0.02", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_min_attention_score'", ":", "rnd_choice", "(", "0.92", ",", "0.99", ",", "0.01", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random", "\n", "\n", "'initial_lr'", ":", "10", "**", "rnd_choice", "(", "-", "4", ",", "-", "3", ",", "-", "1", ",", "output_type", "=", "float", ")", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "100", ",", "\n", "'valid_loss_early_stopping'", ":", "100", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "np", ".", "random", ".", "randint", "(", "424242", ")", ",", "\n", "'version_name'", ":", "'random_untrimmednet_thumos14'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_random_i3d_thumos14_config": [[85, 131], ["logging.info", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "numpy.random.randint", "config.rnd_choice", "config.rnd_choice"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice"], ["", "def", "_create_random_i3d_thumos14_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a random I3D THUMOS14 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "5", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "1", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", "**", "rnd_choice", "(", "0", ",", "4", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'pseudo_gt_loss_dim'", ":", "1", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "rnd_choice", "(", "0", ",", "1", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'alpha_fg_loss'", ":", "0", ",", "\n", "'pseudo_gt_dropout'", ":", "rnd_choice", "(", "0", ",", "0.8", ",", "0.2", ",", "output_type", "=", "float", ")", ",", "\n", "\n", "'num_layers'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'top_k_labels'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'min_cas_score'", ":", "rnd_choice", "(", "0.01", ",", "0.15", ",", "0.01", ",", "output_type", "=", "float", ")", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "[", "0.5", "]", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'refinement_min_cas_score'", ":", "rnd_choice", "(", "0.1", ",", "0.6", ",", "0.02", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_min_attention_score'", ":", "rnd_choice", "(", "0.92", ",", "0.99", ",", "0.01", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random", "\n", "\n", "'initial_lr'", ":", "10", "**", "rnd_choice", "(", "-", "4", ",", "-", "3", ",", "-", "1", ",", "output_type", "=", "float", ")", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "100", ",", "\n", "'valid_loss_early_stopping'", ":", "100", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "np", ".", "random", ".", "randint", "(", "424242", ")", ",", "\n", "'version_name'", ":", "'random_untrimmednet_thumos14'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_beta_generator_study_untrimmednet_thumos14_config": [[132, 179], ["logging.info"], "methods", ["None"], ["", "def", "_create_beta_generator_study_untrimmednet_thumos14_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a beta_generator_study_untrimmednet_thumos14 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "5", ",", "\n", "'snippet_size'", ":", "15", ",", "\n", "'stream'", ":", "0", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "alpha_pseudo_gt_loss", ",", "\n", "'alpha_bg_loss'", ":", "0.0", ",", "# 1.0/20.0,", "\n", "'pseudo_gt_loss_dim'", ":", "1", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "1", ",", "\n", "'pseudo_gt_dropout'", ":", "0.2", ",", "\n", "\n", "'num_layers'", ":", "1", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.02", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "[", "0.5", "]", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "2", ",", "\n", "'refinement_min_cas_score'", ":", "0.34", ",", "\n", "'refinement_min_attention_score'", ":", "0.98", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "pseudo_gt_generator_type", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "3", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "100", ",", "\n", "'valid_loss_early_stopping'", ":", "100", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "329074", ",", "# np.random.randint(424242),", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_dropout_study_untrimmednet_thumos14_config": [[180, 227], ["logging.info"], "methods", ["None"], ["", "def", "_create_dropout_study_untrimmednet_thumos14_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a dropout_study_untrimmednet_thumos14 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "5", ",", "\n", "'snippet_size'", ":", "15", ",", "\n", "'stream'", ":", "0", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "4", ",", "\n", "'alpha_bg_loss'", ":", "0.0", ",", "# 1.0/20.0,", "\n", "'pseudo_gt_loss_dim'", ":", "1", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "1", ",", "\n", "'pseudo_gt_dropout'", ":", "pseudo_gt_dropout", "/", "100", ",", "\n", "\n", "'num_layers'", ":", "1", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.02", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "[", "0.5", "]", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "2", ",", "\n", "'refinement_min_cas_score'", ":", "0.34", ",", "\n", "'refinement_min_attention_score'", ":", "0.98", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "3", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "100", ",", "\n", "'valid_loss_early_stopping'", ":", "100", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "329074", ",", "# np.random.randint(424242),", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_beta_generator_study_i3d_thumos14_config": [[228, 275], ["logging.info"], "methods", ["None"], ["", "def", "_create_beta_generator_study_i3d_thumos14_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a beta_generator_study_i3d_thumos14 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "5", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "1", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "alpha_pseudo_gt_loss", ",", "\n", "'alpha_bg_loss'", ":", "0.0", ",", "# 1.0/20.0,", "\n", "'pseudo_gt_loss_dim'", ":", "1", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "1", ",", "\n", "'pseudo_gt_dropout'", ":", "0.3", ",", "\n", "\n", "'num_layers'", ":", "2", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.35", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "[", "0.5", "]", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "2", ",", "\n", "'refinement_min_cas_score'", ":", "0.1", ",", "\n", "'refinement_min_attention_score'", ":", "0.92", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "pseudo_gt_generator_type", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "3", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "100", ",", "\n", "'valid_loss_early_stopping'", ":", "100", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "106793", ",", "# np.random.randint(424242),", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_dropout_study_i3d_thumos14_config": [[276, 323], ["logging.info"], "methods", ["None"], ["", "def", "_create_dropout_study_i3d_thumos14_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a dropout_study_i3d_thumos14 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "5", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "1", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", ",", "\n", "'alpha_bg_loss'", ":", "0.0", ",", "# 1.0/20.0,", "\n", "'pseudo_gt_loss_dim'", ":", "1", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "1", ",", "\n", "'pseudo_gt_dropout'", ":", "pseudo_gt_dropout", "/", "100", ",", "\n", "\n", "'num_layers'", ":", "2", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.35", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "[", "0.5", "]", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "2", ",", "\n", "'refinement_min_cas_score'", ":", "0.1", ",", "\n", "'refinement_min_attention_score'", ":", "0.92", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "3", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "100", ",", "\n", "'valid_loss_early_stopping'", ":", "100", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "5", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "106793", ",", "# np.random.randint(424242),", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_best_thumos14_config": [[324, 371], ["logging.info"], "methods", ["None"], ["", "def", "_create_best_thumos14_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating the best I3D THUMOS14 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "5", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "1", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", ",", "\n", "'alpha_bg_loss'", ":", "0.0", ",", "# 1.0/20.0,", "\n", "'pseudo_gt_loss_dim'", ":", "1", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "1", ",", "\n", "'pseudo_gt_dropout'", ":", "0.3", ",", "\n", "\n", "'num_layers'", ":", "2", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.35", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "[", "0.5", "]", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "2", ",", "\n", "'refinement_min_cas_score'", ":", "0.1", ",", "\n", "'refinement_min_attention_score'", ":", "0.92", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "3", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "100", ",", "\n", "'valid_loss_early_stopping'", ":", "100", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "106793", ",", "# np.random.randint(424242),", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_random_untrimmednet_activitynet_v1_2_config": [[375, 420], ["logging.info", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "numpy.linspace", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "numpy.random.randint", "config.rnd_choice", "config.rnd_choice"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice"], ["", "def", "_create_random_untrimmednet_activitynet_v1_2_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a random UntrimmedNet ActivityNet v1.2 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "15", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", "**", "rnd_choice", "(", "0", ",", "4", ",", "1", ",", "output_type", "=", "float", ")", ",", "\n", "'pseudo_gt_loss_dim'", ":", "2", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "0", ",", "\n", "'pseudo_gt_dropout'", ":", "rnd_choice", "(", "0", ",", "0.6", ",", "0.2", ",", "output_type", "=", "float", ")", ",", "\n", "\n", "'num_layers'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "rnd_choice", "(", "0.001", ",", "0.01", ",", "0.002", ",", "output_type", "=", "float", ")", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'refinement_min_cas_score'", ":", "rnd_choice", "(", "0.03", ",", "0.07", ",", "0.02", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_min_attention_score'", ":", "rnd_choice", "(", "0.3", ",", "0.7", ",", "0.2", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "rnd_choice", "(", "1", ",", "2", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random", "\n", "\n", "'initial_lr'", ":", "10", "**", "rnd_choice", "(", "-", "5", ",", "-", "4", ",", "1", ",", "output_type", "=", "float", ")", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "13", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "np", ".", "random", ".", "randint", "(", "424242", ")", ",", "\n", "'version_name'", ":", "'random_untrimmednet_activitynet_v1-2'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_random_i3d_activitynet_v1_2_config": [[421, 466], ["logging.info", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "numpy.linspace", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "numpy.random.randint", "config.rnd_choice", "config.rnd_choice"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice"], ["", "def", "_create_random_i3d_activitynet_v1_2_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a random I3D ActivityNet v1.2 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", "**", "rnd_choice", "(", "0", ",", "4", ",", "1", ",", "output_type", "=", "float", ")", ",", "\n", "'pseudo_gt_loss_dim'", ":", "2", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "0", ",", "\n", "'pseudo_gt_dropout'", ":", "rnd_choice", "(", "0", ",", "0.6", ",", "0.2", ",", "output_type", "=", "float", ")", ",", "\n", "\n", "'num_layers'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "rnd_choice", "(", "0.005", ",", "0.015", ",", "0.005", ",", "output_type", "=", "float", ")", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'refinement_min_cas_score'", ":", "rnd_choice", "(", "0.03", ",", "0.09", ",", "0.02", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_min_attention_score'", ":", "rnd_choice", "(", "0.3", ",", "0.7", ",", "0.2", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "rnd_choice", "(", "1", ",", "2", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random", "\n", "\n", "'initial_lr'", ":", "10", "**", "rnd_choice", "(", "-", "5", ",", "-", "4", ",", "1", ",", "output_type", "=", "float", ")", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "13", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "np", ".", "random", ".", "randint", "(", "424242", ")", ",", "\n", "'version_name'", ":", "'random_untrimmednet_activitynet_v1-2'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_beta_generator_study_untrimmednet_activitynet_v1_2_config": [[467, 513], ["logging.info", "numpy.linspace"], "methods", ["None"], ["", "def", "_create_beta_generator_study_untrimmednet_activitynet_v1_2_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a beta_generator_study_untrimmednet_activitynet_v1_2 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "15", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "alpha_pseudo_gt_loss", ",", "\n", "'pseudo_gt_loss_dim'", ":", "2", ",", "\n", "'weighted_psgt_loss'", ":", "0", ",", "\n", "'pseudo_gt_dropout'", ":", "0.2", ",", "\n", "\n", "'num_layers'", ":", "3", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.001", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "3", ",", "\n", "'refinement_min_cas_score'", ":", "0.07", ",", "\n", "'refinement_min_attention_score'", ":", "0.5", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "pseudo_gt_generator_type", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "4", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "127239", ",", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_dropout_study_untrimmednet_activitynet_v1_2_config": [[514, 560], ["logging.info", "numpy.linspace"], "methods", ["None"], ["", "def", "_create_dropout_study_untrimmednet_activitynet_v1_2_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a dropout_study_untrimmednet_activitynet_v1_2 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "15", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", ",", "\n", "'pseudo_gt_loss_dim'", ":", "2", ",", "\n", "'weighted_psgt_loss'", ":", "0", ",", "\n", "'pseudo_gt_dropout'", ":", "pseudo_gt_dropout", "/", "100", ",", "\n", "\n", "'num_layers'", ":", "3", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.001", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "3", ",", "\n", "'refinement_min_cas_score'", ":", "0.07", ",", "\n", "'refinement_min_attention_score'", ":", "0.5", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "4", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "127239", ",", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_beta_generator_study_i3d_activitynet_v1_2_config": [[561, 607], ["logging.info", "numpy.linspace"], "methods", ["None"], ["", "def", "_create_beta_generator_study_i3d_activitynet_v1_2_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a beta_generator_study_i3d_activitynet_v1_2 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "alpha_pseudo_gt_loss", ",", "\n", "'pseudo_gt_loss_dim'", ":", "2", ",", "\n", "'weighted_psgt_loss'", ":", "0", ",", "\n", "'pseudo_gt_dropout'", ":", "0.2", ",", "\n", "\n", "'num_layers'", ":", "2", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.005", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "3", ",", "\n", "'refinement_min_cas_score'", ":", "0.05", ",", "\n", "'refinement_min_attention_score'", ":", "0.5", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "pseudo_gt_generator_type", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "4", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "237366", ",", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_dropout_study_i3d_activitynet_v1_2_config": [[608, 654], ["logging.info", "numpy.linspace"], "methods", ["None"], ["", "def", "_create_dropout_study_i3d_activitynet_v1_2_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a dropout_study_i3d_activitynet_v1_2 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "4", ",", "\n", "'pseudo_gt_loss_dim'", ":", "2", ",", "\n", "'weighted_psgt_loss'", ":", "0", ",", "\n", "'pseudo_gt_dropout'", ":", "pseudo_gt_dropout", "/", "100", ",", "\n", "\n", "'num_layers'", ":", "2", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.005", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "3", ",", "\n", "'refinement_min_cas_score'", ":", "0.05", ",", "\n", "'refinement_min_attention_score'", ":", "0.5", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "4", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "237366", ",", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_best_activitynet_v1_2_config": [[655, 701], ["logging.info", "numpy.linspace"], "methods", ["None"], ["", "def", "_create_best_activitynet_v1_2_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating the best I3D Activitynet v1.2 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "4", ",", "\n", "'pseudo_gt_loss_dim'", ":", "2", ",", "\n", "'weighted_psgt_loss'", ":", "0", ",", "\n", "'pseudo_gt_dropout'", ":", "0.2", ",", "\n", "\n", "'num_layers'", ":", "2", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.005", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "3", ",", "\n", "'refinement_min_cas_score'", ":", "0.05", ",", "\n", "'refinement_min_attention_score'", ":", "0.5", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "4", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "237366", ",", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_random_hacs_config": [[706, 751], ["logging.info", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "numpy.linspace", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "config.rnd_choice", "numpy.random.randint", "config.rnd_choice", "config.rnd_choice"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice"], ["", "def", "_create_random_hacs_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a random UntrimmedNet ActivityNet v1.2 config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "1", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", "**", "rnd_choice", "(", "0", ",", "4", ",", "1", ",", "output_type", "=", "float", ")", ",", "\n", "'pseudo_gt_loss_dim'", ":", "rnd_choice", "(", "1", ",", "2", ",", "1", ",", "output_type", "=", "int", ")", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "rnd_choice", "(", "0", ",", "1", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'pseudo_gt_dropout'", ":", "rnd_choice", "(", "0", ",", "0.6", ",", "0.2", ",", "output_type", "=", "float", ")", ",", "\n", "\n", "'num_layers'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "rnd_choice", "(", "0.001", ",", "0.01", ",", "0.002", ",", "output_type", "=", "float", ")", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "rnd_choice", "(", "1", ",", "3", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "'refinement_min_cas_score'", ":", "rnd_choice", "(", "0.03", ",", "0.07", ",", "0.02", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_min_attention_score'", ":", "rnd_choice", "(", "0.3", ",", "0.7", ",", "0.2", ",", "output_type", "=", "float", ")", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "rnd_choice", "(", "1", ",", "2", ",", "1", ",", "output_type", "=", "int", ")", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random", "\n", "\n", "'initial_lr'", ":", "10", "**", "rnd_choice", "(", "-", "5", ",", "-", "4", ",", "1", ",", "output_type", "=", "float", ")", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "13", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "np", ".", "random", ".", "randint", "(", "424242", ")", ",", "\n", "'version_name'", ":", "'random_hacs'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_best_hacs_config": [[752, 798], ["logging.info", "numpy.linspace"], "methods", ["None"], ["", "def", "_create_best_hacs_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating the best HACS config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "1", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", ",", "\n", "'pseudo_gt_loss_dim'", ":", "2", ",", "\n", "'weighted_psgt_loss'", ":", "1", ",", "\n", "'pseudo_gt_dropout'", ":", "0.2", ",", "\n", "\n", "'num_layers'", ":", "2", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.001", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "3", ",", "\n", "'refinement_min_cas_score'", ":", "0.05", ",", "\n", "'refinement_min_attention_score'", ":", "0.5", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "\n", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "4", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "237366", ",", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_playground_config": [[802, 847], ["logging.info", "numpy.linspace"], "methods", ["None"], ["", "def", "_create_playground_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a playground config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "8", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "2", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0.0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "4", ",", "\n", "'pseudo_gt_loss_dim'", ":", "2", ",", "\n", "'weighted_psgt_loss'", ":", "1", ",", "\n", "'pseudo_gt_dropout'", ":", "0.2", ",", "\n", "\n", "'num_layers'", ":", "2", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.005", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "3", ",", "\n", "'refinement_min_cas_score'", ":", "0.05", ",", "\n", "'refinement_min_attention_score'", ":", "0.5", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "4", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "50", ",", "\n", "'valid_loss_early_stopping'", ":", "50", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "3", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "237366", ",", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_playground_thumos_config": [[848, 893], ["logging.info"], "methods", ["None"], ["", "def", "_create_playground_thumos_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a playground config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "5", ",", "\n", "'snippet_size'", ":", "16", ",", "\n", "'stream'", ":", "1", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", ",", "\n", "'pseudo_gt_loss_dim'", ":", "1", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "1", ",", "\n", "'pseudo_gt_dropout'", ":", "0.3", ",", "\n", "\n", "'num_layers'", ":", "2", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.35", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "[", "0.5", "]", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "2", ",", "\n", "'refinement_min_cas_score'", ":", "0.1", ",", "\n", "'refinement_min_attention_score'", ":", "0.92", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "3", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "100", ",", "\n", "'valid_loss_early_stopping'", ":", "100", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "5", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "106793", ",", "#np.random.randint(424242),", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.Config._create_playground_thumos_unt_config": [[894, 939], ["logging.info", "numpy.random.randint"], "methods", ["None"], ["", "def", "_create_playground_thumos_unt_config", "(", "self", ",", "alpha_pseudo_gt_loss", ",", "pseudo_gt_generator_type", ",", "pseudo_gt_dropout", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Generating a playground config'", ")", "\n", "config", "=", "{", "'num_workers'", ":", "4", ",", "\n", "'batch_size'", ":", "2", "**", "5", ",", "\n", "'snippet_size'", ":", "15", ",", "\n", "'stream'", ":", "0", ",", "# 0 for temporal only, 1 for spatial only, and 2 for both streams", "\n", "\n", "'alpha_l1_loss'", ":", "0.0", ",", "\n", "'alpha_group_sparsity_loss'", ":", "0", ",", "\n", "'alpha_pseudo_gt_loss'", ":", "2", ",", "\n", "'pseudo_gt_loss_dim'", ":", "1", ",", "# 2: Cross Entropy, 1: Logistic Regression", "\n", "'weighted_psgt_loss'", ":", "1", ",", "\n", "'pseudo_gt_dropout'", ":", "0.4", ",", "\n", "\n", "'num_layers'", ":", "1", ",", "\n", "\n", "'top_k_labels'", ":", "2", ",", "\n", "'min_cas_score'", ":", "0.05", ",", "\n", "'min_attention_score'", ":", "0.5", ",", "\n", "'padding'", ":", "2", ",", "\n", "'tiou_thresholds'", ":", "[", "0.5", "]", ",", "\n", "\n", "'refinement_top_k_labels'", ":", "2", ",", "\n", "'refinement_min_cas_score'", ":", "0.5", ",", "\n", "'refinement_min_attention_score'", ":", "0.94", ",", "\n", "'refinement_padding'", ":", "2", ",", "\n", "'refinement_from_m_iterations'", ":", "1", ",", "\n", "\n", "'pseudo_gt_generator_type'", ":", "1", ",", "# 0: oracle; 1: from predictions; 2: from attention; 3: from class activation; 4: biased random 60/40; 5: uniform random 6:gap", "\n", "\n", "'initial_lr'", ":", "10", "**", "-", "4", ",", "\n", "'lr_decay'", ":", "0.9", ",", "\n", "'lr_patience'", ":", "1", ",", "\n", "\n", "'max_epoch'", ":", "100", ",", "\n", "'valid_loss_early_stopping'", ":", "100", ",", "\n", "'refinement_iterations'", ":", "50", ",", "\n", "'refinement_early_stopping'", ":", "5", ",", "\n", "'reset'", ":", "True", ",", "\n", "\n", "'seed'", ":", "np", ".", "random", ".", "randint", "(", "424242", ")", ",", "#rm 231193", "\n", "'version_name'", ":", "'random'", ",", "\n", "'do_not_dump_in_tensorboard'", ":", "[", "'do_not_dump_in_tensorboard'", ",", "'version_name'", ",", "'tiou_thresholds'", "]", "\n", "}", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.rnd_choice": [[940, 947], ["numpy.append", "output_type", "numpy.arange", "numpy.random.choice"], "function", ["None"], ["", "", "def", "rnd_choice", "(", "start", ",", "end", ",", "step", "=", "1", ",", "output_type", "=", "float", ")", ":", "\n", "    ", "'''\n    generates a random number in [start, end] with spacing \n    size equal to step. The value of end is included.\n    '''", "\n", "nums", "=", "np", ".", "append", "(", "np", ".", "arange", "(", "start", ",", "end", ",", "step", ")", ",", "end", ")", "\n", "return", "output_type", "(", "np", ".", "random", ".", "choice", "(", "nums", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.backward_compatible_config": [[948, 960], ["config.keys", "config.keys", "config.keys", "config.keys", "config.keys"], "function", ["None"], ["", "def", "backward_compatible_config", "(", "config", ")", ":", "\n", "    ", "if", "'valid_loss_early_stopping'", "not", "in", "config", ".", "keys", "(", ")", ":", "\n", "        ", "config", "[", "'valid_loss_early_stopping'", "]", "=", "config", "[", "'max_epoch'", "]", "\n", "", "if", "'refinement_early_stopping'", "not", "in", "config", ".", "keys", "(", ")", ":", "\n", "        ", "config", "[", "'refinement_early_stopping'", "]", "=", "3", "\n", "", "if", "'weighted_psgt_loss'", "not", "in", "config", ".", "keys", "(", ")", ":", "\n", "        ", "config", "[", "'weighted_psgt_loss'", "]", "=", "False", "\n", "", "if", "'pseudo_gt_loss_dim'", "not", "in", "config", ".", "keys", "(", ")", ":", "\n", "        ", "config", "[", "'pseudo_gt_loss_dim'", "]", "=", "2", "\n", "", "if", "'pseudo_gt_dropout'", "not", "in", "config", ".", "keys", "(", ")", ":", "\n", "        ", "config", "[", "'pseudo_gt_dropout'", "]", "=", "0", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.dump_config_details_to_tensorboard": [[961, 965], ["config.items", "summary_writer.add_scalar"], "function", ["None"], ["", "def", "dump_config_details_to_tensorboard", "(", "summary_writer", ",", "config", ")", ":", "\n", "    ", "for", "k", ",", "v", "in", "config", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "not", "in", "config", "[", "'do_not_dump_in_tensorboard'", "]", ":", "\n", "            ", "summary_writer", ".", "add_scalar", "(", "'config/{}'", ".", "format", "(", "k", ")", ",", "v", ",", "0", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.eval_action_detection.EvalActionDetection.__init__": [[12, 29], ["numpy.linspace", "eval_action_detection.EvalActionDetection._import_ground_truth", "IOError", "logging.info", "len", "logging.info", "logging.info", "numpy.unique"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.eval_action_detection.EvalActionDetection._import_ground_truth"], ["    ", "def", "__init__", "(", "self", ",", "ground_truth_filename", "=", "None", ",", "\n", "tiou_thresholds", "=", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ",", "\n", "verbose", "=", "True", ")", ":", "\n", "        ", "if", "not", "ground_truth_filename", ":", "\n", "            ", "raise", "IOError", "(", "'Please input a valid ground truth file.'", ")", "\n", "", "self", ".", "tiou_thresholds", "=", "tiou_thresholds", "\n", "self", ".", "verbose", "=", "verbose", "\n", "self", ".", "ap", "=", "None", "\n", "\n", "self", ".", "ground_truth", ",", "self", ".", "activity_labels", "=", "self", ".", "_import_ground_truth", "(", "\n", "ground_truth_filename", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "logging", ".", "info", "(", "'[INIT] Loaded annotations'", ")", "\n", "nr_gt", "=", "len", "(", "np", ".", "unique", "(", "self", ".", "ground_truth", "[", "'gt-id'", "]", ")", ")", "\n", "logging", ".", "info", "(", "'\\tNumber of ground truth instances: {}'", ".", "format", "(", "nr_gt", ")", ")", "\n", "logging", ".", "info", "(", "'\\tFixed threshold for tiou score: {}'", ".", "format", "(", "self", ".", "tiou_thresholds", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.eval_action_detection.EvalActionDetection._import_ground_truth": [[30, 54], ["pandas.read_csv", "ground_truth.loc[].reset_index.loc[].reset_index.loc[].reset_index", "numpy.unique", "range", "len"], "methods", ["None"], ["", "", "def", "_import_ground_truth", "(", "self", ",", "ground_truth_filename", ")", ":", "\n", "        ", "\"\"\"Reads ground truth file, checks if it is well formatted, and returns\n           the ground truth instances and the activity classes.\n\n        Parameters\n        ----------\n        ground_truth_filename : str\n            Full path to the ground truth CSV file.\n\n        Outputs\n        -------\n        ground_truth : df\n            Data frame containing the ground truth instances.\n        activity_labels : list\n            List of the activity classes\n        \"\"\"", "\n", "ground_truth", "=", "pd", ".", "read_csv", "(", "ground_truth_filename", ")", "\n", "# remove instances of length <=0 ", "\n", "ground_truth", "=", "ground_truth", ".", "loc", "[", "ground_truth", "[", "'t-start'", "]", ".", "values", "<", "ground_truth", "[", "'t-end'", "]", ".", "values", "]", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "\n", "activity_labels", "=", "np", ".", "unique", "(", "ground_truth", "[", "'label'", "]", ")", "\n", "ground_truth", "[", "'gt-id'", "]", "=", "range", "(", "len", "(", "ground_truth", ")", ")", "\n", "\n", "return", "ground_truth", ",", "activity_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.eval_action_detection.EvalActionDetection.wrapper_compute_average_precision": [[55, 72], ["numpy.zeros", "eval_action_detection.EvalActionDetection.ground_truth.groupby", "range", "joblib.Parallel", "len", "len", "len", "len", "joblib.delayed", "eval_action_detection.EvalActionDetection.get_group().reset_index", "prediction[].reset_index", "eval_action_detection.EvalActionDetection.get_group"], "methods", ["None"], ["", "def", "wrapper_compute_average_precision", "(", "self", ",", "prediction", ")", ":", "\n", "        ", "\"\"\"Computes average precision for each class in the subset.\n        \"\"\"", "\n", "ap", "=", "np", ".", "zeros", "(", "(", "len", "(", "self", ".", "tiou_thresholds", ")", ",", "len", "(", "self", ".", "activity_labels", ")", ")", ")", "\n", "ground_truth_by_label", "=", "self", ".", "ground_truth", ".", "groupby", "(", "by", "=", "'label'", ")", "\n", "\n", "results", "=", "Parallel", "(", "n_jobs", "=", "len", "(", "self", ".", "activity_labels", ")", ")", "(", "\n", "delayed", "(", "compute_average_precision_detection", ")", "(", "\n", "ground_truth", "=", "ground_truth_by_label", ".", "get_group", "(", "l", ")", ".", "reset_index", "(", "drop", "=", "True", ")", ",", "\n", "prediction", "=", "prediction", "[", "prediction", "[", "'label'", "]", "==", "l", "]", ".", "reset_index", "(", "drop", "=", "True", ")", ",", "\n", "tiou_thresholds", "=", "self", ".", "tiou_thresholds", ",", "\n", ")", "for", "l", "in", "self", ".", "activity_labels", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "activity_labels", ")", ")", ":", "\n", "            ", "ap", "[", ":", ",", "i", "]", "=", "results", "[", "i", "]", "\n", "\n", "", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.eval_action_detection.EvalActionDetection.evaluate": [[73, 89], ["logging.info", "eval_action_detection.EvalActionDetection.wrapper_compute_average_precision", "eval_action_detection.EvalActionDetection.ap.mean", "eval_action_detection.EvalActionDetection.mAP.mean", "logging.info", "logging.info", "logging.info", "len", "len", "numpy.unique"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.eval_action_detection.EvalActionDetection.wrapper_compute_average_precision"], ["", "def", "evaluate", "(", "self", ",", "prediction", ")", ":", "\n", "        ", "\"\"\"Evaluates a prediction df. For the detection task we measure the\n        interpolated mean average precision to measure the performance of a\n        method.\n        \"\"\"", "\n", "logging", ".", "info", "(", "'\\tNumber of predictions: {}. Number of unique videos: {}'", ".", "format", "(", "len", "(", "prediction", ")", ",", "len", "(", "np", ".", "unique", "(", "prediction", "[", "'video-name'", "]", ")", ")", ")", ")", "\n", "\n", "self", ".", "ap", "=", "self", ".", "wrapper_compute_average_precision", "(", "prediction", ")", "\n", "self", ".", "mAP", "=", "self", ".", "ap", ".", "mean", "(", "axis", "=", "1", ")", "\n", "self", ".", "average_mAP", "=", "self", ".", "mAP", ".", "mean", "(", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "logging", ".", "info", "(", "'[RESULTS] Performance on ActivityNet detection task.'", ")", "\n", "logging", ".", "info", "(", "'\\tmAP: {}'", ".", "format", "(", "self", ".", "mAP", ")", ")", "\n", "logging", ".", "info", "(", "'\\tAverage-mAP: {}'", ".", "format", "(", "self", ".", "average_mAP", ")", ")", "\n", "", "return", "self", ".", "average_mAP", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.eval_action_detection.compute_average_precision_detection": [[90, 174], ["numpy.linspace", "numpy.zeros", "numpy.unique", "dict", "float", "prediction.loc[].reset_index.loc[].reset_index", "numpy.zeros", "numpy.zeros", "ground_truth.groupby", "prediction.loc[].reset_index.iterrows", "numpy.cumsum().astype", "numpy.cumsum().astype", "range", "len", "zip", "numpy.ones", "len", "prediction[].values.argsort", "ground_truth_gbvn.get_group.reset_index", "utils.segment_iou", "enumerate", "len", "utils.interpolated_prec_rec", "range", "len", "len", "len", "len", "ground_truth.groupby.get_group", "utils.segment_iou.argsort", "numpy.cumsum", "numpy.cumsum", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.segment_iou", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.interpolated_prec_rec"], ["", "", "def", "compute_average_precision_detection", "(", "ground_truth", ",", "prediction", ",", "tiou_thresholds", "=", "np", ".", "linspace", "(", "0.5", ",", "0.95", ",", "10", ")", ")", ":", "\n", "    ", "\"\"\"Compute average precision (detection task) between ground truth and\n    predictions data frames. If multiple predictions occurs for the same\n    predicted segment, only the one with highest score is matches as\n    true positive. This code is greatly inspired by Pascal VOC devkit.\n\n    Parameters\n    ----------\n    ground_truth : df\n        Data frame containing the ground truth instances.\n        Required fields: ['video-name', 't-start', 't-end']\n    prediction : df\n        Data frame containing the prediction instances.\n        Required fields: ['video-name, 't-start', 't-end', 'score']\n    tiou_thresholds : 1darray, optional\n        Temporal intersection over union threshold.\n\n    Outputs\n    -------\n    ap : float\n        Average precision score.\n    \"\"\"", "\n", "ap", "=", "np", ".", "zeros", "(", "len", "(", "tiou_thresholds", ")", ")", "\n", "if", "prediction", ".", "empty", ":", "\n", "        ", "return", "ap", "\n", "\n", "", "gt_id_lst", "=", "np", ".", "unique", "(", "ground_truth", "[", "'gt-id'", "]", ".", "values", ")", "\n", "gt_id_to_index", "=", "dict", "(", "zip", "(", "gt_id_lst", ",", "range", "(", "len", "(", "gt_id_lst", ")", ")", ")", ")", "\n", "lock_gt", "=", "np", ".", "ones", "(", "(", "len", "(", "tiou_thresholds", ")", ",", "len", "(", "gt_id_to_index", ")", ")", ")", "*", "-", "1", "\n", "\n", "npos", "=", "float", "(", "len", "(", "gt_id_lst", ")", ")", "\n", "\n", "# Sort predictions by decreasing score order.", "\n", "sort_idx", "=", "prediction", "[", "'score'", "]", ".", "values", ".", "argsort", "(", ")", "[", ":", ":", "-", "1", "]", "\n", "prediction", "=", "prediction", ".", "loc", "[", "sort_idx", "]", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "\n", "# Initialize true positive and false positive vectors.", "\n", "tp", "=", "np", ".", "zeros", "(", "(", "len", "(", "tiou_thresholds", ")", ",", "len", "(", "prediction", ")", ")", ")", "\n", "fp", "=", "np", ".", "zeros", "(", "(", "len", "(", "tiou_thresholds", ")", ",", "len", "(", "prediction", ")", ")", ")", "\n", "\n", "\n", "# Adaptation to query faster", "\n", "ground_truth_gbvn", "=", "ground_truth", ".", "groupby", "(", "by", "=", "'video-name'", ")", "\n", "\n", "# Assigning true positive to truly grount truth instances.", "\n", "for", "idx", ",", "this_pred", "in", "prediction", ".", "iterrows", "(", ")", ":", "\n", "\n", "        ", "try", ":", "\n", "# Check if there is at least one ground truth in the video associated.", "\n", "            ", "ground_truth_videoid", "=", "ground_truth_gbvn", ".", "get_group", "(", "this_pred", "[", "'video-name'", "]", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "fp", "[", ":", ",", "idx", "]", "=", "1", "\n", "continue", "\n", "\n", "", "this_gt", "=", "ground_truth_videoid", ".", "reset_index", "(", ")", "\n", "tiou_arr", "=", "segment_iou", "(", "this_pred", "[", "[", "'t-start'", ",", "'t-end'", "]", "]", ".", "values", ",", "\n", "this_gt", "[", "[", "'t-start'", ",", "'t-end'", "]", "]", ".", "values", ")", "\n", "# We would like to retrieve the predictions with highest tiou score.", "\n", "tiou_sorted_idx", "=", "tiou_arr", ".", "argsort", "(", ")", "[", ":", ":", "-", "1", "]", "\n", "for", "tidx", ",", "tiou_thr", "in", "enumerate", "(", "tiou_thresholds", ")", ":", "\n", "            ", "for", "jdx", "in", "tiou_sorted_idx", ":", "\n", "                ", "if", "tiou_arr", "[", "jdx", "]", "<", "tiou_thr", ":", "\n", "                    ", "fp", "[", "tidx", ",", "idx", "]", "=", "1", "\n", "break", "\n", "", "if", "lock_gt", "[", "tidx", ",", "gt_id_to_index", "[", "this_gt", ".", "loc", "[", "jdx", "]", "[", "'gt-id'", "]", "]", "]", ">=", "0", ":", "\n", "                    ", "continue", "\n", "# Assign as true positive after the filters above.", "\n", "", "tp", "[", "tidx", ",", "idx", "]", "=", "1", "\n", "lock_gt", "[", "tidx", ",", "gt_id_to_index", "[", "this_gt", ".", "loc", "[", "jdx", "]", "[", "'gt-id'", "]", "]", "]", "=", "idx", "\n", "break", "\n", "\n", "", "if", "fp", "[", "tidx", ",", "idx", "]", "==", "0", "and", "tp", "[", "tidx", ",", "idx", "]", "==", "0", ":", "\n", "                ", "fp", "[", "tidx", ",", "idx", "]", "=", "1", "\n", "\n", "", "", "", "tp_cumsum", "=", "np", ".", "cumsum", "(", "tp", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "fp_cumsum", "=", "np", ".", "cumsum", "(", "fp", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "recall_cumsum", "=", "tp_cumsum", "/", "npos", "\n", "\n", "precision_cumsum", "=", "recall_cumsum", "*", "npos", "/", "(", "recall_cumsum", "*", "npos", "+", "fp_cumsum", ")", "\n", "\n", "for", "tidx", "in", "range", "(", "len", "(", "tiou_thresholds", ")", ")", ":", "\n", "        ", "ap", "[", "tidx", "]", "=", "interpolated_prec_rec", "(", "precision_cumsum", "[", "tidx", ",", ":", "]", ",", "recall_cumsum", "[", "tidx", ",", ":", "]", ")", "\n", "\n", "", "return", "ap", "\n", "", ""]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.save_checkpoint": [[23, 26], ["torch.save", "logging.info"], "function", ["None"], ["def", "save_checkpoint", "(", "best_state", ",", "ckpt_filename", ")", ":", "\n", "    ", "torch", ".", "save", "(", "best_state", ",", "ckpt_filename", ")", "\n", "logging", ".", "info", "(", "f'Saved checkpoint in {ckpt_filename}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.generate_experiment_dir": [[27, 39], ["range", "Exception", "time.strftime", "os.mkdir", "uuid.uuid4", "logging.warn"], "function", ["None"], ["", "def", "generate_experiment_dir", "(", "log_dir", ")", ":", "\n", "    ", "num_trails", "=", "10", "\n", "for", "_", "in", "range", "(", "num_trails", ")", ":", "\n", "        ", "timestamp", "=", "time", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "experiment_dir", "=", "f'{log_dir}/{timestamp}__{uuid.uuid4()}'", "\n", "\n", "try", ":", "\n", "            ", "os", ".", "mkdir", "(", "experiment_dir", ")", "\n", "return", "experiment_dir", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "logging", ".", "warn", "(", "f'error making the experiment directory. {e}'", ")", "\n", "", "", "raise", "Exception", "(", "f'error making the experiment directory after trying {num_trails} times.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.dump_current_state_to_tensorboard": [[40, 52], ["summary_writer.add_scalar", "train_metrics.items", "valid_metrics.items", "summary_writer.add_scalar", "summary_writer.add_scalar", "summary_writer.add_scalar", "summary_writer.add_scalar"], "function", ["None"], ["", "def", "dump_current_state_to_tensorboard", "(", "summary_writer", ",", "config", ",", "learning_rate", ",", "train_metrics", ",", "valid_metrics", ",", "epoch", ")", ":", "\n", "    ", "summary_writer", ".", "add_scalar", "(", "'learning_rate'", ",", "learning_rate", ",", "epoch", ")", "\n", "for", "k", ",", "v", "in", "train_metrics", ".", "items", "(", ")", ":", "\n", "        ", "if", "'gt_label_accuracy'", "in", "k", ":", "\n", "            ", "summary_writer", ".", "add_scalar", "(", "f'refinement_train/{k}'", ",", "v", ",", "epoch", ")", "\n", "", "else", ":", "\n", "            ", "summary_writer", ".", "add_scalar", "(", "f'train/{k}'", ",", "v", ",", "epoch", ")", "\n", "", "", "for", "k", ",", "v", "in", "valid_metrics", ".", "items", "(", ")", ":", "\n", "        ", "if", "'gt_label_accuracy'", "in", "k", ":", "\n", "            ", "summary_writer", ".", "add_scalar", "(", "f'refinement_valid/{k}'", ",", "v", ",", "epoch", ")", "\n", "", "else", ":", "\n", "            ", "summary_writer", ".", "add_scalar", "(", "f'valid/{k}'", ",", "v", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.dump_refinement_state_to_tensorboard": [[53, 64], ["train_pseudo_gt_stats.items", "valid_pseudo_gt_stats.items", "summary_writer.add_scalar", "summary_writer.add_scalar", "summary_writer.add_scalar", "len", "summary_writer.add_scalar"], "function", ["None"], ["", "", "", "def", "dump_refinement_state_to_tensorboard", "(", "summary_writer", ",", "refinement_stats", ",", "train_pseudo_gt_stats", ",", "valid_pseudo_gt_stats", ",", "epoch", ")", ":", "\n", "    ", "for", "k", ",", "v", "in", "train_pseudo_gt_stats", ".", "items", "(", ")", ":", "\n", "        ", "summary_writer", ".", "add_scalar", "(", "f'refinement_train/{k}'", ",", "v", ",", "epoch", ")", "\n", "", "for", "k", ",", "v", "in", "valid_pseudo_gt_stats", ".", "items", "(", ")", ":", "\n", "        ", "summary_writer", ".", "add_scalar", "(", "f'refinement_valid/{k}'", ",", "v", ",", "epoch", ")", "\n", "\n", "", "iteration_number", "=", "len", "(", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", ")", "-", "1", "\n", "summary_writer", ".", "add_scalar", "(", "'refinement_valid/refined_avg_mAP'", ",", "refinement_stats", "[", "'this_iteration_avg_mAP'", "]", ",", "iteration_number", ")", "\n", "\n", "if", "iteration_number", ">", "0", ":", "\n", "        ", "summary_writer", ".", "add_scalar", "(", "'refinement_valid/refined_avg_mAP_delta'", ",", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", "[", "-", "1", "]", "-", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", "[", "-", "2", "]", ",", "iteration_number", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.dump_best_model_metrics_to_tensorboard": [[65, 77], ["best_state[].items", "best_state[].items", "summary_writer.add_scalar", "numpy.argmax", "summary_writer.add_scalar", "summary_writer.add_scalar", "summary_writer.add_scalar", "summary_writer.add_scalar", "summary_writer.add_scalar", "summary_writer.add_scalar"], "function", ["None"], ["", "", "def", "dump_best_model_metrics_to_tensorboard", "(", "summary_writer", ",", "best_state", ",", "refinement_stats", ")", ":", "\n", "    ", "for", "k", ",", "v", "in", "best_state", "[", "'train_metrics'", "]", ".", "items", "(", ")", ":", "\n", "        ", "summary_writer", ".", "add_scalar", "(", "f'best_state/train/{k}'", ",", "v", ",", "0", ")", "\n", "", "for", "k", ",", "v", "in", "best_state", "[", "'valid_metrics'", "]", ".", "items", "(", ")", ":", "\n", "        ", "summary_writer", ".", "add_scalar", "(", "f'best_state/valid/{k}'", ",", "v", ",", "0", ")", "\n", "", "summary_writer", ".", "add_scalar", "(", "'best_state/convergence_epoch'", ",", "best_state", "[", "'convergence_epoch'", "]", ",", "0", ")", "\n", "\n", "best_iteration_number", "=", "np", ".", "argmax", "(", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'best_state/base_avg_mAP'", ",", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", "[", "0", "]", ",", "0", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'best_state/refined_avg_mAP'", ",", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", "[", "best_iteration_number", "]", ",", "0", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'best_state/refined_avg_mAP_diff_from_base'", ",", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", "[", "best_iteration_number", "]", "-", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", "[", "0", "]", ",", "0", ")", "\n", "summary_writer", ".", "add_scalar", "(", "'best_state/refined_convergence_iteration'", ",", "best_iteration_number", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.create_datasets": [[78, 93], ["dataset.Dataset", "dataset.Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["None"], ["", "def", "create_datasets", "(", "config", ",", "args", ")", ":", "\n", "    ", "datasets", ",", "data_loaders", "=", "{", "}", ",", "{", "}", "\n", "\n", "datasets", "[", "'train'", "]", "=", "Dataset", "(", "features_filename", "=", "args", ".", "train_features_filename", ",", "labels_filename", "=", "args", ".", "train_labels_filename", ",", "\n", "snippet_size", "=", "config", "[", "'snippet_size'", "]", ",", "stream", "=", "config", "[", "'stream'", "]", ")", "\n", "datasets", "[", "'valid'", "]", "=", "Dataset", "(", "features_filename", "=", "args", ".", "valid_features_filename", ",", "labels_filename", "=", "args", ".", "valid_labels_filename", ",", "\n", "snippet_size", "=", "config", "[", "'snippet_size'", "]", ",", "stream", "=", "config", "[", "'stream'", "]", ")", "\n", "data_loaders", "[", "'train'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'train'", "]", ",", "batch_size", "=", "config", "[", "'batch_size'", "]", ",", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "config", "[", "'num_workers'", "]", ",", "shuffle", "=", "True", ",", "collate_fn", "=", "datasets", "[", "'train'", "]", ".", "collate_fn", ")", "\n", "data_loaders", "[", "'valid'", "]", "=", "DataLoader", "(", "dataset", "=", "datasets", "[", "'valid'", "]", ",", "batch_size", "=", "config", "[", "'batch_size'", "]", ",", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "config", "[", "'num_workers'", "]", ",", "shuffle", "=", "True", ",", "collate_fn", "=", "datasets", "[", "'valid'", "]", ".", "collate_fn", ")", "\n", "config", "[", "'num_classes'", "]", "=", "datasets", "[", "'train'", "]", ".", "num_classes", "\n", "config", "[", "'input_size'", "]", "=", "datasets", "[", "'train'", "]", ".", "feature_size", "\n", "\n", "return", "config", ",", "datasets", ",", "data_loaders", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.process_one_batch": [[94, 107], ["model", "data_loader.dataset.save_predictions", "model.loss", "features.to", "optimizer.zero_grad", "loss_results[].backward", "optimizer.step", "v.item", "numpy.isnan", "model.loss.items", "loss_results[].item"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.save_predictions", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model.loss"], ["", "def", "process_one_batch", "(", "config", ",", "model", ",", "features", ",", "targets", ",", "device", ",", "data_loader", ",", "optimizer", "=", "None", ")", ":", "\n", "    ", "cas", ",", "attention", "=", "model", "(", "features", ".", "to", "(", "device", ")", ")", "\n", "data_loader", ".", "dataset", ".", "save_predictions", "(", "targets", ",", "cas", ",", "attention", ")", "\n", "loss_results", "=", "model", ".", "loss", "(", "cas", ",", "attention", ",", "targets", ",", "device", ")", "\n", "\n", "if", "optimizer", "is", "not", "None", "and", "not", "np", ".", "isnan", "(", "loss_results", "[", "'loss'", "]", ".", "item", "(", ")", ")", ":", "\n", "        ", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_results", "[", "'loss'", "]", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "metrics", "=", "{", "k", ":", "v", ".", "item", "(", ")", "for", "(", "k", ",", "v", ")", "in", "loss_results", ".", "items", "(", ")", "}", "\n", "\n", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.full_epoch": [[108, 138], ["model.to", "data_loader.dataset.eval_saved_predictions", "accumulated_metrics.update", "data_loader.dataset.get_detection_predictions", "model.eval", "model.train", "train.process_one_batch", "process_one_batch.items", "len", "detection_eval.evaluate"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.eval_saved_predictions", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.get_detection_predictions", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.train", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.process_one_batch", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.eval_action_detection.EvalActionDetection.evaluate"], ["", "def", "full_epoch", "(", "config", ",", "model", ",", "data_loader", ",", "device", ",", "detection_eval", ",", "optimizer", "=", "None", ")", ":", "\n", "    ", "if", "optimizer", "is", "None", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "", "model", ".", "to", "(", "device", ")", "\n", "\n", "accumulated_metrics", "=", "{", "}", "\n", "for", "features", ",", "targets", "in", "data_loader", ":", "\n", "        ", "metrics", "=", "process_one_batch", "(", "config", "=", "config", ",", "model", "=", "model", ",", "features", "=", "features", ",", "targets", "=", "targets", ",", "device", "=", "device", ",", "data_loader", "=", "data_loader", ",", "optimizer", "=", "optimizer", ")", "\n", "# accumulate the metrics", "\n", "for", "metric", ",", "value", "in", "metrics", ".", "items", "(", ")", ":", "\n", "            ", "if", "metric", "not", "in", "accumulated_metrics", ":", "\n", "                ", "accumulated_metrics", "[", "metric", "]", "=", "0", "\n", "", "accumulated_metrics", "[", "metric", "]", "+=", "value", "\n", "\n", "# compute the averaged metrics", "\n", "", "", "for", "metric", "in", "accumulated_metrics", ":", "\n", "        ", "accumulated_metrics", "[", "metric", "]", "/=", "len", "(", "data_loader", ")", "\n", "\n", "", "eval_results", "=", "data_loader", ".", "dataset", ".", "eval_saved_predictions", "(", ")", "\n", "accumulated_metrics", ".", "update", "(", "eval_results", ")", "\n", "\n", "predictions_df", "=", "data_loader", ".", "dataset", ".", "get_detection_predictions", "(", "top_k_labels", "=", "config", "[", "'top_k_labels'", "]", ",", "\n", "min_cas_score", "=", "config", "[", "'min_cas_score'", "]", ",", "\n", "min_attention_score", "=", "config", "[", "'min_attention_score'", "]", ",", "\n", "padding", "=", "config", "[", "'refinement_padding'", "]", ")", "\n", "accumulated_metrics", "[", "'avg_mAP'", "]", "=", "detection_eval", ".", "evaluate", "(", "predictions_df", ")", "*", "100", "\n", "\n", "return", "accumulated_metrics", ",", "predictions_df", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.load_best_model_and_update_pseudo_gt": [[139, 187], ["model.Model.load_state_dict", "train.full_epoch", "train.full_epoch", "train_data_loader.dataset.update_pseudo_bg_fg_gt", "valid_data_loader.dataset.update_pseudo_bg_fg_gt", "logging.info", "logging.info", "model.Model.state_dict", "torch.optim.Adam.state_dict", "torch.optim.lr_scheduler.ReduceLROnPlateau.state_dict", "logging.info", "model.Model", "torch.optim.Adam", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.Adam.load_state_dict", "torch.optim.lr_scheduler.ReduceLROnPlateau.load_state_dict", "float", "float", "model.Model.parameters"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.full_epoch", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.full_epoch", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.update_pseudo_bg_fg_gt", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.update_pseudo_bg_fg_gt"], ["", "def", "load_best_model_and_update_pseudo_gt", "(", "best_state", ",", "config", ",", "model", ",", "optimizer", ",", "scheduler", ",", "train_data_loader", ",", "valid_data_loader", ",", "train_detection_eval", ",", "valid_detection_eval", ",", "device", ")", ":", "\n", "# load best model; do one forward pass to populate CAS and attenuation from the best model; update the pseudo gt", "\n", "    ", "model", ".", "load_state_dict", "(", "best_state", "[", "'model'", "]", ")", "\n", "full_epoch", "(", "config", ",", "model", ",", "train_data_loader", ",", "device", ",", "train_detection_eval", ")", "\n", "full_epoch", "(", "config", ",", "model", ",", "valid_data_loader", ",", "device", ",", "valid_detection_eval", ")", "\n", "\n", "train_pseudo_gt_stats", "=", "train_data_loader", ".", "dataset", ".", "update_pseudo_bg_fg_gt", "(", "pseudo_gt_generator_type", "=", "config", "[", "'pseudo_gt_generator_type'", "]", ",", "\n", "top_k_labels", "=", "config", "[", "'refinement_top_k_labels'", "]", ",", "\n", "min_cas_score", "=", "config", "[", "'refinement_min_cas_score'", "]", ",", "\n", "min_attention_score", "=", "config", "[", "'refinement_min_attention_score'", "]", ",", "\n", "padding", "=", "config", "[", "'refinement_padding'", "]", ",", "\n", "from_m_iterations", "=", "config", "[", "'refinement_from_m_iterations'", "]", ",", "\n", "pseudo_gt_dropout", "=", "config", "[", "'pseudo_gt_dropout'", "]", ")", "\n", "valid_pseudo_gt_stats", "=", "valid_data_loader", ".", "dataset", ".", "update_pseudo_bg_fg_gt", "(", "pseudo_gt_generator_type", "=", "config", "[", "'pseudo_gt_generator_type'", "]", ",", "\n", "top_k_labels", "=", "config", "[", "'refinement_top_k_labels'", "]", ",", "\n", "min_cas_score", "=", "config", "[", "'refinement_min_cas_score'", "]", ",", "\n", "min_attention_score", "=", "config", "[", "'refinement_min_attention_score'", "]", ",", "\n", "padding", "=", "config", "[", "'refinement_padding'", "]", ",", "\n", "from_m_iterations", "=", "config", "[", "'refinement_from_m_iterations'", "]", ",", "\n", "pseudo_gt_dropout", "=", "config", "[", "'pseudo_gt_dropout'", "]", ")", "\n", "\n", "logging", ".", "info", "(", "f'train_pseudo_gt_stats: {train_pseudo_gt_stats}'", ")", "\n", "logging", ".", "info", "(", "f'valid_pseudo_gt_stats: {valid_pseudo_gt_stats}'", ")", "\n", "\n", "# reset the model to train from scratch", "\n", "if", "config", "[", "'reset'", "]", ":", "\n", "        ", "logging", ".", "info", "(", "'Resetting the model to train from scratch'", ")", "\n", "model", "=", "Model", "(", "num_classes", "=", "config", "[", "'num_classes'", "]", ",", "input_size", "=", "config", "[", "'input_size'", "]", ",", "num_layers", "=", "config", "[", "'num_layers'", "]", ",", "\n", "alpha_l1_loss", "=", "config", "[", "'alpha_l1_loss'", "]", ",", "alpha_group_sparsity_loss", "=", "config", "[", "'alpha_group_sparsity_loss'", "]", ",", "\n", "alpha_pseudo_gt_loss", "=", "config", "[", "'alpha_pseudo_gt_loss'", "]", ",", "\n", "weighted_psgt_loss", "=", "config", "[", "'weighted_psgt_loss'", "]", ",", "\n", "pseudo_gt_loss_dim", "=", "config", "[", "'pseudo_gt_loss_dim'", "]", ")", "\n", "\n", "optimizer", "=", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "config", "[", "'initial_lr'", "]", ")", "\n", "scheduler", "=", "ReduceLROnPlateau", "(", "optimizer", ",", "'min'", ",", "factor", "=", "config", "[", "'lr_decay'", "]", ",", "patience", "=", "config", "[", "'lr_patience'", "]", ",", "verbose", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "optimizer", ".", "load_state_dict", "(", "best_state", "[", "'optimizer'", "]", ")", "\n", "scheduler", ".", "load_state_dict", "(", "best_state", "[", "'scheduler'", "]", ")", "\n", "\n", "# reset best state", "\n", "", "best_state", "[", "'model'", "]", "=", "model", ".", "state_dict", "(", ")", "\n", "best_state", "[", "'optimizer'", "]", "=", "optimizer", ".", "state_dict", "(", ")", "\n", "best_state", "[", "'scheduler'", "]", "=", "scheduler", ".", "state_dict", "(", ")", "\n", "best_state", "[", "'train_metrics'", "]", "=", "{", "'loss'", ":", "float", "(", "'inf'", ")", "}", "\n", "best_state", "[", "'valid_metrics'", "]", "=", "{", "'loss'", ":", "float", "(", "'inf'", ")", "}", "\n", "best_state", "[", "'num_epochs_since_best_valid_loss'", "]", "=", "0", "\n", "\n", "return", "best_state", ",", "model", ",", "optimizer", ",", "scheduler", ",", "train_data_loader", ",", "valid_data_loader", ",", "train_pseudo_gt_stats", ",", "valid_pseudo_gt_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.train": [[188, 280], ["config.dump_config_details_to_tensorboard", "logging.info", "eval_action_detection.EvalActionDetection", "eval_action_detection.EvalActionDetection", "model.to", "range", "train.dump_best_model_metrics_to_tensorboard", "model.state_dict", "optimizer.state_dict", "scheduler.state_dict", "logging.info", "range", "train.save_checkpoint", "refinement_stats[].append", "logging.info", "train.load_best_model_and_update_pseudo_gt", "train.dump_refinement_state_to_tensorboard", "float", "float", "time.time", "train.full_epoch", "train.full_epoch", "scheduler.step", "logging.info", "logging.info", "logging.info", "train.dump_current_state_to_tensorboard", "best_valid_predictions_df.to_csv", "numpy.max", "logging.info", "train.save_checkpoint", "logging.info", "logging.info", "numpy.isnan", "numpy.isnan", "logging.info", "logging.info", "logging.info", "logging.info", "numpy.argmax", "model.state_dict", "optimizer.state_dict", "scheduler.state_dict", "time.strftime", "time.gmtime", "numpy.round", "train_metrics.items", "numpy.round", "valid_metrics.items", "time.time"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.dump_config_details_to_tensorboard", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.dump_best_model_metrics_to_tensorboard", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.save_checkpoint", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.load_best_model_and_update_pseudo_gt", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.dump_refinement_state_to_tensorboard", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.full_epoch", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.full_epoch", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.dump_current_state_to_tensorboard", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.save_checkpoint"], ["", "def", "train", "(", "args", ",", "config", ",", "model", ",", "train_data_loader", ",", "valid_data_loader", ",", "device", ",", "optimizer", ",", "scheduler", ",", "initial_epoch", ",", "experiment_dir", ",", "summary_writer", ")", ":", "\n", "    ", "dump_config_details_to_tensorboard", "(", "summary_writer", ",", "config", ")", "\n", "logging", ".", "info", "(", "f'config {config}'", ")", "\n", "\n", "refinement_stats", "=", "{", "'this_iteration_avg_mAP'", ":", "0.0", ",", "\n", "'avg_mAP_over_iterations'", ":", "[", "]", "}", "\n", "\n", "best_state", "=", "{", "'config'", ":", "config", ",", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'scheduler'", ":", "scheduler", ".", "state_dict", "(", ")", ",", "\n", "'train_metrics'", ":", "{", "'loss'", ":", "float", "(", "'inf'", ")", "}", ",", "\n", "'valid_metrics'", ":", "{", "'loss'", ":", "float", "(", "'inf'", ")", "}", ",", "\n", "'convergence_epoch'", ":", "0", ",", "\n", "'num_epochs_since_best_valid_loss'", ":", "0", ",", "\n", "'refinement_stats'", ":", "refinement_stats", "}", "\n", "\n", "train_detection_eval", "=", "EvalActionDetection", "(", "args", ".", "train_labels_filename", ",", "tiou_thresholds", "=", "config", "[", "'tiou_thresholds'", "]", ",", "verbose", "=", "False", ")", "\n", "valid_detection_eval", "=", "EvalActionDetection", "(", "args", ".", "valid_labels_filename", ",", "tiou_thresholds", "=", "config", "[", "'tiou_thresholds'", "]", ",", "verbose", "=", "False", ")", "\n", "model", ".", "to", "(", "device", ")", "\n", "\n", "epoch_offset", "=", "0", "\n", "for", "iteration", "in", "range", "(", "config", "[", "'refinement_iterations'", "]", ")", ":", "\n", "        ", "logging", ".", "info", "(", "f'Iteration #{iteration}'", ")", "\n", "refinement_stats", "[", "'this_iteration_avg_mAP'", "]", "=", "0.0", "\n", "best_valid_predictions_df", "=", "None", "\n", "for", "epoch", "in", "range", "(", "initial_epoch", "+", "1", ",", "config", "[", "'max_epoch'", "]", "+", "1", ")", ":", "\n", "            ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "train_metrics", ",", "train_predictions_df", "=", "full_epoch", "(", "config", ",", "model", ",", "train_data_loader", ",", "device", ",", "train_detection_eval", ",", "optimizer", ")", "\n", "valid_metrics", ",", "valid_predictions_df", "=", "full_epoch", "(", "config", ",", "model", ",", "valid_data_loader", ",", "device", ",", "valid_detection_eval", ")", "\n", "\n", "# reduce the learning rate according to the scheduler policy", "\n", "learning_rate", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "scheduler", ".", "step", "(", "valid_metrics", "[", "'loss'", "]", ")", "\n", "\n", "logging", ".", "info", "(", "f'Epoch #{epoch}: [train: {train_metrics[\"loss\"]:.2e}, {[(k, np.round(v,2)) for (k,v) in train_metrics.items() if \"loss\" not in k]}]'", ")", "\n", "logging", ".", "info", "(", "f'Epoch #{epoch}: [valid: {valid_metrics[\"loss\"]:.2e}, {[(k, np.round(v,2)) for (k,v) in valid_metrics.items() if \"loss\" not in k]}]'", ")", "\n", "logging", ".", "info", "(", "f'[lr: {learning_rate:.2e}] [time: {time.strftime(\"%H:%M:%S\", time.gmtime(time.time() - start_time))}]'", ")", "\n", "\n", "dump_current_state_to_tensorboard", "(", "summary_writer", ",", "config", ",", "learning_rate", ",", "train_metrics", ",", "valid_metrics", ",", "epoch_offset", "+", "epoch", ")", "\n", "\n", "if", "np", ".", "isnan", "(", "train_metrics", "[", "'loss'", "]", ")", "or", "np", ".", "isnan", "(", "valid_metrics", "[", "'loss'", "]", ")", ":", "\n", "                ", "logging", ".", "info", "(", "'got a NAN loss. Breaking!'", ")", "\n", "break", "\n", "\n", "# save the model to disk if it has improved, or increment counter for early stopping otherwise.", "\n", "", "if", "best_state", "[", "'valid_metrics'", "]", "[", "'loss'", "]", ">=", "valid_metrics", "[", "'loss'", "]", ":", "\n", "                ", "logging", ".", "info", "(", "f'Got a new best model with valid loss = {valid_metrics[\"loss\"]:.2e} and avg_mAP = {valid_metrics[\"avg_mAP\"]:.2f}'", ")", "\n", "refinement_stats", "[", "'this_iteration_avg_mAP'", "]", "=", "valid_metrics", "[", "'avg_mAP'", "]", "\n", "best_valid_predictions_df", "=", "valid_predictions_df", "\n", "best_state", "=", "{", "'config'", ":", "config", ",", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'scheduler'", ":", "scheduler", ".", "state_dict", "(", ")", ",", "\n", "'train_metrics'", ":", "train_metrics", ",", "\n", "'valid_metrics'", ":", "valid_metrics", ",", "\n", "'convergence_epoch'", ":", "epoch", ",", "\n", "'num_epochs_since_best_valid_loss'", ":", "0", ",", "\n", "'refinement_stats'", ":", "refinement_stats", "}", "\n", "", "else", ":", "\n", "                ", "best_state", "[", "'num_epochs_since_best_valid_loss'", "]", "+=", "1", "\n", "\n", "# valid loss early stopping", "\n", "", "if", "best_state", "[", "'num_epochs_since_best_valid_loss'", "]", ">=", "config", "[", "'valid_loss_early_stopping'", "]", ":", "\n", "                ", "logging", ".", "info", "(", "'Valid loss did not improve for {} epochs!'", ".", "format", "(", "config", "[", "'valid_loss_early_stopping'", "]", ")", ")", "\n", "logging", ".", "info", "(", "'[Valid loss early stopping]'", ")", "\n", "break", "\n", "\n", "", "", "save_checkpoint", "(", "best_state", ",", "f'{experiment_dir}/best_state.ckpt'", ")", "\n", "if", "args", ".", "save_best_valid_predictions", ":", "\n", "            ", "best_valid_predictions_df", ".", "to_csv", "(", "f'{experiment_dir}/valid_predictions_iteration_{iteration:04}.csv'", ",", "index", "=", "False", ")", "\n", "\n", "", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", ".", "append", "(", "refinement_stats", "[", "'this_iteration_avg_mAP'", "]", ")", "\n", "logging", ".", "info", "(", "refinement_stats", ")", "\n", "\n", "if", "refinement_stats", "[", "'this_iteration_avg_mAP'", "]", ">=", "np", ".", "max", "(", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", ")", ":", "\n", "            ", "logging", ".", "info", "(", "f'Got a new best refinement model with avg_mAP = {refinement_stats[\"this_iteration_avg_mAP\"]:.2f}'", ")", "\n", "save_checkpoint", "(", "best_state", ",", "f'{experiment_dir}/best_refinement_state.ckpt'", ")", "\n", "\n", "", "best_state", ",", "model", ",", "optimizer", ",", "scheduler", ",", "train_data_loader", ",", "valid_data_loader", ",", "train_pseudo_gt_stats", ",", "valid_pseudo_gt_stats", "=", "load_best_model_and_update_pseudo_gt", "(", "best_state", ",", "config", ",", "model", ",", "optimizer", ",", "scheduler", ",", "train_data_loader", ",", "valid_data_loader", ",", "train_detection_eval", ",", "valid_detection_eval", ",", "device", ")", "\n", "epoch_offset", "+=", "config", "[", "'max_epoch'", "]", "\n", "dump_refinement_state_to_tensorboard", "(", "summary_writer", ",", "refinement_stats", ",", "train_pseudo_gt_stats", ",", "valid_pseudo_gt_stats", ",", "epoch_offset", ")", "\n", "\n", "# refinement early stopping", "\n", "if", "iteration", "-", "np", ".", "argmax", "(", "refinement_stats", "[", "'avg_mAP_over_iterations'", "]", ")", ">=", "config", "[", "'refinement_early_stopping'", "]", ":", "\n", "            ", "logging", ".", "info", "(", "f'Refinement did not improve avg mAP for {config[\"refinement_early_stopping\"]} iterations!'", ")", "\n", "logging", ".", "info", "(", "f'[Refinement early stopping]'", ")", "\n", "break", "\n", "\n", "", "", "dump_best_model_metrics_to_tensorboard", "(", "summary_writer", ",", "best_state", ",", "refinement_stats", ")", "\n", "\n", "return", "best_state", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.eval_model": [[281, 292], ["model.load_state_dict", "logging.info", "eval_action_detection.EvalActionDetection", "train.create_datasets", "train.full_epoch", "valid_predictions_df.to_csv", "print", "os.path.dirname"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.create_datasets", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.full_epoch"], ["", "def", "eval_model", "(", "args", ",", "config", ",", "model", ",", "best_model", ")", ":", "\n", "    ", "model", ".", "load_state_dict", "(", "best_model", ",", "strict", "=", "False", ")", "\n", "\n", "logging", ".", "info", "(", "f'Seeding with seed {config[\"seed\"]}'", ")", "\n", "valid_detection_eval", "=", "EvalActionDetection", "(", "args", ".", "valid_labels_filename", ",", "tiou_thresholds", "=", "config", "[", "'tiou_thresholds'", "]", ",", "\n", "verbose", "=", "False", ")", "\n", "config", ",", "datasets", ",", "data_loaders", "=", "create_datasets", "(", "config", ",", "args", ")", "\n", "valid_metrics", ",", "valid_predictions_df", "=", "full_epoch", "(", "config", ",", "model", ",", "data_loaders", "[", "'valid'", "]", ",", "args", ".", "device", ",", "\n", "valid_detection_eval", ")", "\n", "valid_predictions_df", ".", "to_csv", "(", "f'{os.path.dirname(args.checkpoint)}/final_valid_predictions.csv'", ",", "index", "=", "False", ")", "\n", "print", "(", "'This model mAP: {}'", ".", "format", "(", "valid_metrics", "[", "'avg_mAP'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.main": [[293, 338], ["time.time", "torch.device", "logging.info", "train.generate_experiment_dir", "tensorboardX.SummaryWriter", "logging.info", "logging.info", "config.Config().create_config", "config.backward_compatible_config", "logging.info", "numpy.random.seed", "random.seed", "torch.manual_seed", "train.create_datasets", "model.Model", "torch.optim.Adam", "torch.optim.lr_scheduler.ReduceLROnPlateau", "train.train", "torch.load", "config.backward_compatible_config", "model.Model", "train.eval_model", "model.Model.parameters", "config.Config", "time.strftime", "time.gmtime", "time.time"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.generate_experiment_dir", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.backward_compatible_config", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.create_datasets", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.train", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.config.backward_compatible_config", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.train.eval_model"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "device", "=", "torch", ".", "device", "(", "args", ".", "device", ")", "\n", "logging", ".", "info", "(", "f'using device {args.device}'", ")", "\n", "experiment_dir", "=", "generate_experiment_dir", "(", "args", ".", "log_dir", ")", "\n", "summary_writer", "=", "SummaryWriter", "(", "log_dir", "=", "experiment_dir", ")", "\n", "\n", "logging", ".", "info", "(", "f'logs and checkpoint will be saved in {experiment_dir}'", ")", "\n", "\n", "if", "args", ".", "checkpoint", "is", "None", ":", "\n", "# train from scratch", "\n", "        ", "config", "=", "Config", "(", "args", ".", "config_type", ")", ".", "create_config", "(", "alpha_pseudo_gt_loss", "=", "args", ".", "alpha_pseudo_gt_loss", ",", "\n", "pseudo_gt_generator_type", "=", "args", ".", "pseudo_gt_generator_type", ",", "\n", "pseudo_gt_dropout", "=", "args", ".", "pseudo_gt_dropout", ")", "\n", "config", "=", "backward_compatible_config", "(", "config", ")", "\n", "\n", "logging", ".", "info", "(", "f'Seeding with seed {config[\"seed\"]}'", ")", "\n", "np", ".", "random", ".", "seed", "(", "config", "[", "'seed'", "]", ")", "\n", "random", ".", "seed", "(", "config", "[", "'seed'", "]", ")", "\n", "torch", ".", "manual_seed", "(", "config", "[", "'seed'", "]", ")", "\n", "\n", "config", ",", "datasets", ",", "data_loaders", "=", "create_datasets", "(", "config", ",", "args", ")", "\n", "model", "=", "Model", "(", "num_classes", "=", "config", "[", "'num_classes'", "]", ",", "input_size", "=", "config", "[", "'input_size'", "]", ",", "num_layers", "=", "config", "[", "'num_layers'", "]", ",", "\n", "alpha_l1_loss", "=", "config", "[", "'alpha_l1_loss'", "]", ",", "alpha_group_sparsity_loss", "=", "config", "[", "'alpha_group_sparsity_loss'", "]", ",", "\n", "alpha_pseudo_gt_loss", "=", "config", "[", "'alpha_pseudo_gt_loss'", "]", ",", "weighted_psgt_loss", "=", "config", "[", "'weighted_psgt_loss'", "]", ",", "\n", "pseudo_gt_loss_dim", "=", "config", "[", "'pseudo_gt_loss_dim'", "]", ")", "\n", "\n", "optimizer", "=", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "config", "[", "'initial_lr'", "]", ")", "\n", "scheduler", "=", "ReduceLROnPlateau", "(", "optimizer", ",", "'min'", ",", "factor", "=", "config", "[", "'lr_decay'", "]", ",", "patience", "=", "config", "[", "'lr_patience'", "]", ",", "verbose", "=", "True", ")", "\n", "initial_epoch", "=", "0", "\n", "best_state", "=", "train", "(", "args", ",", "config", ",", "model", ",", "data_loaders", "[", "'train'", "]", ",", "data_loaders", "[", "'valid'", "]", ",", "device", ",", "optimizer", ",", "\n", "scheduler", ",", "initial_epoch", ",", "experiment_dir", ",", "summary_writer", ")", "\n", "", "else", ":", "\n", "        ", "best_model", "=", "torch", ".", "load", "(", "args", ".", "checkpoint", ",", "map_location", "=", "args", ".", "device", ")", "\n", "config", "=", "backward_compatible_config", "(", "best_model", "[", "'config'", "]", ")", "\n", "model", "=", "Model", "(", "num_classes", "=", "config", "[", "'num_classes'", "]", ",", "input_size", "=", "config", "[", "'input_size'", "]", ",", "\n", "num_layers", "=", "config", "[", "'num_layers'", "]", ",", "\n", "alpha_l1_loss", "=", "config", "[", "'alpha_l1_loss'", "]", ",", "\n", "alpha_group_sparsity_loss", "=", "config", "[", "'alpha_group_sparsity_loss'", "]", ",", "\n", "alpha_pseudo_gt_loss", "=", "config", "[", "'alpha_pseudo_gt_loss'", "]", ",", "\n", "weighted_psgt_loss", "=", "config", "[", "'weighted_psgt_loss'", "]", ",", "\n", "pseudo_gt_loss_dim", "=", "config", "[", "'pseudo_gt_loss_dim'", "]", ")", "\n", "eval_model", "(", "args", ",", "config", ",", "model", ",", "best_model", "[", "'model'", "]", ")", "\n", "\n", "", "logging", ".", "info", "(", "f'DONE!! Total time {time.strftime(\"%H:%M:%S\", time.gmtime(time.time() - start_time))}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.__init__": [[17, 63], ["logging.info", "numpy.random.seed", "dataset.Dataset._set_labels", "dataset.Dataset._set_features", "dict", "dict", "zip", "zip", "len", "len"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._set_labels", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._set_features"], ["def", "__init__", "(", "self", ",", "\n", "features_filename", ",", "\n", "labels_filename", ",", "\n", "snippet_size", ",", "\n", "stream", ",", "\n", "seed", "=", "424242", ")", ":", "\n", "        ", "\"\"\"\n        Parameters\n        ----------\n        features_filename : str.\n            Path to a features HDF5 file.\n        labels_filename : str.\n            Path to a CSV file. columns: video-name,t-start,t-end,label,video-duration,fps,video-num-frames\n        snippet_size : int.\n            Number of frames per snippet\n        stream : int\n            Selects which stream features to use. Cab be 0 for temporal only, 1 for spatial only, and 2 for both streams\n        \"\"\"", "\n", "logging", ".", "info", "(", "f'Dataset: features_filename {features_filename} labels_filename {labels_filename} snippet_size {snippet_size} stream {stream}'", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "self", ".", "snippet_size", "=", "snippet_size", "\n", "self", ".", "stream", "=", "stream", "\n", "self", ".", "_video_names", "=", "None", "\n", "self", ".", "_video_name_to_labels", "=", "None", "\n", "self", ".", "_video_name_to_metadata", "=", "None", "\n", "self", ".", "_video_name_to_snippets_bg_fg_gt", "=", "None", "\n", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "=", "None", "\n", "self", ".", "num_classes", "=", "None", "\n", "self", ".", "label_name_to_label_id", "=", "None", "\n", "self", ".", "label_id_to_label_name", "=", "None", "\n", "self", ".", "_set_labels", "(", "labels_filename", ")", "\n", "\n", "self", ".", "_video_name_to_snippets_features", "=", "None", "\n", "self", ".", "feature_size", "=", "None", "\n", "self", ".", "dtype", "=", "None", "\n", "self", ".", "_set_features", "(", "features_filename", ")", "\n", "\n", "self", ".", "_save_cas_predictions", "=", "dict", "(", "zip", "(", "self", ".", "_video_names", ",", "len", "(", "self", ".", "_video_names", ")", "*", "[", "None", "]", ")", ")", "\n", "self", ".", "_save_attention_predictions", "=", "dict", "(", "zip", "(", "self", ".", "_video_names", ",", "len", "(", "self", ".", "_video_names", ")", "*", "[", "None", "]", ")", ")", "\n", "\n", "self", ".", "_previous_predictions", "=", "[", "]", "\n", "\n", "self", ".", "_iter_number", "=", "0", "\n", "\n", "self", ".", "_fg_class_loss_weight", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._set_labels": [[64, 102], ["list", "pandas.read_csv", "numpy.unique", "dict", "dict", "df[].map", "pandas.read_csv.groupby", "pd.read_csv.groupby.groups.keys", "numpy.unique", "max", "numpy.zeros", "this_df.iterrows", "zip", "zip", "IOError", "max", "int", "numpy.ones_like", "range", "range", "numpy.ceil", "len", "len", "int", "int", "round", "round"], "methods", ["None"], ["", "def", "_set_labels", "(", "self", ",", "labels_filename", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "df", "=", "pd", ".", "read_csv", "(", "labels_filename", ")", "\n", "\n", "unique_labels", "=", "np", ".", "unique", "(", "df", "[", "'label'", "]", ")", "\n", "self", ".", "label_name_to_label_id", "=", "dict", "(", "zip", "(", "unique_labels", ",", "range", "(", "len", "(", "unique_labels", ")", ")", ")", ")", "\n", "self", ".", "label_id_to_label_name", "=", "dict", "(", "zip", "(", "range", "(", "len", "(", "unique_labels", ")", ")", ",", "unique_labels", ")", ")", "\n", "df", "[", "'label'", "]", "=", "df", "[", "'label'", "]", ".", "map", "(", "lambda", "x", ":", "self", ".", "label_name_to_label_id", "[", "x", "]", ")", "\n", "\n", "df_by_video_name", "=", "df", ".", "groupby", "(", "by", "=", "'video-name'", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "raise", "IOError", "(", "f'Invalid labels_filename. Error message: {e}'", ")", "\n", "\n", "", "self", ".", "_video_names", "=", "list", "(", "df_by_video_name", ".", "groups", ".", "keys", "(", ")", ")", "\n", "self", ".", "_video_name_to_labels", "=", "{", "}", "\n", "self", ".", "_video_name_to_metadata", "=", "{", "}", "\n", "self", ".", "_video_name_to_snippets_bg_fg_gt", "=", "{", "}", "\n", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "=", "{", "}", "\n", "\n", "num_classes", "=", "-", "1", "\n", "for", "video_name", ",", "this_df", "in", "df_by_video_name", ":", "\n", "            ", "labels", "=", "np", ".", "unique", "(", "this_df", "[", "'label'", "]", ")", "\n", "num_classes", "=", "max", "(", "num_classes", ",", "max", "(", "labels", ")", ")", "\n", "\n", "duration", "=", "this_df", "[", "'video-duration'", "]", ".", "values", "[", "0", "]", "\n", "fps", "=", "this_df", "[", "'fps'", "]", ".", "values", "[", "0", "]", "\n", "num_frames", "=", "this_df", "[", "'video-num-frames'", "]", ".", "values", "[", "0", "]", "\n", "\n", "bg_fg", "=", "np", ".", "zeros", "(", "int", "(", "np", ".", "ceil", "(", "num_frames", "/", "self", ".", "snippet_size", ")", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "for", "_", ",", "row", "in", "this_df", ".", "iterrows", "(", ")", ":", "\n", "                ", "bg_fg", "[", "int", "(", "round", "(", "row", "[", "'t-start'", "]", "*", "fps", "/", "self", ".", "snippet_size", ")", ")", ":", "int", "(", "round", "(", "row", "[", "'t-end'", "]", "*", "fps", "/", "self", ".", "snippet_size", ")", ")", "]", "=", "1", "\n", "\n", "", "self", ".", "_video_name_to_labels", "[", "video_name", "]", "=", "labels", "\n", "self", ".", "_video_name_to_metadata", "[", "video_name", "]", "=", "{", "'duration'", ":", "duration", ",", "'fps'", ":", "fps", ",", "'num_frames'", ":", "num_frames", "}", "\n", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "video_name", "]", "=", "bg_fg", "\n", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "=", "(", "-", "1", ")", "*", "np", ".", "ones_like", "(", "bg_fg", ")", "\n", "\n", "", "self", ".", "num_classes", "=", "num_classes", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._set_features": [[103, 141], ["h5py.File.items", "logging.info", "h5py.File", "IOError", "len", "sum", "len", "sum", "ValueError", "len", "len"], "methods", ["None"], ["", "def", "_set_features", "(", "self", ",", "features_filename", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "features", "=", "h5py", ".", "File", "(", "features_filename", ",", "'r'", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "raise", "IOError", "(", "f'Invalid HDF5 for the visual observations. Error message: {e}'", ")", "\n", "\n", "", "self", ".", "_video_name_to_snippets_features", "=", "{", "}", "\n", "\n", "num_fg", "=", "0", "\n", "num_bg", "=", "0", "\n", "total", "=", "0", "\n", "for", "k", ",", "v", "in", "features", ".", "items", "(", ")", ":", "\n", "            ", "if", "self", ".", "stream", "==", "0", ":", "\n", "# get only the temporal stream", "\n", "                ", "self", ".", "_video_name_to_snippets_features", "[", "k", "]", "=", "v", "[", ":", ",", ":", "v", ".", "shape", "[", "-", "1", "]", "//", "2", "]", "\n", "", "elif", "self", ".", "stream", "==", "1", ":", "\n", "# get only the spatial stream", "\n", "                ", "self", ".", "_video_name_to_snippets_features", "[", "k", "]", "=", "v", "[", ":", ",", "-", "v", ".", "shape", "[", "-", "1", "]", "//", "2", ":", "]", "\n", "", "elif", "self", ".", "stream", "==", "2", ":", "\n", "# temporal + spatial streams", "\n", "                ", "self", ".", "_video_name_to_snippets_features", "[", "k", "]", "=", "v", "[", ":", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "f'Got an undefined stream type {self.stream}. Possible values are 0 for temporal only, 1 for spatial only, and 2 for both streams.'", ")", "\n", "\n", "", "try", ":", "\n", "                ", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "k", "]", "=", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "k", "]", "[", ":", "len", "(", "self", ".", "_video_name_to_snippets_features", "[", "k", "]", ")", "]", "\n", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "k", "]", "=", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "k", "]", "[", ":", "len", "(", "self", ".", "_video_name_to_snippets_features", "[", "k", "]", ")", "]", "\n", "total", "+=", "len", "(", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "k", "]", ")", "\n", "num_fg", "+=", "sum", "(", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "k", "]", ")", "\n", "num_bg", "+=", "len", "(", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "k", "]", ")", "-", "sum", "(", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "k", "]", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "\n", "", "", "temp", "=", "self", ".", "_video_name_to_snippets_features", "[", "self", ".", "_video_names", "[", "0", "]", "]", "\n", "self", ".", "feature_size", "=", "temp", ".", "shape", "[", "-", "1", "]", "\n", "self", ".", "dtype", "=", "temp", ".", "dtype", "\n", "\n", "logging", ".", "info", "(", "f'num_fg {num_fg} num_bg {num_bg} total {total} num_fg/total {num_fg/total} num_bg/total {num_bg/total}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.__len__": [[142, 144], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_video_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.__getitem__": [[145, 153], ["torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "video_name", "=", "self", ".", "_video_names", "[", "idx", "]", "\n", "features", "=", "torch", ".", "tensor", "(", "self", ".", "_video_name_to_snippets_features", "[", "video_name", "]", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "# TODO: accommodate multi-label videos", "\n", "label", "=", "torch", ".", "tensor", "(", "[", "self", ".", "_video_name_to_labels", "[", "video_name", "]", "[", "0", "]", "]", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "pseudo_gt", "=", "torch", ".", "tensor", "(", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "return", "video_name", ",", "features", ",", "label", ",", "pseudo_gt", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.collate_fn": [[154, 172], ["torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "collate_fn", "(", "self", ",", "data_lst", ")", ":", "\n", "        ", "video_names", "=", "[", "_video_name", "for", "_video_name", ",", "_", ",", "_", ",", "_", "in", "data_lst", "]", "\n", "video_name_to_slice", "=", "{", "}", "\n", "current_ind", "=", "0", "\n", "for", "this_video_name", ",", "this_features", ",", "this_label", ",", "this_pseudo_gt", "in", "data_lst", ":", "\n", "            ", "video_name_to_slice", "[", "this_video_name", "]", "=", "(", "current_ind", ",", "current_ind", "+", "this_features", ".", "shape", "[", "0", "]", ")", "\n", "current_ind", "+=", "this_features", ".", "shape", "[", "0", "]", "\n", "", "features", "=", "torch", ".", "cat", "(", "[", "_features", "for", "_", ",", "_features", ",", "_", ",", "_", "in", "data_lst", "]", ",", "dim", "=", "0", ")", "\n", "labels", "=", "torch", ".", "cat", "(", "[", "_label", "for", "_", ",", "_", ",", "_label", ",", "_", "in", "data_lst", "]", ",", "dim", "=", "0", ")", "\n", "pseudo_gts", "=", "torch", ".", "cat", "(", "[", "_pseudo_gt", "for", "_", ",", "_", ",", "_", ",", "_pseudo_gt", "in", "data_lst", "]", ",", "dim", "=", "0", ")", "\n", "\n", "targets", "=", "{", "'video-names'", ":", "video_names", ",", "\n", "'video-name-to-slice'", ":", "video_name_to_slice", ",", "\n", "'labels'", ":", "labels", ",", "\n", "'pseudo-gt'", ":", "pseudo_gts", ",", "\n", "'fg_class_loss_weight'", ":", "self", ".", "_fg_class_loss_weight", ",", "\n", "}", "\n", "return", "features", ",", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.save_predictions": [[173, 180], ["cas.cpu().detach().numpy.cpu().detach().numpy.cpu().detach().numpy", "attention.cpu().detach().numpy.cpu().detach().numpy.cpu().detach().numpy", "enumerate", "cas.cpu().detach().numpy.cpu().detach().numpy.cpu().detach", "attention.cpu().detach().numpy.cpu().detach().numpy.cpu().detach", "cas.cpu().detach().numpy.cpu().detach().numpy.cpu", "attention.cpu().detach().numpy.cpu().detach().numpy.cpu"], "methods", ["None"], ["", "def", "save_predictions", "(", "self", ",", "targets", ",", "cas", ",", "attention", ")", ":", "\n", "        ", "cas", "=", "cas", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "attention", "=", "attention", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "for", "i", ",", "video_name", "in", "enumerate", "(", "targets", "[", "'video-names'", "]", ")", ":", "\n", "            ", "start", ",", "end", "=", "targets", "[", "'video-name-to-slice'", "]", "[", "video_name", "]", "\n", "self", ".", "_save_cas_predictions", "[", "video_name", "]", "=", "cas", "[", "start", ":", "end", "]", "\n", "self", ".", "_save_attention_predictions", "[", "video_name", "]", "=", "attention", "[", "start", ":", "end", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._eval_video_label_accuracy": [[181, 196], ["sklearn.metrics.accuracy_score", "sklearn.metrics.accuracy_score", "dataset.smooth_attention_function", "predictions_with_attention.append", "predictions_without_attention.append", "numpy.argmax().tolist", "numpy.argmax().tolist", "numpy.sum().tolist", "numpy.mean().tolist", "numpy.argmax", "numpy.argmax", "numpy.sum", "numpy.mean", "scipy.special.softmax", "scipy.special.softmax"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.smooth_attention_function"], ["", "", "def", "_eval_video_label_accuracy", "(", "self", ")", ":", "\n", "        ", "labels", "=", "[", "self", ".", "_video_name_to_labels", "[", "video_name", "]", "[", "0", "]", "for", "video_name", "in", "self", ".", "_video_names", "]", "\n", "predictions_with_attention", "=", "[", "]", "\n", "predictions_without_attention", "=", "[", "]", "\n", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "            ", "attention", "=", "self", ".", "_save_attention_predictions", "[", "video_name", "]", "\n", "cas", "=", "self", ".", "_save_cas_predictions", "[", "video_name", "]", "\n", "attention_across_time", ",", "_", "=", "smooth_attention_function", "(", "attention", ")", "\n", "predictions_with_attention", ".", "append", "(", "np", ".", "sum", "(", "attention_across_time", "*", "softmax", "(", "cas", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", ")", "\n", "predictions_without_attention", ".", "append", "(", "np", ".", "mean", "(", "softmax", "(", "cas", ",", "axis", "=", "-", "1", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", ")", "\n", "", "video_label_accuracy_with_attention", "=", "accuracy_score", "(", "labels", ",", "np", ".", "argmax", "(", "predictions_with_attention", ",", "axis", "=", "-", "1", ")", ".", "tolist", "(", ")", ")", "\n", "video_label_accuracy_without_attention", "=", "accuracy_score", "(", "labels", ",", "np", ".", "argmax", "(", "predictions_without_attention", ",", "axis", "=", "-", "1", ")", ".", "tolist", "(", ")", ")", "\n", "results", "=", "{", "'video_label_accuracy_with_attention'", ":", "video_label_accuracy_with_attention", "*", "100", ",", "\n", "'video_label_accuracy_without_attention'", ":", "video_label_accuracy_without_attention", "*", "100", ",", "}", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._eval_pseudo_gt_label_accuracy": [[197, 227], ["sklearn.metrics.accuracy_score", "sklearn.metrics.accuracy_score", "sklearn.metrics.accuracy_score", "dataset.smooth_attention_function", "labels.extend", "pseudo_labels.extend", "actual_labels.extend", "this_labels.tolist", "predictions.extend", "predictions.extend", "this_pseudo_labels[].tolist", "this_labels[].tolist", "predictions_on_only_pseudo_gt.extend", "predictions_on_only_pseudo_gt.extend", "numpy.argmax().tolist", "numpy.argmax().tolist", "numpy.argmax", "numpy.argmax", "attention_across_class.squeeze", "dataset.sigmoid", "attention[].squeeze"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.smooth_attention_function", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.sigmoid"], ["", "def", "_eval_pseudo_gt_label_accuracy", "(", "self", ")", ":", "\n", "        ", "labels", ",", "predictions", "=", "[", "]", ",", "[", "]", "\n", "pseudo_labels", ",", "actual_labels", ",", "predictions_on_only_pseudo_gt", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "            ", "attention", "=", "self", ".", "_save_attention_predictions", "[", "video_name", "]", "\n", "_", ",", "attention_across_class", "=", "smooth_attention_function", "(", "attention", ")", "\n", "this_labels", "=", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "video_name", "]", "\n", "labels", ".", "extend", "(", "this_labels", ".", "tolist", "(", ")", ")", "\n", "if", "attention", ".", "shape", "[", "-", "1", "]", "==", "2", ":", "\n", "                ", "predictions", ".", "extend", "(", "np", ".", "argmax", "(", "attention", ",", "axis", "=", "-", "1", ")", ".", "tolist", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "predictions", ".", "extend", "(", "(", "attention_across_class", ".", "squeeze", "(", "axis", "=", "-", "1", ")", ">=", "0.5", ")", ".", "astype", "(", "np", ".", "int", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "", "this_pseudo_labels", "=", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "\n", "idx", "=", "this_pseudo_labels", ">=", "0", "\n", "pseudo_labels", ".", "extend", "(", "this_pseudo_labels", "[", "idx", "]", ".", "tolist", "(", ")", ")", "\n", "actual_labels", ".", "extend", "(", "this_labels", "[", "idx", "]", ".", "tolist", "(", ")", ")", "\n", "if", "attention", ".", "shape", "[", "-", "1", "]", "==", "2", ":", "\n", "                ", "predictions_on_only_pseudo_gt", ".", "extend", "(", "np", ".", "argmax", "(", "attention", "[", "idx", "]", ",", "axis", "=", "-", "1", ")", ".", "tolist", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "predictions_on_only_pseudo_gt", ".", "extend", "(", "(", "sigmoid", "(", "attention", "[", "idx", "]", ".", "squeeze", "(", "axis", "=", "-", "1", ")", ")", ">=", "0.5", ")", ".", "astype", "(", "np", ".", "int", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "", "", "gt_label_accuracy_using_pseudo", "=", "accuracy_score", "(", "pseudo_labels", ",", "predictions_on_only_pseudo_gt", ")", "\n", "gt_label_accuracy_using_actual", "=", "accuracy_score", "(", "actual_labels", ",", "predictions_on_only_pseudo_gt", ")", "\n", "gt_label_accuracy", "=", "accuracy_score", "(", "labels", ",", "predictions", ")", "\n", "results", "=", "{", "'gt_label_accuracy_using_pseudo'", ":", "gt_label_accuracy_using_pseudo", "*", "100", ",", "\n", "'gt_label_accuracy_using_actual'", ":", "gt_label_accuracy_using_actual", "*", "100", ",", "\n", "'gt_label_accuracy'", ":", "gt_label_accuracy", "*", "100", ",", "}", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.eval_saved_predictions": [[228, 233], ["results.update", "results.update", "dataset.Dataset._eval_video_label_accuracy", "dataset.Dataset._eval_pseudo_gt_label_accuracy"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._eval_video_label_accuracy", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._eval_pseudo_gt_label_accuracy"], ["", "def", "eval_saved_predictions", "(", "self", ")", ":", "\n", "        ", "results", "=", "{", "}", "\n", "results", ".", "update", "(", "self", ".", "_eval_video_label_accuracy", "(", ")", ")", "\n", "results", ".", "update", "(", "self", ".", "_eval_pseudo_gt_label_accuracy", "(", ")", ")", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.get_detection_predictions": [[234, 252], ["logging.info", "pandas.concat().reset_index", "predictions_df[].map", "predictions_df_lst.append", "dataset.get_detection_predictions_for_one_video", "pandas.concat"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.get_detection_predictions_for_one_video"], ["", "def", "get_detection_predictions", "(", "self", ",", "top_k_labels", ",", "min_cas_score", ",", "min_attention_score", ",", "padding", ")", ":", "\n", "        ", "logging", ".", "info", "(", "f'Computing predictions top_k_labels {top_k_labels} min_cas_score {min_cas_score} min_attention_score {min_attention_score}'", ")", "\n", "predictions_df_lst", "=", "[", "]", "\n", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "            ", "predictions_df_lst", ".", "append", "(", "get_detection_predictions_for_one_video", "(", "\n", "video_name", "=", "video_name", ",", "\n", "fps", "=", "self", ".", "_video_name_to_metadata", "[", "video_name", "]", "[", "'fps'", "]", ",", "\n", "snippet_size", "=", "self", ".", "snippet_size", ",", "\n", "cas", "=", "self", ".", "_save_cas_predictions", "[", "video_name", "]", ",", "\n", "attention", "=", "self", ".", "_save_attention_predictions", "[", "video_name", "]", ",", "\n", "top_k_labels", "=", "top_k_labels", ",", "\n", "min_cas_score", "=", "min_cas_score", ",", "\n", "min_attention_score", "=", "min_attention_score", ",", "\n", "padding", "=", "padding", ")", "\n", ")", "\n", "", "predictions_df", "=", "pd", ".", "concat", "(", "predictions_df_lst", ",", "axis", "=", "0", ")", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "predictions_df", "[", "'label'", "]", "=", "predictions_df", "[", "'label'", "]", ".", "map", "(", "lambda", "x", ":", "self", ".", "label_id_to_label_name", "[", "x", "]", ")", "\n", "return", "predictions_df", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.get_oracle_predictions": [[253, 268], ["pandas.concat().reset_index", "predictions_df[].map", "predictions_df_lst.append", "dataset.get_oracle_predictions_for_one_video", "pandas.concat"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.get_oracle_predictions_for_one_video"], ["", "def", "get_oracle_predictions", "(", "self", ",", "padding", ")", ":", "\n", "#logging.info(f'Computing predictions top_k_labels {top_k_labels} min_cas_score {min_cas_score} min_attention_score {min_attention_score}')", "\n", "        ", "predictions_df_lst", "=", "[", "]", "\n", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "            ", "predictions_df_lst", ".", "append", "(", "get_oracle_predictions_for_one_video", "(", "\n", "oracle_predictions", "=", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "video_name", "]", ",", "\n", "label", "=", "self", ".", "_video_name_to_labels", "[", "video_name", "]", "[", "0", "]", ",", "\n", "video_name", "=", "video_name", ",", "\n", "fps", "=", "self", ".", "_video_name_to_metadata", "[", "video_name", "]", "[", "'fps'", "]", ",", "\n", "snippet_size", "=", "self", ".", "snippet_size", ",", "\n", "padding", "=", "padding", ")", "\n", ")", "\n", "", "predictions_df", "=", "pd", ".", "concat", "(", "predictions_df_lst", ",", "axis", "=", "0", ")", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "predictions_df", "[", "'label'", "]", "=", "predictions_df", "[", "'label'", "]", ".", "map", "(", "lambda", "x", ":", "self", ".", "label_id_to_label_name", "[", "x", "]", ")", "\n", "return", "predictions_df", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.update_pseudo_bg_fg_gt": [[269, 308], ["switcher.get", "logging.info", "switcher.get.", "dataset.Dataset._compute_stats_for_pseudo_gt", "ValueError", "numpy.random.choice", "range", "len", "int", "len"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._compute_stats_for_pseudo_gt"], ["", "def", "update_pseudo_bg_fg_gt", "(", "self", ",", "pseudo_gt_generator_type", ",", "top_k_labels", ",", "min_cas_score", ",", "min_attention_score", ",", "\n", "padding", ",", "from_m_iterations", ",", "pseudo_gt_dropout", ")", ":", "\n", "\n", "        ", "switcher", "=", "{", "0", ":", "self", ".", "_oracle_pseudo_gt_generator", ",", "\n", "1", ":", "self", ".", "_prediction_based_pseudo_gt_generator", ",", "\n", "2", ":", "self", ".", "_attention_based_pseudo_gt_generator", ",", "\n", "3", ":", "self", ".", "_cas_based_pseudo_gt_generator", ",", "\n", "4", ":", "self", ".", "_biased_random_pseudo_gt_generator", ",", "\n", "5", ":", "self", ".", "_uniform_random_pseudo_gt_generator", ",", "\n", "}", "\n", "generator", "=", "switcher", ".", "get", "(", "pseudo_gt_generator_type", ",", "None", ")", "\n", "\n", "if", "generator", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "f'Invalid pseudo_gt_generator_type {pseudo_gt_generator_type}.'", ")", "\n", "\n", "", "self", ".", "_iter_number", "+=", "1", "\n", "args", "=", "{", "'top_k_labels'", ":", "top_k_labels", ",", "\n", "'min_cas_score'", ":", "min_cas_score", ",", "\n", "'min_attention_score'", ":", "min_attention_score", ",", "\n", "'padding'", ":", "padding", ",", "\n", "'from_m_iterations'", ":", "from_m_iterations", "}", "\n", "logging", ".", "info", "(", "f'Generating pseudo background/foreground ground truth using {generator.__name__}. args {args}'", ")", "\n", "\n", "generator", "(", "args", ")", "\n", "\n", "stats", "=", "self", ".", "_compute_stats_for_pseudo_gt", "(", ")", "\n", "\n", "\n", "# Drop out some of the pseudo gt labels", "\n", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "            ", "this_video", "=", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "\n", "idx", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "len", "(", "this_video", ")", ")", ",", "size", "=", "int", "(", "len", "(", "this_video", ")", "*", "pseudo_gt_dropout", ")", ",", "replace", "=", "False", ")", "\n", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "[", "idx", "]", "=", "-", "1", "\n", "\n", "\n", "# update fg_class_loss_weight", "\n", "", "self", ".", "_fg_class_loss_weight", "=", "stats", "[", "'fg_class_loss_weight'", "]", "\n", "\n", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._compute_stats_for_pseudo_gt": [[309, 328], ["sum", "sum", "sum", "sum", "sum", "sum"], "methods", ["None"], ["", "def", "_compute_stats_for_pseudo_gt", "(", "self", ")", ":", "\n", "        ", "num_true_fg", ",", "num_true_bg", ",", "total_pseudo_fg", ",", "total_pseudo_bg", ",", "total_fg", ",", "total_bg", "=", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "\n", "\n", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "            ", "num_true_fg", "+=", "sum", "(", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "video_name", "]", "[", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "==", "1", "]", ")", "\n", "num_true_bg", "+=", "sum", "(", "1", "-", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "video_name", "]", "[", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "==", "0", "]", ")", "\n", "total_pseudo_fg", "+=", "sum", "(", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "==", "1", ")", "\n", "total_pseudo_bg", "+=", "sum", "(", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "==", "0", ")", "\n", "total_fg", "+=", "sum", "(", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "video_name", "]", "==", "1", ")", "\n", "total_bg", "+=", "sum", "(", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "video_name", "]", "==", "0", ")", "\n", "\n", "", "stats", "=", "{", "'num_true_fg'", ":", "num_true_fg", ",", "'num_true_bg'", ":", "num_true_bg", ",", "\n", "'total_pseudo_fg'", ":", "total_pseudo_fg", ",", "'total_pseudo_bg'", ":", "total_pseudo_bg", ",", "\n", "'num_true_fg/total_pseudo_fg'", ":", "0", "if", "total_pseudo_fg", "==", "0", "else", "num_true_fg", "/", "total_pseudo_fg", ",", "\n", "'num_true_bg/total_pseudo_bg'", ":", "0", "if", "total_pseudo_bg", "==", "0", "else", "num_true_bg", "/", "total_pseudo_bg", ",", "\n", "'num_true_fg/total_fg'", ":", "0", "if", "total_fg", "==", "0", "else", "num_true_fg", "/", "total_fg", ",", "\n", "'num_true_bg/total_bg'", ":", "0", "if", "total_bg", "==", "0", "else", "num_true_bg", "/", "total_bg", ",", "\n", "'fg_class_loss_weight'", ":", "total_pseudo_bg", "/", "(", "total_pseudo_bg", "+", "total_pseudo_fg", ")", "}", "\n", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._oracle_pseudo_gt_generator": [[329, 347], ["dataset.Dataset.get_oracle_predictions", "dataset.Dataset._previous_predictions.append", "pandas.concat().reset_index", "pandas.concat().reset_index.groupby", "len", "this_df.iterrows", "pandas.concat", "max", "max", "min", "min", "int", "len", "int", "len", "round", "round"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.get_oracle_predictions"], ["", "def", "_oracle_pseudo_gt_generator", "(", "self", ",", "args", ")", ":", "\n", "        ", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "# rest all snippets to background", "\n", "            ", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "[", ":", "]", "=", "0", "# pseudo background", "\n", "\n", "", "predictions_df", "=", "self", ".", "get_oracle_predictions", "(", "padding", "=", "args", "[", "'padding'", "]", ")", "\n", "self", ".", "_previous_predictions", ".", "append", "(", "predictions_df", ")", "\n", "if", "len", "(", "self", ".", "_previous_predictions", ")", ">", "args", "[", "'from_m_iterations'", "]", ":", "\n", "            ", "self", ".", "_previous_predictions", "=", "self", ".", "_previous_predictions", "[", "-", "args", "[", "'from_m_iterations'", "]", ":", "]", "\n", "", "predictions_df", "=", "pd", ".", "concat", "(", "self", ".", "_previous_predictions", ",", "axis", "=", "0", ")", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "\n", "for", "video_name", ",", "this_df", "in", "predictions_df", ".", "groupby", "(", "by", "=", "'video-name'", ")", ":", "\n", "            ", "fps", "=", "self", ".", "_video_name_to_metadata", "[", "video_name", "]", "[", "'fps'", "]", "\n", "# set the snippets in the prediction segments to foreground", "\n", "for", "_", ",", "row", "in", "this_df", ".", "iterrows", "(", ")", ":", "\n", "                ", "start_snippet", "=", "max", "(", "min", "(", "int", "(", "round", "(", "row", "[", "'t-start'", "]", "*", "fps", "/", "self", ".", "snippet_size", ")", ")", ",", "len", "(", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", ")", ")", ",", "0", ")", "\n", "end_snippet", "=", "max", "(", "min", "(", "int", "(", "round", "(", "row", "[", "'t-end'", "]", "*", "fps", "/", "self", ".", "snippet_size", ")", ")", ",", "len", "(", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", ")", ")", ",", "0", ")", "\n", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "[", "start_snippet", ":", "end_snippet", "+", "1", "]", "=", "1", "# pseudo foreground", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._prediction_based_pseudo_gt_generator": [[348, 366], ["dataset.Dataset.get_detection_predictions", "dataset.Dataset._previous_predictions.append", "pandas.concat().reset_index", "pandas.concat().reset_index.groupby", "len", "this_df.iterrows", "pandas.concat", "max", "max", "min", "min", "int", "len", "int", "len", "round", "round"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset.get_detection_predictions"], ["", "", "", "def", "_prediction_based_pseudo_gt_generator", "(", "self", ",", "args", ")", ":", "\n", "        ", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "# rest all snippets to background", "\n", "            ", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "[", ":", "]", "=", "0", "# pseudo background", "\n", "\n", "", "predictions_df", "=", "self", ".", "get_detection_predictions", "(", "args", "[", "'top_k_labels'", "]", ",", "args", "[", "'min_cas_score'", "]", ",", "args", "[", "'min_attention_score'", "]", ",", "args", "[", "'padding'", "]", ")", "\n", "self", ".", "_previous_predictions", ".", "append", "(", "predictions_df", ")", "\n", "if", "len", "(", "self", ".", "_previous_predictions", ")", ">", "args", "[", "'from_m_iterations'", "]", ":", "\n", "            ", "self", ".", "_previous_predictions", "=", "self", ".", "_previous_predictions", "[", "-", "args", "[", "'from_m_iterations'", "]", ":", "]", "\n", "", "predictions_df", "=", "pd", ".", "concat", "(", "self", ".", "_previous_predictions", ",", "axis", "=", "0", ")", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "\n", "for", "video_name", ",", "this_df", "in", "predictions_df", ".", "groupby", "(", "by", "=", "'video-name'", ")", ":", "\n", "            ", "fps", "=", "self", ".", "_video_name_to_metadata", "[", "video_name", "]", "[", "'fps'", "]", "\n", "# set the snippets in the prediction segments to foreground", "\n", "for", "_", ",", "row", "in", "this_df", ".", "iterrows", "(", ")", ":", "\n", "                ", "start_snippet", "=", "max", "(", "min", "(", "int", "(", "round", "(", "row", "[", "'t-start'", "]", "*", "fps", "/", "self", ".", "snippet_size", ")", ")", ",", "len", "(", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", ")", ")", ",", "0", ")", "\n", "end_snippet", "=", "max", "(", "min", "(", "int", "(", "round", "(", "row", "[", "'t-end'", "]", "*", "fps", "/", "self", ".", "snippet_size", ")", ")", ",", "len", "(", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", ")", ")", ",", "0", ")", "\n", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "[", "start_snippet", ":", "end_snippet", "+", "1", "]", "=", "1", "# pseudo foreground", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._attention_based_pseudo_gt_generator": [[367, 370], ["dataset.Dataset._prediction_based_pseudo_gt_generator"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._prediction_based_pseudo_gt_generator"], ["", "", "", "def", "_attention_based_pseudo_gt_generator", "(", "self", ",", "args", ")", ":", "\n", "        ", "args", "[", "'min_cas_score'", "]", "=", "0", "\n", "self", ".", "_prediction_based_pseudo_gt_generator", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._cas_based_pseudo_gt_generator": [[371, 374], ["dataset.Dataset._prediction_based_pseudo_gt_generator"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._prediction_based_pseudo_gt_generator"], ["", "def", "_cas_based_pseudo_gt_generator", "(", "self", ",", "args", ")", ":", "\n", "        ", "args", "[", "'min_attention_score'", "]", "=", "0", "\n", "self", ".", "_prediction_based_pseudo_gt_generator", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._biased_random_pseudo_gt_generator": [[375, 378], ["numpy.random.choice", "len"], "methods", ["None"], ["", "def", "_biased_random_pseudo_gt_generator", "(", "self", ",", "args", ")", ":", "\n", "        ", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "            ", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "size", "=", "len", "(", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "video_name", "]", ")", ",", "p", "=", "[", "0.4", ",", "0.6", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.Dataset._uniform_random_pseudo_gt_generator": [[379, 382], ["numpy.random.choice", "len"], "methods", ["None"], ["", "", "def", "_uniform_random_pseudo_gt_generator", "(", "self", ",", "args", ")", ":", "\n", "        ", "for", "video_name", "in", "self", ".", "_video_names", ":", "\n", "            ", "self", ".", "_video_name_to_snippets_pseudo_bg_fg_gt", "[", "video_name", "]", "=", "np", ".", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ",", "size", "=", "len", "(", "self", ".", "_video_name_to_snippets_bg_fg_gt", "[", "video_name", "]", ")", ",", "p", "=", "[", "0.5", ",", "0.5", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.sigmoid": [[384, 386], ["numpy.exp"], "function", ["None"], ["", "", "", "def", "sigmoid", "(", "X", ")", ":", "\n", "    ", "return", "1", "/", "(", "1", "+", "np", ".", "exp", "(", "-", "X", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.smooth_cas": [[387, 390], ["numpy.append"], "function", ["None"], ["", "def", "smooth_cas", "(", "cas", ")", ":", "\n", "    ", "cas_shifted", "=", "np", ".", "append", "(", "cas", "[", "1", ":", ",", "...", "]", ",", "cas", "[", ":", "1", ",", "...", "]", ",", "axis", "=", "0", ")", "\n", "return", "(", "cas", "+", "cas_shifted", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.min_or_max": [[391, 393], ["max", "min"], "function", ["None"], ["", "def", "min_or_max", "(", "x", ",", "shift", ")", ":", "\n", "    ", "return", "max", "(", "0", ",", "x", ")", "if", "shift", "<=", "0", "else", "min", "(", "x", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.smooth_attention_function": [[395, 404], ["scipy.special.softmax", "scipy.special.softmax", "dataset.sigmoid", "scipy.special.softmax"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.sigmoid"], ["", "def", "smooth_attention_function", "(", "input_vector", ")", ":", "\n", "    ", "if", "input_vector", ".", "shape", "[", "-", "1", "]", "==", "2", ":", "\n", "        ", "out_attention_class", "=", "softmax", "(", "input_vector", ",", "axis", "=", "-", "1", ")", "\n", "out_attention_time", "=", "softmax", "(", "out_attention_class", ",", "axis", "=", "-", "2", ")", "[", "...", ",", "1", ":", "2", "]", "\n", "out_attention_class", "=", "out_attention_class", "[", "...", ",", "1", "]", "\n", "", "else", ":", "\n", "        ", "out_attention_time", "=", "softmax", "(", "input_vector", ",", "axis", "=", "-", "2", ")", "\n", "out_attention_class", "=", "sigmoid", "(", "input_vector", ")", "\n", "", "return", "out_attention_time", ",", "out_attention_class", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.get_detection_predictions_for_one_video": [[405, 447], ["scipy.special.softmax", "dataset.smooth_attention_function", "numpy.sum", "pandas.DataFrame", "numpy.logical_and", "scipy.ndimage.morphology.binary_dilation", "skimage.measure.label", "range", "numpy.argsort", "scipy.ndimage.morphology.binary_dilation.astype", "numpy.where", "max", "min", "predictions[].append", "predictions[].append", "predictions[].append", "predictions[].append", "predictions[].append", "attention_across_class.squeeze", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "dataset.sigmoid"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.smooth_attention_function", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.sigmoid"], ["", "def", "get_detection_predictions_for_one_video", "(", "video_name", ",", "fps", ",", "snippet_size", ",", "cas", ",", "attention", ",", "\n", "top_k_labels", ",", "min_cas_score", ",", "min_attention_score", ",", "padding", ")", ":", "\n", "    ", "cas", "=", "softmax", "(", "cas", ",", "axis", "=", "-", "1", ")", "\n", "attention_across_time", ",", "attention_across_class", "=", "smooth_attention_function", "(", "attention", ")", "\n", "video_score", "=", "np", ".", "sum", "(", "attention_across_time", "*", "cas", ",", "axis", "=", "0", ")", "\n", "\n", "predictions", "=", "{", "'t-start'", ":", "[", "]", ",", "\n", "'t-end'", ":", "[", "]", ",", "\n", "'label'", ":", "[", "]", ",", "\n", "'score'", ":", "[", "]", ",", "\n", "'video-name'", ":", "[", "]", "\n", "}", "\n", "\n", "num_snippets", "=", "cas", ".", "shape", "[", "0", "]", "\n", "for", "label", "in", "np", ".", "argsort", "(", "video_score", ")", "[", ":", ":", "-", "1", "]", "[", ":", "top_k_labels", "]", ":", "\n", "        ", "this_label_cas", "=", "cas", "[", ":", ",", "label", "]", "\n", "mask", "=", "np", ".", "logical_and", "(", "this_label_cas", ">", "min_cas_score", ",", "attention_across_class", ".", "squeeze", "(", ")", ">", "min_attention_score", ")", "\n", "mask", "=", "binary_dilation", "(", "mask", ")", "\n", "labeled_mask", ",", "num_components", "=", "label_connected_component", "(", "mask", ".", "astype", "(", "int", ")", ",", "connectivity", "=", "1", ",", "\n", "return_num", "=", "True", ")", "\n", "for", "k", "in", "range", "(", "1", ",", "num_components", "+", "1", ")", ":", "\n", "            ", "idxs", ",", "=", "np", ".", "where", "(", "labeled_mask", "==", "k", ")", "\n", "snippet_start", "=", "max", "(", "idxs", "[", "0", "]", "-", "padding", ",", "0", ")", "\n", "snippet_end", "=", "min", "(", "idxs", "[", "-", "1", "]", "+", "padding", ",", "num_snippets", "-", "1", ")", "\n", "t_start", "=", "snippet_start", "*", "snippet_size", "/", "fps", "\n", "t_end", "=", "(", "snippet_end", "+", "1", ")", "*", "snippet_size", "/", "fps", "\n", "\n", "if", "attention", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "\n", "                ", "score", "=", "np", ".", "mean", "(", "this_label_cas", "[", "idxs", "]", ")", "+", "np", ".", "mean", "(", "\n", "sigmoid", "(", "attention", "[", "idxs", "]", ")", ")", "+", "video_score", "[", "label", "]", "\n", "", "else", ":", "\n", "                ", "score", "=", "np", ".", "mean", "(", "this_label_cas", "[", "idxs", "]", ")", "+", "np", ".", "mean", "(", "\n", "attention_across_class", "[", "idxs", "]", ")", "+", "video_score", "[", "label", "]", "\n", "\n", "", "predictions", "[", "'t-start'", "]", ".", "append", "(", "t_start", ")", "\n", "predictions", "[", "'t-end'", "]", ".", "append", "(", "t_end", ")", "\n", "predictions", "[", "'label'", "]", ".", "append", "(", "label", ")", "\n", "predictions", "[", "'score'", "]", ".", "append", "(", "score", ")", "\n", "predictions", "[", "'video-name'", "]", ".", "append", "(", "video_name", ")", "\n", "\n", "", "", "predictions_df", "=", "pd", ".", "DataFrame", "(", "predictions", ")", "\n", "return", "predictions_df", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.get_oracle_predictions_for_one_video": [[448, 476], ["scipy.ndimage.morphology.binary_dilation", "skimage.measure.label", "range", "pandas.DataFrame", "scipy.ndimage.morphology.binary_dilation.astype", "numpy.where", "max", "min", "predictions[].append", "predictions[].append", "predictions[].append", "predictions[].append", "predictions[].append"], "function", ["None"], ["", "def", "get_oracle_predictions_for_one_video", "(", "oracle_predictions", ",", "label", ",", "video_name", ",", "fps", ",", "snippet_size", ",", "padding", ")", ":", "\n", "\n", "    ", "predictions", "=", "{", "'t-start'", ":", "[", "]", ",", "\n", "'t-end'", ":", "[", "]", ",", "\n", "'label'", ":", "[", "]", ",", "\n", "'score'", ":", "[", "]", ",", "\n", "'video-name'", ":", "[", "]", "\n", "}", "\n", "\n", "mask", "=", "oracle_predictions", "\n", "num_snippets", "=", "mask", ".", "shape", "[", "0", "]", "\n", "mask", "=", "binary_dilation", "(", "mask", ")", "\n", "labeled_mask", ",", "num_components", "=", "label_connected_component", "(", "mask", ".", "astype", "(", "int", ")", ",", "connectivity", "=", "1", ",", "return_num", "=", "True", ")", "\n", "for", "k", "in", "range", "(", "1", ",", "num_components", "+", "1", ")", ":", "\n", "        ", "idxs", ",", "=", "np", ".", "where", "(", "labeled_mask", "==", "k", ")", "\n", "snippet_start", "=", "max", "(", "idxs", "[", "0", "]", "-", "padding", ",", "0", ")", "\n", "snippet_end", "=", "min", "(", "idxs", "[", "-", "1", "]", "+", "padding", ",", "num_snippets", "-", "1", ")", "\n", "t_start", "=", "snippet_start", "*", "snippet_size", "/", "fps", "\n", "t_end", "=", "(", "snippet_end", "+", "1", ")", "*", "snippet_size", "/", "fps", "\n", "\n", "predictions", "[", "'t-start'", "]", ".", "append", "(", "t_start", ")", "\n", "predictions", "[", "'t-end'", "]", ".", "append", "(", "t_end", ")", "\n", "predictions", "[", "'label'", "]", ".", "append", "(", "label", ")", "\n", "predictions", "[", "'score'", "]", ".", "append", "(", "1", ")", "\n", "predictions", "[", "'video-name'", "]", ".", "append", "(", "video_name", ")", "\n", "\n", "", "predictions_df", "=", "pd", ".", "DataFrame", "(", "predictions", ")", "\n", "return", "predictions_df", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.oic_loss": [[477, 521], ["numpy.mean", "numpy.round().astype", "cas[].sum", "cas[].sum", "numpy.round"], "function", ["None"], ["", "def", "oic_loss", "(", "cas", ",", "inner_start", ",", "inner_end", ",", "outer_pcn", "=", "0.25", ")", ":", "\n", "    ", "\"\"\" Computes Outer Inner Loss (OIC)\n\n        Parameters\n        ----------\n        cas: ndarray\n            Class activation sequence of size T where T is number\n            of snippets and C is number of classes.\n        t_start: float\n            Normalized starting time.\n        t_end: float\n            Normalized ending time.\n        outer_pcn: float, default 0.25\n            Ratio of segment length that will be used to augment\n            the outer area.\n    \"\"\"", "\n", "\n", "num_snippets", "=", "cas", ".", "shape", "[", "0", "]", "\n", "\n", "# Compute inner area.", "\n", "# inner_start = np.round(num_snippets * t_start).astype(int)", "\n", "# inner_end = np.round(num_snippets * t_end).astype(int)", "\n", "inner_area", "=", "np", ".", "mean", "(", "cas", "[", "inner_start", ":", "inner_end", "]", ")", "\n", "\n", "# Compute outer area.", "\n", "inflation_length", "=", "np", ".", "round", "(", "(", "inner_end", "-", "inner_start", ")", "*", "outer_pcn", ")", ".", "astype", "(", "int", ")", "\n", "inflation_start_limit", "=", "inner_start", "-", "inflation_length", "if", "(", "inner_start", "-", "inflation_length", ")", ">", "0", "else", "0", "\n", "inflation_end_limit", "=", "inner_end", "+", "inflation_length", "if", "(", "inner_end", "+", "inflation_length", ")", "<", "num_snippets", "else", "num_snippets", "-", "1", "\n", "left_activation_aggregation", "=", "cas", "[", "inflation_start_limit", ":", "inner_start", "]", ".", "sum", "(", ")", "\n", "rigth_activation_aggreagation", "=", "cas", "[", "inner_end", ":", "inflation_end_limit", "]", ".", "sum", "(", ")", "\n", "num_outer_snippets", "=", "(", "inner_start", "-", "inflation_start_limit", ")", "+", "(", "inflation_end_limit", "-", "inner_end", ")", "\n", "outer_area", "=", "left_activation_aggregation", "+", "rigth_activation_aggreagation", "\n", "if", "num_outer_snippets", ">", "0", ":", "\n", "        ", "outer_area", "/=", "num_outer_snippets", "\n", "", "else", ":", "\n", "        ", "outer_area", "=", "0.0", "\n", "\n", "# Compute OIC loss.", "\n", "", "if", "outer_area", "==", "inner_area", ":", "\n", "        ", "oic", "=", "1.0", "\n", "", "else", ":", "\n", "        ", "oic", "=", "outer_area", "-", "inner_area", "\n", "\n", "", "return", "oic", "\n", "", ""]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model.__init__": [[10, 35], ["torch.nn.Module.__init__", "logging.info", "model.Model._create_sequential_linear_relu_layers", "model.Model._create_sequential_linear_relu_layers"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model.__init__", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model._create_sequential_linear_relu_layers", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model._create_sequential_linear_relu_layers"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "input_size", ",", "num_layers", ",", "alpha_l1_loss", ",", "alpha_group_sparsity_loss", ",", "\n", "alpha_pseudo_gt_loss", ",", "weighted_psgt_loss", ",", "pseudo_gt_loss_dim", ")", ":", "\n", "        ", "'''\n        Args:\n            num_classes (int): The number of labels to classify\n            input_size (int): The size of each feature\n            alpha_l1_loss (float): constant factor to weight the l1 loss\n            alpha_group_sparsity_loss (float): constant factor to weight the group sparsity loss\n            alpha_pseudo_gt_loss (float): constant factor to weight the pseudo gt loss\n        '''", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "logging", ".", "info", "(", "f'Model: num_classes {num_classes} input_size {input_size} num_layers {num_layers} '", "\n", "f'alpha_l1_loss {alpha_l1_loss} alpha_group_sparsity_loss {alpha_group_sparsity_loss} '", "\n", "f'alpha_pseudo_gt_loss {alpha_pseudo_gt_loss} weighted_psgt_loss {weighted_psgt_loss} '", "\n", "f'pseudo_gt_loss_dim {pseudo_gt_loss_dim}'", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "pseudo_gt_loss_dim", "=", "pseudo_gt_loss_dim", "\n", "self", ".", "alpha_l1_loss", "=", "alpha_l1_loss", "\n", "self", ".", "alpha_group_sparsity_loss", "=", "alpha_group_sparsity_loss", "\n", "self", ".", "alpha_pseudo_gt_loss", "=", "alpha_pseudo_gt_loss", "\n", "self", ".", "weighted_psgt_loss", "=", "weighted_psgt_loss", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "fc_cas", "=", "Model", ".", "_create_sequential_linear_relu_layers", "(", "self", ".", "num_layers", ",", "self", ".", "input_size", ",", "self", ".", "num_classes", ")", "\n", "self", ".", "fc_attention", "=", "Model", ".", "_create_sequential_linear_relu_layers", "(", "self", ".", "num_layers", ",", "self", ".", "input_size", ",", "self", ".", "pseudo_gt_loss_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model._create_sequential_linear_relu_layers": [[36, 48], ["collections.OrderedDict", "range", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Sequential", "torch.nn.Sequential", "max", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_create_sequential_linear_relu_layers", "(", "num_layers", ",", "input_size", ",", "output_size", ")", ":", "\n", "        ", "layers", "=", "OrderedDict", "(", ")", "\n", "this_input_size", "=", "input_size", "\n", "for", "i", "in", "range", "(", "num_layers", "-", "1", ")", ":", "\n", "            ", "this_output_size", "=", "max", "(", "int", "(", "this_input_size", "/", "2", ")", ",", "output_size", ")", "\n", "layers", "[", "f'linear_{i}'", "]", "=", "nn", ".", "Linear", "(", "this_input_size", ",", "this_output_size", ")", "\n", "layers", "[", "f'relu_{i}'", "]", "=", "nn", ".", "ReLU", "(", ")", "\n", "this_input_size", "=", "this_output_size", "\n", "\n", "", "layers", "[", "f'linear_{num_layers-1}'", "]", "=", "nn", ".", "Linear", "(", "this_input_size", ",", "output_size", ")", "\n", "return", "nn", ".", "Sequential", "(", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model.forward": [[49, 53], ["model.Model.fc_cas", "model.Model.fc_attention"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "cas", "=", "self", ".", "fc_cas", "(", "features", ")", "\n", "attention", "=", "self", ".", "fc_attention", "(", "features", ")", "\n", "return", "cas", ",", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model._l1_loss": [[54, 56], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_l1_loss", "(", "x", ")", ":", "return", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model._group_sparsity_loss": [[57, 59], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "_group_sparsity_loss", "(", "x", ")", ":", "return", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "x", "[", ":", ",", "1", ":", "]", "-", "x", "[", ":", ",", ":", "-", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model.loss": [[60, 86], ["enumerate", "len", "loss_results.items", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "cas[].unsqueeze", "attention[].unsqueeze", "[].unsqueeze", "[].unsqueeze", "model.Model._loss_for_one_video", "model.Model.items", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model._loss_for_one_video"], ["def", "loss", "(", "self", ",", "cas", ",", "attention", ",", "targets", ",", "device", ")", ":", "\n", "        ", "loss_results", "=", "{", "'loss'", ":", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "device", ")", ",", "\n", "'video_label_loss'", ":", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "device", ")", ",", "\n", "'l1_loss'", ":", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "device", ")", ",", "\n", "'group_sparsity_loss'", ":", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "device", ")", ",", "\n", "'pseudo_gt_loss'", ":", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "device", ")", "}", "\n", "\n", "for", "i", ",", "video_name", "in", "enumerate", "(", "targets", "[", "'video-names'", "]", ")", ":", "\n", "            ", "start", ",", "end", "=", "targets", "[", "'video-name-to-slice'", "]", "[", "video_name", "]", "\n", "this_cas", "=", "cas", "[", "start", ":", "end", "]", ".", "unsqueeze", "(", "0", ")", "\n", "this_attention", "=", "attention", "[", "start", ":", "end", "]", ".", "unsqueeze", "(", "0", ")", "\n", "this_labels", "=", "targets", "[", "'labels'", "]", "[", "i", ":", "i", "+", "1", "]", ".", "unsqueeze", "(", "0", ")", "\n", "this_pseudo_gt", "=", "targets", "[", "'pseudo-gt'", "]", "[", "start", ":", "end", "]", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "this_loss_results", "=", "self", ".", "_loss_for_one_video", "(", "cas", "=", "this_cas", ",", "attention", "=", "this_attention", ",", "labels", "=", "this_labels", ",", "\n", "pseudo_gt", "=", "this_pseudo_gt", ",", "\n", "fg_class_loss_weight", "=", "targets", "[", "'fg_class_loss_weight'", "]", ",", "\n", "device", "=", "device", ")", "\n", "for", "k", ",", "v", "in", "this_loss_results", ".", "items", "(", ")", ":", "\n", "                ", "loss_results", "[", "k", "]", "+=", "v", "\n", "\n", "", "", "batch_size", "=", "len", "(", "targets", "[", "'video-names'", "]", ")", "\n", "for", "k", ",", "v", "in", "loss_results", ".", "items", "(", ")", ":", "\n", "            ", "loss_results", "[", "k", "]", "/=", "batch_size", "\n", "\n", "", "return", "loss_results", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model._loss_for_one_video": [[87, 135], ["model.smooth_attention_function", "torch.log_softmax", "torch.log_softmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.nll_loss", "torch.nll_loss", "model.Model._l1_loss", "model.Model._group_sparsity_loss", "idx.byte().any", "torch.squeeze().to", "torch.squeeze().to", "torch.squeeze().to", "torch.squeeze().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "idx.byte", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "ValueError", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "pseudo_gt[].to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "pseudo_gt[].to", "attention[].view", "pseudo_gt[].type().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "attention[].view", "pseudo_gt[].type().to", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "pseudo_gt[].type", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "pseudo_gt[].type", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.smooth_attention_function", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model._l1_loss", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.Model._group_sparsity_loss"], ["", "def", "_loss_for_one_video", "(", "self", ",", "cas", ",", "attention", ",", "labels", ",", "pseudo_gt", ",", "fg_class_loss_weight", ",", "device", ")", ":", "\n", "        ", "'''\n            cas: 1 x T x num_classes\n            attention\" 1 x T x {1,2}\n            labels: 1 x 1\n            pseudo_gt: 1 x T\n            bg_cas: 1 x T X num_classes+1\n        '''", "\n", "\n", "softmax_attention_across_time", ",", "softmax_attention_across_class", "=", "smooth_attention_function", "(", "attention", ")", "\n", "softmax_cas", "=", "F", ".", "log_softmax", "(", "cas", ",", "dim", "=", "-", "1", ")", "\n", "attention_cas", "=", "torch", ".", "sum", "(", "softmax_attention_across_time", "*", "softmax_cas", ",", "dim", "=", "-", "2", ")", "\n", "\n", "video_label_loss", "=", "F", ".", "nll_loss", "(", "attention_cas", ",", "torch", ".", "squeeze", "(", "labels", ",", "dim", "=", "-", "1", ")", ".", "to", "(", "device", ")", ")", "\n", "l1_loss", "=", "Model", ".", "_l1_loss", "(", "attention", ")", "\n", "group_sparsity_loss", "=", "Model", ".", "_group_sparsity_loss", "(", "softmax_attention_across_time", ")", "\n", "\n", "idx", "=", "pseudo_gt", ">=", "0", "\n", "\n", "if", "idx", ".", "byte", "(", ")", ".", "any", "(", ")", ":", "\n", "            ", "if", "self", ".", "weighted_psgt_loss", ":", "\n", "                ", "if", "self", ".", "pseudo_gt_loss_dim", "==", "2", ":", "\n", "                    ", "pseudo_gt_loss", "=", "F", ".", "cross_entropy", "(", "input", "=", "attention", "[", "idx", "]", ",", "target", "=", "pseudo_gt", "[", "idx", "]", ".", "to", "(", "device", ")", ",", "\n", "weight", "=", "torch", ".", "tensor", "(", "[", "1.0", "-", "fg_class_loss_weight", ",", "fg_class_loss_weight", "]", ")", ".", "to", "(", "device", ")", ")", "\n", "", "elif", "self", ".", "pseudo_gt_loss_dim", "==", "1", ":", "\n", "                    ", "pseudo_gt_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "input", "=", "attention", "[", "idx", "]", ".", "view", "(", "-", "1", ")", ",", "\n", "target", "=", "pseudo_gt", "[", "idx", "]", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", ".", "to", "(", "device", ")", ",", "\n", "pos_weight", "=", "torch", ".", "tensor", "(", "np", ".", "sqrt", "(", "fg_class_loss_weight", ")", ")", ".", "to", "(", "device", ")", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "'Got a value of {} dimensions. Only valid dimensions are 1 and 2'", ".", "format", "(", "self", ".", "attention_dim", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "if", "self", ".", "pseudo_gt_loss_dim", "==", "2", ":", "\n", "                    ", "pseudo_gt_loss", "=", "F", ".", "cross_entropy", "(", "input", "=", "attention", "[", "idx", "]", ",", "target", "=", "pseudo_gt", "[", "idx", "]", ".", "to", "(", "device", ")", ")", "\n", "", "elif", "self", ".", "pseudo_gt_loss_dim", "==", "1", ":", "\n", "                    ", "pseudo_gt_loss", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "input", "=", "attention", "[", "idx", "]", ".", "view", "(", "-", "1", ")", ",", "\n", "target", "=", "pseudo_gt", "[", "idx", "]", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", ".", "to", "(", "device", ")", ")", "\n", "", "", "", "else", ":", "\n", "            ", "pseudo_gt_loss", "=", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "loss", "=", "video_label_loss", "+", "self", ".", "alpha_l1_loss", "*", "l1_loss", "+", "self", ".", "alpha_group_sparsity_loss", "*", "group_sparsity_loss", "+", "self", ".", "alpha_pseudo_gt_loss", "*", "pseudo_gt_loss", "\n", "\n", "loss_results", "=", "{", "'loss'", ":", "loss", ",", "\n", "'video_label_loss'", ":", "video_label_loss", ",", "\n", "'l1_loss'", ":", "l1_loss", ",", "\n", "'group_sparsity_loss'", ":", "group_sparsity_loss", ",", "\n", "'pseudo_gt_loss'", ":", "pseudo_gt_loss", "}", "\n", "return", "loss_results", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.model.smooth_attention_function": [[136, 147], ["torch.softmax", "torch.softmax", "torch.softmax", "torch.sigmoid", "torch.sigmoid", "ValueError"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.sigmoid", "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.dataset.sigmoid"], ["", "", "def", "smooth_attention_function", "(", "input_vector", ")", ":", "\n", "    ", "if", "input_vector", ".", "shape", "[", "-", "1", "]", "==", "2", ":", "\n", "        ", "out_attention_class", "=", "F", ".", "softmax", "(", "input_vector", ",", "dim", "=", "-", "1", ")", "\n", "out_attention_time", "=", "F", ".", "softmax", "(", "out_attention_class", ",", "dim", "=", "-", "2", ")", "[", "...", ",", "1", ":", "2", "]", "\n", "out_attention_class", "=", "out_attention_class", "[", "...", ",", "1", ":", "]", "\n", "", "elif", "input_vector", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "\n", "        ", "out_attention_time", "=", "F", ".", "softmax", "(", "input_vector", ",", "dim", "=", "-", "2", ")", "\n", "out_attention_class", "=", "torch", ".", "sigmoid", "(", "input_vector", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Invalid vector shape'", ")", "\n", "", "return", "out_attention_time", ",", "out_attention_class", "", "", ""]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.nms_detections": [[4, 52], ["numpy.argsort", "len", "pick.append", "numpy.maximum", "numpy.minimum", "numpy.maximum", "pick_scores.append", "numpy.nonzero", "numpy.nonzero", "numpy.sum"], "function", ["None"], ["def", "nms_detections", "(", "dets", ",", "score", ",", "overlap", "=", "0.65", ")", ":", "\n", "    ", "\"\"\"\n    Non-maximum suppression: Greedily select high-scoring detections and\n    skip detections that are significantly covered by a previously\n    selected detection.\n    This version is translated from Matlab code by Tomasz Malisiewicz,\n    who sped up Pedro Felzenszwalb's code.\n    arguments:\n    ---------\n    dets : ndarray.\n        Each row is ['f-init', 'f-end']\n    score : 1darray.\n        Detection score.\n    overlap : float.\n        Minimum overlap ratio (0.65 default).\n    returns:\n    -------\n    pick : 1darray.\n        Remaining after suppression.\n    pick_scores : 1darray.\n        Scores of remaining segments after suppression. score = unsuppressed_segment_score + sum over all suppressed_segments_scores.\n    \"\"\"", "\n", "t1", "=", "dets", "[", ":", ",", "0", "]", "\n", "t2", "=", "dets", "[", ":", ",", "1", "]", "\n", "ind", "=", "np", ".", "argsort", "(", "score", ")", "\n", "\n", "area", "=", "(", "t2", "-", "t1", ")", ".", "astype", "(", "float", ")", "\n", "\n", "pick", "=", "[", "]", "\n", "pick_scores", "=", "[", "]", "\n", "while", "len", "(", "ind", ")", ">", "0", ":", "\n", "        ", "i", "=", "ind", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "this_pick_score", "=", "score", "[", "i", "]", "\n", "ind", "=", "ind", "[", ":", "-", "1", "]", "\n", "\n", "tt1", "=", "np", ".", "maximum", "(", "t1", "[", "i", "]", ",", "t1", "[", "ind", "]", ")", "\n", "tt2", "=", "np", ".", "minimum", "(", "t2", "[", "i", "]", ",", "t2", "[", "ind", "]", ")", "\n", "\n", "intersection", "=", "np", ".", "maximum", "(", "0.", ",", "tt2", "-", "tt1", ")", "\n", "iou", "=", "intersection", "/", "(", "area", "[", "i", "]", "+", "area", "[", "ind", "]", "-", "intersection", ")", "\n", "suppressed_idx", "=", "np", ".", "nonzero", "(", "iou", ">", "overlap", ")", "[", "0", "]", "\n", "unsuppressed_idx", "=", "np", ".", "nonzero", "(", "iou", "<=", "overlap", ")", "[", "0", "]", "\n", "\n", "pick_scores", ".", "append", "(", "score", "[", "i", "]", "+", "np", ".", "sum", "(", "score", "[", "ind", "[", "suppressed_idx", "]", "]", ")", ")", "\n", "ind", "=", "ind", "[", "unsuppressed_idx", "]", "\n", "\n", "", "return", "pick", ",", "pick_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.nms_with_hough_voting": [[53, 65], ["predictions_df.groupby", "pandas.concat().reset_index", "this_df.reset_index.reset_index", "numpy.stack", "utils.nms_detections", "this_df.reset_index.loc[].reset_index", "new_predictions_df.append", "numpy.array", "pandas.concat"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.nms_detections"], ["", "def", "nms_with_hough_voting", "(", "predictions_df", ",", "nms_overlap", "=", "0.65", ")", ":", "\n", "    ", "\"\"\"Apply non-max-suppression to predictions and add the scores of the suppressed segments to the unsuppressed segment.\n    \"\"\"", "\n", "new_predictions_df", "=", "[", "]", "\n", "for", "(", "video_name", ",", "label", ")", ",", "this_df", "in", "predictions_df", ".", "groupby", "(", "by", "=", "[", "'video-name'", ",", "'label'", "]", ")", ":", "\n", "        ", "this_df", "=", "this_df", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "loc", "=", "np", ".", "stack", "(", "(", "this_df", "[", "'t-start'", "]", ",", "this_df", "[", "'t-end'", "]", ")", ",", "axis", "=", "-", "1", ")", "\n", "pick", ",", "pick_scores", "=", "nms_detections", "(", "loc", ",", "np", ".", "array", "(", "this_df", "[", "'score'", "]", ")", ",", "nms_overlap", ")", "\n", "filtered_df", "=", "this_df", ".", "loc", "[", "pick", "]", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "filtered_df", "[", "'score'", "]", "=", "pick_scores", "\n", "new_predictions_df", ".", "append", "(", "filtered_df", ")", "\n", "", "return", "pd", ".", "concat", "(", "new_predictions_df", ",", "axis", "=", "0", ")", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.remove_nonsense_predictions": [[66, 75], ["dict", "predictions_df[].map", "numpy.maximum", "numpy.minimum", "predictions_df.loc[].reset_index.loc[].reset_index", "zip"], "function", ["None"], ["", "def", "remove_nonsense_predictions", "(", "predictions_df", ",", "ground_truth_df", ")", ":", "\n", "    ", "\"\"\" remove predictions that are outside the bound of the video. Clip to the bound of the video if some of the prediction is outside\n    \"\"\"", "\n", "video_name_to_duration", "=", "dict", "(", "zip", "(", "ground_truth_df", "[", "'video-name'", "]", ",", "ground_truth_df", "[", "'video-duration'", "]", ")", ")", "\n", "predictions_df", "[", "'video-duration'", "]", "=", "predictions_df", "[", "'video-name'", "]", ".", "map", "(", "lambda", "x", ":", "video_name_to_duration", "[", "x", "]", ")", "\n", "predictions_df", "[", "'t-start'", "]", "=", "np", ".", "maximum", "(", "0.0", ",", "predictions_df", "[", "'t-start'", "]", ")", "\n", "predictions_df", "[", "'t-end'", "]", "=", "np", ".", "minimum", "(", "predictions_df", "[", "'video-duration'", "]", ",", "predictions_df", "[", "'t-end'", "]", ")", "\n", "predictions_df", "=", "predictions_df", ".", "loc", "[", "predictions_df", "[", "'t-start'", "]", ".", "values", "<", "predictions_df", "[", "'t-end'", "]", ".", "values", "]", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "return", "predictions_df", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.interpolated_prec_rec": [[76, 86], ["numpy.hstack", "numpy.hstack", "numpy.sum", "range", "max", "numpy.where", "len"], "function", ["None"], ["", "def", "interpolated_prec_rec", "(", "prec", ",", "rec", ")", ":", "\n", "    ", "\"\"\"Interpolated AP - VOCdevkit from VOC 2011.\n    \"\"\"", "\n", "mprec", "=", "np", ".", "hstack", "(", "[", "[", "0", "]", ",", "prec", ",", "[", "0", "]", "]", ")", "\n", "mrec", "=", "np", ".", "hstack", "(", "[", "[", "0", "]", ",", "rec", ",", "[", "1", "]", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "mprec", ")", "-", "1", ")", "[", ":", ":", "-", "1", "]", ":", "\n", "        ", "mprec", "[", "i", "]", "=", "max", "(", "mprec", "[", "i", "]", ",", "mprec", "[", "i", "+", "1", "]", ")", "\n", "", "idx", "=", "np", ".", "where", "(", "mrec", "[", "1", ":", ":", "]", "!=", "mrec", "[", "0", ":", "-", "1", "]", ")", "[", "0", "]", "+", "1", "\n", "ap", "=", "np", ".", "sum", "(", "(", "mrec", "[", "idx", "]", "-", "mrec", "[", "idx", "-", "1", "]", ")", "*", "mprec", "[", "idx", "]", ")", "\n", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.segment_iou": [[87, 114], ["numpy.maximum", "numpy.minimum", "segments_intersection.astype"], "function", ["None"], ["", "def", "segment_iou", "(", "target_segment", ",", "candidate_segments", ")", ":", "\n", "    ", "\"\"\"Compute the temporal intersection over union between a\n    target segment and all the test segments.\n\n    Parameters\n    ----------\n    target_segment : 1d array\n        Temporal target segment containing [starting, ending] times.\n    candidate_segments : 2d array\n        Temporal candidate segments containing N x [starting, ending] times.\n\n    Outputs\n    -------\n    tiou : 1d array\n        Temporal intersection over union score of the N's candidate segments.\n    \"\"\"", "\n", "tt1", "=", "np", ".", "maximum", "(", "target_segment", "[", "0", "]", ",", "candidate_segments", "[", ":", ",", "0", "]", ")", "\n", "tt2", "=", "np", ".", "minimum", "(", "target_segment", "[", "1", "]", ",", "candidate_segments", "[", ":", ",", "1", "]", ")", "\n", "# Intersection including Non-negative overlap score.", "\n", "segments_intersection", "=", "(", "tt2", "-", "tt1", ")", ".", "clip", "(", "0", ")", "\n", "# Segment union.", "\n", "segments_union", "=", "(", "candidate_segments", "[", ":", ",", "1", "]", "-", "candidate_segments", "[", ":", ",", "0", "]", ")", "+", "(", "target_segment", "[", "1", "]", "-", "target_segment", "[", "0", "]", ")", "-", "segments_intersection", "\n", "# Compute overlap as the ratio of the intersection", "\n", "# over union of two segments.", "\n", "tIoU", "=", "segments_intersection", ".", "astype", "(", "float", ")", "/", "segments_union", "\n", "return", "tIoU", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.wrapper_segment_iou": [[115, 138], ["numpy.empty", "xrange", "ValueError", "utils.segment_iou"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.src.utils.segment_iou"], ["", "def", "wrapper_segment_iou", "(", "target_segments", ",", "candidate_segments", ")", ":", "\n", "    ", "\"\"\"Compute intersection over union between segments\n    Parameters\n    ----------\n    target_segments : ndarray\n        2-dim array in format [m x 2:=[init, end]]\n    candidate_segments : ndarray\n        2-dim array in format [n x 2:=[init, end]]\n    Outputs\n    -------\n    tiou : ndarray\n        2-dim array [n x m] with IOU ratio.\n    Note: It assumes that candidate-segments are more scarce that target-segments\n    \"\"\"", "\n", "if", "candidate_segments", ".", "ndim", "!=", "2", "or", "target_segments", ".", "ndim", "!=", "2", ":", "\n", "        ", "raise", "ValueError", "(", "'Dimension of arguments is incorrect'", ")", "\n", "\n", "", "n", ",", "m", "=", "candidate_segments", ".", "shape", "[", "0", "]", ",", "target_segments", ".", "shape", "[", "0", "]", "\n", "tiou", "=", "np", ".", "empty", "(", "(", "n", ",", "m", ")", ")", "\n", "for", "i", "in", "xrange", "(", "m", ")", ":", "\n", "        ", "tiou", "[", ":", ",", "i", "]", "=", "segment_iou", "(", "target_segments", "[", "i", ",", ":", "]", ",", "candidate_segments", ")", "\n", "\n", "", "return", "tiou", "\n", "", ""]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.misc.tensorboard_summaries_to_csv.filter_top_n": [[13, 18], ["pandas.DataFrame", "df.sort_values", "top_n_df.append.append", "df.reset_index"], "function", ["None"], ["def", "filter_top_n", "(", "df", ",", "tags", ",", "top_n", ")", ":", "\n", "    ", "top_n_df", "=", "pd", ".", "DataFrame", "(", ")", "\n", "df", ".", "sort_values", "(", "by", "=", "tags", ",", "ascending", "=", "False", ",", "inplace", "=", "True", ")", "\n", "top_n_df", "=", "top_n_df", ".", "append", "(", "df", ".", "reset_index", "(", "drop", "=", "True", ")", ".", "iloc", "[", ":", "top_n", "]", ",", "sort", "=", "False", ")", "\n", "return", "top_n_df", "\n", "\n"]], "home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.misc.tensorboard_summaries_to_csv.main": [[19, 61], ["pandas.DataFrame", "df.append.to_csv", "tensorboard_summaries_to_csv.filter_top_n", "filter_top_n.to_csv", "open", "json.load", "print", "tqdm.tqdm", "pandas.DataFrame", "df.append.append", "pandas.read_csv", "df.append.append", "glob.glob", "glob.glob", "collections.OrderedDict", "logging.debug", "experiment_foldername.split", "tensorflow.compat.v1.train.summary_iterator", "logging.info"], "function", ["home.repos.pwc.inspect_result.HumamAlwassel_RefineLoc.misc.tensorboard_summaries_to_csv.filter_top_n"], ["", "def", "main", "(", "roots", ",", "phase", ",", "tags_filename", ",", "csv_filename", ",", "append_cvs_filename", ",", "top_n", ",", "cluster_name", ",", "verbose", ")", ":", "\n", "    ", "with", "open", "(", "tags_filename", ",", "'r'", ")", "as", "fobj", ":", "\n", "        ", "tags", "=", "json", ".", "load", "(", "fobj", ")", "\n", "\n", "", "df", "=", "pd", ".", "DataFrame", "(", ")", "\n", "for", "root", "in", "roots", ":", "\n", "        ", "print", "(", "'Processing files from {}'", ".", "format", "(", "root", ")", ")", "\n", "rows", "=", "[", "]", "\n", "for", "experiment_foldername", "in", "tqdm", "(", "glob", ".", "glob", "(", "'{}/{}/*'", ".", "format", "(", "root", ",", "phase", ")", ")", ")", ":", "\n", "            ", "for", "events_filename", "in", "glob", ".", "glob", "(", "'{}/events*'", ".", "format", "(", "experiment_foldername", ")", ")", ":", "\n", "                ", "this_row", "=", "OrderedDict", "(", ")", "\n", "this_row", "[", "'cluster_name'", "]", "=", "cluster_name", "\n", "this_row", "[", "'phase'", "]", "=", "phase", "\n", "class_id", "=", "experiment_foldername", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "\n", "this_row", "[", "'experiment_folder'", "]", "=", "experiment_foldername", "\n", "for", "t", "in", "tags", ":", "\n", "                    ", "this_row", "[", "t", "]", "=", "None", "\n", "\n", "", "try", ":", "\n", "                    ", "for", "e", "in", "tf", ".", "compat", ".", "v1", ".", "train", ".", "summary_iterator", "(", "events_filename", ")", ":", "\n", "                        ", "for", "v", "in", "e", ".", "summary", ".", "value", ":", "\n", "                            ", "if", "verbose", ":", "\n", "                                ", "this_row", "[", "v", ".", "tag", "]", "=", "v", ".", "simple_value", "\n", "", "else", ":", "\n", "                                ", "if", "v", ".", "tag", "in", "tags", ":", "\n", "                                    ", "this_row", "[", "v", ".", "tag", "]", "=", "v", ".", "simple_value", "\n", "", "", "", "", "", "except", "Exception", "as", "e", ":", "\n", "                    ", "logging", ".", "info", "(", "'{} {}'", ".", "format", "(", "experiment_foldername", ",", "e", ")", ")", "\n", "", "logging", ".", "debug", "(", "this_row", ")", "\n", "rows", "+=", "[", "this_row", "]", "\n", "\n", "", "", "_df", "=", "pd", ".", "DataFrame", "(", "rows", ")", "\n", "df", ".", "append", "(", "_df", ",", "sort", "=", "False", ")", "\n", "\n", "", "if", "append_cvs_filename", "is", "not", "None", ":", "\n", "        ", "append_df", "=", "pd", ".", "read_csv", "(", "append_cvs_filename", ")", "\n", "df", "=", "df", ".", "append", "(", "append_df", ",", "sort", "=", "False", ")", "\n", "\n", "", "df", ".", "to_csv", "(", "csv_filename", ",", "index", "=", "False", ")", "\n", "\n", "top_n_df", "=", "filter_top_n", "(", "df", ",", "tags", ",", "top_n", ")", "\n", "top_n_df", ".", "to_csv", "(", "'top_{}_{}'", ".", "format", "(", "top_n", ",", "csv_filename", ")", ",", "index", "=", "False", ")", "\n", "\n"]]}