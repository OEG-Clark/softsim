{"home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.CastModule.__init__": [[13, 19], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module", ":", "nn", ".", "Module", ",", "in_cast", ":", "torch", ".", "dtype", "=", "torch", ".", "float32", ",", "out_cast", ":", "torch", ".", "dtype", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "underlying", "=", "module", "\n", "self", ".", "in_cast", "=", "in_cast", "\n", "self", ".", "out_cast", "=", "out_cast", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.CastModule.cast": [[20, 28], ["isinstance", "obj.to"], "methods", ["None"], ["", "def", "cast", "(", "self", ",", "obj", ",", "dtype", ")", ":", "\n", "        ", "if", "dtype", "is", "None", ":", "\n", "            ", "return", "obj", "\n", "\n", "", "if", "isinstance", "(", "obj", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "return", "obj", ".", "to", "(", "dtype", ")", "\n", "", "else", ":", "\n", "            ", "return", "obj", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.CastModule.forward": [[29, 40], ["tuple", "models.CastModule.underlying", "isinstance", "models.CastModule.cast", "models.CastModule.cast", "isinstance", "models.CastModule.cast", "kwargs.items", "tuple", "RuntimeError", "models.CastModule.cast", "type"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.CastModule.cast", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.CastModule.cast", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.CastModule.cast", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.CastModule.cast"], ["", "", "def", "forward", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "args", "=", "tuple", "(", "self", ".", "cast", "(", "a", ",", "self", ".", "in_cast", ")", "for", "a", "in", "args", ")", "\n", "kwargs", "=", "{", "k", ":", "self", ".", "cast", "(", "v", ",", "self", ".", "in_cast", ")", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", "}", "\n", "outputs", "=", "self", ".", "underlying", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "if", "isinstance", "(", "outputs", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "outputs", "=", "self", ".", "cast", "(", "outputs", ",", "self", ".", "out_cast", ")", "\n", "", "elif", "isinstance", "(", "outputs", ",", "tuple", ")", ":", "\n", "            ", "outputs", "=", "tuple", "(", "self", ".", "cast", "(", "o", ",", "self", ".", "out_cast", ")", "for", "o", "in", "outputs", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"Not sure how to cast type {type(outputs)}\"", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.CastModule.extra_repr": [[41, 43], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "f\"in_cast: {self.in_cast}\\nout_cast: {self.out_cast}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.BertClassifier.__init__": [[46, 50], ["super().__init__", "transformers.BertModel.from_pretrained", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "utils.scr"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.scr"], ["    ", "def", "__init__", "(", "self", ",", "model_name", ",", "hidden_dim", "=", "768", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "transformers", ".", "BertModel", ".", "from_pretrained", "(", "model_name", ",", "cache_dir", "=", "scr", "(", ")", ")", "\n", "self", ".", "classifier", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.BertClassifier.config": [[51, 54], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.BertClassifier.forward": [[55, 58], ["models.BertClassifier.classifier", "kwargs.items", "models.BertClassifier.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "filtered_kwargs", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", "if", "k", "!=", "\"labels\"", "}", "\n", "return", "self", ".", "classifier", "(", "self", ".", "model", "(", "*", "args", ",", "**", "filtered_kwargs", ")", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.get_model": [[60, 156], ["models.BertClassifier", "getattr", "LOG.info", "getattr.from_pretrained", "LOG.info", "torch.load", "torch.load", "LOG.info", "ModelClass.from_pretrained.modules", "LOG.info", "len", "ValueError", "hasattr", "hasattr", "hasattr", "hasattr", "ModelClass.from_pretrained.load_state_dict", "isinstance", "hasattr", "hasattr", "ModelClass.from_pretrained.named_parameters", "ModelClass.from_pretrained.bfloat16", "mod.children", "LOG.info", "modlist[].to", "models.CastModule", "models.CastModule", "parents.append", "parents.append", "parents.append", "parents.extend", "enumerate", "utils.scr", "LOG.info", "ModelClass.from_pretrained.load_state_dict", "isinstance", "isinstance", "isinstance", "RuntimeError", "models.get_model.upcast"], "function", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.scr", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict"], ["", "", "def", "get_model", "(", "config", ")", ":", "\n", "    ", "if", "config", ".", "model", ".", "class_name", "==", "\"BertClassifier\"", ":", "\n", "        ", "model", "=", "BertClassifier", "(", "config", ".", "model", ".", "name", ")", "\n", "", "else", ":", "\n", "        ", "ModelClass", "=", "getattr", "(", "transformers", ",", "config", ".", "model", ".", "class_name", ")", "\n", "LOG", ".", "info", "(", "f\"Loading model class {ModelClass} with name {config.model.name} from cache dir {scr()}\"", ")", "\n", "model", "=", "ModelClass", ".", "from_pretrained", "(", "config", ".", "model", ".", "name", ",", "cache_dir", "=", "scr", "(", ")", ")", "\n", "\n", "", "if", "config", ".", "model", ".", "pt", "is", "not", "None", ":", "\n", "        ", "LOG", ".", "info", "(", "f\"Loading model initialization from {config.model.pt}\"", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "config", ".", "model", ".", "pt", ",", "map_location", "=", "\"cpu\"", ")", "\n", "\n", "try", ":", "\n", "            ", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "", "except", "RuntimeError", ":", "\n", "            ", "LOG", ".", "info", "(", "\"Default load failed; stripping prefix and trying again.\"", ")", "\n", "state_dict", "=", "{", "re", ".", "sub", "(", "\"^model.\"", ",", "\"\"", ",", "k", ")", ":", "v", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n", "", "LOG", ".", "info", "(", "\"Loaded model initialization\"", ")", "\n", "\n", "", "if", "config", ".", "dropout", "is", "not", "None", ":", "\n", "        ", "n_reset", "=", "0", "\n", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Dropout", ")", ":", "\n", "                ", "m", ".", "p", "=", "config", ".", "dropout", "\n", "n_reset", "+=", "1", "\n", "\n", "", "if", "hasattr", "(", "m", ",", "\"dropout\"", ")", ":", "# Requires for BART, which uses F.dropout", "\n", "                ", "if", "isinstance", "(", "m", ".", "dropout", ",", "float", ")", ":", "\n", "                    ", "m", ".", "dropout", "=", "config", ".", "dropout", "\n", "n_reset", "+=", "1", "\n", "\n", "", "", "if", "hasattr", "(", "m", ",", "\"activation_dropout\"", ")", ":", "# Requires for BART, which uses F.dropout", "\n", "                ", "if", "isinstance", "(", "m", ".", "activation_dropout", ",", "float", ")", ":", "\n", "                    ", "m", ".", "activation_dropout", "=", "config", ".", "dropout", "\n", "n_reset", "+=", "1", "\n", "\n", "", "", "", "LOG", ".", "info", "(", "f\"Set {n_reset} dropout modules to p={config.dropout}\"", ")", "\n", "\n", "", "param_names", "=", "[", "n", "for", "n", ",", "_", "in", "model", ".", "named_parameters", "(", ")", "]", "\n", "bad_inner_params", "=", "[", "p", "for", "p", "in", "config", ".", "model", ".", "inner_params", "if", "p", "not", "in", "param_names", "]", "\n", "if", "len", "(", "bad_inner_params", ")", "!=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "f\"Params {bad_inner_params} do not exist in model of type {type(model)}.\"", ")", "\n", "\n", "", "if", "config", ".", "no_grad_layers", "is", "not", "None", ":", "\n", "        ", "if", "config", ".", "half", ":", "\n", "            ", "model", ".", "bfloat16", "(", ")", "\n", "\n", "", "def", "upcast", "(", "mod", ")", ":", "\n", "            ", "modlist", "=", "None", "\n", "for", "child", "in", "mod", ".", "children", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "child", ",", "nn", ".", "ModuleList", ")", ":", "\n", "                    ", "assert", "modlist", "is", "None", ",", "f\"Found multiple modlists for {mod}\"", "\n", "modlist", "=", "child", "\n", "", "", "if", "modlist", "is", "None", ":", "\n", "                ", "raise", "RuntimeError", "(", "\"Couldn't find a ModuleList child\"", ")", "\n", "\n", "", "LOG", ".", "info", "(", "f\"Setting {len(modlist) - config.no_grad_layers} modules to full precision, with autocasting\"", ")", "\n", "modlist", "[", "config", ".", "no_grad_layers", ":", "]", ".", "to", "(", "torch", ".", "float32", ")", "\n", "modlist", "[", "config", ".", "no_grad_layers", "]", "=", "CastModule", "(", "modlist", "[", "config", ".", "no_grad_layers", "]", ")", "\n", "modlist", "[", "-", "1", "]", "=", "CastModule", "(", "modlist", "[", "-", "1", "]", ",", "in_cast", "=", "torch", ".", "float32", ",", "out_cast", "=", "torch", ".", "bfloat16", ")", "\n", "\n", "", "parents", "=", "[", "]", "\n", "if", "hasattr", "(", "model", ",", "\"transformer\"", ")", ":", "\n", "            ", "parents", ".", "append", "(", "model", ".", "transformer", ")", "\n", "", "if", "hasattr", "(", "model", ",", "\"encoder\"", ")", ":", "\n", "            ", "parents", ".", "append", "(", "model", ".", "encoder", ")", "\n", "", "if", "hasattr", "(", "model", ",", "\"decoder\"", ")", ":", "\n", "            ", "parents", ".", "append", "(", "model", ".", "decoder", ")", "\n", "", "if", "hasattr", "(", "model", ",", "\"model\"", ")", ":", "\n", "            ", "parents", ".", "extend", "(", "[", "model", ".", "model", ".", "encoder", ",", "model", ".", "model", ".", "decoder", "]", ")", "\n", "\n", "", "for", "t", "in", "parents", ":", "\n", "            ", "t", ".", "no_grad_layers", "=", "config", ".", "no_grad_layers", "\n", "if", "config", ".", "half", ":", "\n", "                ", "upcast", "(", "t", ")", "\n", "\n", "", "", "if", "config", ".", "half", ":", "\n", "            ", "idxs", "=", "[", "]", "\n", "for", "p", "in", "config", ".", "model", ".", "inner_params", ":", "\n", "                ", "for", "comp", "in", "p", ".", "split", "(", "'.'", ")", ":", "\n", "                    ", "if", "comp", ".", "isdigit", "(", ")", ":", "\n", "                        ", "idxs", ".", "append", "(", "int", "(", "comp", ")", ")", "\n", "", "", "", "max_idx", ",", "min_idx", "=", "str", "(", "max", "(", "idxs", ")", ")", ",", "str", "(", "config", ".", "no_grad_layers", ")", "\n", "for", "pidx", ",", "p", "in", "enumerate", "(", "config", ".", "model", ".", "inner_params", ")", ":", "\n", "                ", "comps", "=", "p", ".", "split", "(", "'.'", ")", "\n", "if", "max_idx", "in", "comps", "or", "min_idx", "in", "comps", ":", "\n", "                    ", "index", "=", "comps", ".", "index", "(", "max_idx", ")", "if", "max_idx", "in", "comps", "else", "comps", ".", "index", "(", "min_idx", ")", "\n", "comps", ".", "insert", "(", "index", "+", "1", ",", "'underlying'", ")", "\n", "new_p", "=", "'.'", ".", "join", "(", "comps", ")", "\n", "LOG", ".", "info", "(", "f\"Replacing config.model.inner_params[{pidx}] '{p}' -> '{new_p}'\"", ")", "\n", "config", ".", "model", ".", "inner_params", "[", "pidx", "]", "=", "new_p", "\n", "\n", "", "", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.get_tokenizer": [[158, 161], ["getattr().from_pretrained", "getattr", "utils.scr"], "function", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.scr"], ["", "def", "get_tokenizer", "(", "config", ")", ":", "\n", "    ", "tok_name", "=", "config", ".", "model", ".", "tokenizer_name", "if", "config", ".", "model", ".", "tokenizer_name", "is", "not", "None", "else", "config", ".", "model", ".", "name", "\n", "return", "getattr", "(", "transformers", ",", "config", ".", "model", ".", "tokenizer_class", ")", ".", "from_pretrained", "(", "tok_name", ",", "cache_dir", "=", "scr", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.__init__": [[23, 88], ["trainer.BaseTrainer.model.to", "os.path.join", "utils.formatted_timestamp", "trainer.BaseTrainer.model.model_constructor", "trainer.BaseTrainer.original_model.load_state_dict", "trainer.BaseTrainer.original_model.to", "getattr", "LOG.info", "trainer.BaseTrainer.OptimizerClass", "utils.load_archive", "trainer.BaseTrainer.model.load_state_dict", "open", "json.dump", "os.getcwd", "os.makedirs", "os.getcwd().split", "trainer.BaseTrainer.config.model.name.split", "tempfile.mkdtemp", "LOG.info", "wandb.init", "trainer.BaseTrainer.model.model.state_dict", "trainer.BaseTrainer.model.outer_parameters", "str", "trainer.BaseTrainer.opt.load_state_dict", "omegaconf.OmegaConf.to_container", "os.getcwd", "os.getcwd", "utils.flatten_dict"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.formatted_timestamp", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.load_archive", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.outer_parameters", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.flatten_dict"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "config", ",", "train_set", ":", "Dataset", ",", "val_set", ":", "Dataset", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "config", "=", "config", "\n", "\n", "if", "config", ".", "train_base", ":", "\n", "            ", "self", ".", "original_model", "=", "self", ".", "model", ".", "model_constructor", "(", ")", "\n", "self", ".", "original_model", ".", "load_state_dict", "(", "self", ".", "model", ".", "model", ".", "state_dict", "(", ")", ")", "\n", "self", ".", "original_model", ".", "to", "(", "self", ".", "config", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "original_model", "=", "self", ".", "model", ".", "model", "\n", "\n", "", "self", ".", "model", ".", "to", "(", "self", ".", "config", ".", "device", ")", "\n", "\n", "self", ".", "train_set", "=", "train_set", "\n", "self", ".", "val_set", "=", "val_set", "\n", "\n", "if", "self", ".", "config", ".", "eval_only", ":", "\n", "# Eval once and quit", "\n", "            ", "self", ".", "config", ".", "max_iters", "=", "0", "\n", "\n", "", "if", "not", "self", ".", "config", ".", "eval_only", ":", "\n", "            ", "self", ".", "OptimizerClass", "=", "getattr", "(", "torch", ".", "optim", ",", "config", ".", "opt", ")", "\n", "LOG", ".", "info", "(", "f\"Building optimizer {self.OptimizerClass} with lr {config.lr}\"", ")", "\n", "self", ".", "opt", "=", "self", ".", "OptimizerClass", "(", "self", ".", "model", ".", "outer_parameters", "(", ")", ",", "lr", "=", "config", ".", "lr", ")", "\n", "\n", "", "if", "config", ".", "archive", "is", "not", "None", ":", "\n", "            ", "archive", ",", "config", ".", "archive", "=", "utils", ".", "load_archive", "(", "str", "(", "config", ".", "archive", ")", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "archive", "[", "\"model\"", "]", ")", "\n", "del", "archive", "[", "\"model\"", "]", "\n", "if", "not", "self", ".", "config", ".", "eval_only", ":", "\n", "                ", "self", ".", "opt", ".", "load_state_dict", "(", "archive", "[", "\"opt\"", "]", ")", "\n", "", "del", "archive", "[", "\"opt\"", "]", "\n", "\n", "self", ".", "archive", "=", "archive", "# Save for later to load e.g. lr_opt params if they exist", "\n", "", "else", ":", "\n", "            ", "self", ".", "archive", "=", "None", "\n", "\n", "# outfiles", "\n", "", "with", "open", "(", "os", ".", "getcwd", "(", ")", "+", "\"/config.json\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "OmegaConf", ".", "to_container", "(", "config", ")", ",", "f", ")", "\n", "\n", "", "model_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "'models'", ")", "\n", "if", "not", "(", "self", ".", "config", ".", "debug", "and", "not", "self", ".", "config", ".", "save", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "", "run_date", "=", "os", ".", "getcwd", "(", ")", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "self", ".", "run_date", "=", "run_date", "\n", "safe_model_name", "=", "self", ".", "config", ".", "model", ".", "name", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "# Make sure no slashes", "\n", "self", ".", "save_path", "=", "f\"{model_dir}/{safe_model_name}.{run_date}\"", "\n", "\n", "if", "not", "(", "self", ".", "config", ".", "debug", "or", "self", ".", "config", ".", "eval_only", ")", ":", "\n", "            ", "wandb_dir", "=", "tempfile", ".", "mkdtemp", "(", ")", "\n", "wandb_name", "=", "f\"{self.config.dataset} - {self.config.alg} - {safe_model_name} - {run_date}\"", "\n", "if", "self", ".", "config", ".", "ref", "is", "not", "None", ":", "\n", "                ", "wandb_name", "+=", "f\" - {self.config.ref}\"", "\n", "", "LOG", ".", "info", "(", "f\"Writing wandb run \\\"{wandb_name}\\\" to {wandb_dir}\"", ")", "\n", "wandb", ".", "init", "(", "\n", "project", "=", "\"efk\"", ",", "\n", "entity", "=", "\"patchable-lm\"", ",", "\n", "config", "=", "utils", ".", "flatten_dict", "(", "self", ".", "config", ")", ",", "\n", "name", "=", "wandb_name", ",", "\n", "dir", "=", "wandb_dir", ",", "\n", "tags", "=", "[", "self", ".", "config", ".", "ref", "]", "if", "self", ".", "config", ".", "ref", "is", "not", "None", "else", "None", "\n", ")", "\n", "\n", "", "self", ".", "start_time", "=", "formatted_timestamp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.save_state": [[89, 111], ["LOG.info", "os.path.exists", "torch.save", "LOG.info", "trainer.BaseTrainer.model.state_dict", "trainer.BaseTrainer.opt.state_dict", "utils.time_delta_seconds", "LOG.info", "os.rename", "trainer.BaseTrainer.lr_opt.state_dict"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.time_delta_seconds", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict"], ["", "def", "save_state", "(", "self", ",", "stats", ")", ":", "\n", "        ", "if", "(", "self", ".", "config", ".", "debug", "and", "not", "self", ".", "config", ".", "save", ")", "or", "self", ".", "config", ".", "eval_only", ":", "\n", "            ", "return", "\n", "\n", "", "obj", "=", "{", "\n", "\"model\"", ":", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\n", "\"opt\"", ":", "self", ".", "opt", ".", "state_dict", "(", ")", ",", "\n", "\"lr_opt\"", ":", "self", ".", "lr_opt", ".", "state_dict", "(", ")", "if", "self", ".", "lr_opt", "is", "not", "None", "else", "None", ",", "\n", "\"val_stats\"", ":", "stats", ",", "\n", "\"start_time\"", ":", "self", ".", "start_time", ",", "\n", "\"elapsed_time\"", ":", "time_delta_seconds", "(", "self", ".", "start_time", ")", ",", "\n", "\"step\"", ":", "self", ".", "global_iter", "\n", "}", "\n", "LOG", ".", "info", "(", "f\"Saving model to {self.save_path}\"", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "save_path", ")", ":", "\n", "            ", "bk_path", "=", "f\"{self.save_path}.bk\"", "\n", "LOG", ".", "info", "(", "f\"Moving old archive to {bk_path}\"", ")", "\n", "os", ".", "rename", "(", "self", ".", "save_path", ",", "bk_path", ")", "\n", "\n", "", "torch", ".", "save", "(", "obj", ",", "self", ".", "save_path", ")", "\n", "LOG", ".", "info", "(", "\"Write complete.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.echo": [[112, 120], ["LOG.info", "LOG.info", "sep.join", "k.ljust", "info_dict.items", "trainer.BaseTrainer.echo.key_format"], "methods", ["None"], ["", "def", "echo", "(", "self", ",", "train_step", ",", "info_dict", ",", "pretty", "=", "False", ")", ":", "\n", "        ", "if", "not", "self", ".", "config", ".", "silent", ":", "\n", "            ", "sep", "=", "\"\\n\"", "if", "pretty", "else", "\"; \"", "\n", "\n", "def", "key_format", "(", "k", ")", ":", "\n", "                ", "return", "k", ".", "ljust", "(", "20", ")", "if", "pretty", "else", "k", "\n", "", "LOG", ".", "info", "(", "f\"Step {train_step}:\"", ")", "\n", "LOG", ".", "info", "(", "sep", ".", "join", "(", "[", "f\"{key_format(k)}: {v: 0.5f}\"", "for", "k", ",", "v", "in", "info_dict", ".", "items", "(", ")", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.wandb_log": [[121, 124], ["wandb.log"], "methods", ["None"], ["", "", "def", "wandb_log", "(", "self", ",", "step", ",", "info_dict", ")", ":", "\n", "        ", "if", "not", "(", "self", ".", "config", ".", "debug", "or", "self", ".", "config", ".", "eval_only", ")", ":", "\n", "            ", "wandb", ".", "log", "(", "info_dict", ",", "step", "=", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.run": [[125, 188], ["utils.RunningStatAverager", "utils.EarlyStopper", "range", "trainer.BaseTrainer.validate", "trainer.BaseTrainer.echo", "trainer.BaseTrainer.wandb_log", "shutil.copy", "LOG.info", "LOG.info", "LOG.info", "open", "json.dump", "LOG.info", "LOG.info", "trainer.BaseTrainer.train_step", "utils.RunningStatAverager.add", "trainer.BaseTrainer.validate", "trainer.BaseTrainer.echo", "trainer.BaseTrainer.wandb_log", "utils.EarlyStopper.update", "utils.EarlyStopper.should_stop", "torch.load", "LOG.info", "trainer.BaseTrainer.model.to", "trainer.BaseTrainer.model.load_state_dict", "trainer.BaseTrainer.model.to", "utils.RunningStatAverager.average", "utils.RunningStatAverager.reset", "trainer.BaseTrainer.echo", "trainer.BaseTrainer.wandb_log", "trainer.BaseTrainer.save_state", "LOG.info", "os.getcwd", "os.getcwd", "omegaconf.OmegaConf.to_container"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer.validate", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.echo", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.wandb_log", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer.train_step", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.add", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer.validate", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.echo", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.wandb_log", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EarlyStopper.update", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EarlyStopper.should_stop", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.average", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.reset", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.echo", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.wandb_log", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.BaseTrainer.save_state"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "        ", "averager", "=", "RunningStatAverager", "(", "\"train\"", ")", "\n", "stopper", "=", "EarlyStopper", "(", "self", ".", "config", ".", "early_stop_patience", ",", "self", ".", "config", ".", "early_stop_key", ")", "\n", "self", ".", "global_iter", "=", "0", "\n", "for", "global_iter", "in", "range", "(", "0", ",", "self", ".", "config", ".", "max_iters", ")", ":", "\n", "            ", "self", ".", "global_iter", "=", "global_iter", "\n", "\n", "if", "not", "self", ".", "config", ".", "eval_only", ":", "\n", "                ", "train_info", "=", "self", ".", "train_step", "(", ")", "\n", "averager", ".", "add", "(", "train_info", ")", "\n", "\n", "if", "global_iter", "%", "self", ".", "config", ".", "log_interval", "==", "0", ":", "\n", "                    ", "avg_info", "=", "averager", ".", "average", "(", ")", "\n", "averager", ".", "reset", "(", ")", "\n", "self", ".", "echo", "(", "global_iter", ",", "avg_info", ")", "\n", "self", ".", "wandb_log", "(", "global_iter", ",", "avg_info", ")", "\n", "\n", "", "", "if", "global_iter", "%", "self", ".", "config", ".", "val_interval", "==", "0", ":", "\n", "                ", "val_info", "=", "self", ".", "validate", "(", "steps", "=", "self", ".", "config", ".", "val_steps", ")", "\n", "self", ".", "echo", "(", "global_iter", ",", "val_info", ")", "\n", "self", ".", "wandb_log", "(", "global_iter", ",", "val_info", ")", "\n", "\n", "if", "stopper", ".", "update", "(", "self", ".", "global_iter", ",", "val_info", ")", ":", "\n", "                    ", "self", ".", "save_state", "(", "val_info", ")", "# New best", "\n", "\n", "", "if", "stopper", ".", "should_stop", "(", ")", ":", "\n", "                    ", "LOG", ".", "info", "(", "f\"No decrease in {self.config.early_stop_key} for {self.config.early_stop_patience} steps\"", ")", "\n", "break", "\n", "\n", "", "", "", "if", "not", "self", ".", "config", ".", "eval_only", ":", "\n", "            ", "LOG", ".", "info", "(", "f\"Training complete after {self.global_iter+1} steps.\"", ")", "\n", "\n", "", "if", "not", "self", ".", "config", ".", "eval", ".", "final_eval", ":", "\n", "            ", "return", "\n", "\n", "", "if", "not", "self", ".", "config", ".", "eval_only", ":", "\n", "            ", "if", "(", "not", "self", ".", "config", ".", "debug", ")", "or", "self", ".", "config", ".", "save", ":", "\n", "                ", "archive", "=", "torch", ".", "load", "(", "self", ".", "save_path", ",", "map_location", "=", "\"cpu\"", ")", "\n", "LOG", ".", "info", "(", "f\"Loading best model from step {archive['step']}, elapsed time {archive['elapsed_time']}\"", ")", "\n", "self", ".", "model", ".", "to", "(", "\"cpu\"", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "archive", "[", "\"model\"", "]", ")", "\n", "self", ".", "model", ".", "to", "(", "self", ".", "config", ".", "device", ")", "\n", "\n", "", "", "val_steps", "=", "200", "if", "self", ".", "config", ".", "debug", "else", "None", "\n", "val_info", "=", "self", ".", "validate", "(", "log", "=", "True", ",", "steps", "=", "val_steps", ")", "\n", "self", ".", "echo", "(", "self", ".", "global_iter", ",", "val_info", ",", "pretty", "=", "True", ")", "\n", "self", ".", "wandb_log", "(", "self", ".", "global_iter", "+", "self", ".", "config", ".", "val_interval", ",", "val_info", ")", "\n", "\n", "if", "self", ".", "config", ".", "results_dir", "is", "not", "None", ":", "\n", "            ", "results_path", "=", "f\"{self.config.results_dir}/results_{self.run_date}.json\"", "\n", "latest_path", "=", "f\"{self.config.results_dir}/results_latest.json\"", "\n", "", "else", ":", "\n", "            ", "results_path", "=", "f\"{os.getcwd()}/results.json\"", "\n", "latest_path", "=", "f\"{os.getcwd()}/results_latest.json\"", "\n", "\n", "", "with", "open", "(", "results_path", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "{", "\"results\"", ":", "val_info", ",", "\"config\"", ":", "OmegaConf", ".", "to_container", "(", "self", ".", "config", ")", "}", ",", "f", ")", "\n", "LOG", ".", "info", "(", "\"Wrote results to:\"", ")", "\n", "LOG", ".", "info", "(", "results_path", ")", "\n", "\n", "", "shutil", ".", "copy", "(", "results_path", ",", "latest_path", ")", "\n", "LOG", ".", "info", "(", "\"Copied to:\"", ")", "\n", "LOG", ".", "info", "(", "latest_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer.__init__": [[191, 207], ["trainer.BaseTrainer.__init__", "trainer.EditTrainer.train_set.edit_generator", "hasattr", "hasattr", "trainer.EditTrainer.OptimizerClass", "getattr", "trainer.EditTrainer.lr_opt.load_state_dict", "next"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.edit_generator", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "config", ",", "train_set", ":", "Dataset", ",", "val_set", ":", "Dataset", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "config", ",", "train_set", ",", "val_set", ")", "\n", "\n", "self", ".", "edit_gen", "=", "self", ".", "train_set", ".", "edit_generator", "(", "batch_size", "=", "config", ".", "batch_size", ")", "\n", "if", "hasattr", "(", "model", ",", "\"edit_lrs\"", ")", "and", "not", "self", ".", "config", ".", "eval_only", ":", "\n", "            ", "self", ".", "lr_opt", "=", "self", ".", "OptimizerClass", "(", "[", "model", ".", "edit_lrs", "]", ",", "config", ".", "lr_lr", ")", "\n", "if", "self", ".", "archive", "is", "not", "None", ":", "\n", "                ", "self", ".", "lr_opt", ".", "load_state_dict", "(", "self", ".", "archive", "[", "\"lr_opt\"", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "lr_opt", "=", "None", "\n", "\n", "", "if", "hasattr", "(", "self", ".", "config", ",", "\"ft\"", ")", ":", "\n", "            ", "if", "getattr", "(", "self", ".", "config", ".", "ft", ",", "\"use_locality\"", ",", "False", ")", ":", "\n", "                ", "batch", "=", "next", "(", "self", ".", "edit_gen", ")", "\n", "self", ".", "model", ".", "loc_ids", "=", "batch", "[", "\"loc\"", "]", "[", "\"input_ids\"", "]", "\n", "self", ".", "model", ".", "loc_masks", "=", "batch", "[", "\"loc\"", "]", "[", "\"attention_mask\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer.edit_step": [[208, 283], ["trainer.EditTrainer.model.train", "trainer.EditTrainer.original_model.train", "time.time", "trainer.EditTrainer.model.edit", "l_edit.item", "losses.kl_loc_loss.item", "post_edit_dict[].item", "post_edit_dict[].item", "post_edit_dict[].item", "pre_loc_dict[].item", "post_loc_dict[].item", "pre_loc_dict[].item", "post_loc_dict[].item", "l_total.item", "l_total_edit.item", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_reserved", "torch.no_grad", "trainer.EditTrainer.model", "time.time", "torch.set_grad_enabled", "edited_model", "edited_model", "batch[].get", "losses.kl_loc_loss", "utils.safe_backward", "torch.no_grad", "trainer.EditTrainer.model.edit_loss_fn", "trainer.EditTrainer.model.loc_loss_fn", "trainer.EditTrainer.model.loc_loss_fn", "trainer.EditTrainer.model", "losses.kl_loc_loss", "torch.tensor.item", "original_loc_dict[].item", "original_loc_dict[].item", "torch.tensor", "trainer.EditTrainer.model.edit_loss_fn", "trainer.EditTrainer.detach", "trainer.EditTrainer.model.outer_parameters", "torch.no_grad", "utils._logits", "trainer.EditTrainer.model.loc_loss_fn", "utils._logits.detach", "utils.safe_backward", "trainer.EditTrainer.original_model", "batch[].get.detach", "trainer.EditTrainer.model.outer_parameters"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.edit", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.kl_loc_loss", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.safe_backward", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.kl_loc_loss", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.outer_parameters", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._logits", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.safe_backward", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.outer_parameters"], ["", "", "", "def", "edit_step", "(", "self", ",", "batch", ",", "training", ":", "bool", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", "training", ")", "\n", "self", ".", "original_model", ".", "train", "(", "training", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "base_logits", "=", "self", ".", "model", "(", "**", "batch", "[", "\"loc\"", "]", ")", "\n", "\n", "# Do the edit", "\n", "", "start", "=", "time", ".", "time", "(", ")", "\n", "edited_model", ",", "model_info", "=", "self", ".", "model", ".", "edit", "(", "batch", "[", "\"edit_inner\"", "]", ",", "batch", "[", "\"cond\"", "]", ")", "\n", "edit_time", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "\n", "with", "torch", ".", "set_grad_enabled", "(", "training", ")", ":", "\n", "# Editing loss", "\n", "            ", "post_edit_logits", "=", "edited_model", "(", "**", "batch", "[", "\"edit_outer\"", "]", ")", "\n", "l_edit", "=", "self", ".", "model", ".", "edit_loss_fn", "(", "post_edit_logits", ",", "batch", "[", "\"edit_outer\"", "]", "[", "\"labels\"", "]", ")", "[", "\"nll\"", "]", "\n", "\n", "# Locality loss", "\n", "post_base_logits", "=", "edited_model", "(", "**", "batch", "[", "\"loc\"", "]", ")", "\n", "kl_mask", "=", "batch", "[", "\"loc\"", "]", ".", "get", "(", "\"decoder_attention_mask\"", ",", "batch", "[", "\"loc\"", "]", "[", "\"attention_mask\"", "]", ")", "\n", "l_loc", "=", "kl_loc_loss", "(", "base_logits", ".", "detach", "(", ")", ",", "post_base_logits", ",", "mask", "=", "kl_mask", ")", "\n", "\n", "", "l_total_edit", "=", "self", ".", "config", ".", "cedit", "*", "l_edit", "+", "self", ".", "config", ".", "cloc", "*", "l_loc", "\n", "\n", "if", "training", ":", "\n", "            ", "safe_backward", "(", "l_total_edit", ",", "self", ".", "model", ".", "outer_parameters", "(", ")", ",", "self", ".", "config", ".", "accumulate_bs", ")", "\n", "\n", "# Collect some useful metrics", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "post_edit_dict", "=", "self", ".", "model", ".", "edit_loss_fn", "(", "post_edit_logits", ",", "batch", "[", "\"edit_outer\"", "]", "[", "\"labels\"", "]", ")", "\n", "post_loc_dict", "=", "self", ".", "model", ".", "loc_loss_fn", "(", "post_base_logits", ",", "batch", "[", "\"loc\"", "]", "[", "\"labels\"", "]", ")", "\n", "pre_loc_dict", "=", "self", ".", "model", ".", "loc_loss_fn", "(", "base_logits", ",", "batch", "[", "\"loc\"", "]", "[", "\"labels\"", "]", ")", "\n", "\n", "", "info_dict", "=", "{", "}", "\n", "info_dict", "[", "'loss/edit'", "]", "=", "l_edit", ".", "item", "(", ")", "\n", "info_dict", "[", "'loss/loc'", "]", "=", "l_loc", ".", "item", "(", ")", "\n", "info_dict", "[", "'edit/acc'", "]", "=", "post_edit_dict", "[", "\"acc\"", "]", ".", "item", "(", ")", "\n", "info_dict", "[", "'edit/log_prob'", "]", "=", "post_edit_dict", "[", "\"log_prob\"", "]", ".", "item", "(", ")", "\n", "info_dict", "[", "'edit/prob'", "]", "=", "post_edit_dict", "[", "\"prob\"", "]", ".", "item", "(", ")", "\n", "info_dict", "[", "\"acc/pre\"", "]", "=", "pre_loc_dict", "[", "\"acc\"", "]", ".", "item", "(", ")", "\n", "info_dict", "[", "\"acc/post\"", "]", "=", "post_loc_dict", "[", "\"acc\"", "]", ".", "item", "(", ")", "\n", "info_dict", "[", "\"nll/pre\"", "]", "=", "pre_loc_dict", "[", "\"nll\"", "]", ".", "item", "(", ")", "\n", "info_dict", "[", "\"nll/post\"", "]", "=", "post_loc_dict", "[", "\"nll\"", "]", ".", "item", "(", ")", "\n", "info_dict", "[", "\"n_tokens/pre\"", "]", "=", "post_loc_dict", "[", "\"n_tokens\"", "]", "\n", "info_dict", "[", "\"n_tokens/post\"", "]", "=", "post_loc_dict", "[", "\"n_tokens\"", "]", "\n", "info_dict", "[", "\"time/edit\"", "]", "=", "edit_time", "\n", "\n", "# Base loss", "\n", "if", "self", ".", "config", ".", "train_base", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "original_logits", "=", "_logits", "(", "self", ".", "original_model", "(", "**", "batch", "[", "\"loc\"", "]", ")", ")", "\n", "original_loc_dict", "=", "self", ".", "model", ".", "loc_loss_fn", "(", "original_logits", ",", "batch", "[", "\"loc\"", "]", "[", "\"labels\"", "]", ")", "\n", "\n", "", "base_logits", "=", "self", ".", "model", "(", "**", "batch", "[", "\"loc\"", "]", ")", "\n", "l_base", "=", "kl_loc_loss", "(", "original_logits", ".", "detach", "(", ")", ",", "base_logits", ",", "mask", "=", "kl_mask", ".", "detach", "(", ")", ")", "\n", "\n", "if", "training", ":", "\n", "                ", "safe_backward", "(", "l_base", ",", "self", ".", "model", ".", "outer_parameters", "(", ")", ",", "self", ".", "config", ".", "accumulate_bs", ",", "allow_unused", "=", "True", ")", "\n", "\n", "", "info_dict", "[", "'loss/base'", "]", "=", "l_base", ".", "item", "(", ")", "\n", "info_dict", "[", "'nll/original'", "]", "=", "original_loc_dict", "[", "\"nll\"", "]", ".", "item", "(", ")", "\n", "info_dict", "[", "'acc/original'", "]", "=", "original_loc_dict", "[", "\"acc\"", "]", ".", "item", "(", ")", "\n", "info_dict", "[", "\"n_tokens/original\"", "]", "=", "original_loc_dict", "[", "\"n_tokens\"", "]", "\n", "", "else", ":", "\n", "            ", "l_base", "=", "torch", ".", "tensor", "(", "0.", ")", "\n", "\n", "", "l_total", "=", "l_total_edit", "+", "self", ".", "config", ".", "cbase", "*", "l_base", "\n", "\n", "info_dict", "[", "\"loss/total\"", "]", "=", "l_total", ".", "item", "(", ")", "\n", "info_dict", "[", "\"loss/total_edit\"", "]", "=", "l_total_edit", ".", "item", "(", ")", "\n", "info_dict", "[", "\"memory/alloc_max\"", "]", "=", "torch", ".", "cuda", ".", "max_memory_allocated", "(", ")", "\n", "info_dict", "[", "\"memory/res_max\"", "]", "=", "torch", ".", "cuda", ".", "max_memory_reserved", "(", ")", "\n", "info_dict", "=", "{", "**", "info_dict", ",", "**", "model_info", "}", "\n", "\n", "return", "l_total", ",", "l_edit", ",", "l_loc", ",", "l_base", ",", "info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer.train_step": [[284, 303], ["trainer.EditTrainer.edit_step", "next", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_.item", "trainer.EditTrainer.opt.step", "trainer.EditTrainer.opt.zero_grad", "trainer.EditTrainer.model.outer_parameters", "trainer.EditTrainer.lr_opt.step", "trainer.EditTrainer.lr_opt.zero_grad", "enumerate", "lr.item"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer.edit_step", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.outer_parameters"], ["", "def", "train_step", "(", "self", ")", ":", "\n", "        ", "l_total", ",", "l_edit", ",", "l_loc", ",", "l_base", ",", "info_dict", "=", "self", ".", "edit_step", "(", "next", "(", "self", ".", "edit_gen", ")", ",", "training", "=", "True", ")", "\n", "\n", "if", "self", ".", "global_iter", ">", "0", "and", "self", ".", "global_iter", "%", "self", ".", "config", ".", "accumulate_bs", "==", "0", ":", "\n", "            ", "grad", "=", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "model", ".", "outer_parameters", "(", ")", ",", "self", ".", "config", ".", "grad_clip", ",", "\n", "error_if_nonfinite", "=", "True", ")", "\n", "info_dict", "[", "'grad'", "]", "=", "grad", ".", "item", "(", ")", "\n", "\n", "self", ".", "opt", ".", "step", "(", ")", "\n", "self", ".", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "if", "self", ".", "lr_opt", "is", "not", "None", ":", "\n", "                ", "self", ".", "lr_opt", ".", "step", "(", ")", "\n", "self", ".", "lr_opt", ".", "zero_grad", "(", ")", "\n", "\n", "for", "lr_idx", ",", "lr", "in", "enumerate", "(", "self", ".", "model", ".", "edit_lrs", ")", ":", "\n", "                    ", "info_dict", "[", "f'lr/lr{lr_idx}'", "]", "=", "lr", ".", "item", "(", ")", "\n", "\n", "", "", "", "return", "info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer._inline_validation_log": [[304, 322], ["LOG.info", "time.time", "RuntimeError"], "methods", ["None"], ["", "def", "_inline_validation_log", "(", "self", ",", "step", ",", "stats", ",", "start_time", ",", "steps", ")", ":", "\n", "        ", "elapsed", "=", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "/", "(", "step", "+", "1", ")", "\n", "prog", "=", "f\"{step+1}/{steps}\"", ".", "ljust", "(", "20", ")", "\n", "acc", "=", "f\"{stats['edit/acc_val']:<12.5f}\"", "\n", "if", "self", ".", "config", ".", "task", "in", "[", "\"fc\"", ",", "\"qa\"", "]", ":", "\n", "            ", "draw_pre", "=", "f\"{stats['acc/pre_val']:<12.5f}\"", "\n", "draw_post", "=", "f\"{stats['acc/post_val']:<12.5f}\"", "\n", "draw_diff", "=", "f\"{stats['acc/pre_val']-stats['acc/post_val']:<12.5f}\"", "\n", "dn", "=", "\"acc\"", "# drawdown name", "\n", "", "elif", "self", ".", "config", ".", "task", "in", "[", "\"gen\"", "]", ":", "\n", "            ", "draw_pre", "=", "f\"{stats['perplexity/pre_val']:<12.5f}\"", "\n", "draw_post", "=", "f\"{stats['perplexity/post_val']:<12.5f}\"", "\n", "draw_diff", "=", "f\"{stats['perplexity/post_val']-stats['perplexity/pre_val']:<12.5f}\"", "\n", "dn", "=", "\"ppl\"", "# drawdown name", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"Didn't recognize task {self.config.task}\"", ")", "\n", "\n", "", "LOG", ".", "info", "(", "f\"Step {prog} edit: {acc} {dn}_pre: {draw_pre} {dn}_post: {draw_post} {dn}_delta: {draw_diff} it_time: {elapsed:.4f}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer.validate": [[323, 348], ["utils.RunningStatAverager", "trainer.EditTrainer.val_set.edit_generator", "time.time", "range", "utils.RunningStatAverager.average", "len", "LOG.info", "trainer.EditTrainer.edit_step", "utils.RunningStatAverager.add", "trainer.EditTrainer._inline_validation_log", "time.time", "len", "next", "trainer.EditTrainer._inline_validation_log", "utils.RunningStatAverager.average", "utils.RunningStatAverager.average"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.edit_generator", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.average", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer.edit_step", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.add", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer._inline_validation_log", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.trainer.EditTrainer._inline_validation_log", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.average", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.average"], ["", "def", "validate", "(", "self", ",", "steps", "=", "None", ",", "log", ":", "bool", "=", "False", ")", ":", "\n", "        ", "if", "steps", "is", "None", "or", "steps", ">", "len", "(", "self", ".", "val_set", ")", ":", "\n", "            ", "steps", "=", "len", "(", "self", ".", "val_set", ")", "\n", "\n", "", "if", "log", ":", "\n", "            ", "LOG", ".", "info", "(", "f\"Beginning evaluation for {steps} steps...\"", ")", "\n", "", "averager", "=", "RunningStatAverager", "(", "\"val\"", ")", "\n", "val_edit_gen", "=", "self", ".", "val_set", ".", "edit_generator", "(", "batch_size", "=", "self", ".", "config", ".", "val_batch_size", ",", "n", "=", "steps", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "val_step", "in", "range", "(", "steps", ")", ":", "\n", "            ", "_", ",", "_", ",", "_", ",", "_", ",", "info_dict", "=", "self", ".", "edit_step", "(", "next", "(", "val_edit_gen", ")", ",", "training", "=", "False", ")", "\n", "averager", ".", "add", "(", "info_dict", ")", "\n", "\n", "if", "log", "and", "self", ".", "config", ".", "eval", ".", "verbose", "and", "(", "val_step", "+", "1", ")", "%", "self", ".", "config", ".", "eval", ".", "log_interval", "==", "0", ":", "\n", "                ", "self", ".", "_inline_validation_log", "(", "val_step", ",", "averager", ".", "average", "(", ")", ",", "start_time", ",", "steps", ")", "\n", "\n", "", "", "if", "log", "and", "self", ".", "config", ".", "eval", ".", "verbose", ":", "\n", "            ", "self", ".", "_inline_validation_log", "(", "val_step", ",", "averager", ".", "average", "(", ")", ",", "start_time", ",", "steps", ")", "\n", "", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "stats", "=", "averager", ".", "average", "(", ")", "\n", "stats", "[", "\"eval_time/elapsed\"", "]", "=", "elapsed", "\n", "stats", "[", "\"eval_time/average\"", "]", "=", "elapsed", "/", "steps", "\n", "\n", "return", "stats", "\n", "", "", ""]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.editable_model.EditableModel.__init__": [[8, 19], ["torch.Module.__init__", "losses.masked_log_probs", "utils.shift_targets"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.masked_log_probs", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.shift_targets"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "config", ",", "model_constructor", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "model_constructor", "=", "model_constructor", "\n", "\n", "def", "_edit_loss_fn", "(", "pred", ",", "targ", ")", ":", "\n", "            ", "return", "masked_log_probs", "(", "pred", ",", "targ", ",", "shift", "=", "shift_targets", "(", "self", ".", "config", ")", ")", "\n", "", "self", ".", "edit_loss_fn", "=", "_edit_loss_fn", "\n", "self", ".", "loc_loss_fn", "=", "_edit_loss_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.editable_model.EditableModel.edit": [[20, 22], ["None"], "methods", ["None"], ["", "def", "edit", "(", "self", ",", "batch", ",", "condition", "=", "None", ",", "detach_history", "=", "False", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.editable_model.EditableModel.forward": [[23, 25], ["utils._logits", "editable_model.EditableModel.model"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._logits"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "_logits", "(", "self", ".", "model", "(", "*", "inputs", ",", "**", "kwargs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.editable_model.EditableModel.outer_parameters": [[26, 28], ["editable_model.EditableModel.parameters"], "methods", ["None"], ["", "def", "outer_parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.editable_model.EditableModel.base_loss": [[29, 31], ["None"], "methods", ["None"], ["", "def", "base_loss", "(", "self", ",", "input_ids", ",", "attention_masks", ",", "label_ids", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.hooks.linear_backward_hook": [[4, 15], ["hasattr", "hasattr", "print", "grad_out[].detach", "print", "len"], "function", ["None"], ["def", "linear_backward_hook", "(", "mod", ",", "grad_in", ",", "grad_out", ")", ":", "\n", "    ", "if", "not", "hasattr", "(", "mod", ",", "\"weight\"", ")", ":", "\n", "        ", "print", "(", "f\"{mod} has no weight!\"", ")", "\n", "return", "\n", "\n", "", "if", "hasattr", "(", "mod", ".", "weight", ",", "\"__x__\"", ")", ":", "\n", "        ", "assert", "len", "(", "grad_out", ")", "==", "1", "\n", "# mod.weight.__bgrad__ = grad_out[0].unsqueeze(-1) * mod.__x__[0].unsqueeze(-2)", "\n", "mod", ".", "weight", ".", "__delta__", "=", "grad_out", "[", "0", "]", ".", "detach", "(", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "f\"{mod} has no __x__\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.hooks.linear_forward_hook": [[17, 20], ["activations[].detach", "len"], "function", ["None"], ["", "", "def", "linear_forward_hook", "(", "mod", ",", "activations", ",", "output", ")", ":", "\n", "    ", "assert", "len", "(", "activations", ")", "==", "1", "\n", "mod", ".", "weight", ".", "__x__", "=", "activations", "[", "0", "]", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.hooks.hook_model": [[22, 29], ["utils.parent_module", "handles.append", "handles.append", "m.register_full_backward_hook", "m.register_forward_hook"], "function", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.parent_module"], ["", "def", "hook_model", "(", "model", ",", "pnames", ")", ":", "\n", "    ", "handles", "=", "[", "]", "\n", "for", "m", "in", "[", "parent_module", "(", "model", ",", "pname", ")", "for", "pname", "in", "pnames", "]", ":", "\n", "        ", "handles", ".", "append", "(", "m", ".", "register_full_backward_hook", "(", "linear_backward_hook", ")", ")", "\n", "handles", ".", "append", "(", "m", ".", "register_forward_hook", "(", "linear_forward_hook", ")", ")", "\n", "\n", "", "model", ".", "handles", "=", "handles", "\n", "", ""]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.nn.IDMLP.__init__": [[10, 27], ["torch.Module.__init__", "LOG.info", "torch.ModuleList", "torch.ModuleList", "torch.LRLinear", "range"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "indim", ":", "int", ",", "\n", "outdim", ":", "int", ",", "\n", "hidden_dim", ":", "int", ",", "\n", "n_hidden", ":", "int", ",", "\n", "init", ":", "str", "=", "None", ",", "\n", "act", ":", "str", "=", "None", ",", "\n", "rank", ":", "int", "=", "None", ",", "\n", "n_modes", ":", "int", "=", "None", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "LOG", ".", "info", "(", "f\"Building IDMLP ({init}) {[indim] * (n_hidden + 2)}\"", ")", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "\n", "[", "\n", "LRLinear", "(", "indim", ",", "indim", ",", "rank", "=", "rank", ",", "relu", "=", "idx", "<", "n_hidden", ",", "init", "=", "init", ",", "n_modes", "=", "n_modes", ")", "\n", "for", "idx", "in", "range", "(", "n_hidden", "+", "1", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.nn.IDMLP.forward": [[30, 35], ["layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mode", "=", "None", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ",", "mode", "=", "mode", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.nn.LRLinear.__init__": [[38, 63], ["torch.Module.__init__", "min", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Embedding", "torch.Embedding", "torch.LRLinear.mode_shift.weight.data.zero_", "torch.Embedding", "torch.Embedding", "torch.LRLinear.mode_scale.weight.data.fill_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "ValueError", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.init.calculate_gain", "torch.init.calculate_gain"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inf", ",", "outf", ",", "rank", ":", "int", "=", "None", ",", "relu", "=", "False", ",", "init", "=", "\"id\"", ",", "n_modes", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "mid_dim", "=", "min", "(", "rank", ",", "inf", ")", "\n", "if", "init", "==", "\"id\"", ":", "\n", "            ", "self", ".", "u", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "outf", ",", "mid_dim", ")", ")", "\n", "self", ".", "v", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "mid_dim", ",", "inf", ")", ")", "\n", "", "elif", "init", "==", "\"xavier\"", ":", "\n", "            ", "self", ".", "u", "=", "nn", ".", "Parameter", "(", "torch", ".", "empty", "(", "outf", ",", "mid_dim", ")", ")", "\n", "self", ".", "v", "=", "nn", ".", "Parameter", "(", "torch", ".", "empty", "(", "mid_dim", ",", "inf", ")", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "u", ".", "data", ",", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "\"relu\"", ")", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "v", ".", "data", ",", "gain", "=", "1.0", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f\"Unrecognized initialization {init}\"", ")", "\n", "\n", "", "if", "n_modes", "is", "not", "None", ":", "\n", "            ", "self", ".", "mode_shift", "=", "nn", ".", "Embedding", "(", "n_modes", ",", "outf", ")", "\n", "self", ".", "mode_shift", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "self", ".", "mode_scale", "=", "nn", ".", "Embedding", "(", "n_modes", ",", "outf", ")", "\n", "self", ".", "mode_scale", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "\n", "", "self", ".", "n_modes", "=", "n_modes", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "outf", ")", ")", "\n", "self", ".", "inf", "=", "inf", "\n", "self", ".", "init", "=", "init", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.nn.LRLinear.forward": [[64, 86], ["pre_act.clamp", "isinstance", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.LRLinear.mode_scale", "torch.LRLinear.mode_shift", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mode", "=", "None", ")", ":", "\n", "        ", "if", "mode", "is", "not", "None", ":", "\n", "            ", "assert", "self", ".", "n_modes", "is", "not", "None", ",", "\"Linear got a mode but wasn't initialized for it\"", "\n", "assert", "mode", "<", "self", ".", "n_modes", ",", "f\"Input mode {mode} outside of range {self.n_modes}\"", "\n", "", "assert", "x", ".", "shape", "[", "-", "1", "]", "==", "self", ".", "inf", ",", "f\"Input wrong dim ({x.shape}, {self.inf})\"", "\n", "\n", "pre_act", "=", "(", "self", ".", "u", "@", "(", "self", ".", "v", "@", "x", ".", "T", ")", ")", ".", "T", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "pre_act", "+=", "self", ".", "bias", "\n", "\n", "", "if", "mode", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "mode", ",", "torch", ".", "Tensor", ")", ":", "\n", "                ", "mode", "=", "torch", ".", "tensor", "(", "mode", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "", "scale", ",", "shift", "=", "self", ".", "mode_scale", "(", "mode", ")", ",", "self", ".", "mode_shift", "(", "mode", ")", "\n", "pre_act", "=", "pre_act", "*", "scale", "+", "shift", "\n", "\n", "# need clamp instead of relu so gradient at 0 isn't 0", "\n", "", "acts", "=", "pre_act", ".", "clamp", "(", "min", "=", "0", ")", "\n", "if", "self", ".", "init", "==", "\"id\"", ":", "\n", "            ", "return", "acts", "+", "x", "\n", "", "else", ":", "\n", "            ", "return", "acts", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.nn.MLP.__init__": [[89, 173], ["torch.Module.__init__", "LOG.info", "enumerate", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "init.startswith", "LOG.info", "torch.Parameter", "torch.Parameter", "zip", "ActMLP", "ValueError", "LOG.info", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "layers.append", "layers.append", "layers.append", "isinstance", "torch.Linear", "torch.Linear", "torch.LRLinear", "torch.eye().repeat", "torch.eye().repeat", "torch.eye().repeat", "torch.eye().repeat", "torch.eye().repeat", "torch.eye().repeat", "torch.eye().repeat", "torch.eye().repeat", "torch.init.orthogonal_", "torch.init.orthogonal_", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "indim", ":", "int", ",", "\n", "outdim", ":", "int", ",", "\n", "hidden_dim", ":", "int", ",", "\n", "n_hidden", ":", "int", ",", "\n", "init", ":", "str", "=", "\"xavier_uniform\"", ",", "\n", "act", ":", "str", "=", "\"relu\"", ",", "\n", "rank", ":", "int", "=", "None", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "init", "=", "init", "\n", "\n", "if", "act", "==", "\"relu\"", ":", "\n", "            ", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "act", "==", "\"learned\"", ":", "\n", "            ", "self", ".", "act", "=", "ActMLP", "(", "10", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f\"Unrecognized activation function '{act}'\"", ")", "\n", "\n", "", "if", "hidden_dim", "is", "None", ":", "\n", "            ", "hidden_dim", "=", "outdim", "*", "2", "\n", "\n", "", "if", "init", ".", "startswith", "(", "\"id\"", ")", "and", "outdim", "!=", "indim", ":", "\n", "            ", "LOG", ".", "info", "(", "f\"Overwriting outdim ({outdim}) to be indim ({indim})\"", ")", "\n", "outdim", "=", "indim", "\n", "\n", "", "if", "init", "==", "\"id\"", ":", "\n", "            ", "old_hidden_dim", "=", "hidden_dim", "\n", "if", "hidden_dim", "<", "indim", "*", "2", ":", "\n", "                ", "hidden_dim", "=", "indim", "*", "2", "\n", "\n", "", "if", "hidden_dim", "%", "indim", "!=", "0", ":", "\n", "                ", "hidden_dim", "+=", "hidden_dim", "%", "indim", "\n", "\n", "", "if", "old_hidden_dim", "!=", "hidden_dim", ":", "\n", "                ", "LOG", ".", "info", "(", "\n", "f\"Overwriting hidden dim ({old_hidden_dim}) to be {hidden_dim}\"", "\n", ")", "\n", "\n", "", "", "if", "init", "==", "\"id_alpha\"", ":", "\n", "            ", "self", ".", "alpha", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "outdim", ")", ")", "\n", "\n", "", "dims", "=", "[", "indim", "]", "+", "[", "hidden_dim", "]", "*", "n_hidden", "+", "[", "outdim", "]", "\n", "LOG", ".", "info", "(", "f\"Building ({init}) MLP: {dims} (rank {rank})\"", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "for", "idx", ",", "(", "ind", ",", "outd", ")", "in", "enumerate", "(", "zip", "(", "dims", "[", ":", "-", "1", "]", ",", "dims", "[", "1", ":", "]", ")", ")", ":", "\n", "            ", "if", "rank", "is", "None", ":", "\n", "                ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "ind", ",", "outd", ")", ")", "\n", "", "else", ":", "\n", "                ", "layers", ".", "append", "(", "LRLinear", "(", "ind", ",", "outd", ",", "rank", "=", "rank", ")", ")", "\n", "", "if", "idx", "<", "n_hidden", ":", "\n", "                ", "layers", ".", "append", "(", "self", ".", "act", ")", "\n", "\n", "", "", "if", "rank", "is", "None", ":", "\n", "            ", "if", "init", "==", "\"id\"", ":", "\n", "                ", "if", "n_hidden", ">", "0", ":", "\n", "                    ", "layers", "[", "0", "]", ".", "weight", ".", "data", "=", "torch", ".", "eye", "(", "indim", ")", ".", "repeat", "(", "\n", "hidden_dim", "//", "indim", ",", "1", "\n", ")", "\n", "layers", "[", "0", "]", ".", "weight", ".", "data", "[", "hidden_dim", "//", "2", ":", "]", "*=", "-", "1", "\n", "layers", "[", "-", "1", "]", ".", "weight", ".", "data", "=", "torch", ".", "eye", "(", "outdim", ")", ".", "repeat", "(", "\n", "1", ",", "hidden_dim", "//", "outdim", "\n", ")", "\n", "layers", "[", "-", "1", "]", ".", "weight", ".", "data", "[", ":", ",", "hidden_dim", "//", "2", ":", "]", "*=", "-", "1", "\n", "layers", "[", "-", "1", "]", ".", "weight", ".", "data", "/=", "(", "hidden_dim", "//", "indim", ")", "/", "2.0", "\n", "\n", "", "", "for", "layer", "in", "layers", ":", "\n", "                ", "if", "isinstance", "(", "layer", ",", "nn", ".", "Linear", ")", ":", "\n", "                    ", "if", "init", "==", "\"ortho\"", ":", "\n", "                        ", "nn", ".", "init", ".", "orthogonal_", "(", "layer", ".", "weight", ")", "\n", "", "elif", "init", "==", "\"id\"", ":", "\n", "                        ", "if", "layer", ".", "weight", ".", "shape", "[", "0", "]", "==", "layer", ".", "weight", ".", "shape", "[", "1", "]", ":", "\n", "                            ", "layer", ".", "weight", ".", "data", "=", "torch", ".", "eye", "(", "hidden_dim", ")", "\n", "", "", "else", ":", "\n", "                        ", "gain", "=", "3", "**", "0.5", "if", "(", "layer", "is", "layers", "[", "-", "1", "]", ")", "else", "1.0", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "layer", ".", "weight", ",", "gain", "=", "gain", ")", "\n", "\n", "", "layer", ".", "bias", ".", "data", "[", ":", "]", "=", "0", "\n", "\n", "", "", "", "layers", "[", "-", "1", "]", ".", "bias", "=", "None", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.nn.MLP.forward": [[174, 179], ["torch.MLP.mlp", "torch.MLP.mlp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "init", "==", "\"id_alpha\"", ":", "\n", "            ", "return", "x", "+", "self", ".", "alpha", "*", "self", ".", "mlp", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "mlp", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.oracle.test_rank1": [[8, 92], ["model.eval", "dataset.edit_generator", "higher.patch.monkeypatch", "print", "higher.patch.monkeypatch.named_parameters", "torch.optim.SGD", "torch.optim.SGD", "print", "print", "torch.inference_mode", "torch.inference_mode", "model", "model", "hasattr", "higher.patch.monkeypatch.named_parameters", "higher.patch.monkeypatch", "hasattr", "losses.kl_loc_loss", "higher.patch.monkeypatch", "hasattr", "losses.masked_log_probs", "print", "zip", "torch.optim.SGD.step", "torch.optim.SGD.zero_grad", "history.append", "history.append", "len", "ret.item", "torch.Parameter", "torch.Parameter", "opt_list.extend", "torch.inference_mode", "torch.inference_mode", "higher.patch.monkeypatch", "hasattr", "torch.autograd.grad", "torch.autograd.grad", "sum", "len", "fast_params.append", "fast_params.append", "edit_model.dim", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "p.detach", "loss.item", "losses.kl_loc_loss.item", "edit_loss.item", "facc.item", "ret.item", "p.detach", "model.argmax", "edit_model.argmax", "edit_model.argmax"], "function", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.edit_generator", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.kl_loc_loss", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.masked_log_probs"], ["def", "test_rank1", "(", "model", ",", "dataset", ",", "config", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "generator", "=", "dataset", ".", "edit_generator", "(", "21", ")", "\n", "\n", "history", "=", "[", "]", "\n", "for", "example", "in", "generator", ":", "\n", "        ", "edit_model", "=", "make_functional", "(", "model", ",", "track_higher_grads", "=", "False", ")", "\n", "residuals", "=", "{", "}", "\n", "opt_list", "=", "[", "]", "\n", "print", "(", "config", ".", "model", ".", "inner_params", ")", "\n", "for", "n", ",", "p", "in", "edit_model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "n", "in", "config", ".", "model", ".", "inner_params", ":", "\n", "                ", "std", "=", "0.01", "\n", "u", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "p", ".", "shape", "[", "0", "]", ",", "1", ",", "device", "=", "p", ".", "device", ")", "*", "std", ")", "\n", "v", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ",", "p", ".", "shape", "[", "1", "]", ",", "device", "=", "p", ".", "device", ")", "*", "std", ")", "\n", "assert", "(", "u", "@", "v", ")", ".", "shape", "==", "p", ".", "shape", ",", "f\"got {(u@v).shape}, expected {p.shape}\"", "\n", "\n", "residuals", "[", "n", "]", "=", "(", "u", ",", "v", ")", "\n", "opt_list", ".", "extend", "(", "[", "u", ",", "v", "]", ")", "\n", "\n", "", "", "res_opt", "=", "torch", ".", "optim", ".", "SGD", "(", "opt_list", ",", "lr", "=", "100", ")", "\n", "\n", "acc", "=", "0", "\n", "it", "=", "0", "\n", "ids_train", "=", "example", "[", "\"loc_ids\"", "]", "[", ":", "10", "]", "\n", "ids_val", "=", "example", "[", "\"loc_ids\"", "]", "[", "10", ":", "]", "\n", "with", "torch", ".", "inference_mode", "(", ")", ":", "\n", "            ", "original_logits_train", "=", "model", "(", "ids_train", ")", "\n", "original_logits_val", "=", "model", "(", "ids_val", ")", "\n", "if", "hasattr", "(", "original_logits_train", ",", "\"logits\"", ")", ":", "\n", "                ", "original_logits_train", "=", "original_logits_train", ".", "logits", "\n", "original_logits_val", "=", "original_logits_val", ".", "logits", "\n", "\n", "", "", "while", "acc", "<", "1", "and", "it", "<", "1000", ":", "\n", "            ", "fast_params", "=", "[", "]", "\n", "for", "n", ",", "p", "in", "edit_model", ".", "named_parameters", "(", ")", ":", "\n", "                ", "if", "n", "in", "residuals", ":", "\n", "                    ", "u", ",", "v", "=", "residuals", "[", "n", "]", "\n", "fast_params", ".", "append", "(", "p", ".", "detach", "(", ")", "+", "(", "u", "@", "v", ")", ")", "\n", "", "else", ":", "\n", "                    ", "fast_params", ".", "append", "(", "p", ".", "detach", "(", ")", ")", "\n", "\n", "", "", "loc_pred", "=", "edit_model", "(", "ids_train", ",", "params", "=", "fast_params", ")", "\n", "if", "hasattr", "(", "loc_pred", ",", "\"logits\"", ")", ":", "\n", "                ", "loc_pred", "=", "loc_pred", ".", "logits", "\n", "\n", "", "loc_loss", "=", "kl_loc_loss", "(", "original_logits_train", ",", "loc_pred", ")", "\n", "\n", "pred_log", "=", "edit_model", "(", "example", "[", "\"edit_inner_ids\"", "]", ",", "params", "=", "fast_params", ")", "\n", "if", "hasattr", "(", "pred_log", ",", "\"logits\"", ")", ":", "\n", "                ", "pred_log", "=", "pred_log", ".", "logits", "\n", "", "prob_dict", "=", "masked_log_probs", "(", "pred_log", ",", "example", "[", "\"edit_inner_labels\"", "]", ")", "\n", "edit_loss", "=", "prob_dict", "[", "\"nll\"", "]", "\n", "acc", "=", "prob_dict", "[", "\"acc\"", "]", "\n", "\n", "loss", "=", "loc_loss", "+", "0.0002", "*", "edit_loss", "\n", "with", "torch", ".", "inference_mode", "(", ")", ":", "\n", "                ", "loc_pred_val", "=", "edit_model", "(", "ids_val", ",", "params", "=", "fast_params", ")", "\n", "if", "hasattr", "(", "loc_pred_val", ",", "\"logits\"", ")", ":", "\n", "                    ", "loc_pred_val", "=", "loc_pred_val", ".", "logits", "\n", "\n", "", "if", "pred_log", ".", "dim", "(", ")", "==", "3", ":", "\n", "                    ", "facc", "=", "(", "pred_log", ".", "argmax", "(", "-", "1", ")", "[", "0", ",", "-", "10", ":", "-", "1", "]", "==", "example", "[", "\"edit_inner_labels\"", "]", "[", "0", ",", "-", "9", ":", "]", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "ret", "=", "(", "original_logits_val", ".", "argmax", "(", "-", "1", ")", "==", "loc_pred_val", ".", "argmax", "(", "-", "1", ")", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "                    ", "facc", "=", "(", "pred_log", ">", "0", ")", "==", "example", "[", "\"edit_inner_labels\"", "]", "\n", "ret", "=", "(", "(", "original_logits_val", ">", "0", ")", "==", "(", "loc_pred_val", ">", "0", ")", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "\n", "", "", "print", "(", "f\"{it}, ({loss.item():.6f}, {loc_loss.item():.4f}, {edit_loss.item():.4f}), {facc.item():.2f}, {ret.item():.4f} {(u@v).view(-1).norm().item():.5f}\"", ",", "end", "=", "\"\\r\"", ")", "\n", "\n", "for", "p", ",", "g", "in", "zip", "(", "opt_list", ",", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "opt_list", ")", ")", ":", "\n", "                ", "p", ".", "grad", "=", "g", "\n", "", "res_opt", ".", "step", "(", ")", "\n", "res_opt", ".", "zero_grad", "(", ")", "\n", "\n", "it", "+=", "1", "\n", "\n", "", "if", "acc", "==", "1", ":", "\n", "            ", "history", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "history", ".", "append", "(", "0", ")", "\n", "\n", "", "print", "(", ")", "\n", "print", "(", "len", "(", "history", ")", ",", "sum", "(", "history", ")", "/", "len", "(", "history", ")", ",", "ret", ".", "item", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.run.add_padding": [[25, 29], ["tokenizer.add_special_tokens", "model.resize_token_embeddings", "model.transformer.wte.weight.data.mean", "len"], "function", ["None"], ["def", "add_padding", "(", "tokenizer", ",", "model", ")", ":", "\n", "    ", "tokenizer", ".", "add_special_tokens", "(", "{", "'pad_token'", ":", "'[PAD]'", "}", ")", "\n", "model", ".", "resize_token_embeddings", "(", "len", "(", "tokenizer", ")", ")", "\n", "model", ".", "transformer", ".", "wte", ".", "weight", ".", "data", "[", "-", "1", "]", "=", "model", ".", "transformer", ".", "wte", ".", "weight", ".", "data", ".", "mean", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.run.run": [[31, 83], ["hydra.main", "LOG.info", "hydra.utils.get_original_cwd", "LOG.info", "random.seed", "numpy.random.seed", "torch.manual_seed", "models.get_model", "models.get_tokenizer", "importlib.import_module", "LOG.info", "getattr", "getattr.", "trainer.EditTrainer", "trainer.EditTrainer.run", "run.add_padding", "GenDataset", "GenDataset", "config.alg.upper", "BinaryAugmentedKILT", "BinaryAugmentedKILT", "copy.deepcopy", "Seq2SeqAugmentedKILT.edit_generator", "numpy.random.get_state", "numpy.random.seed", "numpy.random.set_state", "omegaconf.OmegaConf.to_yaml", "Seq2SeqAugmentedKILT", "Seq2SeqAugmentedKILT", "ValueError", "config.alg.upper", "next", "Seq2SeqAugmentedKILT.edit_generator"], "function", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.get_model", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.models.get_tokenizer", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.run.run", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.run.add_padding", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.edit_generator", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.edit_generator"], ["", "@", "hydra", ".", "main", "(", "config_path", "=", "'config'", ",", "config_name", "=", "'config'", ")", "\n", "def", "run", "(", "config", ")", ":", "\n", "    ", "LOG", ".", "info", "(", "f\"\\n\\n{OmegaConf.to_yaml(config)}\\n\"", ")", "\n", "base_dir", "=", "hydra", ".", "utils", ".", "get_original_cwd", "(", ")", "\n", "LOG", ".", "info", "(", "f\"Project base directory: {base_dir}\"", ")", "\n", "\n", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "config", ".", "seed", ")", "\n", "\n", "model", "=", "models", ".", "get_model", "(", "config", ")", "\n", "tokenizer", "=", "models", ".", "get_tokenizer", "(", "config", ")", "\n", "\n", "if", "config", ".", "task", "==", "\"gen\"", "or", "config", ".", "task", "==", "\"wiki\"", ":", "\n", "        ", "add_padding", "(", "tokenizer", ",", "model", ")", "\n", "from", "data_classes", ".", "wiki", "import", "GenDataset", "\n", "\n", "train_set", "=", "GenDataset", "(", "\"train\"", ",", "tokenizer", ",", "config", ",", "config", ".", "data", ".", "path", ",", "pct", "=", "10", ")", "\n", "val_set", "=", "GenDataset", "(", "\"validation\"", ",", "tokenizer", ",", "config", ",", "config", ".", "data", ".", "path", ",", "pct", "=", "10", ")", "\n", "", "elif", "config", ".", "task", "==", "\"fc\"", "or", "config", ".", "task", "==", "\"fever\"", ":", "\n", "        ", "from", "data_classes", ".", "fever", "import", "BinaryAugmentedKILT", "\n", "\n", "train_set", "=", "BinaryAugmentedKILT", "(", "tokenizer", ",", "f\"{base_dir}/data/fever/fever-train-kilt.jsonl\"", ",", "config", ")", "\n", "val_set", "=", "BinaryAugmentedKILT", "(", "tokenizer", ",", "f\"{base_dir}/data/fever/fever-dev-kilt.jsonl\"", ",", "config", ")", "\n", "", "elif", "config", ".", "task", "==", "\"qa\"", "or", "config", ".", "task", "==", "\"zsre\"", ":", "\n", "        ", "from", "data_classes", ".", "zsre", "import", "Seq2SeqAugmentedKILT", "\n", "\n", "train_set", "=", "Seq2SeqAugmentedKILT", "(", "tokenizer", ",", "f\"{base_dir}/data/zsre/structured_zeroshot-train-new_annotated_final.jsonl\"", ",", "\n", "config", ")", "\n", "val_set", "=", "Seq2SeqAugmentedKILT", "(", "tokenizer", ",", "f\"{base_dir}/data/zsre/structured_zeroshot-dev-new_annotated_final.jsonl\"", ",", "\n", "config", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"Unrecognized task {config.task}\"", ")", "\n", "\n", "", "alg_module", "=", "importlib", ".", "import_module", "(", "f\"algs.{config.alg}\"", ")", "\n", "LOG", ".", "info", "(", "f\"Loading class {config.alg.upper()} from module {alg_module}\"", ")", "\n", "AlgClass", "=", "getattr", "(", "alg_module", ",", "config", ".", "alg", ".", "upper", "(", ")", ")", "\n", "alg", "=", "AlgClass", "(", "model", ",", "config", ",", "lambda", ":", "copy", ".", "deepcopy", "(", "model", ")", ")", "\n", "\n", "if", "config", ".", "alg", "==", "\"ft\"", "and", "config", ".", "ft", ".", "locality", ".", "enabled", ":", "\n", "        ", "if", "config", ".", "ft", ".", "locality", ".", "oracle", ":", "\n", "            ", "alg", ".", "loc_sampler", "=", "train_set", ".", "edit_generator", "(", "config", ".", "ft", ".", "locality", ".", "batch_size", "+", "1", ")", "\n", "", "else", ":", "\n", "            ", "state", "=", "np", ".", "random", ".", "get_state", "(", ")", "\n", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "loc_batch", "=", "next", "(", "train_set", ".", "edit_generator", "(", "config", ".", "ft", ".", "locality", ".", "batch_size", "+", "1", ")", ")", "[", "\"loc\"", "]", "\n", "np", ".", "random", ".", "set_state", "(", "state", ")", "\n", "alg", ".", "loc_ids", "=", "loc_batch", "[", "\"input_ids\"", "]", "\n", "alg", ".", "loc_masks", "=", "loc_batch", "[", "\"attention_mask\"", "]", "\n", "\n", "", "", "trainer", "=", "EditTrainer", "(", "alg", ",", "config", ",", "train_set", ",", "val_set", ")", "\n", "trainer", ".", "run", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EarlyStopper.__init__": [[151, 158], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "patience", ":", "int", ",", "key", ":", "str", ")", ":", "\n", "        ", "self", ".", "best_value", "=", "1e9", "\n", "self", ".", "best_iter", "=", "0", "\n", "self", ".", "current_iter", "=", "0", "\n", "self", ".", "key", "=", "key", "\n", "self", ".", "patience", "=", "patience", "\n", "self", ".", "_stop", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EarlyStopper.update": [[159, 169], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "idx", ",", "stats", ")", ":", "\n", "        ", "assert", "self", ".", "key", "in", "stats", ",", "f\"'{self.key}' not in stats dict\"", "\n", "value", "=", "stats", "[", "self", ".", "key", "]", "\n", "new_best", "=", "value", "<", "self", ".", "best_value", "\n", "if", "new_best", ":", "\n", "            ", "self", ".", "best_value", "=", "value", "\n", "self", ".", "best_iter", "=", "idx", "\n", "\n", "", "self", ".", "current_iter", "=", "idx", "\n", "return", "new_best", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EarlyStopper.should_stop": [[170, 173], ["None"], "methods", ["None"], ["", "def", "should_stop", "(", "self", ")", ":", "\n", "        ", "self", ".", "_stop", "|=", "self", ".", "current_iter", "-", "self", ".", "best_iter", ">=", "self", ".", "patience", "\n", "return", "self", ".", "_stop", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.__init__": [[176, 183], ["utils.RunningStatAverager.reset"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.reset"], ["    ", "def", "__init__", "(", "self", ",", "suffix", "=", "\"\"", ",", "exclude", "=", "[", "\"grad/\"", "]", ",", "compute_ppl", ":", "bool", "=", "True", ")", ":", "\n", "        ", "self", ".", "underlying", "=", "None", "\n", "self", ".", "suffix", "=", "suffix", "\n", "self", ".", "exclude", "=", "exclude", "\n", "self", ".", "compute_ppl", "=", "compute_ppl", "\n", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.add": [[184, 191], ["d.items", "any", "len", "utils.RunningStatAverager.underlying[].append", "utils.RunningStatAverager.underlying[].append", "k.startswith"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "d", ":", "dict", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "any", "(", "[", "k", ".", "startswith", "(", "prefix", ")", "for", "prefix", "in", "self", ".", "exclude", "]", ")", ":", "\n", "                ", "if", "len", "(", "self", ".", "suffix", ")", ":", "\n", "                    ", "self", ".", "underlying", "[", "f\"{k}_{self.suffix}\"", "]", ".", "append", "(", "v", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "underlying", "[", "k", "]", ".", "append", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.average": [[192, 207], ["utils.RunningStatAverager.underlying.items", "k.startswith", "sum", "v.item", "average.items", "sum", "len", "len", "k.split", "sum", "isinstance", "k.split", "zip"], "methods", ["None"], ["", "", "", "", "def", "average", "(", "self", ")", ":", "\n", "        ", "average", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "self", ".", "underlying", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "k", ".", "startswith", "(", "\"nll/\"", ")", ":", "\n", "                ", "average", "[", "k", "]", "=", "sum", "(", "v", ")", "/", "len", "(", "v", ")", "\n", "", "else", ":", "\n", "                ", "assert", "len", "(", "k", ".", "split", "(", "\"/\"", ")", ")", "==", "2", ",", "f\"Invalid key {k}\"", "\n", "name", "=", "k", ".", "split", "(", "\"/\"", ")", "[", "1", "]", "\n", "token_counts", "=", "self", ".", "underlying", "[", "f\"n_tokens/{name}\"", "]", "\n", "total_nll", "=", "sum", "(", "[", "nll", "*", "c", "for", "nll", ",", "c", "in", "zip", "(", "v", ",", "token_counts", ")", "]", ")", "\n", "average", "[", "k", "]", "=", "total_nll", "/", "sum", "(", "token_counts", ")", "\n", "if", "self", ".", "compute_ppl", ":", "\n", "                    ", "average", "[", "f\"perplexity/{name}\"", "]", "=", "math", ".", "e", "**", "average", "[", "k", "]", "\n", "\n", "", "", "", "return", "{", "k", ":", "v", "if", "not", "isinstance", "(", "v", ",", "torch", ".", "Tensor", ")", "else", "v", ".", "item", "(", ")", "for", "k", ",", "v", "in", "average", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.RunningStatAverager.reset": [[208, 210], ["collections.defaultdict"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "underlying", "=", "defaultdict", "(", "list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EditBatchSampler.__init__": [[213, 220], ["numpy.random.default_rng", "utils.EditBatchSampler._init"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EditBatchSampler._init"], ["    ", "def", "__init__", "(", "self", ",", "n", ",", "n_edits", "=", "1", ",", "memorize_mode", "=", "False", ",", "loc_disjoint", "=", "True", ",", "seed", "=", "0", ")", ":", "\n", "        ", "self", ".", "memorize_mode", "=", "memorize_mode", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "n_edits", "=", "n_edits", "\n", "self", ".", "loc_disjoint", "=", "loc_disjoint", "\n", "self", ".", "rng", "=", "np", ".", "random", ".", "default_rng", "(", "seed", ")", "\n", "self", ".", "_init", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EditBatchSampler._init": [[221, 224], ["utils.EditBatchSampler.rng.permutation"], "methods", ["None"], ["", "def", "_init", "(", "self", ")", ":", "\n", "        ", "self", ".", "perm", "=", "self", ".", "rng", ".", "permutation", "(", "self", ".", "n", ")", "\n", "self", ".", "edit_position", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EditBatchSampler.sample": [[225, 245], ["utils.EditBatchSampler.rng.choice", "utils.EditBatchSampler._init", "edit_idxs.tolist", "utils.EditBatchSampler.tolist", "list", "list", "len", "utils.EditBatchSampler.rng.choice", "range", "range", "numpy.intersect1d"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EditBatchSampler._init"], ["", "def", "sample", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "assert", "(", "\n", "batch_size", ">", "self", ".", "n_edits", "\n", ")", ",", "\"Batch size is interpreted such that batch_size = n_edits + n_loc\"", "\n", "\n", "if", "self", ".", "memorize_mode", ":", "\n", "            ", "return", "list", "(", "range", "(", "self", ".", "n_edits", ")", ")", ",", "list", "(", "range", "(", "batch_size", "-", "self", ".", "n_edits", ")", ")", "\n", "\n", "", "if", "self", ".", "edit_position", ">=", "self", ".", "n", ":", "\n", "            ", "self", ".", "_init", "(", ")", "\n", "\n", "", "edit_idxs", "=", "self", ".", "perm", "[", "self", ".", "edit_position", ":", "self", ".", "edit_position", "+", "self", ".", "n_edits", "]", "\n", "self", ".", "edit_position", "+=", "self", ".", "n_edits", "\n", "\n", "loc_idxs", "=", "self", ".", "rng", ".", "choice", "(", "self", ".", "n", ",", "batch_size", "-", "self", ".", "n_edits", ")", "\n", "if", "self", ".", "loc_disjoint", ":", "\n", "            ", "while", "len", "(", "np", ".", "intersect1d", "(", "edit_idxs", ",", "loc_idxs", ")", ")", ">", "0", ":", "\n", "                ", "loc_idxs", "=", "self", ".", "rng", ".", "choice", "(", "self", ".", "n", ",", "batch_size", "-", "self", ".", "n_edits", ")", "\n", "\n", "", "", "return", "edit_idxs", ".", "tolist", "(", ")", ",", "loc_idxs", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._inner_params": [[17, 20], ["dict"], "function", ["None"], ["def", "_inner_params", "(", "named_parameters", ",", "inner_names", ")", ":", "\n", "    ", "param_dict", "=", "dict", "(", "named_parameters", ")", "\n", "return", "[", "(", "n", ",", "param_dict", "[", "n", "]", ")", "for", "n", "in", "inner_names", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.shift_targets": [[22, 24], ["config.model.name.lower"], "function", ["None"], ["", "def", "shift_targets", "(", "config", ")", ":", "\n", "    ", "return", "\"t5\"", "not", "in", "config", ".", "model", ".", "name", ".", "lower", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.scr": [[26, 36], ["os.path.exists", "os.path.exists", "os.makedirs", "getpass.getuser", "getpass.getuser"], "function", ["None"], ["", "def", "scr", "(", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "\"/scr-ssd\"", ")", ":", "\n", "        ", "scr_dir", "=", "\"/scr-ssd/\"", "+", "getpass", ".", "getuser", "(", ")", "\n", "", "else", ":", "\n", "        ", "scr_dir", "=", "\"/scr/\"", "+", "getpass", ".", "getuser", "(", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "scr_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "scr_dir", ")", "\n", "\n", "", "return", "scr_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.uuid": [[38, 43], ["hasattr", "int", "struct.unpack", "os.urandom"], "function", ["None"], ["", "def", "uuid", "(", "digits", "=", "4", ")", ":", "\n", "    ", "if", "not", "hasattr", "(", "uuid", ",", "\"uuid_value\"", ")", ":", "\n", "        ", "uuid", ".", "uuid_value", "=", "struct", ".", "unpack", "(", "'I'", ",", "os", ".", "urandom", "(", "4", ")", ")", "[", "0", "]", "%", "int", "(", "10", "**", "digits", ")", "\n", "\n", "", "return", "uuid", ".", "uuid_value", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.formatted_timestamp": [[45, 49], ["datetime.datetime.now.strftime", "datetime.datetime.now"], "function", ["None"], ["", "def", "formatted_timestamp", "(", "time", "=", "None", ")", ":", "\n", "    ", "if", "time", "is", "None", ":", "\n", "        ", "time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "", "return", "time", ".", "strftime", "(", "\"%d/%m/%Y-%H:%M:%S/%f\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.time_delta_seconds": [[51, 62], ["datetime.datetime.strptime", "type", "datetime.datetime.strptime", "datetime.datetime.now", "type"], "function", ["None"], ["", "def", "time_delta_seconds", "(", "start", ",", "finish", "=", "None", ")", ":", "\n", "    ", "assert", "type", "(", "start", ")", "==", "str", "\n", "\n", "t1", "=", "datetime", ".", "datetime", ".", "strptime", "(", "start", ",", "\"%d/%m/%Y-%H:%M:%S/%f\"", ")", "\n", "if", "finish", "is", "not", "None", ":", "\n", "        ", "assert", "type", "(", "finish", ")", "==", "str", "\n", "t2", "=", "datetime", ".", "datetime", ".", "strptime", "(", "finish", ",", "\"%d/%m/%Y-%H:%M:%S/%f\"", ")", "\n", "", "else", ":", "\n", "        ", "t2", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "\n", "", "return", "(", "t2", "-", "t1", ")", ".", "total_seconds", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.dict_to": [[64, 75], ["d.items", "isinstance", "v.to", "isinstance", "utils.dict_to"], "function", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.dict_to"], ["", "def", "dict_to", "(", "d", ",", "device", ")", ":", "\n", "    ", "new_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "v", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "new_dict", "[", "k", "]", "=", "v", ".", "to", "(", "device", ")", "\n", "", "elif", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "            ", "new_dict", "[", "k", "]", "=", "dict_to", "(", "v", ",", "device", ")", "\n", "", "else", ":", "\n", "            ", "new_dict", "[", "k", "]", "=", "v", "\n", "\n", "", "", "return", "new_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.safe_backward": [[77, 97], ["list", "torch.autograd.grad", "zip", "LOG.info", "g.isnan().any().item", "g.isinf().any().item", "g.isnan().any", "g.isinf().any", "g.isnan", "g.isinf"], "function", ["None"], ["", "def", "safe_backward", "(", "loss", ",", "parameters", ",", "accumulate", "=", "1", ",", "allow_unused", "=", "False", ")", ":", "\n", "    ", "parameters", "=", "list", "(", "parameters", ")", "# Capture the generator output", "\n", "grads", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "parameters", ",", "allow_unused", "=", "allow_unused", ")", "\n", "nan", ",", "inf", "=", "False", ",", "False", "\n", "for", "g", "in", "grads", ":", "\n", "        ", "if", "g", "is", "not", "None", ":", "\n", "            ", "nan", "|=", "g", ".", "isnan", "(", ")", ".", "any", "(", ")", ".", "item", "(", ")", "\n", "inf", "|=", "g", ".", "isinf", "(", ")", ".", "any", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "if", "not", "(", "nan", "or", "inf", ")", ":", "\n", "        ", "for", "p", ",", "g", "in", "zip", "(", "parameters", ",", "grads", ")", ":", "\n", "            ", "if", "g", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "p", ".", "grad", "is", "None", ":", "\n", "                ", "p", ".", "grad", "=", "g", "/", "accumulate", "\n", "", "else", ":", "\n", "                ", "p", ".", "grad", "+=", "g", "/", "accumulate", "\n", "", "", "", "else", ":", "\n", "        ", "LOG", ".", "info", "(", "f\"Skipping grad accumulation because inf: {inf} nan: {nan}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._logits": [[99, 101], ["hasattr"], "function", ["None"], ["", "", "def", "_logits", "(", "x", ")", ":", "\n", "    ", "return", "x", "if", "not", "hasattr", "(", "x", ",", "\"logits\"", ")", "else", "x", ".", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.load_archive": [[103, 134], ["LOG.info", "torch.load", "LOG.info", "os.path.exists", "hydra.utils.get_original_cwd", "os.path.join", "os.listdir", "os.path.join", "os.path.join", "os.listdir", "len", "os.listdir", "os.path.join", "len", "len", "matches.append", "m.endswith", "os.path.join"], "function", ["None"], ["", "def", "load_archive", "(", "path", ")", ":", "\n", "    ", "import", "torch", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "# We've not passed an explicit path, but a part of the filename", "\n", "        ", "wd", "=", "hydra", ".", "utils", ".", "get_original_cwd", "(", ")", "\n", "directories", "=", "[", "\"outputs\"", ",", "\"multirun\"", "]", "\n", "matches", "=", "[", "]", "\n", "for", "d", "in", "directories", ":", "\n", "            ", "search", "=", "os", ".", "path", ".", "join", "(", "wd", ",", "d", ")", "\n", "for", "run_dir", "in", "os", ".", "listdir", "(", "search", ")", ":", "\n", "                ", "if", "path", "in", "run_dir", ":", "\n", "                    ", "matches", ".", "append", "(", "os", ".", "path", ".", "join", "(", "search", ",", "run_dir", ")", ")", "\n", "", "", "", "assert", "len", "(", "matches", ")", "==", "1", ",", "f\">1 matches for search {path}; specify exact path\"", "\n", "\n", "full_run_dir", "=", "matches", "[", "0", "]", "\n", "if", "\"0\"", "in", "os", ".", "listdir", "(", "full_run_dir", ")", ":", "\n", "            ", "full_run_dir", "=", "os", ".", "path", ".", "join", "(", "full_run_dir", ",", "\"0\"", ")", "\n", "", "models_dir", "=", "os", ".", "path", ".", "join", "(", "full_run_dir", ",", "\"models\"", ")", "\n", "models", "=", "os", ".", "listdir", "(", "models_dir", ")", "\n", "non_bk", "=", "[", "m", "for", "m", "in", "models", "if", "not", "m", ".", "endswith", "(", "\".bk\"", ")", "]", "\n", "assert", "(", "\n", "len", "(", "non_bk", ")", "==", "1", "\n", ")", ",", "f\"Expected a single model in {models_dir}, got {len(non_bk)}\"", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "models_dir", ",", "non_bk", "[", "0", "]", ")", "\n", "\n", "", "LOG", ".", "info", "(", "f\"Loading checkpoint from {path}\"", ")", "\n", "archive", "=", "torch", ".", "load", "(", "path", ",", "map_location", "=", "\"cpu\"", ")", "\n", "LOG", ".", "info", "(", "\"Load complete.\"", ")", "\n", "\n", "return", "archive", ",", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.flatten_dict": [[136, 148], ["list", "len", "d.items", "list.pop", "isinstance", "list.extend", "output.keys", "v.items"], "function", ["None"], ["", "def", "flatten_dict", "(", "d", ")", ":", "\n", "    ", "to_process", "=", "list", "(", "d", ".", "items", "(", ")", ")", "\n", "output", "=", "{", "}", "\n", "while", "len", "(", "to_process", ")", ":", "\n", "        ", "k", ",", "v", "=", "to_process", ".", "pop", "(", ")", "\n", "if", "isinstance", "(", "v", ",", "typing", ".", "MutableMapping", ")", ":", "\n", "            ", "to_process", ".", "extend", "(", "[", "(", "f\"{k}.{k_}\"", ",", "v_", ")", "for", "(", "k_", ",", "v_", ")", "in", "v", ".", "items", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "assert", "k", "not", "in", "output", ".", "keys", "(", ")", ",", "\"Somehow ended up with duplicate keys\"", "\n", "output", "[", "k", "]", "=", "v", "\n", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.parent_module": [[247, 259], ["pname.split", "hasattr", "hasattr", "getattr", "comp.isdigit", "RuntimeError", "int"], "function", ["None"], ["", "", "def", "parent_module", "(", "model", ",", "pname", ")", ":", "\n", "    ", "comps", "=", "pname", ".", "split", "(", "'.'", ")", "\n", "parent", "=", "model", "\n", "for", "comp", "in", "comps", "[", ":", "-", "1", "]", ":", "\n", "        ", "if", "hasattr", "(", "parent", ",", "comp", ")", ":", "\n", "            ", "parent", "=", "getattr", "(", "parent", ",", "comp", ")", "\n", "", "elif", "comp", ".", "isdigit", "(", ")", ":", "\n", "            ", "parent", "=", "parent", "[", "int", "(", "comp", ")", "]", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"Couldn't find child module {comp}\"", ")", "\n", "", "", "assert", "hasattr", "(", "parent", ",", "comps", "[", "-", "1", "]", ")", "\n", "return", "parent", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.kl_loc_loss": [[5, 27], ["pre.to.to", "post.to.to", "pre.to.view", "post.to.view", "pre.to.dim", "mask.view", "mask.view.sum", "pre.view.softmax", "pre.to.sigmoid", "pre.view.log_softmax", "post.view.log_softmax", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid"], "function", ["None"], ["def", "kl_loc_loss", "(", "pre", ",", "post", ",", "mask", "=", "None", ")", ":", "\n", "    ", "pre", "=", "pre", ".", "to", "(", "torch", ".", "float32", ")", "\n", "post", "=", "post", ".", "to", "(", "torch", ".", "float32", ")", "\n", "\n", "sequence", "=", "pre", ".", "dim", "(", ")", "==", "3", "\n", "pre_", "=", "pre", ".", "view", "(", "-", "1", ",", "pre", ".", "shape", "[", "-", "1", "]", ")", "\n", "post_", "=", "post", ".", "view", "(", "pre_", ".", "shape", ")", "\n", "assert", "pre_", ".", "shape", "[", "0", "]", "==", "post_", ".", "shape", "[", "0", "]", "\n", "\n", "if", "not", "sequence", ":", "\n", "        ", "if", "pre_", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "# No masking needed for binary classification", "\n", "            ", "return", "(", "pre", ".", "sigmoid", "(", ")", "*", "(", "F", ".", "logsigmoid", "(", "pre", ")", "-", "F", ".", "logsigmoid", "(", "post", ")", ")", ")", ".", "mean", "(", ")", "+", "(", "\n", "(", "-", "pre", ")", ".", "sigmoid", "(", ")", "*", "(", "F", ".", "logsigmoid", "(", "-", "pre", ")", "-", "F", ".", "logsigmoid", "(", "-", "post", ")", ")", "\n", ")", ".", "mean", "(", ")", "\n", "", "", "else", ":", "# We have sequences of predictions; masking needed", "\n", "        ", "if", "pre_", ".", "shape", "[", "-", "1", "]", ">", "1", ":", "\n", "            ", "assert", "mask", "is", "not", "None", "\n", "mask_", "=", "mask", ".", "view", "(", "pre_", ".", "shape", "[", "0", "]", ")", "\n", "kl", "=", "(", "pre_", ".", "softmax", "(", "-", "1", ")", "*", "(", "pre_", ".", "log_softmax", "(", "-", "1", ")", "-", "post_", ".", "log_softmax", "(", "-", "1", ")", ")", ")", ".", "sum", "(", "-", "1", ")", "\n", "return", "(", "kl", "*", "mask_", ")", ".", "sum", "(", ")", "/", "mask_", ".", "sum", "(", ")", "\n", "\n", "", "", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.binary_log_probs": [[29, 41], ["torch.ones_like", "torch.ones_like", "torch.logsigmoid", "F.logsigmoid.mean", "F.logsigmoid.exp().mean", "F.logsigmoid.mean", "F.logsigmoid.exp", "F.logsigmoid.exp"], "function", ["None"], ["", "def", "binary_log_probs", "(", "pred", ",", "targ", ")", ":", "\n", "    ", "neg_mask", "=", "torch", ".", "ones_like", "(", "pred", ")", "\n", "neg_mask", "[", "targ", "==", "0", "]", "*=", "-", "1", "\n", "pred", "=", "pred", "*", "neg_mask", "\n", "log_probs", "=", "F", ".", "logsigmoid", "(", "pred", ")", "\n", "acc", "=", "(", "log_probs", ".", "exp", "(", ")", ">", "0.5", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "return", "{", "\n", "\"acc\"", ":", "acc", ",", "\n", "\"log_prob\"", ":", "log_probs", ".", "mean", "(", ")", ",", "\n", "\"prob\"", ":", "log_probs", ".", "exp", "(", ")", ".", "mean", "(", ")", ",", "\n", "\"nll\"", ":", "-", "log_probs", ".", "mean", "(", ")", ",", "\n", "\"n_tokens\"", ":", "log_probs", ".", "shape", "[", "0", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.multiclass_log_probs": [[44, 72], ["pred.clone.clone", "targ.clone.clone", "pred.clone.log_softmax().gather().squeeze", "pred.clone.argmax().masked_fill", "correct.float().mean", "mask.float().sum", "pred.clone.dim", "pred.clone.dim", "pred.clone.log_softmax().gather", "pred.clone.argmax", "correct.float", "mask.float", "targ.clone.unsqueeze", "pred.clone.log_softmax", "mask.float", "pred.log_softmax().gather().squeeze.exp", "mask.float"], "function", ["None"], ["", "def", "multiclass_log_probs", "(", "pred", ",", "targ", ",", "shift", "=", "True", ")", ":", "\n", "    ", "NULL_TOKEN", "=", "0", "# a placeholder used for masked target locations", "\n", "\n", "pred", "=", "pred", ".", "clone", "(", ")", "\n", "targ", "=", "targ", ".", "clone", "(", ")", "\n", "if", "shift", "and", "pred", ".", "dim", "(", ")", "==", "3", ":", "# Dealing with sequences", "\n", "        ", "pred", "=", "pred", "[", ":", ",", ":", "-", "1", "]", "# Remove last prediction in sequence", "\n", "targ", "=", "targ", "[", ":", ",", "1", ":", "]", "# Shift to align predictions and targets", "\n", "\n", "", "mask", "=", "targ", "!=", "-", "100", "\n", "targ", "[", "~", "mask", "]", "=", "NULL_TOKEN", "# Can be any valid token, since we'll throw them out", "\n", "unmasked_log_probs", "=", "pred", ".", "log_softmax", "(", "-", "1", ")", ".", "gather", "(", "-", "1", ",", "targ", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "pred_ids", "=", "pred", ".", "argmax", "(", "-", "1", ")", ".", "masked_fill", "(", "~", "mask", ",", "NULL_TOKEN", ")", "\n", "correct", "=", "pred_ids", "==", "targ", "\n", "if", "pred", ".", "dim", "(", ")", "==", "3", ":", "\n", "        ", "correct", "=", "(", "pred_ids", "==", "targ", ")", ".", "all", "(", "-", "1", ")", "# We want to get the whole sequence right", "\n", "", "acc", "=", "correct", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "\n", "n_tokens", "=", "mask", ".", "float", "(", ")", ".", "sum", "(", ")", "\n", "log_prob", "=", "(", "unmasked_log_probs", "*", "mask", ".", "float", "(", ")", ")", ".", "sum", "(", ")", "/", "n_tokens", "\n", "prob", "=", "(", "unmasked_log_probs", ".", "exp", "(", ")", "*", "mask", ".", "float", "(", ")", ")", ".", "sum", "(", ")", "/", "n_tokens", "\n", "return", "{", "\n", "\"acc\"", ":", "acc", ",", "\n", "\"log_prob\"", ":", "log_prob", ",", "\n", "\"prob\"", ":", "prob", ",", "\n", "\"n_tokens\"", ":", "n_tokens", ",", "\n", "\"nll\"", ":", "-", "log_prob", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.masked_log_probs": [[75, 85], ["pred.to.to", "RuntimeError", "losses.binary_log_probs", "losses.multiclass_log_probs", "pred.to.dim", "pred.to.dim"], "function", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.binary_log_probs", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.losses.multiclass_log_probs"], ["", "def", "masked_log_probs", "(", "pred", ",", "targ", ",", "shift", "=", "True", ")", ":", "\n", "    ", "pred", "=", "pred", ".", "to", "(", "torch", ".", "float32", ")", "\n", "\n", "if", "not", "(", "pred", ".", "dim", "(", ")", "==", "2", "or", "pred", ".", "dim", "(", ")", "==", "3", ")", ":", "\n", "        ", "raise", "RuntimeError", "(", "f\"Expected pred to have 2 or 3 dimensions, got {pred.shape}\"", ")", "\n", "\n", "", "if", "pred", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "\n", "        ", "return", "binary_log_probs", "(", "pred", ",", "targ", ")", "\n", "", "else", ":", "\n", "        ", "return", "multiclass_log_probs", "(", "pred", ",", "targ", ",", "shift", "=", "shift", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.EFK.__init__": [[30, 49], ["editable_model.EditableModel.__init__", "isinstance", "efk.OneShotLearner", "isinstance", "isinstance", "embedding.clone().to", "embedding.clone"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "config", ",", "model_constructor", ",", "editor", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "config", ",", "model_constructor", ")", "\n", "\n", "if", "editor", "is", "None", ":", "\n", "            ", "if", "isinstance", "(", "model", ",", "BertClassifier", ")", ":", "\n", "                ", "embedding", "=", "model", ".", "model", ".", "embeddings", ".", "word_embeddings", ".", "weight", ".", "data", "\n", "", "elif", "isinstance", "(", "model", ",", "BartForConditionalGeneration", ")", ":", "\n", "                ", "embedding", "=", "model", ".", "model", ".", "shared", ".", "weight", ".", "data", "\n", "", "elif", "isinstance", "(", "model", ",", "T5ForConditionalGeneration", ")", ":", "\n", "                ", "embedding", "=", "model", ".", "shared", ".", "weight", ".", "data", "\n", "", "else", ":", "\n", "                ", "embedding", "=", "model", ".", "transformer", ".", "wte", ".", "weight", ".", "data", "\n", "\n", "", "editor", "=", "OneShotLearner", "(", "model", ",", "vocab_dim", "=", "model", ".", "config", ".", "vocab_size", ",", "\n", "include_set", "=", "config", ".", "model", ".", "inner_params", ",", "\n", "embedding_dim", "=", "embedding", ".", "shape", "[", "-", "1", "]", ",", "\n", "embedding_init", "=", "embedding", ".", "clone", "(", ")", ".", "to", "(", "torch", ".", "float32", ")", ",", "\n", "max_scale", "=", "1", ")", "\n", "", "self", ".", "editor", "=", "editor", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.EFK.outer_parameters": [[50, 52], ["efk.EFK.editor.parameters"], "methods", ["None"], ["", "def", "outer_parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "editor", ".", "parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.EFK.state_dict": [[53, 60], ["super().state_dict", "efk.EFK.model.state_dict().keys", "efk.EFK.model.state_dict"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict"], ["", "def", "state_dict", "(", "self", ",", "destination", "=", "None", ",", "prefix", "=", "\"\"", ",", "keep_vars", "=", "False", ")", ":", "\n", "        ", "state_dict", "=", "super", "(", ")", ".", "state_dict", "(", "prefix", "=", "prefix", ",", "keep_vars", "=", "keep_vars", ")", "# Get default state dict", "\n", "model_keys", "=", "self", ".", "model", ".", "state_dict", "(", "prefix", "=", "prefix", ",", "keep_vars", "=", "keep_vars", ")", ".", "keys", "(", ")", "# Remove model params", "\n", "for", "k", "in", "model_keys", ":", "\n", "            ", "del", "state_dict", "[", "f\"model.{k}\"", "]", "\n", "", "state_dict", "[", "\"model_config\"", "]", "=", "self", ".", "model", ".", "config", "# Include model config", "\n", "return", "state_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.EFK.load_state_dict": [[61, 74], ["super().load_state_dict", "LOG.info", "LOG.info", "LOG.info", "len", "len", "k.startswith"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", ":", "bool", "=", "True", ")", ":", "\n", "        ", "config", "=", "state_dict", "[", "\"model_config\"", "]", "\n", "del", "state_dict", "[", "\"model_config\"", "]", "\n", "if", "config", "!=", "self", ".", "model", ".", "config", ":", "\n", "            ", "LOG", ".", "info", "(", "\"Loaded model config doesn't match current model config.\"", ")", "\n", "LOG", ".", "info", "(", "f\"Loaded: {config}\"", ")", "\n", "LOG", ".", "info", "(", "f\"Current: {self.model.config}\"", ")", "\n", "\n", "", "res", "=", "super", "(", ")", ".", "load_state_dict", "(", "state_dict", ",", "False", ")", "\n", "# We should only have missing keys for the model, and no unexpected keys", "\n", "assert", "len", "(", "[", "k", "for", "k", "in", "res", ".", "missing_keys", "if", "not", "k", ".", "startswith", "(", "\"model.\"", ")", "]", ")", "==", "0", ",", "\"Should only have missing keys for model.\"", "\n", "assert", "len", "(", "res", ".", "unexpected_keys", ")", "==", "0", ",", "\"Shouldn't have any unexpected keys\"", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.EFK.edit": [[75, 118], ["utils._logits", "set", "set", "torch.autograd.grad", "efk.EFK.editor", "higher.patch.monkeypatch.update_params", "efk.EFK.model", "efk.EFK.edit_loss_fn", "isinstance", "higher.patch.monkeypatch", "efk.EFK.model_constructor", "efk.EFK.load_state_dict", "efk.EFK", "g.to", "efk.EFK.edit.new_param"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._logits", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict"], ["", "def", "edit", "(", "self", ",", "batch", ",", "condition", ",", "detach_history", "=", "False", ")", ":", "\n", "        ", "outputs", "=", "_logits", "(", "self", ".", "model", "(", "**", "batch", ")", ")", "\n", "loss", "=", "self", ".", "edit_loss_fn", "(", "outputs", ",", "batch", "[", "\"labels\"", "]", ")", "[", "\"nll\"", "]", "\n", "\n", "names", "=", "set", "(", "[", "n", "for", "n", ",", "p", "in", "self", ".", "model", ".", "named_parameters", "(", ")", "]", ")", "\n", "pset", "=", "set", "(", "self", ".", "config", ".", "model", ".", "inner_params", ")", "\n", "for", "p", "in", "pset", ":", "\n", "            ", "assert", "p", "in", "names", ",", "f\"inner param {p} not in model\"", "\n", "\n", "", "grads", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "loss", ",", "\n", "[", "p", "for", "(", "n", ",", "p", ")", "in", "_inner_params", "(", "self", ".", "model", ".", "named_parameters", "(", ")", ",", "self", ".", "config", ".", "model", ".", "inner_params", ")", "]", "\n", ")", "\n", "\n", "params_dict", "=", "self", ".", "editor", "(", "\n", "condition", "[", "\"input_ids\"", "]", "if", "condition", "is", "not", "None", "else", "batch", "[", "\"input_ids\"", "]", ",", "\n", "condition", "[", "\"attention_mask\"", "]", "if", "condition", "is", "not", "None", "else", "batch", "[", "\"attention_mask\"", "]", ",", "\n", "{", "n", ":", "g", ".", "to", "(", "torch", ".", "float32", ")", "for", "(", "n", ",", "g", ")", "in", "zip", "(", "self", ".", "config", ".", "model", ".", "inner_params", ",", "grads", ")", "}", ",", "\n", ")", "\n", "\n", "edited_model", "=", "self", ".", "model", "\n", "if", "not", "isinstance", "(", "edited_model", ",", "higher", ".", "patch", ".", "_MonkeyPatchBase", ")", ":", "\n", "            ", "edited_model", "=", "make_functional", "(", "edited_model", ",", "in_place", "=", "True", ")", "\n", "\n", "", "def", "new_param", "(", "n", ",", "p", ")", ":", "\n", "            ", "if", "n", "not", "in", "params_dict", ":", "\n", "                ", "return", "p", "\n", "\n", "", "if", "p", ".", "shape", "[", "0", "]", "==", "params_dict", "[", "n", "]", ".", "shape", "[", "0", "]", ":", "\n", "                ", "return", "p", "+", "params_dict", "[", "n", "]", "\n", "", "else", ":", "\n", "                ", "return", "p", "+", "params_dict", "[", "n", "]", ".", "T", "\n", "\n", "", "", "edited_model", ".", "update_params", "(", "\n", "[", "new_param", "(", "n", ",", "p", ")", "for", "(", "n", ",", "p", ")", "in", "edited_model", ".", "named_parameters", "(", ")", "]", "\n", ")", "\n", "\n", "if", "detach_history", ":", "\n", "            ", "new_model", "=", "self", ".", "model_constructor", "(", ")", "\n", "new_model", ".", "load_state_dict", "(", "edited_model", ".", "state_dict", "(", ")", ")", "\n", "edited_model", "=", "new_model", "\n", "\n", "", "return", "EFK", "(", "edited_model", ",", "self", ".", "config", ",", "self", ".", "model_constructor", ",", "editor", "=", "self", ".", "editor", ")", ",", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.ConditionedParameter.__init__": [[121, 147], ["super().__init__", "len", "torch.nn.Sequential", "torch.nn.utils.weight_norm", "torch.nn.Tanh", "torch.nn.utils.weight_norm", "len", "torch.nn.Sequential", "RuntimeError", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.utils.weight_norm", "torch.nn.Tanh", "torch.nn.utils.weight_norm", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "parameter", ",", "condition_dim", "=", "1024", ",", "hidden_dim", "=", "128", ",", "max_scale", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "parameter_shape", "=", "parameter", ".", "shape", "\n", "\n", "if", "len", "(", "self", ".", "parameter_shape", ")", "==", "2", ":", "\n", "            ", "self", ".", "conditioners", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "torch", ".", "nn", ".", "Linear", "(", "condition_dim", ",", "hidden_dim", ")", ")", ",", "\n", "torch", ".", "nn", ".", "Tanh", "(", ")", ",", "\n", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "\n", "torch", ".", "nn", ".", "Linear", "(", "\n", "hidden_dim", ",", "2", "*", "(", "parameter", ".", "shape", "[", "0", "]", "+", "parameter", ".", "shape", "[", "1", "]", ")", "+", "1", "\n", ")", "\n", ")", ",", "\n", ")", "\n", "", "elif", "len", "(", "self", ".", "parameter_shape", ")", "==", "1", ":", "\n", "            ", "self", ".", "conditioners", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "torch", ".", "nn", ".", "Linear", "(", "condition_dim", ",", "hidden_dim", ")", ")", ",", "\n", "torch", ".", "nn", ".", "Tanh", "(", ")", ",", "\n", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "\n", "torch", ".", "nn", ".", "Linear", "(", "hidden_dim", ",", "2", "*", "parameter", ".", "shape", "[", "0", "]", "+", "1", ")", "\n", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", ")", "\n", "\n", "", "self", ".", "max_scale", "=", "max_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.ConditionedParameter.forward": [[148, 184], ["RuntimeError", "len", "efk.ConditionedParameter.conditioners().split", "len", "efk.ConditionedParameter.conditioners().split", "RuntimeError", "efk.ConditionedParameter.conditioners", "conditioner_rowa.softmax", "conditioner_rowb.softmax", "a.squeeze", "conditioner_norm.sigmoid().squeeze", "conditioner_norm.sigmoid().squeeze", "b.squeeze", "efk.ConditionedParameter.conditioners", "b.squeeze", "a.squeeze", "conditioner_norm.sigmoid", "a.squeeze", "conditioner_norm.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "grad", ")", ":", "\n", "        ", "if", "inputs", ".", "shape", "[", "0", "]", ">", "1", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Can only condition on batches of size 1\"", ")", "\n", "\n", "", "if", "len", "(", "self", ".", "parameter_shape", ")", "==", "2", ":", "\n", "            ", "(", "\n", "conditioner_cola", ",", "\n", "conditioner_rowa", ",", "\n", "conditioner_colb", ",", "\n", "conditioner_rowb", ",", "\n", "conditioner_norm", ",", "\n", ")", "=", "self", ".", "conditioners", "(", "inputs", ")", ".", "split", "(", "\n", "[", "\n", "self", ".", "parameter_shape", "[", "1", "]", ",", "\n", "self", ".", "parameter_shape", "[", "0", "]", ",", "\n", "self", ".", "parameter_shape", "[", "1", "]", ",", "\n", "self", ".", "parameter_shape", "[", "0", "]", ",", "\n", "1", ",", "\n", "]", ",", "\n", "dim", "=", "-", "1", ",", "\n", ")", "\n", "\n", "a", "=", "conditioner_rowa", ".", "softmax", "(", "-", "1", ")", ".", "T", "@", "conditioner_cola", "\n", "b", "=", "conditioner_rowb", ".", "softmax", "(", "-", "1", ")", ".", "T", "@", "conditioner_colb", "\n", "\n", "", "elif", "len", "(", "self", ".", "parameter_shape", ")", "==", "1", ":", "\n", "            ", "a", ",", "b", ",", "conditioner_norm", "=", "self", ".", "conditioners", "(", "inputs", ")", ".", "split", "(", "\n", "[", "self", ".", "parameter_shape", "[", "0", "]", ",", "self", ".", "parameter_shape", "[", "0", "]", ",", "1", "]", ",", "dim", "=", "-", "1", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", ")", "\n", "\n", "", "if", "a", ".", "squeeze", "(", ")", ".", "shape", "[", "0", "]", "!=", "grad", ".", "shape", "[", "0", "]", ":", "\n", "            ", "return", "self", ".", "max_scale", "*", "conditioner_norm", ".", "sigmoid", "(", ")", ".", "squeeze", "(", ")", "*", "(", "grad", "*", "a", ".", "squeeze", "(", ")", ".", "T", "+", "b", ".", "squeeze", "(", ")", ".", "T", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "max_scale", "*", "conditioner_norm", ".", "sigmoid", "(", ")", ".", "squeeze", "(", ")", "*", "(", "grad", "*", "a", ".", "squeeze", "(", ")", "+", "b", ".", "squeeze", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.LSTMConditioner.__init__": [[187, 216], ["super().__init__", "torch.nn.Embedding", "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper", "allennlp.modules.feedforward.FeedForward", "torch.nn.LSTM", "torch.nn.Tanh"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "vocab_dim", "=", "30522", ",", "\n", "embedding_dim", "=", "768", ",", "\n", "hidden_dim", "=", "256", ",", "\n", "output_dim", "=", "1024", ",", "\n", "embedding_init", "=", "None", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embedding", "=", "torch", ".", "nn", ".", "Embedding", "(", "\n", "num_embeddings", "=", "vocab_dim", ",", "\n", "embedding_dim", "=", "embedding_dim", ",", "\n", "padding_idx", "=", "0", ",", "\n", "_weight", "=", "embedding_init", ",", "\n", ")", "\n", "self", ".", "lstm", "=", "PytorchSeq2VecWrapper", "(", "\n", "torch", ".", "nn", ".", "LSTM", "(", "\n", "input_size", "=", "embedding_dim", ",", "\n", "hidden_size", "=", "hidden_dim", ",", "\n", "num_layers", "=", "1", ",", "\n", "bidirectional", "=", "True", ",", "\n", "batch_first", "=", "True", ",", "\n", ")", "\n", ")", "\n", "self", ".", "linear", "=", "FeedForward", "(", "\n", "input_dim", "=", "hidden_dim", "*", "2", ",", "\n", "num_layers", "=", "1", ",", "\n", "hidden_dims", "=", "[", "output_dim", "]", ",", "\n", "activations", "=", "[", "torch", ".", "nn", ".", "Tanh", "(", ")", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.LSTMConditioner.forward": [[218, 220], ["efk.LSTMConditioner.linear", "efk.LSTMConditioner.lstm", "efk.LSTMConditioner.embedding"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "masks", ")", ":", "\n", "        ", "return", "self", ".", "linear", "(", "self", ".", "lstm", "(", "self", ".", "embedding", "(", "inputs", ")", ",", "masks", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.OneShotLearner.__init__": [[223, 261], ["super().__init__", "torch.nn.ModuleDict", "efk.LSTMConditioner", "model.named_parameters", "efk.ConditionedParameter", "model.named_parameters"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "model", ",", "\n", "vocab_dim", ",", "\n", "embedding_dim", "=", "768", ",", "\n", "hidden_dim", "=", "512", ",", "\n", "condition_dim", "=", "768", ",", "\n", "include_set", "=", "{", "}", ",", "\n", "max_scale", "=", "1e-3", ",", "\n", "embedding_init", "=", "None", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "param2conditioner_map", "=", "{", "\n", "n", ":", "\"{}_conditioner\"", ".", "format", "(", "n", ")", ".", "replace", "(", "\".\"", ",", "\"_\"", ")", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "\n", "if", "n", "in", "include_set", "\n", "}", "\n", "\n", "self", ".", "conditioners", "=", "torch", ".", "nn", ".", "ModuleDict", "(", "\n", "{", "\n", "self", ".", "param2conditioner_map", "[", "n", "]", ":", "ConditionedParameter", "(", "\n", "p", ",", "\n", "condition_dim", ",", "\n", "hidden_dim", ",", "\n", "max_scale", "=", "max_scale", ",", "\n", ")", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "\n", "if", "n", "in", "include_set", "\n", "}", "\n", ")", "\n", "\n", "self", ".", "condition", "=", "LSTMConditioner", "(", "\n", "vocab_dim", ",", "\n", "embedding_dim", ",", "\n", "hidden_dim", ",", "\n", "condition_dim", ",", "\n", "embedding_init", "=", "embedding_init", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.efk.OneShotLearner.forward": [[263, 271], ["efk.OneShotLearner.condition", "efk.OneShotLearner.param2conditioner_map.items"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "masks", ",", "grads", "=", "None", ")", ":", "\n", "        ", "condition", "=", "self", ".", "condition", "(", "inputs", ",", "masks", ")", "\n", "return", "{", "\n", "p", ":", "self", ".", "conditioners", "[", "self", ".", "param2conditioner_map", "[", "p", "]", "]", "(", "\n", "condition", ",", "\n", "grad", "=", "grads", "[", "p", "]", "if", "grads", "else", "None", ",", "\n", ")", "\n", "for", "p", ",", "c", "in", "self", ".", "param2conditioner_map", ".", "items", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.ft.FT.__init__": [[17, 27], ["editable_model.EditableModel.__init__"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["def", "__init__", "(", "self", ",", "model", ",", "config", ",", "model_constructor", ",", "edit_loss_fn", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "config", ",", "model_constructor", ")", "\n", "\n", "if", "edit_loss_fn", "is", "not", "None", ":", "\n", "            ", "self", ".", "edit_loss_fn", "=", "edit_loss_fn", "\n", "\n", "", "self", ".", "locality_loss_fn", "=", "kl_loc_loss", "\n", "self", ".", "loc_ids", "=", "None", "\n", "self", ".", "loc_masks", "=", "None", "\n", "self", ".", "loc_sampler", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.ft.FT._edit_loss": [[28, 48], ["utils._logits", "ft.FT.edit_loss_fn", "model", "utils._logits", "loc_batch.get", "ft.FT.locality_loss_fn", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "utils._logits", "model", "float", "next", "model"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._logits", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._logits", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._logits"], ["", "def", "_edit_loss", "(", "self", ",", "model", ",", "p0", ",", "p_edited", ",", "edit_batch", ")", ":", "\n", "        ", "output", "=", "_logits", "(", "model", "(", "**", "edit_batch", ",", "params", "=", "p_edited", ")", ")", "\n", "loss_dict", "=", "self", ".", "edit_loss_fn", "(", "output", ",", "edit_batch", "[", "\"labels\"", "]", ")", "\n", "l_edit", ",", "acc", "=", "loss_dict", "[", "\"nll\"", "]", ",", "loss_dict", "[", "\"acc\"", "]", "\n", "if", "self", ".", "config", ".", "ft", ".", "locality", ".", "enabled", ":", "\n", "            ", "if", "self", ".", "config", ".", "ft", ".", "locality", ".", "oracle", ":", "\n", "                ", "loc_batch", "=", "next", "(", "self", ".", "loc_sampler", ")", "[", "\"loc\"", "]", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "original_base_logits", "=", "_logits", "(", "model", "(", "**", "loc_batch", ",", "params", "=", "p0", ")", ")", "\n", "", "edited_base_logits", "=", "_logits", "(", "model", "(", "**", "loc_batch", ",", "params", "=", "p_edited", ")", ")", "\n", "kl_mask", "=", "loc_batch", ".", "get", "(", "\"decoder_attention_mask\"", ",", "loc_batch", "[", "\"attention_mask\"", "]", ")", "\n", "l_loc", "=", "self", ".", "locality_loss_fn", "(", "original_base_logits", ",", "edited_base_logits", ",", "mask", "=", "kl_mask", ")", "\n", "loss", "=", "l_loc", "+", "self", ".", "config", ".", "ft", ".", "locality", ".", "cedit", "*", "l_edit", "\n", "", "else", ":", "\n", "            ", "l_loc", "=", "torch", ".", "tensor", "(", "float", "(", "'nan'", ")", ")", "\n", "loss", "=", "l_edit", "\n", "", "return", "loss", ",", "l_edit", ",", "l_loc", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.ft.FT.accuracy": [[49, 59], ["output.argmax", "correct.float", "to_predict.float", "labels.bool"], "methods", ["None"], ["", "def", "accuracy", "(", "self", ",", "output", ",", "labels", ")", ":", "\n", "        ", "if", "output", ".", "shape", "[", "-", "1", "]", "!=", "1", ":", "\n", "            ", "shifted_output", "=", "output", ".", "argmax", "(", "-", "1", ")", "[", ":", ",", ":", "-", "1", "]", "\n", "shifted_labels", "=", "labels", "[", ":", ",", "1", ":", "]", "\n", "to_predict", "=", "(", "shifted_labels", "!=", "-", "100", ")", ".", "sum", "(", ")", "\n", "correct", "=", "(", "shifted_output", "==", "shifted_labels", ")", ".", "sum", "(", ")", "\n", "acc", "=", "correct", ".", "float", "(", ")", "/", "to_predict", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "            ", "acc", "=", "(", "(", "output", ">", "0", ")", "==", "labels", ".", "bool", "(", ")", ")", ".", "sum", "(", ")", ".", "float", "(", ")", "\n", "", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.ft.FT._edit_status": [[60, 68], ["res_p.view().norm().item", "res_p.view().norm", "acc.item", "l_loc.item", "res_p.view", "l_edit.item", "loss.item"], "methods", ["None"], ["", "def", "_edit_status", "(", "self", ",", "step", ",", "loss", ",", "l_edit", ",", "l_loc", ",", "acc", ",", "res_p", ")", ":", "\n", "        ", "return", "(", "\n", "f\"step: {step}\"", ".", "ljust", "(", "14", ")", "+", "\n", "f\"loss: {loss.item():.5f}\"", ".", "ljust", "(", "18", ")", "+", "\n", "f\"l_edit: {l_edit.item():.5f}\"", ".", "ljust", "(", "18", ")", "+", "\n", "f\"l_loc: {l_loc.item():.5f}\"", ".", "ljust", "(", "18", ")", "+", "\n", "f\"acc: {acc.item():.2f}\"", ".", "ljust", "(", "14", ")", "+", "\n", "f\"norm: {res_p.view(-1).norm().item():.5f}\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.ft.FT.edit": [[70, 122], ["ft.FT.model.eval", "list", "utils._inner_params", "getattr", "getattr.", "time.time", "range", "higher.patch.monkeypatch.train", "higher.patch.monkeypatch.named_parameters", "isinstance", "higher.patch.monkeypatch", "higher.patch.monkeypatch.named_parameters", "opt_params.extend", "len", "len", "ft.FT._edit_loss", "zip", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "getattr.step", "getattr.zero_grad", "ft.FT.model_constructor", "ft.FT.load_state_dict", "ft.FT", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "print", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "higher.patch.monkeypatch.state_dict", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Parameter", "torch.Parameter", "packed_residuals.items", "list", "ft.FT._edit_status", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "time.time", "len", "p.detach", "residuals.values"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._inner_params", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.ft.FT._edit_loss", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.ft.FT._edit_status"], ["", "def", "edit", "(", "self", ",", "batch", ",", "condition", "=", "None", ",", "detach_history", "=", "False", ")", ":", "\n", "        ", "edit_model", "=", "self", ".", "model", ".", "eval", "(", ")", "\n", "p0", "=", "list", "(", "edit_model", ".", "named_parameters", "(", ")", ")", "\n", "\n", "if", "not", "isinstance", "(", "edit_model", ",", "higher", ".", "patch", ".", "_MonkeyPatchBase", ")", ":", "\n", "            ", "edit_model", "=", "make_functional", "(", "self", ".", "model", ",", "track_higher_grads", "=", "False", ",", "in_place", "=", "True", ")", "\n", "\n", "", "packed_residuals", "=", "{", "}", "\n", "opt_params", "=", "[", "]", "\n", "for", "n", ",", "p", "in", "_inner_params", "(", "edit_model", ".", "named_parameters", "(", ")", ",", "self", ".", "config", ".", "model", ".", "inner_params", ")", ":", "\n", "            ", "if", "self", ".", "config", ".", "ft", ".", "rank", "is", "not", "None", ":", "\n", "                ", "u", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "p", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "ft", ".", "rank", ",", "device", "=", "p", ".", "device", ")", "*", "self", ".", "config", ".", "ft", ".", "init_std", ")", "\n", "v", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "self", ".", "config", ".", "ft", ".", "rank", ",", "p", ".", "shape", "[", "1", "]", ",", "device", "=", "p", ".", "device", ")", ")", "\n", "res", "=", "[", "u", ",", "v", "]", "\n", "", "else", ":", "\n", "                ", "res", "=", "[", "nn", ".", "Parameter", "(", "torch", ".", "zeros_like", "(", "p", ",", "device", "=", "p", ".", "device", ")", ")", "]", "\n", "\n", "", "packed_residuals", "[", "n", "]", "=", "res", "\n", "opt_params", ".", "extend", "(", "res", ")", "\n", "\n", "", "assert", "len", "(", "opt_params", ")", "==", "len", "(", "self", ".", "config", ".", "model", ".", "inner_params", ")", "\n", "OptClass", "=", "getattr", "(", "torch", ".", "optim", ",", "self", ".", "config", ".", "ft", ".", "opt", ")", "\n", "opt", "=", "OptClass", "(", "opt_params", ",", "lr", "=", "self", ".", "config", ".", "edit_lr", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "edit_step", "in", "range", "(", "self", ".", "config", ".", "ft", ".", "max_edit_steps", ")", ":", "\n", "            ", "if", "self", ".", "config", ".", "ft", ".", "time_limit", "is", "not", "None", "and", "(", "time", ".", "time", "(", ")", "-", "start_time", ">", "self", ".", "config", ".", "ft", ".", "time_limit", ")", ":", "\n", "                ", "break", "\n", "", "residuals", "=", "{", "k", ":", "v", "[", "0", "]", "@", "v", "[", "1", "]", "if", "len", "(", "v", ")", "==", "2", "else", "v", "[", "0", "]", "for", "k", ",", "v", "in", "packed_residuals", ".", "items", "(", ")", "}", "\n", "edited_params", "=", "[", "p", "if", "n", "not", "in", "residuals", "else", "p", ".", "detach", "(", ")", "+", "residuals", "[", "n", "]", "for", "n", ",", "p", "in", "p0", "]", "\n", "loss", ",", "l_edit", ",", "l_loc", ",", "acc", "=", "self", ".", "_edit_loss", "(", "edit_model", ",", "[", "p", "for", "n", ",", "p", "in", "p0", "]", ",", "edited_params", ",", "batch", ")", "\n", "\n", "if", "self", ".", "config", ".", "ft", ".", "verbose", ":", "\n", "                ", "residual", "=", "list", "(", "residuals", ".", "values", "(", ")", ")", "[", "-", "1", "]", "\n", "print", "(", "self", ".", "_edit_status", "(", "edit_step", ",", "loss", ",", "l_edit", ",", "l_loc", ",", "acc", ",", "residual", ")", ",", "end", "=", "\"\\r\"", ")", "\n", "\n", "", "if", "acc", "==", "1.0", ":", "\n", "                ", "break", "\n", "\n", "", "for", "p", ",", "g", "in", "zip", "(", "opt_params", ",", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "opt_params", ")", ")", ":", "\n", "                ", "p", ".", "grad", "=", "g", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "opt_params", ",", "self", ".", "config", ".", "grad_clip", ")", "\n", "opt", ".", "step", "(", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "", "if", "detach_history", ":", "\n", "            ", "new_model", "=", "self", ".", "model_constructor", "(", ")", "\n", "new_model", ".", "load_state_dict", "(", "edit_model", ".", "state_dict", "(", ")", ")", "\n", "edit_model", "=", "new_model", "\n", "", "edit_model", ".", "train", "(", "self", ".", "training", ")", "\n", "\n", "return", "FT", "(", "edit_model", ",", "self", ".", "config", ",", "self", ".", "model_constructor", ",", "self", ".", "edit_loss_fn", ")", ",", "{", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.enn.ENN.__init__": [[14, 25], ["editable_model.EditableModel.__init__", "torch.Parameter", "torch.Parameter", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "config", ",", "model_constructor", ",", "edit_lrs", "=", "None", ",", "edit_loss_fn", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "config", ",", "model_constructor", ")", "\n", "\n", "if", "edit_lrs", "is", "None", ":", "\n", "            ", "edit_lrs", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "[", "config", ".", "edit_lr", "]", "*", "len", "(", "self", ".", "config", ".", "model", ".", "inner_params", ")", ")", ")", "\n", "", "self", ".", "edit_lrs", "=", "edit_lrs", "\n", "\n", "if", "edit_loss_fn", "is", "not", "None", ":", "\n", "            ", "self", ".", "edit_loss_fn", "=", "edit_loss_fn", "\n", "\n", "", "self", ".", "grad_callback", "=", "fomaml_callback", "if", "config", ".", "enn", ".", "first_order", "else", "lambda", "x", ":", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.enn.ENN.outer_parameters": [[26, 35], ["super().outer_parameters", "enn.ENN.model.modules", "isinstance", "params.extend", "list", "m[].parameters"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.outer_parameters"], ["", "def", "outer_parameters", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "config", ".", "no_grad_layers", "is", "None", ":", "\n", "            ", "return", "super", "(", ")", ".", "outer_parameters", "(", ")", "\n", "", "else", ":", "\n", "            ", "params", "=", "[", "self", ".", "edit_lrs", "]", "\n", "for", "m", "in", "self", ".", "model", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "ModuleList", ")", ":", "\n", "                    ", "params", ".", "extend", "(", "list", "(", "m", "[", "self", ".", "config", ".", "no_grad_layers", ":", "]", ".", "parameters", "(", ")", ")", ")", "\n", "", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.enn.ENN.get_state_dict": [[36, 38], ["enn.ENN.state_dict"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict"], ["", "", "def", "get_state_dict", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "state_dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.enn.ENN.edit": [[39, 64], ["torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "enn.ENN.train", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "higher.innerloop_ctx", "fmodel.eval", "range", "enn.ENN.model_constructor", "enn.ENN.load_state_dict", "enn.ENN", "utils._logits", "diffopt.step", "fmodel.state_dict", "enn.ENN.model.named_parameters", "fmodel", "enn.ENN.edit_loss_fn", "list"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._logits", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict"], ["", "def", "edit", "(", "self", ",", "batch", ",", "condition", "=", "None", ",", "detach_history", "=", "False", ")", ":", "\n", "        ", "opt", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "\"params\"", ":", "p", ",", "\"lr\"", ":", "None", "}", "\n", "for", "(", "n", ",", "p", ")", "in", "self", ".", "model", ".", "named_parameters", "(", ")", "if", "n", "in", "self", ".", "config", ".", "model", ".", "inner_params", "]", ")", "\n", "with", "torch", ".", "enable_grad", "(", ")", ",", "higher", ".", "innerloop_ctx", "(", "\n", "self", ".", "model", ",", "\n", "opt", ",", "\n", "override", "=", "{", "'lr'", ":", "list", "(", "self", ".", "edit_lrs", ")", "}", ",", "\n", "copy_initial_weights", "=", "False", ",", "\n", "track_higher_grads", "=", "self", ".", "training", ",", "\n", "in_place", "=", "True", "\n", ")", "as", "(", "fmodel", ",", "diffopt", ")", ":", "\n", "            ", "fmodel", ".", "eval", "(", ")", "\n", "for", "edit_step", "in", "range", "(", "self", ".", "config", ".", "enn", ".", "n_edit_steps", ")", ":", "\n", "                ", "output", "=", "_logits", "(", "fmodel", "(", "**", "batch", ")", ")", "\n", "loss", "=", "self", ".", "edit_loss_fn", "(", "output", ",", "batch", "[", "\"labels\"", "]", ")", "[", "\"nll\"", "]", "\n", "diffopt", ".", "step", "(", "loss", ",", "grad_callback", "=", "self", ".", "grad_callback", ")", "\n", "\n", "", "", "if", "not", "detach_history", ":", "\n", "            ", "model_edited", "=", "fmodel", "\n", "", "else", ":", "\n", "            ", "model_edited", "=", "self", ".", "model_constructor", "(", ")", "\n", "model_edited", ".", "load_state_dict", "(", "fmodel", ".", "state_dict", "(", ")", ")", "\n", "", "model_edited", ".", "train", "(", "self", ".", "training", ")", "\n", "\n", "return", "ENN", "(", "model_edited", ",", "self", ".", "config", ",", "self", ".", "model_constructor", ",", "edit_lrs", "=", "self", ".", "edit_lrs", ",", "edit_loss_fn", "=", "self", ".", "edit_loss_fn", ")", ",", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.enn.fomaml_callback": [[9, 11], ["g.detach"], "function", ["None"], ["def", "fomaml_callback", "(", "all_grads", ")", ":", "\n", "    ", "return", "[", "g", ".", "detach", "(", ")", "if", "g", "is", "not", "None", "else", "None", "for", "g", "in", "all_grads", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.enn.test": [[66, 102], ["transformers.GPT2LMHeadModel.from_pretrained", "types.SimpleNamespace", "ENN().cuda", "ENN().cuda.edit", "print", "enn.edit.eval", "print", "enn.edit.edit_loss_fn().backward", "pdb.set_trace", "torch.arange().view().cuda", "torch.arange().view().cuda", "enn.ENN", "torch.ones_like", "torch.ones_like", "ENN().cuda.", "enn.edit.", "enn.edit.edit_loss_fn", "enn.edit.edit_loss_fn", "torch.arange().view", "torch.arange().view", "ENN().cuda.model.named_parameters", "enn.edit.model.named_parameters", "copy.deepcopy", "enn.edit.", "enn.edit.", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.edit"], ["", "", "def", "test", "(", ")", ":", "\n", "    ", "import", "transformers", "\n", "import", "types", "\n", "import", "copy", "\n", "\n", "model", "=", "transformers", ".", "GPT2LMHeadModel", ".", "from_pretrained", "(", "\"gpt2\"", ")", "\n", "\n", "config", "=", "types", ".", "SimpleNamespace", "(", ")", "\n", "config", ".", "edit_lr", "=", "0.1", "\n", "config", ".", "model", ".", "inner_params", "=", "[", "\n", "\"transformer.h.9.mlp.c_fc.weight\"", ",", "\n", "\"transformer.h.9.mlp.c_proj.weight\"", ",", "\n", "\"transformer.h.10.mlp.c_fc.weight\"", ",", "\n", "\"transformer.h.10.mlp.c_proj.weight\"", ",", "\n", "\"transformer.h.11.mlp.c_fc.weight\"", ",", "\n", "\"transformer.h.11.mlp.c_proj.weight\"", ",", "\n", "]", "\n", "config", ".", "enn", "=", "{", "\n", "\"n_edit_steps\"", ":", "2", ",", "\n", "\"first_order\"", ":", "False", "\n", "}", "\n", "\n", "enn", "=", "ENN", "(", "model", ",", "config", ",", "lambda", ":", "copy", ".", "deepcopy", "(", "model", ")", ")", ".", "cuda", "(", ")", "\n", "\n", "x", "=", "torch", ".", "arange", "(", "100", ")", ".", "view", "(", "5", ",", "20", ")", ".", "cuda", "(", ")", "+", "1000", "\n", "\n", "edited", "=", "enn", ".", "edit", "(", "x", ",", "masks", "=", "torch", ".", "ones_like", "(", "x", ")", ",", "labels", "=", "x", ")", "\n", "\n", "orig_param", "=", "[", "p", "for", "(", "n", ",", "p", ")", "in", "enn", ".", "model", ".", "named_parameters", "(", ")", "if", "n", "==", "config", ".", "model", ".", "inner_params", "[", "-", "1", "]", "]", "[", "0", "]", "\n", "edited_param", "=", "[", "p", "for", "(", "n", ",", "p", ")", "in", "edited", ".", "model", ".", "named_parameters", "(", ")", "if", "n", "==", "config", ".", "model", ".", "inner_params", "[", "-", "1", "]", "]", "[", "0", "]", "\n", "\n", "print", "(", "(", "orig_param", "-", "edited_param", ")", ".", "abs", "(", ")", ".", "max", "(", ")", ")", "\n", "edited", ".", "eval", "(", ")", "\n", "print", "(", "enn", "(", "x", ",", "labels", "=", "x", ")", ".", "loss", ",", "edited", "(", "x", ",", "labels", "=", "x", ")", ".", "loss", ",", "edited", ".", "edit_loss_fn", "(", "edited", "(", "x", ")", ".", "logits", ",", "x", ")", "[", "\"nll\"", "]", ")", "\n", "edited", ".", "edit_loss_fn", "(", "edited", "(", "x", ")", ".", "logits", ",", "x", ")", ".", "backward", "(", ")", "\n", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.GradientTransform.__init__": [[27, 74], ["torch.Module.__init__", "mend.GradientTransform.register_buffer", "mend.GradientTransform.register_buffer", "mend.GradientTransform.register_buffer", "mend.GradientTransform.register_buffer", "mend.GradientTransform.register_buffer", "mend.GradientTransform.register_buffer", "mend.GradientTransform.register_buffer", "getattr", "LOG.info", "ValueError", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "getattr.", "getattr.", "getattr.", "mend.GradientTransform.__init__.combined_net"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "x_dim", ":", "int", ",", "delta_dim", ":", "int", ",", "cfg", ",", "n_modes", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "x_dim", "=", "x_dim", "\n", "self", ".", "delta_dim", "=", "delta_dim", "\n", "self", ".", "cfg", "=", "cfg", "\n", "if", "cfg", ".", "combine", "and", "(", "cfg", ".", "one_sided", "or", "cfg", ".", "x_only", "or", "cfg", ".", "delta_only", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"cfg.combine cannot be used with one-sided MEND variants\"", ")", "\n", "\n", "", "self", ".", "norm_init", "=", "False", "\n", "self", ".", "register_buffer", "(", "\"u_mean\"", ",", "torch", ".", "full", "(", "(", "x_dim", ",", ")", ",", "float", "(", "\"nan\"", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"v_mean\"", ",", "torch", ".", "full", "(", "(", "delta_dim", ",", ")", ",", "float", "(", "\"nan\"", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"u_std\"", ",", "torch", ".", "full", "(", "(", "x_dim", ",", ")", ",", "float", "(", "\"nan\"", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"v_std\"", ",", "torch", ".", "full", "(", "(", "delta_dim", ",", ")", ",", "float", "(", "\"nan\"", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"u_s\"", ",", "torch", ".", "full", "(", "(", "x_dim", ",", ")", ",", "float", "(", "\"nan\"", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"v_s\"", ",", "torch", ".", "full", "(", "(", "delta_dim", ",", ")", ",", "float", "(", "\"nan\"", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"k\"", ",", "torch", ".", "full", "(", "(", "1", ",", ")", ",", "float", "(", "\"nan\"", ")", ")", ")", "\n", "\n", "MlpClass", "=", "getattr", "(", "local_nn", ",", "cfg", ".", "mlp_class", ")", "\n", "LOG", ".", "info", "(", "f\"Building Gradient Transform with MLP class {MlpClass}\"", ")", "\n", "\n", "def", "delta_net", "(", ")", ":", "\n", "            ", "return", "MlpClass", "(", "delta_dim", ",", "delta_dim", ",", "delta_dim", "*", "2", ",", "cfg", ".", "n_hidden", ",", "init", "=", "cfg", ".", "init", ",", "act", "=", "cfg", ".", "act", ",", "rank", "=", "cfg", ".", "rank", ",", "n_modes", "=", "n_modes", ")", "\n", "\n", "", "def", "x_net", "(", ")", ":", "\n", "            ", "return", "MlpClass", "(", "x_dim", ",", "x_dim", ",", "x_dim", "*", "2", ",", "cfg", ".", "n_hidden", ",", "init", "=", "cfg", ".", "init", ",", "act", "=", "cfg", ".", "act", ",", "rank", "=", "cfg", ".", "rank", ",", "n_modes", "=", "n_modes", ")", "\n", "\n", "", "def", "combined_net", "(", ")", ":", "\n", "            ", "return", "MlpClass", "(", "delta_dim", "+", "x_dim", ",", "delta_dim", "+", "x_dim", ",", "(", "delta_dim", "+", "x_dim", ")", "*", "2", ",", "\n", "cfg", ".", "n_hidden", ",", "init", "=", "cfg", ".", "init", ",", "act", "=", "cfg", ".", "act", ",", "rank", "=", "cfg", ".", "rank", ",", "n_modes", "=", "n_modes", ")", "\n", "\n", "", "def", "ID", "(", ")", ":", "\n", "            ", "return", "lambda", "x", ",", "mode", "=", "None", ":", "x", "\n", "\n", "", "if", "cfg", ".", "combine", ":", "\n", "            ", "self", ".", "mlp", "=", "combined_net", "(", ")", "\n", "", "elif", "cfg", ".", "one_sided", ":", "\n", "            ", "if", "x_dim", ">", "delta_dim", ":", "\n", "                ", "self", ".", "mlp1", ",", "self", ".", "mlp2", "=", "ID", "(", ")", ",", "delta_net", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "mlp1", ",", "self", ".", "mlp2", "=", "x_net", "(", ")", ",", "ID", "(", ")", "\n", "", "", "elif", "cfg", ".", "x_only", ":", "\n", "            ", "self", ".", "mlp1", ",", "self", ".", "mlp2", "=", "x_net", "(", ")", ",", "ID", "(", ")", "\n", "", "elif", "cfg", ".", "delta_only", ":", "\n", "            ", "self", ".", "mlp1", ",", "self", ".", "mlp2", "=", "ID", "(", ")", ",", "delta_net", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "mlp1", ",", "self", ".", "mlp2", "=", "x_net", "(", ")", ",", "delta_net", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.GradientTransform.forward": [[75, 117], ["u.view", "v.view", "u.to", "v.to", "range", "mend.GradientTransform.mlp", "mend.GradientTransform.split", "RuntimeError", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "mend.GradientTransform.mlp1", "mend.GradientTransform.mlp2", "u_[].clone().detach", "v_[].clone().detach", "mend.GradientTransform.u_s.zero_", "mend.GradientTransform.v_s.zero_", "mend.update_counter", "mend.update_counter", "u_[].clone", "v_[].clone"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.update_counter", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.update_counter"], ["", "", "def", "forward", "(", "self", ",", "u", ",", "v", ",", "param_idx", "=", "None", ")", ":", "\n", "        ", "u", ",", "v", "=", "u", ".", "to", "(", "torch", ".", "float32", ")", ",", "v", ".", "to", "(", "torch", ".", "float32", ")", "\n", "\n", "u_", "=", "u", ".", "view", "(", "-", "1", ",", "u", ".", "shape", "[", "-", "1", "]", ")", "\n", "v_", "=", "v", ".", "view", "(", "-", "1", ",", "v", ".", "shape", "[", "-", "1", "]", ")", "\n", "\n", "nz_mask", "=", "(", "u_", "!=", "0", ")", ".", "any", "(", "-", "1", ")", "*", "(", "v_", "!=", "0", ")", ".", "any", "(", "-", "1", ")", "# Skip batch elements with zero grad", "\n", "u_", "=", "u_", "[", "nz_mask", "]", "\n", "v_", "=", "v_", "[", "nz_mask", "]", "\n", "\n", "if", "self", ".", "training", ":", "\n", "            ", "for", "idx", "in", "range", "(", "u_", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "if", "not", "self", ".", "norm_init", ":", "\n", "                    ", "self", ".", "u_mean", "=", "u_", "[", "idx", "]", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "self", ".", "v_mean", "=", "v_", "[", "idx", "]", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "self", ".", "u_s", ".", "zero_", "(", ")", "\n", "self", ".", "v_s", ".", "zero_", "(", ")", "\n", "self", ".", "k", "[", ":", "]", "=", "1", "\n", "self", ".", "norm_init", "=", "True", "\n", "", "else", ":", "\n", "                    ", "self", ".", "k", "+=", "1", "\n", "self", ".", "u_mean", ",", "self", ".", "u_s", "=", "update_counter", "(", "u_", "[", "idx", "]", ",", "self", ".", "u_mean", ",", "self", ".", "u_s", ",", "self", ".", "k", ")", "\n", "self", ".", "v_mean", ",", "self", ".", "v_s", "=", "update_counter", "(", "v_", "[", "idx", "]", ",", "self", ".", "v_mean", ",", "self", ".", "v_s", ",", "self", ".", "k", ")", "\n", "\n", "", "", "if", "self", ".", "k", "<", "2", ":", "\n", "                ", "raise", "RuntimeError", "(", "f\"Can't perform normalization with only {self.k} samples so far\"", ")", "\n", "", "self", ".", "u_std", "=", "(", "self", ".", "u_s", "/", "(", "self", ".", "k", "-", "1", ")", ")", "**", "0.5", "\n", "self", ".", "v_std", "=", "(", "self", ".", "v_s", "/", "(", "self", ".", "k", "-", "1", ")", ")", "**", "0.5", "\n", "\n", "", "if", "self", ".", "cfg", ".", "norm", ":", "\n", "            ", "u_input", "=", "(", "u_", "-", "self", ".", "u_mean", ")", "/", "(", "self", ".", "u_std", "+", "1e-7", ")", "\n", "v_input", "=", "(", "v_", "-", "self", ".", "v_mean", ")", "/", "(", "self", ".", "v_std", "+", "1e-7", ")", "\n", "", "else", ":", "\n", "            ", "u_input", "=", "u_", "\n", "v_input", "=", "v_", "\n", "\n", "", "if", "self", ".", "cfg", ".", "combine", ":", "\n", "            ", "output", "=", "self", ".", "mlp", "(", "torch", ".", "cat", "(", "(", "u_input", ",", "v_input", ")", ",", "-", "1", ")", ",", "mode", "=", "param_idx", ")", "\n", "out1", ",", "out2", "=", "output", ".", "split", "(", "[", "u", ".", "shape", "[", "-", "1", "]", ",", "v", ".", "shape", "[", "-", "1", "]", "]", ",", "-", "1", ")", "\n", "return", "out1", ",", "out2", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "mlp1", "(", "u_input", ",", "mode", "=", "param_idx", ")", ",", "self", ".", "mlp2", "(", "v_input", ",", "mode", "=", "param_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.get_shape": [[120, 123], ["isinstance"], "methods", ["None"], ["    ", "def", "get_shape", "(", "self", ",", "p", ")", ":", "\n", "# We need to flip the shapes since OpenAI gpt2 uses convs instead of linear", "\n", "        ", "return", "p", ".", "shape", "if", "isinstance", "(", "self", ".", "model", ",", "transformers", ".", "GPT2LMHeadModel", ")", "else", "(", "p", ".", "shape", "[", "1", "]", ",", "p", ".", "shape", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.__init__": [[124, 154], ["editable_model.EditableModel.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "hasattr", "hooks.hook_model", "LOG.info", "collections.defaultdict", "utils._inner_params", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "model.named_parameters", "shape_dict[].append", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "len", "n.replace", "mend.GradientTransform", "str", "mend.GradientTransform", "len", "utils._inner_params", "tuple", "len", "collections.defaultdict.keys", "mend.MEND.get_shape", "mend.MEND.get_shape", "model.named_parameters"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.hooks.hook_model", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._inner_params", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._inner_params", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.get_shape", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.get_shape"], ["", "def", "__init__", "(", "self", ",", "model", ",", "config", ",", "model_constructor", ",", "mend", "=", "None", ",", "edit_lrs", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "config", ",", "model_constructor", ")", "\n", "\n", "if", "edit_lrs", "is", "None", ":", "\n", "            ", "edit_lrs", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "[", "config", ".", "edit_lr", "]", "*", "len", "(", "self", ".", "config", ".", "model", ".", "inner_params", ")", ")", ")", "\n", "", "self", ".", "edit_lrs", "=", "edit_lrs", "\n", "\n", "if", "not", "hasattr", "(", "self", ".", "model", ",", "\"handles\"", ")", ":", "\n", "            ", "hook_model", "(", "self", ".", "model", ",", "self", ".", "config", ".", "model", ".", "inner_params", ")", "\n", "LOG", ".", "info", "(", "f\"Hooked {len(self.model.handles)//2} modules\"", ")", "\n", "\n", "", "if", "config", ".", "mend", ".", "shared", ":", "\n", "            ", "shape_dict", "=", "defaultdict", "(", "list", ")", "\n", "for", "n", ",", "p", "in", "_inner_params", "(", "model", ".", "named_parameters", "(", ")", ",", "self", ".", "config", ".", "model", ".", "inner_params", ")", ":", "\n", "                ", "shape_dict", "[", "self", ".", "get_shape", "(", "p", ")", "]", ".", "append", "(", "n", ")", "\n", "", "self", ".", "shape_dict", "=", "shape_dict", "\n", "\n", "", "if", "mend", "is", "None", ":", "\n", "            ", "if", "not", "config", ".", "mend", ".", "shared", ":", "\n", "                ", "self", ".", "mend", "=", "nn", ".", "ModuleDict", "(", "{", "\n", "n", ".", "replace", "(", "\".\"", ",", "\"#\"", ")", ":", "GradientTransform", "(", "*", "self", ".", "get_shape", "(", "p", ")", ",", "config", ".", "mend", ")", "\n", "for", "(", "n", ",", "p", ")", "in", "_inner_params", "(", "model", ".", "named_parameters", "(", ")", ",", "self", ".", "config", ".", "model", ".", "inner_params", ")", "\n", "}", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "mend", "=", "nn", ".", "ModuleDict", "(", "{", "\n", "str", "(", "tuple", "(", "s", ")", ")", ":", "GradientTransform", "(", "*", "s", ",", "config", ".", "mend", ",", "len", "(", "shape_dict", "[", "s", "]", ")", ")", "\n", "for", "s", "in", "shape_dict", ".", "keys", "(", ")", "\n", "}", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "mend", "=", "mend", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict": [[155, 162], ["super().state_dict", "mend.MEND.model.state_dict().keys", "mend.MEND.model.state_dict"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict"], ["", "", "def", "state_dict", "(", "self", ",", "destination", "=", "None", ",", "prefix", "=", "\"\"", ",", "keep_vars", "=", "False", ")", ":", "\n", "        ", "state_dict", "=", "super", "(", ")", ".", "state_dict", "(", "prefix", "=", "prefix", ",", "keep_vars", "=", "keep_vars", ")", "# Get default state dict", "\n", "model_keys", "=", "self", ".", "model", ".", "state_dict", "(", "prefix", "=", "prefix", ",", "keep_vars", "=", "keep_vars", ")", ".", "keys", "(", ")", "# Remove model params", "\n", "for", "k", "in", "model_keys", ":", "\n", "            ", "del", "state_dict", "[", "f\"model.{k}\"", "]", "\n", "", "state_dict", "[", "\"model_config\"", "]", "=", "self", ".", "model", ".", "config", "# Include model config", "\n", "return", "state_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict": [[163, 176], ["super().load_state_dict", "LOG.info", "LOG.info", "LOG.info", "len", "len", "k.startswith"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", ":", "bool", "=", "True", ")", ":", "\n", "        ", "config", "=", "state_dict", "[", "\"model_config\"", "]", "\n", "del", "state_dict", "[", "\"model_config\"", "]", "\n", "if", "config", "!=", "self", ".", "model", ".", "config", ":", "\n", "            ", "LOG", ".", "info", "(", "\"Loaded model config doesn't match current model config.\"", ")", "\n", "LOG", ".", "info", "(", "f\"Loaded: {config}\"", ")", "\n", "LOG", ".", "info", "(", "f\"Current: {self.model.config}\"", ")", "\n", "\n", "", "res", "=", "super", "(", ")", ".", "load_state_dict", "(", "state_dict", ",", "False", ")", "\n", "# We should only have missing keys for the model, and no unexpected keys", "\n", "assert", "len", "(", "[", "k", "for", "k", "in", "res", ".", "missing_keys", "if", "not", "k", ".", "startswith", "(", "\"model.\"", ")", "]", ")", "==", "0", ",", "\"Should only have missing keys for model.\"", "\n", "assert", "len", "(", "res", ".", "unexpected_keys", ")", "==", "0", ",", "\"Shouldn't have any unexpected keys\"", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.outer_parameters": [[177, 179], ["list", "mend.MEND.mend.parameters"], "methods", ["None"], ["", "def", "outer_parameters", "(", "self", ")", ":", "\n", "        ", "return", "list", "(", "self", ".", "mend", ".", "parameters", "(", ")", ")", "+", "[", "self", ".", "edit_lrs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.edit": [[180, 248], ["utils._logits", "set", "set", "loss.backward", "isinstance", "utils._inner_params", "mend.MEND.model.zero_grad", "higher.patch.monkeypatch.named_parameters", "higher.patch.monkeypatch.update_params", "mend.MEND.model", "mend.MEND.edit_loss_fn", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "mend.MEND.model.named_parameters", "p.grad.norm().item", "mean_grads[].norm().item", "p.grad.std().item", "mean_grads[].std().item", "torch.cosine_similarity().item", "torch.cosine_similarity().item", "torch.cosine_similarity().item", "len", "len", "isinstance", "higher.patch.monkeypatch", "mend.MEND.model_constructor", "mend.MEND.load_state_dict", "mend.MEND", "transformed_factors.items", "list", "zip", "new_params.append", "new_params.append", "higher.patch.monkeypatch.state_dict", "mend.MEND.model.named_parameters", "mend.MEND.shape_dict[].index", "param_idx", "utils._inner_params", "utils._inner_params", "p.grad.norm", "mean_grads[].norm", "p.grad.std", "mean_grads[].std", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity", "mean_grads.items", "mean_grads.items", "mend.MEND.model.named_parameters", "mend.MEND.model.named_parameters", "p.grad.reshape", "mean_grads[].reshape", "str", "n.replace", "tuple", "mend.MEND.get_shape", "mend.MEND.get_shape"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._logits", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._inner_params", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.load_state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.state_dict", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._inner_params", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils._inner_params", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.get_shape", "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.MEND.get_shape"], ["", "def", "edit", "(", "self", ",", "batch", ",", "condition", "=", "None", ",", "detach_history", "=", "False", ")", ":", "\n", "        ", "outputs", "=", "_logits", "(", "self", ".", "model", "(", "**", "batch", ")", ")", "\n", "loss", "=", "self", ".", "edit_loss_fn", "(", "outputs", ",", "batch", "[", "\"labels\"", "]", ")", "[", "\"nll\"", "]", "\n", "\n", "names", "=", "set", "(", "[", "n", "for", "n", ",", "p", "in", "self", ".", "model", ".", "named_parameters", "(", ")", "]", ")", "\n", "pset", "=", "set", "(", "self", ".", "config", ".", "model", ".", "inner_params", ")", "\n", "for", "p", "in", "pset", ":", "\n", "            ", "assert", "p", "in", "names", ",", "f\"inner param {p} not in model\"", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "\n", "if", "self", ".", "config", ".", "mend", ".", "shared", ":", "\n", "            ", "param_idx", "=", "lambda", "n", ",", "p", ":", "self", ".", "shape_dict", "[", "self", ".", "get_shape", "(", "p", ")", "]", ".", "index", "(", "n", ")", "if", "self", ".", "config", ".", "mend", ".", "shared", "else", "None", "# noqa: E731", "\n", "transformed_factors", "=", "{", "\n", "n", ":", "self", ".", "mend", "[", "str", "(", "tuple", "(", "self", ".", "get_shape", "(", "p", ")", ")", ")", "]", "(", "p", ".", "__x__", ",", "p", ".", "__delta__", ",", "param_idx", "(", "n", ",", "p", ")", ")", "\n", "for", "n", ",", "p", "in", "_inner_params", "(", "self", ".", "model", ".", "named_parameters", "(", ")", ",", "self", ".", "config", ".", "model", ".", "inner_params", ")", "\n", "}", "\n", "", "else", ":", "\n", "            ", "transformed_factors", "=", "{", "\n", "n", ":", "self", ".", "mend", "[", "n", ".", "replace", "(", "\".\"", ",", "\"#\"", ")", "]", "(", "p", ".", "__x__", ",", "p", ".", "__delta__", ")", "\n", "for", "n", ",", "p", "in", "_inner_params", "(", "self", ".", "model", ".", "named_parameters", "(", ")", ",", "self", ".", "config", ".", "model", ".", "inner_params", ")", "\n", "}", "\n", "\n", "# Should be bi,bj->ji for nn.Linear, but GPT2 uses Conv1d instead...", "\n", "", "if", "isinstance", "(", "self", ".", "model", ",", "transformers", ".", "GPT2LMHeadModel", ")", ":", "\n", "            ", "targ", "=", "\"ij\"", "\n", "", "else", ":", "\n", "            ", "targ", "=", "\"ji\"", "\n", "", "mean_grads", "=", "{", "\n", "n", ":", "torch", ".", "einsum", "(", "f\"bi,bj->{targ}\"", ",", "x", ",", "delta", ")", "\n", "for", "n", ",", "(", "x", ",", "delta", ")", "in", "transformed_factors", ".", "items", "(", ")", "\n", "}", "\n", "\n", "info_dict", "=", "{", "}", "\n", "idx", "=", "0", "\n", "for", "n", ",", "p", "in", "_inner_params", "(", "self", ".", "model", ".", "named_parameters", "(", ")", ",", "self", ".", "config", ".", "model", ".", "inner_params", ")", ":", "\n", "            ", "info_dict", "[", "f\"grad/true_mag{idx}\"", "]", "=", "p", ".", "grad", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "info_dict", "[", "f\"grad/pseudo_mag{idx}\"", "]", "=", "mean_grads", "[", "n", "]", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "info_dict", "[", "f\"grad/true_std{idx}\"", "]", "=", "p", ".", "grad", ".", "std", "(", ")", ".", "item", "(", ")", "\n", "info_dict", "[", "f\"grad/pseudo_std{idx}\"", "]", "=", "mean_grads", "[", "n", "]", ".", "std", "(", ")", ".", "item", "(", ")", "\n", "info_dict", "[", "f\"grad/diff{idx}\"", "]", "=", "(", "p", ".", "grad", "-", "mean_grads", "[", "n", "]", ")", ".", "norm", "(", "2", ")", ".", "item", "(", ")", "\n", "info_dict", "[", "f\"grad/cos{idx}\"", "]", "=", "F", ".", "cosine_similarity", "(", "p", ".", "grad", ".", "reshape", "(", "-", "1", ")", ",", "mean_grads", "[", "n", "]", ".", "reshape", "(", "-", "1", ")", ",", "dim", "=", "0", ")", ".", "item", "(", ")", "\n", "idx", "+=", "1", "\n", "\n", "", "self", ".", "model", ".", "zero_grad", "(", ")", "\n", "\n", "assert", "len", "(", "self", ".", "edit_lrs", ")", "==", "len", "(", "list", "(", "mean_grads", ".", "items", "(", ")", ")", ")", "\n", "updates", "=", "{", "n", ":", "lr", "*", "g", "for", "lr", ",", "(", "n", ",", "g", ")", "in", "zip", "(", "self", ".", "edit_lrs", ",", "mean_grads", ".", "items", "(", ")", ")", "}", "\n", "\n", "edited_model", "=", "self", ".", "model", "\n", "if", "not", "isinstance", "(", "edited_model", ",", "higher", ".", "patch", ".", "_MonkeyPatchBase", ")", ":", "\n", "            ", "edited_model", "=", "make_functional", "(", "edited_model", ",", "in_place", "=", "True", ")", "\n", "\n", "", "new_params", "=", "[", "]", "\n", "for", "n", ",", "p", "in", "edited_model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "n", "in", "pset", ":", "\n", "                ", "new_params", ".", "append", "(", "p", "+", "updates", "[", "n", "]", ")", "\n", "", "else", ":", "\n", "                ", "new_params", ".", "append", "(", "p", ")", "\n", "\n", "", "", "edited_model", ".", "update_params", "(", "new_params", ")", "\n", "\n", "if", "detach_history", ":", "\n", "            ", "new_model", "=", "self", ".", "model_constructor", "(", ")", "\n", "new_model", ".", "load_state_dict", "(", "edited_model", ".", "state_dict", "(", ")", ")", "\n", "edited_model", "=", "new_model", "\n", "\n", "", "return", "MEND", "(", "edited_model", ",", "self", ".", "config", ",", "self", ".", "model_constructor", ",", "self", ".", "mend", ",", "edit_lrs", "=", "self", ".", "edit_lrs", ")", ",", "info_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.algs.mend.update_counter": [[19, 24], ["None"], "function", ["None"], ["def", "update_counter", "(", "x", ",", "m", ",", "s", ",", "k", ")", ":", "\n", "    ", "new_m", "=", "m", "+", "(", "x", "-", "m", ")", "/", "k", "\n", "new_s", "=", "s", "+", "(", "x", "-", "m", ")", "*", "(", "x", "-", "new_m", ")", "\n", "\n", "return", "new_m", ",", "new_s", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.nq.NQDataset.__init__": [[5, 13], ["open", "json.load"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ":", "str", ",", "tokenizer", ",", "config", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "self", ".", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "self", ".", "questions", "=", "self", ".", "data", "[", "\"questions\"", "]", "\n", "self", ".", "answers", "=", "self", ".", "data", "[", "\"answers\"", "]", "\n", "self", ".", "tokenizer", "=", "tokenizer", "\n", "self", ".", "config", "=", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.nq.NQDataset.__getitem__": [[14, 17], ["len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx", "=", "idx", "%", "len", "(", "self", ".", "questions", ")", "\n", "return", "self", ".", "questions", "[", "idx", "]", ",", "self", ".", "answers", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.nq.NQDataset.generate": [[18, 50], ["datasets.load_dataset", "nq.NQDataset.generate.extract"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "generate", "(", "out_path", ":", "str", ",", "prompt", ":", "bool", "=", "False", ",", "capitalize", ":", "bool", "=", "True", ",", "question_mark", ":", "bool", "=", "True", ")", ":", "\n", "        ", "import", "datasets", "\n", "import", "os", "\n", "\n", "def", "process", "(", "text", ")", ":", "\n", "            ", "if", "capitalize", ":", "\n", "                ", "text", "=", "text", "[", "0", "]", ".", "capitalize", "(", ")", "+", "text", "[", "1", ":", "]", "\n", "", "if", "question_mark", ":", "\n", "                ", "text", "=", "text", "+", "\"?\"", "\n", "", "if", "prompt", ":", "\n", "                ", "text", "=", "\"nq question: \"", "+", "text", "\n", "", "return", "text", "\n", "\n", "", "def", "extract", "(", "d", ")", ":", "\n", "            ", "questions", "=", "[", "process", "(", "q", "[", "\"text\"", "]", ")", "for", "q", "in", "d", "[", "\"question\"", "]", "]", "\n", "answers", "=", "[", "[", "a", "[", "'text'", "]", "[", "0", "]", "for", "a", "in", "ann", "[", "'short_answers'", "]", "if", "len", "(", "a", "[", "'text'", "]", ")", "]", "for", "ann", "in", "d", "[", "'annotations'", "]", "]", "\n", "questions", "=", "[", "q", "for", "q", ",", "a", "in", "zip", "(", "questions", ",", "answers", ")", "if", "len", "(", "a", ")", "]", "\n", "answers", "=", "[", "min", "(", "a", ",", "key", "=", "len", ")", "for", "a", "in", "answers", "if", "len", "(", "a", ")", "]", "\n", "return", "questions", ",", "answers", "\n", "\n", "", "train", "=", "datasets", ".", "load_dataset", "(", "\"natural_questions\"", ",", "split", "=", "\"train\"", ")", "\n", "tq", ",", "ta", "=", "extract", "(", "train", ")", "\n", "val", "=", "datasets", ".", "load_dataset", "(", "\"natural_questions\"", ",", "split", "=", "\"validation\"", ")", "\n", "vq", ",", "va", "=", "extract", "(", "val", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "out_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "out_path", ")", "\n", "", "with", "open", "(", "f\"{out_path}/train.json\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "{", "\"questions\"", ":", "tq", ",", "\"answers\"", ":", "ta", "}", ",", "f", ")", "\n", "", "with", "open", "(", "f\"{out_path}/validation.json\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "{", "\"questions\"", ":", "vq", ",", "\"answers\"", ":", "va", "}", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.__init__": [[13, 50], ["torch.utils.data.Dataset.__init__", "jsonlines.open", "LOG.info", "NQDataset", "ex[].remove", "zsre.Seq2SeqAugmentedKILT.__init__.extract"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "tokenizer", ",", "\n", "data_path", ",", "\n", "config", ",", "\n", "max_length", "=", "32", ",", "\n", "return_view", "=", "False", ",", "\n", "all_views", "=", "False", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tok", "=", "tokenizer", "\n", "self", ".", "data", "=", "[", "]", "\n", "self", ".", "config", "=", "config", "\n", "\n", "def", "extract", "(", "d", ")", ":", "\n", "            ", "ex", "=", "{", "k", ":", "d", "[", "k", "]", "for", "k", "in", "[", "\"input\"", ",", "\"prediction\"", ",", "\"alternatives\"", ",", "\"filtered_rephrases\"", ",", "\"output\"", "]", "}", "\n", "if", "ex", "[", "\"input\"", "]", "in", "ex", "[", "\"filtered_rephrases\"", "]", ":", "\n", "                ", "ex", "[", "\"filtered_rephrases\"", "]", ".", "remove", "(", "ex", "[", "\"input\"", "]", ")", "\n", "", "return", "ex", "\n", "\n", "", "with", "jsonlines", ".", "open", "(", "data_path", ")", "as", "f", ":", "\n", "            ", "for", "d", "in", "f", ":", "\n", "                ", "extracted", "=", "extract", "(", "d", ")", "\n", "if", "len", "(", "extracted", "[", "\"alternatives\"", "]", ")", ">", "0", "and", "len", "(", "extracted", "[", "\"filtered_rephrases\"", "]", ")", ">", "0", ":", "\n", "                    ", "self", ".", "data", ".", "append", "(", "extracted", ")", "\n", "\n", "", "", "", "self", ".", "max_length", "=", "max_length", "\n", "self", ".", "all_views", "=", "all_views", "\n", "self", ".", "return_view", "=", "return_view", "\n", "if", "self", ".", "config", ".", "data", ".", "zsre_nq", "and", "\"train\"", "not", "in", "data_path", ":", "\n", "            ", "self", ".", "use_nq", "=", "True", "\n", "LOG", ".", "info", "(", "\"** Using natural questions for zsre base samples **\"", ")", "\n", "from", "data_classes", ".", "nq", "import", "NQDataset", "\n", "self", ".", "nq", "=", "NQDataset", "(", "self", ".", "config", ".", "data", ".", "nq_path", "+", "(", "\"/train.json\"", "if", "\"train\"", "in", "data_path", "else", "\"/validation.json\"", ")", ",", "\n", "tokenizer", ",", "config", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "use_nq", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.is_bart": [[51, 53], ["isinstance", "isinstance"], "methods", ["None"], ["", "", "def", "is_bart", "(", "self", ")", ":", "\n", "        ", "return", "isinstance", "(", "self", ".", "tok", ",", "BartTokenizer", ")", "or", "isinstance", "(", "self", ".", "tok", ",", "BartTokenizerFast", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.__len__": [[54, 56], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.__getitem__": [[57, 74], ["random.choice", "random.choice"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ",", "seed", "=", "None", ")", ":", "\n", "        ", "new_label", "=", "random", ".", "choice", "(", "self", ".", "data", "[", "item", "]", "[", "\"alternatives\"", "]", ")", "\n", "rephrase", "=", "random", ".", "choice", "(", "self", ".", "data", "[", "item", "]", "[", "\"filtered_rephrases\"", "]", ")", "\n", "output", "=", "{", "\n", "\"src\"", ":", "self", ".", "data", "[", "item", "]", "[", "\"input\"", "]", ",", "\n", "\"pred\"", ":", "self", ".", "data", "[", "item", "]", "[", "\"prediction\"", "]", ",", "\n", "\"rephrase\"", ":", "rephrase", ",", "\n", "\"alt\"", ":", "new_label", ",", "\n", "\"answers\"", ":", "[", "x", "[", "\"answer\"", "]", "for", "x", "in", "self", ".", "data", "[", "item", "]", "[", "\"output\"", "]", "]", ",", "\n", "\"cond\"", ":", "\"{} >> {} || {}\"", ".", "format", "(", "\n", "self", ".", "data", "[", "item", "]", "[", "\"prediction\"", "]", ",", "\n", "new_label", ",", "\n", "self", ".", "data", "[", "item", "]", "[", "\"input\"", "]", ",", "\n", ")", ",", "\n", "}", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.collate_fn": [[75, 104], ["zsre.Seq2SeqAugmentedKILT.is_bart", "zsre.Seq2SeqAugmentedKILT.tok().items", "zsre.Seq2SeqAugmentedKILT.tok"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.is_bart"], ["", "def", "collate_fn", "(", "self", ",", "batch", ")", ":", "\n", "        ", "src", "=", "[", "b", "[", "\"src\"", "]", "for", "b", "in", "batch", "]", "\n", "ne", "=", "self", ".", "config", ".", "data", ".", "n_edits", "\n", "trg", "=", "(", "\n", "[", "b", "[", "\"answers\"", "]", "[", "0", "]", "for", "b", "in", "batch", "[", ":", "-", "ne", "]", "]", "+", "\n", "[", "b", "[", "\"alt\"", "]", "for", "b", "in", "batch", "[", "-", "ne", ":", "]", "]", "\n", ")", "\n", "\n", "batches", "=", "{", "\n", "f\"{k1}_{k2}\"", ":", "v2", "\n", "for", "k1", ",", "v1", "in", "{", "\n", "\"src\"", ":", "src", ",", "\n", "\"trg\"", ":", "trg", ",", "\n", "\"cond\"", ":", "[", "b", "[", "\"cond\"", "]", "for", "b", "in", "batch", "[", "-", "ne", ":", "]", "]", ",", "\n", "\"rephrase\"", ":", "[", "b", "[", "\"rephrase\"", "]", "for", "b", "in", "batch", "[", "-", "ne", ":", "]", "]", ",", "\n", "}", ".", "items", "(", ")", "\n", "for", "k2", ",", "v2", "in", "self", ".", "tok", "(", "\n", "v1", ",", "\n", "return_tensors", "=", "\"pt\"", ",", "\n", "padding", "=", "True", ",", "\n", "max_length", "=", "self", ".", "max_length", ",", "\n", "truncation", "=", "True", ",", "\n", ")", ".", "items", "(", ")", "\n", "}", "\n", "\n", "if", "self", ".", "is_bart", "(", ")", ":", "# For consistency with Cao et al", "\n", "            ", "batches", "[", "\"trg_input_ids\"", "]", "[", ":", ",", "0", "]", "=", "self", ".", "tok", ".", "eos_token_id", "\n", "", "batches", "[", "\"raw\"", "]", "=", "batch", "\n", "return", "batches", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT._check_padding": [[105, 108], ["ValueError"], "methods", ["None"], ["", "def", "_check_padding", "(", "self", ",", "ids", ")", ":", "\n", "        ", "if", "(", "ids", "[", ":", ",", "0", "]", "==", "self", ".", "tok", ".", "pad_token_id", ")", ".", "any", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Left-padding not supported\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.get_edit_labels": [[109, 111], ["labels.masked_fill"], "methods", ["None"], ["", "", "def", "get_edit_labels", "(", "self", ",", "labels", ")", ":", "\n", "        ", "return", "labels", ".", "masked_fill", "(", "labels", "==", "self", ".", "tok", ".", "pad_token_id", ",", "-", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.edit_generator": [[112, 178], ["utils.EditBatchSampler", "len", "utils.EditBatchSampler.sample", "zsre.Seq2SeqAugmentedKILT.collate_fn", "zsre.Seq2SeqAugmentedKILT.get_edit_labels", "zsre.Seq2SeqAugmentedKILT.is_bart", "len", "zsre.Seq2SeqAugmentedKILT.is_bart", "dict", "dict", "zsre.Seq2SeqAugmentedKILT.is_bart", "zsre.Seq2SeqAugmentedKILT.get_edit_labels", "zsre.Seq2SeqAugmentedKILT.is_bart", "zsre.Seq2SeqAugmentedKILT.get_edit_labels", "utils.dict_to", "zsre.Seq2SeqAugmentedKILT.tok", "zsre.Seq2SeqAugmentedKILT.tok", "zsre.Seq2SeqAugmentedKILT.items", "k.startswith"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EditBatchSampler.sample", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.fever.BinaryAugmentedKILT.collate_fn", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.get_edit_labels", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.is_bart", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.is_bart", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.is_bart", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.get_edit_labels", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.zsre.Seq2SeqAugmentedKILT.is_bart", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.get_edit_labels", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.dict_to"], ["", "def", "edit_generator", "(", "self", ",", "batch_size", ",", "n", "=", "None", ")", ":", "\n", "        ", "if", "n", "is", "None", ":", "\n", "            ", "n", "=", "len", "(", "self", ")", "\n", "", "sampler", "=", "EditBatchSampler", "(", "n", ",", "memorize_mode", "=", "self", ".", "config", ".", "single_batch", ",", "loc_disjoint", "=", "not", "self", ".", "use_nq", ",", "seed", "=", "self", ".", "config", ".", "seed", ")", "\n", "\n", "while", "True", ":", "\n", "            ", "edit_idxs", ",", "loc_idxs", "=", "sampler", ".", "sample", "(", "batch_size", ")", "\n", "assert", "len", "(", "edit_idxs", ")", "==", "1", "\n", "idxs", "=", "loc_idxs", "+", "edit_idxs", "\n", "toks", "=", "self", ".", "collate_fn", "(", "[", "self", "[", "idx", "]", "for", "idx", "in", "idxs", "]", ")", "\n", "\n", "ne", "=", "self", ".", "config", ".", "data", ".", "n_edits", "\n", "edit_decoder_inputs", "=", "toks", "[", "\"trg_input_ids\"", "]", "[", "-", "ne", ":", "]", "\n", "edit_labels", "=", "self", ".", "get_edit_labels", "(", "edit_decoder_inputs", ")", "\n", "edit_attention_mask", "=", "toks", "[", "\"trg_attention_mask\"", "]", "[", "-", "ne", ":", "]", "\n", "\n", "edit_inner", "=", "{", "}", "\n", "edit_inner", "[", "\"input_ids\"", "]", "=", "toks", "[", "\"src_input_ids\"", "]", "[", "-", "ne", ":", "]", "\n", "edit_inner", "[", "\"attention_mask\"", "]", "=", "toks", "[", "\"src_attention_mask\"", "]", "[", "-", "ne", ":", "]", "\n", "if", "self", ".", "is_bart", "(", ")", ":", "\n", "                ", "edit_inner", "[", "\"decoder_input_ids\"", "]", "=", "edit_decoder_inputs", "\n", "edit_inner", "[", "\"decoder_attention_mask\"", "]", "=", "edit_attention_mask", "\n", "", "edit_inner", "[", "\"labels\"", "]", "=", "edit_labels", "\n", "\n", "if", "self", ".", "config", ".", "data", ".", "rephrase", ":", "\n", "                ", "edit_outer", "=", "{", "}", "\n", "edit_outer", "[", "\"input_ids\"", "]", "=", "toks", "[", "\"rephrase_input_ids\"", "]", "\n", "edit_outer", "[", "\"attention_mask\"", "]", "=", "toks", "[", "\"rephrase_attention_mask\"", "]", "\n", "if", "self", ".", "is_bart", "(", ")", ":", "\n", "                    ", "edit_outer", "[", "\"decoder_input_ids\"", "]", "=", "edit_decoder_inputs", "\n", "edit_outer", "[", "\"decoder_attention_mask\"", "]", "=", "edit_attention_mask", "\n", "", "edit_outer", "[", "\"labels\"", "]", "=", "edit_labels", "\n", "", "else", ":", "\n", "                ", "edit_outer", "=", "edit_inner", "\n", "\n", "", "loc", "=", "{", "}", "\n", "if", "self", ".", "use_nq", ":", "\n", "                ", "batch", "=", "[", "self", ".", "nq", "[", "idx", "]", "for", "idx", "in", "loc_idxs", "]", "\n", "questions", "=", "[", "b", "[", "0", "]", "for", "b", "in", "batch", "]", "\n", "answers", "=", "[", "b", "[", "1", "]", "for", "b", "in", "batch", "]", "\n", "loc", "=", "dict", "(", "self", ".", "tok", "(", "questions", ",", "return_tensors", "=", "\"pt\"", ",", "padding", "=", "True", ",", "max_length", "=", "self", ".", "max_length", ",", "truncation", "=", "True", ")", ")", "\n", "trg_toks", "=", "dict", "(", "self", ".", "tok", "(", "answers", ",", "return_tensors", "=", "\"pt\"", ",", "padding", "=", "True", ",", "max_length", "=", "self", ".", "max_length", ",", "truncation", "=", "True", ")", ")", "\n", "if", "self", ".", "is_bart", "(", ")", ":", "\n", "                    ", "trg_toks", "[", "\"input_ids\"", "]", "[", ":", ",", "0", "]", "=", "self", ".", "tok", ".", "eos_token_id", "\n", "loc", "[", "\"decoder_input_ids\"", "]", "=", "trg_toks", "[", "\"input_ids\"", "]", "\n", "", "loc", "[", "\"decoder_attention_mask\"", "]", "=", "trg_toks", "[", "\"attention_mask\"", "]", "\n", "loc", "[", "\"labels\"", "]", "=", "self", ".", "get_edit_labels", "(", "trg_toks", "[", "\"input_ids\"", "]", ")", "\n", "", "else", ":", "\n", "                ", "loc", "[", "\"input_ids\"", "]", "=", "toks", "[", "\"src_input_ids\"", "]", "[", ":", "-", "ne", "]", "\n", "loc", "[", "\"attention_mask\"", "]", "=", "toks", "[", "\"src_attention_mask\"", "]", "[", ":", "-", "ne", "]", "\n", "if", "self", ".", "is_bart", "(", ")", ":", "\n", "                    ", "loc", "[", "\"decoder_input_ids\"", "]", "=", "toks", "[", "\"trg_input_ids\"", "]", "[", ":", "-", "ne", "]", "\n", "", "loc", "[", "\"decoder_attention_mask\"", "]", "=", "toks", "[", "\"trg_attention_mask\"", "]", "[", ":", "-", "ne", "]", "\n", "loc", "[", "\"labels\"", "]", "=", "self", ".", "get_edit_labels", "(", "toks", "[", "\"trg_input_ids\"", "]", "[", ":", "-", "ne", "]", ")", "\n", "\n", "", "cond", "=", "{", "k", "[", "5", ":", "]", ":", "v", "for", "k", ",", "v", "in", "toks", ".", "items", "(", ")", "if", "k", ".", "startswith", "(", "\"cond\"", ")", "}", "\n", "\n", "batch", "=", "{", "\n", "\"edit_inner\"", ":", "edit_inner", ",", "\n", "\"edit_outer\"", ":", "edit_outer", ",", "\n", "\"loc\"", ":", "loc", ",", "\n", "\"cond\"", ":", "cond", ",", "\n", "\"raw\"", ":", "toks", "[", "\"raw\"", "]", "\n", "}", "\n", "\n", "yield", "dict_to", "(", "batch", ",", "self", ".", "config", ".", "device", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.fever.BinaryAugmentedKILT.__init__": [[13, 36], ["torch.utils.data.Dataset.__init__", "jsonlines.open", "fever.BinaryAugmentedKILT.data.append", "len", "len", "fever.BinaryAugmentedKILT.__init__.extract"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "tokenizer", ",", "\n", "data_path", ",", "\n", "config", ",", "\n", "max_length", "=", "32", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tokenizer", "=", "tokenizer", "\n", "self", ".", "data", "=", "[", "]", "\n", "self", ".", "config", "=", "config", "\n", "\n", "def", "extract", "(", "d", ")", ":", "\n", "            ", "extracted", "=", "{", "k", ":", "d", "[", "k", "]", "for", "k", "in", "[", "\"logit\"", ",", "\"input\"", ",", "\"prediction\"", ",", "\"alternatives\"", ",", "\"filtered_rephrases\"", "]", "}", "\n", "extracted", "[", "\"label\"", "]", "=", "d", "[", "\"output\"", "]", "[", "0", "]", "[", "\"answer\"", "]", "\n", "return", "extracted", "\n", "\n", "", "with", "jsonlines", ".", "open", "(", "data_path", ")", "as", "f", ":", "\n", "            ", "for", "d", "in", "f", ":", "\n", "                ", "if", "len", "(", "d", "[", "\"alternatives\"", "]", ")", ">", "0", "and", "len", "(", "d", "[", "\"filtered_rephrases\"", "]", ")", ">", "0", ":", "\n", "                    ", "self", ".", "data", ".", "append", "(", "extract", "(", "d", ")", ")", "\n", "\n", "", "", "", "self", ".", "max_length", "=", "max_length", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.fever.BinaryAugmentedKILT.__len__": [[37, 39], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.fever.BinaryAugmentedKILT.__getitem__": [[40, 63], ["random.choice"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "obj", "=", "self", ".", "data", "[", "item", "]", "\n", "rephrase", "=", "random", ".", "choice", "(", "self", ".", "data", "[", "item", "]", "[", "\"filtered_rephrases\"", "]", ")", "\n", "output", "=", "{", "\n", "\"label\"", ":", "obj", "[", "\"label\"", "]", "==", "POSITIVE_CLASS", ",", "\n", "\"src\"", ":", "obj", "[", "\"input\"", "]", ",", "\n", "\"rephrase\"", ":", "rephrase", ",", "\n", "\"pred\"", ":", "obj", "[", "\"prediction\"", "]", "==", "POSITIVE_CLASS", ",", "\n", "\"alt\"", ":", "obj", "[", "\"alternatives\"", "]", "[", "0", "]", "==", "POSITIVE_CLASS", ",", "\n", "\"cond_flip\"", ":", "\"{} >> {} || {}\"", ".", "format", "(", "\n", "obj", "[", "\"prediction\"", "]", ",", "\n", "obj", "[", "\"alternatives\"", "]", "[", "0", "]", ",", "\n", "obj", "[", "\"input\"", "]", ",", "\n", ")", ",", "\n", "\"cond_orig\"", ":", "\"{} >> {} || {}\"", ".", "format", "(", "\n", "obj", "[", "\"prediction\"", "]", ",", "\n", "obj", "[", "\"prediction\"", "]", ",", "\n", "obj", "[", "\"input\"", "]", ",", "\n", ")", ",", "\n", "\"logit\"", ":", "obj", "[", "\"logit\"", "]", ",", "\n", "}", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.fever.BinaryAugmentedKILT.collate_fn": [[64, 93], ["torch.tensor().long().view", "torch.tensor().long().view", "numpy.random.uniform", "fever.BinaryAugmentedKILT.tokenizer", "fever.BinaryAugmentedKILT.items", "torch.tensor().long", "torch.tensor().long", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "def", "collate_fn", "(", "self", ",", "batch", ")", ":", "\n", "        ", "src", "=", "[", "b", "[", "\"src\"", "]", "for", "b", "in", "batch", "]", "\n", "rephrase", "=", "[", "batch", "[", "-", "1", "]", "[", "\"rephrase\"", "]", "]", "\n", "\n", "flip_label", "=", "np", ".", "random", ".", "uniform", "(", ")", ">", "0.5", "\n", "predictions", "=", "[", "b", "[", "\"pred\"", "]", "for", "b", "in", "batch", "]", "\n", "labels", "=", "[", "b", "[", "\"label\"", "]", "for", "b", "in", "batch", "]", "\n", "labels", "[", "-", "1", "]", "=", "predictions", "[", "-", "1", "]", "# the last element in the batch is special (the edit element)", "\n", "cond", "=", "[", "batch", "[", "-", "1", "]", "[", "\"cond_orig\"", "]", "]", "\n", "if", "flip_label", ":", "\n", "            ", "labels", "[", "-", "1", "]", "=", "batch", "[", "-", "1", "]", "[", "\"alt\"", "]", "\n", "cond", "=", "[", "batch", "[", "-", "1", "]", "[", "\"cond_flip\"", "]", "]", "\n", "\n", "", "batches", "=", "{", "}", "\n", "for", "k1", ",", "v1", "in", "{", "\"\"", ":", "src", ",", "\"cond_\"", ":", "cond", ",", "\"rephrase_\"", ":", "rephrase", "}", ".", "items", "(", ")", ":", "\n", "            ", "encoded", "=", "self", ".", "tokenizer", "(", "\n", "v1", ",", "\n", "return_tensors", "=", "\"pt\"", ",", "\n", "padding", "=", "True", ",", "\n", "max_length", "=", "self", ".", "max_length", ",", "\n", "truncation", "=", "True", ",", "\n", ")", "\n", "for", "k2", ",", "v2", "in", "encoded", ".", "items", "(", ")", ":", "\n", "                ", "batches", "[", "f\"{k1}{k2}\"", "]", "=", "v2", "\n", "\n", "", "", "batches", "[", "\"predictions\"", "]", "=", "torch", ".", "tensor", "(", "predictions", ")", ".", "long", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "batches", "[", "\"labels\"", "]", "=", "torch", ".", "tensor", "(", "labels", ")", ".", "long", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "batches", "[", "\"raw\"", "]", "=", "batch", "\n", "return", "batches", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.fever.BinaryAugmentedKILT.edit_generator": [[94, 123], ["utils.EditBatchSampler", "len", "utils.EditBatchSampler.sample", "fever.BinaryAugmentedKILT.collate_fn", "len", "utils.dict_to", "fever.BinaryAugmentedKILT.items", "fever.BinaryAugmentedKILT.items"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EditBatchSampler.sample", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.fever.BinaryAugmentedKILT.collate_fn", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.dict_to"], ["", "def", "edit_generator", "(", "self", ",", "batch_size", ",", "n", "=", "None", ")", ":", "\n", "        ", "if", "n", "is", "None", ":", "\n", "            ", "n", "=", "len", "(", "self", ")", "\n", "", "sampler", "=", "EditBatchSampler", "(", "n", ",", "memorize_mode", "=", "self", ".", "config", ".", "single_batch", ",", "seed", "=", "self", ".", "config", ".", "seed", ")", "\n", "while", "True", ":", "\n", "            ", "edit_idxs", ",", "loc_idxs", "=", "sampler", ".", "sample", "(", "batch_size", ")", "\n", "assert", "len", "(", "edit_idxs", ")", "==", "1", "\n", "idxs", "=", "loc_idxs", "+", "edit_idxs", "\n", "toks", "=", "self", ".", "collate_fn", "(", "[", "self", "[", "idx", "]", "for", "idx", "in", "idxs", "]", ")", "\n", "\n", "pass_keys", "=", "[", "\"input_ids\"", ",", "\"attention_mask\"", ",", "\"labels\"", "]", "\n", "edit_inner", "=", "{", "k", ":", "v", "[", "-", "1", ":", "]", "for", "k", ",", "v", "in", "toks", ".", "items", "(", ")", "if", "k", "in", "pass_keys", "}", "\n", "if", "self", ".", "config", ".", "data", ".", "rephrase", ":", "\n", "                ", "edit_outer", "=", "{", "}", "\n", "edit_outer", "[", "\"input_ids\"", "]", "=", "toks", "[", "\"rephrase_input_ids\"", "]", "\n", "edit_outer", "[", "\"attention_mask\"", "]", "=", "toks", "[", "\"rephrase_attention_mask\"", "]", "\n", "edit_outer", "[", "\"labels\"", "]", "=", "edit_inner", "[", "\"labels\"", "]", "\n", "", "else", ":", "\n", "                ", "edit_outer", "=", "edit_inner", "\n", "", "loc", "=", "{", "k", ":", "v", "[", ":", "-", "1", "]", "for", "k", ",", "v", "in", "toks", ".", "items", "(", ")", "if", "k", "in", "pass_keys", "}", "\n", "cond", "=", "{", "\"input_ids\"", ":", "toks", "[", "\"cond_input_ids\"", "]", ",", "\"attention_mask\"", ":", "toks", "[", "\"cond_attention_mask\"", "]", "}", "\n", "\n", "batch", "=", "{", "\n", "\"edit_inner\"", ":", "edit_inner", ",", "\n", "\"edit_outer\"", ":", "edit_outer", ",", "\n", "\"loc\"", ":", "loc", ",", "\n", "\"cond\"", ":", "cond", "\n", "}", "\n", "yield", "dict_to", "(", "batch", ",", "self", ".", "config", ".", "device", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__init__": [[29, 64], ["LOG.info", "wiki.filter_text", "len", "len", "LOG.info", "datasets.load_dataset", "open", "json.load", "LOG.info", "int", "datasets.load_dataset", "utils.scr", "len", "utils.scr"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.filter_text", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.scr", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.scr"], ["    ", "def", "__init__", "(", "self", ",", "split", ":", "str", ",", "tokenizer", ",", "config", ",", "edit_path", ":", "str", ",", "\n", "pct", ":", "int", "=", "10", ",", "max_length", ":", "int", "=", "200", ")", ":", "\n", "        ", "version", "=", "'wikitext-103-raw-v1'", "\n", "split_str", "=", "f'{split}[:{pct}%]'", "if", "split", "==", "\"train\"", "else", "split", "\n", "LOG", ".", "info", "(", "f\"Loading wikitext version {version}, split {split_str}\"", ")", "\n", "base_samples", "=", "load_dataset", "(", "\n", "'wikitext'", ",", "\n", "version", ",", "\n", "cache_dir", "=", "scr", "(", ")", ",", "\n", "split", "=", "split_str", "\n", ")", "[", "\"text\"", "]", "\n", "self", ".", "base_samples", "=", "filter_text", "(", "base_samples", ")", "\n", "with", "open", "(", "edit_path", "+", "split", "[", ":", "5", "]", "+", "\".json\"", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "self", ".", "edit_samples", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "self", ".", "tok", "=", "tokenizer", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "max_length", "=", "max_length", "\n", "self", ".", "n_tokens", "=", "self", ".", "edit_samples", "[", "\"n_tokens\"", "]", "\n", "\n", "len_base", "=", "len", "(", "self", ".", "base_samples", ")", "\n", "len_edit", "=", "len", "(", "self", ".", "edit_samples", "[", "'original'", "]", ")", "\n", "LOG", ".", "info", "(", "f\"Loaded {len_base} wiki-103 samples and {len_edit} edit samples\"", ")", "\n", "\n", "if", "config", ".", "data", ".", "wiki_webtext", ":", "\n", "            ", "self", ".", "use_wiki", "=", "True", "\n", "LOG", ".", "info", "(", "\"** Using webtext for wiki base samples **\"", ")", "\n", "webtext", "=", "load_dataset", "(", "'stas/openwebtext-10k'", ",", "split", "=", "\"train\"", ",", "cache_dir", "=", "scr", "(", ")", ")", "[", "\"text\"", "]", "\n", "n_train", "=", "int", "(", "len", "(", "webtext", ")", "*", "0.9", ")", "\n", "if", "split", "==", "\"train\"", ":", "\n", "                ", "self", ".", "base_samples", "=", "webtext", "[", ":", "n_train", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "base_samples", "=", "webtext", "[", "n_train", ":", "]", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "use_wiki", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.edit_generator": [[65, 102], ["utils.EditBatchSampler", "len", "utils.EditBatchSampler.sample", "wiki.GenDataset.tok", "wiki.GenDataset.tok", "wiki.GenDataset.get_edit_labels", "copy.deepcopy", "wiki.GenDataset.get_labels", "random.randint", "copy.deepcopy.items", "utils.dict_to", "len", "min"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.EditBatchSampler.sample", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.get_edit_labels", "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.get_labels", "home.repos.pwc.inspect_result.eric-mitchell_mend.None.utils.dict_to"], ["", "", "def", "edit_generator", "(", "self", ",", "batch_size", ",", "n", "=", "None", ")", ":", "\n", "        ", "if", "n", "is", "None", ":", "\n", "            ", "n", "=", "len", "(", "self", ")", "\n", "", "sampler", "=", "EditBatchSampler", "(", "n", ",", "memorize_mode", "=", "self", ".", "config", ".", "single_batch", ",", "loc_disjoint", "=", "not", "self", ".", "use_wiki", ",", "\n", "seed", "=", "self", ".", "config", ".", "seed", ")", "\n", "while", "True", ":", "\n", "            ", "edit_idxs", ",", "loc_idxs", "=", "sampler", ".", "sample", "(", "batch_size", ")", "\n", "\n", "edit_batch", "=", "[", "self", ".", "edit_samples", "[", "\"completions\"", "]", "[", "idx", "]", "for", "idx", "in", "edit_idxs", "]", "\n", "loc_batch", "=", "[", "self", ".", "base_samples", "[", "idx", "%", "len", "(", "self", ".", "base_samples", ")", "]", "for", "idx", "in", "loc_idxs", "]", "\n", "\n", "edit_toks", "=", "self", ".", "tok", "(", "edit_batch", ",", "padding", "=", "True", ",", "return_tensors", "=", "\"pt\"", ")", "\n", "loc_toks", "=", "self", ".", "tok", "(", "loc_batch", ",", "padding", "=", "True", ",", "return_tensors", "=", "\"pt\"", ",", "\n", "truncation", "=", "self", ".", "config", ".", "data", ".", "wiki_webtext", ",", "max_length", "=", "self", ".", "max_length", ")", "\n", "\n", "edit_inner", "=", "{", "**", "edit_toks", "}", "\n", "edit_inner", "[", "\"labels\"", "]", "=", "self", ".", "get_edit_labels", "(", "edit_toks", "[", "\"input_ids\"", "]", ")", "\n", "\n", "edit_outer", "=", "copy", ".", "deepcopy", "(", "edit_inner", ")", "\n", "if", "self", ".", "config", ".", "data", ".", "rephrase", ":", "\n", "                ", "lens", "=", "(", "edit_outer", "[", "\"input_ids\"", "]", "!=", "-", "100", ")", ".", "sum", "(", "-", "1", ")", "\n", "remove", "=", "random", ".", "randint", "(", "0", ",", "(", "min", "(", "lens", ")", "-", "self", ".", "n_tokens", ")", "//", "2", ")", "\n", "for", "k", ",", "v", "in", "edit_outer", ".", "items", "(", ")", ":", "\n", "                    ", "edit_outer", "[", "k", "]", "=", "v", "[", ":", ",", "remove", ":", "]", "\n", "\n", "", "", "loc", "=", "{", "**", "loc_toks", "}", "\n", "loc", "[", "\"labels\"", "]", "=", "self", ".", "get_labels", "(", "loc_toks", "[", "\"input_ids\"", "]", ")", "\n", "cond", "=", "{", "**", "edit_toks", "}", "\n", "\n", "batch", "=", "{", "\n", "\"edit_inner\"", ":", "edit_inner", ",", "\n", "\"edit_outer\"", ":", "edit_outer", ",", "\n", "\"loc\"", ":", "loc", ",", "\n", "\"cond\"", ":", "cond", "\n", "}", "\n", "\n", "yield", "dict_to", "(", "batch", ",", "self", ".", "config", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__len__": [[103, 105], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "edit_samples", "[", "\"original\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset._check_padding": [[106, 109], ["ValueError"], "methods", ["None"], ["", "def", "_check_padding", "(", "self", ",", "ids", ")", ":", "\n", "        ", "if", "(", "ids", "[", ":", ",", "0", "]", "==", "self", ".", "tok", ".", "pad_token_id", ")", ".", "any", "(", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Left-padding not supported for GPT2\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.get_edit_labels": [[110, 119], ["wiki.GenDataset._check_padding", "ids.clone", "enumerate"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset._check_padding"], ["", "", "def", "get_edit_labels", "(", "self", ",", "ids", ")", ":", "\n", "        ", "self", ".", "_check_padding", "(", "ids", ")", "\n", "\n", "labels", "=", "ids", ".", "clone", "(", ")", "\n", "end_idxs", "=", "(", "labels", "!=", "self", ".", "tok", ".", "pad_token_id", ")", ".", "sum", "(", "-", "1", ")", "\n", "for", "batch_idx", ",", "end_idx", "in", "enumerate", "(", "end_idxs", ")", ":", "\n", "            ", "labels", "[", "batch_idx", ",", ":", "end_idx", "-", "self", ".", "n_tokens", "]", "=", "-", "100", "\n", "", "labels", "[", "labels", "==", "self", ".", "tok", ".", "pad_token_id", "]", "=", "-", "100", "\n", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.get_labels": [[120, 124], ["wiki.GenDataset._check_padding", "ids.masked_fill"], "methods", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset._check_padding"], ["", "def", "get_labels", "(", "self", ",", "ids", ")", ":", "\n", "        ", "self", ".", "_check_padding", "(", "ids", ")", "\n", "\n", "return", "ids", ".", "masked_fill", "(", "ids", "==", "self", ".", "tok", ".", "pad_token_id", ",", "-", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.GenDataset.__getitem__": [[125, 127], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "base_samples", "[", "idx", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.is_ascii": [[12, 14], ["all", "ord"], "function", ["None"], ["def", "is_ascii", "(", "s", ")", ":", "\n", "    ", "return", "all", "(", "ord", "(", "c", ")", "<", "128", "for", "c", "in", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.filter_text": [[16, 26], ["valid.append", "len", "wiki.is_ascii", "text.split"], "function", ["home.repos.pwc.inspect_result.eric-mitchell_mend.data_classes.wiki.is_ascii"], ["", "def", "filter_text", "(", "iterator", ")", ":", "\n", "    ", "valid", "=", "[", "]", "\n", "for", "text", "in", "iterator", ":", "\n", "        ", "if", "len", "(", "text", ".", "split", "(", "' '", ")", ")", "<", "50", ":", "\n", "            ", "continue", "\n", "", "if", "not", "is_ascii", "(", "text", ")", ":", "\n", "            ", "continue", "\n", "", "valid", ".", "append", "(", "text", ")", "\n", "\n", "", "return", "valid", "\n", "\n"]]}