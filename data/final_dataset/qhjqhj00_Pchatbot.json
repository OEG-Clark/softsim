{"home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.statistics.Statistics.__init__": [[7, 9], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.statistics.Statistics.get_bucket": [[10, 23], ["pow", "print", "enumerate", "max", "min", "max", "print", "len", "str", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_bucket", "(", "data", ",", "bucket_num", "=", "10", ")", ":", "\n", "        ", "_max", ",", "_min", "=", "max", "(", "data", ")", ",", "min", "(", "data", ")", "\n", "base", "=", "pow", "(", "10", ",", "max", "(", "len", "(", "str", "(", "_max", ")", ")", "-", "1", ",", "1", ")", ")", "\n", "ceil", "=", "(", "(", "_max", "-", "1", ")", "//", "base", "+", "1", ")", "*", "base", "\n", "bucket_range", "=", "ceil", "//", "bucket_num", "\n", "bucket_cnt", "=", "[", "0", "]", "*", "bucket_num", "\n", "for", "d", "in", "data", ":", "\n", "            ", "bucket_cnt", "[", "(", "d", "-", "1", ")", "//", "bucket_range", "]", "+=", "1", "\n", "\n", "", "print", "(", "f\"Min length : {_min}, Max length : {_max}\"", ")", "\n", "for", "i", ",", "cnt", "in", "enumerate", "(", "bucket_cnt", ")", ":", "\n", "            ", "print", "(", "f\"{i*bucket_range: >4} - {(i+1)*bucket_range: >4} \\t {cnt: >9} items.\\t{100.0*cnt/len(data):.2f}%\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.statistics.Statistics.stat_data": [[24, 46], ["len", "list", "print", "print", "statistics.Statistics.get_bucket", "print", "statistics.Statistics.get_bucket", "print", "statistics.Statistics.get_bucket", "map", "sum", "len", "bucket_post.append", "bucket_resp.extend", "[].split", "len", "r[].split"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.get_bucket", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.get_bucket", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.get_bucket"], ["", "", "@", "staticmethod", "\n", "def", "stat_data", "(", "data", ")", ":", "\n", "        ", "post_num", "=", "len", "(", "data", ")", "\n", "resp_num_list", "=", "list", "(", "map", "(", "len", ",", "data", ")", ")", "\n", "resp_num", "=", "sum", "(", "resp_num_list", ")", "-", "post_num", "\n", "print", "(", "f\"Posts: {post_num}\\n\"", "+", "f\"Respones: {resp_num}\\n\"", "+", "f\"Resps per Post Avg :{1.0*resp_num/post_num:.2f}\"", ")", "\n", "print", "(", "\"Resps Per Post Distribute:\"", ")", "\n", "Statistics", ".", "get_bucket", "(", "resp_num_list", ")", "\n", "\n", "bucket_post", ",", "bucket_resp", "=", "[", "]", ",", "[", "]", "\n", "for", "item", "in", "data", ":", "\n", "            ", "post_len", "=", "len", "(", "item", "[", "0", "]", "[", "0", "]", ".", "split", "(", "' '", ")", ")", "\n", "resp_len_list", "=", "[", "len", "(", "r", "[", "0", "]", ".", "split", "(", "' '", ")", ")", "for", "r", "in", "item", "[", "1", ":", "]", "]", "\n", "bucket_post", ".", "append", "(", "post_len", ")", "\n", "bucket_resp", ".", "extend", "(", "resp_len_list", ")", "\n", "\n", "", "print", "(", "\"\\nPost Distribute:\"", ")", "\n", "Statistics", ".", "get_bucket", "(", "bucket_post", ")", "\n", "print", "(", "\"\\nReponse Distribute:\"", ")", "\n", "Statistics", ".", "get_bucket", "(", "bucket_resp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.statistics.Statistics.stat_all": [[47, 61], ["set", "set", "set", "print", "set.add", "set.add", "set.add", "resp.append", "len", "len", "len", "len", "len", "len", "len", "len", "len", "subs[].split", "subs[].split"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "stat_all", "(", "data", ")", ":", "\n", "        ", "post", "=", "set", "(", ")", "\n", "post_user", "=", "set", "(", ")", "\n", "resp_user", "=", "set", "(", ")", "\n", "resp", "=", "[", "]", "\n", "words", "=", "0", "\n", "for", "subs", "in", "data", ":", "\n", "            ", "post", ".", "add", "(", "subs", "[", "0", "]", ")", "\n", "post_user", ".", "add", "(", "subs", "[", "1", "]", ")", "\n", "resp_user", ".", "add", "(", "subs", "[", "4", "]", ")", "\n", "resp", ".", "append", "(", "subs", "[", "3", "]", ")", "\n", "words", "+=", "len", "(", "subs", "[", "0", "]", ".", "split", "(", "' '", ")", ")", "+", "len", "(", "subs", "[", "4", "]", ".", "split", "(", "' '", ")", ")", "\n", "", "print", "(", "'post: '", ",", "len", "(", "post", ")", ",", "'resp: '", ",", "len", "(", "resp", ")", ",", "'#user in post: '", ",", "len", "(", "post_user", ")", ",", "'#user in resp: '", ",", "len", "(", "resp_user", ")", ",", "'avg. #resp per post: '", ",", "len", "(", "resp", ")", "/", "len", "(", "post", ")", ",", "'woeds: '", ",", "words", ",", "'avg. #words per pair: '", ",", "words", "/", "len", "(", "resp", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.split_user.Split.__init__": [[9, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.split_user.Split.split_data": [[12, 16], ["split_user.Split.load", "split_user.Split.filter_data", "split_user.Split.get_user_data"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.craw_specific.load", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.split_user.Split.filter_data", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.split_user.Split.get_user_data"], ["", "def", "split_data", "(", "self", ")", ":", "\n", "        ", "data", "=", "self", ".", "load", "(", "self", ".", "args", ".", "data_fp", ",", "patition", "=", "[", "'1'", "]", ")", "\n", "data", "=", "self", ".", "filter_data", "(", "data", ")", "\n", "self", ".", "get_user_data", "(", "self", ".", "args", ".", "user_data_dir", ",", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.split_user.Split.load": [[17, 39], ["re.search", "open", "tqdm.tqdm.tqdm", "len", "subs[].split", "line.strip().split", "line.strip().split", "len", "data.append", "line.strip", "split_user.Split.load.clean"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "fp", ",", "patition", "=", "None", ")", ":", "\n", "        ", "def", "clean", "(", "subs", ")", ":", "\n", "            ", "if", "re", ".", "search", "(", "r'\u3010.*\u3011'", ",", "subs", "[", "0", "]", ")", ":", "return", "False", "\n", "if", "len", "(", "subs", "[", "0", "]", ".", "split", "(", "' '", ")", ")", ">", "60", ":", "return", "False", "\n", "return", "True", "\n", "", "data", "=", "[", "]", "\n", "cnt", "=", "0", "\n", "with", "open", "(", "fp", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "tqdm", "(", "f", ",", "desc", "=", "\"Load Data: \"", ")", ":", "\n", "                ", "cnt", "+=", "1", "\n", "if", "not", "cnt", "%", "2", ":", "\n", "                    ", "subs", "+=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "assert", "len", "(", "subs", ")", "==", "8", "\n", "if", "not", "patition", ":", "\n", "                        ", "data", ".", "append", "(", "subs", ")", "\n", "", "elif", "subs", "[", "6", "]", "==", "patition", "or", "subs", "[", "6", "]", "in", "patition", ":", "\n", "                        ", "if", "clean", "(", "subs", ")", ":", "\n", "                            ", "data", ".", "append", "(", "subs", ")", "\n", "", "", "else", ":", "break", "\n", "", "else", ":", "\n", "                    ", "subs", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.split_user.Split.filter_data": [[40, 46], ["collections.Counter", "collections.Counter", "statistics.Statistics.get_bucket", "collections.Counter.values"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.get_bucket"], ["", "def", "filter_data", "(", "self", ",", "data", ")", ":", "\n", "        ", "history_cnt", "=", "Counter", "(", "[", "subs", "[", "4", "]", "for", "subs", "in", "data", "]", ")", "\n", "data", "=", "[", "subs", "for", "subs", "in", "data", "if", "60", "<=", "history_cnt", "[", "subs", "[", "4", "]", "]", "<=", "1000", "]", "\n", "history_cnt", "=", "Counter", "(", "[", "subs", "[", "4", "]", "for", "subs", "in", "data", "]", ")", "\n", "Statistics", ".", "get_bucket", "(", "history_cnt", ".", "values", "(", ")", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.split_user.Split.get_user_data": [[47, 58], ["collections.defaultdict", "tqdm.tqdm.tqdm", "tqdm.tqdm.tqdm", "os.path.exists", "os.makedirs", "user_data[].append", "collections.defaultdict.items", "open", "fp.write", "os.path.join", "json.dumps", "str"], "methods", ["None"], ["", "def", "get_user_data", "(", "self", ",", "model_data_dir", ",", "data", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "model_data_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "model_data_dir", ")", "\n", "", "user_data", "=", "defaultdict", "(", "list", ")", "\n", "#p, pid, ptime, u, uid, utime, part, train/dev/test", "\n", "for", "subs", "in", "tqdm", "(", "data", ")", ":", "\n", "            ", "sub", "=", "subs", "[", ":", "6", "]", "\n", "user_data", "[", "subs", "[", "4", "]", "]", ".", "append", "(", "sub", ")", "\n", "", "for", "k", ",", "v", "in", "tqdm", "(", "user_data", ".", "items", "(", ")", ",", "desc", "=", "\"Store\"", ")", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "model_data_dir", ",", "str", "(", "k", ")", ")", ",", "'w'", ")", "as", "fp", ":", "\n", "                ", "fp", ".", "write", "(", "json", ".", "dumps", "(", "v", ",", "ensure_ascii", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "data_fp", "=", "self", ".", "args", ".", "user_data_dir", "\n", "self", ".", "model_data_dir", "=", "self", ".", "args", ".", "model_data_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.generate": [[15, 23], ["data_byusers_generator.Generator.load", "data_byusers_generator.Generator.store_data", "data_byusers_generator.Generator.store_data", "data_byusers_generator.Generator.store_data", "data_byusers_generator.Generator.store_data", "data_byusers_generator.Generator.store_data", "data_byusers_generator.Generator.store_data"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.craw_specific.load", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.store_data", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.store_data", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.store_data", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.store_data", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.store_data", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.store_data"], ["", "def", "generate", "(", "self", ")", ":", "\n", "        ", "train_data", ",", "dev_data", ",", "test_data", ",", "train_his_data", ",", "dev_his_data", ",", "test_his_data", "=", "self", ".", "load", "(", "self", ".", "data_fp", ")", "\n", "self", ".", "store_data", "(", "train_data", ",", "self", ".", "model_data_dir", ",", "'train'", ")", "\n", "self", ".", "store_data", "(", "dev_data", ",", "self", ".", "model_data_dir", ",", "'dev'", ")", "\n", "self", ".", "store_data", "(", "test_data", ",", "self", ".", "model_data_dir", ",", "'test'", ")", "\n", "self", ".", "store_data", "(", "train_his_data", ",", "self", ".", "model_data_dir", ",", "'train_his'", ")", "\n", "self", ".", "store_data", "(", "dev_his_data", ",", "self", ".", "model_data_dir", ",", "'dev_his'", ")", "\n", "self", ".", "store_data", "(", "test_his_data", ",", "self", ".", "model_data_dir", ",", "'test_his'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.gen_history": [[24, 34], ["len", "len", "random.sample"], "methods", ["None"], ["", "def", "gen_history", "(", "self", ",", "user_data", ")", ":", "\n", "        ", "max_memory", "=", "15", "\n", "if", "len", "(", "user_data", ")", "==", "0", ":", "\n", "            ", "return", "[", "]", "\n", "", "else", ":", "\n", "            ", "if", "len", "(", "user_data", ")", ">", "max_memory", ":", "\n", "                ", "choose_memory", "=", "random", ".", "sample", "(", "user_data", ",", "max_memory", ")", "\n", "return", "choose_memory", "\n", "", "else", ":", "\n", "                ", "return", "user_data", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.load": [[35, 74], ["sorted", "tqdm.tqdm.tqdm", "os.listdir", "re.search", "open", "json.loads", "train_data.extend", "train_his_data.extend", "dev_data.extend", "dev_his_data.extend", "test_data.extend", "test_his_data.extend", "open.close", "os.path.join", "open.read", "data_byusers_generator.Generator.load.clean"], "methods", ["None"], ["", "", "", "def", "load", "(", "self", ",", "in_path", ")", ":", "\n", "        ", "filenames", "=", "sorted", "(", "os", ".", "listdir", "(", "in_path", ")", ")", "\n", "def", "clean", "(", "subs", ")", ":", "\n", "            ", "if", "re", ".", "search", "(", "r'\u3010.*\u3011'", ",", "subs", "[", "0", "]", ")", ":", "return", "False", "\n", "if", "len", "(", "subs", "[", "0", "]", ".", "split", "(", "' '", ")", ")", ">", "50", "or", "len", "(", "subs", "[", "3", "]", ".", "split", "(", "' '", ")", ")", ">", "50", ":", "return", "False", "\n", "return", "True", "\n", "", "train_data", "=", "[", "]", "\n", "dev_data", "=", "[", "]", "\n", "test_data", "=", "[", "]", "\n", "train_his_data", "=", "[", "]", "\n", "dev_his_data", "=", "[", "]", "\n", "test_his_data", "=", "[", "]", "\n", "cnt", "=", "0", "\n", "user", "=", "0", "\n", "for", "filename", "in", "tqdm", "(", "filenames", ")", ":", "\n", "            ", "fhand", "=", "open", "(", "os", ".", "path", ".", "join", "(", "in_path", ",", "filename", ")", ")", "\n", "fdata", "=", "json", ".", "loads", "(", "fhand", ".", "read", "(", ")", ")", "\n", "user", "+=", "1", "\n", "user_data", "=", "[", "]", "\n", "user_history", "=", "[", "]", "\n", "if", "user", ">", "300000", ":", "\n", "                ", "break", "\n", "", "for", "subs", "in", "fdata", ":", "\n", "                ", "cnt", "+=", "1", "\n", "assert", "len", "(", "subs", ")", "==", "6", "\n", "if", "clean", "(", "subs", ")", ":", "\n", "                    ", "his", "=", "self", ".", "gen_history", "(", "copy", ".", "deepcopy", "(", "user_data", ")", ")", "\n", "user_history", ".", "append", "(", "his", ")", "\n", "user_data", ".", "append", "(", "subs", ")", "\n", "", "", "if", "len", "(", "user_data", ")", "<", "4", ":", "\n", "                ", "continue", "\n", "", "train_data", ".", "extend", "(", "user_data", "[", ":", "-", "4", "]", ")", "\n", "train_his_data", ".", "extend", "(", "user_history", "[", ":", "-", "4", "]", ")", "\n", "dev_data", ".", "extend", "(", "user_data", "[", "-", "4", ":", "-", "2", "]", ")", "\n", "dev_his_data", ".", "extend", "(", "user_history", "[", "-", "4", ":", "-", "2", "]", ")", "\n", "test_data", ".", "extend", "(", "user_data", "[", "-", "2", ":", "]", ")", "\n", "test_his_data", ".", "extend", "(", "user_history", "[", "-", "2", ":", "]", ")", "\n", "fhand", ".", "close", "(", ")", "\n", "", "return", "train_data", ",", "dev_data", ",", "test_data", ",", "train_his_data", ",", "dev_his_data", ",", "test_his_data", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.store_data": [[75, 106], ["os.path.exists", "os.makedirs", "os.path.exists", "os.mkdir", "phase.split", "open", "open", "open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "fpost.write", "fresp.write", "len", "phase.split", "open.write", "len"], "methods", ["None"], ["", "def", "store_data", "(", "self", ",", "data", ",", "model_data_dir", ",", "phase", ")", ":", "\n", "        ", "post", ",", "resp", ",", "user", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "label", "=", "''", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_data_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "model_data_dir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "model_data_dir", ",", "phase", ".", "split", "(", "'_'", ")", "[", "0", "]", ")", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "os", ".", "path", ".", "join", "(", "model_data_dir", ",", "phase", ")", ")", "\n", "", "if", "'his'", "in", "phase", ":", "\n", "            ", "phase", ",", "label", "=", "phase", ".", "split", "(", "'_'", ")", "\n", "", "else", ":", "\n", "            ", "label", "=", "phase", "\n", "fuser", "=", "open", "(", "os", ".", "path", ".", "join", "(", "model_data_dir", ",", "phase", ",", "'resp_id.'", "+", "phase", ")", ",", "'w'", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "model_data_dir", ",", "phase", ",", "'post.'", "+", "label", ")", ",", "'w'", ")", "as", "fpost", ",", "open", "(", "os", ".", "path", ".", "join", "(", "model_data_dir", ",", "phase", ",", "'resp.'", "+", "label", ")", ",", "'w'", ")", "as", "fresp", ":", "\n", "            ", "for", "line", "in", "data", ":", "\n", "                ", "if", "len", "(", "line", ")", "==", "0", ":", "\n", "                    ", "p", ",", "r", ",", "r_uid", "=", "'<\\s>'", ",", "'<\\s>'", ",", "'<\\s>'", "\n", "", "elif", "label", "!=", "'his'", ":", "\n", "                    ", "p", ",", "p_uid", ",", "p_time", ",", "r", ",", "r_uid", ",", "r_time", "=", "line", "\n", "fuser", ".", "write", "(", "r_uid", "+", "'\\n'", ")", "\n", "", "else", ":", "\n", "                    ", "p", ",", "r", "=", "''", ",", "''", "\n", "for", "his", "in", "line", ":", "\n", "                        ", "p_his", ",", "p_uid", ",", "p_time", ",", "r_his", ",", "r_uid", ",", "r_time", "=", "his", "\n", "if", "len", "(", "p", ")", "==", "0", ":", "\n", "                            ", "p", ",", "r", "=", "p_his", ",", "r_his", "\n", "", "else", ":", "\n", "                            ", "p", "+=", "'\\t'", "+", "p_his", "\n", "r", "+=", "'\\t'", "+", "r_his", "\n", "", "", "", "fpost", ".", "write", "(", "p", "+", "'\\n'", ")", "\n", "fresp", ".", "write", "(", "r", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.pipeline.set_args": [[5, 14], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "set_args", "(", ")", ":", "\n", "    ", "\"\"\"\n    Sets up the training arguments.\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--data_fp'", ",", "default", "=", "'../data/sample.txt'", ",", "type", "=", "str", ",", "required", "=", "False", ",", "help", "=", "'source data directory'", ")", "\n", "parser", ".", "add_argument", "(", "'--user_data_dir'", ",", "default", "=", "'../data/sample_byuser_filter'", ",", "type", "=", "str", ",", "required", "=", "False", ",", "help", "=", "'user data directory'", ")", "\n", "parser", ".", "add_argument", "(", "'--model_data_dir'", ",", "default", "=", "'../data/sample_datasets'", ",", "type", "=", "str", ",", "required", "=", "False", ",", "help", "=", "'model data directory'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.pipeline.main": [[15, 23], ["pipeline.set_args", "split_user.Split", "split_user.Split.split_data", "data_byusers_generator.Generator", "data_byusers_generator.Generator.generate"], "function", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.pipeline.set_args", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.split_user.Split.split_data", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.data_byusers_generator.Generator.generate"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "set_args", "(", ")", "\n", "# split data to user file", "\n", "s", "=", "Split", "(", "args", ")", "\n", "s", ".", "split_data", "(", ")", "\n", "# use user data to generate train/dev/test", "\n", "g", "=", "Generator", "(", "args", ")", "\n", "g", ".", "generate", "(", ")", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.vocab.get_data_vocab": [[10, 22], ["text.split", "sorted", "vocab_dic.get", "vocab_dic.items"], "function", ["None"], ["def", "get_data_vocab", "(", "data", ",", "vocab_num", "=", "40000", ")", ":", "\n", "# <unk> <s> </s> first", "\n", "# format data/src_vocab_file", "\n", "    ", "vocab_dic", "=", "{", "}", "\n", "for", "text", "in", "data", ":", "\n", "        ", "words", "=", "text", ".", "split", "(", "' '", ")", "\n", "for", "w", "in", "words", ":", "\n", "            ", "if", "not", "w", ":", "continue", "\n", "vocab_dic", "[", "w", "]", "=", "vocab_dic", ".", "get", "(", "w", ",", "0", ")", "+", "1", "\n", "", "", "vocab", "=", "[", "k", "for", "k", ",", "_", "in", "sorted", "(", "vocab_dic", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "-", "x", "[", "1", "]", ")", "]", "\n", "# vocab = ['<unk>', '<s>', '</s>'] + vocab[:vocab_num - 3]", "\n", "return", "vocab", "[", ":", "vocab_num", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.vocab.get_userID_vocab": [[23, 28], ["collections.Counter", "sorted", "collections.Counter.items"], "function", ["None"], ["", "def", "get_userID_vocab", "(", "data", ",", "vocab_num", "=", "80000", ")", ":", "\n", "    ", "vocab_dic", "=", "Counter", "(", "data", ")", "\n", "vocab", "=", "[", "k", "for", "k", ",", "_", "in", "sorted", "(", "vocab_dic", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "-", "x", "[", "1", "]", ")", "]", "\n", "# vocab = ['<unk>'] + vocab[:vocab_num-1]", "\n", "return", "vocab", "[", ":", "vocab_num", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.vocab.load_data": [[29, 40], ["open", "open", "open", "zip", "len", "len", "len", "os.path.join", "os.path.join", "os.path.join", "post.append", "resp.append", "resp_userID.append", "p.strip", "r.strip", "u.strip"], "function", ["None"], ["", "def", "load_data", "(", "raw_data", ")", ":", "\n", "    ", "post", ",", "resp", "=", "[", "]", ",", "[", "]", "\n", "resp_userID", "=", "[", "]", "\n", "phase", "=", "'train'", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "raw_data", ",", "'post.'", "+", "phase", ")", ",", "'r'", ")", "as", "fpost", ",", "open", "(", "os", ".", "path", ".", "join", "(", "raw_data", ",", "'resp.'", "+", "phase", ")", ",", "'r'", ")", "as", "fresp", ",", "open", "(", "os", ".", "path", ".", "join", "(", "raw_data", ",", "'resp_id.'", "+", "phase", ")", ",", "'r'", ")", "as", "fuser", ":", "\n", "        ", "for", "p", ",", "r", ",", "u", "in", "zip", "(", "fpost", ",", "fresp", ",", "fuser", ")", ":", "\n", "            ", "post", ".", "append", "(", "p", ".", "strip", "(", ")", ")", "\n", "resp", ".", "append", "(", "r", ".", "strip", "(", ")", ")", "\n", "resp_userID", ".", "append", "(", "u", ".", "strip", "(", ")", ")", "\n", "", "", "assert", "len", "(", "post", ")", "==", "len", "(", "resp", ")", "==", "len", "(", "resp_userID", ")", "\n", "return", "post", ",", "resp", ",", "resp_userID", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.src.vocab.save_data": [[41, 46], ["print", "open", "tqdm.tqdm", "f.write"], "function", ["None"], ["", "def", "save_data", "(", "fp", ",", "data", ")", ":", "\n", "    ", "print", "(", "f\"Save {fp}\"", ")", "\n", "with", "open", "(", "fp", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "text", "in", "tqdm", "(", "data", ")", ":", "\n", "            ", "f", ".", "write", "(", "text", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.__init__": [[12, 18], ["utils.filter.Filter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "filter_obj", "=", "None", ")", ":", "\n", "        ", "if", "not", "filter_obj", ":", "\n", "            ", "filter_obj", "=", "Filter", "(", ")", "\n", "", "self", ".", "filter_obj", "=", "filter_obj", "\n", "self", ".", "post2freq", "=", "{", "}", "\n", "self", ".", "resp2freq", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.load": [[19, 29], ["open", "json.loads", "data.append", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "load", "(", "fp", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "with", "open", "(", "fp", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "subs", "=", "json", ".", "loads", "(", "line", ")", "\n", "if", "len", "(", "subs", ")", "<=", "1", ":", "\n", "                    ", "continue", "\n", "", "data", ".", "append", "(", "subs", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.save": [[30, 38], ["open", "len", "f.write", "json.dumps"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "save", "(", "fp", ",", "data", ")", ":", "\n", "        ", "if", "not", "data", ":", "\n", "            ", "return", "\"No Data.\"", "\n", "", "with", "open", "(", "fp", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "data", ":", "\n", "                ", "if", "len", "(", "line", ")", ">", "1", ":", "\n", "                    ", "f", ".", "write", "(", "json", ".", "dumps", "(", "line", ",", "ensure_ascii", "=", "False", ")", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.update_data": [[39, 49], ["zip", "len", "len", "new_line.append"], "methods", ["None"], ["", "", "", "", "@", "staticmethod", "\n", "def", "update_data", "(", "data", ",", "infos", ")", ":", "\n", "        ", "assert", "len", "(", "data", ")", "==", "len", "(", "infos", ")", "\n", "if", "not", "infos", "[", "0", "]", ":", "return", "[", "]", "\n", "new_line", "=", "[", "]", "\n", "for", "item", ",", "info", "in", "zip", "(", "data", ",", "infos", ")", ":", "\n", "            ", "if", "info", ":", "\n", "                ", "item", "[", "0", "]", "=", "info", "\n", "new_line", ".", "append", "(", "item", ")", "\n", "", "", "return", "new_line", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.local_preprocess": [[50, 66], ["preprocessor.Preprocessor.filter_obj.single_text_pipe", "preprocessor.Preprocessor.filter_obj.text2frequency", "enumerate", "preprocessor.Preprocessor.update_data", "preprocessor.Preprocessor.filter_obj.single_text_pipe", "len", "preprocessor.Preprocessor.filter_obj.reread_machine_unit", "preprocessor.Preprocessor.filter_obj.balance_length_unit"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.single_text_pipe", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.text2frequency", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.update_data", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.single_text_pipe", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.reread_machine_unit", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.balance_length_unit"], ["", "def", "local_preprocess", "(", "self", ",", "line", ")", ":", "\n", "        ", "post", "=", "self", ".", "filter_obj", ".", "single_text_pipe", "(", "line", "[", "0", "]", "[", "0", "]", ")", "\n", "if", "not", "post", ":", "return", "[", "]", "\n", "\n", "texts", "=", "[", "self", ".", "filter_obj", ".", "single_text_pipe", "(", "item", "[", "0", "]", ")", "for", "item", "in", "line", "]", "\n", "threshold", "=", "self", ".", "filter_obj", ".", "max_reread_patience", "\n", "rereader_killer", "=", "self", ".", "filter_obj", ".", "text2frequency", "(", "texts", "[", "1", ":", "]", ",", "threshold", ")", "\n", "for", "idx", ",", "r", "in", "enumerate", "(", "texts", "[", "1", ":", "]", ",", "start", "=", "1", ")", ":", "\n", "            ", "if", "r", ":", "r", "=", "self", ".", "filter_obj", ".", "reread_machine_unit", "(", "r", ",", "rereader_killer", ")", "\n", "if", "r", ":", "r", "=", "self", ".", "filter_obj", ".", "balance_length_unit", "(", "post", ",", "r", ")", "\n", "texts", "[", "idx", "]", "=", "r", "\n", "\n", "", "new_line", "=", "self", ".", "update_data", "(", "line", ",", "texts", ")", "\n", "if", "len", "(", "new_line", ")", ">", "1", ":", "\n", "            ", "return", "new_line", "\n", "", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.global_preprocess": [[67, 79], ["preprocessor.Preprocessor.filter_obj.clip_text_freq_unit", "enumerate", "preprocessor.Preprocessor.update_data", "len", "preprocessor.Preprocessor.filter_obj.clip_text_freq_unit"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.clip_text_freq_unit", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.update_data", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.clip_text_freq_unit"], ["", "def", "global_preprocess", "(", "self", ",", "line", ")", ":", "\n", "        ", "texts", "=", "[", "item", "[", "0", "]", "for", "item", "in", "line", "]", "\n", "texts", "[", "0", "]", "=", "self", ".", "filter_obj", ".", "clip_text_freq_unit", "(", "texts", "[", "0", "]", ",", "self", ".", "post2freq", ")", "\n", "if", "not", "texts", "[", "0", "]", ":", "\n", "            ", "return", "[", "]", "\n", "", "for", "idx", ",", "r", "in", "enumerate", "(", "texts", "[", "1", ":", "]", ",", "start", "=", "1", ")", ":", "\n", "            ", "if", "r", ":", "r", "=", "self", ".", "filter_obj", ".", "clip_text_freq_unit", "(", "r", ",", "self", ".", "resp2freq", ")", "\n", "texts", "[", "idx", "]", "=", "r", "\n", "", "new_line", "=", "self", ".", "update_data", "(", "line", ",", "texts", ")", "\n", "if", "len", "(", "new_line", ")", ">", "1", ":", "\n", "            ", "return", "new_line", "\n", "", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.get_data_frequency": [[80, 90], ["preprocessor.Preprocessor.filter_obj.text2frequency", "preprocessor.Preprocessor.filter_obj.text2frequency", "all_posts.append", "all_resps.extend"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.text2frequency", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.text2frequency"], ["", "def", "get_data_frequency", "(", "self", ",", "data", ")", ":", "\n", "        ", "all_posts", ",", "all_resps", "=", "[", "]", ",", "[", "]", "\n", "for", "line", "in", "data", ":", "\n", "            ", "all_posts", ".", "append", "(", "line", "[", "0", "]", "[", "0", "]", ")", "\n", "all_resps", ".", "extend", "(", "[", "item", "[", "0", "]", "for", "item", "in", "line", "[", "1", ":", "]", "]", ")", "\n", "\n", "", "threshold", "=", "self", ".", "filter_obj", ".", "max_text_freq", "\n", "post2freq", "=", "self", ".", "filter_obj", ".", "text2frequency", "(", "all_posts", ",", "threshold", ")", "\n", "resp2freq", "=", "self", ".", "filter_obj", ".", "text2frequency", "(", "all_resps", ",", "threshold", ")", "\n", "return", "post2freq", ",", "resp2freq", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.run": [[91, 108], ["print", "tqdm.tqdm.tqdm", "preprocessor.Preprocessor.get_data_frequency", "print", "tqdm.tqdm.tqdm", "preprocessor.Preprocessor.global_preprocess", "coarse_data.append", "new_data.append"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.get_data_frequency", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.global_preprocess"], ["", "def", "run", "(", "self", ",", "data", ")", ":", "\n", "        ", "print", "(", "'Start Local Preprocessing'", ")", "\n", "coarse_data", "=", "[", "]", "\n", "for", "line", "in", "tqdm", "(", "data", ")", ":", "\n", "# line = self.local_preprocess(line)", "\n", "            ", "if", "line", ":", "coarse_data", ".", "append", "(", "line", ")", "\n", "", "data", "=", "coarse_data", "\n", "\n", "new_data", "=", "[", "]", "\n", "self", ".", "post2freq", ",", "self", ".", "resp2freq", "=", "self", ".", "get_data_frequency", "(", "data", ")", "\n", "print", "(", "'Start Global Preprocessing'", ")", "\n", "for", "line", "in", "tqdm", "(", "data", ")", ":", "\n", "            ", "line", "=", "self", ".", "global_preprocess", "(", "line", ")", "\n", "if", "line", ":", "new_data", ".", "append", "(", "line", ")", "\n", "", "data", "=", "new_data", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.run_mp": [[109, 126], ["utils.multi_process_wraper.Worker", "utils.multi_process_wraper.MultiProcessor", "utils.multi_process_wraper.MultiProcessor.run", "print", "utils.multi_process_wraper.Worker.merge_result", "preprocessor.Preprocessor.load", "preprocessor.Preprocessor.get_data_frequency", "utils.multi_process_wraper.Worker", "utils.multi_process_wraper.MultiProcessor", "utils.multi_process_wraper.MultiProcessor.run", "print", "utils.multi_process_wraper.Worker.merge_result"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.multi_process_wraper.MultiProcessor.run", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.multi_process_wraper.Worker.merge_result", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.craw_specific.load", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.preprocess.preprocessor.Preprocessor.get_data_frequency", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.multi_process_wraper.MultiProcessor.run", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.multi_process_wraper.Worker.merge_result"], ["", "def", "run_mp", "(", "self", ",", "src_fp", ",", "tgt_fp", ",", "pid_num", "=", "5", ",", "keep_pid_file", "=", "True", ")", ":", "\n", "        ", "coarse_fp", "=", "tgt_fp", "+", "'.coarse'", "\n", "worker", "=", "Worker", "(", "src_fp", ",", "coarse_fp", ",", "self", ".", "local_preprocess", ")", "\n", "mp", "=", "MultiProcessor", "(", "worker", ",", "pid_num", ")", "\n", "mp", ".", "run", "(", ")", "\n", "print", "(", "\"All Local Processes Done.\"", ")", "\n", "worker", ".", "merge_result", "(", "keep_pid_file", "=", "keep_pid_file", ")", "\n", "\n", "data", "=", "self", ".", "load", "(", "coarse_fp", ")", "\n", "self", ".", "post2freq", ",", "self", ".", "resp2freq", "=", "self", ".", "get_data_frequency", "(", "data", ")", "\n", "del", "data", "\n", "\n", "worker", "=", "Worker", "(", "coarse_fp", ",", "tgt_fp", ",", "self", ".", "global_preprocess", ")", "\n", "mp", "=", "MultiProcessor", "(", "worker", ",", "pid_num", ")", "\n", "mp", ".", "run", "(", ")", "\n", "print", "(", "\"All Global Processes Done.\"", ")", "\n", "worker", ".", "merge_result", "(", "keep_pid_file", "=", "keep_pid_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.static.Statistics.__init__": [[8, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "self", ".", "min_length", "=", "5", "\n", "self", ".", "max_length", "=", "100", "\n", "self", ".", "post_num", "=", "0", "\n", "self", ".", "resp_num", "=", "0", "\n", "self", ".", "err_data", "=", "0", "\n", "", "def", "word_freq", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.static.Statistics.word_freq": [[15, 37], ["pkuseg.pkuseg", "tqdm.tqdm.tqdm", "collections.Counter", "print", "open", "f.read", "text.extend", "open", "tqdm.tqdm.tqdm", "pkuseg.pkuseg.cut", "text.extend", "new_text.append", "collections.Counter.most_common", "fout.write", "pkuseg.pkuseg.cut", "str"], "methods", ["None"], ["", "def", "word_freq", "(", "self", ")", ":", "\n", "        ", "seg", "=", "pkuseg", ".", "pkuseg", "(", "model_name", "=", "'web'", ")", "\n", "# seg = pkuseg.pkuseg()", "\n", "stopwords", "=", "[", "]", "\n", "text", "=", "[", "]", "\n", "new_text", "=", "[", "]", "\n", "with", "open", "(", "\"stopwords.txt\"", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "stopwords", "=", "f", ".", "read", "(", ")", "\n", "", "for", "line", "in", "tqdm", "(", "self", ".", "data", ")", ":", "\n", "            ", "post", ",", "resp", "=", "line", "[", "0", "]", ",", "line", "[", "1", ":", "]", "\n", "text", ".", "extend", "(", "seg", ".", "cut", "(", "post", ")", ")", "\n", "for", "r", "in", "resp", ":", "\n", "                ", "text", ".", "extend", "(", "seg", ".", "cut", "(", "r", ")", ")", "\n", "\n", "", "", "for", "word", "in", "text", ":", "\n", "            ", "if", "word", "not", "in", "stopwords", ":", "\n", "                ", "new_text", ".", "append", "(", "word", ")", "\n", "", "", "couter", "=", "Counter", "(", "new_text", ")", "\n", "print", "(", "'Start create user_dictionary'", ")", "\n", "with", "open", "(", "\"word_user.txt\"", ",", "\"w\"", ")", "as", "fout", ":", "\n", "            ", "for", "k", ",", "v", "in", "tqdm", "(", "couter", ".", "most_common", "(", ")", ")", ":", "\n", "                ", "fout", ".", "write", "(", "k", "+", "'\\t'", "+", "str", "(", "v", ")", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.static.Statistics.check_sentence_length": [[38, 72], ["print", "static.Statistics.check_lenth", "str", "new_data.append", "open", "sorted", "sorted", "int", "static.Statistics.check_lenth", "str", "bucket_p.items", "int", "f.write", "bucket_r.items", "int", "f.write", "int", "resps.append", "int", "int", "len", "len"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.static.Statistics.check_lenth", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.static.Statistics.check_lenth"], ["", "", "", "def", "check_sentence_length", "(", "self", ")", ":", "\n", "        ", "bucket_p", "=", "{", "}", "\n", "bucket_r", "=", "{", "}", "\n", "new_data", "=", "[", "]", "\n", "d", "=", "(", "self", ".", "max_length", "-", "self", ".", "min_length", ")", "/", "10", "\n", "for", "line", "in", "self", ".", "data", ":", "\n", "            ", "resps", "=", "[", "]", "\n", "post", ",", "resp", "=", "line", "[", "0", "]", ",", "line", "[", "1", ":", "]", "\n", "self", ".", "post_num", "+=", "1", "\n", "post", "=", "self", ".", "check_lenth", "(", "post", ")", "\n", "k", "=", "str", "(", "int", "(", "(", "len", "(", "post", ")", "-", "self", ".", "min_length", ")", "/", "d", ")", ")", "\n", "bucket_p", "[", "k", "]", "=", "bucket_p", "[", "k", "]", "+", "1", "if", "k", "in", "bucket_p", "else", "1", "\n", "for", "r", "in", "resp", ":", "\n", "                ", "self", ".", "resp_num", "+=", "1", "\n", "r", "=", "self", ".", "check_lenth", "(", "r", ")", "\n", "k", "=", "str", "(", "int", "(", "(", "len", "(", "r", ")", "-", "self", ".", "min_length", ")", "/", "d", ")", ")", "\n", "bucket_r", "[", "k", "]", "=", "bucket_r", "[", "k", "]", "+", "1", "if", "k", "in", "bucket_r", "else", "1", "\n", "if", "r", ":", "resps", ".", "append", "(", "r", ")", "\n", "", "if", "not", "post", "or", "not", "resps", ":", "continue", "\n", "new_data", ".", "append", "(", "[", "post", "]", "+", "resps", ")", "\n", "", "print", "(", "'Total Post:%d , Response: %d , Pair: %d , Avg_Pair: %f '", "%", "(", "self", ".", "post_num", ",", "self", ".", "resp_num", ",", "self", ".", "resp_num", ",", "1.0", "*", "self", ".", "resp_num", "/", "self", ".", "post_num", ")", ")", "\n", "with", "open", "(", "\"sentence_length.txt\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "for", "kv", "in", "sorted", "(", "bucket_p", ".", "items", "(", ")", ",", "key", "=", "lambda", "d", ":", "int", "(", "d", "[", "0", "]", ")", ")", ":", "\n", "                ", "key", "=", "kv", "[", "0", "]", "\n", "value", "=", "kv", "[", "1", "]", "\n", "idx", "=", "int", "(", "key", ")", "\n", "f", ".", "write", "(", "'Post length %d - %d : %d \\n'", "%", "(", "self", ".", "min_length", "+", "idx", "*", "d", ",", "self", ".", "min_length", "+", "(", "idx", "+", "1", ")", "*", "d", "-", "1", ",", "value", ")", ")", "\n", "", "for", "kv2", "in", "sorted", "(", "bucket_r", ".", "items", "(", ")", ",", "key", "=", "lambda", "d", ":", "int", "(", "d", "[", "0", "]", ")", ")", ":", "\n", "                ", "key", "=", "kv2", "[", "0", "]", "\n", "value", "=", "kv2", "[", "1", "]", "\n", "idx", "=", "int", "(", "key", ")", "\n", "f", ".", "write", "(", "'Response length %d - %d : %d \\n'", "%", "(", "self", ".", "min_length", "+", "idx", "*", "d", ",", "self", ".", "min_length", "+", "(", "idx", "+", "1", ")", "*", "d", "-", "1", ",", "value", ")", ")", "\n", "", "self", ".", "data", "=", "new_data", "\n", "", "return", "new_data", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.static.Statistics.check_lenth": [[73, 80], ["len", "len", "open", "f.write", "f.write", "len", "len"], "methods", ["None"], ["", "def", "check_lenth", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "if", "len", "(", "sentence", ")", "<", "self", ".", "min_length", "or", "len", "(", "sentence", ")", ">", "self", ".", "max_length", ":", "\n", "            ", "with", "open", "(", "\"err_data.txt\"", ",", "\"w\"", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "'empty data \\n'", ")", "if", "len", "(", "sentence", ")", "==", "0", "else", "f", ".", "write", "(", "'error data: %s, %d\\n'", "%", "(", "sentence", ",", "len", "(", "sentence", ")", ")", ")", "\n", "", "self", ".", "err_data", "+=", "1", "\n", "return", "\"\"", "\n", "", "return", "sentence", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.__init__": [[30, 43], ["regex_list.extend", "security_handler.security_handler.regex_generator"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.regex_generator"], ["\t", "def", "__init__", "(", "self", ",", "config", "=", "filter_config", ")", ":", "\n", "\t\t", "regex_list", "=", "[", "]", "\n", "if", "not", "config", "[", "'regex_path'", "]", ":", "\n", "\t\t\t", "regex_list", "=", "default_regex", "\n", "", "else", ":", "\n", "\t\t\t", "regex_list", ".", "extend", "(", "self", ".", "regex_generator", "(", "config", "[", "'regex_path'", "]", ")", ")", "\n", "", "self", ".", "regex_list", "=", "regex_list", "\n", "self", ".", "min_len", "=", "config", "[", "'min_len'", "]", "\n", "self", ".", "max_len", "=", "config", "[", "'max_len'", "]", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "log_file_path", "=", "config", "[", "'log_file_path'", "]", "\n", "self", ".", "count", "=", "{", "}", "\n", "self", ".", "entity", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.parse_line": [[44, 67], ["requests.get", "json.dumps", "requests.get.json"], "methods", ["None"], ["", "def", "parse_line", "(", "self", ",", "line", ")", ":", "\n", "# try:", "\n", "# \tpost, rsps = line.split('\\t')", "\n", "# except Exception as e:", "\n", "# \treturn None", "\n", "\n", "\t\t", "url", "=", "'http://183.174.228.47:8282/RUCNLP/ner?doc=%s&type=weibo'", "\n", "#post_entity, rsps_entity = \"\", \"\"", "\n", "line_entity", "=", "\"\"", "\n", "try", ":", "\n", "\t\t\t", "r", "=", "requests", ".", "get", "(", "url", "%", "line", ")", "\n", "line_entity", "=", "json", ".", "dumps", "(", "r", ".", "json", "(", ")", ",", "ensure_ascii", "=", "False", ")", "\n", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "\n", "# try:", "\n", "# \tr = requests.get(url % rsps)", "\n", "# \trsps_entity = json.dumps(r.json(), ensure_ascii=False)", "\n", "# except:", "\n", "# \tpass", "\n", "\n", "#return \"%s\\t%s\\t%s\\t%s\" % (post, post_entity, rsps, rsps_entity)", "\n", "", "return", "\"%s\\t%s\"", "%", "(", "line", ",", "line_entity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.clean_entity": [[68, 86], ["security_handler.security_handler.parse_line", "security_handler.security_handler.split", "eval", "sentence_entity_list.append", "security_handler.security_handler.delete"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.parse_line", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.delete"], ["", "def", "clean_entity", "(", "self", ",", "sentence", ")", ":", "\n", "\t\t", "data", "=", "self", ".", "parse_line", "(", "sentence", ")", "\n", "try", ":", "\n", "\t\t\t", "item", "=", "data", ".", "split", "(", "'\\t'", ")", "\n", "sentence", "=", "item", "[", "0", "]", "\n", "if", "(", "sentence", "==", "'the content is empty!'", ")", ":", "\n", "\t\t\t\t", "return", "\"\"", "\n", "", "sentence_entity", "=", "eval", "(", "item", "[", "1", "]", ")", "\n", "for", "one_entity", "in", "sentence_entity", ":", "\n", "\t\t\t\t", "sentence_entity_list", "=", "[", "]", "\n", "if", "(", "one_entity", "[", "'type'", "]", "in", "default_entity", ")", ":", "\n", "\t\t\t\t\t", "sentence_entity_list", ".", "append", "(", "one_entity", "[", "'entity'", "]", ")", "\n", "self", ".", "entity", "[", "one_entity", "[", "'type'", "]", "]", "=", "self", ".", "entity", "[", "one_entity", "[", "'type'", "]", "]", "+", "1", "if", "one_entity", "[", "'type'", "]", "in", "self", ".", "entity", "else", "1", "\n", "sentence", "=", "self", ".", "delete", "(", "sentence", ",", "sentence_entity_list", ",", "default_entity", "[", "one_entity", "[", "'type'", "]", "]", ")", "\n", "\n", "", "", "return", "sentence", "\n", "", "except", "Exception", "as", "e", ":", "\n", "\t\t\t", "return", "\"clean entity failed\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.regex_generator": [[87, 91], ["open", "json.load"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.craw_specific.load"], ["", "", "def", "regex_generator", "(", "path", ")", ":", "\n", "\t\t", "with", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "\t\t\t", "regex_list", "=", "json", ".", "load", "(", "f", ")", "\n", "", "return", "regex_list", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.count_regex": [[93, 99], ["print", "print", "print"], "methods", ["None"], ["", "def", "count_regex", "(", "self", ",", "old", ",", "sentence", ",", "task_name", ",", "_print", "=", "False", ")", ":", "\n", "\t\t", "self", ".", "count", "[", "task_name", "]", "=", "self", ".", "count", "[", "task_name", "]", "+", "1", "if", "task_name", "in", "self", ".", "count", "else", "1", "\n", "if", "_print", ":", "\n", "\t\t\t", "print", "(", "'task : %s'", "%", "(", "task_name", ")", ")", "\n", "print", "(", "'Old: %s'", "%", "(", "old", ")", ")", "\n", "print", "(", "'New: %s'", "%", "(", "sentence", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.count_entity": [[100, 105], ["print", "print", "print"], "methods", ["None"], ["", "", "def", "count_entity", "(", "self", ",", "old", ",", "sentence", ",", "_print", "=", "False", ")", ":", "\n", "\t\t", "if", "_print", ":", "\n", "\t\t\t", "print", "(", "'----handle entity----'", ")", "\n", "print", "(", "'Old: %s'", "%", "(", "old", ")", ")", "\n", "print", "(", "'New: %s'", "%", "(", "sentence", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.delete": [[107, 113], ["sentence.replace.replace.replace"], "methods", ["None"], ["", "", "def", "delete", "(", "self", ",", "sentence", ",", "entities", ",", "replace", "=", "None", ")", ":", "\n", "\t\t", "if", "(", "replace", "==", "None", ")", ":", "\n", "\t\t\t", "replace", "=", "\"\"", "\n", "", "for", "entity", "in", "entities", ":", "\n", "\t\t\t", "sentence", "=", "sentence", ".", "replace", "(", "entity", ",", "replace", ")", "\n", "", "return", "sentence", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.clean_pattern": [[114, 118], ["re.findall", "security_handler.security_handler.delete"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.delete"], ["", "def", "clean_pattern", "(", "self", ",", "sentence", ",", "pattern", ",", "task_name", "=", "None", ",", "replace", "=", "None", ")", ":", "\n", "\t\t", "pattern_list", "=", "re", ".", "findall", "(", "pattern", ",", "sentence", ")", "\n", "sentence", "=", "self", ".", "delete", "(", "sentence", ",", "pattern_list", ",", "replace", "=", "replace", ")", "\n", "return", "sentence", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.handler": [[119, 121], ["None"], "methods", ["None"], ["", "def", "handler", "(", "self", ",", "signum", ",", "frame", ")", ":", "\n", "\t\t", "raise", "AssertionError", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.clean_pattern_in_sentence": [[122, 128], ["signal.signal", "signal.alarm", "security_handler.security_handler.clean_pattern", "signal.alarm"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.clean_pattern"], ["", "def", "clean_pattern_in_sentence", "(", "self", ",", "sentence", ",", "pattern", ",", "task_name", "=", "None", ",", "replace", "=", "None", ")", ":", "\n", "\t\t", "signal", ".", "signal", "(", "signal", ".", "SIGALRM", ",", "self", ".", "handler", ")", "\n", "signal", ".", "alarm", "(", "2", ")", "\n", "sentence", "=", "self", ".", "clean_pattern", "(", "sentence", ",", "pattern", ",", "task_name", ",", "replace", ")", "\n", "signal", ".", "alarm", "(", "0", ")", "\n", "return", "sentence", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.entity_unit": [[130, 139], ["security_handler.security_handler.clean_entity", "security_handler.security_handler.count_entity", "print"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.clean_entity", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.count_entity"], ["", "def", "entity_unit", "(", "self", ",", "text", ")", ":", "\n", "\t\t", "try", ":", "\n", "\t\t\t", "old", "=", "text", "\n", "text", "=", "self", ".", "clean_entity", "(", "text", ")", "\n", "if", "old", "!=", "text", ":", "\n", "\t\t\t\t", "self", ".", "count_entity", "(", "old", ",", "text", ",", "_print", "=", "False", ")", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "\t\t\t", "print", "(", "\"failed to change entity\"", ")", "\n", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.regex_unit": [[140, 151], ["security_handler.security_handler.clean_pattern_in_sentence", "security_handler.security_handler.count_regex", "print"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.clean_pattern_in_sentence", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.count_regex"], ["", "def", "regex_unit", "(", "self", ",", "text", ")", ":", "\n", "\t\t", "for", "task_name", ",", "pattern", ",", "replace_func", "in", "self", ".", "regex_list", ":", "\n", "\t\t\t", "try", ":", "\n", "\t\t\t\t", "old", "=", "text", "\n", "text", "=", "self", ".", "clean_pattern_in_sentence", "(", "text", ",", "pattern", ",", "task_name", ",", "replace_func", ")", "\n", "if", "old", "!=", "text", ":", "\n", "\t\t\t\t\t", "self", ".", "count_regex", "(", "old", ",", "text", ",", "task_name", ",", "_print", "=", "False", ")", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "\t\t\t\t", "print", "(", "\"failed to change \\\"\"", "+", "text", "+", "\"\\\" \"", "+", "\"in pattern \"", "+", "task_name", ")", "\n", "continue", "\n", "", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.length_unit": [[152, 156], ["len"], "methods", ["None"], ["", "def", "length_unit", "(", "self", ",", "text", ")", ":", "\n", "\t\t", "if", "self", ".", "min_len", "<=", "len", "(", "text", ")", "<=", "self", ".", "max_len", ":", "\n", "\t\t\t", "return", "text", "\n", "", "return", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.craw_specific.load": [[3, 13], ["open", "tqdm.tqdm", "line.rstrip.rstrip", "line.rstrip.split", "data.append", "len"], "function", ["None"], ["def", "load", "(", "fp", ")", ":", "\n", "    ", "data", "=", "[", "]", "\n", "with", "open", "(", "fp", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "tqdm", "(", "f", ")", ":", "\n", "            ", "line", "=", "line", ".", "rstrip", "(", ")", "\n", "subs", "=", "line", ".", "split", "(", "'\\t'", ")", "\n", "if", "len", "(", "subs", ")", "<=", "1", ":", "\n", "                ", "continue", "\n", "", "data", ".", "append", "(", "subs", ")", "\n", "", "", "return", "data", "\n", "", "regex_list", "=", "[", "r'\\[ ?(?:. ?)+ ?\\]'", ",", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.cutter.Cutter.__init__": [[5, 8], ["pkuseg.pkuseg"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "method", "=", "'pkuseg'", ")", ":", "\n", "        ", "if", "method", "==", "'pkuseg'", ":", "\n", "            ", "self", ".", "cutter", "=", "pkuseg", ".", "pkuseg", "(", "model_name", "=", "'web'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.cutter.Cutter.cut_text": [[9, 11], ["cutter.Cutter.cutter.cut"], "methods", ["None"], ["", "", "def", "cut_text", "(", "self", ",", "text", ")", ":", "\n", "        ", "return", "self", ".", "cutter", ".", "cut", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.cutter.Cutter.cut_data_line": [[12, 16], ["cutter.Cutter.cut_text"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.cutter.Cutter.cut_text"], ["", "def", "cut_data_line", "(", "self", ",", "line_json", ")", ":", "\n", "        ", "for", "item", "in", "line_json", ":", "\n", "            ", "item", "[", "0", "]", "=", "' '", ".", "join", "(", "self", ".", "cut_text", "(", "item", "[", "0", "]", ")", ")", "\n", "", "return", "line_json", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.__init__": [[7, 9], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.get_bucket": [[10, 23], ["pow", "print", "enumerate", "max", "min", "max", "print", "len", "str", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_bucket", "(", "data", ",", "bucket_num", "=", "10", ")", ":", "\n", "        ", "_max", ",", "_min", "=", "max", "(", "data", ")", ",", "min", "(", "data", ")", "\n", "base", "=", "pow", "(", "10", ",", "max", "(", "len", "(", "str", "(", "_max", ")", ")", "-", "1", ",", "1", ")", ")", "\n", "ceil", "=", "(", "(", "_max", "-", "1", ")", "//", "base", "+", "1", ")", "*", "base", "\n", "bucket_range", "=", "ceil", "//", "bucket_num", "\n", "bucket_cnt", "=", "[", "0", "]", "*", "bucket_num", "\n", "for", "d", "in", "data", ":", "\n", "            ", "bucket_cnt", "[", "(", "d", "-", "1", ")", "//", "bucket_range", "]", "+=", "1", "\n", "\n", "", "print", "(", "f\"Min length : {_min}, Max length : {_max}\"", ")", "\n", "for", "i", ",", "cnt", "in", "enumerate", "(", "bucket_cnt", ")", ":", "\n", "            ", "print", "(", "f\"{i*bucket_range: >4} - {(i+1)*bucket_range: >4} \\t {cnt: >9} items.\\t{100.0*cnt/len(data):.2f}%\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.stat_data": [[24, 46], ["len", "list", "print", "print", "statistic.Statistics.get_bucket", "print", "statistic.Statistics.get_bucket", "print", "statistic.Statistics.get_bucket", "map", "sum", "len", "bucket_post.append", "bucket_resp.extend", "[].split", "len", "r[].split"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.get_bucket", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.get_bucket", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.statistic.Statistics.get_bucket"], ["", "", "@", "staticmethod", "\n", "def", "stat_data", "(", "data", ")", ":", "\n", "        ", "post_num", "=", "len", "(", "data", ")", "\n", "resp_num_list", "=", "list", "(", "map", "(", "len", ",", "data", ")", ")", "\n", "resp_num", "=", "sum", "(", "resp_num_list", ")", "-", "post_num", "\n", "print", "(", "f\"Posts: {post_num}\\n\"", "+", "f\"Respones: {resp_num}\\n\"", "+", "f\"Resps per Post Avg :{1.0*resp_num/post_num:.2f}\"", ")", "\n", "print", "(", "\"Resps Per Post Distribute:\"", ")", "\n", "Statistics", ".", "get_bucket", "(", "resp_num_list", ")", "\n", "\n", "bucket_post", ",", "bucket_resp", "=", "[", "]", ",", "[", "]", "\n", "for", "item", "in", "data", ":", "\n", "            ", "post_len", "=", "len", "(", "item", "[", "0", "]", "[", "0", "]", ".", "split", "(", "' '", ")", ")", "\n", "resp_len_list", "=", "[", "len", "(", "r", "[", "0", "]", ".", "split", "(", "' '", ")", ")", "for", "r", "in", "item", "[", "1", ":", "]", "]", "\n", "bucket_post", ".", "append", "(", "post_len", ")", "\n", "bucket_resp", ".", "extend", "(", "resp_len_list", ")", "\n", "\n", "", "print", "(", "\"\\nPost Distribute:\"", ")", "\n", "Statistics", ".", "get_bucket", "(", "bucket_post", ")", "\n", "print", "(", "\"\\nReponse Distribute:\"", ")", "\n", "Statistics", ".", "get_bucket", "(", "bucket_resp", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.multi_process_wraper.Worker.__init__": [[6, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "src_fp", ",", "tgt_fp", ",", "func", ")", ":", "\n", "        ", "self", ".", "src_fp", "=", "src_fp", "\n", "self", ".", "tgt_fp", "=", "tgt_fp", "\n", "self", ".", "parse_line", "=", "func", "\n", "self", ".", "postfix", "=", "'.pid.'", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.multi_process_wraper.Worker.run": [[12, 19], ["str", "open", "open", "enumerate", "multi_process_wraper.Worker.parse_line", "json.loads", "f_out.write", "json.dumps"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.security_handler.security_handler.parse_line"], ["", "def", "run", "(", "self", ",", "pid", ",", "p_num", ")", ":", "\n", "        ", "pid_file_fp", "=", "self", ".", "tgt_fp", "+", "self", ".", "postfix", "+", "str", "(", "pid", ")", "\n", "with", "open", "(", "self", ".", "src_fp", ",", "'r'", ")", "as", "f_in", ",", "open", "(", "pid_file_fp", ",", "'w'", ")", "as", "f_out", ":", "\n", "            ", "for", "idx", ",", "line", "in", "enumerate", "(", "f_in", ")", ":", "\n", "                ", "if", "idx", "%", "p_num", "!=", "pid", ":", "continue", "\n", "out_string", "=", "self", ".", "parse_line", "(", "json", ".", "loads", "(", "line", ")", ")", "\n", "if", "out_string", ":", "f_out", ".", "write", "(", "json", ".", "dumps", "(", "out_string", ",", "ensure_ascii", "=", "False", ")", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.multi_process_wraper.Worker.merge_result": [[20, 24], ["os.system", "os.system"], "methods", ["None"], ["", "", "", "def", "merge_result", "(", "self", ",", "keep_pid_file", "=", "False", ")", ":", "\n", "        ", "os", ".", "system", "(", "'cat %s%s* > %s'", "%", "(", "self", ".", "tgt_fp", ",", "self", ".", "postfix", ",", "self", ".", "tgt_fp", ")", ")", "\n", "if", "not", "keep_pid_file", ":", "\n", "            ", "os", ".", "system", "(", "'rm %s%s*'", "%", "(", "self", ".", "tgt_fp", ",", "self", ".", "postfix", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.multi_process_wraper.MultiProcessor.__init__": [[26, 29], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "worker", ",", "pid_num", ")", ":", "\n", "        ", "self", ".", "worker", "=", "worker", "\n", "self", ".", "pid_num", "=", "pid_num", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.multi_process_wraper.MultiProcessor.run": [[30, 37], ["range", "range", "multiprocessing.Process", "multiprocessing.Process.start", "multiprocessing.Process.join"], "methods", ["None"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "for", "pid", "in", "range", "(", "self", ".", "pid_num", ")", ":", "\n", "            ", "p", "=", "Process", "(", "target", "=", "self", ".", "worker", ".", "run", ",", "args", "=", "(", "pid", ",", "self", ".", "pid_num", ")", ")", "\n", "p", ".", "start", "(", ")", "\n", "\n", "", "for", "pid", "in", "range", "(", "self", ".", "pid_num", ")", ":", "\n", "            ", "p", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.__init__": [[62, 90], ["logging.Formatter", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.getLogger", "logging.getLogger.addHandler", "logging.getLogger.setLevel", "regex_list.append", "regex_list.insert", "regex.compile", "filter.Filter.regex_list.append", "filter.kaomoji_regex_generator", "filter.crazy_fans_regex_generator"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.kaomoji_regex_generator", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.crazy_fans_regex_generator"], ["    ", "def", "__init__", "(", "self", ",", "config", "=", "None", ",", "regex_list", "=", "None", ",", "logging_fp", "=", "None", ")", ":", "\n", "        ", "if", "not", "regex_list", ":", "\n", "            ", "regex_list", "=", "default_regex", "\n", "regex_list", ".", "append", "(", "kaomoji_regex_generator", "(", ")", ")", "\n", "regex_list", ".", "insert", "(", "5", ",", "crazy_fans_regex_generator", "(", ")", ")", "\n", "\n", "", "self", ".", "regex_list", "=", "[", "]", "\n", "for", "name", ",", "pattern", ",", "func", "in", "regex_list", ":", "\n", "            ", "pattern", "=", "re", ".", "compile", "(", "pattern", ")", "\n", "self", ".", "regex_list", ".", "append", "(", "[", "name", ",", "pattern", ",", "func", "]", ")", "\n", "\n", "", "if", "not", "config", ":", "\n", "            ", "config", "=", "filter_config", "\n", "", "self", ".", "min_len", "=", "config", "[", "'min_len'", "]", "\n", "self", ".", "max_len", "=", "config", "[", "'max_len'", "]", "\n", "self", ".", "max_text_freq", "=", "config", "[", "'max_text_freq'", "]", "\n", "self", ".", "max_reread_patience", "=", "config", "[", "'max_reread_patience'", "]", "\n", "self", ".", "balance_factor", "=", "config", "[", "'balance_factor'", "]", "\n", "self", ".", "config", "=", "config", "\n", "\n", "if", "not", "logging_fp", ":", "logging_fp", "=", "'logging/filter.log'", "\n", "log_formatter", "=", "logging", ".", "Formatter", "(", "'%(message)s'", ")", "\n", "log_handler", "=", "logging", ".", "FileHandler", "(", "logging_fp", ",", "mode", "=", "'w'", ")", "\n", "log_handler", ".", "setFormatter", "(", "log_formatter", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'filter'", ")", "\n", "logger", ".", "addHandler", "(", "log_handler", ")", "\n", "logger", ".", "setLevel", "(", "level", "=", "logging", ".", "INFO", ")", "\n", "self", ".", "logger", "=", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.clean_pattern_in_sentence": [[91, 113], ["emoji.demojize", "reversed", "pattern.finditer", "list", "match.span", "filter.Filter.logger.info", "replace", "len", "len"], "methods", ["None"], ["", "def", "clean_pattern_in_sentence", "(", "self", ",", "sentence", ",", "pattern", ",", "task_name", "=", "None", ",", "replace", "=", "None", ")", ":", "\n", "        ", "s", "=", "sentence", "\n", "find_count", "=", "1", "\n", "if", "task_name", "==", "'emoji'", ":", "\n", "            ", "s", "=", "emoji", ".", "demojize", "(", "s", ")", "\n", "", "while", "find_count", ":", "\n", "            ", "find_count", "=", "0", "\n", "try", ":", "\n", "                ", "obj", "=", "pattern", ".", "finditer", "(", "s", ",", "timeout", "=", "5", ")", "\n", "", "except", "TimeoutError", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "f'regex_unit\\ttime_out\\t{sentence}'", ")", "\n", "return", "\"\"", "\n", "", "for", "match", "in", "reversed", "(", "list", "(", "(", "obj", ")", ")", ")", ":", "\n", "                ", "find_count", "+=", "1", "\n", "start", ",", "end", "=", "match", ".", "span", "(", ")", "\n", "if", "replace", ":", "\n", "                    ", "item", "=", "replace", "(", "match", ")", "\n", "if", "item", "==", "DELETE_TEXT", ":", "return", "\"\"", "\n", "s", "=", "s", "[", ":", "start", "]", "+", "(", "' '", "if", "start", ">", "0", "and", "s", "[", "start", "-", "1", "]", "not", "in", "string", ".", "whitespace", "else", "''", ")", "+", "item", "+", "(", "' '", "if", "end", "<", "len", "(", "s", ")", "and", "s", "[", "end", "]", "not", "in", "string", ".", "whitespace", "else", "''", ")", "+", "s", "[", "end", ":", "]", "\n", "", "else", ":", "\n", "                    ", "s", "=", "s", "[", ":", "start", "]", "+", "(", "' '", "if", "start", ">", "0", "and", "end", "<", "len", "(", "s", ")", "and", "s", "[", "start", "-", "1", "]", "not", "in", "string", ".", "whitespace", "and", "s", "[", "end", "]", "not", "in", "string", ".", "whitespace", "else", "''", ")", "+", "s", "[", "end", ":", "]", "\n", "", "", "", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.regex_unit": [[114, 121], ["filter.Filter.clean_pattern_in_sentence", "filter.Filter.logger.info"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.clean_pattern_in_sentence"], ["", "def", "regex_unit", "(", "self", ",", "text", ")", ":", "\n", "        ", "for", "task_name", ",", "pattern", ",", "replace_func", "in", "self", ".", "regex_list", ":", "\n", "            ", "old", "=", "text", "\n", "text", "=", "self", ".", "clean_pattern_in_sentence", "(", "text", ",", "pattern", ",", "task_name", ",", "replace_func", ")", "\n", "if", "old", "!=", "text", ":", "\n", "                ", "self", ".", "logger", ".", "info", "(", "f'regex_unit\\t{task_name}\\t{old}\\t{text}'", ")", "\n", "", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.clip_length_unit": [[122, 126], ["len", "len", "filter.Filter.pure_chinese_text"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.pure_chinese_text"], ["", "def", "clip_length_unit", "(", "self", ",", "text", ")", ":", "\n", "        ", "if", "self", ".", "min_len", "<=", "len", "(", "self", ".", "pure_chinese_text", "(", "text", ")", ")", "and", "len", "(", "text", ")", "<=", "self", ".", "max_len", ":", "\n", "            ", "return", "text", "\n", "", "return", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.balance_length_unit": [[127, 134], ["filter.Filter.pure_chinese_text", "filter.Filter.pure_chinese_text", "len", "filter.Filter.logger.info", "len"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.pure_chinese_text", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.pure_chinese_text"], ["", "def", "balance_length_unit", "(", "self", ",", "text1", ",", "text2", ")", ":", "\n", "        ", "t1", "=", "self", ".", "pure_chinese_text", "(", "text1", ")", "\n", "t2", "=", "self", ".", "pure_chinese_text", "(", "text2", ")", "\n", "if", "len", "(", "t1", ")", "*", "self", ".", "balance_factor", "<", "len", "(", "t2", ")", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "f'balance_length_unit\\t{text1}\\t{text2}'", ")", "\n", "return", "\"\"", "\n", "", "return", "text2", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.language_unit": [[135, 153], ["list", "langdetect.detect", "filter.Filter.is_chinese", "filter.Filter.logger.info", "len"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.is_chinese"], ["", "def", "language_unit", "(", "self", ",", "text", ",", "lan_model", "=", "False", ",", "min_freq", "=", "0.3", ")", ":", "\n", "        ", "if", "lan_model", ":", "\n", "            ", "chinese_freq", "=", "1.0", "\n", "try", ":", "\n", "                ", "lan", "=", "detect", "(", "text", ")", "\n", "", "except", ":", "\n", "                ", "lan", "=", "'unk'", "\n", "", "", "else", ":", "\n", "            ", "lan", "=", "'freq'", "\n", "chinese_num", "=", "0", "\n", "for", "c", "in", "list", "(", "text", ")", ":", "\n", "                ", "if", "self", ".", "is_chinese", "(", "c", ")", ":", "\n", "                    ", "chinese_num", "+=", "1", "\n", "", "", "chinese_freq", "=", "1.0", "*", "chinese_num", "/", "(", "len", "(", "text", ")", "+", "1", ")", "\n", "", "if", "(", "lan", "!=", "'zh-cn'", "and", "lan", "!=", "'ko'", "and", "lan", "!=", "'unk'", "and", "lan", "!=", "'freq'", ")", "or", "(", "chinese_freq", "<", "min_freq", ")", ":", "\n", "            ", "if", "text", ":", "self", ".", "logger", ".", "info", "(", "f'language_unit: \\t{chinese_freq}\\t{text}'", ")", "\n", "return", "\"\"", "\n", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.clip_text_freq_unit": [[154, 164], ["filter.Filter.pure_chinese_text", "text2freq.get", "random.random", "filter.Filter.logger.info"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.pure_chinese_text"], ["", "def", "clip_text_freq_unit", "(", "self", ",", "text", ",", "text2freq", ")", ":", "\n", "        ", "pure", "=", "self", ".", "pure_chinese_text", "(", "text", ")", "\n", "freq", "=", "text2freq", ".", "get", "(", "pure", ",", "0", ")", "\n", "if", "freq", "<=", "self", ".", "max_text_freq", ":", "\n", "            ", "return", "text", "\n", "", "roll", "=", "random", ".", "random", "(", ")", "\n", "if", "roll", "<", "1.0", "*", "self", ".", "max_text_freq", "/", "(", "freq", "+", "0.00001", ")", ":", "\n", "            ", "return", "text", "\n", "", "self", ".", "logger", ".", "info", "(", "f'clip_text_freq_unit\\t{text}'", ")", "\n", "return", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.reread_machine_unit": [[165, 171], ["filter.Filter.pure_chinese_text", "text2freq.get", "filter.Filter.logger.info"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.pure_chinese_text"], ["", "def", "reread_machine_unit", "(", "self", ",", "text", ",", "text2freq", ")", ":", "\n", "        ", "pure", "=", "self", ".", "pure_chinese_text", "(", "text", ")", "\n", "if", "text2freq", ".", "get", "(", "pure", ",", "0", ")", ">=", "self", ".", "max_reread_patience", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "f'reread_machine_unit\\t{text}'", ")", "\n", "return", "\"\"", "\n", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.single_text_pipe": [[172, 178], ["regex.sub().strip", "filter.Filter.regex_unit", "filter.Filter.clip_length_unit", "filter.Filter.language_unit", "regex.sub"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.regex_unit", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.clip_length_unit", "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.language_unit"], ["", "def", "single_text_pipe", "(", "self", ",", "text", ")", ":", "\n", "        ", "text", "=", "re", ".", "sub", "(", "r'\\s+'", ",", "' '", ",", "text", ")", ".", "strip", "(", ")", "\n", "if", "text", ":", "text", "=", "self", ".", "regex_unit", "(", "text", ")", "\n", "if", "text", ":", "text", "=", "self", ".", "clip_length_unit", "(", "text", ")", "\n", "if", "text", ":", "text", "=", "self", ".", "language_unit", "(", "text", ")", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.text2frequency": [[179, 188], ["set", "filter.Filter.pure_chinese_text", "freq.get", "freq.items"], "methods", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.pure_chinese_text"], ["", "def", "text2frequency", "(", "self", ",", "data", ",", "threshold", ")", ":", "\n", "        ", "freq", "=", "{", "}", "\n", "for", "text", "in", "data", ":", "\n", "            ", "if", "not", "text", ":", "continue", "\n", "pure", "=", "self", ".", "pure_chinese_text", "(", "text", ")", "\n", "freq", "[", "pure", "]", "=", "freq", ".", "get", "(", "pure", ",", "0", ")", "+", "1", "\n", "", "safe_text", "=", "set", "(", "[", "text", "for", "text", ",", "cnt", "in", "freq", ".", "items", "(", ")", "if", "cnt", "<=", "threshold", "]", ")", "\n", "for", "k", "in", "safe_text", ":", "del", "freq", "[", "k", "]", "\n", "return", "freq", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.pure_chinese_text": [[189, 192], ["regex.sub().replace", "regex.sub"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "pure_chinese_text", "(", "text", ")", ":", "\n", "        ", "return", "re", ".", "sub", "(", "r'\\W'", ",", "''", ",", "text", ")", ".", "replace", "(", "'_'", ",", "''", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.Filter.is_chinese": [[193, 200], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "is_chinese", "(", "uchar", ")", ":", "\n", "        ", "\"\"\"\u5224\u65ad\u4e00\u4e2aunicode\u662f\u5426\u662f\u6c49\u5b57\"\"\"", "\n", "if", "uchar", ">=", "u'\\u4e00'", "and", "uchar", "<=", "u'\\u9fa5'", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.kaomoji_regex_generator": [[46, 53], ["regex.compile", "open", "sorted", "json.load", "len", "re.compile.match", "regex.escape"], "function", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.craw_specific.load"], ["def", "kaomoji_regex_generator", "(", "emoticon_path", "=", "'assets/emoticon.json'", ")", ":", "\n", "    ", "with", "open", "(", "emoticon_path", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "emoticon_file", ":", "\n", "        ", "emoticons", "=", "sorted", "(", "json", ".", "load", "(", "emoticon_file", ")", ",", "key", "=", "lambda", "x", ":", "len", "(", "x", ")", ",", "reverse", "=", "True", ")", "\n", "", "all_word_pattern", "=", "re", ".", "compile", "(", "r'^\\w+$'", ")", "\n", "emoticon_regexs", "=", "[", "'(?:'", "+", "(", "r'(?:\\A| )'", "+", "k", "+", "r'(?:\\Z| )'", "if", "all_word_pattern", ".", "match", "(", "k", ")", "else", "r'\\s*'", ".", "join", "(", "[", "re", ".", "escape", "(", "ch", ")", "for", "ch", "in", "k", "]", ")", ")", "+", "')'", "for", "k", "in", "emoticons", "]", "\n", "regex", "=", "'|'", ".", "join", "(", "emoticon_regexs", ")", "\n", "return", "[", "\"kaomoji\"", ",", "regex", ",", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.filter.crazy_fans_regex_generator": [[54, 59], ["open", "json.load"], "function", ["home.repos.pwc.inspect_result.qhjqhj00_Pchatbot.utils.craw_specific.load"], ["", "def", "crazy_fans_regex_generator", "(", "stars_path", "=", "'assets/stars.json'", ")", ":", "\n", "    ", "with", "open", "(", "stars_path", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "        ", "stars", "=", "json", ".", "load", "(", "f", ")", "\n", "", "regex", "=", "\"(.*(\"", "+", "'|'", ".", "join", "(", "stars", ")", "+", "\")+.*){3,}\"", "\n", "return", "[", "\"crazy_fans\"", ",", "regex", ",", "lambda", "_1", ":", "DELETE_TEXT", "]", "\n", "\n"]]}