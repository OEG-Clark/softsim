{"home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_simple_hvc.train": [[24, 41], ["range", "out.train_end", "out.train_step_begin", "sess.run", "out.train_step_end", "out.get_run_options", "out.get_run_metadata"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_begin", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_options", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_metadata"], ["def", "train", "(", "out", ",", "sess", ",", "epoch", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "is_training_ph", ")", ":", "\n", "    ", "g_step", "=", "0", "\n", "for", "i", "in", "range", "(", "training_steps", ")", ":", "\n", "        ", "out", ".", "train_step_begin", "(", "i", ")", "\n", "\n", "_", ",", "l", ",", "g_step", "=", "sess", ".", "run", "(", "\n", "[", "train_op", ",", "loss_op", ",", "global_step", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", "}", ",", "\n", "options", "=", "out", ".", "get_run_options", "(", ")", ",", "\n", "run_metadata", "=", "out", ".", "get_run_metadata", "(", ")", ")", "\n", "\n", "out", ".", "train_step_end", "(", "\n", "sess", ",", "epoch", ",", "g_step", ",", "i", ",", "l", ",", "\"DEFAULT\"", ",", "training_steps", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", "}", ")", "\n", "\n", "", "out", ".", "train_end", "(", "sess", ",", "epoch", ",", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_simple_hvc.validate": [[43, 58], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate", "(", "out", ",", "sess", ",", "epoch", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "is_training_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", "=", "(", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "\n", "test_loss", ",", "\"DEFAULT\"", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_simple_hvc.go": [[60, 130], ["tensorflow.reset_default_graph", "simple.output.Output", "simple.output.Output.log_msg", "input_sieve.DataSet", "input_sieve.DataSet", "input_sieve.train_inputs", "input_sieve.eval_inputs", "input_sieve.DataSet.training_batches_per_epoch", "input_sieve.DataSet.validation_batches_per_epoch", "simple.output.Output.log_msg", "simple.output.Output.close_files", "tensorflow.device", "tensorflow.train.get_or_create_global_step", "tensorflow.train.AdamOptimizer", "simple.model_hvc.run_towers", "tensorflow.Session", "simple.output.Output.set_session_graph", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tf.train.Coordinator.join", "sess.close", "tensorflow.name_scope", "tensorflow.placeholder", "input_sieve.DataSet.num_classes", "simple.output.Output.log_msg", "tensorflow.train.Saver().restore", "tensorflow.global_variables_initializer().run", "range", "tf.train.Coordinator.request_stop", "tensorflow.ConfigProto", "train_simple_hvc.train", "train_simple_hvc.validate", "simple.output.Output.log_msg", "tensorflow.train.Saver", "tensorflow.global_variables_initializer"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.train_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.training_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.close_files", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.run_towers", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.set_session_graph", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.num_classes", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.train", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg"], ["", "def", "go", "(", "start_epoch", ",", "end_epoch", ",", "run_name", ",", "weights_file", ",", "\n", "profile_compute_time_every_n_steps", ",", "save_summary_info_every_n_steps", ",", "\n", "log_annotated_images", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "log_dir", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "out", "=", "Output", "(", "log_dir", ",", "run_name", ",", "profile_compute_time_every_n_steps", ",", "\n", "save_summary_info_every_n_steps", ")", "\n", "\n", "############################################################################", "\n", "# Data feeds", "\n", "############################################################################", "\n", "out", ".", "log_msg", "(", "\"Setting up data feeds...\"", ")", "\n", "training_dataset", "=", "DataSet", "(", "'train'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "None", ")", "\n", "validation_dataset", "=", "DataSet", "(", "'validation'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "None", ")", "\n", "training_data", "=", "train_inputs", "(", "training_dataset", ",", "log_annotated_images", ")", "\n", "validation_data", "=", "eval_inputs", "(", "validation_dataset", ",", "log_annotated_images", ")", "\n", "training_steps", "=", "training_dataset", ".", "training_batches_per_epoch", "(", ")", "\n", "validation_steps", "=", "validation_dataset", ".", "validation_batches_per_epoch", "(", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow placeholders and operations", "\n", "############################################################################", "\n", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ":", "# set the default device to the CPU", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"input/placeholders\"", ")", ":", "\n", "            ", "is_training_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", ")", "\n", "\n", "train_op", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "=", "run_towers", "(", "opt", ",", "global_step", ",", "is_training_ph", ",", "\n", "training_data", ",", "validation_data", ",", "\n", "DataSet", ".", "num_classes", "(", ")", ",", "num_gpus", ")", "\n", "\n", "", "out", ".", "log_msg", "(", "\"Starting Session...\"", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow session", "\n", "############################################################################", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", ")", "as", "sess", ":", "\n", "        ", "out", ".", "set_session_graph", "(", "sess", ".", "graph", ")", "\n", "\n", "if", "weights_file", "is", "not", "None", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Restoring weights file: {}\"", ".", "format", "(", "weights_file", ")", ")", "\n", "tf", ".", "train", ".", "Saver", "(", ")", ".", "restore", "(", "sess", ",", "weights_file", ")", "\n", "", "else", ":", "\n", "            ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "sess", "=", "sess", ",", "coord", "=", "coord", ")", "\n", "\n", "try", ":", "\n", "            ", "for", "e", "in", "range", "(", "start_epoch", ",", "end_epoch", "+", "1", ")", ":", "\n", "                ", "train", "(", "out", ",", "sess", ",", "e", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "is_training_ph", ")", "\n", "\n", "validate", "(", "out", ",", "sess", ",", "e", ",", "validation_steps", ",", "loss_op", ",", "acc_top_1_op", ",", "\n", "acc_top_5_op", ",", "global_step", ",", "is_training_ph", ")", "\n", "", "", "except", "tf", ".", "errors", ".", "OutOfRangeError", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Finished.\"", ")", "\n", "", "finally", ":", "\n", "            ", "coord", ".", "request_stop", "(", ")", "\n", "", "coord", ".", "join", "(", "threads", ")", "\n", "sess", ".", "close", "(", ")", "\n", "\n", "", "out", ".", "close_files", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_hvc_decaying.train": [[25, 44], ["range", "out.train_end", "out.train_step_begin", "sess.run", "out.train_step_end", "out.get_run_options", "out.get_run_metadata"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_begin", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_options", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_metadata"], ["def", "train", "(", "out", ",", "sess", ",", "epoch", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "learning_rate", ",", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", "=", "0", "\n", "for", "i", "in", "range", "(", "training_steps", ")", ":", "\n", "        ", "out", ".", "train_step_begin", "(", "i", ")", "\n", "\n", "_", ",", "l", ",", "g_step", ",", "lr", "=", "sess", ".", "run", "(", "\n", "[", "train_op", ",", "loss_op", ",", "global_step", ",", "learning_rate", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ",", "\n", "options", "=", "out", ".", "get_run_options", "(", ")", ",", "\n", "run_metadata", "=", "out", ".", "get_run_metadata", "(", ")", ")", "\n", "\n", "out", ".", "train_step_end", "(", "\n", "sess", ",", "epoch", ",", "g_step", ",", "i", ",", "l", ",", "lr", ",", "training_steps", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "\n", "", "out", ".", "train_end", "(", "sess", ",", "epoch", ",", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_hvc_decaying.validate": [[46, 63], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate", "(", "out", ",", "sess", ",", "epoch", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "learning_rate", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", ",", "lr", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", ",", "lr", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", ",", "learning_rate", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "False", ",", "\n", "test_loss", ",", "lr", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_hvc_decaying.validate_nbl": [[65, 82], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate_nbl", "(", "out", ",", "sess", ",", "epoch", ",", "nbl_validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "learning_rate", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", ",", "lr", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "nbl_validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "nbl_validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", ",", "lr", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", ",", "learning_rate", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "True", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "True", ",", "\n", "test_loss", ",", "lr", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_hvc_decaying.go": [[84, 173], ["tensorflow.reset_default_graph", "inception_v3.output.Output", "inception_v3.output.Output.log_msg", "input_sieve.DataSet", "input_sieve.DataSet", "input_sieve.train_inputs", "input_sieve.eval_inputs", "input_sieve.non_blacklisted_eval_inputs", "input_sieve.DataSet.training_batches_per_epoch", "input_sieve.DataSet.validation_batches_per_epoch", "input_sieve.DataSet.nbl_validation_batches_per_epoch", "inception_v3.output.Output.log_msg", "inception_v3.output.Output.close_files", "tensorflow.device", "tensorflow.train.get_or_create_global_step", "int", "tensorflow.train.exponential_decay", "tensorflow.maximum", "tensorflow.train.AdamOptimizer", "inception_v3.model_hvc.run_towers", "tensorflow.Session", "inception_v3.output.Output.set_session_graph", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tf.train.Coordinator.join", "sess.close", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "input_sieve.DataSet.num_classes", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver().restore", "tensorflow.global_variables_initializer().run", "range", "tf.train.Coordinator.request_stop", "tensorflow.ConfigProto", "train_inception_v3_hvc_decaying.train", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver", "tensorflow.global_variables_initializer", "train_inception_v3_hvc_decaying.validate", "train_inception_v3_hvc_decaying.validate_nbl"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.train_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.non_blacklisted_eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.training_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.nbl_validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.close_files", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.run_towers", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.set_session_graph", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.num_classes", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.train", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate_nbl"], ["", "def", "go", "(", "start_epoch", ",", "end_epoch", ",", "run_name", ",", "weights_file", ",", "\n", "profile_compute_time_every_n_steps", ",", "save_summary_info_every_n_steps", ",", "\n", "log_annotated_images", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ",", "log_dir", ",", "do_validate_all", ",", "do_validate_nbl", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "out", "=", "Output", "(", "log_dir", ",", "run_name", ",", "profile_compute_time_every_n_steps", ",", "\n", "save_summary_info_every_n_steps", ")", "\n", "\n", "############################################################################", "\n", "# Data feeds", "\n", "############################################################################", "\n", "out", ".", "log_msg", "(", "\"Setting up data feeds...\"", ")", "\n", "training_dataset", "=", "DataSet", "(", "'train'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "None", ")", "\n", "validation_dataset", "=", "DataSet", "(", "'validation'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ")", "\n", "training_data", "=", "train_inputs", "(", "training_dataset", ",", "log_annotated_images", ")", "\n", "validation_data", "=", "eval_inputs", "(", "validation_dataset", ",", "log_annotated_images", ")", "\n", "nbl_val_data", "=", "non_blacklisted_eval_inputs", "(", "\n", "validation_dataset", ",", "log_annotated_images", ")", "\n", "training_steps", "=", "training_dataset", ".", "training_batches_per_epoch", "(", ")", "\n", "validation_steps", "=", "validation_dataset", ".", "validation_batches_per_epoch", "(", ")", "\n", "nbl_val_steps", "=", "validation_dataset", ".", "nbl_validation_batches_per_epoch", "(", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow placeholders and operations", "\n", "############################################################################", "\n", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ":", "# set the default device to the CPU", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"input/placeholders\"", ")", ":", "\n", "            ", "is_training_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "is_validating_nbl_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "decay_steps", "=", "int", "(", "training_steps", "*", "1.0", ")", "\n", "learning_rate_op", "=", "tf", ".", "train", ".", "exponential_decay", "(", "0.001", ",", "\n", "global_step", ",", "decay_steps", ",", "0.96", ",", "staircase", "=", "True", ")", "\n", "learning_rate_op", "=", "tf", ".", "maximum", "(", "learning_rate_op", ",", "1e-6", ")", "\n", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate_op", ")", "\n", "\n", "train_op", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "=", "run_towers", "(", "opt", ",", "global_step", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ",", "training_data", ",", "\n", "validation_data", ",", "nbl_val_data", ",", "\n", "DataSet", ".", "num_classes", "(", ")", ",", "num_gpus", ")", "\n", "\n", "", "out", ".", "log_msg", "(", "\"Starting Session...\"", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow session", "\n", "############################################################################", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", ")", "as", "sess", ":", "\n", "        ", "out", ".", "set_session_graph", "(", "sess", ".", "graph", ")", "\n", "\n", "if", "weights_file", "is", "not", "None", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Restoring weights file: {}\"", ".", "format", "(", "weights_file", ")", ")", "\n", "tf", ".", "train", ".", "Saver", "(", ")", ".", "restore", "(", "sess", ",", "weights_file", ")", "\n", "", "else", ":", "\n", "            ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "sess", "=", "sess", ",", "coord", "=", "coord", ")", "\n", "\n", "try", ":", "\n", "            ", "for", "e", "in", "range", "(", "start_epoch", ",", "end_epoch", "+", "1", ")", ":", "\n", "                ", "train", "(", "out", ",", "sess", ",", "e", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "learning_rate_op", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", "\n", "\n", "if", "do_validate_all", ":", "\n", "                    ", "validate", "(", "out", ",", "sess", ",", "e", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "learning_rate_op", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ")", "\n", "\n", "", "if", "do_validate_nbl", ":", "\n", "                    ", "validate_nbl", "(", "out", ",", "sess", ",", "e", ",", "nbl_val_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "learning_rate_op", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ")", "\n", "", "", "", "except", "tf", ".", "errors", ".", "OutOfRangeError", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Finished.\"", ")", "\n", "", "finally", ":", "\n", "            ", "coord", ".", "request_stop", "(", ")", "\n", "", "coord", ".", "join", "(", "threads", ")", "\n", "sess", ".", "close", "(", ")", "\n", "\n", "", "out", ".", "close_files", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_hvc_defaults.train": [[25, 44], ["range", "out.train_end", "out.train_step_begin", "sess.run", "out.train_step_end", "out.get_run_options", "out.get_run_metadata"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_begin", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_options", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_metadata"], ["def", "train", "(", "out", ",", "sess", ",", "epoch", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", "=", "0", "\n", "for", "i", "in", "range", "(", "training_steps", ")", ":", "\n", "        ", "out", ".", "train_step_begin", "(", "i", ")", "\n", "\n", "_", ",", "l", ",", "g_step", "=", "sess", ".", "run", "(", "\n", "[", "train_op", ",", "loss_op", ",", "global_step", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ",", "\n", "options", "=", "out", ".", "get_run_options", "(", ")", ",", "\n", "run_metadata", "=", "out", ".", "get_run_metadata", "(", ")", ")", "\n", "\n", "out", ".", "train_step_end", "(", "\n", "sess", ",", "epoch", ",", "g_step", ",", "i", ",", "l", ",", "\"DEFAULT\"", ",", "training_steps", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "\n", "", "out", ".", "train_end", "(", "sess", ",", "epoch", ",", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_hvc_defaults.validate": [[46, 63], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate", "(", "out", ",", "sess", ",", "epoch", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", "=", "(", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "False", ",", "\n", "test_loss", ",", "\"DEFAULT\"", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_hvc_defaults.validate_nbl": [[65, 82], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate_nbl", "(", "out", ",", "sess", ",", "epoch", ",", "nbl_validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", "=", "(", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "nbl_validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "nbl_validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "True", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "True", ",", "\n", "test_loss", ",", "\"DEFAULT\"", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_hvc_defaults.go": [[84, 166], ["tensorflow.reset_default_graph", "inception_v3.output.Output", "inception_v3.output.Output.log_msg", "input_sieve.DataSet", "input_sieve.DataSet", "input_sieve.train_inputs", "input_sieve.eval_inputs", "input_sieve.non_blacklisted_eval_inputs", "input_sieve.DataSet.training_batches_per_epoch", "input_sieve.DataSet.validation_batches_per_epoch", "input_sieve.DataSet.nbl_validation_batches_per_epoch", "inception_v3.output.Output.log_msg", "inception_v3.output.Output.close_files", "tensorflow.device", "tensorflow.train.get_or_create_global_step", "tensorflow.train.AdamOptimizer", "inception_v3.model_hvc.run_towers", "tensorflow.Session", "inception_v3.output.Output.set_session_graph", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tf.train.Coordinator.join", "sess.close", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "input_sieve.DataSet.num_classes", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver().restore", "tensorflow.global_variables_initializer().run", "range", "tf.train.Coordinator.request_stop", "tensorflow.ConfigProto", "train_inception_v3_hvc_defaults.train", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver", "tensorflow.global_variables_initializer", "train_inception_v3_hvc_defaults.validate", "train_inception_v3_hvc_defaults.validate_nbl"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.train_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.non_blacklisted_eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.training_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.nbl_validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.close_files", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.run_towers", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.set_session_graph", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.num_classes", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.train", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate_nbl"], ["", "def", "go", "(", "start_epoch", ",", "end_epoch", ",", "run_name", ",", "weights_file", ",", "\n", "profile_compute_time_every_n_steps", ",", "save_summary_info_every_n_steps", ",", "\n", "log_annotated_images", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ",", "log_dir", ",", "do_validate_all", ",", "do_validate_nbl", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "out", "=", "Output", "(", "log_dir", ",", "run_name", ",", "profile_compute_time_every_n_steps", ",", "\n", "save_summary_info_every_n_steps", ")", "\n", "\n", "############################################################################", "\n", "# Data feeds", "\n", "############################################################################", "\n", "out", ".", "log_msg", "(", "\"Setting up data feeds...\"", ")", "\n", "training_dataset", "=", "DataSet", "(", "'train'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "None", ")", "\n", "validation_dataset", "=", "DataSet", "(", "'validation'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ")", "\n", "training_data", "=", "train_inputs", "(", "training_dataset", ",", "log_annotated_images", ")", "\n", "validation_data", "=", "eval_inputs", "(", "validation_dataset", ",", "log_annotated_images", ")", "\n", "nbl_val_data", "=", "non_blacklisted_eval_inputs", "(", "\n", "validation_dataset", ",", "log_annotated_images", ")", "\n", "training_steps", "=", "training_dataset", ".", "training_batches_per_epoch", "(", ")", "\n", "validation_steps", "=", "validation_dataset", ".", "validation_batches_per_epoch", "(", ")", "\n", "nbl_val_steps", "=", "validation_dataset", ".", "nbl_validation_batches_per_epoch", "(", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow placeholders and operations", "\n", "############################################################################", "\n", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ":", "# set the default device to the CPU", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"input/placeholders\"", ")", ":", "\n", "            ", "is_training_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "is_validating_nbl_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", ")", "\n", "\n", "train_op", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "=", "run_towers", "(", "opt", ",", "global_step", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ",", "training_data", ",", "\n", "validation_data", ",", "nbl_val_data", ",", "\n", "DataSet", ".", "num_classes", "(", ")", ",", "num_gpus", ")", "\n", "\n", "", "out", ".", "log_msg", "(", "\"Starting Session...\"", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow session", "\n", "############################################################################", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", ")", "as", "sess", ":", "\n", "        ", "out", ".", "set_session_graph", "(", "sess", ".", "graph", ")", "\n", "\n", "if", "weights_file", "is", "not", "None", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Restoring weights file: {}\"", ".", "format", "(", "weights_file", ")", ")", "\n", "tf", ".", "train", ".", "Saver", "(", ")", ".", "restore", "(", "sess", ",", "weights_file", ")", "\n", "", "else", ":", "\n", "            ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "sess", "=", "sess", ",", "coord", "=", "coord", ")", "\n", "\n", "try", ":", "\n", "            ", "for", "e", "in", "range", "(", "start_epoch", ",", "end_epoch", "+", "1", ")", ":", "\n", "                ", "train", "(", "out", ",", "sess", ",", "e", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "is_training_ph", ",", "is_validating_nbl_ph", ")", "\n", "\n", "if", "do_validate_all", ":", "\n", "                    ", "validate", "(", "out", ",", "sess", ",", "e", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", "\n", "\n", "", "if", "do_validate_nbl", ":", "\n", "                    ", "validate_nbl", "(", "out", ",", "sess", ",", "e", ",", "nbl_val_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", "\n", "", "", "", "except", "tf", ".", "errors", ".", "OutOfRangeError", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Finished.\"", ")", "\n", "", "finally", ":", "\n", "            ", "coord", ".", "request_stop", "(", ")", "\n", "", "coord", ".", "join", "(", "threads", ")", "\n", "sess", ".", "close", "(", ")", "\n", "\n", "", "out", ".", "close_files", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_1.train": [[25, 44], ["range", "out.train_end", "out.train_step_begin", "sess.run", "out.train_step_end", "out.get_run_options", "out.get_run_metadata"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_begin", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_options", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_metadata"], ["def", "train", "(", "out", ",", "sess", ",", "epoch", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "learning_rate", ",", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", "=", "0", "\n", "for", "i", "in", "range", "(", "training_steps", ")", ":", "\n", "        ", "out", ".", "train_step_begin", "(", "i", ")", "\n", "\n", "_", ",", "l", ",", "g_step", ",", "lr", "=", "sess", ".", "run", "(", "\n", "[", "train_op", ",", "loss_op", ",", "global_step", ",", "learning_rate", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ",", "\n", "options", "=", "out", ".", "get_run_options", "(", ")", ",", "\n", "run_metadata", "=", "out", ".", "get_run_metadata", "(", ")", ")", "\n", "\n", "out", ".", "train_step_end", "(", "\n", "sess", ",", "epoch", ",", "g_step", ",", "i", ",", "l", ",", "lr", ",", "training_steps", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "\n", "", "out", ".", "train_end", "(", "sess", ",", "epoch", ",", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_1.validate": [[46, 63], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate", "(", "out", ",", "sess", ",", "epoch", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "learning_rate", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", ",", "lr", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", ",", "lr", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", ",", "learning_rate", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "False", ",", "\n", "test_loss", ",", "lr", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_1.validate_nbl": [[65, 82], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate_nbl", "(", "out", ",", "sess", ",", "epoch", ",", "nbl_validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "learning_rate", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", ",", "lr", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "nbl_validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "nbl_validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", ",", "lr", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", ",", "learning_rate", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "True", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "True", ",", "\n", "test_loss", ",", "lr", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_1.go": [[84, 174], ["tensorflow.reset_default_graph", "inception_v3.output.Output", "inception_v3.output.Output.log_msg", "input_sieve.DataSet", "input_sieve.DataSet", "input_sieve.train_inputs", "input_sieve.eval_inputs", "input_sieve.non_blacklisted_eval_inputs", "input_sieve.DataSet.training_batches_per_epoch", "input_sieve.DataSet.validation_batches_per_epoch", "input_sieve.DataSet.nbl_validation_batches_per_epoch", "inception_v3.output.Output.log_msg", "inception_v3.output.Output.close_files", "tensorflow.device", "tensorflow.train.get_or_create_global_step", "int", "tensorflow.train.exponential_decay", "tensorflow.train.RMSPropOptimizer", "inception_v3.model.run_towers", "tensorflow.Session", "inception_v3.output.Output.set_session_graph", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tf.train.Coordinator.join", "sess.close", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "input_sieve.DataSet.num_classes", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver().restore", "tensorflow.global_variables_initializer().run", "range", "tf.train.Coordinator.request_stop", "tensorflow.ConfigProto", "train_inception_v3_baseline_1.train", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver", "tensorflow.global_variables_initializer", "train_inception_v3_baseline_1.validate", "train_inception_v3_baseline_1.validate_nbl"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.train_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.non_blacklisted_eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.training_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.nbl_validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.close_files", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.run_towers", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.set_session_graph", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.num_classes", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.train", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate_nbl"], ["", "def", "go", "(", "start_epoch", ",", "end_epoch", ",", "run_name", ",", "weights_file", ",", "\n", "profile_compute_time_every_n_steps", ",", "save_summary_info_every_n_steps", ",", "\n", "log_annotated_images", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ",", "log_dir", ",", "do_validate_all", ",", "do_validate_nbl", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "out", "=", "Output", "(", "log_dir", ",", "run_name", ",", "profile_compute_time_every_n_steps", ",", "\n", "save_summary_info_every_n_steps", ")", "\n", "\n", "############################################################################", "\n", "# Data feeds", "\n", "############################################################################", "\n", "out", ".", "log_msg", "(", "\"Setting up data feeds...\"", ")", "\n", "training_dataset", "=", "DataSet", "(", "'train'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "None", ")", "\n", "validation_dataset", "=", "DataSet", "(", "'validation'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ")", "\n", "training_data", "=", "train_inputs", "(", "training_dataset", ",", "log_annotated_images", ")", "\n", "validation_data", "=", "eval_inputs", "(", "validation_dataset", ",", "log_annotated_images", ")", "\n", "nbl_val_data", "=", "non_blacklisted_eval_inputs", "(", "\n", "validation_dataset", ",", "log_annotated_images", ")", "\n", "training_steps", "=", "training_dataset", ".", "training_batches_per_epoch", "(", ")", "\n", "validation_steps", "=", "validation_dataset", ".", "validation_batches_per_epoch", "(", ")", "\n", "nbl_val_steps", "=", "validation_dataset", ".", "nbl_validation_batches_per_epoch", "(", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow placeholders and operations", "\n", "############################################################################", "\n", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ":", "# set the default device to the CPU", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"input/placeholders\"", ")", ":", "\n", "            ", "is_training_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "is_validating_nbl_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "decay_steps", "=", "int", "(", "training_steps", "*", "2.0", ")", "\n", "learning_rate_op", "=", "tf", ".", "train", ".", "exponential_decay", "(", "\n", "0.045", ",", "global_step", ",", "decay_steps", ",", "\n", "0.94", ",", "staircase", "=", "True", ")", "\n", "opt", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "learning_rate_op", ",", "\n", "decay", "=", "0.9", ",", "momentum", "=", "0.9", ",", "epsilon", "=", "1.0", ")", "\n", "\n", "train_op", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "=", "run_towers", "(", "opt", ",", "global_step", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ",", "training_data", ",", "\n", "validation_data", ",", "nbl_val_data", ",", "\n", "DataSet", ".", "num_classes", "(", ")", ",", "num_gpus", ")", "\n", "\n", "", "out", ".", "log_msg", "(", "\"Starting Session...\"", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow session", "\n", "############################################################################", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", ")", "as", "sess", ":", "\n", "        ", "out", ".", "set_session_graph", "(", "sess", ".", "graph", ")", "\n", "\n", "if", "weights_file", "is", "not", "None", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Restoring weights file: {}\"", ".", "format", "(", "weights_file", ")", ")", "\n", "tf", ".", "train", ".", "Saver", "(", ")", ".", "restore", "(", "sess", ",", "weights_file", ")", "\n", "", "else", ":", "\n", "            ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "sess", "=", "sess", ",", "coord", "=", "coord", ")", "\n", "\n", "try", ":", "\n", "            ", "for", "e", "in", "range", "(", "start_epoch", ",", "end_epoch", "+", "1", ")", ":", "\n", "                ", "train", "(", "out", ",", "sess", ",", "e", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "learning_rate_op", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", "\n", "\n", "if", "do_validate_all", ":", "\n", "                    ", "validate", "(", "out", ",", "sess", ",", "e", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "learning_rate_op", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ")", "\n", "\n", "", "if", "do_validate_nbl", ":", "\n", "                    ", "validate_nbl", "(", "out", ",", "sess", ",", "e", ",", "nbl_val_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "learning_rate_op", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ")", "\n", "", "", "", "except", "tf", ".", "errors", ".", "OutOfRangeError", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Finished.\"", ")", "\n", "", "finally", ":", "\n", "            ", "coord", ".", "request_stop", "(", ")", "\n", "", "coord", ".", "join", "(", "threads", ")", "\n", "sess", ".", "close", "(", ")", "\n", "\n", "", "out", ".", "close_files", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.__init__": [[37, 50], ["open", "len", "int", "line.strip", "open.readlines"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "subset", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ")", ":", "\n", "        ", "self", ".", "subset", "=", "subset", "\n", "self", ".", "image_size", "=", "image_size", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "num_gpus", "=", "num_gpus", "\n", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "bl_images", "=", "[", "]", "\n", "self", ".", "bl_image_count", "=", "0", "\n", "if", "black_list_file", "is", "not", "None", ":", "\n", "            ", "bl_file", "=", "open", "(", "black_list_file", ",", "\"r\"", ")", "\n", "self", ".", "bl_images", "=", "[", "int", "(", "line", ".", "strip", "(", ")", ")", "for", "line", "in", "bl_file", ".", "readlines", "(", ")", "]", "\n", "self", ".", "bl_image_count", "=", "len", "(", "self", ".", "bl_images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.num_classes": [[51, 54], ["None"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "num_classes", "(", ")", ":", "\n", "        ", "return", "CLASSES", "+", "BACKGROUND_CLASSES", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.training_batches_per_epoch": [[55, 57], ["int", "math.ceil"], "methods", ["None"], ["", "def", "training_batches_per_epoch", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "math", ".", "ceil", "(", "TRAIN_IMAGE_COUNT", "/", "self", ".", "batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.validation_batches_per_epoch": [[58, 60], ["int", "math.ceil"], "methods", ["None"], ["", "def", "validation_batches_per_epoch", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "math", ".", "ceil", "(", "VALIDATION_IMAGE_COUNT", "/", "self", ".", "batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.nbl_validation_batches_per_epoch": [[61, 64], ["int", "math.ceil"], "methods", ["None"], ["", "def", "nbl_validation_batches_per_epoch", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "math", ".", "ceil", "(", "(", "VALIDATION_IMAGE_COUNT", "-", "self", ".", "bl_image_count", ")", "\n", "/", "self", ".", "batch_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.data_files": [[65, 69], ["os.path.join", "tensorflow.gfile.Glob"], "methods", ["None"], ["", "def", "data_files", "(", "self", ")", ":", "\n", "        ", "tf_record_pattern", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "'%s-*'", "%", "self", ".", "subset", ")", "\n", "data_files", "=", "tf", ".", "gfile", ".", "Glob", "(", "tf_record_pattern", ")", "\n", "return", "data_files", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.train_inputs": [[71, 74], ["input_sieve.batch_inputs"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.batch_inputs"], ["", "", "def", "train_inputs", "(", "dataset", ",", "log_annotated_images", "=", "False", ")", ":", "\n", "    ", "return", "batch_inputs", "(", "dataset", ",", "\n", "log_annotated_images", ",", "True", ",", "READERS", ",", "False", ",", "\"input/batch_train\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_inputs": [[76, 79], ["input_sieve.batch_inputs"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.batch_inputs"], ["", "def", "eval_inputs", "(", "dataset", ",", "log_annotated_images", "=", "False", ")", ":", "\n", "    ", "return", "batch_inputs", "(", "dataset", ",", "\n", "log_annotated_images", ",", "False", ",", "1", ",", "False", ",", "\"input/batch_eval\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.non_blacklisted_eval_inputs": [[81, 84], ["input_sieve.batch_inputs"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.batch_inputs"], ["", "def", "non_blacklisted_eval_inputs", "(", "dataset", ",", "log_annotated_images", "=", "False", ")", ":", "\n", "    ", "return", "batch_inputs", "(", "dataset", ",", "\n", "log_annotated_images", ",", "False", ",", "1", ",", "True", ",", "\"input/batch_nbl_eval\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.batch_inputs": [[86, 145], ["tensorflow.device", "tensorflow.name_scope", "dataset.data_files", "tensorflow.train.string_input_producer", "range", "tensorflow.train.batch_join", "tensorflow.cast", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.RandomShuffleQueue", "tensorflow.FIFOQueue", "range", "tensorflow.train.queue_runner.add_queue_runner", "tf.FIFOQueue.dequeue", "tensorflow.TFRecordReader", "tf.TFRecordReader.read", "input_sieve.parse_example_proto", "tensorflow.one_hot", "tensorflow.TFRecordReader", "tf.TFRecordReader.read", "enqueue_ops.append", "tensorflow.train.queue_runner.QueueRunner", "input_sieve.image_preprocessing", "images_and_labels.append", "dataset.num_classes", "tf.FIFOQueue.enqueue", "str"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.data_files", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.parse_example_proto", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.image_preprocessing", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.num_classes"], ["", "def", "batch_inputs", "(", "dataset", ",", "log_annotated_images", ",", "\n", "train", ",", "num_readers", ",", "filter_blacklist", ",", "scope_name", ")", ":", "\n", "    ", "with", "tf", ".", "device", "(", "'/cpu:0'", ")", ",", "tf", ".", "name_scope", "(", "scope_name", ")", ":", "\n", "        ", "data_files", "=", "dataset", ".", "data_files", "(", ")", "\n", "\n", "filename_queue", "=", "tf", ".", "train", ".", "string_input_producer", "(", "\n", "data_files", ",", "shuffle", "=", "train", ",", "\n", "capacity", "=", "INPUT_QUEUE_MEMORY_FACTOR", "*", "2", "if", "train", "else", "1", ")", "\n", "\n", "num_preprocess_threads", "=", "PREPROCESS_THREADS", "\n", "examples_per_shard", "=", "EXAMPLES_PER_SHARD", "\n", "min_queue_examples", "=", "examples_per_shard", "*", "INPUT_QUEUE_MEMORY_FACTOR", "\n", "\n", "if", "train", ":", "\n", "            ", "examples_queue", "=", "tf", ".", "RandomShuffleQueue", "(", "\n", "capacity", "=", "min_queue_examples", "+", "3", "*", "dataset", ".", "batch_size", ",", "\n", "min_after_dequeue", "=", "min_queue_examples", ",", "dtypes", "=", "[", "tf", ".", "string", "]", ")", "\n", "", "else", ":", "\n", "            ", "examples_queue", "=", "tf", ".", "FIFOQueue", "(", "\n", "capacity", "=", "examples_per_shard", "+", "3", "*", "dataset", ".", "batch_size", ",", "\n", "dtypes", "=", "[", "tf", ".", "string", "]", ")", "\n", "\n", "", "if", "num_readers", ">", "1", ":", "\n", "            ", "enqueue_ops", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_readers", ")", ":", "\n", "                ", "reader", "=", "tf", ".", "TFRecordReader", "(", ")", "\n", "_", ",", "value", "=", "reader", ".", "read", "(", "filename_queue", ")", "\n", "enqueue_ops", ".", "append", "(", "examples_queue", ".", "enqueue", "(", "[", "value", "]", ")", ")", "\n", "\n", "", "tf", ".", "train", ".", "queue_runner", ".", "add_queue_runner", "(", "\n", "tf", ".", "train", ".", "queue_runner", ".", "QueueRunner", "(", "examples_queue", ",", "enqueue_ops", ")", ")", "\n", "example_serialized", "=", "examples_queue", ".", "dequeue", "(", ")", "\n", "", "else", ":", "\n", "            ", "reader", "=", "tf", ".", "TFRecordReader", "(", ")", "\n", "_", ",", "example_serialized", "=", "reader", ".", "read", "(", "filename_queue", ")", "\n", "\n", "", "images_and_labels", "=", "[", "]", "\n", "for", "thread_id", "in", "range", "(", "num_preprocess_threads", ")", ":", "\n", "            ", "image_buffer", ",", "label_index", ",", "bbox", ",", "text", ",", "synset", ",", "filename", "=", "parse_example_proto", "(", "example_serialized", ")", "\n", "if", "not", "filter_blacklist", "or", "filename", "!=", "[", "\"ILSVRC2012_val_\"", "+", "(", "\"00000000\"", "+", "str", "(", "bli", ")", ")", "[", ":", "8", "]", "+", "\".JPG\"", "\n", "for", "bli", "in", "dataset", ".", "bl_images", "]", ":", "\n", "                ", "image", "=", "image_preprocessing", "(", "image_buffer", ",", "dataset", ".", "image_size", ",", "\n", "dataset", ".", "image_size", ",", "bbox", ",", "label_index", ",", "text", ",", "synset", ",", "\n", "log_annotated_images", ",", "train", ",", "thread_id", ")", "\n", "images_and_labels", ".", "append", "(", "[", "image", ",", "label_index", ",", "text", ",", "synset", "]", ")", "\n", "", "", "images", ",", "labels", ",", "texts", ",", "synsets", "=", "tf", ".", "train", ".", "batch_join", "(", "\n", "images_and_labels", ",", "batch_size", "=", "dataset", ".", "batch_size", "//", "dataset", ".", "num_gpus", ",", "\n", "capacity", "=", "2", "*", "num_preprocess_threads", "*", "dataset", ".", "batch_size", ")", "\n", "\n", "images", "=", "tf", ".", "cast", "(", "images", ",", "tf", ".", "float32", ")", "\n", "images", "=", "tf", ".", "reshape", "(", "images", ",", "shape", "=", "[", "\n", "dataset", ".", "batch_size", "//", "dataset", ".", "num_gpus", ",", "\n", "dataset", ".", "image_size", ",", "dataset", ".", "image_size", ",", "3", "]", ")", "\n", "\n", "labels", "=", "tf", ".", "reshape", "(", "labels", ",", "[", "dataset", ".", "batch_size", "//", "dataset", ".", "num_gpus", "]", ")", "\n", "\n", "return", "images", ",", "tf", ".", "one_hot", "(", "labels", ",", "dataset", ".", "num_classes", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.annotate_images": [[147, 167], ["numpy.copy", "range", "isinstance", "isinstance", "isinstance", "cv2.putText", "cv2.putText", "cv2.putText", "label.decode.decode", "text.decode.decode", "syn.decode.decode", "str", "str", "str"], "function", ["None"], ["", "", "def", "annotate_images", "(", "imgs", ",", "labels", ",", "texts", ",", "synsets", ")", ":", "\n", "    ", "import", "cv2", "\n", "image_copy", "=", "np", ".", "copy", "(", "imgs", ")", "\n", "for", "i", "in", "range", "(", "image_copy", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "label", "=", "labels", "[", "i", "]", "\n", "text", "=", "texts", "[", "i", "]", "\n", "syn", "=", "synsets", "[", "i", "]", "\n", "if", "isinstance", "(", "labels", ",", "bytes", ")", ":", "\n", "            ", "label", "=", "label", ".", "decode", "(", ")", "\n", "", "if", "isinstance", "(", "text", ",", "bytes", ")", ":", "\n", "            ", "text", "=", "text", ".", "decode", "(", ")", "\n", "", "if", "isinstance", "(", "syn", ",", "bytes", ")", ":", "\n", "            ", "syn", "=", "syn", ".", "decode", "(", ")", "\n", "", "cv2", ".", "putText", "(", "image_copy", "[", "i", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "str", "(", "label", ")", ",", "(", "0", ",", "18", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX", ",", ".5", ",", "(", "1", ",", "1", ",", "0", ")", ",", "2", ")", "\n", "cv2", ".", "putText", "(", "image_copy", "[", "i", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "str", "(", "text", ")", ",", "(", "0", ",", "36", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX", ",", ".5", ",", "(", "1", ",", "1", ",", "0", ")", ",", "2", ")", "\n", "cv2", ".", "putText", "(", "image_copy", "[", "i", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "str", "(", "syn", ")", ",", "(", "0", ",", "54", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX", ",", ".5", ",", "(", "1", ",", "1", ",", "0", ")", ",", "2", ")", "\n", "", "return", "image_copy", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.image_preprocessing": [[169, 188], ["input_sieve.decode_jpeg", "tensorflow.multiply", "input_sieve.distort_image", "input_sieve.eval_image", "tensorflow.py_func", "tensorflow.summary.image", "tensorflow.subtract", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.decode_jpeg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.distort_image", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_image"], ["", "def", "image_preprocessing", "(", "image_buffer", ",", "image_height", ",", "image_width", ",", "bbox", ",", "label", ",", "\n", "text", ",", "synset", ",", "log_annotated_images", ",", "train", ",", "thread_id", "=", "0", ")", ":", "\n", "    ", "image", "=", "decode_jpeg", "(", "image_buffer", ")", "\n", "if", "train", ":", "\n", "        ", "image", "=", "distort_image", "(", "image", ",", "log_annotated_images", ",", "\n", "image_height", ",", "image_width", ",", "bbox", ",", "thread_id", ")", "\n", "", "else", ":", "\n", "        ", "image", "=", "eval_image", "(", "image", ",", "image_height", ",", "image_width", ")", "\n", "\n", "", "if", "log_annotated_images", "and", "not", "thread_id", ":", "\n", "        ", "labeled_images", "=", "tf", ".", "py_func", "(", "annotate_images", ",", "\n", "[", "tf", ".", "expand_dims", "(", "image", ",", "0", ")", ",", "\n", "tf", ".", "expand_dims", "(", "label", ",", "0", ")", ",", "\n", "tf", ".", "expand_dims", "(", "text", ",", "0", ")", ",", "\n", "tf", ".", "expand_dims", "(", "synset", ",", "0", ")", "]", ",", "Tout", "=", "image", ".", "dtype", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'annotated_images'", ",", "labeled_images", ")", "\n", "\n", "# rescale to [-1,1] instead of [0, 1)", "\n", "", "return", "tf", ".", "multiply", "(", "tf", ".", "subtract", "(", "image", ",", "0.5", ")", ",", "2.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_image": [[190, 199], ["tensorflow.name_scope", "tensorflow.image.central_crop", "tensorflow.expand_dims", "tensorflow.image.resize_bilinear", "tensorflow.squeeze"], "function", ["None"], ["", "def", "eval_image", "(", "image", ",", "height", ",", "width", ",", "scope", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "values", "=", "[", "image", ",", "height", ",", "width", "]", ",", "\n", "name", "=", "scope", ",", "default_name", "=", "'eval_image'", ")", ":", "\n", "        ", "image", "=", "tf", ".", "image", ".", "central_crop", "(", "image", ",", "central_fraction", "=", "0.875", ")", "\n", "# Resize the image to the original height and width.", "\n", "image", "=", "tf", ".", "expand_dims", "(", "image", ",", "0", ")", "\n", "image", "=", "tf", ".", "image", ".", "resize_bilinear", "(", "image", ",", "[", "height", ",", "width", "]", ",", "\n", "align_corners", "=", "False", ")", "\n", "return", "tf", ".", "squeeze", "(", "image", ",", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.decode_jpeg": [[201, 206], ["tensorflow.name_scope", "tensorflow.image.decode_jpeg", "tensorflow.image.convert_image_dtype"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.decode_jpeg"], ["", "", "def", "decode_jpeg", "(", "image_buffer", ",", "scope", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "values", "=", "[", "image_buffer", "]", ",", "\n", "name", "=", "scope", ",", "default_name", "=", "'decode_jpeg'", ")", ":", "\n", "        ", "image", "=", "tf", ".", "image", ".", "decode_jpeg", "(", "image_buffer", ",", "channels", "=", "3", ")", "\n", "return", "tf", ".", "image", ".", "convert_image_dtype", "(", "image", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.distort_color": [[208, 222], ["tensorflow.name_scope", "tensorflow.clip_by_value", "tensorflow.image.random_brightness", "tensorflow.image.random_saturation", "tensorflow.image.random_hue", "tensorflow.image.random_contrast", "tensorflow.image.random_brightness", "tensorflow.image.random_contrast", "tensorflow.image.random_saturation", "tensorflow.image.random_hue"], "function", ["None"], ["", "", "def", "distort_color", "(", "image", ",", "thread_id", "=", "0", ",", "scope", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "values", "=", "[", "image", "]", ",", "\n", "name", "=", "scope", ",", "default_name", "=", "'distort_color'", ")", ":", "\n", "        ", "if", "thread_id", "%", "2", "==", "0", ":", "\n", "            ", "image", "=", "tf", ".", "image", ".", "random_brightness", "(", "image", ",", "max_delta", "=", "32.", "/", "255.", ")", "\n", "image", "=", "tf", ".", "image", ".", "random_saturation", "(", "image", ",", "lower", "=", "0.5", ",", "upper", "=", "1.5", ")", "\n", "image", "=", "tf", ".", "image", ".", "random_hue", "(", "image", ",", "max_delta", "=", "0.2", ")", "\n", "image", "=", "tf", ".", "image", ".", "random_contrast", "(", "image", ",", "lower", "=", "0.5", ",", "upper", "=", "1.5", ")", "\n", "", "else", ":", "\n", "            ", "image", "=", "tf", ".", "image", ".", "random_brightness", "(", "image", ",", "max_delta", "=", "32.", "/", "255.", ")", "\n", "image", "=", "tf", ".", "image", ".", "random_contrast", "(", "image", ",", "lower", "=", "0.5", ",", "upper", "=", "1.5", ")", "\n", "image", "=", "tf", ".", "image", ".", "random_saturation", "(", "image", ",", "lower", "=", "0.5", ",", "upper", "=", "1.5", ")", "\n", "image", "=", "tf", ".", "image", ".", "random_hue", "(", "image", ",", "max_delta", "=", "0.2", ")", "\n", "", "return", "tf", ".", "clip_by_value", "(", "image", ",", "0.0", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.distort_image": [[224, 272], ["tensorflow.name_scope", "tensorflow.image.sample_distorted_bounding_box", "tensorflow.slice", "tensorflow.image.resize_images", "distort_color.set_shape", "tensorflow.image.random_flip_left_right", "input_sieve.distort_color", "tensorflow.image.draw_bounding_boxes", "tensorflow.summary.image", "tensorflow.shape", "tensorflow.image.draw_bounding_boxes", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.distort_color"], ["", "", "def", "distort_image", "(", "image", ",", "log_annotated_images", ",", "\n", "height", ",", "width", ",", "bbox", ",", "thread_id", "=", "0", ",", "scope", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "values", "=", "[", "image", ",", "height", ",", "width", ",", "bbox", "]", ",", "\n", "name", "=", "scope", ",", "default_name", "=", "'distort_image'", ")", ":", "\n", "\n", "        ", "if", "log_annotated_images", "and", "not", "thread_id", ":", "\n", "            ", "image_with_box", "=", "tf", ".", "image", ".", "draw_bounding_boxes", "(", "\n", "tf", ".", "expand_dims", "(", "image", ",", "0", ")", ",", "bbox", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'image_with_bounding_boxes'", ",", "image_with_box", ")", "\n", "\n", "", "bbox_begin", ",", "bbox_size", ",", "distort_bbox", "=", "tf", ".", "image", ".", "sample_distorted_bounding_box", "(", "\n", "tf", ".", "shape", "(", "image", ")", ",", "bounding_boxes", "=", "bbox", ",", "min_object_covered", "=", "0.1", ",", "\n", "aspect_ratio_range", "=", "[", "0.75", ",", "1.33", "]", ",", "area_range", "=", "[", "0.05", ",", "1.0", "]", ",", "\n", "max_attempts", "=", "100", ",", "use_image_if_no_bounding_boxes", "=", "True", ")", "\n", "\n", "if", "log_annotated_images", "and", "not", "thread_id", ":", "\n", "            ", "image_with_distorted_box", "=", "tf", ".", "image", ".", "draw_bounding_boxes", "(", "\n", "tf", ".", "expand_dims", "(", "image", ",", "0", ")", ",", "distort_bbox", ")", "\n", "tf", ".", "summary", ".", "image", "(", "'images_with_distorted_bounding_box'", ",", "\n", "image_with_distorted_box", ")", "\n", "\n", "# Crop the image to the specified bounding box.", "\n", "", "distorted_image", "=", "tf", ".", "slice", "(", "image", ",", "bbox_begin", ",", "bbox_size", ")", "\n", "\n", "# This resizing operation may distort the images because the aspect", "\n", "# ratio is not respected. We select a resize method in a round robin", "\n", "# fashion based on the thread number.", "\n", "# Note that ResizeMethod contains 4 enumerated resizing methods.", "\n", "resize_method", "=", "thread_id", "%", "4", "\n", "distorted_image", "=", "tf", ".", "image", ".", "resize_images", "(", "\n", "distorted_image", ",", "[", "height", ",", "width", "]", ",", "method", "=", "resize_method", ")", "\n", "# Restore the shape since the dynamic slice based upon the bbox_size", "\n", "# loses the third dimension.", "\n", "distorted_image", ".", "set_shape", "(", "[", "height", ",", "width", ",", "3", "]", ")", "\n", "\n", "if", "log_annotated_images", "and", "not", "thread_id", ":", "\n", "            ", "tf", ".", "summary", ".", "image", "(", "'cropped_resized_image'", ",", "\n", "tf", ".", "expand_dims", "(", "distorted_image", ",", "0", ")", ")", "\n", "\n", "", "distorted_image", "=", "tf", ".", "image", ".", "random_flip_left_right", "(", "distorted_image", ")", "\n", "distorted_image", "=", "distort_color", "(", "distorted_image", ",", "thread_id", ")", "\n", "\n", "if", "log_annotated_images", "and", "not", "thread_id", ":", "\n", "            ", "tf", ".", "summary", ".", "image", "(", "'final_distorted_image'", ",", "\n", "tf", ".", "expand_dims", "(", "distorted_image", ",", "0", ")", ")", "\n", "\n", "", "return", "distorted_image", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.parse_example_proto": [[274, 302], ["tensorflow.VarLenFeature", "feature_map.update", "tensorflow.parse_single_example", "tensorflow.cast", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.concat", "tensorflow.expand_dims", "tensorflow.transpose", "tensorflow.FixedLenFeature", "tensorflow.FixedLenFeature", "tensorflow.FixedLenFeature", "tensorflow.FixedLenFeature", "tensorflow.FixedLenFeature"], "function", ["None"], ["", "", "def", "parse_example_proto", "(", "example_serialized", ")", ":", "\n", "    ", "feature_map", "=", "{", "\n", "'image/encoded'", ":", "tf", ".", "FixedLenFeature", "(", "[", "]", ",", "\n", "dtype", "=", "tf", ".", "string", ",", "default_value", "=", "''", ")", ",", "\n", "'image/class/label'", ":", "tf", ".", "FixedLenFeature", "(", "[", "1", "]", ",", "\n", "dtype", "=", "tf", ".", "int64", ",", "default_value", "=", "-", "1", ")", ",", "\n", "'image/class/text'", ":", "tf", ".", "FixedLenFeature", "(", "[", "]", ",", "\n", "dtype", "=", "tf", ".", "string", ",", "default_value", "=", "''", ")", ",", "\n", "'image/class/synset'", ":", "tf", ".", "FixedLenFeature", "(", "[", "]", ",", "\n", "dtype", "=", "tf", ".", "string", ",", "default_value", "=", "''", ")", ",", "\n", "'image/filename'", ":", "tf", ".", "FixedLenFeature", "(", "[", "]", ",", "\n", "dtype", "=", "tf", ".", "string", ",", "default_value", "=", "''", ")", "}", "\n", "sparse_float32", "=", "tf", ".", "VarLenFeature", "(", "dtype", "=", "tf", ".", "float32", ")", "\n", "feature_map", ".", "update", "(", "{", "k", ":", "sparse_float32", "for", "k", "in", "[", "\n", "'image/object/bbox/xmin'", ",", "'image/object/bbox/ymin'", ",", "\n", "'image/object/bbox/xmax'", ",", "'image/object/bbox/ymax'", "]", "}", ")", "\n", "features", "=", "tf", ".", "parse_single_example", "(", "example_serialized", ",", "feature_map", ")", "\n", "label", "=", "tf", ".", "cast", "(", "features", "[", "'image/class/label'", "]", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "xmin", "=", "tf", ".", "expand_dims", "(", "features", "[", "'image/object/bbox/xmin'", "]", ".", "values", ",", "0", ")", "\n", "ymin", "=", "tf", ".", "expand_dims", "(", "features", "[", "'image/object/bbox/ymin'", "]", ".", "values", ",", "0", ")", "\n", "xmax", "=", "tf", ".", "expand_dims", "(", "features", "[", "'image/object/bbox/xmax'", "]", ".", "values", ",", "0", ")", "\n", "ymax", "=", "tf", ".", "expand_dims", "(", "features", "[", "'image/object/bbox/ymax'", "]", ".", "values", ",", "0", ")", "\n", "bbox", "=", "tf", ".", "concat", "(", "axis", "=", "0", ",", "values", "=", "[", "ymin", ",", "xmin", ",", "ymax", ",", "xmax", "]", ")", "\n", "bbox", "=", "tf", ".", "expand_dims", "(", "bbox", ",", "0", ")", "\n", "bbox", "=", "tf", ".", "transpose", "(", "bbox", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "return", "features", "[", "'image/encoded'", "]", ",", "label", ",", "bbox", ",", "features", "[", "'image/class/text'", "]", ",", "features", "[", "'image/class/synset'", "]", ",", "features", "[", "'image/filename'", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_simple.train": [[24, 41], ["range", "out.train_end", "out.train_step_begin", "sess.run", "out.train_step_end", "out.get_run_options", "out.get_run_metadata"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_begin", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_options", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_metadata"], ["def", "train", "(", "out", ",", "sess", ",", "epoch", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "is_training_ph", ")", ":", "\n", "    ", "g_step", "=", "0", "\n", "for", "i", "in", "range", "(", "training_steps", ")", ":", "\n", "        ", "out", ".", "train_step_begin", "(", "i", ")", "\n", "\n", "_", ",", "l", ",", "g_step", "=", "sess", ".", "run", "(", "\n", "[", "train_op", ",", "loss_op", ",", "global_step", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", "}", ",", "\n", "options", "=", "out", ".", "get_run_options", "(", ")", ",", "\n", "run_metadata", "=", "out", ".", "get_run_metadata", "(", ")", ")", "\n", "\n", "out", ".", "train_step_end", "(", "\n", "sess", ",", "epoch", ",", "g_step", ",", "i", ",", "l", ",", "\"DEFAULT\"", ",", "training_steps", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", "}", ")", "\n", "\n", "", "out", ".", "train_end", "(", "sess", ",", "epoch", ",", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_simple.validate": [[43, 58], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate", "(", "out", ",", "sess", ",", "epoch", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "is_training_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", "=", "(", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "\n", "test_loss", ",", "\"DEFAULT\"", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_simple.go": [[60, 130], ["tensorflow.reset_default_graph", "simple.output.Output", "simple.output.Output.log_msg", "input_sieve.DataSet", "input_sieve.DataSet", "input_sieve.train_inputs", "input_sieve.eval_inputs", "input_sieve.DataSet.training_batches_per_epoch", "input_sieve.DataSet.validation_batches_per_epoch", "simple.output.Output.log_msg", "simple.output.Output.close_files", "tensorflow.device", "tensorflow.train.get_or_create_global_step", "tensorflow.train.AdamOptimizer", "simple.model.run_towers", "tensorflow.Session", "simple.output.Output.set_session_graph", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tf.train.Coordinator.join", "sess.close", "tensorflow.name_scope", "tensorflow.placeholder", "input_sieve.DataSet.num_classes", "simple.output.Output.log_msg", "tensorflow.train.Saver().restore", "tensorflow.global_variables_initializer().run", "range", "tf.train.Coordinator.request_stop", "tensorflow.ConfigProto", "train_simple.train", "train_simple.validate", "simple.output.Output.log_msg", "tensorflow.train.Saver", "tensorflow.global_variables_initializer"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.train_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.training_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.close_files", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.run_towers", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.set_session_graph", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.num_classes", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.train", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg"], ["", "def", "go", "(", "start_epoch", ",", "end_epoch", ",", "run_name", ",", "weights_file", ",", "\n", "profile_compute_time_every_n_steps", ",", "save_summary_info_every_n_steps", ",", "\n", "log_annotated_images", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "log_dir", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "out", "=", "Output", "(", "log_dir", ",", "run_name", ",", "profile_compute_time_every_n_steps", ",", "\n", "save_summary_info_every_n_steps", ")", "\n", "\n", "############################################################################", "\n", "# Data feeds", "\n", "############################################################################", "\n", "out", ".", "log_msg", "(", "\"Setting up data feeds...\"", ")", "\n", "training_dataset", "=", "DataSet", "(", "'train'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "None", ")", "\n", "validation_dataset", "=", "DataSet", "(", "'validation'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "None", ")", "\n", "training_data", "=", "train_inputs", "(", "training_dataset", ",", "log_annotated_images", ")", "\n", "validation_data", "=", "eval_inputs", "(", "validation_dataset", ",", "log_annotated_images", ")", "\n", "training_steps", "=", "training_dataset", ".", "training_batches_per_epoch", "(", ")", "\n", "validation_steps", "=", "validation_dataset", ".", "validation_batches_per_epoch", "(", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow placeholders and operations", "\n", "############################################################################", "\n", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ":", "# set the default device to the CPU", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"input/placeholders\"", ")", ":", "\n", "            ", "is_training_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", ")", "\n", "\n", "train_op", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "=", "run_towers", "(", "opt", ",", "global_step", ",", "is_training_ph", ",", "\n", "training_data", ",", "validation_data", ",", "\n", "DataSet", ".", "num_classes", "(", ")", ",", "num_gpus", ")", "\n", "\n", "", "out", ".", "log_msg", "(", "\"Starting Session...\"", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow session", "\n", "############################################################################", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", ")", "as", "sess", ":", "\n", "        ", "out", ".", "set_session_graph", "(", "sess", ".", "graph", ")", "\n", "\n", "if", "weights_file", "is", "not", "None", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Restoring weights file: {}\"", ".", "format", "(", "weights_file", ")", ")", "\n", "tf", ".", "train", ".", "Saver", "(", ")", ".", "restore", "(", "sess", ",", "weights_file", ")", "\n", "", "else", ":", "\n", "            ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "sess", "=", "sess", ",", "coord", "=", "coord", ")", "\n", "\n", "try", ":", "\n", "            ", "for", "e", "in", "range", "(", "start_epoch", ",", "end_epoch", "+", "1", ")", ":", "\n", "                ", "train", "(", "out", ",", "sess", ",", "e", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "is_training_ph", ")", "\n", "\n", "validate", "(", "out", ",", "sess", ",", "e", ",", "validation_steps", ",", "loss_op", ",", "acc_top_1_op", ",", "\n", "acc_top_5_op", ",", "global_step", ",", "is_training_ph", ")", "\n", "", "", "except", "tf", ".", "errors", ".", "OutOfRangeError", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Finished.\"", ")", "\n", "", "finally", ":", "\n", "            ", "coord", ".", "request_stop", "(", ")", "\n", "", "coord", ".", "join", "(", "threads", ")", "\n", "sess", ".", "close", "(", ")", "\n", "\n", "", "out", ".", "close_files", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.l2_regularizer": [[19, 23], ["tensorflow.nn.l2_loss"], "function", ["None"], ["def", "l2_regularizer", "(", "weight", ")", ":", "\n", "    ", "def", "regularizer", "(", "t", ")", ":", "\n", "        ", "return", "weight", "*", "tf", ".", "nn", ".", "l2_loss", "(", "t", ")", "\n", "", "return", "regularizer", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm": [[25, 30], ["tensorflow.name_scope", "tensorflow.variable_scope", "tensorflow.layers.batch_normalization"], "function", ["None"], ["", "def", "make_batch_norm", "(", "op_name", ",", "in_tensor", ",", "is_train", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ",", "tf", ".", "variable_scope", "(", "\"vars/bns/\"", "+", "op_name", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "return", "tf", ".", "layers", ".", "batch_normalization", "(", "in_tensor", ",", "momentum", "=", "0.99", ",", "\n", "training", "=", "is_train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv": [[32, 47], ["tensorflow.device", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.name_scope", "tensorflow.add", "in_tensor.get_shape().as_list", "tensorflow.nn.conv2d", "cnn_helpers.l2_regularizer", "tensorflow.truncated_normal_initializer", "tensorflow.zeros_initializer", "in_tensor.get_shape"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.l2_regularizer"], ["", "", "def", "make_conv", "(", "op_name", ",", "in_tensor", ",", "filter_size_h", ",", "\n", "filter_size_w", ",", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ",", "tf", ".", "variable_scope", "(", "\"vars/convs\"", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "input_size", "=", "in_tensor", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "\n", "shape", "=", "(", "filter_size_h", ",", "filter_size_w", ",", "input_size", ",", "filters", ")", "\n", "w", "=", "tf", ".", "get_variable", "(", "\"W_\"", "+", "op_name", ",", "shape", "=", "shape", ",", "\n", "regularizer", "=", "l2_regularizer", "(", "weight_decay", ")", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "b", "=", "tf", ".", "get_variable", "(", "\"b_\"", "+", "op_name", ",", "shape", "=", "filters", ",", "\n", "initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ")", "\n", "", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "add", "(", "tf", ".", "nn", ".", "conv2d", "(", "in_tensor", ",", "w", ",", "\n", "strides", "=", "strides", ",", "padding", "=", "padding", ",", "name", "=", "op_name", ")", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias": [[49, 62], ["tensorflow.device", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.name_scope", "tensorflow.nn.conv2d", "in_tensor.get_shape().as_list", "cnn_helpers.l2_regularizer", "tensorflow.truncated_normal_initializer", "in_tensor.get_shape"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.l2_regularizer"], ["", "", "def", "make_conv_no_bias", "(", "op_name", ",", "in_tensor", ",", "filter_size_h", ",", "\n", "filter_size_w", ",", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ",", "tf", ".", "variable_scope", "(", "\"vars/convs\"", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "input_size", "=", "in_tensor", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "3", "]", "\n", "shape", "=", "(", "filter_size_h", ",", "filter_size_w", ",", "input_size", ",", "filters", ")", "\n", "w", "=", "tf", ".", "get_variable", "(", "\"W_\"", "+", "op_name", ",", "shape", "=", "shape", ",", "\n", "regularizer", "=", "l2_regularizer", "(", "weight_decay", ")", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "conv2d", "(", "in_tensor", ",", "w", ",", "\n", "strides", "=", "strides", ",", "padding", "=", "padding", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3": [[64, 69], ["cnn_helpers.make_conv"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv"], ["", "", "def", "make_conv_3x3", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv", "(", "op_name", ",", "\n", "in_tensor", ",", "3", ",", "3", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_9x9": [[71, 76], ["cnn_helpers.make_conv"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv"], ["", "def", "make_conv_9x9", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv", "(", "op_name", ",", "\n", "in_tensor", ",", "9", ",", "9", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_9x9_stride_2": [[78, 82], ["cnn_helpers.make_conv"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv"], ["", "def", "make_conv_9x9_stride_2", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "padding", "=", "\"VALID\"", ",", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv", "(", "op_name", ",", "\n", "in_tensor", ",", "9", ",", "9", ",", "filters", ",", "(", "1", ",", "2", ",", "2", ",", "1", ")", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias": [[84, 89], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_1x1_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "1", ",", "1", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x1_no_bias": [[91, 96], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_3x1_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "3", ",", "1", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x3_no_bias": [[98, 103], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_1x3_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "1", ",", "3", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias": [[105, 110], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_3x3_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "3", ",", "3", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_5x5_no_bias": [[112, 117], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_5x5_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "5", ",", "5", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias": [[119, 124], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_7x1_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "7", ",", "1", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias": [[126, 131], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_1x7_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "1", ",", "7", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_9x9_no_bias": [[133, 138], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_9x9_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "strides", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "\"VALID\"", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "9", ",", "9", ",", "filters", ",", "strides", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias": [[140, 144], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_3x3_stride_2_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "padding", "=", "\"VALID\"", ",", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "3", ",", "3", ",", "filters", ",", "(", "1", ",", "2", ",", "2", ",", "1", ")", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_9x9_stride_2_no_bias": [[146, 150], ["cnn_helpers.make_conv_no_bias"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias"], ["", "def", "make_conv_9x9_stride_2_no_bias", "(", "op_name", ",", "in_tensor", ",", "\n", "filters", ",", "padding", "=", "\"VALID\"", ",", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.1", ")", ":", "\n", "    ", "return", "make_conv_no_bias", "(", "op_name", ",", "\n", "in_tensor", ",", "9", ",", "9", ",", "filters", ",", "(", "1", ",", "2", ",", "2", ",", "1", ")", ",", "padding", ",", "weight_decay", ",", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_2x2": [[152, 156], ["tensorflow.name_scope", "tensorflow.nn.pool"], "function", ["None"], ["", "def", "make_max_pool_2x2", "(", "op_name", ",", "in_tensor", ",", "padding", "=", "\"VALID\"", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "pool", "(", "input", "=", "in_tensor", ",", "window_shape", "=", "[", "2", ",", "2", "]", ",", "\n", "strides", "=", "[", "2", ",", "2", "]", ",", "pooling_type", "=", "\"MAX\"", ",", "padding", "=", "padding", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_3x3": [[158, 162], ["tensorflow.name_scope", "tensorflow.nn.pool"], "function", ["None"], ["", "", "def", "make_max_pool_3x3", "(", "op_name", ",", "in_tensor", ",", "padding", "=", "\"VALID\"", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "pool", "(", "input", "=", "in_tensor", ",", "window_shape", "=", "[", "3", ",", "3", "]", ",", "\n", "strides", "=", "[", "2", ",", "2", "]", ",", "pooling_type", "=", "\"MAX\"", ",", "padding", "=", "padding", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool": [[164, 170], ["tensorflow.name_scope", "tensorflow.nn.pool"], "function", ["None"], ["", "", "def", "make_avg_pool", "(", "op_name", ",", "\n", "in_tensor", ",", "window_size_h", ",", "window_size_w", ",", "padding", "=", "\"VALID\"", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "pool", "(", "input", "=", "in_tensor", ",", "\n", "window_shape", "=", "[", "window_size_h", ",", "window_size_w", "]", ",", "\n", "strides", "=", "[", "2", ",", "2", "]", ",", "pooling_type", "=", "\"AVG\"", ",", "padding", "=", "padding", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3": [[172, 176], ["tensorflow.name_scope", "tensorflow.nn.pool"], "function", ["None"], ["", "", "def", "make_avg_pool_3x3", "(", "op_name", ",", "in_tensor", ",", "padding", "=", "\"VALID\"", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "pool", "(", "input", "=", "in_tensor", ",", "window_shape", "=", "[", "3", ",", "3", "]", ",", "\n", "strides", "=", "[", "3", ",", "3", "]", ",", "pooling_type", "=", "\"AVG\"", ",", "padding", "=", "padding", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1": [[178, 182], ["tensorflow.name_scope", "tensorflow.nn.pool"], "function", ["None"], ["", "", "def", "make_avg_pool_3x3_stride_1", "(", "op_name", ",", "in_tensor", ",", "padding", "=", "\"VALID\"", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "pool", "(", "input", "=", "in_tensor", ",", "window_shape", "=", "[", "3", ",", "3", "]", ",", "\n", "strides", "=", "[", "1", ",", "1", "]", ",", "pooling_type", "=", "\"AVG\"", ",", "padding", "=", "padding", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_5x5_stride_3": [[184, 188], ["tensorflow.name_scope", "tensorflow.nn.pool"], "function", ["None"], ["", "", "def", "make_avg_pool_5x5_stride_3", "(", "op_name", ",", "in_tensor", ",", "padding", "=", "\"VALID\"", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "pool", "(", "input", "=", "in_tensor", ",", "window_shape", "=", "[", "5", ",", "5", "]", ",", "\n", "strides", "=", "[", "3", ",", "3", "]", ",", "pooling_type", "=", "\"AVG\"", ",", "padding", "=", "padding", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_flatten": [[190, 195], ["tensorflow.name_scope", "tensorflow.shape", "tensorflow.reshape"], "function", ["None"], ["", "", "def", "make_flatten", "(", "op_name", ",", "in_tensor", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "input_size", "=", "tf", ".", "shape", "(", "in_tensor", ")", "\n", "size", "=", "input_size", "[", "1", "]", "*", "input_size", "[", "2", "]", "*", "input_size", "[", "3", "]", "\n", "return", "tf", ".", "reshape", "(", "in_tensor", ",", "[", "-", "1", ",", "size", "]", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat": [[197, 200], ["tensorflow.name_scope", "tensorflow.concat"], "function", ["None"], ["", "", "def", "make_concat", "(", "op_name", ",", "axis", ",", "in_tensors", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "concat", "(", "axis", "=", "axis", ",", "values", "=", "in_tensors", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu": [[202, 205], ["tensorflow.name_scope", "tensorflow.nn.relu"], "function", ["None"], ["", "", "def", "make_relu", "(", "op_name", ",", "in_tensor", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "relu", "(", "in_tensor", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_fc": [[207, 220], ["tensorflow.device", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.name_scope", "tensorflow.matmul", "tensorflow.add", "in_tensor.get_shape().as_list", "cnn_helpers.l2_regularizer", "tensorflow.truncated_normal_initializer", "tensorflow.zeros_initializer", "in_tensor.get_shape"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.l2_regularizer"], ["", "", "def", "make_fc", "(", "op_name", ",", "in_tensor", ",", "neurons", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.01", ")", ":", "\n", "    ", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ",", "tf", ".", "variable_scope", "(", "\"vars/fcs\"", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "input_size", "=", "in_tensor", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "w", "=", "tf", ".", "get_variable", "(", "\"W_\"", "+", "op_name", ",", "shape", "=", "[", "input_size", ",", "neurons", "]", ",", "\n", "regularizer", "=", "l2_regularizer", "(", "weight_decay", ")", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "b", "=", "tf", ".", "get_variable", "(", "\"b_\"", "+", "op_name", ",", "shape", "=", "[", "neurons", "]", ",", "\n", "initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ")", "\n", "", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "fc1", "=", "tf", ".", "matmul", "(", "in_tensor", ",", "w", ",", "name", "=", "\"matmul_\"", "+", "op_name", ")", "\n", "return", "tf", ".", "add", "(", "fc1", ",", "b", ",", "name", "=", "\"add_\"", "+", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_fc_no_bias": [[222, 232], ["tensorflow.device", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.name_scope", "tensorflow.matmul", "in_tensor.get_shape().as_list", "cnn_helpers.l2_regularizer", "tensorflow.truncated_normal_initializer", "in_tensor.get_shape"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.l2_regularizer"], ["", "", "def", "make_fc_no_bias", "(", "op_name", ",", "in_tensor", ",", "neurons", ",", "\n", "weight_decay", "=", "0.0005", ",", "stddev", "=", "0.01", ")", ":", "\n", "    ", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ",", "tf", ".", "variable_scope", "(", "\"vars/fcs\"", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "input_size", "=", "in_tensor", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "w", "=", "tf", ".", "get_variable", "(", "\"W_\"", "+", "op_name", ",", "shape", "=", "[", "input_size", ",", "neurons", "]", ",", "\n", "regularizer", "=", "l2_regularizer", "(", "weight_decay", ")", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "matmul", "(", "in_tensor", ",", "w", ",", "name", "=", "\"matmul_\"", "+", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_caps_from_conv": [[234, 238], ["tensorflow.name_scope", "tensorflow.reshape"], "function", ["None"], ["", "", "def", "make_caps_from_conv", "(", "op_name", ",", "in_tensor", ",", "cap_dims", ",", "cap_count", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "reshape", "(", "in_tensor", ",", "\n", "[", "-", "1", ",", "1", ",", "cap_count", ",", "cap_dims", "]", ",", "name", "=", "\"caps_shape_\"", "+", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_homogeneous_vector_caps": [[240, 251], ["tensorflow.device", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.name_scope", "tensorflow.reduce_sum", "in_tensor.get_shape().as_list", "tensorflow.multiply", "cnn_helpers.l2_regularizer", "tensorflow.glorot_uniform_initializer", "in_tensor.get_shape"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.l2_regularizer"], ["", "", "def", "make_homogeneous_vector_caps", "(", "op_name", ",", "\n", "in_tensor", ",", "out_caps", ",", "cap_dims", ",", "weight_decay", "=", "0.0005", ")", ":", "\n", "    ", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ",", "tf", ".", "variable_scope", "(", "\"vars/caps\"", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "in_caps_sz", "=", "in_tensor", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "2", "]", "\n", "w_out_cap", "=", "tf", ".", "get_variable", "(", "\"w_\"", "+", "op_name", ",", "\n", "shape", "=", "[", "out_caps", ",", "in_caps_sz", ",", "cap_dims", "]", ",", "\n", "regularizer", "=", "l2_regularizer", "(", "weight_decay", ")", ",", "\n", "initializer", "=", "tf", ".", "glorot_uniform_initializer", "(", ")", ")", "\n", "", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "in_tensor", ",", "w_out_cap", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_norm": [[253, 256], ["tensorflow.name_scope", "tensorflow.norm"], "function", ["None"], ["", "", "def", "make_norm", "(", "op_name", ",", "in_tensor", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "return", "tf", ".", "norm", "(", "in_tensor", ",", "axis", "=", "2", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_dropout": [[258, 260], ["tensorflow.nn.dropout"], "function", ["None"], ["", "", "def", "make_dropout", "(", "op_name", ",", "in_tensor", ",", "keep_prob", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "dropout", "(", "in_tensor", ",", "keep_prob", ",", "name", "=", "op_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.average_gradients": [[262, 276], ["zip", "tensorflow.concat", "tensorflow.reduce_mean", "average_grads.append", "tensorflow.expand_dims", "grads.append"], "function", ["None"], ["", "def", "average_gradients", "(", "tower_grads", ")", ":", "\n", "    ", "average_grads", "=", "[", "]", "\n", "for", "grad_and_vars", "in", "zip", "(", "*", "tower_grads", ")", ":", "\n", "        ", "grads", "=", "[", "]", "\n", "for", "g", ",", "_", "in", "grad_and_vars", ":", "\n", "            ", "if", "g", "is", "not", "None", ":", "\n", "                ", "expanded_g", "=", "tf", ".", "expand_dims", "(", "g", ",", "0", ")", "\n", "grads", ".", "append", "(", "expanded_g", ")", "\n", "", "", "grad", "=", "tf", ".", "concat", "(", "axis", "=", "0", ",", "values", "=", "grads", ")", "\n", "grad", "=", "tf", ".", "reduce_mean", "(", "grad", ",", "0", ")", "\n", "v", "=", "grad_and_vars", "[", "0", "]", "[", "1", "]", "\n", "grad_and_var", "=", "(", "grad", ",", "v", ")", "\n", "average_grads", ".", "append", "(", "grad_and_var", ")", "\n", "", "return", "average_grads", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.merge_towers_and_optimize": [[278, 298], ["tensorflow.get_collection", "tensorflow.control_dependencies", "tensorflow.device", "tensorflow.name_scope", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.concat", "tensorflow.argmax", "tensorflow.nn.in_top_k", "tensorflow.nn.in_top_k", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.device", "tensorflow.cast", "tensorflow.cast", "tensorflow.name_scope", "cnn_helpers.average_gradients", "tensorflow.name_scope", "optimizer.apply_gradients"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.average_gradients"], ["", "def", "merge_towers_and_optimize", "(", "optimizer", ",", "global_step", ",", "\n", "grads", ",", "logits_list", ",", "loss_list", ",", "labels_list", ")", ":", "\n", "    ", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "update_ops", ")", ":", "\n", "        ", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ":", "\n", "            ", "with", "tf", ".", "name_scope", "(", "\"merge_grads\"", ")", ":", "\n", "                ", "all_grads", "=", "average_gradients", "(", "grads", ")", "\n", "", "with", "tf", ".", "name_scope", "(", "\"apply_grads\"", ")", ":", "\n", "                ", "train_op", "=", "optimizer", ".", "apply_gradients", "(", "all_grads", ",", "global_step", ")", "\n", "", "", "", "with", "tf", ".", "device", "(", "\"/device:GPU:0\"", ")", ",", "tf", ".", "name_scope", "(", "\"metrics\"", ")", ":", "\n", "        ", "logits", "=", "tf", ".", "concat", "(", "logits_list", ",", "0", ")", "\n", "loss", "=", "tf", ".", "reduce_mean", "(", "loss_list", ",", "0", ")", "\n", "labels", "=", "tf", ".", "concat", "(", "labels_list", ",", "0", ")", "\n", "labels", "=", "tf", ".", "argmax", "(", "labels", ",", "1", ")", "\n", "in_top_1", "=", "tf", ".", "nn", ".", "in_top_k", "(", "logits", ",", "labels", ",", "1", ")", "\n", "in_top_5", "=", "tf", ".", "nn", ".", "in_top_k", "(", "logits", ",", "labels", ",", "5", ")", "\n", "acc_top_1", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "in_top_1", ",", "tf", ".", "float32", ")", ")", "\n", "acc_top_5", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "in_top_5", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "", "return", "train_op", ",", "loss", ",", "acc_top_1", ",", "acc_top_5", "\n", "", ""]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_2.train": [[25, 44], ["range", "out.train_end", "out.train_step_begin", "sess.run", "out.train_step_end", "out.get_run_options", "out.get_run_metadata"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_begin", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_options", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_metadata"], ["def", "train", "(", "out", ",", "sess", ",", "epoch", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "learning_rate", ",", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", "=", "0", "\n", "for", "i", "in", "range", "(", "training_steps", ")", ":", "\n", "        ", "out", ".", "train_step_begin", "(", "i", ")", "\n", "\n", "_", ",", "l", ",", "g_step", ",", "lr", "=", "sess", ".", "run", "(", "\n", "[", "train_op", ",", "loss_op", ",", "global_step", ",", "learning_rate", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ",", "\n", "options", "=", "out", ".", "get_run_options", "(", ")", ",", "\n", "run_metadata", "=", "out", ".", "get_run_metadata", "(", ")", ")", "\n", "\n", "out", ".", "train_step_end", "(", "\n", "sess", ",", "epoch", ",", "g_step", ",", "i", ",", "l", ",", "lr", ",", "training_steps", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "\n", "", "out", ".", "train_end", "(", "sess", ",", "epoch", ",", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_2.validate": [[46, 63], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate", "(", "out", ",", "sess", ",", "epoch", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "learning_rate", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", ",", "lr", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", ",", "lr", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", ",", "learning_rate", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "False", ",", "\n", "test_loss", ",", "lr", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_2.validate_nbl": [[65, 82], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate_nbl", "(", "out", ",", "sess", ",", "epoch", ",", "nbl_validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "learning_rate", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", ",", "lr", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "nbl_validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "nbl_validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", ",", "lr", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", ",", "learning_rate", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "True", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "True", ",", "\n", "test_loss", ",", "lr", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_2.go": [[84, 174], ["tensorflow.reset_default_graph", "inception_v3.output.Output", "inception_v3.output.Output.log_msg", "input_sieve.DataSet", "input_sieve.DataSet", "input_sieve.train_inputs", "input_sieve.eval_inputs", "input_sieve.non_blacklisted_eval_inputs", "input_sieve.DataSet.training_batches_per_epoch", "input_sieve.DataSet.validation_batches_per_epoch", "input_sieve.DataSet.nbl_validation_batches_per_epoch", "inception_v3.output.Output.log_msg", "inception_v3.output.Output.close_files", "tensorflow.device", "tensorflow.train.get_or_create_global_step", "int", "tensorflow.train.exponential_decay", "tensorflow.train.RMSPropOptimizer", "inception_v3.model.run_towers", "tensorflow.Session", "inception_v3.output.Output.set_session_graph", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tf.train.Coordinator.join", "sess.close", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "input_sieve.DataSet.num_classes", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver().restore", "tensorflow.global_variables_initializer().run", "range", "tf.train.Coordinator.request_stop", "tensorflow.ConfigProto", "train_inception_v3_baseline_2.train", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver", "tensorflow.global_variables_initializer", "train_inception_v3_baseline_2.validate", "train_inception_v3_baseline_2.validate_nbl"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.train_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.non_blacklisted_eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.training_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.nbl_validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.close_files", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.run_towers", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.set_session_graph", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.num_classes", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.train", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate_nbl"], ["", "def", "go", "(", "start_epoch", ",", "end_epoch", ",", "run_name", ",", "weights_file", ",", "\n", "profile_compute_time_every_n_steps", ",", "save_summary_info_every_n_steps", ",", "\n", "log_annotated_images", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ",", "log_dir", ",", "do_validate_all", ",", "do_validate_nbl", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "out", "=", "Output", "(", "log_dir", ",", "run_name", ",", "profile_compute_time_every_n_steps", ",", "\n", "save_summary_info_every_n_steps", ")", "\n", "\n", "############################################################################", "\n", "# Data feeds", "\n", "############################################################################", "\n", "out", ".", "log_msg", "(", "\"Setting up data feeds...\"", ")", "\n", "training_dataset", "=", "DataSet", "(", "'train'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "None", ")", "\n", "validation_dataset", "=", "DataSet", "(", "'validation'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ")", "\n", "training_data", "=", "train_inputs", "(", "training_dataset", ",", "log_annotated_images", ")", "\n", "validation_data", "=", "eval_inputs", "(", "validation_dataset", ",", "log_annotated_images", ")", "\n", "nbl_val_data", "=", "non_blacklisted_eval_inputs", "(", "\n", "validation_dataset", ",", "log_annotated_images", ")", "\n", "training_steps", "=", "training_dataset", ".", "training_batches_per_epoch", "(", ")", "\n", "validation_steps", "=", "validation_dataset", ".", "validation_batches_per_epoch", "(", ")", "\n", "nbl_val_steps", "=", "validation_dataset", ".", "nbl_validation_batches_per_epoch", "(", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow placeholders and operations", "\n", "############################################################################", "\n", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ":", "# set the default device to the CPU", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"input/placeholders\"", ")", ":", "\n", "            ", "is_training_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "is_validating_nbl_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "decay_steps", "=", "int", "(", "training_steps", "*", "30.0", ")", "\n", "learning_rate_op", "=", "tf", ".", "train", ".", "exponential_decay", "(", "0.1", ",", "\n", "global_step", ",", "decay_steps", ",", "\n", "0.16", ",", "staircase", "=", "True", ")", "\n", "opt", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "learning_rate_op", ",", "\n", "decay", "=", "0.9", ",", "momentum", "=", "0.9", ",", "epsilon", "=", "1.0", ")", "\n", "\n", "train_op", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "=", "run_towers", "(", "opt", ",", "global_step", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ",", "training_data", ",", "\n", "validation_data", ",", "nbl_val_data", ",", "\n", "DataSet", ".", "num_classes", "(", ")", ",", "num_gpus", ")", "\n", "\n", "", "out", ".", "log_msg", "(", "\"Starting Session...\"", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow session", "\n", "############################################################################", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", ")", "as", "sess", ":", "\n", "        ", "out", ".", "set_session_graph", "(", "sess", ".", "graph", ")", "\n", "\n", "if", "weights_file", "is", "not", "None", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Restoring weights file: {}\"", ".", "format", "(", "weights_file", ")", ")", "\n", "tf", ".", "train", ".", "Saver", "(", ")", ".", "restore", "(", "sess", ",", "weights_file", ")", "\n", "", "else", ":", "\n", "            ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "sess", "=", "sess", ",", "coord", "=", "coord", ")", "\n", "\n", "try", ":", "\n", "            ", "for", "e", "in", "range", "(", "start_epoch", ",", "end_epoch", "+", "1", ")", ":", "\n", "                ", "train", "(", "out", ",", "sess", ",", "e", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "learning_rate_op", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", "\n", "\n", "if", "do_validate_all", ":", "\n", "                    ", "validate", "(", "out", ",", "sess", ",", "e", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "learning_rate_op", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ")", "\n", "\n", "", "if", "do_validate_nbl", ":", "\n", "                    ", "validate_nbl", "(", "out", ",", "sess", ",", "e", ",", "nbl_val_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "learning_rate_op", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ")", "\n", "", "", "", "except", "tf", ".", "errors", ".", "OutOfRangeError", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Finished.\"", ")", "\n", "", "finally", ":", "\n", "            ", "coord", ".", "request_stop", "(", ")", "\n", "", "coord", ".", "join", "(", "threads", ")", "\n", "sess", ".", "close", "(", ")", "\n", "\n", "", "out", ".", "close_files", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.train": [[25, 44], ["range", "out.train_end", "out.train_step_begin", "sess.run", "out.train_step_end", "out.get_run_options", "out.get_run_metadata"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_begin", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_options", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_metadata"], ["def", "train", "(", "out", ",", "sess", ",", "epoch", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", "=", "0", "\n", "for", "i", "in", "range", "(", "training_steps", ")", ":", "\n", "        ", "out", ".", "train_step_begin", "(", "i", ")", "\n", "\n", "_", ",", "l", ",", "g_step", "=", "sess", ".", "run", "(", "\n", "[", "train_op", ",", "loss_op", ",", "global_step", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ",", "\n", "options", "=", "out", ".", "get_run_options", "(", ")", ",", "\n", "run_metadata", "=", "out", ".", "get_run_metadata", "(", ")", ")", "\n", "\n", "out", ".", "train_step_end", "(", "\n", "sess", ",", "epoch", ",", "g_step", ",", "i", ",", "l", ",", "\"DEFAULT\"", ",", "training_steps", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "True", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "\n", "", "out", ".", "train_end", "(", "sess", ",", "epoch", ",", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate": [[46, 63], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate", "(", "out", ",", "sess", ",", "epoch", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", "=", "(", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "False", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "False", ",", "\n", "test_loss", ",", "\"DEFAULT\"", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate_nbl": [[65, 82], ["range", "out.validation_end", "out.validation_step_begin", "sess.run"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin"], ["", "def", "validate_nbl", "(", "out", ",", "sess", ",", "epoch", ",", "nbl_validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", ":", "\n", "    ", "g_step", ",", "acc_top1", ",", "acc_top5", ",", "test_loss", "=", "(", "0", ",", "0", ",", "0", ",", "0", ")", "\n", "for", "i", "in", "range", "(", "nbl_validation_steps", ")", ":", "\n", "        ", "out", ".", "validation_step_begin", "(", "i", ",", "nbl_validation_steps", ")", "\n", "\n", "g_step", ",", "l", ",", "acc1", ",", "acc5", "=", "sess", ".", "run", "(", "\n", "[", "global_step", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "]", ",", "\n", "feed_dict", "=", "{", "is_training_ph", ":", "False", ",", "\n", "is_validating_nbl_ph", ":", "True", "}", ")", "\n", "acc_top1", "=", "(", "acc1", "+", "(", "i", "*", "acc_top1", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "acc_top5", "=", "(", "acc5", "+", "(", "i", "*", "acc_top5", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "test_loss", "=", "(", "l", "+", "(", "i", "*", "test_loss", ")", ")", "/", "(", "i", "+", "1", ")", "\n", "\n", "", "out", ".", "validation_end", "(", "sess", ",", "epoch", ",", "g_step", ",", "True", ",", "\n", "test_loss", ",", "\"DEFAULT\"", ",", "acc_top1", ",", "acc_top5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.go": [[84, 166], ["tensorflow.reset_default_graph", "inception_v3.output.Output", "inception_v3.output.Output.log_msg", "input_sieve.DataSet", "input_sieve.DataSet", "input_sieve.train_inputs", "input_sieve.eval_inputs", "input_sieve.non_blacklisted_eval_inputs", "input_sieve.DataSet.training_batches_per_epoch", "input_sieve.DataSet.validation_batches_per_epoch", "input_sieve.DataSet.nbl_validation_batches_per_epoch", "inception_v3.output.Output.log_msg", "inception_v3.output.Output.close_files", "tensorflow.device", "tensorflow.train.get_or_create_global_step", "tensorflow.train.AdamOptimizer", "inception_v3.model.run_towers", "tensorflow.Session", "inception_v3.output.Output.set_session_graph", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "tf.train.Coordinator.join", "sess.close", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "input_sieve.DataSet.num_classes", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver().restore", "tensorflow.global_variables_initializer().run", "range", "tf.train.Coordinator.request_stop", "tensorflow.ConfigProto", "train_inception_v3_baseline_w_Adam.train", "inception_v3.output.Output.log_msg", "tensorflow.train.Saver", "tensorflow.global_variables_initializer", "train_inception_v3_baseline_w_Adam.validate", "train_inception_v3_baseline_w_Adam.validate_nbl"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.train_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.non_blacklisted_eval_inputs", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.training_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.nbl_validation_batches_per_epoch", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.close_files", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.run_towers", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.set_session_graph", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.input_sieve.DataSet.num_classes", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.train", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.train_inception_v3_baseline_w_Adam.validate_nbl"], ["", "def", "go", "(", "start_epoch", ",", "end_epoch", ",", "run_name", ",", "weights_file", ",", "\n", "profile_compute_time_every_n_steps", ",", "save_summary_info_every_n_steps", ",", "\n", "log_annotated_images", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ",", "log_dir", ",", "do_validate_all", ",", "do_validate_nbl", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "out", "=", "Output", "(", "log_dir", ",", "run_name", ",", "profile_compute_time_every_n_steps", ",", "\n", "save_summary_info_every_n_steps", ")", "\n", "\n", "############################################################################", "\n", "# Data feeds", "\n", "############################################################################", "\n", "out", ".", "log_msg", "(", "\"Setting up data feeds...\"", ")", "\n", "training_dataset", "=", "DataSet", "(", "'train'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "None", ")", "\n", "validation_dataset", "=", "DataSet", "(", "'validation'", ",", "image_size", ",", "batch_size", ",", "num_gpus", ",", "\n", "data_dir", ",", "black_list_file", ")", "\n", "training_data", "=", "train_inputs", "(", "training_dataset", ",", "log_annotated_images", ")", "\n", "validation_data", "=", "eval_inputs", "(", "validation_dataset", ",", "log_annotated_images", ")", "\n", "nbl_val_data", "=", "non_blacklisted_eval_inputs", "(", "\n", "validation_dataset", ",", "log_annotated_images", ")", "\n", "training_steps", "=", "training_dataset", ".", "training_batches_per_epoch", "(", ")", "\n", "validation_steps", "=", "validation_dataset", ".", "validation_batches_per_epoch", "(", ")", "\n", "nbl_val_steps", "=", "validation_dataset", ".", "nbl_validation_batches_per_epoch", "(", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow placeholders and operations", "\n", "############################################################################", "\n", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ":", "# set the default device to the CPU", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"input/placeholders\"", ")", ":", "\n", "            ", "is_training_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "is_validating_nbl_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "\n", "", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", ")", "\n", "\n", "train_op", ",", "loss_op", ",", "acc_top_1_op", ",", "acc_top_5_op", "=", "run_towers", "(", "opt", ",", "global_step", ",", "is_training_ph", ",", "\n", "is_validating_nbl_ph", ",", "training_data", ",", "\n", "validation_data", ",", "nbl_val_data", ",", "\n", "DataSet", ".", "num_classes", "(", ")", ",", "num_gpus", ")", "\n", "\n", "", "out", ".", "log_msg", "(", "\"Starting Session...\"", ")", "\n", "\n", "############################################################################", "\n", "# Tensorflow session", "\n", "############################################################################", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", ")", "as", "sess", ":", "\n", "        ", "out", ".", "set_session_graph", "(", "sess", ".", "graph", ")", "\n", "\n", "if", "weights_file", "is", "not", "None", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Restoring weights file: {}\"", ".", "format", "(", "weights_file", ")", ")", "\n", "tf", ".", "train", ".", "Saver", "(", ")", ".", "restore", "(", "sess", ",", "weights_file", ")", "\n", "", "else", ":", "\n", "            ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "\n", "", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "sess", "=", "sess", ",", "coord", "=", "coord", ")", "\n", "\n", "try", ":", "\n", "            ", "for", "e", "in", "range", "(", "start_epoch", ",", "end_epoch", "+", "1", ")", ":", "\n", "                ", "train", "(", "out", ",", "sess", ",", "e", ",", "training_steps", ",", "train_op", ",", "loss_op", ",", "\n", "global_step", ",", "is_training_ph", ",", "is_validating_nbl_ph", ")", "\n", "\n", "if", "do_validate_all", ":", "\n", "                    ", "validate", "(", "out", ",", "sess", ",", "e", ",", "validation_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", "\n", "\n", "", "if", "do_validate_nbl", ":", "\n", "                    ", "validate_nbl", "(", "out", ",", "sess", ",", "e", ",", "nbl_val_steps", ",", "loss_op", ",", "\n", "acc_top_1_op", ",", "acc_top_5_op", ",", "global_step", ",", "\n", "is_training_ph", ",", "is_validating_nbl_ph", ")", "\n", "", "", "", "except", "tf", ".", "errors", ".", "OutOfRangeError", ":", "\n", "            ", "out", ".", "log_msg", "(", "\"Finished.\"", ")", "\n", "", "finally", ":", "\n", "            ", "coord", ".", "request_stop", "(", ")", "\n", "", "coord", ".", "join", "(", "threads", ")", "\n", "sess", ".", "close", "(", ")", "\n", "\n", "", "out", ".", "close_files", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.etc.count_vars.get_var_count": [[24, 33], ["tensorflow.reset_default_graph", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.constant", "tensorflow.Session", "tensorflow.global_variables_initializer().run", "sess.run", "numpy.array().sum", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.trainable_variables", "numpy.array", "simple.model.make_tower", "simple.model_hvc.make_tower", "inception_v3.model.make_tower", "inception_v3.model_hvc.make_tower"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.make_tower", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.make_tower", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.make_tower", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.make_tower"], ["def", "get_var_count", "(", "creator", ",", "image_size", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "model", "=", "creator", "(", "tf", ".", "zeros", "(", "[", "1", ",", "image_size", ",", "image_size", ",", "3", "]", ")", ",", "\n", "tf", ".", "zeros", "(", "[", "1", ",", "1000", "]", ")", ",", "tf", ".", "constant", "(", "True", ")", ",", "1000", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", ")", "as", "sess", ":", "\n", "        ", "tf", ".", "global_variables_initializer", "(", ")", ".", "run", "(", ")", "\n", "_", ",", "variables", "=", "sess", ".", "run", "(", "[", "model", ",", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "var_count", "=", "np", ".", "array", "(", "[", "(", "var", "==", "var", ")", ".", "sum", "(", ")", "for", "var", "in", "variables", "]", ")", ".", "sum", "(", ")", "\n", "return", "var_count", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.model_hvc.make_tower": [[33, 628], ["tensorflow.name_scope", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_3x3", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_3x3", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_5x5_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_5x5_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_5x5_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_3x3", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_avg_pool_5x5_stride_3", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_relu.get_shape", "cnn_helpers.make_conv_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "caps_input.get_shape().as_list", "cnn_helpers.make_caps_from_conv", "cnn_helpers.make_homogeneous_vector_caps", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_norm", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_3x3", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "intnsr.get_shape", "cnn_helpers.make_avg_pool", "caps_input.get_shape().as_list", "cnn_helpers.make_caps_from_conv", "cnn_helpers.make_homogeneous_vector_caps", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_norm", "tensorflow.name_scope", "tensorflow.stop_gradient", "inception_v3.lsr_loss.lsr_loss", "inception_v3.lsr_loss.lsr_loss", "tensorflow.reduce_mean", "caps_input.get_shape", "caps_input.get_shape"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_3x3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_3x3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_5x5_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_5x5_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_5x5_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_3x3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_5x5_stride_3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_caps_from_conv", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_homogeneous_vector_caps", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_3x3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_caps_from_conv", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_homogeneous_vector_caps", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.lsr_loss.lsr_loss", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.lsr_loss.lsr_loss"], ["def", "make_tower", "(", "x_in", ",", "y_out", ",", "is_training", ",", "count_classes", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "\"input_stem\"", ")", ":", "\n", "        ", "conv1", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv1\"", ",", "\n", "x_in", ",", "32", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn1", "=", "batch_norm", "(", "\"bn1\"", ",", "conv1", ",", "is_training", ")", "\n", "relu1", "=", "make_relu", "(", "\"relu1\"", ",", "bn1", ")", "\n", "\n", "conv2", "=", "make_conv_3x3_no_bias", "(", "\"conv2\"", ",", "\n", "relu1", ",", "32", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn2", "=", "batch_norm", "(", "\"bn2\"", ",", "conv2", ",", "is_training", ")", "\n", "relu2", "=", "make_relu", "(", "\"relu2\"", ",", "bn2", ")", "\n", "\n", "conv3", "=", "make_conv_3x3_no_bias", "(", "\"conv3\"", ",", "\n", "relu2", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn3", "=", "batch_norm", "(", "\"bn3\"", ",", "conv3", ",", "is_training", ")", "\n", "relu3", "=", "make_relu", "(", "\"relu3\"", ",", "bn3", ")", "\n", "pool3", "=", "make_max_pool_3x3", "(", "\"pool3\"", ",", "relu3", ")", "\n", "\n", "conv4", "=", "make_conv_1x1_no_bias", "(", "\"conv4\"", ",", "\n", "pool3", ",", "80", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn4", "=", "batch_norm", "(", "\"bn4\"", ",", "conv4", ",", "is_training", ")", "\n", "relu4", "=", "make_relu", "(", "\"relu4\"", ",", "bn4", ")", "\n", "\n", "conv5", "=", "make_conv_3x3_no_bias", "(", "\"conv5\"", ",", "\n", "relu4", ",", "192", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn5", "=", "batch_norm", "(", "\"bn5\"", ",", "conv5", ",", "is_training", ")", "\n", "relu5", "=", "make_relu", "(", "\"relu5\"", ",", "bn5", ")", "\n", "pool5", "=", "make_max_pool_3x3", "(", "\"pool5\"", ",", "relu5", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x256a\"", ")", ":", "\n", "        ", "intnsr", "=", "pool5", "\n", "\n", "# branch1x1", "\n", "conv6", "=", "make_conv_1x1_no_bias", "(", "\"conv6\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn6", "=", "batch_norm", "(", "\"bn6\"", ",", "conv6", ",", "is_training", ")", "\n", "relu6", "=", "make_relu", "(", "\"relu6\"", ",", "bn6", ")", "\n", "\n", "# branch5x5", "\n", "conv7", "=", "make_conv_1x1_no_bias", "(", "\"conv7\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn7", "=", "batch_norm", "(", "\"bn7\"", ",", "conv7", ",", "is_training", ")", "\n", "relu7", "=", "make_relu", "(", "\"relu7\"", ",", "bn7", ")", "\n", "conv8", "=", "make_conv_5x5_no_bias", "(", "\"conv8\"", ",", "\n", "relu7", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn8", "=", "batch_norm", "(", "\"bn8\"", ",", "conv8", ",", "is_training", ")", "\n", "relu8", "=", "make_relu", "(", "\"relu8\"", ",", "bn8", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv9", "=", "make_conv_1x1_no_bias", "(", "\"conv9\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn9", "=", "batch_norm", "(", "\"bn9\"", ",", "conv9", ",", "is_training", ")", "\n", "relu9", "=", "make_relu", "(", "\"relu9\"", ",", "bn9", ")", "\n", "conv10", "=", "make_conv_3x3_no_bias", "(", "\"conv10\"", ",", "\n", "relu9", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn10", "=", "batch_norm", "(", "\"bn10\"", ",", "conv10", ",", "is_training", ")", "\n", "relu10", "=", "make_relu", "(", "\"relu10\"", ",", "bn10", ")", "\n", "conv11", "=", "make_conv_3x3_no_bias", "(", "\"conv11\"", ",", "\n", "relu10", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn11", "=", "batch_norm", "(", "\"bn11\"", ",", "conv11", ",", "is_training", ")", "\n", "relu11", "=", "make_relu", "(", "\"relu11\"", ",", "bn11", ")", "\n", "\n", "# branch_pool", "\n", "pool12", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool12\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv12", "=", "make_conv_1x1_no_bias", "(", "\"conv12\"", ",", "\n", "pool12", ",", "32", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn12", "=", "batch_norm", "(", "\"bn12\"", ",", "conv12", ",", "is_training", ")", "\n", "relu12", "=", "make_relu", "(", "\"relu12\"", ",", "bn12", ")", "\n", "\n", "cc1", "=", "make_concat", "(", "\"cc1\"", ",", "3", ",", "[", "relu6", ",", "relu8", ",", "relu11", ",", "relu12", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x288a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc1", "\n", "\n", "# branch1x1", "\n", "conv13", "=", "make_conv_1x1_no_bias", "(", "\"conv13\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn13", "=", "batch_norm", "(", "\"bn13\"", ",", "conv13", ",", "is_training", ")", "\n", "relu13", "=", "make_relu", "(", "\"relu13\"", ",", "bn13", ")", "\n", "\n", "# branch5x5", "\n", "conv14", "=", "make_conv_1x1_no_bias", "(", "\"conv14\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn14", "=", "batch_norm", "(", "\"bn14\"", ",", "conv14", ",", "is_training", ")", "\n", "relu14", "=", "make_relu", "(", "\"relu14\"", ",", "bn14", ")", "\n", "conv15", "=", "make_conv_5x5_no_bias", "(", "\"conv15\"", ",", "\n", "relu14", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn15", "=", "batch_norm", "(", "\"bn15\"", ",", "conv15", ",", "is_training", ")", "\n", "relu15", "=", "make_relu", "(", "\"relu15\"", ",", "bn15", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv16", "=", "make_conv_1x1_no_bias", "(", "\"conv16\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn16", "=", "batch_norm", "(", "\"bn16\"", ",", "conv16", ",", "is_training", ")", "\n", "relu16", "=", "make_relu", "(", "\"relu16\"", ",", "bn16", ")", "\n", "conv17", "=", "make_conv_3x3_no_bias", "(", "\"conv17\"", ",", "\n", "relu16", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn17", "=", "batch_norm", "(", "\"bn17\"", ",", "conv17", ",", "is_training", ")", "\n", "relu17", "=", "make_relu", "(", "\"relu17\"", ",", "bn17", ")", "\n", "conv18", "=", "make_conv_3x3_no_bias", "(", "\"conv18\"", ",", "\n", "relu17", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn18", "=", "batch_norm", "(", "\"bn18\"", ",", "conv18", ",", "is_training", ")", "\n", "relu18", "=", "make_relu", "(", "\"relu18\"", ",", "bn18", ")", "\n", "\n", "# branch_pool", "\n", "pool19", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool19\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv19", "=", "make_conv_1x1_no_bias", "(", "\"conv19\"", ",", "\n", "pool19", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn19", "=", "batch_norm", "(", "\"bn19\"", ",", "conv19", ",", "is_training", ")", "\n", "relu19", "=", "make_relu", "(", "\"relu19\"", ",", "bn19", ")", "\n", "\n", "cc2", "=", "make_concat", "(", "\"cc2\"", ",", "3", ",", "[", "relu13", ",", "relu15", ",", "relu18", ",", "relu19", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x288b\"", ")", ":", "\n", "        ", "intnsr", "=", "cc2", "\n", "\n", "# branch1x1", "\n", "conv20", "=", "make_conv_1x1_no_bias", "(", "\"conv20\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn20", "=", "batch_norm", "(", "\"bn20\"", ",", "conv20", ",", "is_training", ")", "\n", "relu20", "=", "make_relu", "(", "\"relu20\"", ",", "bn20", ")", "\n", "\n", "# branch5x5", "\n", "conv21", "=", "make_conv_1x1_no_bias", "(", "\"conv21\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn21", "=", "batch_norm", "(", "\"bn21\"", ",", "conv21", ",", "is_training", ")", "\n", "relu21", "=", "make_relu", "(", "\"relu21\"", ",", "bn21", ")", "\n", "conv22", "=", "make_conv_5x5_no_bias", "(", "\"conv22\"", ",", "\n", "relu21", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn22", "=", "batch_norm", "(", "\"bn22\"", ",", "conv22", ",", "is_training", ")", "\n", "relu22", "=", "make_relu", "(", "\"relu22\"", ",", "bn22", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv23", "=", "make_conv_1x1_no_bias", "(", "\"conv23\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn23", "=", "batch_norm", "(", "\"bn23\"", ",", "conv23", ",", "is_training", ")", "\n", "relu23", "=", "make_relu", "(", "\"relu23\"", ",", "bn23", ")", "\n", "conv24", "=", "make_conv_3x3_no_bias", "(", "\"conv24\"", ",", "\n", "relu23", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn24", "=", "batch_norm", "(", "\"bn24\"", ",", "conv24", ",", "is_training", ")", "\n", "relu24", "=", "make_relu", "(", "\"relu24\"", ",", "bn24", ")", "\n", "conv25", "=", "make_conv_3x3_no_bias", "(", "\"conv25\"", ",", "\n", "relu24", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn25", "=", "batch_norm", "(", "\"bn25\"", ",", "conv25", ",", "is_training", ")", "\n", "relu25", "=", "make_relu", "(", "\"relu25\"", ",", "bn25", ")", "\n", "\n", "# branch_pool", "\n", "pool26", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool26\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv26", "=", "make_conv_1x1_no_bias", "(", "\"conv26\"", ",", "\n", "pool26", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn26", "=", "batch_norm", "(", "\"bn26\"", ",", "conv26", ",", "is_training", ")", "\n", "relu26", "=", "make_relu", "(", "\"relu26\"", ",", "bn26", ")", "\n", "\n", "cc3", "=", "make_concat", "(", "\"cc3\"", ",", "3", ",", "[", "relu20", ",", "relu22", ",", "relu25", ",", "relu26", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc3", "\n", "\n", "# branch3x3", "\n", "conv27", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv27\"", ",", "\n", "intnsr", ",", "384", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn27", "=", "batch_norm", "(", "\"bn27\"", ",", "conv27", ",", "is_training", ")", "\n", "relu27", "=", "make_relu", "(", "\"relu27\"", ",", "bn27", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv28", "=", "make_conv_1x1_no_bias", "(", "\"conv28\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn28", "=", "batch_norm", "(", "\"bn28\"", ",", "conv28", ",", "is_training", ")", "\n", "relu28", "=", "make_relu", "(", "\"relu28\"", ",", "bn28", ")", "\n", "conv29", "=", "make_conv_3x3_no_bias", "(", "\"conv29\"", ",", "\n", "relu28", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn29", "=", "batch_norm", "(", "\"bn29\"", ",", "conv29", ",", "is_training", ")", "\n", "relu29", "=", "make_relu", "(", "\"relu29\"", ",", "bn29", ")", "\n", "conv30", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv30\"", ",", "\n", "relu29", ",", "96", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn30", "=", "batch_norm", "(", "\"bn30\"", ",", "conv30", ",", "is_training", ")", "\n", "relu30", "=", "make_relu", "(", "\"relu30\"", ",", "bn30", ")", "\n", "\n", "pool31", "=", "make_max_pool_3x3", "(", "\"pool31\"", ",", "intnsr", ")", "\n", "\n", "cc4", "=", "make_concat", "(", "\"cc4\"", ",", "3", ",", "[", "relu27", ",", "relu30", ",", "pool31", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768b\"", ")", ":", "\n", "        ", "intnsr", "=", "cc4", "\n", "\n", "# branch1x1", "\n", "conv32", "=", "make_conv_1x1_no_bias", "(", "\"conv32\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn32", "=", "batch_norm", "(", "\"bn32\"", ",", "conv32", ",", "is_training", ")", "\n", "relu32", "=", "make_relu", "(", "\"relu32\"", ",", "bn32", ")", "\n", "\n", "# branch7x7", "\n", "conv33", "=", "make_conv_1x1_no_bias", "(", "\"conv33\"", ",", "\n", "intnsr", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn33", "=", "batch_norm", "(", "\"bn33\"", ",", "conv33", ",", "is_training", ")", "\n", "relu33", "=", "make_relu", "(", "\"relu33\"", ",", "bn33", ")", "\n", "conv34", "=", "make_conv_1x7_no_bias", "(", "\"conv34\"", ",", "\n", "relu33", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn34", "=", "batch_norm", "(", "\"bn34\"", ",", "conv34", ",", "is_training", ")", "\n", "relu34", "=", "make_relu", "(", "\"relu34\"", ",", "bn34", ")", "\n", "conv35", "=", "make_conv_7x1_no_bias", "(", "\"conv35\"", ",", "\n", "relu34", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn35", "=", "batch_norm", "(", "\"bn35\"", ",", "conv35", ",", "is_training", ")", "\n", "relu35", "=", "make_relu", "(", "\"relu35\"", ",", "bn35", ")", "\n", "\n", "# branch7x7dbl", "\n", "conv36", "=", "make_conv_1x1_no_bias", "(", "\"conv36\"", ",", "\n", "intnsr", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn36", "=", "batch_norm", "(", "\"bn36\"", ",", "conv36", ",", "is_training", ")", "\n", "relu36", "=", "make_relu", "(", "\"relu36\"", ",", "bn36", ")", "\n", "conv37", "=", "make_conv_7x1_no_bias", "(", "\"conv37\"", ",", "\n", "relu36", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn37", "=", "batch_norm", "(", "\"bn37\"", ",", "conv37", ",", "is_training", ")", "\n", "relu37", "=", "make_relu", "(", "\"relu37\"", ",", "bn37", ")", "\n", "conv38", "=", "make_conv_1x7_no_bias", "(", "\"conv38\"", ",", "\n", "relu37", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn38", "=", "batch_norm", "(", "\"bn38\"", ",", "conv38", ",", "is_training", ")", "\n", "relu38", "=", "make_relu", "(", "\"relu38\"", ",", "bn38", ")", "\n", "conv39", "=", "make_conv_7x1_no_bias", "(", "\"conv39\"", ",", "\n", "relu38", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn39", "=", "batch_norm", "(", "\"bn39\"", ",", "conv39", ",", "is_training", ")", "\n", "relu39", "=", "make_relu", "(", "\"relu39\"", ",", "bn39", ")", "\n", "conv40", "=", "make_conv_1x7_no_bias", "(", "\"conv40\"", ",", "\n", "relu39", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn40", "=", "batch_norm", "(", "\"bn40\"", ",", "conv40", ",", "is_training", ")", "\n", "relu40", "=", "make_relu", "(", "\"relu40\"", ",", "bn40", ")", "\n", "\n", "# branch_pool", "\n", "pool41", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool41\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv41", "=", "make_conv_1x1_no_bias", "(", "\"conv41\"", ",", "\n", "pool41", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn41", "=", "batch_norm", "(", "\"bn41\"", ",", "conv41", ",", "is_training", ")", "\n", "relu41", "=", "make_relu", "(", "\"relu41\"", ",", "bn41", ")", "\n", "\n", "cc5", "=", "make_concat", "(", "\"cc5\"", ",", "3", ",", "[", "relu32", ",", "relu35", ",", "relu40", ",", "relu41", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768c\"", ")", ":", "\n", "        ", "intnsr", "=", "cc5", "\n", "\n", "# branch1x1", "\n", "conv42", "=", "make_conv_1x1_no_bias", "(", "\"conv42\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn42", "=", "batch_norm", "(", "\"bn42\"", ",", "conv42", ",", "is_training", ")", "\n", "relu42", "=", "make_relu", "(", "\"relu42\"", ",", "bn42", ")", "\n", "\n", "# branch7x7", "\n", "conv43", "=", "make_conv_1x1_no_bias", "(", "\"conv43\"", ",", "\n", "intnsr", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn43", "=", "batch_norm", "(", "\"bn43\"", ",", "conv43", ",", "is_training", ")", "\n", "relu43", "=", "make_relu", "(", "\"relu43\"", ",", "bn43", ")", "\n", "conv44", "=", "make_conv_1x7_no_bias", "(", "\"conv44\"", ",", "\n", "relu43", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn44", "=", "batch_norm", "(", "\"bn44\"", ",", "conv44", ",", "is_training", ")", "\n", "relu44", "=", "make_relu", "(", "\"relu44\"", ",", "bn44", ")", "\n", "conv45", "=", "make_conv_7x1_no_bias", "(", "\"conv45\"", ",", "\n", "relu44", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn45", "=", "batch_norm", "(", "\"bn45\"", ",", "conv45", ",", "is_training", ")", "\n", "relu45", "=", "make_relu", "(", "\"relu45\"", ",", "bn45", ")", "\n", "\n", "# branch7x7dbl", "\n", "conv46", "=", "make_conv_1x1_no_bias", "(", "\"conv46\"", ",", "\n", "intnsr", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn46", "=", "batch_norm", "(", "\"bn46\"", ",", "conv46", ",", "is_training", ")", "\n", "relu46", "=", "make_relu", "(", "\"relu46\"", ",", "bn46", ")", "\n", "conv47", "=", "make_conv_7x1_no_bias", "(", "\"conv47\"", ",", "\n", "relu46", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn47", "=", "batch_norm", "(", "\"bn47\"", ",", "conv47", ",", "is_training", ")", "\n", "relu47", "=", "make_relu", "(", "\"relu47\"", ",", "bn47", ")", "\n", "conv48", "=", "make_conv_1x7_no_bias", "(", "\"conv48\"", ",", "\n", "relu47", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn48", "=", "batch_norm", "(", "\"bn48\"", ",", "conv48", ",", "is_training", ")", "\n", "relu48", "=", "make_relu", "(", "\"relu48\"", ",", "bn48", ")", "\n", "conv49", "=", "make_conv_7x1_no_bias", "(", "\"conv49\"", ",", "\n", "relu48", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn49", "=", "batch_norm", "(", "\"bn49\"", ",", "conv49", ",", "is_training", ")", "\n", "relu49", "=", "make_relu", "(", "\"relu49\"", ",", "bn49", ")", "\n", "conv50", "=", "make_conv_1x7_no_bias", "(", "\"conv50\"", ",", "\n", "relu49", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn50", "=", "batch_norm", "(", "\"bn50\"", ",", "conv50", ",", "is_training", ")", "\n", "relu50", "=", "make_relu", "(", "\"relu50\"", ",", "bn50", ")", "\n", "\n", "# branch_pool", "\n", "pool51", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool51\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv51", "=", "make_conv_1x1_no_bias", "(", "\"conv51\"", ",", "\n", "pool51", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn51", "=", "batch_norm", "(", "\"bn51\"", ",", "conv51", ",", "is_training", ")", "\n", "relu51", "=", "make_relu", "(", "\"relu51\"", ",", "bn51", ")", "\n", "\n", "cc6", "=", "make_concat", "(", "\"cc6\"", ",", "3", ",", "[", "relu42", ",", "relu45", ",", "relu50", ",", "relu51", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768d\"", ")", ":", "\n", "        ", "intnsr", "=", "cc6", "\n", "\n", "# branch1x1", "\n", "conv52", "=", "make_conv_1x1_no_bias", "(", "\"conv52\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn52", "=", "batch_norm", "(", "\"bn52\"", ",", "conv52", ",", "is_training", ")", "\n", "relu52", "=", "make_relu", "(", "\"relu52\"", ",", "bn52", ")", "\n", "\n", "# branch7x7", "\n", "conv53", "=", "make_conv_1x1_no_bias", "(", "\"conv53\"", ",", "\n", "intnsr", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn53", "=", "batch_norm", "(", "\"bn53\"", ",", "conv53", ",", "is_training", ")", "\n", "relu53", "=", "make_relu", "(", "\"relu53\"", ",", "bn53", ")", "\n", "conv54", "=", "make_conv_1x7_no_bias", "(", "\"conv54\"", ",", "\n", "relu53", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn54", "=", "batch_norm", "(", "\"bn54\"", ",", "conv54", ",", "is_training", ")", "\n", "relu54", "=", "make_relu", "(", "\"relu54\"", ",", "bn54", ")", "\n", "conv55", "=", "make_conv_7x1_no_bias", "(", "\"conv55\"", ",", "\n", "relu54", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn55", "=", "batch_norm", "(", "\"bn55\"", ",", "conv55", ",", "is_training", ")", "\n", "relu55", "=", "make_relu", "(", "\"relu55\"", ",", "bn55", ")", "\n", "\n", "# branch7x7dbl", "\n", "conv56", "=", "make_conv_1x1_no_bias", "(", "\"conv56\"", ",", "\n", "intnsr", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn56", "=", "batch_norm", "(", "\"bn56\"", ",", "conv56", ",", "is_training", ")", "\n", "relu56", "=", "make_relu", "(", "\"relu56\"", ",", "bn56", ")", "\n", "conv57", "=", "make_conv_7x1_no_bias", "(", "\"conv57\"", ",", "\n", "relu56", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn57", "=", "batch_norm", "(", "\"bn57\"", ",", "conv57", ",", "is_training", ")", "\n", "relu57", "=", "make_relu", "(", "\"relu57\"", ",", "bn57", ")", "\n", "conv58", "=", "make_conv_1x7_no_bias", "(", "\"conv58\"", ",", "\n", "relu57", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn58", "=", "batch_norm", "(", "\"bn58\"", ",", "conv58", ",", "is_training", ")", "\n", "relu58", "=", "make_relu", "(", "\"relu58\"", ",", "bn58", ")", "\n", "conv59", "=", "make_conv_7x1_no_bias", "(", "\"conv59\"", ",", "\n", "relu58", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn59", "=", "batch_norm", "(", "\"bn59\"", ",", "conv59", ",", "is_training", ")", "\n", "relu59", "=", "make_relu", "(", "\"relu59\"", ",", "bn59", ")", "\n", "conv60", "=", "make_conv_1x7_no_bias", "(", "\"conv60\"", ",", "\n", "relu59", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn60", "=", "batch_norm", "(", "\"bn60\"", ",", "conv60", ",", "is_training", ")", "\n", "relu60", "=", "make_relu", "(", "\"relu60\"", ",", "bn60", ")", "\n", "\n", "# branch_pool", "\n", "pool61", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool61\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv61", "=", "make_conv_1x1_no_bias", "(", "\"conv61\"", ",", "\n", "pool61", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn61", "=", "batch_norm", "(", "\"bn61\"", ",", "conv61", ",", "is_training", ")", "\n", "relu61", "=", "make_relu", "(", "\"relu61\"", ",", "bn61", ")", "\n", "\n", "cc7", "=", "make_concat", "(", "\"cc7\"", ",", "3", ",", "[", "relu52", ",", "relu55", ",", "relu60", ",", "relu61", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768e\"", ")", ":", "\n", "        ", "intnsr", "=", "cc7", "\n", "\n", "# branch1x1", "\n", "conv62", "=", "make_conv_1x1_no_bias", "(", "\"conv62\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn62", "=", "batch_norm", "(", "\"bn62\"", ",", "conv62", ",", "is_training", ")", "\n", "relu62", "=", "make_relu", "(", "\"relu62\"", ",", "bn62", ")", "\n", "\n", "# branch7x7", "\n", "conv63", "=", "make_conv_1x1_no_bias", "(", "\"conv63\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn63", "=", "batch_norm", "(", "\"bn63\"", ",", "conv63", ",", "is_training", ")", "\n", "relu63", "=", "make_relu", "(", "\"relu63\"", ",", "bn63", ")", "\n", "conv64", "=", "make_conv_1x7_no_bias", "(", "\"conv64\"", ",", "\n", "relu63", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn64", "=", "batch_norm", "(", "\"bn64\"", ",", "conv64", ",", "is_training", ")", "\n", "relu64", "=", "make_relu", "(", "\"relu64\"", ",", "bn64", ")", "\n", "conv65", "=", "make_conv_7x1_no_bias", "(", "\"conv65\"", ",", "\n", "relu64", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn65", "=", "batch_norm", "(", "\"bn65\"", ",", "conv65", ",", "is_training", ")", "\n", "relu65", "=", "make_relu", "(", "\"relu65\"", ",", "bn65", ")", "\n", "\n", "# branch7x7dbl", "\n", "conv66", "=", "make_conv_1x1_no_bias", "(", "\"conv66\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn66", "=", "batch_norm", "(", "\"bn66\"", ",", "conv66", ",", "is_training", ")", "\n", "relu66", "=", "make_relu", "(", "\"relu66\"", ",", "bn66", ")", "\n", "conv67", "=", "make_conv_7x1_no_bias", "(", "\"conv67\"", ",", "\n", "relu66", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn67", "=", "batch_norm", "(", "\"bn67\"", ",", "conv67", ",", "is_training", ")", "\n", "relu67", "=", "make_relu", "(", "\"relu67\"", ",", "bn67", ")", "\n", "conv68", "=", "make_conv_1x7_no_bias", "(", "\"conv68\"", ",", "\n", "relu67", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn68", "=", "batch_norm", "(", "\"bn68\"", ",", "conv68", ",", "is_training", ")", "\n", "relu68", "=", "make_relu", "(", "\"relu68\"", ",", "bn68", ")", "\n", "conv69", "=", "make_conv_7x1_no_bias", "(", "\"conv69\"", ",", "\n", "relu68", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn69", "=", "batch_norm", "(", "\"bn69\"", ",", "conv69", ",", "is_training", ")", "\n", "relu69", "=", "make_relu", "(", "\"relu69\"", ",", "bn69", ")", "\n", "conv70", "=", "make_conv_1x7_no_bias", "(", "\"conv70\"", ",", "\n", "relu69", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn70", "=", "batch_norm", "(", "\"bn70\"", ",", "conv70", ",", "is_training", ")", "\n", "relu70", "=", "make_relu", "(", "\"relu70\"", ",", "bn70", ")", "\n", "\n", "# branch_pool", "\n", "pool71", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool71\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv71", "=", "make_conv_1x1_no_bias", "(", "\"conv71\"", ",", "\n", "pool71", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn71", "=", "batch_norm", "(", "\"bn71\"", ",", "conv71", ",", "is_training", ")", "\n", "relu71", "=", "make_relu", "(", "\"relu71\"", ",", "bn71", ")", "\n", "\n", "cc8", "=", "make_concat", "(", "\"cc8\"", ",", "3", ",", "[", "relu62", ",", "relu65", ",", "relu70", ",", "relu71", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"aux_logits\"", ")", ":", "\n", "        ", "intnsr", "=", "cc8", "\n", "\n", "# aux_logits", "\n", "pool72", "=", "make_avg_pool_5x5_stride_3", "(", "\"pool72\"", ",", "intnsr", ")", "\n", "conv72", "=", "make_conv_1x1_no_bias", "(", "\"conv72\"", ",", "\n", "pool72", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn72", "=", "batch_norm", "(", "\"bn72\"", ",", "conv72", ",", "is_training", ")", "\n", "relu72", "=", "make_relu", "(", "\"relu72\"", ",", "bn72", ")", "\n", "\n", "shape", "=", "relu72", ".", "get_shape", "(", ")", "\n", "conv73", "=", "make_conv_no_bias", "(", "\"conv73\"", ",", "\n", "relu72", ",", "shape", "[", "1", "]", ",", "shape", "[", "2", "]", ",", "128", ",", "\n", "weight_decay", "=", "DECAY_RATE", ",", "stddev", "=", "0.01", ")", "\n", "bn73", "=", "batch_norm", "(", "\"bn73\"", ",", "conv73", ",", "is_training", ")", "\n", "relu73", "=", "make_relu", "(", "\"relu73\"", ",", "bn73", ")", "\n", "\n", "caps_input", "=", "relu73", "\n", "cap_dims", "=", "8", "\n", "shape", "=", "caps_input", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "cap_count", "=", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", "*", "shape", "[", "3", "]", "//", "cap_dims", "\n", "\n", "pcap73", "=", "make_caps_from_conv", "(", "\"pcap72\"", ",", "\n", "caps_input", ",", "cap_dims", ",", "cap_count", ")", "\n", "ocap73", "=", "make_homogeneous_vector_caps", "(", "\"outcaps73\"", ",", "\n", "pcap73", ",", "count_classes", ",", "cap_dims", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn73b", "=", "batch_norm", "(", "\"bn73b\"", ",", "ocap73", ",", "is_training", ")", "\n", "relu73b", "=", "make_relu", "(", "\"relu73b\"", ",", "bn73b", ")", "\n", "\n", "aux_logits", "=", "make_norm", "(", "\"norm73\"", ",", "relu73b", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_8x8x1280a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc8", "\n", "\n", "# branch3x3", "\n", "conv74", "=", "make_conv_1x1_no_bias", "(", "\"conv74\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn74", "=", "batch_norm", "(", "\"bn74\"", ",", "conv74", ",", "is_training", ")", "\n", "relu74", "=", "make_relu", "(", "\"relu74\"", ",", "bn74", ")", "\n", "conv75", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv75\"", ",", "\n", "relu74", ",", "320", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn75", "=", "batch_norm", "(", "\"bn75\"", ",", "conv75", ",", "is_training", ")", "\n", "relu75", "=", "make_relu", "(", "\"relu75\"", ",", "bn75", ")", "\n", "\n", "# branch7x7x3", "\n", "conv76", "=", "make_conv_1x1_no_bias", "(", "\"conv76\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn76", "=", "batch_norm", "(", "\"bn76\"", ",", "conv76", ",", "is_training", ")", "\n", "relu76", "=", "make_relu", "(", "\"relu76\"", ",", "bn76", ")", "\n", "conv77", "=", "make_conv_1x7_no_bias", "(", "\"conv77\"", ",", "\n", "relu76", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn77", "=", "batch_norm", "(", "\"bn77\"", ",", "conv77", ",", "is_training", ")", "\n", "relu77", "=", "make_relu", "(", "\"relu77\"", ",", "bn77", ")", "\n", "conv78", "=", "make_conv_7x1_no_bias", "(", "\"conv78\"", ",", "\n", "relu77", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn78", "=", "batch_norm", "(", "\"bn78\"", ",", "conv78", ",", "is_training", ")", "\n", "relu78", "=", "make_relu", "(", "\"relu78\"", ",", "bn78", ")", "\n", "conv79", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv79\"", ",", "\n", "relu78", ",", "192", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn79", "=", "batch_norm", "(", "\"bn79\"", ",", "conv79", ",", "is_training", ")", "\n", "relu79", "=", "make_relu", "(", "\"relu79\"", ",", "bn79", ")", "\n", "\n", "# branch_pool", "\n", "pool80", "=", "make_max_pool_3x3", "(", "\"pool80\"", ",", "intnsr", ")", "\n", "\n", "cc9", "=", "make_concat", "(", "\"cc9\"", ",", "3", ",", "[", "relu75", ",", "relu79", ",", "pool80", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_8x8x2048a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc9", "\n", "\n", "# branch1x1", "\n", "conv81", "=", "make_conv_1x1_no_bias", "(", "\"conv81\"", ",", "\n", "intnsr", ",", "320", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn81", "=", "batch_norm", "(", "\"bn81\"", ",", "conv81", ",", "is_training", ")", "\n", "relu81", "=", "make_relu", "(", "\"relu81\"", ",", "bn81", ")", "\n", "\n", "# branch3x3", "\n", "conv82", "=", "make_conv_1x1_no_bias", "(", "\"conv82\"", ",", "\n", "intnsr", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn82", "=", "batch_norm", "(", "\"bn82\"", ",", "conv82", ",", "is_training", ")", "\n", "relu82", "=", "make_relu", "(", "\"relu82\"", ",", "bn82", ")", "\n", "conv83", "=", "make_conv_1x3_no_bias", "(", "\"conv83\"", ",", "\n", "relu82", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn83", "=", "batch_norm", "(", "\"bn83\"", ",", "conv83", ",", "is_training", ")", "\n", "relu83", "=", "make_relu", "(", "\"relu83\"", ",", "bn83", ")", "\n", "conv84", "=", "make_conv_3x1_no_bias", "(", "\"conv84\"", ",", "\n", "relu82", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn84", "=", "batch_norm", "(", "\"bn84\"", ",", "conv84", ",", "is_training", ")", "\n", "relu84", "=", "make_relu", "(", "\"relu84\"", ",", "bn84", ")", "\n", "cc10", "=", "make_concat", "(", "\"cc10\"", ",", "3", ",", "[", "relu83", ",", "relu84", "]", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv85", "=", "make_conv_1x1_no_bias", "(", "\"conv85\"", ",", "\n", "intnsr", ",", "448", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn85", "=", "batch_norm", "(", "\"bn85\"", ",", "conv85", ",", "is_training", ")", "\n", "relu85", "=", "make_relu", "(", "\"relu85\"", ",", "bn85", ")", "\n", "conv86", "=", "make_conv_3x3_no_bias", "(", "\"conv86\"", ",", "\n", "relu85", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn86", "=", "batch_norm", "(", "\"bn86\"", ",", "conv86", ",", "is_training", ")", "\n", "relu86", "=", "make_relu", "(", "\"relu86\"", ",", "bn86", ")", "\n", "conv87", "=", "make_conv_1x3_no_bias", "(", "\"conv87\"", ",", "\n", "relu86", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn87", "=", "batch_norm", "(", "\"bn87\"", ",", "conv87", ",", "is_training", ")", "\n", "relu87", "=", "make_relu", "(", "\"relu87\"", ",", "bn87", ")", "\n", "conv88", "=", "make_conv_3x1_no_bias", "(", "\"conv88\"", ",", "\n", "relu86", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn88", "=", "batch_norm", "(", "\"bn88\"", ",", "conv88", ",", "is_training", ")", "\n", "relu88", "=", "make_relu", "(", "\"relu88\"", ",", "bn88", ")", "\n", "cc11", "=", "make_concat", "(", "\"cc11\"", ",", "3", ",", "[", "relu87", ",", "relu88", "]", ")", "\n", "\n", "# branch_pool", "\n", "pool89", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool89\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv89", "=", "make_conv_1x1_no_bias", "(", "\"conv89\"", ",", "\n", "pool89", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn89", "=", "batch_norm", "(", "\"bn89\"", ",", "conv89", ",", "is_training", ")", "\n", "relu89", "=", "make_relu", "(", "\"relu89\"", ",", "bn89", ")", "\n", "\n", "cc12", "=", "make_concat", "(", "\"cc12\"", ",", "3", ",", "[", "relu81", ",", "cc10", ",", "cc11", ",", "relu89", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_8x8x2048b\"", ")", ":", "\n", "        ", "intnsr", "=", "cc12", "\n", "\n", "# branch1x1", "\n", "conv90", "=", "make_conv_1x1_no_bias", "(", "\"conv90\"", ",", "\n", "intnsr", ",", "320", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn90", "=", "batch_norm", "(", "\"bn90\"", ",", "conv90", ",", "is_training", ")", "\n", "relu90", "=", "make_relu", "(", "\"relu90\"", ",", "bn90", ")", "\n", "\n", "# branch3x3", "\n", "conv91", "=", "make_conv_1x1_no_bias", "(", "\"conv91\"", ",", "\n", "intnsr", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn91", "=", "batch_norm", "(", "\"bn91\"", ",", "conv91", ",", "is_training", ")", "\n", "relu91", "=", "make_relu", "(", "\"relu91\"", ",", "bn91", ")", "\n", "conv92", "=", "make_conv_1x3_no_bias", "(", "\"conv92\"", ",", "\n", "relu91", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn92", "=", "batch_norm", "(", "\"bn92\"", ",", "conv92", ",", "is_training", ")", "\n", "relu92", "=", "make_relu", "(", "\"relu92\"", ",", "bn92", ")", "\n", "conv93", "=", "make_conv_3x1_no_bias", "(", "\"conv93\"", ",", "\n", "relu91", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn93", "=", "batch_norm", "(", "\"bn93\"", ",", "conv93", ",", "is_training", ")", "\n", "relu93", "=", "make_relu", "(", "\"relu93\"", ",", "bn93", ")", "\n", "cc13", "=", "make_concat", "(", "\"cc13\"", ",", "3", ",", "[", "relu92", ",", "relu93", "]", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv94", "=", "make_conv_1x1_no_bias", "(", "\"conv94\"", ",", "\n", "intnsr", ",", "448", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn94", "=", "batch_norm", "(", "\"bn94\"", ",", "conv94", ",", "is_training", ")", "\n", "relu94", "=", "make_relu", "(", "\"relu94\"", ",", "bn94", ")", "\n", "conv95", "=", "make_conv_3x3_no_bias", "(", "\"conv95\"", ",", "\n", "relu94", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn95", "=", "batch_norm", "(", "\"bn95\"", ",", "conv95", ",", "is_training", ")", "\n", "relu95", "=", "make_relu", "(", "\"relu95\"", ",", "bn95", ")", "\n", "conv96", "=", "make_conv_1x3_no_bias", "(", "\"conv96\"", ",", "\n", "relu95", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn96", "=", "batch_norm", "(", "\"bn96\"", ",", "conv96", ",", "is_training", ")", "\n", "relu96", "=", "make_relu", "(", "\"relu96\"", ",", "bn96", ")", "\n", "conv97", "=", "make_conv_3x1_no_bias", "(", "\"conv97\"", ",", "\n", "relu95", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn97", "=", "batch_norm", "(", "\"bn97\"", ",", "conv97", ",", "is_training", ")", "\n", "relu97", "=", "make_relu", "(", "\"relu97\"", ",", "bn97", ")", "\n", "cc14", "=", "make_concat", "(", "\"cc14\"", ",", "3", ",", "[", "relu96", ",", "relu97", "]", ")", "\n", "\n", "# branch_pool", "\n", "pool98", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool98\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv98", "=", "make_conv_1x1_no_bias", "(", "\"conv98\"", ",", "\n", "pool98", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn98", "=", "batch_norm", "(", "\"bn98\"", ",", "conv98", ",", "is_training", ")", "\n", "relu98", "=", "make_relu", "(", "\"relu98\"", ",", "bn98", ")", "\n", "\n", "cc15", "=", "make_concat", "(", "\"cc15\"", ",", "3", ",", "[", "relu90", ",", "cc13", ",", "cc14", ",", "relu98", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"logits\"", ")", ":", "\n", "        ", "intnsr", "=", "cc15", "\n", "\n", "shape", "=", "intnsr", ".", "get_shape", "(", ")", "\n", "pool99", "=", "make_avg_pool", "(", "\"pool99\"", ",", "intnsr", ",", "shape", "[", "1", "]", ",", "shape", "[", "2", "]", ")", "\n", "\n", "caps_input", "=", "pool99", "\n", "cap_dims", "=", "8", "\n", "shape", "=", "caps_input", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "cap_count", "=", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", "*", "shape", "[", "3", "]", "//", "cap_dims", "\n", "\n", "pcap99", "=", "make_caps_from_conv", "(", "\"pcap99\"", ",", "\n", "caps_input", ",", "cap_dims", ",", "cap_count", ")", "\n", "ocap99", "=", "make_homogeneous_vector_caps", "(", "\"outcaps99\"", ",", "\n", "pcap99", ",", "count_classes", ",", "cap_dims", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn99", "=", "batch_norm", "(", "\"bn99\"", ",", "ocap99", ",", "is_training", ")", "\n", "relu99", "=", "make_relu", "(", "\"relu99\"", ",", "bn99", ")", "\n", "\n", "logits", "=", "make_norm", "(", "\"norm99\"", ",", "relu99", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"loss\"", ")", ":", "\n", "        ", "y_out", "=", "tf", ".", "stop_gradient", "(", "y_out", ")", "\n", "aux_preds", "=", "lsr_loss", "(", "aux_logits", ",", "y_out", ",", "0.1", ",", "0.4", ")", "\n", "preds", "=", "lsr_loss", "(", "logits", ",", "y_out", ",", "0.1", ",", "1.0", ")", "\n", "loss", "=", "tf", ".", "reduce_mean", "(", "aux_preds", "+", "preds", ")", "\n", "", "return", "logits", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.model_hvc.run_towers": [[630, 655], ["range", "cnn_helpers.merge_towers_and_optimize", "tensorflow.device", "tensorflow.name_scope", "tensorflow.cond", "tensorflow.device", "labels_list.append", "logits_list.append", "loss_list.append", "grads.append", "tensorflow.cond", "tensorflow.name_scope", "model_hvc.make_tower", "optimizer.compute_gradients"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.merge_towers_and_optimize", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.make_tower"], ["", "def", "run_towers", "(", "optimizer", ",", "global_step", ",", "is_training", ",", "is_nbl", ",", "\n", "training_data", ",", "validation_data", ",", "nbl_val_data", ",", "count_classes", ",", "num_gpus", ")", ":", "\n", "    ", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ",", "tf", ".", "name_scope", "(", "\"input/train_or_eval\"", ")", ":", "\n", "        ", "images", ",", "labels", "=", "tf", ".", "cond", "(", "is_training", ",", "lambda", ":", "training_data", ",", "lambda", ":", "\n", "tf", ".", "cond", "(", "is_nbl", ",", "lambda", ":", "nbl_val_data", ",", "lambda", ":", "validation_data", ")", ")", "\n", "", "labels_list", "=", "[", "]", "\n", "logits_list", "=", "[", "]", "\n", "loss_list", "=", "[", "]", "\n", "grads", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_gpus", ")", ":", "\n", "        ", "tower_name", "=", "\"tower%d\"", "%", "i", "\n", "with", "tf", ".", "device", "(", "\"/device:GPU:%d\"", "%", "i", ")", ":", "\n", "            ", "with", "tf", ".", "name_scope", "(", "tower_name", ")", ":", "\n", "                ", "logits", ",", "loss", "=", "make_tower", "(", "\n", "images", ",", "labels", ",", "is_training", ",", "count_classes", ")", "\n", "", "labels_list", ".", "append", "(", "labels", ")", "\n", "logits_list", ".", "append", "(", "logits", ")", "\n", "loss_list", ".", "append", "(", "loss", ")", "\n", "grads", ".", "append", "(", "optimizer", ".", "compute_gradients", "(", "loss", ")", ")", "\n", "\n", "", "", "train_op", ",", "loss_op", ",", "acc_top_1", ",", "acc_top_5", "=", "merge_towers_and_optimize", "(", "\n", "optimizer", ",", "global_step", ",", "grads", ",", "logits_list", ",", "loss_list", ",", "labels_list", ")", "\n", "\n", "return", "train_op", ",", "loss_op", ",", "acc_top_1", ",", "acc_top_5", "\n", "", ""]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.__init__": [[26, 66], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "output.Output.open_csv", "output.Output.open_csv", "csv.DictWriter", "csv.DictWriter", "output.Output.test_csv_writer.writeheader", "output.Output.nbl_test_csv_writer.writeheader", "output.Output.test_csv.flush", "output.Output.nbl_test_csv.flush", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.open_csv", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.open_csv"], ["def", "__init__", "(", "self", ",", "log_dir", ",", "run_name", ",", "\n", "profile_compute_time_every_n_steps", "=", "None", ",", "\n", "save_summary_info_every_n_steps", "=", "None", ")", ":", "\n", "        ", "self", ".", "run_name", "=", "run_name", "\n", "self", ".", "pctens", "=", "profile_compute_time_every_n_steps", "\n", "self", ".", "ssiens", "=", "save_summary_info_every_n_steps", "\n", "self", ".", "log_dir", "=", "log_dir", "\n", "model_file_base", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "run_name", ")", "\n", "self", ".", "model_file_base", "=", "os", ".", "path", ".", "join", "(", "model_file_base", ",", "\"weights\"", ")", "\n", "test_csv_filename", "=", "\"{}_test_log.csv\"", ".", "format", "(", "run_name", ")", "\n", "test_csv_filename", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "test_csv_filename", ")", "\n", "nbl_test_csv_filename", "=", "\"{}_nbl_test_log.csv\"", ".", "format", "(", "run_name", ")", "\n", "nbl_test_csv_filename", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "nbl_test_csv_filename", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "log_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "log_dir", ")", "\n", "\n", "", "self", ".", "test_csv", "=", "self", ".", "open_csv", "(", "test_csv_filename", ")", "\n", "self", ".", "nbl_test_csv", "=", "self", ".", "open_csv", "(", "nbl_test_csv_filename", ")", "\n", "self", ".", "test_csv_writer", "=", "csv", ".", "DictWriter", "(", "self", ".", "test_csv", ",", "\n", "fieldnames", "=", "self", ".", "CSV_FIELDS", ")", "\n", "self", ".", "nbl_test_csv_writer", "=", "csv", ".", "DictWriter", "(", "self", ".", "nbl_test_csv", ",", "\n", "fieldnames", "=", "self", ".", "CSV_FIELDS", ")", "\n", "self", ".", "test_csv_writer", ".", "writeheader", "(", ")", "\n", "self", ".", "nbl_test_csv_writer", ".", "writeheader", "(", ")", "\n", "self", ".", "test_csv", ".", "flush", "(", ")", "\n", "self", ".", "nbl_test_csv", ".", "flush", "(", ")", "\n", "self", ".", "tb_writer", "=", "None", "\n", "self", ".", "tb_writer_nbl", "=", "None", "\n", "self", ".", "tf_saver_best_top1", "=", "None", "\n", "self", ".", "tf_saver_best_top5", "=", "None", "\n", "self", ".", "tf_saver_best_nbl_top1", "=", "None", "\n", "self", ".", "tf_saver_best_nbl_top5", "=", "None", "\n", "self", ".", "tf_saver_latest", "=", "None", "\n", "self", ".", "run_options", "=", "None", "\n", "self", ".", "run_metadata", "=", "None", "\n", "self", ".", "best_top1_accuracy", "=", "0", "\n", "self", ".", "best_top5_accuracy", "=", "0", "\n", "self", ".", "best_nbl_top1_accuracy", "=", "0", "\n", "self", ".", "best_nbl_top5_accuracy", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.train_step_begin": [[67, 73], ["tensorflow.RunOptions", "tensorflow.RunMetadata"], "methods", ["None"], ["", "def", "train_step_begin", "(", "self", ",", "step", ")", ":", "\n", "        ", "if", "self", ".", "pctens", "is", "not", "None", "and", "step", "%", "self", ".", "pctens", "==", "0", ":", "\n", "            ", "self", ".", "run_options", "=", "tf", ".", "RunOptions", "(", "\n", "report_tensor_allocations_upon_oom", "=", "True", ",", "\n", "trace_level", "=", "tf", ".", "RunOptions", ".", "FULL_TRACE", ")", "\n", "self", ".", "run_metadata", "=", "tf", ".", "RunMetadata", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.train_step_end": [[74, 82], ["output.Output.log_metrics", "output.Output.log_run_metadata", "output.Output.log_summaries", "output.Output.tb_writer.flush"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_metrics", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_run_metadata", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_summaries"], ["", "", "def", "train_step_end", "(", "self", ",", "session", ",", "epoch", ",", "global_step", ",", "\n", "step", ",", "loss", ",", "lr", ",", "number_of_training_steps", ",", "feed_dict", ")", ":", "\n", "        ", "self", ".", "log_metrics", "(", "epoch", "=", "epoch", ",", "loss", "=", "loss", ",", "lr", "=", "lr", ",", "step", "=", "step", ",", "\n", "steps_per_epoch", "=", "number_of_training_steps", ",", "\n", "is_test", "=", "False", ",", "validate_nbl", "=", "False", ")", "\n", "self", ".", "log_run_metadata", "(", "global_step", ",", "step", ")", "\n", "self", ".", "log_summaries", "(", "session", ",", "global_step", ",", "step", ",", "feed_dict", ")", "\n", "self", ".", "tb_writer", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.train_end": [[83, 85], ["output.Output.save_model_latest"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.save_model_latest"], ["", "def", "train_end", "(", "self", ",", "session", ",", "epoch", ",", "global_step", ")", ":", "\n", "        ", "self", ".", "save_model_latest", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.validation_step_begin": [[86, 89], ["output.Output.log_msg"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg"], ["", "def", "validation_step_begin", "(", "self", ",", "step", ",", "number_of_validation_steps", ")", ":", "\n", "        ", "self", ".", "log_msg", "(", "\"Validating (step {}/{})...\"", ".", "\n", "format", "(", "step", "+", "1", ",", "number_of_validation_steps", ")", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.validation_end": [[90, 112], ["output.Output.log_metrics", "output.Output.tb_writer.flush", "output.Output.tb_writer_nbl.flush", "output.Output.save_model_nbl_best_top1", "output.Output.save_model_nbl_best_top5", "output.Output.save_model_best_top1", "output.Output.save_model_best_top5"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_metrics", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.save_model_nbl_best_top1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.save_model_nbl_best_top5", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.save_model_best_top1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.save_model_best_top5"], ["", "def", "validation_end", "(", "self", ",", "session", ",", "epoch", ",", "global_step", ",", "validate_nbl", ",", "\n", "test_loss", ",", "lr", ",", "top1_accuracy", ",", "top5_accuracy", ")", ":", "\n", "        ", "self", ".", "log_metrics", "(", "epoch", "=", "epoch", ",", "loss", "=", "test_loss", ",", "lr", "=", "lr", ",", "\n", "top1_accuracy", "=", "top1_accuracy", ",", "\n", "top5_accuracy", "=", "top5_accuracy", ",", "\n", "is_test", "=", "True", ",", "validate_nbl", "=", "validate_nbl", ")", "\n", "self", ".", "tb_writer", ".", "flush", "(", ")", "\n", "self", ".", "tb_writer_nbl", ".", "flush", "(", ")", "\n", "if", "validate_nbl", ":", "\n", "            ", "if", "top1_accuracy", ">=", "self", ".", "best_nbl_top1_accuracy", ":", "\n", "                ", "self", ".", "best_nbl_top1_accuracy", "=", "top1_accuracy", "\n", "self", ".", "save_model_nbl_best_top1", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "", "if", "top5_accuracy", ">=", "self", ".", "best_nbl_top5_accuracy", ":", "\n", "                ", "self", ".", "best_nbl_top5_accuracy", "=", "top5_accuracy", "\n", "self", ".", "save_model_nbl_best_top5", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "top1_accuracy", ">=", "self", ".", "best_top1_accuracy", ":", "\n", "                ", "self", ".", "best_top1_accuracy", "=", "top1_accuracy", "\n", "self", ".", "save_model_best_top1", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "", "if", "top5_accuracy", ">=", "self", ".", "best_top5_accuracy", ":", "\n", "                ", "self", ".", "best_top5_accuracy", "=", "top5_accuracy", "\n", "self", ".", "save_model_best_top5", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.log_metrics": [[113, 160], ["tensorflow.Summary", "tensorflow.Summary.value.add", "dict", "output.Output.log_msg", "tensorflow.Summary.value.add", "tensorflow.Summary.value.add", "output.Output.tb_writer.add_summary", "output.Output.log_msg", "output.Output.log_msg", "output.Output.log_msg", "datetime.datetime.datetime.now().strftime", "output.Output.tb_writer_nbl.add_summary", "output.Output.log_msg", "output.Output.nbl_test_csv_writer.writerow", "output.Output.nbl_test_csv.flush", "output.Output.tb_writer.add_summary", "output.Output.log_msg", "output.Output.test_csv_writer.writerow", "output.Output.test_csv.flush", "datetime.datetime.datetime.now().strftime", "datetime.datetime.datetime.now", "datetime.datetime.datetime.now"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg"], ["", "", "", "def", "log_metrics", "(", "self", ",", "epoch", ",", "loss", ",", "lr", ",", "step", "=", "0", ",", "\n", "steps_per_epoch", "=", "0", ",", "is_test", "=", "False", ",", "validate_nbl", "=", "False", ",", "\n", "top1_accuracy", "=", "None", ",", "top5_accuracy", "=", "None", ")", ":", "\n", "        ", "prefix", "=", "\"Test\"", "if", "is_test", "else", "\"Train\"", "\n", "summary", "=", "tf", ".", "Summary", "(", ")", "\n", "s_loss", "=", "summary", ".", "value", ".", "add", "(", ")", "\n", "s_loss", ".", "tag", "=", "\"{}/Loss\"", ".", "format", "(", "prefix", ")", "\n", "s_loss", ".", "simple_value", "=", "loss", "\n", "if", "is_test", ":", "\n", "            ", "s_accuracy1", "=", "summary", ".", "value", ".", "add", "(", ")", "\n", "s_accuracy1", ".", "tag", "=", "\"{}/Top-1 Accuracy\"", ".", "format", "(", "prefix", ")", "\n", "s_accuracy1", ".", "simple_value", "=", "top1_accuracy", "\n", "s_accuracy5", "=", "summary", ".", "value", ".", "add", "(", ")", "\n", "s_accuracy5", ".", "tag", "=", "\"{}/Top-5 Accuracy\"", ".", "format", "(", "prefix", ")", "\n", "s_accuracy5", ".", "simple_value", "=", "top5_accuracy", "\n", "\n", "", "step_number", "=", "(", "epoch", "-", "1", ")", "*", "steps_per_epoch", "+", "step", "\n", "\n", "row_dict", "=", "dict", "(", "{", "\n", "\"Date\"", ":", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y%m%d\"", ")", ",", "\n", "\"Time\"", ":", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%H:%M:%S.%f\"", ")", "[", ":", "-", "3", "]", ",", "\n", "\"Epoch\"", ":", "epoch", ",", "\n", "\"Top-1 Accuracy\"", ":", "top1_accuracy", ",", "\n", "\"Top-5 Accuracy\"", ":", "top5_accuracy", ",", "\n", "\"Loss\"", ":", "loss", ",", "\n", "\"LR\"", ":", "lr", "}", ")", "\n", "\n", "if", "is_test", ":", "\n", "            ", "if", "validate_nbl", ":", "\n", "                ", "self", ".", "tb_writer_nbl", ".", "add_summary", "(", "summary", ",", "epoch", ")", "\n", "self", ".", "log_msg", "(", "\"[TEST-NBL] - Epoch {}\"", ".", "format", "(", "epoch", ")", ")", "\n", "self", ".", "nbl_test_csv_writer", ".", "writerow", "(", "row_dict", ")", "\n", "self", ".", "nbl_test_csv", ".", "flush", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "tb_writer", ".", "add_summary", "(", "summary", ",", "epoch", ")", "\n", "self", ".", "log_msg", "(", "\"[TEST] - Epoch {}\"", ".", "format", "(", "epoch", ")", ")", "\n", "self", ".", "test_csv_writer", ".", "writerow", "(", "row_dict", ")", "\n", "self", ".", "test_csv", ".", "flush", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "tb_writer", ".", "add_summary", "(", "summary", ",", "step_number", ")", "\n", "self", ".", "log_msg", "(", "\"[TRAIN] - Epoch {}, Step {}\"", ".", "format", "(", "epoch", ",", "step", "+", "1", ")", ")", "\n", "\n", "", "self", ".", "log_msg", "(", "\"loss: {}\"", ".", "format", "(", "loss", ")", ",", "False", ")", "\n", "if", "top1_accuracy", "is", "not", "None", ":", "\n", "            ", "self", ".", "log_msg", "(", "\"top1: {}\"", ".", "format", "(", "top1_accuracy", ")", ",", "False", ")", "\n", "", "if", "top5_accuracy", "is", "not", "None", ":", "\n", "            ", "self", ".", "log_msg", "(", "\"top5: {}\"", ".", "format", "(", "top5_accuracy", ")", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.log_run_metadata": [[161, 165], ["output.Output.tb_writer.add_run_metadata"], "methods", ["None"], ["", "", "def", "log_run_metadata", "(", "self", ",", "global_step", ",", "step", ")", ":", "\n", "        ", "if", "self", ".", "run_metadata", "is", "not", "None", "and", "step", "%", "self", ".", "pctens", "==", "0", ":", "\n", "            ", "self", ".", "tb_writer", ".", "add_run_metadata", "(", "self", ".", "run_metadata", ",", "\n", "\"step{}\"", ".", "format", "(", "global_step", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.log_summaries": [[166, 171], ["tensorflow.summary.merge_all", "session.run", "output.Output.tb_writer.add_summary"], "methods", ["None"], ["", "", "def", "log_summaries", "(", "self", ",", "session", ",", "global_step", ",", "step", ",", "feed_dict", ")", ":", "\n", "        ", "if", "self", ".", "ssiens", "is", "not", "None", "and", "step", "%", "self", ".", "ssiens", "==", "0", ":", "\n", "            ", "summary_op", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "summary_str", "=", "session", ".", "run", "(", "summary_op", ",", "feed_dict", "=", "feed_dict", ")", "\n", "self", ".", "tb_writer", ".", "add_summary", "(", "summary_str", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.save_model_best_top1": [[172, 176], ["output.Output.tf_saver_best_top1.save"], "methods", ["None"], ["", "", "def", "save_model_best_top1", "(", "self", ",", "session", ",", "epoch", ",", "g_step", ")", ":", "\n", "        ", "self", ".", "tf_saver_best_top1", ".", "save", "(", "session", ",", "\"{}-{}-best_top1\"", "\n", ".", "format", "(", "self", ".", "model_file_base", ",", "epoch", ")", ",", "\n", "global_step", "=", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.save_model_best_top5": [[177, 181], ["output.Output.tf_saver_best_top5.save"], "methods", ["None"], ["", "def", "save_model_best_top5", "(", "self", ",", "session", ",", "epoch", ",", "g_step", ")", ":", "\n", "        ", "self", ".", "tf_saver_best_top5", ".", "save", "(", "session", ",", "\"{}-{}-best_top5\"", "\n", ".", "format", "(", "self", ".", "model_file_base", ",", "epoch", ")", ",", "\n", "global_step", "=", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.save_model_nbl_best_top1": [[182, 186], ["output.Output.tf_saver_best_nbl_top1.save"], "methods", ["None"], ["", "def", "save_model_nbl_best_top1", "(", "self", ",", "session", ",", "epoch", ",", "g_step", ")", ":", "\n", "        ", "self", ".", "tf_saver_best_nbl_top1", ".", "save", "(", "session", ",", "\"{}-{}-nbl_best_top1\"", "\n", ".", "format", "(", "self", ".", "model_file_base", ",", "epoch", ")", ",", "\n", "global_step", "=", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.save_model_nbl_best_top5": [[187, 191], ["output.Output.tf_saver_best_nbl_top5.save"], "methods", ["None"], ["", "def", "save_model_nbl_best_top5", "(", "self", ",", "session", ",", "epoch", ",", "g_step", ")", ":", "\n", "        ", "self", ".", "tf_saver_best_nbl_top5", ".", "save", "(", "session", ",", "\"{}-{}-nbl_best_top5\"", "\n", ".", "format", "(", "self", ".", "model_file_base", ",", "epoch", ")", ",", "\n", "global_step", "=", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.save_model_latest": [[192, 196], ["output.Output.tf_saver_latest.save"], "methods", ["None"], ["", "def", "save_model_latest", "(", "self", ",", "session", ",", "epoch", ",", "g_step", ")", ":", "\n", "        ", "self", ".", "tf_saver_latest", ".", "save", "(", "session", ",", "\"{}-{}-latest\"", "\n", ".", "format", "(", "self", ".", "model_file_base", ",", "epoch", ")", ",", "\n", "global_step", "=", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.set_session_graph": [[197, 207], ["tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter", "tensorflow.train.Saver", "tensorflow.train.Saver", "tensorflow.train.Saver", "tensorflow.train.Saver", "tensorflow.train.Saver", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "set_session_graph", "(", "self", ",", "session_graph", ")", ":", "\n", "        ", "self", ".", "tb_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "self", ".", "run_name", ")", ",", "session_graph", ")", "\n", "self", ".", "tb_writer_nbl", "=", "tf", ".", "summary", ".", "FileWriter", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "self", ".", "run_name", "+", "\"-NBL\"", ")", ",", "session_graph", ")", "\n", "self", ".", "tf_saver_best_top1", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "5", ")", "\n", "self", ".", "tf_saver_best_top5", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "5", ")", "\n", "self", ".", "tf_saver_best_nbl_top1", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "5", ")", "\n", "self", ".", "tf_saver_best_nbl_top5", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "5", ")", "\n", "self", ".", "tf_saver_latest", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.close_files": [[208, 213], ["output.Output.test_csv.close", "output.Output.nbl_test_csv.close", "output.Output.tb_writer.close", "output.Output.tb_writer_nbl.close"], "methods", ["None"], ["", "def", "close_files", "(", "self", ")", ":", "\n", "        ", "self", ".", "test_csv", ".", "close", "(", ")", "\n", "self", ".", "nbl_test_csv", ".", "close", "(", ")", "\n", "self", ".", "tb_writer", ".", "close", "(", ")", "\n", "self", ".", "tb_writer_nbl", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.get_run_options": [[214, 216], ["None"], "methods", ["None"], ["", "def", "get_run_options", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "run_options", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.get_run_metadata": [[217, 219], ["None"], "methods", ["None"], ["", "def", "get_run_metadata", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "run_metadata", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.open_csv": [[220, 225], ["os.path.exists", "open", "open"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "open_csv", "(", "csv_file_name", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "exists", "(", "csv_file_name", ")", ":", "\n", "            ", "return", "open", "(", "csv_file_name", ",", "\"a\"", ",", "newline", "=", "\"\"", ")", "\n", "", "return", "open", "(", "csv_file_name", ",", "\"w\"", ",", "newline", "=", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.output.Output.log_msg": [[226, 232], ["print", "datetime.datetime.datetime.now().strftime", "datetime.datetime.datetime.now"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "log_msg", "(", "msg", ",", "put_time", "=", "True", ")", ":", "\n", "        ", "t_str", "=", "\"                     \"", "\n", "if", "put_time", ":", "\n", "            ", "t_str", "=", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y%m%d %H:%M:%S.%f\"", ")", "[", ":", "-", "3", "]", "\n", "", "print", "(", "\"{} - {}\"", ".", "format", "(", "t_str", ",", "msg", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.lsr_loss.lsr_loss": [[24, 55], ["logits.get_shape().assert_is_compatible_with", "tf.cast.get_shape", "tensorflow.name_scope", "tensorflow.cast", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.convert_to_tensor", "tensorflow.multiply", "logits.get_shape", "tensorflow.reduce_mean", "tf.cast.get_shape"], "function", ["None"], ["def", "lsr_loss", "(", "logits", ",", "one_hot_labels", ",", "\n", "label_smoothing", "=", "0", ",", "weight", "=", "1.0", ",", "scope", "=", "None", ")", ":", "\n", "    ", "\"\"\"Define a Cross Entropy loss using softmax_cross_entropy_with_logits.\n\n    It can scale the loss by weight factor, and smooth the labels.\n\n    Args:\n      logits: [batch_size, num_classes] logits outputs of the network .\n      one_hot_labels: [batch_size, num_classes] target one_hot_encoded labels.\n      label_smoothing: if greater than 0 then smooth the labels.\n      weight: scale the loss by this factor.\n      scope: Optional scope for name_scope.\n\n    Returns:\n      A tensor with the softmax_cross_entropy loss.\n    \"\"\"", "\n", "logits", ".", "get_shape", "(", ")", ".", "assert_is_compatible_with", "(", "one_hot_labels", ".", "get_shape", "(", ")", ")", "\n", "with", "tf", ".", "name_scope", "(", "scope", ",", "\"lsr_loss\"", ",", "[", "logits", ",", "one_hot_labels", "]", ")", ":", "\n", "        ", "num_classes", "=", "one_hot_labels", ".", "get_shape", "(", ")", "[", "-", "1", "]", ".", "value", "\n", "one_hot_labels", "=", "tf", ".", "cast", "(", "one_hot_labels", ",", "logits", ".", "dtype", ")", "\n", "if", "label_smoothing", ">", "0", ":", "\n", "            ", "smooth_positives", "=", "1.0", "-", "label_smoothing", "\n", "smooth_negatives", "=", "label_smoothing", "/", "num_classes", "\n", "one_hot_labels", "=", "one_hot_labels", "*", "smooth_positives", "+", "smooth_negatives", "\n", "\n", "", "cross_entropy", "=", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits_v2", "(", "\n", "labels", "=", "one_hot_labels", ",", "logits", "=", "logits", ",", "name", "=", "\"xentropy\"", ")", "\n", "\n", "weight", "=", "tf", ".", "convert_to_tensor", "(", "\n", "weight", ",", "dtype", "=", "logits", ".", "dtype", ".", "base_dtype", ",", "name", "=", "\"loss_weight\"", ")", "\n", "return", "tf", ".", "multiply", "(", "weight", ",", "tf", ".", "reduce_mean", "(", "cross_entropy", ")", ",", "name", "=", "\"value\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm": [[25, 81], ["tensorflow.device", "tensorflow.variable_scope", "inputs.get_shape", "list", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.moments", "tensorflow.python.training.moving_averages.assign_moving_average", "tensorflow.python.training.moving_averages.assign_moving_average", "tensorflow.add_to_collection", "tensorflow.add_to_collection", "tensorflow.name_scope", "tensorflow.cond", "tensorflow.nn.batch_normalization", "tf.nn.batch_normalization.set_shape", "range", "inputs.get_shape", "tensorflow.zeros_initializer", "tensorflow.zeros_initializer", "tensorflow.ones_initializer", "batch_norm.batch_norm.training_func"], "function", ["None"], ["def", "batch_norm", "(", "op_name", ",", "inputs", ",", "is_training", ",", "decay", "=", "0.9997", ",", "epsilon", "=", "0.001", ")", ":", "\n", "    ", "\"\"\"Adds a Batch Normalization layer.\n    Args:\n        op_name: name for operation.\n        inputs: a tensor of size [batch_size, height, width, channels]\n                or [batch_size, channels].\n        decay: decay for the moving average.\n        epsilon: small float added to variance to avoid dividing by zero.\n        is_training: whether or not the model is in training mode.\n    Returns:\n        a tensor representing the output of the operation.\n    \"\"\"", "\n", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ",", "tf", ".", "variable_scope", "(", "\"vars/bns\"", ",", "None", ",", "[", "inputs", "]", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "inputs_shape", "=", "inputs", ".", "get_shape", "(", ")", "\n", "axis", "=", "list", "(", "range", "(", "len", "(", "inputs_shape", ")", "-", "1", ")", ")", "\n", "params_shape", "=", "inputs_shape", "[", "-", "1", ":", "]", "\n", "beta", "=", "tf", ".", "get_variable", "(", "\n", "\"beta_\"", "+", "op_name", ",", "shape", "=", "params_shape", ",", "\n", "initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ")", "\n", "moving_collections", "=", "[", "tf", ".", "GraphKeys", ".", "GLOBAL_VARIABLES", ",", "\n", "tf", ".", "GraphKeys", ".", "MOVING_AVERAGE_VARIABLES", "]", "\n", "moving_mean", "=", "tf", ".", "get_variable", "(", "\n", "\"moving_mean_\"", "+", "op_name", ",", "params_shape", ",", "\n", "initializer", "=", "tf", ".", "zeros_initializer", "(", ")", ",", "\n", "trainable", "=", "False", ",", "collections", "=", "moving_collections", ")", "\n", "moving_variance", "=", "tf", ".", "get_variable", "(", "\n", "\"moving_variance_\"", "+", "op_name", ",", "params_shape", ",", "\n", "initializer", "=", "tf", ".", "ones_initializer", "(", ")", ",", "\n", "trainable", "=", "False", ",", "collections", "=", "moving_collections", ")", "\n", "\n", "", "def", "training_func", "(", ")", ":", "\n", "# Calculate the moments based on the individual batch.", "\n", "        ", "mean", ",", "variance", "=", "tf", ".", "nn", ".", "moments", "(", "inputs", ",", "axis", ")", "\n", "upd_moving_mean", "=", "moving_averages", ".", "assign_moving_average", "(", "\n", "moving_mean", ",", "mean", ",", "decay", ")", "\n", "upd_moving_variance", "=", "moving_averages", ".", "assign_moving_average", "(", "\n", "moving_variance", ",", "variance", ",", "decay", ")", "\n", "tf", ".", "add_to_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ",", "upd_moving_mean", ")", "\n", "tf", ".", "add_to_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ",", "upd_moving_variance", ")", "\n", "return", "mean", ",", "variance", "\n", "\n", "", "def", "inferring_func", "(", ")", ":", "\n", "# Just use the moving_mean and moving_variance.", "\n", "        ", "return", "moving_mean", ",", "moving_variance", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "op_name", ")", ":", "\n", "        ", "mean_to_use", ",", "variance_to_use", "=", "tf", ".", "cond", "(", "is_training", ",", "\n", "lambda", ":", "training_func", "(", ")", ",", "\n", "lambda", ":", "inferring_func", "(", ")", ")", "\n", "\n", "# Normalize the activations.", "\n", "outputs", "=", "tf", ".", "nn", ".", "batch_normalization", "(", "inputs", ",", "mean_to_use", ",", "\n", "variance_to_use", ",", "beta", ",", "None", ",", "epsilon", ",", "name", "=", "op_name", ")", "\n", "outputs", ".", "set_shape", "(", "inputs", ".", "get_shape", "(", ")", ")", "\n", "return", "outputs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.model.make_tower": [[32, 614], ["tensorflow.name_scope", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_3x3", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_3x3", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_5x5_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_5x5_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_5x5_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_3x3", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_avg_pool_5x5_stride_3", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_relu.get_shape", "cnn_helpers.make_conv_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_flatten", "cnn_helpers.make_fc", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x7_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_7x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_3x3", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_1x3_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "cnn_helpers.make_avg_pool_3x3_stride_1", "cnn_helpers.make_conv_1x1_no_bias", "inception_v3.batch_norm.batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_concat", "tensorflow.name_scope", "intnsr.get_shape", "cnn_helpers.make_avg_pool", "tensorflow.cond", "cnn_helpers.make_dropout", "cnn_helpers.make_flatten", "cnn_helpers.make_fc", "tensorflow.name_scope", "tensorflow.stop_gradient", "inception_v3.lsr_loss.lsr_loss", "inception_v3.lsr_loss.lsr_loss", "tensorflow.reduce_mean", "tensorflow.constant", "tensorflow.constant"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_3x3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_3x3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_5x5_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_5x5_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_5x5_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_3x3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_5x5_stride_3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_flatten", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_fc", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x7_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_7x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_3x3", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool_3x3_stride_1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_1x1_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.batch_norm.batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_concat", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_avg_pool", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_dropout", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_flatten", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_fc", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.lsr_loss.lsr_loss", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.lsr_loss.lsr_loss"], ["def", "make_tower", "(", "x_in", ",", "y_out", ",", "is_training", ",", "count_classes", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "\"input_stem\"", ")", ":", "\n", "        ", "conv1", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv1\"", ",", "\n", "x_in", ",", "32", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn1", "=", "batch_norm", "(", "\"bn1\"", ",", "conv1", ",", "is_training", ")", "\n", "relu1", "=", "make_relu", "(", "\"relu1\"", ",", "bn1", ")", "\n", "\n", "conv2", "=", "make_conv_3x3_no_bias", "(", "\"conv2\"", ",", "\n", "relu1", ",", "32", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn2", "=", "batch_norm", "(", "\"bn2\"", ",", "conv2", ",", "is_training", ")", "\n", "relu2", "=", "make_relu", "(", "\"relu2\"", ",", "bn2", ")", "\n", "\n", "conv3", "=", "make_conv_3x3_no_bias", "(", "\"conv3\"", ",", "\n", "relu2", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn3", "=", "batch_norm", "(", "\"bn3\"", ",", "conv3", ",", "is_training", ")", "\n", "relu3", "=", "make_relu", "(", "\"relu3\"", ",", "bn3", ")", "\n", "pool3", "=", "make_max_pool_3x3", "(", "\"pool3\"", ",", "relu3", ")", "\n", "\n", "conv4", "=", "make_conv_1x1_no_bias", "(", "\"conv4\"", ",", "\n", "pool3", ",", "80", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn4", "=", "batch_norm", "(", "\"bn4\"", ",", "conv4", ",", "is_training", ")", "\n", "relu4", "=", "make_relu", "(", "\"relu4\"", ",", "bn4", ")", "\n", "\n", "conv5", "=", "make_conv_3x3_no_bias", "(", "\"conv5\"", ",", "\n", "relu4", ",", "192", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn5", "=", "batch_norm", "(", "\"bn5\"", ",", "conv5", ",", "is_training", ")", "\n", "relu5", "=", "make_relu", "(", "\"relu5\"", ",", "bn5", ")", "\n", "pool5", "=", "make_max_pool_3x3", "(", "\"pool5\"", ",", "relu5", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x256a\"", ")", ":", "\n", "        ", "intnsr", "=", "pool5", "\n", "\n", "# branch1x1", "\n", "conv6", "=", "make_conv_1x1_no_bias", "(", "\"conv6\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn6", "=", "batch_norm", "(", "\"bn6\"", ",", "conv6", ",", "is_training", ")", "\n", "relu6", "=", "make_relu", "(", "\"relu6\"", ",", "bn6", ")", "\n", "\n", "# branch5x5", "\n", "conv7", "=", "make_conv_1x1_no_bias", "(", "\"conv7\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn7", "=", "batch_norm", "(", "\"bn7\"", ",", "conv7", ",", "is_training", ")", "\n", "relu7", "=", "make_relu", "(", "\"relu7\"", ",", "bn7", ")", "\n", "conv8", "=", "make_conv_5x5_no_bias", "(", "\"conv8\"", ",", "\n", "relu7", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn8", "=", "batch_norm", "(", "\"bn8\"", ",", "conv8", ",", "is_training", ")", "\n", "relu8", "=", "make_relu", "(", "\"relu8\"", ",", "bn8", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv9", "=", "make_conv_1x1_no_bias", "(", "\"conv9\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn9", "=", "batch_norm", "(", "\"bn9\"", ",", "conv9", ",", "is_training", ")", "\n", "relu9", "=", "make_relu", "(", "\"relu9\"", ",", "bn9", ")", "\n", "conv10", "=", "make_conv_3x3_no_bias", "(", "\"conv10\"", ",", "\n", "relu9", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn10", "=", "batch_norm", "(", "\"bn10\"", ",", "conv10", ",", "is_training", ")", "\n", "relu10", "=", "make_relu", "(", "\"relu10\"", ",", "bn10", ")", "\n", "conv11", "=", "make_conv_3x3_no_bias", "(", "\"conv11\"", ",", "\n", "relu10", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn11", "=", "batch_norm", "(", "\"bn11\"", ",", "conv11", ",", "is_training", ")", "\n", "relu11", "=", "make_relu", "(", "\"relu11\"", ",", "bn11", ")", "\n", "\n", "# branch_pool", "\n", "pool12", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool12\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv12", "=", "make_conv_1x1_no_bias", "(", "\"conv12\"", ",", "\n", "pool12", ",", "32", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn12", "=", "batch_norm", "(", "\"bn12\"", ",", "conv12", ",", "is_training", ")", "\n", "relu12", "=", "make_relu", "(", "\"relu12\"", ",", "bn12", ")", "\n", "\n", "cc1", "=", "make_concat", "(", "\"cc1\"", ",", "3", ",", "[", "relu6", ",", "relu8", ",", "relu11", ",", "relu12", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x288a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc1", "\n", "\n", "# branch1x1", "\n", "conv13", "=", "make_conv_1x1_no_bias", "(", "\"conv13\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn13", "=", "batch_norm", "(", "\"bn13\"", ",", "conv13", ",", "is_training", ")", "\n", "relu13", "=", "make_relu", "(", "\"relu13\"", ",", "bn13", ")", "\n", "\n", "# branch5x5", "\n", "conv14", "=", "make_conv_1x1_no_bias", "(", "\"conv14\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn14", "=", "batch_norm", "(", "\"bn14\"", ",", "conv14", ",", "is_training", ")", "\n", "relu14", "=", "make_relu", "(", "\"relu14\"", ",", "bn14", ")", "\n", "conv15", "=", "make_conv_5x5_no_bias", "(", "\"conv15\"", ",", "\n", "relu14", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn15", "=", "batch_norm", "(", "\"bn15\"", ",", "conv15", ",", "is_training", ")", "\n", "relu15", "=", "make_relu", "(", "\"relu15\"", ",", "bn15", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv16", "=", "make_conv_1x1_no_bias", "(", "\"conv16\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn16", "=", "batch_norm", "(", "\"bn16\"", ",", "conv16", ",", "is_training", ")", "\n", "relu16", "=", "make_relu", "(", "\"relu16\"", ",", "bn16", ")", "\n", "conv17", "=", "make_conv_3x3_no_bias", "(", "\"conv17\"", ",", "\n", "relu16", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn17", "=", "batch_norm", "(", "\"bn17\"", ",", "conv17", ",", "is_training", ")", "\n", "relu17", "=", "make_relu", "(", "\"relu17\"", ",", "bn17", ")", "\n", "conv18", "=", "make_conv_3x3_no_bias", "(", "\"conv18\"", ",", "\n", "relu17", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn18", "=", "batch_norm", "(", "\"bn18\"", ",", "conv18", ",", "is_training", ")", "\n", "relu18", "=", "make_relu", "(", "\"relu18\"", ",", "bn18", ")", "\n", "\n", "# branch_pool", "\n", "pool19", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool19\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv19", "=", "make_conv_1x1_no_bias", "(", "\"conv19\"", ",", "\n", "pool19", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn19", "=", "batch_norm", "(", "\"bn19\"", ",", "conv19", ",", "is_training", ")", "\n", "relu19", "=", "make_relu", "(", "\"relu19\"", ",", "bn19", ")", "\n", "\n", "cc2", "=", "make_concat", "(", "\"cc2\"", ",", "3", ",", "[", "relu13", ",", "relu15", ",", "relu18", ",", "relu19", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x288b\"", ")", ":", "\n", "        ", "intnsr", "=", "cc2", "\n", "\n", "# branch1x1", "\n", "conv20", "=", "make_conv_1x1_no_bias", "(", "\"conv20\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn20", "=", "batch_norm", "(", "\"bn20\"", ",", "conv20", ",", "is_training", ")", "\n", "relu20", "=", "make_relu", "(", "\"relu20\"", ",", "bn20", ")", "\n", "\n", "# branch5x5", "\n", "conv21", "=", "make_conv_1x1_no_bias", "(", "\"conv21\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn21", "=", "batch_norm", "(", "\"bn21\"", ",", "conv21", ",", "is_training", ")", "\n", "relu21", "=", "make_relu", "(", "\"relu21\"", ",", "bn21", ")", "\n", "conv22", "=", "make_conv_5x5_no_bias", "(", "\"conv22\"", ",", "\n", "relu21", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn22", "=", "batch_norm", "(", "\"bn22\"", ",", "conv22", ",", "is_training", ")", "\n", "relu22", "=", "make_relu", "(", "\"relu22\"", ",", "bn22", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv23", "=", "make_conv_1x1_no_bias", "(", "\"conv23\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn23", "=", "batch_norm", "(", "\"bn23\"", ",", "conv23", ",", "is_training", ")", "\n", "relu23", "=", "make_relu", "(", "\"relu23\"", ",", "bn23", ")", "\n", "conv24", "=", "make_conv_3x3_no_bias", "(", "\"conv24\"", ",", "\n", "relu23", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn24", "=", "batch_norm", "(", "\"bn24\"", ",", "conv24", ",", "is_training", ")", "\n", "relu24", "=", "make_relu", "(", "\"relu24\"", ",", "bn24", ")", "\n", "conv25", "=", "make_conv_3x3_no_bias", "(", "\"conv25\"", ",", "\n", "relu24", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn25", "=", "batch_norm", "(", "\"bn25\"", ",", "conv25", ",", "is_training", ")", "\n", "relu25", "=", "make_relu", "(", "\"relu25\"", ",", "bn25", ")", "\n", "\n", "# branch_pool", "\n", "pool26", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool26\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv26", "=", "make_conv_1x1_no_bias", "(", "\"conv26\"", ",", "\n", "pool26", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn26", "=", "batch_norm", "(", "\"bn26\"", ",", "conv26", ",", "is_training", ")", "\n", "relu26", "=", "make_relu", "(", "\"relu26\"", ",", "bn26", ")", "\n", "\n", "cc3", "=", "make_concat", "(", "\"cc3\"", ",", "3", ",", "[", "relu20", ",", "relu22", ",", "relu25", ",", "relu26", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc3", "\n", "\n", "# branch3x3", "\n", "conv27", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv27\"", ",", "\n", "intnsr", ",", "384", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn27", "=", "batch_norm", "(", "\"bn27\"", ",", "conv27", ",", "is_training", ")", "\n", "relu27", "=", "make_relu", "(", "\"relu27\"", ",", "bn27", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv28", "=", "make_conv_1x1_no_bias", "(", "\"conv28\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn28", "=", "batch_norm", "(", "\"bn28\"", ",", "conv28", ",", "is_training", ")", "\n", "relu28", "=", "make_relu", "(", "\"relu28\"", ",", "bn28", ")", "\n", "conv29", "=", "make_conv_3x3_no_bias", "(", "\"conv29\"", ",", "\n", "relu28", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn29", "=", "batch_norm", "(", "\"bn29\"", ",", "conv29", ",", "is_training", ")", "\n", "relu29", "=", "make_relu", "(", "\"relu29\"", ",", "bn29", ")", "\n", "conv30", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv30\"", ",", "\n", "relu29", ",", "96", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn30", "=", "batch_norm", "(", "\"bn30\"", ",", "conv30", ",", "is_training", ")", "\n", "relu30", "=", "make_relu", "(", "\"relu30\"", ",", "bn30", ")", "\n", "\n", "pool31", "=", "make_max_pool_3x3", "(", "\"pool31\"", ",", "intnsr", ")", "\n", "\n", "cc4", "=", "make_concat", "(", "\"cc4\"", ",", "3", ",", "[", "relu27", ",", "relu30", ",", "pool31", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768b\"", ")", ":", "\n", "        ", "intnsr", "=", "cc4", "\n", "\n", "# branch1x1", "\n", "conv32", "=", "make_conv_1x1_no_bias", "(", "\"conv32\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn32", "=", "batch_norm", "(", "\"bn32\"", ",", "conv32", ",", "is_training", ")", "\n", "relu32", "=", "make_relu", "(", "\"relu32\"", ",", "bn32", ")", "\n", "\n", "# branch7x7", "\n", "conv33", "=", "make_conv_1x1_no_bias", "(", "\"conv33\"", ",", "\n", "intnsr", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn33", "=", "batch_norm", "(", "\"bn33\"", ",", "conv33", ",", "is_training", ")", "\n", "relu33", "=", "make_relu", "(", "\"relu33\"", ",", "bn33", ")", "\n", "conv34", "=", "make_conv_1x7_no_bias", "(", "\"conv34\"", ",", "\n", "relu33", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn34", "=", "batch_norm", "(", "\"bn34\"", ",", "conv34", ",", "is_training", ")", "\n", "relu34", "=", "make_relu", "(", "\"relu34\"", ",", "bn34", ")", "\n", "conv35", "=", "make_conv_7x1_no_bias", "(", "\"conv35\"", ",", "\n", "relu34", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn35", "=", "batch_norm", "(", "\"bn35\"", ",", "conv35", ",", "is_training", ")", "\n", "relu35", "=", "make_relu", "(", "\"relu35\"", ",", "bn35", ")", "\n", "\n", "# branch7x7dbl", "\n", "conv36", "=", "make_conv_1x1_no_bias", "(", "\"conv36\"", ",", "\n", "intnsr", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn36", "=", "batch_norm", "(", "\"bn36\"", ",", "conv36", ",", "is_training", ")", "\n", "relu36", "=", "make_relu", "(", "\"relu36\"", ",", "bn36", ")", "\n", "conv37", "=", "make_conv_7x1_no_bias", "(", "\"conv37\"", ",", "\n", "relu36", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn37", "=", "batch_norm", "(", "\"bn37\"", ",", "conv37", ",", "is_training", ")", "\n", "relu37", "=", "make_relu", "(", "\"relu37\"", ",", "bn37", ")", "\n", "conv38", "=", "make_conv_1x7_no_bias", "(", "\"conv38\"", ",", "\n", "relu37", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn38", "=", "batch_norm", "(", "\"bn38\"", ",", "conv38", ",", "is_training", ")", "\n", "relu38", "=", "make_relu", "(", "\"relu38\"", ",", "bn38", ")", "\n", "conv39", "=", "make_conv_7x1_no_bias", "(", "\"conv39\"", ",", "\n", "relu38", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn39", "=", "batch_norm", "(", "\"bn39\"", ",", "conv39", ",", "is_training", ")", "\n", "relu39", "=", "make_relu", "(", "\"relu39\"", ",", "bn39", ")", "\n", "conv40", "=", "make_conv_1x7_no_bias", "(", "\"conv40\"", ",", "\n", "relu39", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn40", "=", "batch_norm", "(", "\"bn40\"", ",", "conv40", ",", "is_training", ")", "\n", "relu40", "=", "make_relu", "(", "\"relu40\"", ",", "bn40", ")", "\n", "\n", "# branch_pool", "\n", "pool41", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool41\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv41", "=", "make_conv_1x1_no_bias", "(", "\"conv41\"", ",", "\n", "pool41", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn41", "=", "batch_norm", "(", "\"bn41\"", ",", "conv41", ",", "is_training", ")", "\n", "relu41", "=", "make_relu", "(", "\"relu41\"", ",", "bn41", ")", "\n", "\n", "cc5", "=", "make_concat", "(", "\"cc5\"", ",", "3", ",", "[", "relu32", ",", "relu35", ",", "relu40", ",", "relu41", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768c\"", ")", ":", "\n", "        ", "intnsr", "=", "cc5", "\n", "\n", "# branch1x1", "\n", "conv42", "=", "make_conv_1x1_no_bias", "(", "\"conv42\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn42", "=", "batch_norm", "(", "\"bn42\"", ",", "conv42", ",", "is_training", ")", "\n", "relu42", "=", "make_relu", "(", "\"relu42\"", ",", "bn42", ")", "\n", "\n", "# branch7x7", "\n", "conv43", "=", "make_conv_1x1_no_bias", "(", "\"conv43\"", ",", "\n", "intnsr", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn43", "=", "batch_norm", "(", "\"bn43\"", ",", "conv43", ",", "is_training", ")", "\n", "relu43", "=", "make_relu", "(", "\"relu43\"", ",", "bn43", ")", "\n", "conv44", "=", "make_conv_1x7_no_bias", "(", "\"conv44\"", ",", "\n", "relu43", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn44", "=", "batch_norm", "(", "\"bn44\"", ",", "conv44", ",", "is_training", ")", "\n", "relu44", "=", "make_relu", "(", "\"relu44\"", ",", "bn44", ")", "\n", "conv45", "=", "make_conv_7x1_no_bias", "(", "\"conv45\"", ",", "\n", "relu44", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn45", "=", "batch_norm", "(", "\"bn45\"", ",", "conv45", ",", "is_training", ")", "\n", "relu45", "=", "make_relu", "(", "\"relu45\"", ",", "bn45", ")", "\n", "\n", "# branch7x7dbl", "\n", "conv46", "=", "make_conv_1x1_no_bias", "(", "\"conv46\"", ",", "\n", "intnsr", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn46", "=", "batch_norm", "(", "\"bn46\"", ",", "conv46", ",", "is_training", ")", "\n", "relu46", "=", "make_relu", "(", "\"relu46\"", ",", "bn46", ")", "\n", "conv47", "=", "make_conv_7x1_no_bias", "(", "\"conv47\"", ",", "\n", "relu46", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn47", "=", "batch_norm", "(", "\"bn47\"", ",", "conv47", ",", "is_training", ")", "\n", "relu47", "=", "make_relu", "(", "\"relu47\"", ",", "bn47", ")", "\n", "conv48", "=", "make_conv_1x7_no_bias", "(", "\"conv48\"", ",", "\n", "relu47", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn48", "=", "batch_norm", "(", "\"bn48\"", ",", "conv48", ",", "is_training", ")", "\n", "relu48", "=", "make_relu", "(", "\"relu48\"", ",", "bn48", ")", "\n", "conv49", "=", "make_conv_7x1_no_bias", "(", "\"conv49\"", ",", "\n", "relu48", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn49", "=", "batch_norm", "(", "\"bn49\"", ",", "conv49", ",", "is_training", ")", "\n", "relu49", "=", "make_relu", "(", "\"relu49\"", ",", "bn49", ")", "\n", "conv50", "=", "make_conv_1x7_no_bias", "(", "\"conv50\"", ",", "\n", "relu49", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn50", "=", "batch_norm", "(", "\"bn50\"", ",", "conv50", ",", "is_training", ")", "\n", "relu50", "=", "make_relu", "(", "\"relu50\"", ",", "bn50", ")", "\n", "\n", "# branch_pool", "\n", "pool51", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool51\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv51", "=", "make_conv_1x1_no_bias", "(", "\"conv51\"", ",", "\n", "pool51", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn51", "=", "batch_norm", "(", "\"bn51\"", ",", "conv51", ",", "is_training", ")", "\n", "relu51", "=", "make_relu", "(", "\"relu51\"", ",", "bn51", ")", "\n", "\n", "cc6", "=", "make_concat", "(", "\"cc6\"", ",", "3", ",", "[", "relu42", ",", "relu45", ",", "relu50", ",", "relu51", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768d\"", ")", ":", "\n", "        ", "intnsr", "=", "cc6", "\n", "\n", "# branch1x1", "\n", "conv52", "=", "make_conv_1x1_no_bias", "(", "\"conv52\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn52", "=", "batch_norm", "(", "\"bn52\"", ",", "conv52", ",", "is_training", ")", "\n", "relu52", "=", "make_relu", "(", "\"relu52\"", ",", "bn52", ")", "\n", "\n", "# branch7x7", "\n", "conv53", "=", "make_conv_1x1_no_bias", "(", "\"conv53\"", ",", "\n", "intnsr", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn53", "=", "batch_norm", "(", "\"bn53\"", ",", "conv53", ",", "is_training", ")", "\n", "relu53", "=", "make_relu", "(", "\"relu53\"", ",", "bn53", ")", "\n", "conv54", "=", "make_conv_1x7_no_bias", "(", "\"conv54\"", ",", "\n", "relu53", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn54", "=", "batch_norm", "(", "\"bn54\"", ",", "conv54", ",", "is_training", ")", "\n", "relu54", "=", "make_relu", "(", "\"relu54\"", ",", "bn54", ")", "\n", "conv55", "=", "make_conv_7x1_no_bias", "(", "\"conv55\"", ",", "\n", "relu54", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn55", "=", "batch_norm", "(", "\"bn55\"", ",", "conv55", ",", "is_training", ")", "\n", "relu55", "=", "make_relu", "(", "\"relu55\"", ",", "bn55", ")", "\n", "\n", "# branch7x7dbl", "\n", "conv56", "=", "make_conv_1x1_no_bias", "(", "\"conv56\"", ",", "\n", "intnsr", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn56", "=", "batch_norm", "(", "\"bn56\"", ",", "conv56", ",", "is_training", ")", "\n", "relu56", "=", "make_relu", "(", "\"relu56\"", ",", "bn56", ")", "\n", "conv57", "=", "make_conv_7x1_no_bias", "(", "\"conv57\"", ",", "\n", "relu56", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn57", "=", "batch_norm", "(", "\"bn57\"", ",", "conv57", ",", "is_training", ")", "\n", "relu57", "=", "make_relu", "(", "\"relu57\"", ",", "bn57", ")", "\n", "conv58", "=", "make_conv_1x7_no_bias", "(", "\"conv58\"", ",", "\n", "relu57", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn58", "=", "batch_norm", "(", "\"bn58\"", ",", "conv58", ",", "is_training", ")", "\n", "relu58", "=", "make_relu", "(", "\"relu58\"", ",", "bn58", ")", "\n", "conv59", "=", "make_conv_7x1_no_bias", "(", "\"conv59\"", ",", "\n", "relu58", ",", "160", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn59", "=", "batch_norm", "(", "\"bn59\"", ",", "conv59", ",", "is_training", ")", "\n", "relu59", "=", "make_relu", "(", "\"relu59\"", ",", "bn59", ")", "\n", "conv60", "=", "make_conv_1x7_no_bias", "(", "\"conv60\"", ",", "\n", "relu59", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn60", "=", "batch_norm", "(", "\"bn60\"", ",", "conv60", ",", "is_training", ")", "\n", "relu60", "=", "make_relu", "(", "\"relu60\"", ",", "bn60", ")", "\n", "\n", "# branch_pool", "\n", "pool61", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool61\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv61", "=", "make_conv_1x1_no_bias", "(", "\"conv61\"", ",", "\n", "pool61", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn61", "=", "batch_norm", "(", "\"bn61\"", ",", "conv61", ",", "is_training", ")", "\n", "relu61", "=", "make_relu", "(", "\"relu61\"", ",", "bn61", ")", "\n", "\n", "cc7", "=", "make_concat", "(", "\"cc7\"", ",", "3", ",", "[", "relu52", ",", "relu55", ",", "relu60", ",", "relu61", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_17x17x768e\"", ")", ":", "\n", "        ", "intnsr", "=", "cc7", "\n", "\n", "# branch1x1", "\n", "conv62", "=", "make_conv_1x1_no_bias", "(", "\"conv62\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn62", "=", "batch_norm", "(", "\"bn62\"", ",", "conv62", ",", "is_training", ")", "\n", "relu62", "=", "make_relu", "(", "\"relu62\"", ",", "bn62", ")", "\n", "\n", "# branch7x7", "\n", "conv63", "=", "make_conv_1x1_no_bias", "(", "\"conv63\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn63", "=", "batch_norm", "(", "\"bn63\"", ",", "conv63", ",", "is_training", ")", "\n", "relu63", "=", "make_relu", "(", "\"relu63\"", ",", "bn63", ")", "\n", "conv64", "=", "make_conv_1x7_no_bias", "(", "\"conv64\"", ",", "\n", "relu63", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn64", "=", "batch_norm", "(", "\"bn64\"", ",", "conv64", ",", "is_training", ")", "\n", "relu64", "=", "make_relu", "(", "\"relu64\"", ",", "bn64", ")", "\n", "conv65", "=", "make_conv_7x1_no_bias", "(", "\"conv65\"", ",", "\n", "relu64", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn65", "=", "batch_norm", "(", "\"bn65\"", ",", "conv65", ",", "is_training", ")", "\n", "relu65", "=", "make_relu", "(", "\"relu65\"", ",", "bn65", ")", "\n", "\n", "# branch7x7dbl", "\n", "conv66", "=", "make_conv_1x1_no_bias", "(", "\"conv66\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn66", "=", "batch_norm", "(", "\"bn66\"", ",", "conv66", ",", "is_training", ")", "\n", "relu66", "=", "make_relu", "(", "\"relu66\"", ",", "bn66", ")", "\n", "conv67", "=", "make_conv_7x1_no_bias", "(", "\"conv67\"", ",", "\n", "relu66", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn67", "=", "batch_norm", "(", "\"bn67\"", ",", "conv67", ",", "is_training", ")", "\n", "relu67", "=", "make_relu", "(", "\"relu67\"", ",", "bn67", ")", "\n", "conv68", "=", "make_conv_1x7_no_bias", "(", "\"conv68\"", ",", "\n", "relu67", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn68", "=", "batch_norm", "(", "\"bn68\"", ",", "conv68", ",", "is_training", ")", "\n", "relu68", "=", "make_relu", "(", "\"relu68\"", ",", "bn68", ")", "\n", "conv69", "=", "make_conv_7x1_no_bias", "(", "\"conv69\"", ",", "\n", "relu68", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn69", "=", "batch_norm", "(", "\"bn69\"", ",", "conv69", ",", "is_training", ")", "\n", "relu69", "=", "make_relu", "(", "\"relu69\"", ",", "bn69", ")", "\n", "conv70", "=", "make_conv_1x7_no_bias", "(", "\"conv70\"", ",", "\n", "relu69", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn70", "=", "batch_norm", "(", "\"bn70\"", ",", "conv70", ",", "is_training", ")", "\n", "relu70", "=", "make_relu", "(", "\"relu70\"", ",", "bn70", ")", "\n", "\n", "# branch_pool", "\n", "pool71", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool71\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv71", "=", "make_conv_1x1_no_bias", "(", "\"conv71\"", ",", "\n", "pool71", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn71", "=", "batch_norm", "(", "\"bn71\"", ",", "conv71", ",", "is_training", ")", "\n", "relu71", "=", "make_relu", "(", "\"relu71\"", ",", "bn71", ")", "\n", "\n", "cc8", "=", "make_concat", "(", "\"cc8\"", ",", "3", ",", "[", "relu62", ",", "relu65", ",", "relu70", ",", "relu71", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"aux_logits\"", ")", ":", "\n", "        ", "intnsr", "=", "cc8", "\n", "\n", "# aux_logits", "\n", "pool72", "=", "make_avg_pool_5x5_stride_3", "(", "\"pool72\"", ",", "intnsr", ")", "\n", "conv72", "=", "make_conv_1x1_no_bias", "(", "\"conv72\"", ",", "\n", "pool72", ",", "128", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn72", "=", "batch_norm", "(", "\"bn72\"", ",", "conv72", ",", "is_training", ")", "\n", "relu72", "=", "make_relu", "(", "\"relu72\"", ",", "bn72", ")", "\n", "\n", "shape", "=", "relu72", ".", "get_shape", "(", ")", "\n", "conv73", "=", "make_conv_no_bias", "(", "\"conv73\"", ",", "\n", "relu72", ",", "shape", "[", "1", "]", ",", "shape", "[", "2", "]", ",", "128", ",", "\n", "weight_decay", "=", "DECAY_RATE", ",", "stddev", "=", "0.01", ")", "\n", "bn73", "=", "batch_norm", "(", "\"bn73\"", ",", "conv73", ",", "is_training", ")", "\n", "relu73", "=", "make_relu", "(", "\"relu73\"", ",", "bn73", ")", "\n", "\n", "aux_flat", "=", "make_flatten", "(", "\"aux_flatten\"", ",", "relu73", ")", "\n", "aux_logits", "=", "make_fc", "(", "\"aux_fc\"", ",", "\n", "aux_flat", ",", "count_classes", ",", "\n", "weight_decay", "=", "DECAY_RATE", ",", "stddev", "=", "0.001", ",", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_8x8x1280a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc8", "\n", "\n", "# branch3x3", "\n", "conv74", "=", "make_conv_1x1_no_bias", "(", "\"conv74\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn74", "=", "batch_norm", "(", "\"bn74\"", ",", "conv74", ",", "is_training", ")", "\n", "relu74", "=", "make_relu", "(", "\"relu74\"", ",", "bn74", ")", "\n", "conv75", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv75\"", ",", "\n", "relu74", ",", "320", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn75", "=", "batch_norm", "(", "\"bn75\"", ",", "conv75", ",", "is_training", ")", "\n", "relu75", "=", "make_relu", "(", "\"relu75\"", ",", "bn75", ")", "\n", "\n", "# branch7x7x3", "\n", "conv76", "=", "make_conv_1x1_no_bias", "(", "\"conv76\"", ",", "\n", "intnsr", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn76", "=", "batch_norm", "(", "\"bn76\"", ",", "conv76", ",", "is_training", ")", "\n", "relu76", "=", "make_relu", "(", "\"relu76\"", ",", "bn76", ")", "\n", "conv77", "=", "make_conv_1x7_no_bias", "(", "\"conv77\"", ",", "\n", "relu76", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn77", "=", "batch_norm", "(", "\"bn77\"", ",", "conv77", ",", "is_training", ")", "\n", "relu77", "=", "make_relu", "(", "\"relu77\"", ",", "bn77", ")", "\n", "conv78", "=", "make_conv_7x1_no_bias", "(", "\"conv78\"", ",", "\n", "relu77", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn78", "=", "batch_norm", "(", "\"bn78\"", ",", "conv78", ",", "is_training", ")", "\n", "relu78", "=", "make_relu", "(", "\"relu78\"", ",", "bn78", ")", "\n", "conv79", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv79\"", ",", "\n", "relu78", ",", "192", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn79", "=", "batch_norm", "(", "\"bn79\"", ",", "conv79", ",", "is_training", ")", "\n", "relu79", "=", "make_relu", "(", "\"relu79\"", ",", "bn79", ")", "\n", "\n", "# branch_pool", "\n", "pool80", "=", "make_max_pool_3x3", "(", "\"pool80\"", ",", "intnsr", ")", "\n", "\n", "cc9", "=", "make_concat", "(", "\"cc9\"", ",", "3", ",", "[", "relu75", ",", "relu79", ",", "pool80", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_8x8x2048a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc9", "\n", "\n", "# branch1x1", "\n", "conv81", "=", "make_conv_1x1_no_bias", "(", "\"conv81\"", ",", "\n", "intnsr", ",", "320", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn81", "=", "batch_norm", "(", "\"bn81\"", ",", "conv81", ",", "is_training", ")", "\n", "relu81", "=", "make_relu", "(", "\"relu81\"", ",", "bn81", ")", "\n", "\n", "# branch3x3", "\n", "conv82", "=", "make_conv_1x1_no_bias", "(", "\"conv82\"", ",", "\n", "intnsr", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn82", "=", "batch_norm", "(", "\"bn82\"", ",", "conv82", ",", "is_training", ")", "\n", "relu82", "=", "make_relu", "(", "\"relu82\"", ",", "bn82", ")", "\n", "conv83", "=", "make_conv_1x3_no_bias", "(", "\"conv83\"", ",", "\n", "relu82", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn83", "=", "batch_norm", "(", "\"bn83\"", ",", "conv83", ",", "is_training", ")", "\n", "relu83", "=", "make_relu", "(", "\"relu83\"", ",", "bn83", ")", "\n", "conv84", "=", "make_conv_3x1_no_bias", "(", "\"conv84\"", ",", "\n", "relu82", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn84", "=", "batch_norm", "(", "\"bn84\"", ",", "conv84", ",", "is_training", ")", "\n", "relu84", "=", "make_relu", "(", "\"relu84\"", ",", "bn84", ")", "\n", "cc10", "=", "make_concat", "(", "\"cc10\"", ",", "3", ",", "[", "relu83", ",", "relu84", "]", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv85", "=", "make_conv_1x1_no_bias", "(", "\"conv85\"", ",", "\n", "intnsr", ",", "448", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn85", "=", "batch_norm", "(", "\"bn85\"", ",", "conv85", ",", "is_training", ")", "\n", "relu85", "=", "make_relu", "(", "\"relu85\"", ",", "bn85", ")", "\n", "conv86", "=", "make_conv_3x3_no_bias", "(", "\"conv86\"", ",", "\n", "relu85", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn86", "=", "batch_norm", "(", "\"bn86\"", ",", "conv86", ",", "is_training", ")", "\n", "relu86", "=", "make_relu", "(", "\"relu86\"", ",", "bn86", ")", "\n", "conv87", "=", "make_conv_1x3_no_bias", "(", "\"conv87\"", ",", "\n", "relu86", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn87", "=", "batch_norm", "(", "\"bn87\"", ",", "conv87", ",", "is_training", ")", "\n", "relu87", "=", "make_relu", "(", "\"relu87\"", ",", "bn87", ")", "\n", "conv88", "=", "make_conv_3x1_no_bias", "(", "\"conv88\"", ",", "\n", "relu86", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn88", "=", "batch_norm", "(", "\"bn88\"", ",", "conv88", ",", "is_training", ")", "\n", "relu88", "=", "make_relu", "(", "\"relu88\"", ",", "bn88", ")", "\n", "cc11", "=", "make_concat", "(", "\"cc11\"", ",", "3", ",", "[", "relu87", ",", "relu88", "]", ")", "\n", "\n", "# branch_pool", "\n", "pool89", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool89\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv89", "=", "make_conv_1x1_no_bias", "(", "\"conv89\"", ",", "\n", "pool89", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn89", "=", "batch_norm", "(", "\"bn89\"", ",", "conv89", ",", "is_training", ")", "\n", "relu89", "=", "make_relu", "(", "\"relu89\"", ",", "bn89", ")", "\n", "\n", "cc12", "=", "make_concat", "(", "\"cc12\"", ",", "3", ",", "[", "relu81", ",", "cc10", ",", "cc11", ",", "relu89", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_8x8x2048b\"", ")", ":", "\n", "        ", "intnsr", "=", "cc12", "\n", "\n", "# branch1x1", "\n", "conv90", "=", "make_conv_1x1_no_bias", "(", "\"conv90\"", ",", "\n", "intnsr", ",", "320", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn90", "=", "batch_norm", "(", "\"bn90\"", ",", "conv90", ",", "is_training", ")", "\n", "relu90", "=", "make_relu", "(", "\"relu90\"", ",", "bn90", ")", "\n", "\n", "# branch3x3", "\n", "conv91", "=", "make_conv_1x1_no_bias", "(", "\"conv91\"", ",", "\n", "intnsr", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn91", "=", "batch_norm", "(", "\"bn91\"", ",", "conv91", ",", "is_training", ")", "\n", "relu91", "=", "make_relu", "(", "\"relu91\"", ",", "bn91", ")", "\n", "conv92", "=", "make_conv_1x3_no_bias", "(", "\"conv92\"", ",", "\n", "relu91", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn92", "=", "batch_norm", "(", "\"bn92\"", ",", "conv92", ",", "is_training", ")", "\n", "relu92", "=", "make_relu", "(", "\"relu92\"", ",", "bn92", ")", "\n", "conv93", "=", "make_conv_3x1_no_bias", "(", "\"conv93\"", ",", "\n", "relu91", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn93", "=", "batch_norm", "(", "\"bn93\"", ",", "conv93", ",", "is_training", ")", "\n", "relu93", "=", "make_relu", "(", "\"relu93\"", ",", "bn93", ")", "\n", "cc13", "=", "make_concat", "(", "\"cc13\"", ",", "3", ",", "[", "relu92", ",", "relu93", "]", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv94", "=", "make_conv_1x1_no_bias", "(", "\"conv94\"", ",", "\n", "intnsr", ",", "448", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn94", "=", "batch_norm", "(", "\"bn94\"", ",", "conv94", ",", "is_training", ")", "\n", "relu94", "=", "make_relu", "(", "\"relu94\"", ",", "bn94", ")", "\n", "conv95", "=", "make_conv_3x3_no_bias", "(", "\"conv95\"", ",", "\n", "relu94", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn95", "=", "batch_norm", "(", "\"bn95\"", ",", "conv95", ",", "is_training", ")", "\n", "relu95", "=", "make_relu", "(", "\"relu95\"", ",", "bn95", ")", "\n", "conv96", "=", "make_conv_1x3_no_bias", "(", "\"conv96\"", ",", "\n", "relu95", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn96", "=", "batch_norm", "(", "\"bn96\"", ",", "conv96", ",", "is_training", ")", "\n", "relu96", "=", "make_relu", "(", "\"relu96\"", ",", "bn96", ")", "\n", "conv97", "=", "make_conv_3x1_no_bias", "(", "\"conv97\"", ",", "\n", "relu95", ",", "384", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn97", "=", "batch_norm", "(", "\"bn97\"", ",", "conv97", ",", "is_training", ")", "\n", "relu97", "=", "make_relu", "(", "\"relu97\"", ",", "bn97", ")", "\n", "cc14", "=", "make_concat", "(", "\"cc14\"", ",", "3", ",", "[", "relu96", ",", "relu97", "]", ")", "\n", "\n", "# branch_pool", "\n", "pool98", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool98\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv98", "=", "make_conv_1x1_no_bias", "(", "\"conv98\"", ",", "\n", "pool98", ",", "192", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn98", "=", "batch_norm", "(", "\"bn98\"", ",", "conv98", ",", "is_training", ")", "\n", "relu98", "=", "make_relu", "(", "\"relu98\"", ",", "bn98", ")", "\n", "\n", "cc15", "=", "make_concat", "(", "\"cc15\"", ",", "3", ",", "[", "relu90", ",", "cc13", ",", "cc14", ",", "relu98", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"logits\"", ")", ":", "\n", "        ", "intnsr", "=", "cc15", "\n", "\n", "shape", "=", "intnsr", ".", "get_shape", "(", ")", "\n", "pool99", "=", "make_avg_pool", "(", "\"pool99\"", ",", "intnsr", ",", "shape", "[", "1", "]", ",", "shape", "[", "2", "]", ")", "\n", "\n", "keep_prob", "=", "tf", ".", "cond", "(", "is_training", ",", "\n", "lambda", ":", "tf", ".", "constant", "(", "0.8", ")", ",", "\n", "lambda", ":", "tf", ".", "constant", "(", "1.0", ")", ",", "\n", "name", "=", "\"keep_prob\"", ")", "\n", "\n", "do99", "=", "make_dropout", "(", "\"do99\"", ",", "pool99", ",", "keep_prob", ")", "\n", "\n", "flat", "=", "make_flatten", "(", "\"flatten\"", ",", "do99", ")", "\n", "logits", "=", "make_fc", "(", "\"fc\"", ",", "flat", ",", "count_classes", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"loss\"", ")", ":", "\n", "        ", "y_out", "=", "tf", ".", "stop_gradient", "(", "y_out", ")", "\n", "aux_preds", "=", "lsr_loss", "(", "aux_logits", ",", "y_out", ",", "0.1", ",", "0.4", ")", "\n", "preds", "=", "lsr_loss", "(", "logits", ",", "y_out", ",", "0.1", ",", "1.0", ")", "\n", "loss", "=", "tf", ".", "reduce_mean", "(", "aux_preds", "+", "preds", ")", "\n", "", "return", "logits", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.inception_v3.model.run_towers": [[616, 641], ["range", "cnn_helpers.merge_towers_and_optimize", "tensorflow.device", "tensorflow.name_scope", "tensorflow.cond", "tensorflow.device", "labels_list.append", "logits_list.append", "loss_list.append", "grads.append", "tensorflow.cond", "tensorflow.name_scope", "model.make_tower", "optimizer.compute_gradients"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.merge_towers_and_optimize", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.make_tower"], ["", "def", "run_towers", "(", "optimizer", ",", "global_step", ",", "is_training", ",", "is_nbl", ",", "\n", "training_data", ",", "validation_data", ",", "nbl_val_data", ",", "count_classes", ",", "num_gpus", ")", ":", "\n", "    ", "with", "tf", ".", "device", "(", "\"/device:CPU:0\"", ")", ",", "tf", ".", "name_scope", "(", "\"input/train_or_eval\"", ")", ":", "\n", "        ", "images", ",", "labels", "=", "tf", ".", "cond", "(", "is_training", ",", "lambda", ":", "training_data", ",", "lambda", ":", "\n", "tf", ".", "cond", "(", "is_nbl", ",", "lambda", ":", "nbl_val_data", ",", "lambda", ":", "validation_data", ")", ")", "\n", "", "labels_list", "=", "[", "]", "\n", "logits_list", "=", "[", "]", "\n", "loss_list", "=", "[", "]", "\n", "grads", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_gpus", ")", ":", "\n", "        ", "tower_name", "=", "\"tower%d\"", "%", "i", "\n", "with", "tf", ".", "device", "(", "\"/device:GPU:%d\"", "%", "i", ")", ":", "\n", "            ", "with", "tf", ".", "name_scope", "(", "tower_name", ")", ":", "\n", "                ", "logits", ",", "loss", "=", "make_tower", "(", "\n", "images", ",", "labels", ",", "is_training", ",", "count_classes", ")", "\n", "", "labels_list", ".", "append", "(", "labels", ")", "\n", "logits_list", ".", "append", "(", "logits", ")", "\n", "loss_list", ".", "append", "(", "loss", ")", "\n", "grads", ".", "append", "(", "optimizer", ".", "compute_gradients", "(", "loss", ")", ")", "\n", "\n", "", "", "train_op", ",", "loss_op", ",", "acc_top_1", ",", "acc_top_5", "=", "merge_towers_and_optimize", "(", "\n", "optimizer", ",", "global_step", ",", "grads", ",", "logits_list", ",", "loss_list", ",", "labels_list", ")", "\n", "\n", "return", "train_op", ",", "loss_op", ",", "acc_top_1", ",", "acc_top_5", "\n", "", ""]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.__init__": [[246, 263], ["tensorflow.Session", "tensorflow.placeholder", "tensorflow.image.decode_png", "tensorflow.image.encode_jpeg", "tensorflow.placeholder", "tensorflow.image.decode_jpeg", "tensorflow.image.encode_jpeg", "tensorflow.placeholder", "tensorflow.image.decode_jpeg"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.decode_jpeg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.decode_jpeg"], ["def", "__init__", "(", "self", ")", ":", "\n", "# Create a single Session to run all image coding calls.", "\n", "    ", "self", ".", "_sess", "=", "tf", ".", "Session", "(", ")", "\n", "\n", "# Initializes function that converts PNG to JPEG data.", "\n", "self", ".", "_png_data", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "string", ")", "\n", "image", "=", "tf", ".", "image", ".", "decode_png", "(", "self", ".", "_png_data", ",", "channels", "=", "3", ")", "\n", "self", ".", "_png_to_jpeg", "=", "tf", ".", "image", ".", "encode_jpeg", "(", "image", ",", "format", "=", "'rgb'", ",", "quality", "=", "100", ")", "\n", "\n", "# Initializes function that converts CMYK JPEG data to RGB JPEG data.", "\n", "self", ".", "_cmyk_data", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "string", ")", "\n", "image", "=", "tf", ".", "image", ".", "decode_jpeg", "(", "self", ".", "_cmyk_data", ",", "channels", "=", "0", ")", "\n", "self", ".", "_cmyk_to_rgb", "=", "tf", ".", "image", ".", "encode_jpeg", "(", "image", ",", "format", "=", "'rgb'", ",", "quality", "=", "100", ")", "\n", "\n", "# Initializes function that decodes RGB JPEG data.", "\n", "self", ".", "_decode_jpeg_data", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "string", ")", "\n", "self", ".", "_decode_jpeg", "=", "tf", ".", "image", ".", "decode_jpeg", "(", "self", ".", "_decode_jpeg_data", ",", "channels", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.png_to_jpeg": [[264, 267], ["build_imagenet_data.ImageCoder._sess.run"], "methods", ["None"], ["", "def", "png_to_jpeg", "(", "self", ",", "image_data", ")", ":", "\n", "    ", "return", "self", ".", "_sess", ".", "run", "(", "self", ".", "_png_to_jpeg", ",", "\n", "feed_dict", "=", "{", "self", ".", "_png_data", ":", "image_data", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.cmyk_to_rgb": [[268, 271], ["build_imagenet_data.ImageCoder._sess.run"], "methods", ["None"], ["", "def", "cmyk_to_rgb", "(", "self", ",", "image_data", ")", ":", "\n", "    ", "return", "self", ".", "_sess", ".", "run", "(", "self", ".", "_cmyk_to_rgb", ",", "\n", "feed_dict", "=", "{", "self", ".", "_cmyk_data", ":", "image_data", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.decode_jpeg": [[272, 278], ["build_imagenet_data.ImageCoder._sess.run", "len"], "methods", ["None"], ["", "def", "decode_jpeg", "(", "self", ",", "image_data", ")", ":", "\n", "    ", "image", "=", "self", ".", "_sess", ".", "run", "(", "self", ".", "_decode_jpeg", ",", "\n", "feed_dict", "=", "{", "self", ".", "_decode_jpeg_data", ":", "image_data", "}", ")", "\n", "assert", "len", "(", "image", ".", "shape", ")", "==", "3", "\n", "assert", "image", ".", "shape", "[", "2", "]", "==", "3", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._int64_feature": [[171, 176], ["tensorflow.train.Feature", "isinstance", "tensorflow.train.Int64List"], "function", ["None"], ["def", "_int64_feature", "(", "value", ")", ":", "\n", "  ", "\"\"\"Wrapper for inserting int64 features into Example proto.\"\"\"", "\n", "if", "not", "isinstance", "(", "value", ",", "list", ")", ":", "\n", "    ", "value", "=", "[", "value", "]", "\n", "", "return", "tf", ".", "train", ".", "Feature", "(", "int64_list", "=", "tf", ".", "train", ".", "Int64List", "(", "value", "=", "value", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._float_feature": [[178, 183], ["tensorflow.train.Feature", "isinstance", "tensorflow.train.FloatList"], "function", ["None"], ["", "def", "_float_feature", "(", "value", ")", ":", "\n", "  ", "\"\"\"Wrapper for inserting float features into Example proto.\"\"\"", "\n", "if", "not", "isinstance", "(", "value", ",", "list", ")", ":", "\n", "    ", "value", "=", "[", "value", "]", "\n", "", "return", "tf", ".", "train", ".", "Feature", "(", "float_list", "=", "tf", ".", "train", ".", "FloatList", "(", "value", "=", "value", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._bytes_feature": [[185, 190], ["tensorflow.train.Feature", "isinstance", "six.binary_type", "tensorflow.train.BytesList"], "function", ["None"], ["", "def", "_bytes_feature", "(", "value", ")", ":", "\n", "  ", "\"\"\"Wrapper for inserting bytes features into Example proto.\"\"\"", "\n", "if", "six", ".", "PY3", "and", "isinstance", "(", "value", ",", "six", ".", "text_type", ")", ":", "\n", "    ", "value", "=", "six", ".", "binary_type", "(", "value", ",", "encoding", "=", "'utf-8'", ")", "\n", "", "return", "tf", ".", "train", ".", "Feature", "(", "bytes_list", "=", "tf", ".", "train", ".", "BytesList", "(", "value", "=", "[", "value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._convert_to_example": [[192, 241], ["tensorflow.train.Example", "len", "l.append", "tensorflow.train.Features", "zip", "build_imagenet_data._int64_feature", "build_imagenet_data._int64_feature", "build_imagenet_data._bytes_feature", "build_imagenet_data._int64_feature", "build_imagenet_data._int64_feature", "build_imagenet_data._bytes_feature", "build_imagenet_data._bytes_feature", "build_imagenet_data._float_feature", "build_imagenet_data._float_feature", "build_imagenet_data._float_feature", "build_imagenet_data._float_feature", "build_imagenet_data._int64_feature", "build_imagenet_data._bytes_feature", "build_imagenet_data._bytes_feature", "build_imagenet_data._bytes_feature", "os.path.basename", "len"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._int64_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._int64_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._bytes_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._int64_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._int64_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._bytes_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._bytes_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._float_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._float_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._float_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._float_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._int64_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._bytes_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._bytes_feature", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._bytes_feature"], ["", "def", "_convert_to_example", "(", "filename", ",", "image_buffer", ",", "label", ",", "synset", ",", "human", ",", "bbox", ",", "\n", "height", ",", "width", ")", ":", "\n", "  ", "\"\"\"Build an Example proto for an example.\n\n  Args:\n    filename: string, path to an image file, e.g., '/path/to/example.JPG'\n    image_buffer: string, JPEG encoding of RGB image\n    label: integer, identifier for the ground truth for the network\n    synset: string, unique WordNet ID specifying the label, e.g., 'n02323233'\n    human: string, human-readable label, e.g., 'red fox, Vulpes vulpes'\n    bbox: list of bounding boxes; each box is a list of integers\n      specifying [xmin, ymin, xmax, ymax]. All boxes are assumed to belong to\n      the same label as the image label.\n    height: integer, image height in pixels\n    width: integer, image width in pixels\n  Returns:\n    Example proto\n  \"\"\"", "\n", "xmin", "=", "[", "]", "\n", "ymin", "=", "[", "]", "\n", "xmax", "=", "[", "]", "\n", "ymax", "=", "[", "]", "\n", "for", "b", "in", "bbox", ":", "\n", "    ", "assert", "len", "(", "b", ")", "==", "4", "\n", "# pylint: disable=expression-not-assigned", "\n", "[", "l", ".", "append", "(", "point", ")", "for", "l", ",", "point", "in", "zip", "(", "[", "xmin", ",", "ymin", ",", "xmax", ",", "ymax", "]", ",", "b", ")", "]", "\n", "# pylint: enable=expression-not-assigned", "\n", "\n", "", "colorspace", "=", "'RGB'", "\n", "channels", "=", "3", "\n", "image_format", "=", "'JPEG'", "\n", "\n", "example", "=", "tf", ".", "train", ".", "Example", "(", "features", "=", "tf", ".", "train", ".", "Features", "(", "feature", "=", "{", "\n", "'image/height'", ":", "_int64_feature", "(", "height", ")", ",", "\n", "'image/width'", ":", "_int64_feature", "(", "width", ")", ",", "\n", "'image/colorspace'", ":", "_bytes_feature", "(", "colorspace", ")", ",", "\n", "'image/channels'", ":", "_int64_feature", "(", "channels", ")", ",", "\n", "'image/class/label'", ":", "_int64_feature", "(", "label", ")", ",", "\n", "'image/class/synset'", ":", "_bytes_feature", "(", "synset", ")", ",", "\n", "'image/class/text'", ":", "_bytes_feature", "(", "human", ")", ",", "\n", "'image/object/bbox/xmin'", ":", "_float_feature", "(", "xmin", ")", ",", "\n", "'image/object/bbox/xmax'", ":", "_float_feature", "(", "xmax", ")", ",", "\n", "'image/object/bbox/ymin'", ":", "_float_feature", "(", "ymin", ")", ",", "\n", "'image/object/bbox/ymax'", ":", "_float_feature", "(", "ymax", ")", ",", "\n", "'image/object/bbox/label'", ":", "_int64_feature", "(", "[", "label", "]", "*", "len", "(", "xmin", ")", ")", ",", "\n", "'image/format'", ":", "_bytes_feature", "(", "image_format", ")", ",", "\n", "'image/filename'", ":", "_bytes_feature", "(", "os", ".", "path", ".", "basename", "(", "filename", ")", ")", ",", "\n", "'image/encoded'", ":", "_bytes_feature", "(", "image_buffer", ")", "}", ")", ")", "\n", "return", "example", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._is_png": [[280, 292], ["None"], "function", ["None"], ["", "", "def", "_is_png", "(", "filename", ")", ":", "\n", "  ", "\"\"\"Determine if a file contains a PNG format image.\n\n  Args:\n    filename: string, path of the image file.\n\n  Returns:\n    boolean indicating if the image is a PNG.\n  \"\"\"", "\n", "# File list from:", "\n", "# https://groups.google.com/forum/embed/?place=forum/torch7#!topic/torch7/fOSTXHIESSU", "\n", "return", "'n02105855_2933.JPEG'", "in", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._is_cmyk": [[294, 317], ["filename.split"], "function", ["None"], ["", "def", "_is_cmyk", "(", "filename", ")", ":", "\n", "  ", "\"\"\"Determine if file contains a CMYK JPEG format image.\n\n  Args:\n    filename: string, path of the image file.\n\n  Returns:\n    boolean indicating if the image is a JPEG encoded with CMYK color space.\n  \"\"\"", "\n", "# File list from:", "\n", "# https://github.com/cytsai/ilsvrc-cmyk-image-list", "\n", "blacklist", "=", "[", "'n01739381_1309.JPEG'", ",", "'n02077923_14822.JPEG'", ",", "\n", "'n02447366_23489.JPEG'", ",", "'n02492035_15739.JPEG'", ",", "\n", "'n02747177_10752.JPEG'", ",", "'n03018349_4028.JPEG'", ",", "\n", "'n03062245_4620.JPEG'", ",", "'n03347037_9675.JPEG'", ",", "\n", "'n03467068_12171.JPEG'", ",", "'n03529860_11437.JPEG'", ",", "\n", "'n03544143_17228.JPEG'", ",", "'n03633091_5218.JPEG'", ",", "\n", "'n03710637_5125.JPEG'", ",", "'n03961711_5286.JPEG'", ",", "\n", "'n04033995_2932.JPEG'", ",", "'n04258138_17003.JPEG'", ",", "\n", "'n04264628_27969.JPEG'", ",", "'n04336792_7448.JPEG'", ",", "\n", "'n04371774_5854.JPEG'", ",", "'n04596742_4225.JPEG'", ",", "\n", "'n07583066_647.JPEG'", ",", "'n13037406_4650.JPEG'", "]", "\n", "return", "filename", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "in", "blacklist", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._process_image": [[319, 354], ["build_imagenet_data._is_png", "coder.decode_jpeg", "tensorflow.gfile.FastGFile", "f.read", "print", "coder.png_to_jpeg", "build_imagenet_data._is_cmyk", "len", "print", "coder.cmyk_to_rgb"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._is_png", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.decode_jpeg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.png_to_jpeg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._is_cmyk", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.ImageCoder.cmyk_to_rgb"], ["", "def", "_process_image", "(", "filename", ",", "coder", ")", ":", "\n", "  ", "\"\"\"Process a single image file.\n\n  Args:\n    filename: string, path to an image file e.g., '/path/to/example.JPG'.\n    coder: instance of ImageCoder to provide TensorFlow image coding utils.\n  Returns:\n    image_buffer: string, JPEG encoding of RGB image.\n    height: integer, image height in pixels.\n    width: integer, image width in pixels.\n  \"\"\"", "\n", "# Read the image file.", "\n", "with", "tf", ".", "gfile", ".", "FastGFile", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "    ", "image_data", "=", "f", ".", "read", "(", ")", "\n", "\n", "# Clean the dirty data.", "\n", "", "if", "_is_png", "(", "filename", ")", ":", "\n", "# 1 image is a PNG.", "\n", "    ", "print", "(", "'Converting PNG to JPEG for %s'", "%", "filename", ")", "\n", "image_data", "=", "coder", ".", "png_to_jpeg", "(", "image_data", ")", "\n", "", "elif", "_is_cmyk", "(", "filename", ")", ":", "\n", "# 22 JPEG images are in CMYK colorspace.", "\n", "    ", "print", "(", "'Converting CMYK to RGB for %s'", "%", "filename", ")", "\n", "image_data", "=", "coder", ".", "cmyk_to_rgb", "(", "image_data", ")", "\n", "\n", "# Decode the RGB JPEG.", "\n", "", "image", "=", "coder", ".", "decode_jpeg", "(", "image_data", ")", "\n", "\n", "# Check that image converted to RGB", "\n", "assert", "len", "(", "image", ".", "shape", ")", "==", "3", "\n", "height", "=", "image", ".", "shape", "[", "0", "]", "\n", "width", "=", "image", ".", "shape", "[", "1", "]", "\n", "assert", "image", ".", "shape", "[", "2", "]", "==", "3", "\n", "\n", "return", "image_data", ",", "height", ",", "width", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._process_image_files_batch": [[356, 427], ["len", "int", "numpy.linspace().astype", "range", "print", "sys.stdout.flush", "os.path.join", "os.path.join", "tensorflow.python_io.TFRecordWriter", "numpy.arange", "tf.python_io.TFRecordWriter.close", "print", "sys.stdout.flush", "numpy.linspace", "build_imagenet_data._process_image", "build_imagenet_data._convert_to_example", "tf.python_io.TFRecordWriter.write", "_convert_to_example.SerializeToString", "print", "sys.stdout.flush", "datetime.datetime.now", "datetime.datetime.now", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._process_image", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._convert_to_example"], ["", "def", "_process_image_files_batch", "(", "coder", ",", "thread_index", ",", "ranges", ",", "name", ",", "filenames", ",", "\n", "synsets", ",", "labels", ",", "humans", ",", "bboxes", ",", "num_shards", ")", ":", "\n", "  ", "\"\"\"Processes and saves list of images as TFRecord in 1 thread.\n\n  Args:\n    coder: instance of ImageCoder to provide TensorFlow image coding utils.\n    thread_index: integer, unique batch to run index is within [0, len(ranges)).\n    ranges: list of pairs of integers specifying ranges of each batches to\n      analyze in parallel.\n    name: string, unique identifier specifying the data set\n    filenames: list of strings; each string is a path to an image file\n    synsets: list of strings; each string is a unique WordNet ID\n    labels: list of integer; each integer identifies the ground truth\n    humans: list of strings; each string is a human-readable label\n    bboxes: list of bounding boxes for each image. Note that each entry in this\n      list might contain from 0+ entries corresponding to the number of bounding\n      box annotations for the image.\n    num_shards: integer number of shards for this data set.\n  \"\"\"", "\n", "# Each thread produces N shards where N = int(num_shards / num_threads).", "\n", "# For instance, if num_shards = 128, and the num_threads = 2, then the first", "\n", "# thread would produce shards [0, 64).", "\n", "num_threads", "=", "len", "(", "ranges", ")", "\n", "assert", "not", "num_shards", "%", "num_threads", "\n", "num_shards_per_batch", "=", "int", "(", "num_shards", "/", "num_threads", ")", "\n", "\n", "shard_ranges", "=", "np", ".", "linspace", "(", "ranges", "[", "thread_index", "]", "[", "0", "]", ",", "\n", "ranges", "[", "thread_index", "]", "[", "1", "]", ",", "\n", "num_shards_per_batch", "+", "1", ")", ".", "astype", "(", "int", ")", "\n", "num_files_in_thread", "=", "ranges", "[", "thread_index", "]", "[", "1", "]", "-", "ranges", "[", "thread_index", "]", "[", "0", "]", "\n", "\n", "counter", "=", "0", "\n", "for", "s", "in", "range", "(", "num_shards_per_batch", ")", ":", "\n", "# Generate a sharded version of the file name, e.g. 'train-00002-of-00010'", "\n", "    ", "shard", "=", "thread_index", "*", "num_shards_per_batch", "+", "s", "\n", "output_filename", "=", "'%s-%.5d-of-%.5d'", "%", "(", "name", ",", "shard", ",", "num_shards", ")", "\n", "output_dir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "base_working_dir", ",", "FLAGS", ".", "output_directory", ")", "\n", "output_file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "output_filename", ")", "\n", "writer", "=", "tf", ".", "python_io", ".", "TFRecordWriter", "(", "output_file", ")", "\n", "\n", "shard_counter", "=", "0", "\n", "files_in_shard", "=", "np", ".", "arange", "(", "shard_ranges", "[", "s", "]", ",", "shard_ranges", "[", "s", "+", "1", "]", ",", "dtype", "=", "int", ")", "\n", "for", "i", "in", "files_in_shard", ":", "\n", "      ", "filename", "=", "filenames", "[", "i", "]", "\n", "label", "=", "labels", "[", "i", "]", "\n", "synset", "=", "synsets", "[", "i", "]", "\n", "human", "=", "humans", "[", "i", "]", "\n", "bbox", "=", "bboxes", "[", "i", "]", "\n", "\n", "image_buffer", ",", "height", ",", "width", "=", "_process_image", "(", "filename", ",", "coder", ")", "\n", "\n", "example", "=", "_convert_to_example", "(", "filename", ",", "image_buffer", ",", "label", ",", "\n", "synset", ",", "human", ",", "bbox", ",", "\n", "height", ",", "width", ")", "\n", "writer", ".", "write", "(", "example", ".", "SerializeToString", "(", ")", ")", "\n", "shard_counter", "+=", "1", "\n", "counter", "+=", "1", "\n", "\n", "if", "not", "counter", "%", "1000", ":", "\n", "        ", "print", "(", "'%s [thread %d]: Processed %d of %d images in thread batch.'", "%", "\n", "(", "datetime", ".", "now", "(", ")", ",", "thread_index", ",", "counter", ",", "num_files_in_thread", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "", "writer", ".", "close", "(", ")", "\n", "print", "(", "'%s [thread %d]: Wrote %d images to %s'", "%", "\n", "(", "datetime", ".", "now", "(", ")", ",", "thread_index", ",", "shard_counter", ",", "output_file", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "shard_counter", "=", "0", "\n", "", "print", "(", "'%s [thread %d]: Wrote %d images to %d shards.'", "%", "\n", "(", "datetime", ".", "now", "(", ")", ",", "thread_index", ",", "counter", ",", "num_files_in_thread", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._process_image_files": [[429, 479], ["numpy.linspace().astype", "range", "print", "sys.stdout.flush", "tensorflow.train.Coordinator", "build_imagenet_data.ImageCoder", "range", "tf.train.Coordinator.join", "print", "sys.stdout.flush", "len", "len", "len", "len", "len", "len", "len", "len", "ranges.append", "len", "threading.Thread", "threading.Thread.start", "threads.append", "numpy.linspace", "len", "len", "datetime.datetime.now", "len"], "function", ["None"], ["", "def", "_process_image_files", "(", "name", ",", "filenames", ",", "synsets", ",", "labels", ",", "humans", ",", "\n", "bboxes", ",", "num_shards", ")", ":", "\n", "  ", "\"\"\"Process and save list of images as TFRecord of Example protos.\n\n  Args:\n    name: string, unique identifier specifying the data set\n    filenames: list of strings; each string is a path to an image file\n    synsets: list of strings; each string is a unique WordNet ID\n    labels: list of integer; each integer identifies the ground truth\n    humans: list of strings; each string is a human-readable label\n    bboxes: list of bounding boxes for each image. Note that each entry in this\n      list might contain from 0+ entries corresponding to the number of bounding\n      box annotations for the image.\n    num_shards: integer number of shards for this data set.\n  \"\"\"", "\n", "assert", "len", "(", "filenames", ")", "==", "len", "(", "synsets", ")", "\n", "assert", "len", "(", "filenames", ")", "==", "len", "(", "labels", ")", "\n", "assert", "len", "(", "filenames", ")", "==", "len", "(", "humans", ")", "\n", "assert", "len", "(", "filenames", ")", "==", "len", "(", "bboxes", ")", "\n", "\n", "# Break all images into batches with a [ranges[i][0], ranges[i][1]].", "\n", "spacing", "=", "np", ".", "linspace", "(", "0", ",", "len", "(", "filenames", ")", ",", "FLAGS", ".", "num_threads", "+", "1", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "ranges", "=", "[", "]", "\n", "threads", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "spacing", ")", "-", "1", ")", ":", "\n", "    ", "ranges", ".", "append", "(", "[", "spacing", "[", "i", "]", ",", "spacing", "[", "i", "+", "1", "]", "]", ")", "\n", "\n", "# Launch a thread for each batch.", "\n", "", "print", "(", "'Launching %d threads for spacings: %s'", "%", "(", "FLAGS", ".", "num_threads", ",", "ranges", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "# Create a mechanism for monitoring when all threads are finished.", "\n", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "\n", "# Create a generic TensorFlow-based utility for converting all image codings.", "\n", "coder", "=", "ImageCoder", "(", ")", "\n", "\n", "threads", "=", "[", "]", "\n", "for", "thread_index", "in", "range", "(", "len", "(", "ranges", ")", ")", ":", "\n", "    ", "args", "=", "(", "coder", ",", "thread_index", ",", "ranges", ",", "name", ",", "filenames", ",", "\n", "synsets", ",", "labels", ",", "humans", ",", "bboxes", ",", "num_shards", ")", "\n", "t", "=", "threading", ".", "Thread", "(", "target", "=", "_process_image_files_batch", ",", "args", "=", "args", ")", "\n", "t", ".", "start", "(", ")", "\n", "threads", ".", "append", "(", "t", ")", "\n", "\n", "# Wait for all the threads to terminate.", "\n", "", "coord", ".", "join", "(", "threads", ")", "\n", "print", "(", "'%s: Finished writing all %d images in data set.'", "%", "\n", "(", "datetime", ".", "now", "(", ")", ",", "len", "(", "filenames", ")", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._find_image_files": [[481, 554], ["print", "list", "random.seed", "random.shuffle", "print", "l.strip", "tensorflow.gfile.Glob", "labels.extend", "synsets.extend", "filenames.extend", "range", "tensorflow.gfile.FastGFile().readlines", "print", "len", "len", "len", "len", "len", "tensorflow.gfile.FastGFile", "len"], "function", ["None"], ["", "def", "_find_image_files", "(", "data_dir", ",", "labels_file", ")", ":", "\n", "  ", "\"\"\"Build a list of all images files and labels in the data set.\n\n  Args:\n    data_dir: string, path to the root directory of images.\n\n      Assumes that the ImageNet data set resides in JPEG files located in\n      the following directory structure.\n\n        data_dir/n01440764/ILSVRC2012_val_00000293.JPEG\n        data_dir/n01440764/ILSVRC2012_val_00000543.JPEG\n\n      where 'n01440764' is the unique synset label associated with these images.\n\n    labels_file: string, path to the labels file.\n\n      The list of valid labels are held in this file. Assumes that the file\n      contains entries as such:\n        n01440764\n        n01443537\n        n01484850\n      where each line corresponds to a label expressed as a synset. We map\n      each synset contained in the file to an integer (based on the alphabetical\n      ordering) starting with the integer 1 corresponding to the synset\n      contained in the first line.\n\n      The reason we start the integer labels at 1 is to reserve label 0 as an\n      unused background class.\n\n  Returns:\n    filenames: list of strings; each string is a path to an image file.\n    synsets: list of strings; each string is a unique WordNet ID.\n    labels: list of integer; each integer identifies the ground truth.\n  \"\"\"", "\n", "print", "(", "'Determining list of input files and labels from %s.'", "%", "data_dir", ")", "\n", "challenge_synsets", "=", "[", "l", ".", "strip", "(", ")", "for", "l", "in", "\n", "tf", ".", "gfile", ".", "FastGFile", "(", "labels_file", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "\n", "\n", "labels", "=", "[", "]", "\n", "filenames", "=", "[", "]", "\n", "synsets", "=", "[", "]", "\n", "\n", "# Leave label index 0 empty as a background class.", "\n", "label_index", "=", "1", "\n", "\n", "# Construct the list of JPEG files and labels.", "\n", "for", "synset", "in", "challenge_synsets", ":", "\n", "    ", "jpeg_file_path", "=", "'%s/%s/*.JPEG'", "%", "(", "data_dir", ",", "synset", ")", "\n", "matching_files", "=", "tf", ".", "gfile", ".", "Glob", "(", "jpeg_file_path", ")", "\n", "\n", "labels", ".", "extend", "(", "[", "label_index", "]", "*", "len", "(", "matching_files", ")", ")", "\n", "synsets", ".", "extend", "(", "[", "synset", "]", "*", "len", "(", "matching_files", ")", ")", "\n", "filenames", ".", "extend", "(", "matching_files", ")", "\n", "\n", "if", "not", "label_index", "%", "100", ":", "\n", "      ", "print", "(", "'Finished finding files in %d of %d classes.'", "%", "(", "\n", "label_index", ",", "len", "(", "challenge_synsets", ")", ")", ")", "\n", "", "label_index", "+=", "1", "\n", "\n", "# Shuffle the ordering of all image files in order to guarantee", "\n", "# random ordering of the images with respect to label in the", "\n", "# saved TFRecord files. Make the randomization repeatable.", "\n", "", "shuffled_index", "=", "list", "(", "range", "(", "len", "(", "filenames", ")", ")", ")", "\n", "random", ".", "seed", "(", "12345", ")", "\n", "random", ".", "shuffle", "(", "shuffled_index", ")", "\n", "\n", "filenames", "=", "[", "filenames", "[", "i", "]", "for", "i", "in", "shuffled_index", "]", "\n", "synsets", "=", "[", "synsets", "[", "i", "]", "for", "i", "in", "shuffled_index", "]", "\n", "labels", "=", "[", "labels", "[", "i", "]", "for", "i", "in", "shuffled_index", "]", "\n", "\n", "print", "(", "'Found %d JPEG files across %d labels inside %s.'", "%", "\n", "(", "len", "(", "filenames", ")", ",", "len", "(", "challenge_synsets", ")", ",", "data_dir", ")", ")", "\n", "return", "filenames", ",", "synsets", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._find_human_readable_labels": [[556, 572], ["humans.append"], "function", ["None"], ["", "def", "_find_human_readable_labels", "(", "synsets", ",", "synset_to_human", ")", ":", "\n", "  ", "\"\"\"Build a list of human-readable labels.\n\n  Args:\n    synsets: list of strings; each string is a unique WordNet ID.\n    synset_to_human: dict of synset to human labels, e.g.,\n      'n02119022' --> 'red fox, Vulpes vulpes'\n\n  Returns:\n    List of human-readable strings corresponding to each synset.\n  \"\"\"", "\n", "humans", "=", "[", "]", "\n", "for", "s", "in", "synsets", ":", "\n", "    ", "assert", "s", "in", "synset_to_human", ",", "(", "'Failed to find: %s'", "%", "s", ")", "\n", "humans", ".", "append", "(", "synset_to_human", "[", "s", "]", ")", "\n", "", "return", "humans", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._find_image_bounding_boxes": [[574, 598], ["print", "os.path.basename", "bboxes.append", "bboxes.append", "len"], "function", ["None"], ["", "def", "_find_image_bounding_boxes", "(", "filenames", ",", "image_to_bboxes", ")", ":", "\n", "  ", "\"\"\"Find the bounding boxes for a given image file.\n\n  Args:\n    filenames: list of strings; each string is a path to an image file.\n    image_to_bboxes: dictionary mapping image file names to a list of\n      bounding boxes. This list contains 0+ bounding boxes.\n  Returns:\n    List of bounding boxes for each image. Note that each entry in this\n    list might contain from 0+ entries corresponding to the number of bounding\n    box annotations for the image.\n  \"\"\"", "\n", "num_image_bbox", "=", "0", "\n", "bboxes", "=", "[", "]", "\n", "for", "f", "in", "filenames", ":", "\n", "    ", "basename", "=", "os", ".", "path", ".", "basename", "(", "f", ")", "\n", "if", "basename", "in", "image_to_bboxes", ":", "\n", "      ", "bboxes", ".", "append", "(", "image_to_bboxes", "[", "basename", "]", ")", "\n", "num_image_bbox", "+=", "1", "\n", "", "else", ":", "\n", "      ", "bboxes", ".", "append", "(", "[", "]", ")", "\n", "", "", "print", "(", "'Found %d images with bboxes out of %d images'", "%", "(", "\n", "num_image_bbox", ",", "len", "(", "filenames", ")", ")", ")", "\n", "return", "bboxes", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._process_dataset": [[600, 618], ["build_imagenet_data._find_image_files", "build_imagenet_data._find_human_readable_labels", "build_imagenet_data._find_image_bounding_boxes", "build_imagenet_data._process_image_files"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._find_image_files", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._find_human_readable_labels", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._find_image_bounding_boxes", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._process_image_files"], ["", "def", "_process_dataset", "(", "name", ",", "directory", ",", "num_shards", ",", "synset_to_human", ",", "\n", "image_to_bboxes", ")", ":", "\n", "  ", "\"\"\"Process a complete data set and save it as a TFRecord.\n\n  Args:\n    name: string, unique identifier specifying the data set.\n    directory: string, root path to the data set.\n    num_shards: integer number of shards for this data set.\n    synset_to_human: dict of synset to human labels, e.g.,\n      'n02119022' --> 'red fox, Vulpes vulpes'\n    image_to_bboxes: dictionary mapping image file names to a list of\n      bounding boxes. This list contains 0+ bounding boxes.\n  \"\"\"", "\n", "filenames", ",", "synsets", ",", "labels", "=", "_find_image_files", "(", "directory", ",", "FLAGS", ".", "labels_file", ")", "\n", "humans", "=", "_find_human_readable_labels", "(", "synsets", ",", "synset_to_human", ")", "\n", "bboxes", "=", "_find_image_bounding_boxes", "(", "filenames", ",", "image_to_bboxes", ")", "\n", "_process_image_files", "(", "name", ",", "filenames", ",", "synsets", ",", "labels", ",", "\n", "humans", ",", "bboxes", ",", "num_shards", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._build_synset_lookup": [[620, 650], ["tensorflow.gfile.FastGFile().readlines", "tensorflow.gfile.FastGFile", "l.strip().split", "len", "l.strip"], "function", ["None"], ["", "def", "_build_synset_lookup", "(", "imagenet_metadata_file", ")", ":", "\n", "  ", "\"\"\"Build lookup for synset to human-readable label.\n\n  Args:\n    imagenet_metadata_file: string, path to file containing mapping from\n      synset to human-readable label.\n\n      Assumes each line of the file looks like:\n\n        n02119247    black fox\n        n02119359    silver fox\n        n02119477    red fox, Vulpes fulva\n\n      where each line corresponds to a unique mapping. Note that each line is\n      formatted as <synset>\\t<human readable label>.\n\n  Returns:\n    Dictionary of synset to human labels, such as:\n      'n02119022' --> 'red fox, Vulpes vulpes'\n  \"\"\"", "\n", "lines", "=", "tf", ".", "gfile", ".", "FastGFile", "(", "imagenet_metadata_file", ",", "'r'", ")", ".", "readlines", "(", ")", "\n", "synset_to_human", "=", "{", "}", "\n", "for", "l", "in", "lines", ":", "\n", "    ", "if", "l", ":", "\n", "      ", "parts", "=", "l", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "assert", "len", "(", "parts", ")", "==", "2", "\n", "synset", "=", "parts", "[", "0", "]", "\n", "human", "=", "parts", "[", "1", "]", "\n", "synset_to_human", "[", "synset", "]", "=", "human", "\n", "", "", "return", "synset_to_human", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._build_bounding_box_lookup": [[652, 698], ["tensorflow.gfile.FastGFile().readlines", "print", "tensorflow.gfile.FastGFile", "l.split", "float", "float", "float", "float", "images_to_bboxes[].append", "len"], "function", ["None"], ["", "def", "_build_bounding_box_lookup", "(", "bounding_box_file", ")", ":", "\n", "  ", "\"\"\"Build a lookup from image file to bounding boxes.\n\n  Args:\n    bounding_box_file: string, path to file with bounding boxes annotations.\n\n      Assumes each line of the file looks like:\n\n        n00007846_64193.JPEG,0.0060,0.2620,0.7545,0.9940\n\n      where each line corresponds to one bounding box annotation associated\n      with an image. Each line can be parsed as:\n\n        <JPEG file name>, <xmin>, <ymin>, <xmax>, <ymax>\n\n      Note that there might exist mulitple bounding box annotations associated\n      with an image file. This file is the output of process_bounding_boxes.py.\n\n  Returns:\n    Dictionary mapping image file names to a list of bounding boxes. This list\n    contains 0+ bounding boxes.\n  \"\"\"", "\n", "lines", "=", "tf", ".", "gfile", ".", "FastGFile", "(", "bounding_box_file", ",", "'r'", ")", ".", "readlines", "(", ")", "\n", "images_to_bboxes", "=", "{", "}", "\n", "num_bbox", "=", "0", "\n", "num_image", "=", "0", "\n", "for", "l", "in", "lines", ":", "\n", "    ", "if", "l", ":", "\n", "      ", "parts", "=", "l", ".", "split", "(", "','", ")", "\n", "assert", "len", "(", "parts", ")", "==", "5", ",", "(", "'Failed to parse: %s'", "%", "l", ")", "\n", "filename", "=", "parts", "[", "0", "]", "\n", "xmin", "=", "float", "(", "parts", "[", "1", "]", ")", "\n", "ymin", "=", "float", "(", "parts", "[", "2", "]", ")", "\n", "xmax", "=", "float", "(", "parts", "[", "3", "]", ")", "\n", "ymax", "=", "float", "(", "parts", "[", "4", "]", ")", "\n", "box", "=", "[", "xmin", ",", "ymin", ",", "xmax", ",", "ymax", "]", "\n", "\n", "if", "filename", "not", "in", "images_to_bboxes", ":", "\n", "        ", "images_to_bboxes", "[", "filename", "]", "=", "[", "]", "\n", "num_image", "+=", "1", "\n", "", "images_to_bboxes", "[", "filename", "]", ".", "append", "(", "box", ")", "\n", "num_bbox", "+=", "1", "\n", "\n", "", "", "print", "(", "'Successfully read %d bounding boxes '", "\n", "'across %d images.'", "%", "(", "num_bbox", ",", "num_image", ")", ")", "\n", "return", "images_to_bboxes", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data.main": [[700, 725], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "print", "build_imagenet_data._build_synset_lookup", "build_imagenet_data._build_bounding_box_lookup", "build_imagenet_data._process_dataset", "build_imagenet_data._process_dataset", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._build_synset_lookup", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._build_bounding_box_lookup", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._process_dataset", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.build_imagenet_data._process_dataset"], ["", "def", "main", "(", "unused_argv", ")", ":", "\n", "  ", "output_dir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "base_working_dir", ",", "FLAGS", ".", "output_directory", ")", "\n", "train_dir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "base_working_dir", ",", "FLAGS", ".", "train_directory", ")", "\n", "val_dir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "base_working_dir", ",", "FLAGS", ".", "validation_directory", ")", "\n", "bb_file", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "base_working_dir", ",", "FLAGS", ".", "bounding_box_file", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_dir", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "output_dir", ")", "\n", "\n", "", "assert", "not", "FLAGS", ".", "train_shards", "%", "FLAGS", ".", "num_threads", ",", "(", "\n", "'Please make the FLAGS.num_threads commensurate with FLAGS.train_shards'", ")", "\n", "assert", "not", "FLAGS", ".", "validation_shards", "%", "FLAGS", ".", "num_threads", ",", "(", "\n", "'Please make the FLAGS.num_threads commensurate with '", "\n", "'FLAGS.validation_shards'", ")", "\n", "print", "(", "'Saving results to %s'", "%", "output_dir", ")", "\n", "\n", "# Build a map from synset to human-readable label.", "\n", "synset_to_human", "=", "_build_synset_lookup", "(", "FLAGS", ".", "imagenet_metadata_file", ")", "\n", "image_to_bboxes", "=", "_build_bounding_box_lookup", "(", "bb_file", ")", "\n", "\n", "# Run it!", "\n", "_process_dataset", "(", "'validation'", ",", "val_dir", ",", "\n", "FLAGS", ".", "validation_shards", ",", "synset_to_human", ",", "image_to_bboxes", ")", "\n", "_process_dataset", "(", "'train'", ",", "train_dir", ",", "FLAGS", ".", "train_shards", ",", "\n", "synset_to_human", ",", "image_to_bboxes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetItem": [[100, 108], ["root.iter"], "function", ["None"], ["", "def", "GetItem", "(", "name", ",", "root", ",", "index", "=", "0", ")", ":", "\n", "  ", "count", "=", "0", "\n", "for", "item", "in", "root", ".", "iter", "(", "name", ")", ":", "\n", "    ", "if", "count", "==", "index", ":", "\n", "      ", "return", "item", ".", "text", "\n", "", "count", "+=", "1", "\n", "# Failed to find \"index\" occurrence of item.", "\n", "", "return", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetInt": [[110, 114], ["int", "float", "gen_train_bboxes.GetItem"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetItem"], ["", "def", "GetInt", "(", "name", ",", "root", ",", "index", "=", "0", ")", ":", "\n", "# In some XML annotation files, the point values are not integers, but floats.", "\n", "# So we add a float function to avoid ValueError.", "\n", "  ", "return", "int", "(", "float", "(", "GetItem", "(", "name", ",", "root", ",", "index", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.FindNumberBoundingBoxes": [[116, 123], ["gen_train_bboxes.GetInt"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetInt"], ["", "def", "FindNumberBoundingBoxes", "(", "root", ")", ":", "\n", "  ", "index", "=", "0", "\n", "while", "True", ":", "\n", "    ", "if", "GetInt", "(", "'xmin'", ",", "root", ",", "index", ")", "==", "-", "1", ":", "\n", "      ", "break", "\n", "", "index", "+=", "1", "\n", "", "return", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.ProcessXMLAnnotation": [[125, 175], ["ET.parse.getroot", "gen_train_bboxes.FindNumberBoundingBoxes", "range", "xml.parse", "gen_train_bboxes.BoundingBox", "gen_train_bboxes.GetInt", "gen_train_bboxes.GetInt", "gen_train_bboxes.GetInt", "gen_train_bboxes.GetInt", "gen_train_bboxes.GetInt", "gen_train_bboxes.GetInt", "gen_train_bboxes.GetItem", "min", "max", "min", "min", "min", "max", "min", "min", "boxes.append", "print", "gen_train_bboxes.GetItem", "float", "float", "float", "float", "float", "float", "float", "float", "max", "max", "max", "max"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.FindNumberBoundingBoxes", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetInt", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetInt", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetInt", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetInt", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetInt", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetInt", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetItem", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.imagenet_prep_scripts.gen_train_bboxes.GetItem"], ["", "def", "ProcessXMLAnnotation", "(", "xml_file", ")", ":", "\n", "  ", "\"\"\"Process a single XML file containing a bounding box.\"\"\"", "\n", "# pylint: disable=broad-except", "\n", "try", ":", "\n", "    ", "tree", "=", "ET", ".", "parse", "(", "xml_file", ")", "\n", "", "except", "Exception", ":", "\n", "    ", "print", "(", "'Failed to parse: '", "+", "xml_file", ",", "file", "=", "sys", ".", "stderr", ")", "\n", "return", "None", "\n", "# pylint: enable=broad-except", "\n", "", "root", "=", "tree", ".", "getroot", "(", ")", "\n", "\n", "num_boxes", "=", "FindNumberBoundingBoxes", "(", "root", ")", "\n", "boxes", "=", "[", "]", "\n", "\n", "for", "index", "in", "range", "(", "num_boxes", ")", ":", "\n", "    ", "box", "=", "BoundingBox", "(", ")", "\n", "# Grab the 'index' annotation.", "\n", "box", ".", "xmin", "=", "GetInt", "(", "'xmin'", ",", "root", ",", "index", ")", "\n", "box", ".", "ymin", "=", "GetInt", "(", "'ymin'", ",", "root", ",", "index", ")", "\n", "box", ".", "xmax", "=", "GetInt", "(", "'xmax'", ",", "root", ",", "index", ")", "\n", "box", ".", "ymax", "=", "GetInt", "(", "'ymax'", ",", "root", ",", "index", ")", "\n", "\n", "box", ".", "width", "=", "GetInt", "(", "'width'", ",", "root", ")", "\n", "box", ".", "height", "=", "GetInt", "(", "'height'", ",", "root", ")", "\n", "box", ".", "filename", "=", "GetItem", "(", "'filename'", ",", "root", ")", "+", "'.JPEG'", "\n", "box", ".", "label", "=", "GetItem", "(", "'name'", ",", "root", ")", "\n", "\n", "xmin", "=", "float", "(", "box", ".", "xmin", ")", "/", "float", "(", "box", ".", "width", ")", "\n", "xmax", "=", "float", "(", "box", ".", "xmax", ")", "/", "float", "(", "box", ".", "width", ")", "\n", "ymin", "=", "float", "(", "box", ".", "ymin", ")", "/", "float", "(", "box", ".", "height", ")", "\n", "ymax", "=", "float", "(", "box", ".", "ymax", ")", "/", "float", "(", "box", ".", "height", ")", "\n", "\n", "# Some images contain bounding box annotations that", "\n", "# extend outside of the supplied image. See, e.g.", "\n", "# n03127925/n03127925_147.xml", "\n", "# Additionally, for some bounding boxes, the min > max", "\n", "# or the box is entirely outside of the image.", "\n", "min_x", "=", "min", "(", "xmin", ",", "xmax", ")", "\n", "max_x", "=", "max", "(", "xmin", ",", "xmax", ")", "\n", "box", ".", "xmin_scaled", "=", "min", "(", "max", "(", "min_x", ",", "0.0", ")", ",", "1.0", ")", "\n", "box", ".", "xmax_scaled", "=", "min", "(", "max", "(", "max_x", ",", "0.0", ")", ",", "1.0", ")", "\n", "\n", "min_y", "=", "min", "(", "ymin", ",", "ymax", ")", "\n", "max_y", "=", "max", "(", "ymin", ",", "ymax", ")", "\n", "box", ".", "ymin_scaled", "=", "min", "(", "max", "(", "min_y", ",", "0.0", ")", ",", "1.0", ")", "\n", "box", ".", "ymax_scaled", "=", "min", "(", "max", "(", "max_y", ",", "0.0", ")", ",", "1.0", ")", "\n", "\n", "boxes", ".", "append", "(", "box", ")", "\n", "\n", "", "return", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model_hvc.make_tower": [[24, 93], ["tensorflow.name_scope", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_2x2", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_2x2", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_2x2", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "tensorflow.name_scope", "caps_input.get_shape().as_list", "cnn_helpers.make_caps_from_conv", "cnn_helpers.make_homogeneous_vector_caps", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_norm", "tensorflow.name_scope", "tensorflow.stop_gradient", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.reduce_mean", "caps_input.get_shape"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_2x2", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_2x2", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_2x2", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_caps_from_conv", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_homogeneous_vector_caps", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_norm"], ["from", "cnn_helpers", "import", "make_caps_from_conv", "\n", "from", "cnn_helpers", "import", "make_homogeneous_vector_caps", ",", "make_norm", "\n", "from", "cnn_helpers", "import", "merge_towers_and_optimize", "\n", "from", "inception_v3", ".", "lsr_loss", "import", "lsr_loss", "\n", "from", "inception_v3", ".", "batch_norm", "import", "batch_norm", "\n", "\n", "DECAY_RATE", "=", "0.00004", "\n", "\n", "\n", "def", "make_tower", "(", "x_in", ",", "y_out", ",", "is_training", ",", "count_classes", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "\"input_stem\"", ")", ":", "\n", "        ", "conv1", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv1\"", ",", "\n", "x_in", ",", "32", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn1", "=", "batch_norm", "(", "\"bn1\"", ",", "conv1", ",", "is_training", ")", "\n", "relu1", "=", "make_relu", "(", "\"relu1\"", ",", "bn1", ")", "\n", "\n", "conv2", "=", "make_conv_3x3_no_bias", "(", "\"conv2\"", ",", "\n", "relu1", ",", "32", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn2", "=", "batch_norm", "(", "\"bn2\"", ",", "conv2", ",", "is_training", ")", "\n", "relu2", "=", "make_relu", "(", "\"relu2\"", ",", "bn2", ")", "\n", "\n", "conv3", "=", "make_conv_3x3_no_bias", "(", "\"conv3\"", ",", "\n", "relu2", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn3", "=", "batch_norm", "(", "\"bn3\"", ",", "conv3", ",", "is_training", ")", "\n", "relu3", "=", "make_relu", "(", "\"relu3\"", ",", "bn3", ")", "\n", "pool3", "=", "make_max_pool_3x3", "(", "\"pool3\"", ",", "relu3", ")", "\n", "\n", "conv4", "=", "make_conv_1x1_no_bias", "(", "\"conv4\"", ",", "\n", "pool3", ",", "80", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn4", "=", "batch_norm", "(", "\"bn4\"", ",", "conv4", ",", "is_training", ")", "\n", "relu4", "=", "make_relu", "(", "\"relu4\"", ",", "bn4", ")", "\n", "\n", "conv5", "=", "make_conv_3x3_no_bias", "(", "\"conv5\"", ",", "\n", "relu4", ",", "192", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn5", "=", "batch_norm", "(", "\"bn5\"", ",", "conv5", ",", "is_training", ")", "\n", "relu5", "=", "make_relu", "(", "\"relu5\"", ",", "bn5", ")", "\n", "pool5", "=", "make_max_pool_3x3", "(", "\"pool5\"", ",", "relu5", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x256a\"", ")", ":", "\n", "        ", "intnsr", "=", "pool5", "\n", "\n", "# branch1x1", "\n", "conv6", "=", "make_conv_1x1_no_bias", "(", "\"conv6\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn6", "=", "batch_norm", "(", "\"bn6\"", ",", "conv6", ",", "is_training", ")", "\n", "relu6", "=", "make_relu", "(", "\"relu6\"", ",", "bn6", ")", "\n", "\n", "# branch5x5", "\n", "conv7", "=", "make_conv_1x1_no_bias", "(", "\"conv7\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn7", "=", "batch_norm", "(", "\"bn7\"", ",", "conv7", ",", "is_training", ")", "\n", "relu7", "=", "make_relu", "(", "\"relu7\"", ",", "bn7", ")", "\n", "conv8", "=", "make_conv_5x5_no_bias", "(", "\"conv8\"", ",", "\n", "relu7", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn8", "=", "batch_norm", "(", "\"bn8\"", ",", "conv8", ",", "is_training", ")", "\n", "relu8", "=", "make_relu", "(", "\"relu8\"", ",", "bn8", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv9", "=", "make_conv_1x1_no_bias", "(", "\"conv9\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn9", "=", "batch_norm", "(", "\"bn9\"", ",", "conv9", ",", "is_training", ")", "\n", "relu9", "=", "make_relu", "(", "\"relu9\"", ",", "bn9", ")", "\n", "conv10", "=", "make_conv_3x3_no_bias", "(", "\"conv10\"", ",", "\n", "relu9", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn10", "=", "batch_norm", "(", "\"bn10\"", ",", "conv10", ",", "is_training", ")", "\n", "relu10", "=", "make_relu", "(", "\"relu10\"", ",", "bn10", ")", "\n", "conv11", "=", "make_conv_3x3_no_bias", "(", "\"conv11\"", ",", "\n", "relu10", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn11", "=", "batch_norm", "(", "\"bn11\"", ",", "conv11", ",", "is_training", ")", "\n", "relu11", "=", "make_relu", "(", "\"relu11\"", ",", "bn11", ")", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model_hvc.run_towers": [[95, 119], ["range", "cnn_helpers.merge_towers_and_optimize", "tensorflow.device", "tensorflow.name_scope", "tensorflow.cond", "tensorflow.device", "logits_list.append", "loss_list.append", "labels_list.append", "grads.append", "tensorflow.name_scope", "model_hvc.make_tower", "optimizer.compute_gradients"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.merge_towers_and_optimize", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.make_tower"], ["# branch_pool", "\n", "pool12", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool12\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv12", "=", "make_conv_1x1_no_bias", "(", "\"conv12\"", ",", "\n", "pool12", ",", "32", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn12", "=", "batch_norm", "(", "\"bn12\"", ",", "conv12", ",", "is_training", ")", "\n", "relu12", "=", "make_relu", "(", "\"relu12\"", ",", "bn12", ")", "\n", "\n", "cc1", "=", "make_concat", "(", "\"cc1\"", ",", "3", ",", "[", "relu6", ",", "relu8", ",", "relu11", ",", "relu12", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x288a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc1", "\n", "\n", "# branch1x1", "\n", "conv13", "=", "make_conv_1x1_no_bias", "(", "\"conv13\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn13", "=", "batch_norm", "(", "\"bn13\"", ",", "conv13", ",", "is_training", ")", "\n", "relu13", "=", "make_relu", "(", "\"relu13\"", ",", "bn13", ")", "\n", "\n", "# branch5x5", "\n", "conv14", "=", "make_conv_1x1_no_bias", "(", "\"conv14\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn14", "=", "batch_norm", "(", "\"bn14\"", ",", "conv14", ",", "is_training", ")", "\n", "relu14", "=", "make_relu", "(", "\"relu14\"", ",", "bn14", ")", "\n", "conv15", "=", "make_conv_5x5_no_bias", "(", "\"conv15\"", ",", "\n", "relu14", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.__init__": [[26, 54], ["os.path.join", "os.path.join", "os.path.join", "output.Output.open_csv", "csv.DictWriter", "output.Output.test_csv_writer.writeheader", "output.Output.test_csv.flush", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.open_csv"], ["def", "__init__", "(", "self", ",", "log_dir", ",", "run_name", ",", "\n", "profile_compute_time_every_n_steps", "=", "None", ",", "\n", "save_summary_info_every_n_steps", "=", "None", ")", ":", "\n", "        ", "self", ".", "run_name", "=", "run_name", "\n", "self", ".", "pctens", "=", "profile_compute_time_every_n_steps", "\n", "self", ".", "ssiens", "=", "save_summary_info_every_n_steps", "\n", "self", ".", "log_dir", "=", "log_dir", "\n", "model_file_base", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "run_name", ")", "\n", "self", ".", "model_file_base", "=", "os", ".", "path", ".", "join", "(", "model_file_base", ",", "\"weights\"", ")", "\n", "test_csv_filename", "=", "\"{}_test_log.csv\"", ".", "format", "(", "run_name", ")", "\n", "test_csv_filename", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "test_csv_filename", ")", "\n", "nbl_test_csv_filename", "=", "\"{}_nbl_test_log.csv\"", ".", "format", "(", "run_name", ")", "\n", "nbl_test_csv_filename", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "nbl_test_csv_filename", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "log_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "log_dir", ")", "\n", "\n", "", "self", ".", "test_csv", "=", "self", ".", "open_csv", "(", "test_csv_filename", ")", "\n", "self", ".", "nbl_test_csv", "=", "self", ".", "open_csv", "(", "nbl_test_csv_filename", ")", "\n", "self", ".", "test_csv_writer", "=", "csv", ".", "DictWriter", "(", "self", ".", "test_csv", ",", "\n", "fieldnames", "=", "self", ".", "CSV_FIELDS", ")", "\n", "self", ".", "nbl_test_csv_writer", "=", "csv", ".", "DictWriter", "(", "self", ".", "nbl_test_csv", ",", "\n", "fieldnames", "=", "self", ".", "CSV_FIELDS", ")", "\n", "self", ".", "test_csv_writer", ".", "writeheader", "(", ")", "\n", "self", ".", "nbl_test_csv_writer", ".", "writeheader", "(", ")", "\n", "self", ".", "test_csv", ".", "flush", "(", ")", "\n", "self", ".", "nbl_test_csv", ".", "flush", "(", ")", "\n", "self", ".", "tb_writer", "=", "None", "\n", "self", ".", "tb_writer_nbl", "=", "None", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_begin": [[55, 61], ["tensorflow.RunOptions", "tensorflow.RunMetadata"], "methods", ["None"], ["self", ".", "tf_saver_best_top1", "=", "None", "\n", "self", ".", "tf_saver_best_top5", "=", "None", "\n", "self", ".", "tf_saver_best_nbl_top1", "=", "None", "\n", "self", ".", "tf_saver_best_nbl_top5", "=", "None", "\n", "self", ".", "tf_saver_latest", "=", "None", "\n", "self", ".", "run_options", "=", "None", "\n", "self", ".", "run_metadata", "=", "None", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_step_end": [[62, 70], ["output.Output.log_metrics", "output.Output.log_run_metadata", "output.Output.log_summaries", "output.Output.tb_writer.flush"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_metrics", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_run_metadata", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_summaries"], ["self", ".", "best_top1_accuracy", "=", "0", "\n", "self", ".", "best_top5_accuracy", "=", "0", "\n", "self", ".", "best_nbl_top1_accuracy", "=", "0", "\n", "self", ".", "best_nbl_top5_accuracy", "=", "0", "\n", "\n", "", "def", "train_step_begin", "(", "self", ",", "step", ")", ":", "\n", "        ", "if", "self", ".", "pctens", "is", "not", "None", "and", "step", "%", "self", ".", "pctens", "==", "0", ":", "\n", "            ", "self", ".", "run_options", "=", "tf", ".", "RunOptions", "(", "\n", "report_tensor_allocations_upon_oom", "=", "True", ",", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.train_end": [[71, 73], ["output.Output.save_model_latest"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.save_model_latest"], ["trace_level", "=", "tf", ".", "RunOptions", ".", "FULL_TRACE", ")", "\n", "self", ".", "run_metadata", "=", "tf", ".", "RunMetadata", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_step_begin": [[74, 77], ["output.Output.log_msg"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg"], ["", "", "def", "train_step_end", "(", "self", ",", "session", ",", "epoch", ",", "global_step", ",", "\n", "step", ",", "loss", ",", "lr", ",", "number_of_training_steps", ",", "feed_dict", ")", ":", "\n", "        ", "self", ".", "log_metrics", "(", "epoch", "=", "epoch", ",", "loss", "=", "loss", ",", "lr", "=", "lr", ",", "step", "=", "step", ",", "\n", "steps_per_epoch", "=", "number_of_training_steps", ",", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.validation_end": [[78, 91], ["output.Output.log_metrics", "output.Output.tb_writer.flush", "output.Output.save_model_best_top1", "output.Output.save_model_best_top5"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_metrics", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.save_model_best_top1", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.save_model_best_top5"], ["is_test", "=", "False", ",", "validate_nbl", "=", "False", ")", "\n", "self", ".", "log_run_metadata", "(", "global_step", ",", "step", ")", "\n", "self", ".", "log_summaries", "(", "session", ",", "global_step", ",", "step", ",", "feed_dict", ")", "\n", "self", ".", "tb_writer", ".", "flush", "(", ")", "\n", "\n", "", "def", "train_end", "(", "self", ",", "session", ",", "epoch", ",", "global_step", ")", ":", "\n", "        ", "self", ".", "save_model_latest", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "\n", "", "def", "validation_step_begin", "(", "self", ",", "step", ",", "number_of_validation_steps", ")", ":", "\n", "        ", "self", ".", "log_msg", "(", "\"Validating (step {}/{})...\"", ".", "\n", "format", "(", "step", "+", "1", ",", "number_of_validation_steps", ")", ",", "True", ")", "\n", "\n", "", "def", "validation_end", "(", "self", ",", "session", ",", "epoch", ",", "global_step", ",", "validate_nbl", ",", "\n", "test_loss", ",", "lr", ",", "top1_accuracy", ",", "top5_accuracy", ")", ":", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_metrics": [[92, 133], ["tensorflow.Summary", "tensorflow.Summary.value.add", "dict", "output.Output.log_msg", "tensorflow.Summary.value.add", "tensorflow.Summary.value.add", "output.Output.tb_writer.add_summary", "output.Output.log_msg", "output.Output.test_csv_writer.writerow", "output.Output.test_csv.flush", "output.Output.tb_writer.add_summary", "output.Output.log_msg", "output.Output.log_msg", "output.Output.log_msg", "datetime.datetime.datetime.now().strftime", "datetime.datetime.datetime.now().strftime", "datetime.datetime.datetime.now", "datetime.datetime.datetime.now"], "methods", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg"], ["        ", "self", ".", "log_metrics", "(", "epoch", "=", "epoch", ",", "loss", "=", "test_loss", ",", "lr", "=", "lr", ",", "\n", "top1_accuracy", "=", "top1_accuracy", ",", "\n", "top5_accuracy", "=", "top5_accuracy", ",", "\n", "is_test", "=", "True", ",", "validate_nbl", "=", "validate_nbl", ")", "\n", "self", ".", "tb_writer", ".", "flush", "(", ")", "\n", "self", ".", "tb_writer_nbl", ".", "flush", "(", ")", "\n", "if", "validate_nbl", ":", "\n", "            ", "if", "top1_accuracy", ">=", "self", ".", "best_nbl_top1_accuracy", ":", "\n", "                ", "self", ".", "best_nbl_top1_accuracy", "=", "top1_accuracy", "\n", "self", ".", "save_model_nbl_best_top1", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "", "if", "top5_accuracy", ">=", "self", ".", "best_nbl_top5_accuracy", ":", "\n", "                ", "self", ".", "best_nbl_top5_accuracy", "=", "top5_accuracy", "\n", "self", ".", "save_model_nbl_best_top5", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "top1_accuracy", ">=", "self", ".", "best_top1_accuracy", ":", "\n", "                ", "self", ".", "best_top1_accuracy", "=", "top1_accuracy", "\n", "self", ".", "save_model_best_top1", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "", "if", "top5_accuracy", ">=", "self", ".", "best_top5_accuracy", ":", "\n", "                ", "self", ".", "best_top5_accuracy", "=", "top5_accuracy", "\n", "self", ".", "save_model_best_top5", "(", "session", ",", "epoch", ",", "global_step", ")", "\n", "\n", "", "", "", "def", "log_metrics", "(", "self", ",", "epoch", ",", "loss", ",", "lr", ",", "step", "=", "0", ",", "\n", "steps_per_epoch", "=", "0", ",", "is_test", "=", "False", ",", "validate_nbl", "=", "False", ",", "\n", "top1_accuracy", "=", "None", ",", "top5_accuracy", "=", "None", ")", ":", "\n", "        ", "prefix", "=", "\"Test\"", "if", "is_test", "else", "\"Train\"", "\n", "summary", "=", "tf", ".", "Summary", "(", ")", "\n", "s_loss", "=", "summary", ".", "value", ".", "add", "(", ")", "\n", "s_loss", ".", "tag", "=", "\"{}/Loss\"", ".", "format", "(", "prefix", ")", "\n", "s_loss", ".", "simple_value", "=", "loss", "\n", "if", "is_test", ":", "\n", "            ", "s_accuracy1", "=", "summary", ".", "value", ".", "add", "(", ")", "\n", "s_accuracy1", ".", "tag", "=", "\"{}/Top-1 Accuracy\"", ".", "format", "(", "prefix", ")", "\n", "s_accuracy1", ".", "simple_value", "=", "top1_accuracy", "\n", "s_accuracy5", "=", "summary", ".", "value", ".", "add", "(", ")", "\n", "s_accuracy5", ".", "tag", "=", "\"{}/Top-5 Accuracy\"", ".", "format", "(", "prefix", ")", "\n", "s_accuracy5", ".", "simple_value", "=", "top5_accuracy", "\n", "\n", "", "step_number", "=", "(", "epoch", "-", "1", ")", "*", "steps_per_epoch", "+", "step", "\n", "\n", "row_dict", "=", "dict", "(", "{", "\n", "\"Date\"", ":", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y%m%d\"", ")", ",", "\n", "\"Time\"", ":", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%H:%M:%S.%f\"", ")", "[", ":", "-", "3", "]", ",", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_run_metadata": [[134, 138], ["output.Output.tb_writer.add_run_metadata"], "methods", ["None"], ["\"Epoch\"", ":", "epoch", ",", "\n", "\"Top-1 Accuracy\"", ":", "top1_accuracy", ",", "\n", "\"Top-5 Accuracy\"", ":", "top5_accuracy", ",", "\n", "\"Loss\"", ":", "loss", ",", "\n", "\"LR\"", ":", "lr", "}", ")", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_summaries": [[139, 144], ["tensorflow.summary.merge_all", "session.run", "output.Output.tb_writer.add_summary"], "methods", ["None"], ["\n", "if", "is_test", ":", "\n", "            ", "if", "validate_nbl", ":", "\n", "                ", "self", ".", "tb_writer_nbl", ".", "add_summary", "(", "summary", ",", "epoch", ")", "\n", "self", ".", "log_msg", "(", "\"[TEST-NBL] - Epoch {}\"", ".", "format", "(", "epoch", ")", ")", "\n", "self", ".", "nbl_test_csv_writer", ".", "writerow", "(", "row_dict", ")", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.save_model_best_top1": [[145, 149], ["output.Output.tf_saver_best_top1.save"], "methods", ["None"], ["self", ".", "nbl_test_csv", ".", "flush", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "tb_writer", ".", "add_summary", "(", "summary", ",", "epoch", ")", "\n", "self", ".", "log_msg", "(", "\"[TEST] - Epoch {}\"", ".", "format", "(", "epoch", ")", ")", "\n", "self", ".", "test_csv_writer", ".", "writerow", "(", "row_dict", ")", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.save_model_best_top5": [[150, 154], ["output.Output.tf_saver_best_top5.save"], "methods", ["None"], ["self", ".", "test_csv", ".", "flush", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "tb_writer", ".", "add_summary", "(", "summary", ",", "step_number", ")", "\n", "self", ".", "log_msg", "(", "\"[TRAIN] - Epoch {}, Step {}\"", ".", "format", "(", "epoch", ",", "step", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.save_model_latest": [[155, 159], ["output.Output.tf_saver_latest.save"], "methods", ["None"], ["", "self", ".", "log_msg", "(", "\"loss: {}\"", ".", "format", "(", "loss", ")", ",", "False", ")", "\n", "if", "top1_accuracy", "is", "not", "None", ":", "\n", "            ", "self", ".", "log_msg", "(", "\"top1: {}\"", ".", "format", "(", "top1_accuracy", ")", ",", "False", ")", "\n", "", "if", "top5_accuracy", "is", "not", "None", ":", "\n", "            ", "self", ".", "log_msg", "(", "\"top5: {}\"", ".", "format", "(", "top5_accuracy", ")", ",", "False", ")", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.set_session_graph": [[160, 166], ["tensorflow.summary.FileWriter", "tensorflow.train.Saver", "tensorflow.train.Saver", "tensorflow.train.Saver", "os.path.join"], "methods", ["None"], ["\n", "", "", "def", "log_run_metadata", "(", "self", ",", "global_step", ",", "step", ")", ":", "\n", "        ", "if", "self", ".", "run_metadata", "is", "not", "None", "and", "step", "%", "self", ".", "pctens", "==", "0", ":", "\n", "            ", "self", ".", "tb_writer", ".", "add_run_metadata", "(", "self", ".", "run_metadata", ",", "\n", "\"step{}\"", ".", "format", "(", "global_step", ")", ")", "\n", "\n", "", "", "def", "log_summaries", "(", "self", ",", "session", ",", "global_step", ",", "step", ",", "feed_dict", ")", ":", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.close_files": [[167, 170], ["output.Output.test_csv.close", "output.Output.tb_writer.close"], "methods", ["None"], ["        ", "if", "self", ".", "ssiens", "is", "not", "None", "and", "step", "%", "self", ".", "ssiens", "==", "0", ":", "\n", "            ", "summary_op", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "summary_str", "=", "session", ".", "run", "(", "summary_op", ",", "feed_dict", "=", "feed_dict", ")", "\n", "self", ".", "tb_writer", ".", "add_summary", "(", "summary_str", ",", "global_step", ")", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_options": [[171, 173], ["None"], "methods", ["None"], ["\n", "", "", "def", "save_model_best_top1", "(", "self", ",", "session", ",", "epoch", ",", "g_step", ")", ":", "\n", "        ", "self", ".", "tf_saver_best_top1", ".", "save", "(", "session", ",", "\"{}-{}-best_top1\"", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.get_run_metadata": [[174, 176], ["None"], "methods", ["None"], [".", "format", "(", "self", ".", "model_file_base", ",", "epoch", ")", ",", "\n", "global_step", "=", "g_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.open_csv": [[177, 182], ["os.path.exists", "open", "open"], "methods", ["None"], ["", "def", "save_model_best_top5", "(", "self", ",", "session", ",", "epoch", ",", "g_step", ")", ":", "\n", "        ", "self", ".", "tf_saver_best_top5", ".", "save", "(", "session", ",", "\"{}-{}-best_top5\"", "\n", ".", "format", "(", "self", ".", "model_file_base", ",", "epoch", ")", ",", "\n", "global_step", "=", "g_step", ")", "\n", "\n", "", "def", "save_model_nbl_best_top1", "(", "self", ",", "session", ",", "epoch", ",", "g_step", ")", ":", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.output.Output.log_msg": [[183, 189], ["print", "datetime.datetime.datetime.now().strftime", "datetime.datetime.datetime.now"], "methods", ["None"], ["        ", "self", ".", "tf_saver_best_nbl_top1", ".", "save", "(", "session", ",", "\"{}-{}-nbl_best_top1\"", "\n", ".", "format", "(", "self", ".", "model_file_base", ",", "epoch", ")", ",", "\n", "global_step", "=", "g_step", ")", "\n", "\n", "", "def", "save_model_nbl_best_top5", "(", "self", ",", "session", ",", "epoch", ",", "g_step", ")", ":", "\n", "        ", "self", ".", "tf_saver_best_nbl_top5", ".", "save", "(", "session", ",", "\"{}-{}-nbl_best_top5\"", "\n", ".", "format", "(", "self", ".", "model_file_base", ",", "epoch", ")", ",", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.make_tower": [[23, 89], ["tensorflow.name_scope", "cnn_helpers.make_conv_3x3_stride_2_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_2x2", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_2x2", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_max_pool_2x2", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "cnn_helpers.make_conv_3x3_no_bias", "cnn_helpers.make_batch_norm", "cnn_helpers.make_relu", "tensorflow.name_scope", "cnn_helpers.make_flatten", "tensorflow.cond", "cnn_helpers.make_dropout", "cnn_helpers.make_fc", "tensorflow.name_scope", "tensorflow.stop_gradient", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.reduce_mean", "tensorflow.constant", "tensorflow.constant"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_stride_2_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_2x2", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_2x2", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_max_pool_2x2", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_conv_3x3_no_bias", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_batch_norm", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_relu", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_flatten", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_dropout", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.make_fc"], ["from", "cnn_helpers", "import", "make_avg_pool", ",", "make_relu", ",", "make_concat", "\n", "from", "cnn_helpers", "import", "make_flatten", ",", "make_fc", ",", "make_dropout", "\n", "from", "cnn_helpers", "import", "merge_towers_and_optimize", "\n", "from", "inception_v3", ".", "lsr_loss", "import", "lsr_loss", "\n", "from", "inception_v3", ".", "batch_norm", "import", "batch_norm", "\n", "\n", "DECAY_RATE", "=", "0.00004", "\n", "\n", "\n", "def", "make_tower", "(", "x_in", ",", "y_out", ",", "is_training", ",", "count_classes", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "\"input_stem\"", ")", ":", "\n", "        ", "conv1", "=", "make_conv_3x3_stride_2_no_bias", "(", "\"conv1\"", ",", "\n", "x_in", ",", "32", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn1", "=", "batch_norm", "(", "\"bn1\"", ",", "conv1", ",", "is_training", ")", "\n", "relu1", "=", "make_relu", "(", "\"relu1\"", ",", "bn1", ")", "\n", "\n", "conv2", "=", "make_conv_3x3_no_bias", "(", "\"conv2\"", ",", "\n", "relu1", ",", "32", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn2", "=", "batch_norm", "(", "\"bn2\"", ",", "conv2", ",", "is_training", ")", "\n", "relu2", "=", "make_relu", "(", "\"relu2\"", ",", "bn2", ")", "\n", "\n", "conv3", "=", "make_conv_3x3_no_bias", "(", "\"conv3\"", ",", "\n", "relu2", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn3", "=", "batch_norm", "(", "\"bn3\"", ",", "conv3", ",", "is_training", ")", "\n", "relu3", "=", "make_relu", "(", "\"relu3\"", ",", "bn3", ")", "\n", "pool3", "=", "make_max_pool_3x3", "(", "\"pool3\"", ",", "relu3", ")", "\n", "\n", "conv4", "=", "make_conv_1x1_no_bias", "(", "\"conv4\"", ",", "\n", "pool3", ",", "80", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn4", "=", "batch_norm", "(", "\"bn4\"", ",", "conv4", ",", "is_training", ")", "\n", "relu4", "=", "make_relu", "(", "\"relu4\"", ",", "bn4", ")", "\n", "\n", "conv5", "=", "make_conv_3x3_no_bias", "(", "\"conv5\"", ",", "\n", "relu4", ",", "192", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn5", "=", "batch_norm", "(", "\"bn5\"", ",", "conv5", ",", "is_training", ")", "\n", "relu5", "=", "make_relu", "(", "\"relu5\"", ",", "bn5", ")", "\n", "pool5", "=", "make_max_pool_3x3", "(", "\"pool5\"", ",", "relu5", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x256a\"", ")", ":", "\n", "        ", "intnsr", "=", "pool5", "\n", "\n", "# branch1x1", "\n", "conv6", "=", "make_conv_1x1_no_bias", "(", "\"conv6\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn6", "=", "batch_norm", "(", "\"bn6\"", ",", "conv6", ",", "is_training", ")", "\n", "relu6", "=", "make_relu", "(", "\"relu6\"", ",", "bn6", ")", "\n", "\n", "# branch5x5", "\n", "conv7", "=", "make_conv_1x1_no_bias", "(", "\"conv7\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn7", "=", "batch_norm", "(", "\"bn7\"", ",", "conv7", ",", "is_training", ")", "\n", "relu7", "=", "make_relu", "(", "\"relu7\"", ",", "bn7", ")", "\n", "conv8", "=", "make_conv_5x5_no_bias", "(", "\"conv8\"", ",", "\n", "relu7", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn8", "=", "batch_norm", "(", "\"bn8\"", ",", "conv8", ",", "is_training", ")", "\n", "relu8", "=", "make_relu", "(", "\"relu8\"", ",", "bn8", ")", "\n", "\n", "# branch3x3dbl", "\n", "conv9", "=", "make_conv_1x1_no_bias", "(", "\"conv9\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn9", "=", "batch_norm", "(", "\"bn9\"", ",", "conv9", ",", "is_training", ")", "\n", "relu9", "=", "make_relu", "(", "\"relu9\"", ",", "bn9", ")", "\n", "conv10", "=", "make_conv_3x3_no_bias", "(", "\"conv10\"", ",", "\n", "relu9", ",", "96", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn10", "=", "batch_norm", "(", "\"bn10\"", ",", "conv10", ",", "is_training", ")", "\n", "relu10", "=", "make_relu", "(", "\"relu10\"", ",", "bn10", ")", "\n", "conv11", "=", "make_conv_3x3_no_bias", "(", "\"conv11\"", ",", "\n"]], "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.run_towers": [[91, 115], ["range", "cnn_helpers.merge_towers_and_optimize", "tensorflow.device", "tensorflow.name_scope", "tensorflow.cond", "tensorflow.device", "logits_list.append", "loss_list.append", "labels_list.append", "grads.append", "tensorflow.name_scope", "model.make_tower", "optimizer.compute_gradients"], "function", ["home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.None.cnn_helpers.merge_towers_and_optimize", "home.repos.pwc.inspect_result.AdamByerly_HVCsEnableAGD.simple.model.make_tower"], ["bn11", "=", "batch_norm", "(", "\"bn11\"", ",", "conv11", ",", "is_training", ")", "\n", "relu11", "=", "make_relu", "(", "\"relu11\"", ",", "bn11", ")", "\n", "\n", "# branch_pool", "\n", "pool12", "=", "make_avg_pool_3x3_stride_1", "(", "\"pool12\"", ",", "intnsr", ",", "padding", "=", "\"SAME\"", ")", "\n", "conv12", "=", "make_conv_1x1_no_bias", "(", "\"conv12\"", ",", "\n", "pool12", ",", "32", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn12", "=", "batch_norm", "(", "\"bn12\"", ",", "conv12", ",", "is_training", ")", "\n", "relu12", "=", "make_relu", "(", "\"relu12\"", ",", "bn12", ")", "\n", "\n", "cc1", "=", "make_concat", "(", "\"cc1\"", ",", "3", ",", "[", "relu6", ",", "relu8", ",", "relu11", ",", "relu12", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"mixed_35x35x288a\"", ")", ":", "\n", "        ", "intnsr", "=", "cc1", "\n", "\n", "# branch1x1", "\n", "conv13", "=", "make_conv_1x1_no_bias", "(", "\"conv13\"", ",", "\n", "intnsr", ",", "64", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn13", "=", "batch_norm", "(", "\"bn13\"", ",", "conv13", ",", "is_training", ")", "\n", "relu13", "=", "make_relu", "(", "\"relu13\"", ",", "bn13", ")", "\n", "\n", "# branch5x5", "\n", "conv14", "=", "make_conv_1x1_no_bias", "(", "\"conv14\"", ",", "\n", "intnsr", ",", "48", ",", "padding", "=", "\"SAME\"", ",", "weight_decay", "=", "DECAY_RATE", ")", "\n", "bn14", "=", "batch_norm", "(", "\"bn14\"", ",", "conv14", ",", "is_training", ")", "\n"]]}