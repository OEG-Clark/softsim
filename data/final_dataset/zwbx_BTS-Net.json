{"home.repos.pwc.inspect_result.zwbx_BTS-Net.None.options.save_path": [[6, 27], ["os.path.exists", "os.path.exists", "os.listdir", "os.path.exists", "os.mkdir", "time.strftime", "time.strftime", "shutil.rmtree", "time.strftime", "time.strftime", "time.strftime", "time.strftime"], "function", ["None"], ["def", "save_path", "(", ")", ":", "\n", "    ", "run", "=", "0", "\n", "save_folder", "=", "\"./results/demo-%s-%s-%d\"", "%", "(", "time", ".", "strftime", "(", "\"%m\"", ")", ",", "time", ".", "strftime", "(", "\"%d\"", ")", ",", "run", ")", "\n", "while", "os", ".", "path", ".", "exists", "(", "save_folder", ")", ":", "\n", "        ", "run", "+=", "1", "\n", "save_folder", "=", "\"./results/demo-%s-%s-%d\"", "%", "(", "time", ".", "strftime", "(", "\"%m\"", ")", ",", "time", ".", "strftime", "(", "\"%d\"", ")", ",", "run", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "save_folder", ")", ":", "\n", "        ", "is_exist_pth", "=", "0", "\n", "for", "i", "in", "os", ".", "listdir", "(", "save_folder", ")", ":", "\n", "            ", "if", "'pth'", "in", "i", ":", "\n", "                ", "is_exist_pth", "=", "1", "\n", "", "", "save_folder", "=", "\"./results/demo-%s-%s-%d\"", "%", "(", "time", ".", "strftime", "(", "\"%m\"", ")", ",", "time", ".", "strftime", "(", "\"%d\"", ")", ",", "run", ")", "\n", "if", "is_exist_pth", "==", "0", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "save_folder", ")", "\n", "\n", "", "", "if", "not", "os", ".", "path", ".", "exists", "(", "save_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "save_folder", ")", "\n", "\n", "\n", "", "return", "save_folder", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.train.train": [[19, 86], ["model.train", "enumerate", "logging.info", "writer.add_scalar", "optimizer.zero_grad", "images.cuda.cuda", "gts.cuda.cuda", "depths.cuda.cuda", "model", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "loss.backward", "utils.clip_gradient", "optimizer.step", "torch.save", "torch.save", "torch.save", "torch.save", "print", "torch.save", "torch.save", "torch.save", "torch.save", "print", "print", "logging.info", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "s[].clone", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu().numpy().squeeze", "writer.add_image", "torchvision.utils.make_grid", "s_r[].clone", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu().numpy().squeeze", "writer.add_image", "torchvision.utils.make_grid", "s_d[].clone", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu().numpy().squeeze", "writer.add_image", "torchvision.utils.make_grid", "writer.add_image", "torchvision.utils.make_grid", "writer.add_image", "torchvision.utils.make_grid", "writer.add_image", "model.state_dict", "os.path.exists", "os.makedirs", "model.state_dict", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "datetime.datetime.now", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu().numpy", "res.sigmoid().data.cpu().numpy().squeeze.min", "gts[].clone().cpu", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu().numpy", "res.sigmoid().data.cpu().numpy().squeeze.min", "gts[].clone().cpu", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu().numpy", "res.sigmoid().data.cpu().numpy().squeeze.min", "gts[].clone().cpu", "images[].clone().cpu", "depths[].clone().cpu", "res.sigmoid().data.cpu().numpy().squeeze.max", "res.sigmoid().data.cpu().numpy().squeeze.min", "res.sigmoid().data.cpu().numpy().squeeze.max", "res.sigmoid().data.cpu().numpy().squeeze.min", "res.sigmoid().data.cpu().numpy().squeeze.max", "res.sigmoid().data.cpu().numpy().squeeze.min", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu", "gts[].clone", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu", "gts[].clone", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid().data.cpu", "gts[].clone", "images[].clone", "depths[].clone", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid", "res.sigmoid().data.cpu().numpy().squeeze.sigmoid"], "function", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.None.train.train", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.utils.clip_gradient"], ["def", "train", "(", "train_loader", ",", "model", ",", "optimizer", ",", "epoch", ",", "save_path", ")", ":", "\n", "\n", "    ", "global", "step", "\n", "model", ".", "train", "(", ")", "\n", "loss_all", "=", "0", "\n", "epoch_step", "=", "0", "\n", "try", ":", "\n", "        ", "for", "i", ",", "(", "images", ",", "gts", ",", "depths", ")", "in", "enumerate", "(", "train_loader", ",", "start", "=", "1", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "images", "=", "images", ".", "cuda", "(", ")", "\n", "gts", "=", "gts", ".", "cuda", "(", ")", "\n", "depths", "=", "depths", ".", "cuda", "(", ")", "\n", "\n", "s", ",", "s_r", ",", "s_d", "=", "model", "(", "images", ",", "depths", ")", "\n", "loss1", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "s", ",", "gts", ")", "\n", "loss2", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "s_r", ",", "gts", ")", "\n", "loss3", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "s_d", ",", "gts", ")", "\n", "loss", "=", "loss1", "+", "loss2", "/", "2", "+", "loss3", "/", "2", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "clip_gradient", "(", "optimizer", ",", "opt", ".", "clip", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "step", "+=", "1", "\n", "epoch_step", "+=", "1", "\n", "loss_all", "+=", "loss", ".", "data", "\n", "if", "i", "%", "100", "==", "0", "or", "i", "==", "total_step", "or", "i", "==", "1", ":", "\n", "                ", "print", "(", "'{} Epoch [{:03d}/{:03d}], Step [{:04d}/{:04d}], Loss1: {:.4f} '", ".", "\n", "format", "(", "datetime", ".", "now", "(", ")", ",", "epoch", ",", "opt", ".", "epoch", ",", "i", ",", "total_step", ",", "loss1", ".", "data", ")", ")", "\n", "logging", ".", "info", "(", "'#TRAIN#:Epoch [{:03d}/{:03d}], Step [{:04d}/{:04d}], Loss1: {:.4f} '", ".", "\n", "format", "(", "epoch", ",", "opt", ".", "epoch", ",", "i", ",", "total_step", ",", "loss1", ".", "data", ")", ")", "\n", "writer", ".", "add_scalar", "(", "'Loss'", ",", "loss1", ".", "data", ",", "global_step", "=", "step", ")", "\n", "writer", ".", "add_scalar", "(", "'Loss_r'", ",", "loss2", ".", "data", ",", "global_step", "=", "step", ")", "\n", "writer", ".", "add_scalar", "(", "'Loss_d'", ",", "loss3", ".", "data", ",", "global_step", "=", "step", ")", "\n", "res", "=", "s", "[", "0", "]", ".", "clone", "(", ")", "\n", "res", "=", "res", ".", "sigmoid", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "res", "=", "(", "res", "-", "res", ".", "min", "(", ")", ")", "/", "(", "res", ".", "max", "(", ")", "-", "res", ".", "min", "(", ")", "+", "1e-8", ")", "\n", "writer", ".", "add_image", "(", "'s'", ",", "torch", ".", "tensor", "(", "res", ")", ",", "step", ",", "dataformats", "=", "'HW'", ")", "\n", "grid_image", "=", "make_grid", "(", "gts", "[", "0", "]", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ",", "1", ",", "normalize", "=", "True", ")", "\n", "res", "=", "s_r", "[", "0", "]", ".", "clone", "(", ")", "\n", "res", "=", "res", ".", "sigmoid", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "res", "=", "(", "res", "-", "res", ".", "min", "(", ")", ")", "/", "(", "res", ".", "max", "(", ")", "-", "res", ".", "min", "(", ")", "+", "1e-8", ")", "\n", "writer", ".", "add_image", "(", "'s_r'", ",", "torch", ".", "tensor", "(", "res", ")", ",", "step", ",", "dataformats", "=", "'HW'", ")", "\n", "grid_image", "=", "make_grid", "(", "gts", "[", "0", "]", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ",", "1", ",", "normalize", "=", "True", ")", "\n", "res", "=", "s_d", "[", "0", "]", ".", "clone", "(", ")", "\n", "res", "=", "res", ".", "sigmoid", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "res", "=", "(", "res", "-", "res", ".", "min", "(", ")", ")", "/", "(", "res", ".", "max", "(", ")", "-", "res", ".", "min", "(", ")", "+", "1e-8", ")", "\n", "writer", ".", "add_image", "(", "'s_d'", ",", "torch", ".", "tensor", "(", "res", ")", ",", "step", ",", "dataformats", "=", "'HW'", ")", "\n", "grid_image", "=", "make_grid", "(", "gts", "[", "0", "]", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ",", "1", ",", "normalize", "=", "True", ")", "\n", "\n", "writer", ".", "add_image", "(", "'Ground_truth'", ",", "grid_image", ",", "step", ")", "\n", "grid_image", "=", "make_grid", "(", "images", "[", "0", "]", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ",", "1", ",", "normalize", "=", "True", ")", "\n", "writer", ".", "add_image", "(", "'RGB'", ",", "grid_image", ",", "step", ")", "\n", "grid_image", "=", "make_grid", "(", "depths", "[", "0", "]", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ",", "1", ",", "normalize", "=", "True", ")", "\n", "writer", ".", "add_image", "(", "'depth'", ",", "grid_image", ",", "step", ")", "\n", "\n", "", "", "loss_all", "/=", "epoch_step", "\n", "logging", ".", "info", "(", "'#TRAIN#:Epoch [{:03d}/{:03d}], Loss_AVG: {:.4f}'", ".", "format", "(", "epoch", ",", "opt", ".", "epoch", ",", "loss_all", ")", ")", "\n", "writer", ".", "add_scalar", "(", "'Loss-epoch'", ",", "loss_all", ",", "global_step", "=", "epoch", ")", "\n", "if", "(", "epoch", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "save_path", "+", "'/epoch_{}.pth'", ".", "format", "(", "epoch", ")", ")", "\n", "", "", "except", "KeyboardInterrupt", ":", "\n", "        ", "print", "(", "'Keyboard Interrupt: save model and exit.'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_path", ")", "\n", "", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "save_path", "+", "'/epoch_{}.pth'", ".", "format", "(", "epoch", "+", "1", ")", ")", "\n", "print", "(", "'save checkpoints successfully!'", ")", "\n", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.__init__": [[87, 113], ["natsort.natsorted", "natsort.natsorted", "natsort.natsorted", "torch.SalObjDataset.filter_files", "len", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.listdir", "f.endswith", "os.listdir", "os.listdir", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "f.endswith", "f.endswith", "f.endswith", "f.endswith"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.filter_files"], ["    ", "def", "__init__", "(", "self", ",", "image_root", ",", "gt_root", ",", "depth_root", ",", "trainsize", ")", ":", "\n", "        ", "self", ".", "trainsize", "=", "trainsize", "\n", "self", ".", "images", "=", "[", "image_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "]", "\n", "self", ".", "gts", "=", "[", "gt_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "depths", "=", "[", "depth_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "depth_root", ")", "if", "f", ".", "endswith", "(", "'.bmp'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "images", "=", "natsorted", "(", "self", ".", "images", ")", "\n", "self", ".", "gts", "=", "natsorted", "(", "self", ".", "gts", ")", "\n", "self", ".", "depths", "=", "natsorted", "(", "self", ".", "depths", ")", "\n", "# print(self.images)", "\n", "# print(self.depths)", "\n", "# print(self.gts)", "\n", "self", ".", "filter_files", "(", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "img_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "self", ".", "gt_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "depths_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.__getitem__": [[114, 128], ["torch.SalObjDataset.rgb_loader", "torch.SalObjDataset.binary_loader", "torch.SalObjDataset.rgb_loader", "data.cv_random_flip", "data.randomCrop", "data.randomRotation", "data.colorEnhance", "data.randomPeper", "torch.SalObjDataset.img_transform", "torch.SalObjDataset.gt_transform", "torch.SalObjDataset.depths_transform"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.cv_random_flip", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.randomCrop", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.randomRotation", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.colorEnhance", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.randomPeper"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "index", "]", ")", "\n", "gt", "=", "self", ".", "binary_loader", "(", "self", ".", "gts", "[", "index", "]", ")", "\n", "depth", "=", "self", ".", "rgb_loader", "(", "self", ".", "depths", "[", "index", "]", ")", "\n", "image", ",", "gt", ",", "depth", "=", "cv_random_flip", "(", "image", ",", "gt", ",", "depth", ")", "\n", "image", ",", "gt", ",", "depth", "=", "randomCrop", "(", "image", ",", "gt", ",", "depth", ")", "\n", "image", ",", "gt", ",", "depth", "=", "randomRotation", "(", "image", ",", "gt", ",", "depth", ")", "\n", "image", "=", "colorEnhance", "(", "image", ")", "\n", "#gt=randomGaussian(gt)", "\n", "gt", "=", "randomPeper", "(", "gt", ")", "\n", "image", "=", "self", ".", "img_transform", "(", "image", ")", "\n", "gt", "=", "self", ".", "gt_transform", "(", "gt", ")", "\n", "depth", "=", "self", ".", "depths_transform", "(", "depth", ")", "\n", "return", "image", ",", "gt", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.filter_files": [[129, 146], ["zip", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "len", "len", "len", "len", "images.append", "gts.append", "depths.append", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "filter_files", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "and", "len", "(", "self", ".", "gts", ")", "==", "len", "(", "self", ".", "images", ")", "\n", "images", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "depths", "=", "[", "]", "\n", "for", "img_path", ",", "gt_path", ",", "depth_path", "in", "zip", "(", "self", ".", "images", ",", "self", ".", "gts", ",", "self", ".", "depths", ")", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "img_path", ")", "\n", "gt", "=", "Image", ".", "open", "(", "gt_path", ")", "\n", "depth", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "if", "img", ".", "size", "==", "gt", ".", "size", "and", "gt", ".", "size", "==", "depth", ".", "size", ":", "\n", "                ", "images", ".", "append", "(", "img_path", ")", "\n", "gts", ".", "append", "(", "gt_path", ")", "\n", "depths", ".", "append", "(", "depth_path", ")", "\n", "", "", "self", ".", "images", "=", "images", "\n", "self", ".", "gts", "=", "gts", "\n", "self", ".", "depths", "=", "depths", "\n", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "and", "len", "(", "self", ".", "gts", ")", "==", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.rgb_loader": [[147, 151], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "def", "rgb_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.binary_loader": [[152, 156], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "binary_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'L'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.rgb_loader_ops": [[157, 161], ["open", "PIL.Image.open", "PIL.ImageOps.invert", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "rgb_loader_ops", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "PIL", ".", "ImageOps", ".", "invert", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.resize": [[162, 171], ["max", "max", "img.resize", "gt.resize", "depth.resize"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.resize", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.resize", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.resize"], ["", "", "def", "resize", "(", "self", ",", "img", ",", "gt", ",", "depth", ")", ":", "\n", "        ", "assert", "img", ".", "size", "==", "gt", ".", "size", "and", "gt", ".", "size", "==", "depth", ".", "size", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "h", "<", "self", ".", "trainsize", "or", "w", "<", "self", ".", "trainsize", ":", "\n", "            ", "h", "=", "max", "(", "h", ",", "self", ".", "trainsize", ")", "\n", "w", "=", "max", "(", "w", ",", "self", ".", "trainsize", ")", "\n", "return", "img", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "BILINEAR", ")", ",", "gt", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "NEAREST", ")", ",", "depth", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "NEAREST", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", ",", "gt", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.__len__": [[172, 174], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.__init__": [[188, 216], ["natsort.natsorted", "natsort.natsorted", "natsort.natsorted", "torch.test_dataset.filter_files", "torchvision.Compose", "torchvision.ToTensor", "torchvision.Compose", "len", "os.listdir", "f.endswith", "os.listdir", "os.listdir", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "f.endswith", "f.endswith", "f.endswith", "f.endswith"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.filter_files"], ["    ", "def", "__init__", "(", "self", ",", "image_root", ",", "gt_root", ",", "depth_root", ",", "testsize", ")", ":", "\n", "        ", "self", ".", "testsize", "=", "testsize", "\n", "self", ".", "images", "=", "[", "image_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "]", "\n", "self", ".", "gts", "=", "[", "gt_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "depths", "=", "[", "depth_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "depth_root", ")", "if", "f", ".", "endswith", "(", "'.bmp'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "images", "=", "natsorted", "(", "self", ".", "images", ")", "\n", "self", ".", "gts", "=", "natsorted", "(", "self", ".", "gts", ")", "\n", "self", ".", "depths", "=", "natsorted", "(", "self", ".", "depths", ")", "\n", "# print(self.images)", "\n", "# print(self.depths)", "\n", "# print(self.gts)", "\n", "self", ".", "filter_files", "(", ")", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "testsize", ",", "self", ".", "testsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "self", ".", "gt_transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "# self.gt_transform = transforms.Compose([", "\n", "#     transforms.Resize((self.trainsize, self.trainsize)),", "\n", "#     transforms.ToTensor()])", "\n", "self", ".", "depths_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "testsize", ",", "self", ".", "testsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "index", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.load_data": [[217, 232], ["torch.test_dataset.rgb_loader", "torch.test_dataset.transform().unsqueeze", "torch.test_dataset.binary_loader", "torch.test_dataset.rgb_loader", "torch.test_dataset.depths_transform().unsqueeze", "torch.test_dataset.depths_transform().unsqueeze", "torch.test_dataset.rgb_loader", "image_for_post.resize.resize.resize", "name.endswith", "torch.test_dataset.images[].split", "numpy.array", "torch.test_dataset.transform", "torch.test_dataset.depths_transform", "torch.test_dataset.depths_transform", "torch.test_dataset.rgb_loader_ops", "name.split"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.binary_loader", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.SalObjDataset.resize", "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.rgb_loader_ops"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "image", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "self", ".", "index", "]", ")", "\n", "image", "=", "self", ".", "transform", "(", "image", ")", ".", "unsqueeze", "(", "0", ")", "\n", "gt", "=", "self", ".", "binary_loader", "(", "self", ".", "gts", "[", "self", ".", "index", "]", ")", "\n", "depth", "=", "self", ".", "rgb_loader", "(", "self", ".", "depths", "[", "self", ".", "index", "]", ")", "\n", "pesudo_depth", "=", "self", ".", "depths_transform", "(", "self", ".", "rgb_loader_ops", "(", "self", ".", "gts", "[", "self", ".", "index", "]", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "depth", "=", "self", ".", "depths_transform", "(", "depth", ")", ".", "unsqueeze", "(", "0", ")", "\n", "name", "=", "self", ".", "images", "[", "self", ".", "index", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "image_for_post", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "self", ".", "index", "]", ")", "\n", "image_for_post", "=", "image_for_post", ".", "resize", "(", "gt", ".", "size", ")", "\n", "if", "name", ".", "endswith", "(", "'.jpg'", ")", ":", "\n", "            ", "name", "=", "name", ".", "split", "(", "'.jpg'", ")", "[", "0", "]", "+", "'.png'", "\n", "", "self", ".", "index", "+=", "1", "\n", "self", ".", "index", "=", "self", ".", "index", "%", "self", ".", "size", "\n", "return", "image", ",", "gt", ",", "depth", ",", "name", ",", "np", ".", "array", "(", "image_for_post", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.rgb_loader": [[233, 237], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "def", "rgb_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.binary_loader": [[238, 242], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "binary_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'L'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.rgb_loader_ops": [[243, 248], ["open", "PIL.Image.open", "PIL.ImageOps.invert", "PIL.ImageOps.invert.convert"], "methods", ["None"], ["", "", "def", "rgb_loader_ops", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "img", "=", "PIL", ".", "ImageOps", ".", "invert", "(", "img", ".", "convert", "(", "'RGB'", ")", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.__len__": [[249, 251], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.test_dataset.filter_files": [[252, 271], ["zip", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "len", "len", "len", "len", "images.append", "gts.append", "depths.append", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "filter_files", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "and", "len", "(", "self", ".", "gts", ")", "==", "len", "(", "self", ".", "images", ")", "\n", "images", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "depths", "=", "[", "]", "\n", "for", "img_path", ",", "gt_path", ",", "depth_path", "in", "zip", "(", "self", ".", "images", ",", "self", ".", "gts", ",", "self", ".", "depths", ")", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "img_path", ")", "\n", "gt", "=", "Image", ".", "open", "(", "gt_path", ")", "\n", "depth", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "if", "img", ".", "size", "==", "gt", ".", "size", "and", "gt", ".", "size", "==", "depth", ".", "size", ":", "\n", "                ", "images", ".", "append", "(", "img_path", ")", "\n", "gts", ".", "append", "(", "gt_path", ")", "\n", "depths", ".", "append", "(", "depth_path", ")", "\n", "# else:", "\n", "#     print(img.size, depth.size, gt.size)", "\n", "", "", "self", ".", "images", "=", "images", "\n", "self", ".", "gts", "=", "gts", "\n", "self", ".", "depths", "=", "depths", "\n", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "and", "len", "(", "self", ".", "gts", ")", "==", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.cv_random_flip": [[12, 26], ["random.randint", "img.transpose.transpose", "label.transpose.transpose", "depth.transpose.transpose"], "function", ["None"], ["def", "cv_random_flip", "(", "img", ",", "label", ",", "depth", ")", ":", "\n", "    ", "flip_flag", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "# flip_flag2= random.randint(0,1)", "\n", "#left right flip", "\n", "if", "flip_flag", "==", "1", ":", "\n", "        ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "depth", "=", "depth", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "#top bottom flip", "\n", "# if flip_flag2==1:", "\n", "#     img = img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#     label = label.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#     depth = depth.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "", "return", "img", ",", "label", ",", "depth", "\n", "", "def", "randomCrop", "(", "image", ",", "label", ",", "depth", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.randomCrop": [[26, 36], ["numpy.random.randint", "numpy.random.randint", "image.crop", "label.crop", "depth.crop"], "function", ["None"], ["", "def", "randomCrop", "(", "image", ",", "label", ",", "depth", ")", ":", "\n", "    ", "border", "=", "30", "\n", "image_width", "=", "image", ".", "size", "[", "0", "]", "\n", "image_height", "=", "image", ".", "size", "[", "1", "]", "\n", "crop_win_width", "=", "np", ".", "random", ".", "randint", "(", "image_width", "-", "border", ",", "image_width", ")", "\n", "crop_win_height", "=", "np", ".", "random", ".", "randint", "(", "image_height", "-", "border", ",", "image_height", ")", "\n", "random_region", "=", "(", "\n", "(", "image_width", "-", "crop_win_width", ")", ">>", "1", ",", "(", "image_height", "-", "crop_win_height", ")", ">>", "1", ",", "(", "image_width", "+", "crop_win_width", ")", ">>", "1", ",", "\n", "(", "image_height", "+", "crop_win_height", ")", ">>", "1", ")", "\n", "return", "image", ".", "crop", "(", "random_region", ")", ",", "label", ".", "crop", "(", "random_region", ")", ",", "depth", ".", "crop", "(", "random_region", ")", "\n", "", "def", "randomRotation", "(", "image", ",", "label", ",", "depth", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.randomRotation": [[36, 44], ["random.random", "numpy.random.randint", "image.rotate.rotate", "label.rotate.rotate", "depth.rotate.rotate"], "function", ["None"], ["", "def", "randomRotation", "(", "image", ",", "label", ",", "depth", ")", ":", "\n", "    ", "mode", "=", "Image", ".", "BICUBIC", "\n", "if", "random", ".", "random", "(", ")", ">", "0.8", ":", "\n", "        ", "random_angle", "=", "np", ".", "random", ".", "randint", "(", "-", "15", ",", "15", ")", "\n", "image", "=", "image", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "label", "=", "label", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "depth", "=", "depth", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "", "return", "image", ",", "label", ",", "depth", "\n", "", "def", "colorEnhance", "(", "image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.colorEnhance": [[44, 54], ["PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Sharpness().enhance", "random.randint", "random.randint", "random.randint", "random.randint", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Sharpness"], "function", ["None"], ["", "def", "colorEnhance", "(", "image", ")", ":", "\n", "    ", "bright_intensity", "=", "random", ".", "randint", "(", "5", ",", "15", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Brightness", "(", "image", ")", ".", "enhance", "(", "bright_intensity", ")", "\n", "contrast_intensity", "=", "random", ".", "randint", "(", "5", ",", "15", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Contrast", "(", "image", ")", ".", "enhance", "(", "contrast_intensity", ")", "\n", "color_intensity", "=", "random", ".", "randint", "(", "0", ",", "20", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Color", "(", "image", ")", ".", "enhance", "(", "color_intensity", ")", "\n", "sharp_intensity", "=", "random", ".", "randint", "(", "0", ",", "30", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Sharpness", "(", "image", ")", ".", "enhance", "(", "sharp_intensity", ")", "\n", "return", "image", "\n", "", "def", "randomGaussian", "(", "image", ",", "mean", "=", "0.1", ",", "sigma", "=", "0.35", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.randomGaussian": [[54, 64], ["numpy.asarray", "data.randomGaussian.gaussianNoisy"], "function", ["None"], ["", "def", "randomGaussian", "(", "image", ",", "mean", "=", "0.1", ",", "sigma", "=", "0.35", ")", ":", "\n", "    ", "def", "gaussianNoisy", "(", "im", ",", "mean", "=", "mean", ",", "sigma", "=", "sigma", ")", ":", "\n", "        ", "for", "_i", "in", "range", "(", "len", "(", "im", ")", ")", ":", "\n", "            ", "im", "[", "_i", "]", "+=", "random", ".", "gauss", "(", "mean", ",", "sigma", ")", "\n", "", "return", "im", "\n", "", "img", "=", "np", ".", "asarray", "(", "image", ")", "\n", "width", ",", "height", "=", "img", ".", "shape", "\n", "img", "=", "gaussianNoisy", "(", "img", "[", ":", "]", ".", "flatten", "(", ")", ",", "mean", ",", "sigma", ")", "\n", "img", "=", "img", ".", "reshape", "(", "[", "width", ",", "height", "]", ")", "\n", "return", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "img", ")", ")", "\n", "", "def", "randomPeper", "(", "img", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.randomPeper": [[64, 82], ["numpy.array", "int", "range", "PIL.Image.fromarray", "random.randint", "random.randint", "random.randint"], "function", ["None"], ["", "def", "randomPeper", "(", "img", ")", ":", "\n", "\n", "    ", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "noiseNum", "=", "int", "(", "0.0015", "*", "img", ".", "shape", "[", "0", "]", "*", "img", ".", "shape", "[", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "noiseNum", ")", ":", "\n", "\n", "        ", "randX", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "\n", "randY", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "\n", "            ", "img", "[", "randX", ",", "randY", "]", "=", "0", "\n", "\n", "", "else", ":", "\n", "\n", "            ", "img", "[", "randX", ",", "randY", "]", "=", "255", "\n", "", "", "return", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.data.get_loader": [[176, 185], ["data.SalObjDataset", "torch.DataLoader"], "function", ["None"], ["", "", "def", "get_loader", "(", "image_root", ",", "gt_root", ",", "depth_root", ",", "batchsize", ",", "trainsize", ",", "shuffle", "=", "True", ",", "num_workers", "=", "6", ",", "pin_memory", "=", "True", ")", ":", "\n", "\n", "    ", "dataset", "=", "SalObjDataset", "(", "image_root", ",", "gt_root", ",", "depth_root", ",", "trainsize", ")", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", "=", "dataset", ",", "\n", "batch_size", "=", "batchsize", ",", "\n", "shuffle", "=", "shuffle", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "pin_memory", "=", "pin_memory", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.utils.clip_gradient": [[1, 6], ["param.grad.data.clamp_"], "function", ["None"], ["def", "clip_gradient", "(", "optimizer", ",", "grad_clip", ")", ":", "\n", "    ", "for", "group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "for", "param", "in", "group", "[", "'params'", "]", ":", "\n", "            ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "                ", "param", ".", "grad", ".", "data", ".", "clamp_", "(", "-", "grad_clip", ",", "grad_clip", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.None.utils.adjust_lr": [[8, 14], ["None"], "function", ["None"], ["", "", "", "", "def", "adjust_lr", "(", "optimizer", ",", "init_lr", ",", "epoch", ",", "decay_rate", "=", "0.1", ",", "decay_epoch", "=", "30", ")", ":", "\n", "    ", "decay", "=", "decay_rate", "**", "(", "epoch", "//", "decay_epoch", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "decay", "*", "init_lr", "\n", "lr", "=", "param_group", "[", "'lr'", "]", "\n", "", "return", "lr", "\n", "# for param_group in optimizer.param_groups:", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.SPP.ASPP_simple.__init__": [[8, 30], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "rates", "=", "[", "1", ",", "6", ",", "12", ",", "18", "]", ")", ":", "\n", "\t\t", "super", "(", "ASPP_simple", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "aspp0", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ")", "\n", "self", ".", "aspp1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "rates", "[", "1", "]", ",", "dilation", "=", "rates", "[", "1", "]", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ")", "\n", "self", ".", "aspp2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "rates", "[", "2", "]", ",", "dilation", "=", "rates", "[", "2", "]", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ")", "\n", "self", ".", "aspp3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "rates", "[", "3", "]", ",", "dilation", "=", "rates", "[", "3", "]", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ")", "\n", "\n", "self", ".", "global_avg_pool", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n", "self", ".", "reduce", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "planes", "*", "5", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.SPP.ASPP_simple.forward": [[32, 42], ["SPP.ASPP_simple.aspp0", "SPP.ASPP_simple.aspp1", "SPP.ASPP_simple.aspp2", "SPP.ASPP_simple.aspp3", "SPP.ASPP_simple.global_avg_pool", "torch.upsample", "torch.upsample", "torch.upsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "SPP.ASPP_simple.reduce", "SPP.ASPP_simple.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x0", "=", "self", ".", "aspp0", "(", "x", ")", "\n", "x1", "=", "self", ".", "aspp1", "(", "x", ")", "\n", "x2", "=", "self", ".", "aspp2", "(", "x", ")", "\n", "x3", "=", "self", ".", "aspp3", "(", "x", ")", "\n", "x4", "=", "self", ".", "global_avg_pool", "(", "x", ")", "\n", "x4", "=", "F", ".", "upsample", "(", "x4", ",", "x3", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "reduce", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.SPP.ASPP_module.__init__": [[44, 58], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "SPP.ASPP_module.__init_weight"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.SPP.ASPP_module.__init_weight"], ["\t", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "rate", ")", ":", "\n", "\t\t", "super", "(", "ASPP_module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "rate", "==", "1", ":", "\n", "\t\t\t", "kernel_size", "=", "1", "\n", "padding", "=", "0", "\n", "", "else", ":", "\n", "\t\t\t", "kernel_size", "=", "3", "\n", "padding", "=", "rate", "\n", "", "self", ".", "atrous_convolution", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "1", ",", "padding", "=", "padding", ",", "dilation", "=", "rate", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "__init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.SPP.ASPP_module.forward": [[59, 64], ["SPP.ASPP_module.atrous_convolution", "SPP.ASPP_module.bn", "SPP.ASPP_module.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "self", ".", "atrous_convolution", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "\n", "return", "self", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.SPP.ASPP_module.__init_weight": [[65, 74], ["SPP.ASPP_module.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "__init_weight", "(", "self", ")", ":", "\n", "\t\t", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "\t\t\t", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "# n = m.kernel_size[0] * m.kernel_size[1] * m.out_channels", "\n", "# m.weight.data.normal_(0, math.sqrt(2. / n))", "\n", "\t\t\t\t", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "\t\t\t\t", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.SPP.ASPP.__init__": [[76, 94], ["torch.Module.__init__", "SPP.ASPP_module", "SPP.ASPP_module", "SPP.ASPP_module", "SPP.ASPP_module", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__"], ["\t", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "rates", ")", ":", "\n", "\t\t", "super", "(", "ASPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "aspp1", "=", "ASPP_module", "(", "inplanes", ",", "planes", ",", "rate", "=", "rates", "[", "0", "]", ")", "\n", "self", ".", "aspp2", "=", "ASPP_module", "(", "inplanes", ",", "planes", ",", "rate", "=", "rates", "[", "1", "]", ")", "\n", "self", ".", "aspp3", "=", "ASPP_module", "(", "inplanes", ",", "planes", ",", "rate", "=", "rates", "[", "2", "]", ")", "\n", "self", ".", "aspp4", "=", "ASPP_module", "(", "inplanes", ",", "planes", ",", "rate", "=", "rates", "[", "3", "]", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "global_avg_pool", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "planes", "*", "5", ",", "planes", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.SPP.ASPP.forward": [[95, 109], ["SPP.ASPP.aspp1", "SPP.ASPP.aspp2", "SPP.ASPP.aspp3", "SPP.ASPP.aspp4", "SPP.ASPP.global_avg_pool", "torch.upsample", "torch.upsample", "torch.upsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "SPP.ASPP.conv1", "SPP.ASPP.bn1", "SPP.ASPP.relu", "SPP.ASPP.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x1", "=", "self", ".", "aspp1", "(", "x", ")", "\n", "x2", "=", "self", ".", "aspp2", "(", "x", ")", "\n", "x3", "=", "self", ".", "aspp3", "(", "x", ")", "\n", "x4", "=", "self", ".", "aspp4", "(", "x", ")", "\n", "x5", "=", "self", ".", "global_avg_pool", "(", "x", ")", "\n", "x5", "=", "F", ".", "upsample", "(", "x5", ",", "size", "=", "x4", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ")", ",", "dim", "=", "1", ")", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.BasicBlock.__init__": [[9, 18], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "rate", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "dilation", "=", "rate", ",", "padding", "=", "rate", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.BasicBlock.forward": [[19, 36], ["ResNet.BasicBlock.conv1", "ResNet.BasicBlock.bn1", "ResNet.BasicBlock.relu", "ResNet.BasicBlock.conv2", "ResNet.BasicBlock.bn2", "ResNet.BasicBlock.relu", "ResNet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.Bottleneck.__init__": [[41, 53], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "rate", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "dilation", "=", "rate", ",", "padding", "=", "rate", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "rate", "=", "rate", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.Bottleneck.forward": [[54, 75], ["ResNet.Bottleneck.conv1", "ResNet.Bottleneck.bn1", "ResNet.Bottleneck.relu", "ResNet.Bottleneck.conv2", "ResNet.Bottleneck.bn2", "ResNet.Bottleneck.relu", "ResNet.Bottleneck.conv3", "ResNet.Bottleneck.bn3", "ResNet.Bottleneck.relu", "ResNet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet.__init__": [[77, 107], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet._init_weight", "ResNet.ResNet._load_pretrained_model"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet._make_layer", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet._make_layer", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet._make_layer", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet._make_layer", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet._init_weight", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet._load_pretrained_model"], ["    ", "def", "__init__", "(", "self", ",", "nInputChannels", ",", "block", ",", "layers", ",", "os", "=", "32", ",", "pretrained", "=", "True", ",", "model_path", "=", "None", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "os", "==", "16", ":", "\n", "            ", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", "\n", "rates", "=", "[", "1", ",", "1", ",", "1", ",", "2", "]", "\n", "", "elif", "os", "==", "8", ":", "\n", "            ", "strides", "=", "[", "1", ",", "2", ",", "1", ",", "1", "]", "\n", "rates", "=", "[", "1", ",", "1", ",", "2", ",", "2", "]", "\n", "", "elif", "os", "==", "32", ":", "\n", "            ", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "2", "]", "\n", "rates", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "# Modules", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "nInputChannels", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "stride", "=", "strides", "[", "0", "]", ",", "rate", "=", "rates", "[", "0", "]", ")", "#64 3", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "strides", "[", "1", "]", ",", "rate", "=", "rates", "[", "1", "]", ")", "#128 4", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "strides", "[", "2", "]", ",", "rate", "=", "rates", "[", "2", "]", ")", "#256 23", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "strides", "[", "3", "]", ",", "rate", "=", "rates", "[", "3", "]", ")", "\n", "\n", "self", ".", "_init_weight", "(", ")", "\n", "\n", "if", "pretrained", ":", "\n", "            ", "self", ".", "_load_pretrained_model", "(", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet._make_layer": [[108, 124], ["layers.append", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "block", "layers.append", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "block"], "methods", ["None"], ["", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "rate", "=", "1", ")", ":", "\n", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "rate", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet.forward": [[125, 139], ["ResNet.ResNet.conv1", "ResNet.ResNet.bn1", "ResNet.ResNet.relu", "ResNet.ResNet.maxpool", "ResNet.ResNet.layer1", "ResNet.ResNet.layer2", "ResNet.ResNet.layer3", "ResNet.ResNet.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "input", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "conv1_feat", "=", "x", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "low_level_feat", "=", "x", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "layer2_feat", "=", "x", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "layer3_feat", "=", "x", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "return", "x", ",", "low_level_feat", ",", "conv1_feat", ",", "layer2_feat", ",", "layer3_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet._init_weight": [[140, 147], ["ResNet.ResNet.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_init_weight", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet._load_pretrained_model": [[148, 158], ["print", "torch.load", "torch.load", "torch.load", "torch.load", "ResNet.ResNet.state_dict", "torch.load.items", "torch.load.items", "ResNet.ResNet.update", "ResNet.ResNet.load_state_dict"], "methods", ["None"], ["", "", "", "def", "_load_pretrained_model", "(", "self", ",", "model_path", ")", ":", "\n", "        ", "print", "(", "'Load pretrained '", ",", "model_path", ",", "'...'", ")", "\n", "pretrain_dict", "=", "torch", ".", "load", "(", "model_path", ")", "\n", "model_dict", "=", "{", "}", "\n", "state_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "k", ",", "v", "in", "pretrain_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "state_dict", ":", "\n", "                ", "model_dict", "[", "k", "]", "=", "v", "\n", "", "", "state_dict", ".", "update", "(", "model_dict", ")", "\n", "self", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet101": [[159, 163], ["ResNet.ResNet"], "function", ["None"], ["", "", "def", "ResNet101", "(", "nInputChannels", "=", "3", ",", "os", "=", "32", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "nInputChannels", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "os", ",", "\n", "pretrained", "=", "pretrained", ",", "model_path", "=", "'./pre_train/resnet101-5d3b4d8f.pth'", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet18": [[164, 168], ["ResNet.ResNet"], "function", ["None"], ["", "def", "ResNet18", "(", "nInputChannels", "=", "3", ",", "os", "=", "32", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "nInputChannels", ",", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "os", ",", "\n", "pretrained", "=", "pretrained", ",", "model_path", "=", "'./pre_train/resnet18-5c106cde.pth'", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet34": [[169, 173], ["ResNet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", "nInputChannels", "=", "3", ",", "os", "=", "32", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "nInputChannels", ",", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "os", ",", "\n", "pretrained", "=", "pretrained", ",", "model_path", "=", "'./pre_train/resnet34-333f7ec4.pth'", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet50": [[174, 178], ["ResNet.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", "nInputChannels", "=", "3", ",", "os", "=", "32", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "nInputChannels", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "os", ",", "\n", "pretrained", "=", "pretrained", ",", "model_path", "=", "'./pre_train/resnet50-19c8e357.pth'", ")", "\n", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BasicConv2d.__init__": [[12, 19], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BasicConv2d.forward": [[20, 24], ["BTSNet.BasicConv2d.conv", "BTSNet.BasicConv2d.bn", "BTSNet.BasicConv2d.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "return", "self", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.Bottleneck.__init__": [[33, 45], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "rate", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "dilation", "=", "rate", ",", "padding", "=", "rate", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "rate", "=", "rate", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.Bottleneck.forward": [[46, 67], ["BTSNet.Bottleneck.conv1", "BTSNet.Bottleneck.bn1", "BTSNet.Bottleneck.relu", "BTSNet.Bottleneck.conv2", "BTSNet.Bottleneck.bn2", "BTSNet.Bottleneck.relu", "BTSNet.Bottleneck.conv3", "BTSNet.Bottleneck.bn3", "BTSNet.Bottleneck.relu", "BTSNet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet.__init__": [[69, 199], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "BTSNet.BTSNet._make_layer", "BTSNet.BTSNet._make_layer", "BTSNet.BTSNet._make_layer", "BTSNet.BTSNet._make_layer", "SPP.ASPP", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "BTSNet.BasicConv2d", "resnet_aspp.ResNet_ASPP", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet._make_layer", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet._make_layer", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet._make_layer", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "nInputChannels", ",", "n_classes", ",", "os", ",", "img_backbone_type", "=", "'resnet50'", ",", "depth_backbone_type", "=", "'resnet50'", ")", ":", "\n", "        ", "super", "(", "BTSNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "os", "=", "os", "\n", "\n", "#ASPP\u6a21\u5757\u7a7a\u6d1e\u5377\u79efrate", "\n", "if", "os", "==", "16", ":", "\n", "            ", "aspp_rates", "=", "[", "1", ",", "6", ",", "12", ",", "18", "]", "\n", "", "elif", "os", "==", "8", "or", "os", "==", "32", ":", "\n", "            ", "aspp_rates", "=", "[", "1", ",", "12", ",", "24", ",", "36", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "#os = output_stride", "\n", "", "if", "os", "==", "16", ":", "\n", "            ", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", "\n", "rates", "=", "[", "1", ",", "1", ",", "1", ",", "2", "]", "\n", "", "elif", "os", "==", "8", ":", "\n", "            ", "strides", "=", "[", "1", ",", "2", ",", "1", ",", "1", "]", "\n", "rates", "=", "[", "1", ",", "1", ",", "2", ",", "2", "]", "\n", "", "elif", "os", "==", "32", ":", "\n", "            ", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "2", "]", "\n", "rates", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "assert", "img_backbone_type", "==", "'resnet50'", "\n", "\n", "# Modules", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "nInputChannels", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "64", ",", "layers", "[", "0", "]", ",", "stride", "=", "strides", "[", "0", "]", ",", "rate", "=", "rates", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "strides", "[", "1", "]", ",", "rate", "=", "rates", "[", "1", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "strides", "[", "2", "]", ",", "rate", "=", "rates", "[", "2", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "strides", "[", "3", "]", ",", "rate", "=", "rates", "[", "3", "]", ")", "\n", "\n", "asppInputChannels", "=", "2048", "\n", "asppOutputChannels", "=", "256", "\n", "lowInputChannels", "=", "256", "\n", "lowOutputChannels", "=", "256", "\n", "\n", "self", ".", "aspp", "=", "ASPP", "(", "asppInputChannels", ",", "asppOutputChannels", ",", "aspp_rates", ")", "\n", "\n", "self", ".", "last_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "lowOutputChannels", ",", "lowOutputChannels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "lowOutputChannels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "lowOutputChannels", ",", "lowOutputChannels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "lowOutputChannels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "lowOutputChannels", ",", "n_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", ")", "\n", "\n", "self", ".", "last_conv_rgb", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "lowOutputChannels", ",", "lowOutputChannels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "lowOutputChannels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "lowOutputChannels", ",", "lowOutputChannels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "lowOutputChannels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "lowOutputChannels", ",", "n_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", ")", "\n", "\n", "self", ".", "last_conv_depth", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "2", "*", "lowOutputChannels", ",", "lowOutputChannels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "lowOutputChannels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "lowOutputChannels", ",", "lowOutputChannels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "lowOutputChannels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "lowOutputChannels", ",", "n_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", ")", "\n", "\n", "# low_level_feature to 48 channels", "\n", "self", ".", "rgb_conv1_cp", "=", "BasicConv2d", "(", "64", ",", "lowOutputChannels", ",", "1", ")", "\n", "self", ".", "depth_conv1_cp", "=", "BasicConv2d", "(", "64", ",", "lowOutputChannels", ",", "1", ")", "\n", "self", ".", "rgb_layer1_cp", "=", "BasicConv2d", "(", "256", ",", "lowOutputChannels", ",", "1", ")", "\n", "self", ".", "depth_layer1_cp", "=", "BasicConv2d", "(", "256", ",", "lowOutputChannels", ",", "1", ")", "\n", "self", ".", "rgb_layer2_cp", "=", "BasicConv2d", "(", "512", ",", "lowOutputChannels", ",", "1", ")", "\n", "self", ".", "depth_layer2_cp", "=", "BasicConv2d", "(", "512", ",", "lowOutputChannels", ",", "1", ")", "\n", "self", ".", "rgb_layer3_cp", "=", "BasicConv2d", "(", "1024", ",", "lowOutputChannels", ",", "1", ")", "\n", "self", ".", "depth_layer3_cp", "=", "BasicConv2d", "(", "1024", ",", "lowOutputChannels", ",", "1", ")", "\n", "self", ".", "rgb_layer4_cp", "=", "BasicConv2d", "(", "2048", ",", "lowOutputChannels", ",", "1", ")", "\n", "self", ".", "depth_layer4_cp", "=", "BasicConv2d", "(", "2048", ",", "lowOutputChannels", ",", "1", ")", "\n", "\n", "self", ".", "fusion_high", "=", "BasicConv2d", "(", "2", "*", "lowOutputChannels", ",", "lowOutputChannels", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "fusion_low", "=", "BasicConv2d", "(", "2", "*", "lowOutputChannels", ",", "lowOutputChannels", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "fusion", "=", "BasicConv2d", "(", "2", "*", "lowOutputChannels", ",", "lowOutputChannels", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "\n", "\n", "self", ".", "resnet_aspp", "=", "ResNet_ASPP", "(", "nInputChannels", ",", "n_classes", ",", "os", ",", "depth_backbone_type", ")", "\n", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "conv1_channel1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv1_spatial1", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "layer1_channel1", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "layer1_spatial1", "=", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "layer2_channel1", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "layer2_spatial1", "=", "nn", ".", "Conv2d", "(", "512", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "layer3_channel1", "=", "nn", ".", "Conv2d", "(", "1024", ",", "1024", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "layer3_spatial1", "=", "nn", ".", "Conv2d", "(", "1024", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "layer4_channel1", "=", "nn", ".", "Conv2d", "(", "2048", ",", "2048", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "layer4_spatial1", "=", "nn", ".", "Conv2d", "(", "2048", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "conv1_channel2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv1_spatial2", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "layer1_channel2", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "layer1_spatial2", "=", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "layer2_channel2", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "layer2_spatial2", "=", "nn", ".", "Conv2d", "(", "512", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "layer3_channel2", "=", "nn", ".", "Conv2d", "(", "1024", ",", "1024", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "layer3_spatial2", "=", "nn", ".", "Conv2d", "(", "1024", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "layer4_channel2", "=", "nn", ".", "Conv2d", "(", "2048", ",", "2048", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "layer4_spatial2", "=", "nn", ".", "Conv2d", "(", "2048", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet._make_layer": [[201, 217], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "BTSNet.Bottleneck", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "BTSNet.Bottleneck"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "rate", "=", "1", ")", ":", "\n", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "Bottleneck", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "Bottleneck", ".", "expansion", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "Bottleneck", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "Bottleneck", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "rate", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "Bottleneck", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "Bottleneck", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet.bi_attention": [[218, 241], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "BTSNet.BTSNet.avg_pool", "channel_conv1", "BTSNet.BTSNet.avg_pool", "channel_conv2", "spatial_conv1", "spatial_conv2", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["None"], ["", "def", "bi_attention", "(", "self", ",", "img_feat", ",", "depth_feat", ",", "channel_conv1", ",", "spatial_conv1", ",", "channel_conv2", ",", "spatial_conv2", ")", ":", "\n", "# spatial attention", "\n", "        ", "img_att", "=", "F", ".", "sigmoid", "(", "spatial_conv1", "(", "img_feat", ")", ")", "\n", "depth_att", "=", "F", ".", "sigmoid", "(", "spatial_conv2", "(", "depth_feat", ")", ")", "\n", "\n", "img_att", "=", "img_att", "+", "img_att", "*", "depth_att", "\n", "depth_att", "=", "depth_att", "+", "img_att", "*", "depth_att", "\n", "\n", "spatial_attentioned_img_feat", "=", "depth_att", "*", "img_feat", "\n", "spatial_attentioned_depth_feat", "=", "img_att", "*", "depth_feat", "\n", "\n", "# channel-wise attention", "\n", "img_vec", "=", "self", ".", "avg_pool", "(", "spatial_attentioned_img_feat", ")", "\n", "img_vec", "=", "channel_conv1", "(", "img_vec", ")", "\n", "img_vec", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "(", "img_vec", ")", "*", "img_vec", ".", "shape", "[", "1", "]", "\n", "img_feat", "=", "spatial_attentioned_img_feat", "*", "img_vec", "\n", "\n", "depth_vec", "=", "self", ".", "avg_pool", "(", "spatial_attentioned_depth_feat", ")", "\n", "depth_vec", "=", "channel_conv2", "(", "depth_vec", ")", "\n", "depth_vec", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "(", "depth_vec", ")", "*", "depth_vec", ".", "shape", "[", "1", "]", "\n", "depth_feat", "=", "spatial_attentioned_depth_feat", "*", "depth_vec", "\n", "\n", "return", "img_feat", ",", "depth_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet.forward": [[243, 364], ["BTSNet.BTSNet.conv1", "BTSNet.BTSNet.bn1", "BTSNet.BTSNet.relu", "BTSNet.BTSNet.resnet_aspp.backbone_features.conv1", "BTSNet.BTSNet.resnet_aspp.backbone_features.bn1", "BTSNet.BTSNet.resnet_aspp.backbone_features.relu", "BTSNet.BTSNet.bi_attention", "BTSNet.BTSNet.maxpool", "BTSNet.BTSNet.layer1", "BTSNet.BTSNet.resnet_aspp.backbone_features.maxpool", "BTSNet.BTSNet.resnet_aspp.backbone_features.layer1", "BTSNet.BTSNet.bi_attention", "BTSNet.BTSNet.layer2", "BTSNet.BTSNet.resnet_aspp.backbone_features.layer2", "BTSNet.BTSNet.bi_attention", "BTSNet.BTSNet.layer3", "BTSNet.BTSNet.resnet_aspp.backbone_features.layer3", "BTSNet.BTSNet.bi_attention", "BTSNet.BTSNet.layer4", "BTSNet.BTSNet.resnet_aspp.backbone_features.layer4", "BTSNet.BTSNet.bi_attention", "BTSNet.BTSNet.aspp", "BTSNet.BTSNet.resnet_aspp.aspp", "BTSNet.BTSNet.rgb_layer4_cp", "BTSNet.BTSNet.depth_layer4_cp", "BTSNet.BTSNet.rgb_layer3_cp", "BTSNet.BTSNet.depth_layer3_cp", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "BTSNet.BTSNet.rgb_conv1_cp", "BTSNet.BTSNet.depth_conv1_cp", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "BTSNet.BTSNet.last_conv_rgb", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "BTSNet.BTSNet.last_conv_depth", "BTSNet.BTSNet.fusion_high", "BTSNet.BTSNet.fusion_low", "torch.upsample", "torch.upsample", "torch.upsample", "BTSNet.BTSNet.last_conv", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "BTSNet.BTSNet.rgb_layer2_cp", "BTSNet.BTSNet.depth_layer2_cp", "BTSNet.BTSNet.rgb_layer1_cp", "BTSNet.BTSNet.depth_layer1_cp", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "img.size", "img.size", "img.size"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet.bi_attention", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet.bi_attention", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet.bi_attention", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet.bi_attention", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.BTSNet.bi_attention"], ["", "def", "forward", "(", "self", ",", "img", ",", "depth", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "img", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "conv1_feat", "=", "x", "\n", "y", "=", "self", ".", "resnet_aspp", ".", "backbone_features", ".", "conv1", "(", "depth", ")", "\n", "y", "=", "self", ".", "resnet_aspp", ".", "backbone_features", ".", "bn1", "(", "y", ")", "\n", "y", "=", "self", ".", "resnet_aspp", ".", "backbone_features", ".", "relu", "(", "y", ")", "\n", "depth_conv1_feat", "=", "y", "\n", "x", ",", "y", "=", "self", ".", "bi_attention", "(", "x", ",", "y", ",", "self", ".", "conv1_channel1", ",", "self", ".", "conv1_spatial1", ",", "self", ".", "conv1_channel2", ",", "\n", "self", ".", "conv1_spatial2", ")", "\n", "\n", "after_depth_conv1_feat", "=", "y", "\n", "after_conv1_feat", "=", "x", "\n", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "layer1_feat", "=", "x", "\n", "y", "=", "self", ".", "resnet_aspp", ".", "backbone_features", ".", "maxpool", "(", "y", ")", "\n", "y", "=", "self", ".", "resnet_aspp", ".", "backbone_features", ".", "layer1", "(", "y", ")", "\n", "depth_layer1_feat", "=", "y", "\n", "x", ",", "y", "=", "self", ".", "bi_attention", "(", "x", ",", "depth_layer1_feat", ",", "self", ".", "layer1_channel1", ",", "self", ".", "layer1_spatial1", ",", "self", ".", "layer1_channel2", ",", "\n", "self", ".", "layer1_spatial2", ")", "\n", "\n", "after_layer1_feat", "=", "x", "\n", "after_depth_layer1_feat", "=", "y", "\n", "low_level_feature", "=", "x", "\n", "low_level_depth_feature", "=", "y", "\n", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "layer2_feat", "=", "x", "\n", "y", "=", "self", ".", "resnet_aspp", ".", "backbone_features", ".", "layer2", "(", "y", ")", "\n", "depth_layer2_feat", "=", "y", "\n", "x", ",", "y", "=", "self", ".", "bi_attention", "(", "x", ",", "depth_layer2_feat", ",", "self", ".", "layer2_channel1", ",", "self", ".", "layer2_spatial1", ",", "self", ".", "layer2_channel2", ",", "\n", "self", ".", "layer2_spatial2", ")", "\n", "\n", "after_layer2_feat", "=", "x", "\n", "after_depth_layer2_feat", "=", "y", "\n", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "layer3_feat", "=", "x", "\n", "y", "=", "self", ".", "resnet_aspp", ".", "backbone_features", ".", "layer3", "(", "y", ")", "\n", "depth_layer3_feat", "=", "y", "\n", "x", ",", "y", "=", "self", ".", "bi_attention", "(", "x", ",", "depth_layer3_feat", ",", "self", ".", "layer3_channel1", ",", "self", ".", "layer3_spatial1", ",", "self", ".", "layer3_channel2", ",", "\n", "self", ".", "layer3_spatial2", ")", "\n", "\n", "after_layer3_feat", "=", "x", "\n", "after_depth_layer3_feat", "=", "y", "\n", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "layer4_feat", "=", "x", "\n", "y", "=", "self", ".", "resnet_aspp", ".", "backbone_features", ".", "layer4", "(", "y", ")", "\n", "depth_layer4_feat", "=", "y", "\n", "x", ",", "y", "=", "self", ".", "bi_attention", "(", "x", ",", "depth_layer4_feat", ",", "self", ".", "layer4_channel1", ",", "self", ".", "layer4_spatial1", ",", "self", ".", "layer4_channel2", ",", "\n", "self", ".", "layer4_spatial2", ")", "\n", "\n", "after_layer4_feat", "=", "x", "\n", "after_depth_layer4_feat", "=", "y", "\n", "\n", "if", "self", ".", "os", "==", "32", ":", "\n", "            ", "x", "=", "F", ".", "upsample", "(", "x", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "y", "=", "F", ".", "upsample", "(", "y", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "", "x", "=", "self", ".", "aspp", "(", "x", ")", "\n", "x_aspp", "=", "x", "\n", "\n", "y", "=", "self", ".", "resnet_aspp", ".", "aspp", "(", "y", ")", "\n", "y_aspp", "=", "y", "\n", "\n", "\n", "after_layer4_feat", "=", "self", ".", "rgb_layer4_cp", "(", "after_layer4_feat", ")", "\n", "after_depth_layer4_feat", "=", "self", ".", "depth_layer4_cp", "(", "after_depth_layer4_feat", ")", "\n", "\n", "after_layer3_feat", "=", "self", ".", "rgb_layer3_cp", "(", "after_layer3_feat", ")", "\n", "after_depth_layer3_feat", "=", "self", ".", "depth_layer3_cp", "(", "after_depth_layer3_feat", ")", "\n", "after_layer2_feat", "=", "F", ".", "upsample", "(", "self", ".", "rgb_layer2_cp", "(", "after_layer2_feat", ")", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "after_depth_layer2_feat", "=", "F", ".", "upsample", "(", "self", ".", "depth_layer2_cp", "(", "after_depth_layer2_feat", ")", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "after_layer1_feat", "=", "F", ".", "upsample", "(", "self", ".", "rgb_layer1_cp", "(", "after_layer1_feat", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "after_depth_layer1_feat", "=", "F", ".", "upsample", "(", "self", ".", "depth_layer1_cp", "(", "after_depth_layer1_feat", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "after_conv1_feat", "=", "self", ".", "rgb_conv1_cp", "(", "after_conv1_feat", ")", "\n", "after_depth_conv1_feat", "=", "self", ".", "depth_conv1_cp", "(", "after_depth_conv1_feat", ")", "\n", "\n", "rgb_high_feat", "=", "x_aspp", "+", "after_layer4_feat", "+", "after_layer3_feat", "\n", "depth_high_feat", "=", "y_aspp", "+", "after_depth_layer4_feat", "+", "after_depth_layer3_feat", "\n", "rgb_low_feat", "=", "after_layer2_feat", "+", "after_layer1_feat", "+", "after_conv1_feat", "\n", "depth_low_feat", "=", "after_depth_layer2_feat", "+", "after_depth_layer1_feat", "+", "after_depth_conv1_feat", "\n", "\n", "#rgb_fusion", "\n", "rgb_feat", "=", "torch", ".", "cat", "(", "(", "F", ".", "upsample", "(", "rgb_high_feat", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", ",", "rgb_low_feat", ")", ",", "dim", "=", "1", ")", "\n", "sal_rgb", "=", "self", ".", "last_conv_rgb", "(", "rgb_feat", ")", "\n", "\n", "\n", "#depth_fusion", "\n", "depth_feat", "=", "torch", ".", "cat", "(", "(", "F", ".", "upsample", "(", "depth_high_feat", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", ",", "depth_low_feat", ")", ",", "dim", "=", "1", ")", "\n", "sal_depth", "=", "self", ".", "last_conv_depth", "(", "depth_feat", ")", "\n", "\n", "\n", "\n", "#final_fusion", "\n", "higt_feat", "=", "self", ".", "fusion_high", "(", "\n", "torch", ".", "cat", "(", "(", "rgb_high_feat", "+", "depth_high_feat", ",", "rgb_high_feat", "*", "depth_high_feat", ")", ",", "dim", "=", "1", ")", ")", "\n", "low_feat", "=", "self", ".", "fusion_low", "(", "\n", "torch", ".", "cat", "(", "(", "rgb_low_feat", "+", "depth_low_feat", ",", "rgb_low_feat", "*", "depth_low_feat", ")", ",", "dim", "=", "1", ")", ")", "\n", "\n", "high_feat", "=", "F", ".", "upsample", "(", "higt_feat", ",", "scale_factor", "=", "8", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "\n", "\n", "sal", "=", "self", ".", "last_conv", "(", "torch", ".", "cat", "(", "(", "high_feat", ",", "low_feat", ")", ",", "dim", "=", "1", ")", ")", "\n", "sal", "=", "F", ".", "upsample", "(", "sal", ",", "img", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "sal_rgb", "=", "F", ".", "upsample", "(", "sal_rgb", ",", "img", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "sal_depth", "=", "F", ".", "upsample", "(", "sal_depth", ",", "img", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "\n", "return", "sal", ",", "sal_rgb", ",", "sal_depth", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.BTSNet.softmax_2d": [[25, 27], ["torch.exp", "torch.exp", "torch.exp", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.exp", "torch.exp", "torch.exp"], "function", ["None"], ["", "", "def", "softmax_2d", "(", "x", ")", ":", "\n", "    ", "return", "torch", ".", "exp", "(", "x", ")", "/", "torch", ".", "sum", "(", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "x", ")", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", ",", "dim", "=", "-", "2", ",", "keepdim", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__": [[13, 42], ["torch.Module.__init__", "SPP.ASPP", "ResNet.ResNet18", "ResNet.ResNet34", "ResNet.ResNet50"], "methods", ["home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.__init__", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet18", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet34", "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.ResNet.ResNet50"], ["    ", "def", "__init__", "(", "self", ",", "nInputChannels", ",", "n_classes", ",", "os", ",", "backbone_type", ")", ":", "\n", "        ", "super", "(", "ResNet_ASPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "os", "=", "os", "\n", "self", ".", "backbone_type", "=", "backbone_type", "\n", "\n", "if", "os", "==", "16", ":", "\n", "            ", "rates", "=", "[", "1", ",", "6", ",", "12", ",", "18", "]", "\n", "", "elif", "os", "==", "8", "or", "os", "==", "32", ":", "\n", "            ", "rates", "=", "[", "1", ",", "12", ",", "24", ",", "36", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "if", "backbone_type", "==", "'resnet18'", ":", "\n", "            ", "self", ".", "backbone_features", "=", "ResNet18", "(", "nInputChannels", ",", "os", ",", "pretrained", "=", "False", ")", "\n", "", "elif", "backbone_type", "==", "'resnet34'", ":", "\n", "            ", "self", ".", "backbone_features", "=", "ResNet34", "(", "nInputChannels", ",", "os", ",", "pretrained", "=", "False", ")", "\n", "", "elif", "backbone_type", "==", "'resnet50'", ":", "\n", "            ", "self", ".", "backbone_features", "=", "ResNet50", "(", "nInputChannels", ",", "os", ",", "pretrained", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "asppInputChannels", "=", "512", "\n", "asppOutputChannels", "=", "256", "\n", "lowInputChannels", "=", "64", "\n", "lowOutputChannels", "=", "12", "\n", "if", "backbone_type", "==", "'resnet50'", ":", "asppInputChannels", "=", "2048", "\n", "\n", "self", ".", "aspp", "=", "ASPP", "(", "asppInputChannels", ",", "asppOutputChannels", ",", "rates", ")", "\n", "# self.last_conv_flow = nn.Sequential(", "\n"]], "home.repos.pwc.inspect_result.zwbx_BTS-Net.model.resnet_aspp.ResNet_ASPP.forward": [[52, 63], ["resnet_aspp.ResNet_ASPP.backbone_features", "resnet_aspp.ResNet_ASPP.aspp", "resnet_aspp.ResNet_ASPP.last_conv", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "torch.upsample", "input.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x", ",", "low_level_features", ",", "conv1_feat", ",", "layer2_feat", ",", "layer3_feat", "=", "self", ".", "backbone_features", "(", "input", ")", "\n", "layer4_feat", "=", "x", "\n", "if", "self", ".", "os", "==", "32", ":", "\n", "            ", "x", "=", "F", ".", "upsample", "(", "x", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "x", "=", "self", ".", "aspp", "(", "x", ")", "\n", "aspp_x", "=", "x", "\n", "x", "=", "self", ".", "last_conv", "(", "x", ")", "\n", "x", "=", "F", ".", "upsample", "(", "x", ",", "input", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "x", ",", "conv1_feat", ",", "low_level_features", ",", "layer2_feat", ",", "layer3_feat", ",", "layer4_feat", ",", "aspp_x", "\n", "", "", ""]]}