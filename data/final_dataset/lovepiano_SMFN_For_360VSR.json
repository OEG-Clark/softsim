{"home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.dbpn.Net.__init__": [[8, 54], ["torch.Module.__init__", "base_networks.ConvBlock", "base_networks.ConvBlock", "base_networks.UpBlock", "base_networks.DownBlock", "base_networks.UpBlock", "base_networks.D_DownBlock", "base_networks.D_UpBlock", "base_networks.D_DownBlock", "base_networks.D_UpBlock", "base_networks.D_DownBlock", "base_networks.D_UpBlock", "base_networks.D_DownBlock", "base_networks.D_UpBlock", "base_networks.D_DownBlock", "base_networks.D_UpBlock", "base_networks.ConvBlock", "dbpn.Net.modules", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_", "classname.find", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "base_filter", ",", "feat", ",", "num_stages", ",", "scale_factor", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "scale_factor", "==", "2", ":", "\n", "        \t", "kernel", "=", "6", "\n", "stride", "=", "2", "\n", "padding", "=", "2", "\n", "", "elif", "scale_factor", "==", "4", ":", "\n", "        \t", "kernel", "=", "8", "\n", "stride", "=", "4", "\n", "padding", "=", "2", "\n", "", "elif", "scale_factor", "==", "8", ":", "\n", "        \t", "kernel", "=", "12", "\n", "stride", "=", "8", "\n", "padding", "=", "2", "\n", "\n", "#Initial Feature Extraction", "\n", "", "self", ".", "feat0", "=", "ConvBlock", "(", "num_channels", ",", "feat", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", "\n", "self", ".", "feat1", "=", "ConvBlock", "(", "feat", ",", "base_filter", ",", "1", ",", "1", ",", "0", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", "\n", "#Back-projection stages", "\n", "self", ".", "up1", "=", "UpBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ")", "#1c  2de", "\n", "self", ".", "down1", "=", "DownBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ")", "#2c 1de", "\n", "self", ".", "up2", "=", "UpBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ")", "\n", "self", ".", "down2", "=", "D_DownBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "2", ")", "\n", "self", ".", "up3", "=", "D_UpBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "2", ")", "\n", "self", ".", "down3", "=", "D_DownBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "3", ")", "#3c  1de", "\n", "self", ".", "up4", "=", "D_UpBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "3", ")", "#2c 2de", "\n", "self", ".", "down4", "=", "D_DownBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "4", ")", "\n", "self", ".", "up5", "=", "D_UpBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "4", ")", "\n", "self", ".", "down5", "=", "D_DownBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "5", ")", "\n", "self", ".", "up6", "=", "D_UpBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "5", ")", "\n", "self", ".", "down6", "=", "D_DownBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "6", ")", "\n", "self", ".", "up7", "=", "D_UpBlock", "(", "base_filter", ",", "kernel", ",", "stride", ",", "padding", ",", "6", ")", "\n", "#Reconstruction", "\n", "self", ".", "output_conv", "=", "ConvBlock", "(", "num_stages", "*", "base_filter", ",", "num_channels", ",", "3", ",", "1", ",", "1", ",", "activation", "=", "None", ",", "norm", "=", "None", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv2d'", ")", "!=", "-", "1", ":", "\n", "        \t    ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "        \t\t    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'ConvTranspose2d'", ")", "!=", "-", "1", ":", "\n", "        \t    ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "        \t\t    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.dbpn.Net.forward": [[55, 97], ["dbpn.Net.feat0", "dbpn.Net.feat1", "dbpn.Net.up1", "dbpn.Net.down1", "dbpn.Net.up2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.down2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.up3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.down3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.up4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.down4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.up5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.down5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.up6", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.down6", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.up7", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dbpn.Net.output_conv"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "feat0", "(", "x", ")", "\n", "x", "=", "self", ".", "feat1", "(", "x", ")", "\n", "\n", "h1", "=", "self", ".", "up1", "(", "x", ")", "\n", "l1", "=", "self", ".", "down1", "(", "h1", ")", "\n", "h2", "=", "self", ".", "up2", "(", "l1", ")", "\n", "\n", "concat_h", "=", "torch", ".", "cat", "(", "(", "h2", ",", "h1", ")", ",", "1", ")", "\n", "l", "=", "self", ".", "down2", "(", "concat_h", ")", "\n", "\n", "concat_l", "=", "torch", ".", "cat", "(", "(", "l", ",", "l1", ")", ",", "1", ")", "\n", "h", "=", "self", ".", "up3", "(", "concat_l", ")", "\n", "\n", "concat_h", "=", "torch", ".", "cat", "(", "(", "h", ",", "concat_h", ")", ",", "1", ")", "\n", "l", "=", "self", ".", "down3", "(", "concat_h", ")", "\n", "\n", "concat_l", "=", "torch", ".", "cat", "(", "(", "l", ",", "concat_l", ")", ",", "1", ")", "\n", "h", "=", "self", ".", "up4", "(", "concat_l", ")", "\n", "\n", "concat_h", "=", "torch", ".", "cat", "(", "(", "h", ",", "concat_h", ")", ",", "1", ")", "\n", "l", "=", "self", ".", "down4", "(", "concat_h", ")", "\n", "\n", "concat_l", "=", "torch", ".", "cat", "(", "(", "l", ",", "concat_l", ")", ",", "1", ")", "\n", "h", "=", "self", ".", "up5", "(", "concat_l", ")", "\n", "\n", "concat_h", "=", "torch", ".", "cat", "(", "(", "h", ",", "concat_h", ")", ",", "1", ")", "\n", "l", "=", "self", ".", "down5", "(", "concat_h", ")", "\n", "\n", "concat_l", "=", "torch", ".", "cat", "(", "(", "l", ",", "concat_l", ")", ",", "1", ")", "\n", "h", "=", "self", ".", "up6", "(", "concat_l", ")", "\n", "\n", "concat_h", "=", "torch", ".", "cat", "(", "(", "h", ",", "concat_h", ")", ",", "1", ")", "\n", "l", "=", "self", ".", "down6", "(", "concat_h", ")", "\n", "\n", "concat_l", "=", "torch", ".", "cat", "(", "(", "l", ",", "concat_l", ")", ",", "1", ")", "\n", "h", "=", "self", ".", "up7", "(", "concat_l", ")", "\n", "\n", "concat_h", "=", "torch", ".", "cat", "(", "(", "h", ",", "concat_h", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "output_conv", "(", "concat_h", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_psnr.genERP": [[11, 16], ["math.cos", "math.cos"], "function", ["None"], ["def", "genERP", "(", "i", ",", "j", ",", "N", ")", ":", "\n", "    ", "val", "=", "math", ".", "pi", "/", "N", "\n", "# w_map[i+j*w] = cos ((j - (h/2) + 0.5) * PI/h)", "\n", "w", "=", "math", ".", "cos", "(", "(", "j", "-", "(", "N", "/", "2", ")", "+", "0.5", ")", "*", "val", ")", "\n", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_psnr.compute_map_ws": [[17, 28], ["numpy.zeros", "range", "range", "ws_psnr.genERP"], "function", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_psnr.genERP"], ["", "def", "compute_map_ws", "(", "img", ")", ":", "\n", "    ", "\"\"\"calculate weights for the sphere, the function provide weighting map for a given video\n        :img    the input original video\n    \"\"\"", "\n", "equ", "=", "np", ".", "zeros", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "for", "j", "in", "range", "(", "0", ",", "equ", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "0", ",", "equ", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "equ", "[", "j", ",", "i", "]", "=", "genERP", "(", "i", ",", "j", ",", "equ", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "", "return", "equ", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_psnr.getGlobalWSMSEValue": [[29, 39], ["ws_psnr.compute_map_ws", "numpy.sum", "print", "print", "print", "numpy.multiply", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_psnr.compute_map_ws"], ["", "def", "getGlobalWSMSEValue", "(", "mx", ",", "my", ")", ":", "\n", "\n", "    ", "mw", "=", "compute_map_ws", "(", "mx", ")", "\n", "val", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "(", "mx", "-", "my", ")", "**", "2", ",", "mw", ")", ")", "\n", "print", "(", "'w/o wieight ='", ",", "np", ".", "sum", "(", "(", "mx", "-", "my", ")", "**", "2", ")", ")", "\n", "print", "(", "'weight = '", ",", "np", ".", "sum", "(", "mw", ")", ")", "\n", "print", "(", "'before ws-mse='", ",", "val", ")", "\n", "den", "=", "val", "/", "np", ".", "sum", "(", "mw", ")", "\n", "\n", "return", "den", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_psnr.ws_psnr": [[40, 52], ["ws_psnr.getGlobalWSMSEValue", "print", "math.log10", "math.log10", "math.sqrt", "math.sqrt"], "function", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_psnr.getGlobalWSMSEValue"], ["", "def", "ws_psnr", "(", "image1", ",", "image2", ")", ":", "\n", "    ", "ws_mse", "=", "getGlobalWSMSEValue", "(", "image1", ",", "image2", ")", "\n", "print", "(", "'ws-mse='", ",", "ws_mse", ")", "\n", "# second estimate the ws_psnr ", "\n", "\n", "try", ":", "\n", "        ", "ws_psnr", "=", "20", "*", "math", ".", "log10", "(", "255.0", "/", "math", ".", "sqrt", "(", "ws_mse", ")", ")", "\n", "", "except", "ZeroDivisionError", ":", "\n", "        ", "ws_psnr", "=", "np", ".", "inf", "\n", "# print(\"WS-PSNR \",ws_psnr)", "\n", "\n", "", "return", "ws_psnr", "", "", ""]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.CharbonnierLoss.__init__": [[16, 19], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["def", "__init__", "(", "self", ",", "eps", "=", "1e-6", ")", ":", "\n", "        ", "super", "(", "CharbonnierLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.CharbonnierLoss.forward": [[20, 24], ["torch.sum", "torch.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "diff", "=", "x", "-", "y", "\n", "loss", "=", "torch", ".", "sum", "(", "torch", ".", "sqrt", "(", "diff", "*", "diff", "+", "self", ".", "eps", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.mse_weight_loss.__init__": [[27, 29], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "mse_weight_loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.mse_weight_loss.forward": [[30, 42], ["torch.zeros().cuda", "y.size", "range", "y.size", "range", "torch.sum", "torch.sum", "torch.zeros", "y.size", "math.cos", "y.size", "y.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "equ", "=", "torch", ".", "zeros", "(", "(", "y", ".", "size", "(", "2", ")", ",", "y", ".", "size", "(", "3", ")", ")", ")", ".", "cuda", "(", "0", ")", "\n", "N", "=", "y", ".", "size", "(", "2", ")", "\n", "for", "j", "in", "range", "(", "0", ",", "y", ".", "size", "(", "2", ")", ")", ":", "#hang", "\n", "            ", "for", "i", "in", "range", "(", "0", ",", "y", ".", "size", "(", "3", ")", ")", ":", "#lie", "\n", "                ", "val", "=", "math", ".", "pi", "/", "N", "\n", "equ", "[", "j", ",", "i", "]", "=", "math", ".", "cos", "(", "(", "j", "-", "(", "N", "/", "2", ")", "+", "0.5", ")", "*", "val", ")", "\n", "\n", "#weight_value = torch.from_numpy(weight_value[np.newaxis,:, :]).cuda(gpus_list[0])", "\n", "", "", "diff", "=", "x", "-", "y", "\n", "loss", "=", "torch", ".", "sum", "(", "(", "diff", "*", "diff", ")", "*", "equ", ")", "/", "torch", ".", "sum", "(", "equ", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.TrainsetLoader.__init__": [[45, 53], ["torch.utils.data.dataset.Dataset.__init__", "os.listdir"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "trainset_dir_hr", ",", "trainset_dir_lr", ",", "upscale_factor", ",", "patch_size", ",", "n_iters", ")", ":", "\n", "        ", "super", "(", "TrainsetLoader", ")", ".", "__init__", "(", ")", "\n", "self", ".", "trainset_dir_hr", "=", "trainset_dir_hr", "\n", "self", ".", "trainset_dir_lr", "=", "trainset_dir_lr", "\n", "self", ".", "upscale_factor", "=", "upscale_factor", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "n_iters", "=", "n_iters", "\n", "self", ".", "video_list", "=", "os", ".", "listdir", "(", "trainset_dir_hr", ")", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.TrainsetLoader.__getitem__": [[53, 113], ["random.randint", "random.randint", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "data_utils.rgb2y", "data_utils.rgb2y", "data_utils.rgb2y", "data_utils.rgb2y", "data_utils.rgb2y", "data_utils.rgb2y", "data_utils.random_crop", "skimage.feature.canny", "skimage.feature.canny", "torch.from_numpy", "LR1_texture.type.type.type", "numpy.concatenate", "numpy.concatenate", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "data_utils.augumentation", "data_utils.toTensor", "data_utils.toTensor", "data_utils.TrainsetLoader.video_list.__len__", "str().rjust", "str().rjust", "str().rjust", "str().rjust", "str().rjust", "str().rjust", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.random_crop", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.toTensor", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.toTensor", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.TestsetLoader.__len__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx_video", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "video_list", ".", "__len__", "(", ")", "-", "1", ")", "\n", "idx_frame", "=", "random", ".", "randint", "(", "1", ",", "98", ")", "\n", "lr_dir", "=", "self", ".", "trainset_dir_lr", "+", "'/'", "+", "self", ".", "video_list", "[", "idx_video", "]", "\n", "hr_dir", "=", "self", ".", "trainset_dir_hr", "+", "'/'", "+", "self", ".", "video_list", "[", "idx_video", "]", "\n", "# read HR & LR frames", "\n", "LR0", "=", "Image", ".", "open", "(", "lr_dir", "+", "'/'", "+", "str", "(", "idx_frame", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "LR1", "=", "Image", ".", "open", "(", "lr_dir", "+", "'/'", "+", "str", "(", "idx_frame", "+", "1", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "LR2", "=", "Image", ".", "open", "(", "lr_dir", "+", "'/'", "+", "str", "(", "idx_frame", "+", "2", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "HR0", "=", "Image", ".", "open", "(", "hr_dir", "+", "'/'", "+", "str", "(", "idx_frame", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "HR1", "=", "Image", ".", "open", "(", "hr_dir", "+", "'/'", "+", "str", "(", "idx_frame", "+", "1", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "HR2", "=", "Image", ".", "open", "(", "hr_dir", "+", "'/'", "+", "str", "(", "idx_frame", "+", "2", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "\n", "LR0", "=", "np", ".", "array", "(", "LR0", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "LR1", "=", "np", ".", "array", "(", "LR1", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "LR2", "=", "np", ".", "array", "(", "LR2", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "HR0", "=", "np", ".", "array", "(", "HR0", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "HR1", "=", "np", ".", "array", "(", "HR1", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "HR2", "=", "np", ".", "array", "(", "HR2", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "# extract Y channel for LR inputs", "\n", "\n", "HR0", "=", "rgb2y", "(", "HR0", ")", "\n", "HR1", "=", "rgb2y", "(", "HR1", ")", "\n", "HR2", "=", "rgb2y", "(", "HR2", ")", "\n", "LR0", "=", "rgb2y", "(", "LR0", ")", "\n", "LR1", "=", "rgb2y", "(", "LR1", ")", "\n", "LR2", "=", "rgb2y", "(", "LR2", ")", "\n", "\n", "\n", "# img = Image.fromarray(np.uint8(LR1_texture))", "\n", "# img.save('new1.jpg')", "\n", "\n", "# crop patchs randomly", "\n", "HR0", ",", "HR1", ",", "HR2", ",", "LR0", ",", "LR1", ",", "LR2", ",", "start_h", ",", "end_h", ",", "start_w", ",", "end_w", "=", "random_crop", "(", "HR0", ",", "HR1", ",", "HR2", ",", "LR0", ",", "LR1", ",", "LR2", ",", "self", ".", "patch_size", ",", "self", ".", "upscale_factor", ")", "\n", "HR1_texture", "=", "feature", ".", "canny", "(", "HR1", ")", "\n", "LR1_texture", "=", "feature", ".", "canny", "(", "LR1", ")", "\n", "LR1_texture", "=", "torch", ".", "from_numpy", "(", "LR1_texture", ")", "\n", "LR1_texture", "=", "LR1_texture", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "# HR0 = HR0[:, :, np.newaxis]", "\n", "# HR1 = HR1[:, :, np.newaxis]", "\n", "# HR2 = HR2[:, :, np.newaxis]", "\n", "# LR0 = LR0[:, :, np.newaxis]", "\n", "# LR1 = LR1[:, :, np.newaxis]", "\n", "# LR2 = LR2[:, :, np.newaxis]", "\n", "\n", "# HR = np.concatenate((HR0, HR1, HR2), axis=2)", "\n", "# LR = np.concatenate((LR0, LR1, LR2), axis=2)", "\n", "HR0", "=", "HR0", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "HR1", "=", "HR1", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "HR2", "=", "HR2", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "LR0", "=", "LR0", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "LR1", "=", "LR1", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "LR2", "=", "LR2", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "# print(LR1.shape)", "\n", "\n", "HR", "=", "np", ".", "concatenate", "(", "(", "HR0", ",", "HR1", ",", "HR2", ")", ",", "axis", "=", "3", ")", "\n", "LR", "=", "np", ".", "concatenate", "(", "(", "LR0", ",", "LR1", ",", "LR2", ")", ",", "axis", "=", "3", ")", "\n", "# data augmentation", "\n", "LR", ",", "HR", "=", "augumentation", "(", ")", "(", "LR", ",", "HR", ")", "\n", "return", "toTensor", "(", "LR", ")", ",", "toTensor", "(", "HR", ")", ",", "HR1_texture", ",", "LR1_texture", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.TrainsetLoader.__len__": [[113, 115], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_iters", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.ValidationsetLoader.__init__": [[117, 125], ["torch.utils.data.dataset.Dataset.__init__", "sorted", "os.listdir", "len", "len"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "validate_dir_hr", ",", "validate_dir_lr", ")", ":", "\n", "        ", "super", "(", "TrainsetLoader", ")", ".", "__init__", "(", ")", "\n", "self", ".", "validate_dir_hr", "=", "validate_dir_hr", "\n", "self", ".", "validate_dir_lr", "=", "validate_dir_lr", "\n", "self", ".", "video_list", "=", "sorted", "(", "os", ".", "listdir", "(", "validate_dir_hr", ")", ")", "\n", "self", ".", "idx_frame", "=", "0", "\n", "self", ".", "idx_video", "=", "-", "1", "#\u4ee3\u8868\u7b2c\u51e0\u4e2a\u89c6\u9891", "\n", "self", ".", "n_iters", "=", "100", "*", "len", "(", "self", ".", "video_list", ")", "-", "2", "*", "len", "(", "self", ".", "video_list", ")", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.ValidationsetLoader.__getitem__": [[125, 163], ["PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "rgb2y.resize", "data_utils.rgb2ycbcr", "data_utils.rgb2y", "data_utils.rgb2y", "data_utils.rgb2y", "data_utils.rgb2ycbcr", "numpy.concatenate", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "data_utils.toTensor", "data_utils.toTensor", "str().rjust", "str().rjust", "str().rjust", "str().rjust", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2ycbcr", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2ycbcr", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.toTensor", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.toTensor"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "if", "idx", "%", "98", "==", "0", ":", "\n", "            ", "self", ".", "idx_video", "=", "self", ".", "idx_video", "+", "1", "\n", "self", ".", "idx_frame", "=", "0", "\n", "\n", "", "self", ".", "idx_frame", "=", "self", ".", "idx_frame", "+", "1", "\n", "lr_dir", "=", "self", ".", "validate_dir_lr", "+", "'/'", "+", "self", ".", "video_list", "[", "self", ".", "idx_video", "]", "\n", "hr_dir", "=", "self", ".", "validate_dir_hr", "+", "'/'", "+", "self", ".", "video_list", "[", "self", ".", "idx_video", "]", "\n", "# read HR & LR frames", "\n", "LR0", "=", "Image", ".", "open", "(", "lr_dir", "+", "'/'", "+", "str", "(", "self", ".", "idx_frame", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "LR1", "=", "Image", ".", "open", "(", "lr_dir", "+", "'/'", "+", "str", "(", "self", ".", "idx_frame", "+", "1", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "LR2", "=", "Image", ".", "open", "(", "lr_dir", "+", "'/'", "+", "str", "(", "self", ".", "idx_frame", "+", "2", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "HR1", "=", "Image", ".", "open", "(", "hr_dir", "+", "'/'", "+", "str", "(", "self", ".", "idx_frame", "+", "1", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "\n", "W", ",", "H", "=", "LR1", ".", "size", "\n", "LR1_bicubic", "=", "LR1", ".", "resize", "(", "(", "W", "*", "4", ",", "H", "*", "4", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "LR1_bicubic", "=", "np", ".", "array", "(", "LR1_bicubic", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "_", ",", "SR_cb", ",", "SR_cr", "=", "rgb2ycbcr", "(", "LR1_bicubic", ")", "\n", "\n", "LR0", "=", "np", ".", "array", "(", "LR0", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "LR1", "=", "np", ".", "array", "(", "LR1", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "LR2", "=", "np", ".", "array", "(", "LR2", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "HR1", "=", "np", ".", "array", "(", "HR1", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "# extract Y channel for LR inputs", "\n", "\n", "LR0", "=", "rgb2y", "(", "LR0", ")", "\n", "LR1", "=", "rgb2y", "(", "LR1", ")", "\n", "LR2", "=", "rgb2y", "(", "LR2", ")", "\n", "HR1", ",", "HR1_cb", ",", "HR1_cr", "=", "rgb2ycbcr", "(", "HR1", ")", "\n", "\n", "LR0", "=", "LR0", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "LR1", "=", "LR1", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "LR2", "=", "LR2", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "HR", "=", "HR1", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "\n", "LR", "=", "np", ".", "concatenate", "(", "(", "LR0", ",", "LR1", ",", "LR2", ")", ",", "axis", "=", "3", ")", "\n", "return", "toTensor", "(", "LR", ")", ",", "toTensor", "(", "HR", ")", ",", "SR_cb", ",", "SR_cr", ",", "idx", ",", "LR1_bicubic", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.ValidationsetLoader.__len__": [[163, 165], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_iters", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.TestsetLoader.__init__": [[167, 175], ["torch.utils.data.dataset.Dataset.__init__", "sorted", "os.listdir", "len", "len"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dir_hr", ",", "dir_lr", ")", ":", "\n", "            ", "super", "(", "TestsetLoader", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dir_hr", "=", "dir_hr", "\n", "self", ".", "dir_lr", "=", "dir_lr", "\n", "self", ".", "video_list", "=", "sorted", "(", "os", ".", "listdir", "(", "dir_hr", ")", ")", "\n", "self", ".", "idx_frame", "=", "0", "\n", "self", ".", "idx_video", "=", "-", "1", "#\u4ee3\u8868\u7b2c\u51e0\u4e2a\u89c6\u9891", "\n", "self", ".", "n_iters", "=", "100", "*", "len", "(", "self", ".", "video_list", ")", "-", "2", "*", "len", "(", "self", ".", "video_list", ")", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.TestsetLoader.__getitem__": [[175, 213], ["PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "rgb2y.resize", "data_utils.rgb2ycbcr", "data_utils.rgb2y", "data_utils.rgb2y", "data_utils.rgb2y", "data_utils.rgb2ycbcr", "numpy.concatenate", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "data_utils.toTensor2", "data_utils.toTensor2", "str().rjust", "str().rjust", "str().rjust", "str().rjust", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2ycbcr", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2ycbcr", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.toTensor2", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.toTensor2"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "if", "idx", "%", "98", "==", "0", ":", "\n", "            ", "self", ".", "idx_video", "=", "self", ".", "idx_video", "+", "1", "\n", "self", ".", "idx_frame", "=", "0", "\n", "\n", "", "self", ".", "idx_frame", "=", "self", ".", "idx_frame", "+", "1", "\n", "lr_dir", "=", "self", ".", "dir_lr", "+", "'/'", "+", "self", ".", "video_list", "[", "self", ".", "idx_video", "]", "\n", "hr_dir", "=", "self", ".", "dir_hr", "+", "'/'", "+", "self", ".", "video_list", "[", "self", ".", "idx_video", "]", "\n", "# read HR & LR frames", "\n", "LR0", "=", "Image", ".", "open", "(", "lr_dir", "+", "'/'", "+", "str", "(", "self", ".", "idx_frame", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "LR1", "=", "Image", ".", "open", "(", "lr_dir", "+", "'/'", "+", "str", "(", "self", ".", "idx_frame", "+", "1", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "LR2", "=", "Image", ".", "open", "(", "lr_dir", "+", "'/'", "+", "str", "(", "self", ".", "idx_frame", "+", "2", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "HR1", "=", "Image", ".", "open", "(", "hr_dir", "+", "'/'", "+", "str", "(", "self", ".", "idx_frame", "+", "1", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "\n", "W", ",", "H", "=", "LR1", ".", "size", "\n", "LR1_bicubic", "=", "LR1", ".", "resize", "(", "(", "W", "*", "4", ",", "H", "*", "4", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "LR1_bicubic", "=", "np", ".", "array", "(", "LR1_bicubic", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "_", ",", "SR_cb", ",", "SR_cr", "=", "rgb2ycbcr", "(", "LR1_bicubic", ")", "\n", "\n", "LR0", "=", "np", ".", "array", "(", "LR0", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "LR1", "=", "np", ".", "array", "(", "LR1", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "LR2", "=", "np", ".", "array", "(", "LR2", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "HR1", "=", "np", ".", "array", "(", "HR1", ",", "dtype", "=", "np", ".", "float32", ")", "/", "255.0", "\n", "# extract Y channel for LR inputs", "\n", "\n", "LR0", "=", "rgb2y", "(", "LR0", ")", "\n", "LR1", "=", "rgb2y", "(", "LR1", ")", "\n", "LR2", "=", "rgb2y", "(", "LR2", ")", "\n", "HR1", ",", "HR1_cb", ",", "HR1_cr", "=", "rgb2ycbcr", "(", "HR1", ")", "\n", "\n", "LR0", "=", "LR0", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "LR1", "=", "LR1", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "LR2", "=", "LR2", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "HR", "=", "HR1", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "LR", "=", "np", ".", "concatenate", "(", "(", "LR0", ",", "LR1", ",", "LR2", ")", ",", "axis", "=", "2", ")", "\n", "return", "toTensor2", "(", "LR", ")", ",", "toTensor2", "(", "HR", ")", ",", "SR_cb", ",", "SR_cr", ",", "idx", ",", "LR1_bicubic", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.TestsetLoader.__len__": [[213, 215], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_iters", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.augumentation.__call__": [[217, 228], ["random.random", "random.random", "random.random", "input.transpose.transpose.transpose", "target.transpose.transpose.transpose", "numpy.ascontiguousarray", "numpy.ascontiguousarray"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "input", "=", "input", "[", ":", ",", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "target", "=", "target", "[", ":", ",", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "input", "=", "input", "[", ":", ":", "-", "1", ",", ":", ",", ":", ",", ":", "]", "\n", "target", "=", "target", "[", ":", ":", "-", "1", ",", ":", ",", ":", ",", ":", "]", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "input", "=", "input", ".", "transpose", "(", "1", ",", "0", ",", "2", ",", "3", ")", "\n", "target", "=", "target", ".", "transpose", "(", "1", ",", "0", ",", "2", ",", "3", ")", "\n", "", "return", "np", ".", "ascontiguousarray", "(", "input", ")", ",", "np", ".", "ascontiguousarray", "(", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.random_crop": [[230, 254], ["random.randint", "random.randint"], "function", ["None"], ["", "", "def", "random_crop", "(", "HR0", ",", "HR1", ",", "HR2", ",", "LR0", ",", "LR1", ",", "LR2", ",", "patch_size_lr", ",", "upscale_factor", ")", ":", "\n", "    ", "h_hr", ",", "w_hr", "=", "HR0", ".", "shape", "\n", "h_lr", "=", "h_hr", "//", "upscale_factor", "\n", "w_lr", "=", "w_hr", "//", "upscale_factor", "\n", "idx_h", "=", "random", ".", "randint", "(", "10", ",", "h_lr", "-", "patch_size_lr", "-", "10", ")", "\n", "idx_w", "=", "random", ".", "randint", "(", "10", ",", "w_lr", "-", "patch_size_lr", "-", "10", ")", "\n", "\n", "h_start_hr", "=", "(", "idx_h", "-", "1", ")", "*", "upscale_factor", "\n", "h_end_hr", "=", "(", "idx_h", "-", "1", "+", "patch_size_lr", ")", "*", "upscale_factor", "\n", "w_start_hr", "=", "(", "idx_w", "-", "1", ")", "*", "upscale_factor", "\n", "w_end_hr", "=", "(", "idx_w", "-", "1", "+", "patch_size_lr", ")", "*", "upscale_factor", "\n", "\n", "h_start_lr", "=", "idx_h", "-", "1", "\n", "h_end_lr", "=", "idx_h", "-", "1", "+", "patch_size_lr", "\n", "w_start_lr", "=", "idx_w", "-", "1", "\n", "w_end_lr", "=", "idx_w", "-", "1", "+", "patch_size_lr", "\n", "\n", "HR0", "=", "HR0", "[", "h_start_hr", ":", "h_end_hr", ",", "w_start_hr", ":", "w_end_hr", "]", "\n", "HR1", "=", "HR1", "[", "h_start_hr", ":", "h_end_hr", ",", "w_start_hr", ":", "w_end_hr", "]", "\n", "HR2", "=", "HR2", "[", "h_start_hr", ":", "h_end_hr", ",", "w_start_hr", ":", "w_end_hr", "]", "\n", "LR0", "=", "LR0", "[", "h_start_lr", ":", "h_end_lr", ",", "w_start_lr", ":", "w_end_lr", "]", "\n", "LR1", "=", "LR1", "[", "h_start_lr", ":", "h_end_lr", ",", "w_start_lr", ":", "w_end_lr", "]", "\n", "LR2", "=", "LR2", "[", "h_start_lr", ":", "h_end_lr", ",", "w_start_lr", ":", "w_end_lr", "]", "\n", "return", "HR0", ",", "HR1", ",", "HR2", ",", "LR0", ",", "LR1", ",", "LR2", ",", "h_start_hr", ",", "h_end_hr", ",", "w_start_hr", ",", "w_end_hr", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.toTensor": [[255, 259], ["torch.from_numpy", "torch.from_numpy.float().div", "torch.from_numpy.transpose", "torch.from_numpy.float"], "function", ["None"], ["", "def", "toTensor", "(", "img", ")", ":", "\n", "    ", "img", "=", "torch", ".", "from_numpy", "(", "img", ".", "transpose", "(", "(", "3", ",", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "img", ".", "float", "(", ")", ".", "div", "(", "255", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.toTensor2": [[260, 264], ["torch.from_numpy", "torch.from_numpy.float().div", "torch.from_numpy.transpose", "torch.from_numpy.float"], "function", ["None"], ["", "def", "toTensor2", "(", "img", ")", ":", "\n", "    ", "img", "=", "torch", ".", "from_numpy", "(", "img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "img", ".", "float", "(", ")", ".", "div", "(", "255", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2ycbcr": [[265, 271], ["None"], "function", ["None"], ["", "def", "rgb2ycbcr", "(", "img_rgb", ")", ":", "\n", "## the range of img_rgb should be (0, 1)", "\n", "    ", "img_y", "=", "0.257", "*", "img_rgb", "[", ":", ",", ":", ",", "0", "]", "+", "0.504", "*", "img_rgb", "[", ":", ",", ":", ",", "1", "]", "+", "0.098", "*", "img_rgb", "[", ":", ",", ":", ",", "2", "]", "+", "16", "/", "255.0", "\n", "img_cb", "=", "-", "0.148", "*", "img_rgb", "[", ":", ",", ":", ",", "0", "]", "-", "0.291", "*", "img_rgb", "[", ":", ",", ":", ",", "1", "]", "+", "0.439", "*", "img_rgb", "[", ":", ",", ":", ",", "2", "]", "+", "128", "/", "255.0", "\n", "img_cr", "=", "0.439", "*", "img_rgb", "[", ":", ",", ":", ",", "0", "]", "-", "0.368", "*", "img_rgb", "[", ":", ",", ":", ",", "1", "]", "-", "0.071", "*", "img_rgb", "[", ":", ",", ":", ",", "2", "]", "+", "128", "/", "255.0", "\n", "return", "img_y", ",", "img_cb", ",", "img_cr", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.ycbcr2rgb": [[272, 282], ["numpy.concatenate"], "function", ["None"], ["", "def", "ycbcr2rgb", "(", "img_ycbcr", ")", ":", "\n", "## the range of img_ycbcr should be (0, 1)", "\n", "    ", "img_r", "=", "1.164", "*", "(", "img_ycbcr", "[", ":", ",", ":", ",", "0", "]", "-", "16", "/", "255.0", ")", "+", "1.596", "*", "(", "img_ycbcr", "[", ":", ",", ":", ",", "2", "]", "-", "128", "/", "255.0", ")", "\n", "img_g", "=", "1.164", "*", "(", "img_ycbcr", "[", ":", ",", ":", ",", "0", "]", "-", "16", "/", "255.0", ")", "-", "0.392", "*", "(", "img_ycbcr", "[", ":", ",", ":", ",", "1", "]", "-", "128", "/", "255.0", ")", "-", "0.813", "*", "(", "img_ycbcr", "[", ":", ",", ":", ",", "2", "]", "-", "128", "/", "255.0", ")", "\n", "img_b", "=", "1.164", "*", "(", "img_ycbcr", "[", ":", ",", ":", ",", "0", "]", "-", "16", "/", "255.0", ")", "+", "2.017", "*", "(", "img_ycbcr", "[", ":", ",", ":", ",", "1", "]", "-", "128", "/", "255.0", ")", "\n", "img_r", "=", "img_r", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "img_g", "=", "img_g", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "img_b", "=", "img_b", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "img_rgb", "=", "np", ".", "concatenate", "(", "(", "img_r", ",", "img_g", ",", "img_b", ")", ",", "2", ")", "\n", "return", "img_rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.rgb2y": [[283, 287], ["None"], "function", ["None"], ["", "def", "rgb2y", "(", "img_rgb", ")", ":", "\n", "## the range of img_rgb should be (0, 1)", "\n", "    ", "image_y", "=", "0.257", "*", "img_rgb", "[", ":", ",", ":", ",", "0", "]", "+", "0.504", "*", "img_rgb", "[", ":", ",", ":", ",", "1", "]", "+", "0.098", "*", "img_rgb", "[", ":", ",", ":", ",", "2", "]", "+", "16", "/", "255.0", "\n", "return", "image_y", "\n", "", ""]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.PCD_Align.__init__": [[23, 52], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "DCN", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "DCN", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "DCN", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "DCN", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["def", "__init__", "(", "self", ",", "nf", "=", "64", ",", "groups", "=", "8", ")", ":", "\n", "        ", "super", "(", "PCD_Align", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# L3: level 3, 1/4 spatial size", "\n", "self", ".", "L3_offset_conv1", "=", "nn", ".", "Conv2d", "(", "nf", "*", "2", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "# concat for diff", "\n", "self", ".", "L3_offset_conv2", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "L3_dcnpack", "=", "DCN", "(", "nf", ",", "nf", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "deformable_groups", "=", "groups", ",", "\n", "extra_offset_mask", "=", "True", ")", "\n", "# L2: level 2, 1/2 spatial size", "\n", "self", ".", "L2_offset_conv1", "=", "nn", ".", "Conv2d", "(", "nf", "*", "2", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "# concat for diff", "\n", "self", ".", "L2_offset_conv2", "=", "nn", ".", "Conv2d", "(", "nf", "*", "2", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "# concat for offset", "\n", "self", ".", "L2_offset_conv3", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "L2_dcnpack", "=", "DCN", "(", "nf", ",", "nf", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "deformable_groups", "=", "groups", ",", "\n", "extra_offset_mask", "=", "True", ")", "\n", "self", ".", "L2_fea_conv", "=", "nn", ".", "Conv2d", "(", "nf", "*", "2", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "# concat for fea", "\n", "# L1: level 1, original spatial size", "\n", "self", ".", "L1_offset_conv1", "=", "nn", ".", "Conv2d", "(", "nf", "*", "2", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "# concat for diff", "\n", "self", ".", "L1_offset_conv2", "=", "nn", ".", "Conv2d", "(", "nf", "*", "2", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "# concat for offset", "\n", "self", ".", "L1_offset_conv3", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "L1_dcnpack", "=", "DCN", "(", "nf", ",", "nf", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "deformable_groups", "=", "groups", ",", "\n", "extra_offset_mask", "=", "True", ")", "\n", "self", ".", "L1_fea_conv", "=", "nn", ".", "Conv2d", "(", "nf", "*", "2", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "# concat for fea", "\n", "# Cascading DCN", "\n", "self", ".", "cas_offset_conv1", "=", "nn", ".", "Conv2d", "(", "nf", "*", "2", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "# concat for diff", "\n", "self", ".", "cas_offset_conv2", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "cas_dcnpack", "=", "DCN", "(", "nf", ",", "nf", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "deformable_groups", "=", "groups", ",", "\n", "extra_offset_mask", "=", "True", ")", "\n", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.PCD_Align.forward": [[53, 87], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.PCD_Align.lrelu", "modules.PCD_Align.lrelu", "modules.PCD_Align.lrelu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.PCD_Align.lrelu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "modules.PCD_Align.lrelu", "modules.PCD_Align.lrelu", "modules.PCD_Align.L2_dcnpack", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "modules.PCD_Align.lrelu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.PCD_Align.lrelu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "modules.PCD_Align.lrelu", "modules.PCD_Align.lrelu", "modules.PCD_Align.L1_dcnpack", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "modules.PCD_Align.L1_fea_conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.PCD_Align.lrelu", "modules.PCD_Align.lrelu", "modules.PCD_Align.lrelu", "modules.PCD_Align.L3_offset_conv1", "modules.PCD_Align.L3_offset_conv2", "modules.PCD_Align.L3_dcnpack", "modules.PCD_Align.L2_offset_conv1", "modules.PCD_Align.L2_offset_conv2", "modules.PCD_Align.L2_offset_conv3", "modules.PCD_Align.L2_fea_conv", "modules.PCD_Align.L1_offset_conv1", "modules.PCD_Align.L1_offset_conv2", "modules.PCD_Align.L1_offset_conv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.PCD_Align.cas_offset_conv1", "modules.PCD_Align.cas_offset_conv2", "modules.PCD_Align.cas_dcnpack", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "nbr_fea_l", ",", "ref_fea_l", ")", ":", "\n", "        ", "'''align other neighboring frames to the reference frame in the feature level\n        nbr_fea_l, ref_fea_l: [L1, L2, L3], each with [B,C,H,W] features\n        '''", "\n", "# L3", "\n", "L3_offset", "=", "torch", ".", "cat", "(", "[", "nbr_fea_l", "[", "2", "]", ",", "ref_fea_l", "[", "2", "]", "]", ",", "dim", "=", "1", ")", "\n", "L3_offset", "=", "self", ".", "lrelu", "(", "self", ".", "L3_offset_conv1", "(", "L3_offset", ")", ")", "\n", "L3_offset", "=", "self", ".", "lrelu", "(", "self", ".", "L3_offset_conv2", "(", "L3_offset", ")", ")", "\n", "L3_fea", "=", "self", ".", "lrelu", "(", "self", ".", "L3_dcnpack", "(", "[", "nbr_fea_l", "[", "2", "]", ",", "L3_offset", "]", ")", ")", "\n", "# L2", "\n", "L2_offset", "=", "torch", ".", "cat", "(", "[", "nbr_fea_l", "[", "1", "]", ",", "ref_fea_l", "[", "1", "]", "]", ",", "dim", "=", "1", ")", "\n", "L2_offset", "=", "self", ".", "lrelu", "(", "self", ".", "L2_offset_conv1", "(", "L2_offset", ")", ")", "\n", "L3_offset", "=", "F", ".", "interpolate", "(", "L3_offset", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "L2_offset", "=", "self", ".", "lrelu", "(", "self", ".", "L2_offset_conv2", "(", "torch", ".", "cat", "(", "[", "L2_offset", ",", "L3_offset", "*", "2", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "L2_offset", "=", "self", ".", "lrelu", "(", "self", ".", "L2_offset_conv3", "(", "L2_offset", ")", ")", "\n", "L2_fea", "=", "self", ".", "L2_dcnpack", "(", "[", "nbr_fea_l", "[", "1", "]", ",", "L2_offset", "]", ")", "\n", "L3_fea", "=", "F", ".", "interpolate", "(", "L3_fea", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "L2_fea", "=", "self", ".", "lrelu", "(", "self", ".", "L2_fea_conv", "(", "torch", ".", "cat", "(", "[", "L2_fea", ",", "L3_fea", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "# L1", "\n", "L1_offset", "=", "torch", ".", "cat", "(", "[", "nbr_fea_l", "[", "0", "]", ",", "ref_fea_l", "[", "0", "]", "]", ",", "dim", "=", "1", ")", "\n", "L1_offset", "=", "self", ".", "lrelu", "(", "self", ".", "L1_offset_conv1", "(", "L1_offset", ")", ")", "\n", "L2_offset", "=", "F", ".", "interpolate", "(", "L2_offset", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "L1_offset", "=", "self", ".", "lrelu", "(", "self", ".", "L1_offset_conv2", "(", "torch", ".", "cat", "(", "[", "L1_offset", ",", "L2_offset", "*", "2", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "L1_offset", "=", "self", ".", "lrelu", "(", "self", ".", "L1_offset_conv3", "(", "L1_offset", ")", ")", "\n", "L1_fea", "=", "self", ".", "L1_dcnpack", "(", "[", "nbr_fea_l", "[", "0", "]", ",", "L1_offset", "]", ")", "\n", "L2_fea", "=", "F", ".", "interpolate", "(", "L2_fea", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "L1_fea", "=", "self", ".", "L1_fea_conv", "(", "torch", ".", "cat", "(", "[", "L1_fea", ",", "L2_fea", "]", ",", "dim", "=", "1", ")", ")", "\n", "# Cascading", "\n", "offset", "=", "torch", ".", "cat", "(", "[", "L1_fea", ",", "ref_fea_l", "[", "0", "]", "]", ",", "dim", "=", "1", ")", "\n", "offset", "=", "self", ".", "lrelu", "(", "self", ".", "cas_offset_conv1", "(", "offset", ")", ")", "\n", "offset", "=", "self", ".", "lrelu", "(", "self", ".", "cas_offset_conv2", "(", "offset", ")", ")", "\n", "L1_fea", "=", "self", ".", "lrelu", "(", "self", ".", "cas_dcnpack", "(", "[", "L1_fea", ",", "offset", "]", ")", ")", "\n", "\n", "return", "L1_fea", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.dual_network.__init__": [[89, 95], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "dual_network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "# self.conv1 = nn.Conv2d(1,64,kernel_size=3,stride=2,padding=1,bias=False)", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.dual_network.forward": [[96, 101], ["modules.dual_network.conv1", "modules.dual_network.lrelu", "modules.dual_network.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "lrelu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.make_dense.__init__": [[104, 109], ["torch.Module.__init__", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels_in", ",", "channels_out", ",", "kernel_size", "=", "3", ")", ":", "\n", "        ", "super", "(", "make_dense", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "leaky_relu", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "channels_in", ",", "channels_out", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "\n", "bias", "=", "False", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.make_dense.forward": [[109, 113], ["modules.make_dense.leaky_relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.make_dense.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "leaky_relu", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "x", ",", "out", ")", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.RDB.__init__": [[115, 125], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "modules.append", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "modules.make_dense"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nDenselayer", ",", "channels", ",", "growth", ")", ":", "\n", "        ", "super", "(", "RDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules", "=", "[", "]", "\n", "channels_buffer", "=", "channels", "\n", "for", "i", "in", "range", "(", "nDenselayer", ")", ":", "\n", "            ", "modules", ".", "append", "(", "make_dense", "(", "channels_buffer", ",", "growth", ")", ")", "\n", "channels_buffer", "+=", "growth", "\n", "", "self", ".", "dense_layers", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "self", ".", "conv_1x1", "=", "nn", ".", "Conv2d", "(", "channels_buffer", ",", "channels", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "0", "]", ")", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.RDB.forward": [[125, 131], ["modules.RDB.dense_layers", "modules.RDB.conv_1x1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "dense_layers", "(", "x", ")", "\n", "out", "=", "self", ".", "conv_1x1", "(", "out", ")", "\n", "# out = out + x", "\n", "out", "=", "out", "*", "self", ".", "weight", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.SRnet.__init__": [[134, 152], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "modules.RDB", "modules.RDB", "modules.RDB", "modules.RDB", "modules.RDB", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "upscale_factor", ",", "is_training", ")", ":", "\n", "        ", "super", "(", "SRnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "192", ",", "64", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "RDB_1", "=", "RDB", "(", "5", ",", "64", ",", "32", ")", "\n", "self", ".", "RDB_2", "=", "RDB", "(", "5", ",", "64", ",", "32", ")", "\n", "self", ".", "RDB_3", "=", "RDB", "(", "5", ",", "64", ",", "32", ")", "\n", "self", ".", "RDB_4", "=", "RDB", "(", "5", ",", "64", ",", "32", ")", "\n", "self", ".", "RDB_5", "=", "RDB", "(", "5", ",", "64", ",", "32", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv2d", "(", "384", ",", "384", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_3", "=", "nn", ".", "Conv2d", "(", "384", ",", "384", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bottleneck", "=", "nn", ".", "Conv2d", "(", "384", ",", "upscale_factor", "**", "2", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_4", "=", "nn", ".", "Conv2d", "(", "upscale_factor", "**", "2", ",", "upscale_factor", "**", "2", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "shuffle", "=", "nn", ".", "PixelShuffle", "(", "upscale_factor", "=", "upscale_factor", ")", "\n", "self", ".", "last", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "is_training", "=", "is_training", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "# self.sa_ca = spatial_channel_attention2()", "\n", "self", ".", "conv_sa_ca", "=", "nn", ".", "Conv2d", "(", "64", ",", "384", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.SRnet.forward": [[152, 173], ["x.size", "modules.SRnet.conv", "modules.SRnet.RDB_1", "modules.SRnet.RDB_2", "modules.SRnet.RDB_3", "modules.SRnet.RDB_4", "modules.SRnet.RDB_5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.SRnet.conv_2", "modules.SRnet.lrelu", "modules.SRnet.conv_3", "modules.SRnet.bottleneck", "modules.SRnet.conv_4", "modules.SRnet.shuffle", "modules.SRnet.last"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "input", "=", "self", ".", "conv", "(", "x", ")", "\n", "buffer_1", "=", "self", ".", "RDB_1", "(", "input", ")", "\n", "buffer_2", "=", "self", ".", "RDB_2", "(", "buffer_1", ")", "\n", "buffer_3", "=", "self", ".", "RDB_3", "(", "buffer_2", ")", "\n", "buffer_4", "=", "self", ".", "RDB_4", "(", "buffer_3", ")", "\n", "buffer_5", "=", "self", ".", "RDB_5", "(", "buffer_4", ")", "\n", "output_cat", "=", "torch", ".", "cat", "(", "(", "buffer_1", ",", "buffer_2", ",", "buffer_3", ",", "buffer_4", ",", "buffer_5", ",", "input", ")", ",", "1", ")", "\n", "# attention = self.sa_ca(output_cat)", "\n", "# output_attention =torch.mul(attention,output_cat)", "\n", "# output1 = output_attention + self.conv_sa_ca(input)", "\n", "output1", "=", "self", ".", "conv_2", "(", "output_cat", ")", "\n", "# output1 = self.conv_2(output1)", "\n", "output1", "=", "self", ".", "lrelu", "(", "output1", ")", "\n", "output1", "=", "self", ".", "conv_3", "(", "output1", ")", "\n", "output", "=", "self", ".", "bottleneck", "(", "output1", ")", "\n", "output", "=", "self", ".", "conv_4", "(", "output", ")", "\n", "output", "=", "self", ".", "shuffle", "(", "output", ")", "\n", "output", "=", "self", ".", "last", "(", "output", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.spatial_channel_attention2.__init__": [[175, 184], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "spatial_channel_attention2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.avepool = nn.AdaptiveAvgPool2d((1,1))", "\n", "self", ".", "conv_c1", "=", "nn", ".", "Conv2d", "(", "384", ",", "384", "//", "16", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_c2", "=", "nn", ".", "Conv2d", "(", "384", "//", "16", ",", "384", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_s1", "=", "nn", ".", "Conv2d", "(", "384", ",", "384", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_s2", "=", "nn", ".", "Conv2d", "(", "384", ",", "384", ",", "kernel_size", "=", "1", ",", "groups", "=", "384", ",", "bias", "=", "False", ")", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.spatial_channel_attention2.forward": [[184, 196], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "modules.spatial_channel_attention2.conv_c1", "modules.spatial_channel_attention2.lrelu", "modules.spatial_channel_attention2.conv_c2", "modules.spatial_channel_attention2.conv_s1", "modules.spatial_channel_attention2.lrelu", "modules.spatial_channel_attention2.conv_s2", "modules.spatial_channel_attention2.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "ca", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "x", ",", "(", "1", ",", "1", ")", ")", "\n", "ca", "=", "self", ".", "conv_c1", "(", "ca", ")", "\n", "ca", "=", "self", ".", "lrelu", "(", "ca", ")", "\n", "ca", "=", "self", ".", "conv_c2", "(", "ca", ")", "\n", "\n", "sa", "=", "self", ".", "conv_s1", "(", "x", ")", "\n", "sa", "=", "self", ".", "lrelu", "(", "sa", ")", "\n", "sa", "=", "self", ".", "conv_s2", "(", "sa", ")", "\n", "\n", "output", "=", "self", ".", "sigmoid", "(", "sa", "+", "ca", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.spatial_channel_attention.__init__": [[198, 207], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "spatial_channel_attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.avepool = nn.AdaptiveAvgPool2d((1,1))", "\n", "self", ".", "conv_c1", "=", "nn", ".", "Conv2d", "(", "192", ",", "192", "//", "16", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_c2", "=", "nn", ".", "Conv2d", "(", "192", "//", "16", ",", "192", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_s1", "=", "nn", ".", "Conv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_s2", "=", "nn", ".", "Conv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "1", ",", "groups", "=", "192", ",", "bias", "=", "False", ")", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.spatial_channel_attention.forward": [[207, 219], ["torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "modules.spatial_channel_attention.conv_c1", "modules.spatial_channel_attention.lrelu", "modules.spatial_channel_attention.conv_c2", "modules.spatial_channel_attention.conv_s1", "modules.spatial_channel_attention.lrelu", "modules.spatial_channel_attention.conv_s2", "modules.spatial_channel_attention.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "ca", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "x", ",", "(", "1", ",", "1", ")", ")", "\n", "ca", "=", "self", ".", "conv_c1", "(", "ca", ")", "\n", "ca", "=", "self", ".", "lrelu", "(", "ca", ")", "\n", "ca", "=", "self", ".", "conv_c2", "(", "ca", ")", "\n", "\n", "sa", "=", "self", ".", "conv_s1", "(", "x", ")", "\n", "sa", "=", "self", ".", "lrelu", "(", "sa", ")", "\n", "sa", "=", "self", ".", "conv_s2", "(", "sa", ")", "\n", "\n", "output", "=", "self", ".", "sigmoid", "(", "sa", "+", "ca", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.VRCNN.__init__": [[221, 250], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "functools.partial", "modules.make_layer", "modules.PCD_Align", "modules.SRnet", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "dbpn.Net", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "modules.spatial_channel_attention"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.make_layer"], ["    ", "def", "__init__", "(", "self", ",", "upscale_factor", ",", "is_training", "=", "False", ",", "center", "=", "None", ",", "nf", "=", "64", ",", "nframes", "=", "3", ")", ":", "\n", "# def __init__(self,upscale_factor, is_training=False):", "\n", "        ", "super", "(", "VRCNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upscale_factor", "=", "upscale_factor", "\n", "self", ".", "center", "=", "nframes", "//", "2", "if", "center", "is", "None", "else", "center", "\n", "self", ".", "is_training", "=", "is_training", "\n", "# self.OFRnet = OFRnet(upscale_factor=upscale_factor, is_training=is_training)", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "#functools.partial(a,b,...) \u56fa\u5b9a\u51fd\u6570a\u4e2d\u67d0\u4e9b\u53c2\u6570\u7684\u503c(\u4ece\u5de6\u5230\u53f3\u987a\u5e8f\u56fa\u5b9a)\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u51fd\u6570", "\n", "ResidualBlock_noBN_f", "=", "functools", ".", "partial", "(", "ResidualBlock_noBN", ",", "nf", "=", "nf", ")", "\n", "self", ".", "feature_extraction", "=", "make_layer", "(", "ResidualBlock_noBN_f", ",", "3", ")", "\n", "self", ".", "pcd_align", "=", "PCD_Align", "(", ")", "\n", "self", ".", "SRnet", "=", "SRnet", "(", "upscale_factor", "=", "upscale_factor", ",", "is_training", "=", "is_training", ")", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", "self", ".", "fea_L2_conv1", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "fea_L2_conv2", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "fea_L3_conv1", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "fea_L3_conv2", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "#\u51cf\u5c11\u901a\u9053\u6570\uff0c\u4ece33-3", "\n", "self", ".", "reduce", "=", "nn", ".", "Conv2d", "(", "33", ",", "3", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "#sisr-upsample", "\n", "self", ".", "dbpn", "=", "DBPN", "(", "num_channels", "=", "1", ",", "base_filter", "=", "64", ",", "feat", "=", "256", ",", "num_stages", "=", "7", ",", "scale_factor", "=", "upscale_factor", ")", "\n", "self", ".", "conv_final1", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_final2", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv_final3", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "#\u6ce8\u610f\u529b", "\n", "self", ".", "sa_ca", "=", "spatial_channel_attention", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.VRCNN.forward": [[252, 305], ["x.size", "x[].contiguous", "modules.VRCNN.lrelu", "modules.VRCNN.feature_extraction", "modules.VRCNN.lrelu", "modules.VRCNN.lrelu", "modules.VRCNN.lrelu", "modules.VRCNN.lrelu", "L1_fea.view.view.view", "L2_fea.view.view.view", "L3_fea.view.view.view", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "modules.VRCNN.sa_ca", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "modules.VRCNN.SRnet", "modules.VRCNN.dbpn", "modules.VRCNN.conv_final1", "modules.VRCNN.conv_final2", "modules.VRCNN.conv_final3", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "modules.VRCNN.conv1", "modules.VRCNN.fea_L2_conv1", "modules.VRCNN.fea_L2_conv2", "modules.VRCNN.fea_L3_conv1", "modules.VRCNN.fea_L3_conv2", "L1_fea[].clone", "L2_fea[].clone", "L3_fea[].clone", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.view", "torch.stack.view", "torch.stack.view", "torch.stack.view", "torch.stack.view", "torch.stack.view", "torch.stack.view", "torch.stack.view", "torch.stack.view", "torch.stack.view", "torch.stack.view", "torch.stack.view", "x.view", "L1_fea[].clone", "L2_fea[].clone", "L3_fea[].clone", "modules.VRCNN.pcd_align"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "B", ",", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "# N video frames", "\n", "x_center", "=", "x", "[", ":", ",", "self", ".", "center", ",", ":", ",", ":", ",", ":", "]", ".", "contiguous", "(", ")", "\n", "\n", "#### extract LR features", "\n", "# L1", "\n", "L1_fea", "=", "self", ".", "lrelu", "(", "self", ".", "conv1", "(", "x", ".", "view", "(", "-", "1", ",", "C", ",", "H", ",", "W", ")", ")", ")", "\n", "L1_fea", "=", "self", ".", "feature_extraction", "(", "L1_fea", ")", "\n", "# L2", "\n", "L2_fea", "=", "self", ".", "lrelu", "(", "self", ".", "fea_L2_conv1", "(", "L1_fea", ")", ")", "\n", "L2_fea", "=", "self", ".", "lrelu", "(", "self", ".", "fea_L2_conv2", "(", "L2_fea", ")", ")", "\n", "# # L3", "\n", "L3_fea", "=", "self", ".", "lrelu", "(", "self", ".", "fea_L3_conv1", "(", "L2_fea", ")", ")", "\n", "L3_fea", "=", "self", ".", "lrelu", "(", "self", ".", "fea_L3_conv2", "(", "L3_fea", ")", ")", "\n", "\n", "L1_fea", "=", "L1_fea", ".", "view", "(", "B", ",", "N", ",", "-", "1", ",", "H", ",", "W", ")", "#view()\u51fd\u6570\u7c7b\u4f3c\u4e8ereshape()\u51fd\u6570\u7684\u4f5c\u7528", "\n", "L2_fea", "=", "L2_fea", ".", "view", "(", "B", ",", "N", ",", "-", "1", ",", "H", "//", "2", ",", "W", "//", "2", ")", "\n", "L3_fea", "=", "L3_fea", ".", "view", "(", "B", ",", "N", ",", "-", "1", ",", "H", "//", "4", ",", "W", "//", "4", ")", "\n", "\n", "# #### pcd align", "\n", "# # ref feature list", "\n", "ref_fea_l", "=", "[", "\n", "L1_fea", "[", ":", ",", "self", ".", "center", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ",", "L2_fea", "[", ":", ",", "self", ".", "center", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ",", "\n", "L3_fea", "[", ":", ",", "self", ".", "center", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "\n", "]", "\n", "aligned_fea", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "nbr_fea_l", "=", "[", "\n", "L1_fea", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ",", "L2_fea", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", ",", "\n", "L3_fea", "[", ":", ",", "i", ",", ":", ",", ":", ",", ":", "]", ".", "clone", "(", ")", "\n", "]", "\n", "aligned_fea", ".", "append", "(", "self", ".", "pcd_align", "(", "nbr_fea_l", ",", "ref_fea_l", ")", ")", "\n", "", "aligned_fea", "=", "torch", ".", "stack", "(", "aligned_fea", ",", "dim", "=", "1", ")", "# [B, N, C, H, W]", "\n", "\n", "sa_ca_fea", "=", "self", ".", "sa_ca", "(", "aligned_fea", ".", "view", "(", "B", ",", "-", "1", ",", "H", ",", "W", ")", ")", "\n", "output_attention", "=", "torch", ".", "mul", "(", "sa_ca_fea", ",", "aligned_fea", ".", "view", "(", "B", ",", "-", "1", ",", "H", ",", "W", ")", ")", "\n", "\n", "\n", "output_saca", "=", "output_attention", "+", "aligned_fea", ".", "view", "(", "B", ",", "-", "1", ",", "H", ",", "W", ")", "\n", "\n", "res_output", "=", "self", ".", "SRnet", "(", "output_saca", ")", "\n", "\n", "sisr", "=", "self", ".", "dbpn", "(", "x", "[", ":", ",", "1", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "output", "=", "res_output", "+", "sisr", "\n", "\n", "output", "=", "self", ".", "conv_final1", "(", "output", ")", "\n", "output", "=", "self", ".", "conv_final2", "(", "output", ")", "\n", "output", "=", "self", ".", "conv_final3", "(", "output", ")", "\n", "\n", "base", "=", "F", ".", "interpolate", "(", "x_center", ",", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "output", "+=", "base", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.ResidualBlock_noBN.__init__": [[339, 346], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "modules.initialize_weights"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.initialize_weights"], ["def", "__init__", "(", "self", ",", "nf", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResidualBlock_noBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "nf", ",", "nf", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "# initialization", "\n", "initialize_weights", "(", "[", "self", ".", "conv1", ",", "self", ".", "conv2", "]", ",", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.ResidualBlock_noBN.forward": [[347, 352], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "modules.ResidualBlock_noBN.conv2", "modules.ResidualBlock_noBN.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "return", "identity", "+", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.initialize_weights": [[306, 324], ["isinstance", "net.modules", "isinstance", "torch.kaiming_normal_", "isinstance", "m.bias.data.zero_", "torch.kaiming_normal_", "isinstance", "m.bias.data.zero_", "torch.constant_", "torch.constant_"], "function", ["None"], ["", "", "def", "initialize_weights", "(", "net_l", ",", "scale", "=", "1", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "net_l", ",", "list", ")", ":", "\n", "        ", "net_l", "=", "[", "net_l", "]", "\n", "", "for", "net", "in", "net_l", ":", "\n", "        ", "for", "m", "in", "net", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "m", ".", "weight", ".", "data", "*=", "scale", "# for residual block", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "m", ".", "weight", ".", "data", "*=", "scale", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.modules.make_layer": [[326, 331], ["range", "torch.Sequential", "layers.append", "block"], "function", ["None"], ["", "", "", "", "def", "make_layer", "(", "block", ",", "n_layers", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_layers", ")", ":", "\n", "        ", "layers", ".", "append", "(", "block", "(", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.DenseBlock.__init__": [[5, 26], ["super().__init__", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.InstanceNorm1d", "torch.nn.PReLU", "torch.nn.LeakyReLU", "torch.nn.Tanh", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "bias", "=", "True", ",", "activation", "=", "'relu'", ",", "norm", "=", "'batch'", ")", ":", "\n", "        ", "super", "(", "DenseBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "torch", ".", "nn", ".", "Linear", "(", "input_size", ",", "output_size", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "norm", "=", "norm", "\n", "if", "self", ".", "norm", "==", "'batch'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "output_size", ")", "\n", "", "elif", "self", ".", "norm", "==", "'instance'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "InstanceNorm1d", "(", "output_size", ")", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "if", "self", ".", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'prelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'lrelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'tanh'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'sigmoid'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.DenseBlock.forward": [[27, 37], ["base_networks.DenseBlock.bn", "base_networks.DenseBlock.fc", "base_networks.DenseBlock.act", "base_networks.DenseBlock.fc"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "bn", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "act", "(", "out", ")", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.ConvBlock.__init__": [[40, 61], ["super().__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.InstanceNorm2d", "torch.nn.PReLU", "torch.nn.LeakyReLU", "torch.nn.Tanh", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "norm", "=", "norm", "\n", "if", "self", ".", "norm", "==", "'batch'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "BatchNorm2d", "(", "output_size", ")", "\n", "", "elif", "self", ".", "norm", "==", "'instance'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "InstanceNorm2d", "(", "output_size", ")", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "if", "self", ".", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'prelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'lrelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'tanh'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'sigmoid'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.ConvBlock.forward": [[62, 72], ["base_networks.ConvBlock.bn", "base_networks.ConvBlock.conv", "base_networks.ConvBlock.act", "base_networks.ConvBlock.conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "act", "(", "out", ")", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.DeconvBlock.__init__": [[75, 96], ["super().__init__", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.InstanceNorm2d", "torch.nn.PReLU", "torch.nn.LeakyReLU", "torch.nn.Tanh", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "DeconvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "deconv", "=", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "input_size", ",", "output_size", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "norm", "=", "norm", "\n", "if", "self", ".", "norm", "==", "'batch'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "BatchNorm2d", "(", "output_size", ")", "\n", "", "elif", "self", ".", "norm", "==", "'instance'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "InstanceNorm2d", "(", "output_size", ")", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "if", "self", ".", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'prelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'lrelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'tanh'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'sigmoid'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.DeconvBlock.forward": [[97, 107], ["base_networks.DeconvBlock.bn", "base_networks.DeconvBlock.deconv", "base_networks.DeconvBlock.act", "base_networks.DeconvBlock.deconv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "bn", "(", "self", ".", "deconv", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "deconv", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "act", "(", "out", ")", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.ResnetBlock.__init__": [[110, 132], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.InstanceNorm2d", "torch.nn.PReLU", "torch.nn.LeakyReLU", "torch.nn.Tanh", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "'batch'", ")", ":", "\n", "        ", "super", "(", "ResnetBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv2d", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv2d", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "norm", "=", "norm", "\n", "if", "self", ".", "norm", "==", "'batch'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "BatchNorm2d", "(", "num_filter", ")", "\n", "", "elif", "norm", "==", "'instance'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "InstanceNorm2d", "(", "num_filter", ")", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "if", "self", ".", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'prelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'lrelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'tanh'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'sigmoid'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.ResnetBlock.forward": [[134, 151], ["torch.add", "base_networks.ResnetBlock.bn", "base_networks.ResnetBlock.conv1", "base_networks.ResnetBlock.act", "base_networks.ResnetBlock.bn", "base_networks.ResnetBlock.conv2", "base_networks.ResnetBlock.conv1", "base_networks.ResnetBlock.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "bn", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "act", "(", "out", ")", "\n", "\n", "", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "bn", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "", "out", "=", "torch", ".", "add", "(", "out", ",", "residual", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.UpBlock.__init__": [[153, 158], ["super().__init__", "base_networks.DeconvBlock", "base_networks.ConvBlock", "base_networks.DeconvBlock"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "8", ",", "stride", "=", "4", ",", "padding", "=", "2", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "UpBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up_conv1", "=", "DeconvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "up_conv2", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "up_conv3", "=", "DeconvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.UpBlock.forward": [[159, 164], ["base_networks.UpBlock.up_conv1", "base_networks.UpBlock.up_conv2", "base_networks.UpBlock.up_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    \t", "h0", "=", "self", ".", "up_conv1", "(", "x", ")", "\n", "l0", "=", "self", ".", "up_conv2", "(", "h0", ")", "\n", "h1", "=", "self", ".", "up_conv3", "(", "l0", "-", "x", ")", "\n", "return", "h1", "+", "h0", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.UpBlockPix.__init__": [[166, 171], ["super().__init__", "base_networks.Upsampler", "base_networks.ConvBlock", "base_networks.Upsampler"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "8", ",", "stride", "=", "4", ",", "padding", "=", "2", ",", "scale", "=", "4", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "UpBlockPix", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up_conv1", "=", "Upsampler", "(", "scale", ",", "num_filter", ")", "\n", "self", ".", "up_conv2", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "up_conv3", "=", "Upsampler", "(", "scale", ",", "num_filter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.UpBlockPix.forward": [[172, 177], ["base_networks.UpBlockPix.up_conv1", "base_networks.UpBlockPix.up_conv2", "base_networks.UpBlockPix.up_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    \t", "h0", "=", "self", ".", "up_conv1", "(", "x", ")", "\n", "l0", "=", "self", ".", "up_conv2", "(", "h0", ")", "\n", "h1", "=", "self", ".", "up_conv3", "(", "l0", "-", "x", ")", "\n", "return", "h1", "+", "h0", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.D_UpBlock.__init__": [[179, 185], ["super().__init__", "base_networks.ConvBlock", "base_networks.DeconvBlock", "base_networks.ConvBlock", "base_networks.DeconvBlock"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "8", ",", "stride", "=", "4", ",", "padding", "=", "2", ",", "num_stages", "=", "1", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "D_UpBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "ConvBlock", "(", "num_filter", "*", "num_stages", ",", "num_filter", ",", "1", ",", "1", ",", "0", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "up_conv1", "=", "DeconvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "up_conv2", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "up_conv3", "=", "DeconvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.D_UpBlock.forward": [[186, 192], ["base_networks.D_UpBlock.conv", "base_networks.D_UpBlock.up_conv1", "base_networks.D_UpBlock.up_conv2", "base_networks.D_UpBlock.up_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    \t", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "h0", "=", "self", ".", "up_conv1", "(", "x", ")", "\n", "l0", "=", "self", ".", "up_conv2", "(", "h0", ")", "\n", "h1", "=", "self", ".", "up_conv3", "(", "l0", "-", "x", ")", "\n", "return", "h1", "+", "h0", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.D_UpBlockPix.__init__": [[194, 200], ["super().__init__", "base_networks.ConvBlock", "base_networks.Upsampler", "base_networks.ConvBlock", "base_networks.Upsampler"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "8", ",", "stride", "=", "4", ",", "padding", "=", "2", ",", "num_stages", "=", "1", ",", "scale", "=", "4", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "D_UpBlockPix", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "ConvBlock", "(", "num_filter", "*", "num_stages", ",", "num_filter", ",", "1", ",", "1", ",", "0", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "up_conv1", "=", "Upsampler", "(", "scale", ",", "num_filter", ")", "\n", "self", ".", "up_conv2", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "up_conv3", "=", "Upsampler", "(", "scale", ",", "num_filter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.D_UpBlockPix.forward": [[201, 207], ["base_networks.D_UpBlockPix.conv", "base_networks.D_UpBlockPix.up_conv1", "base_networks.D_UpBlockPix.up_conv2", "base_networks.D_UpBlockPix.up_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    \t", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "h0", "=", "self", ".", "up_conv1", "(", "x", ")", "\n", "l0", "=", "self", ".", "up_conv2", "(", "h0", ")", "\n", "h1", "=", "self", ".", "up_conv3", "(", "l0", "-", "x", ")", "\n", "return", "h1", "+", "h0", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.DownBlock.__init__": [[209, 214], ["super().__init__", "base_networks.ConvBlock", "base_networks.DeconvBlock", "base_networks.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "8", ",", "stride", "=", "4", ",", "padding", "=", "2", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "DownBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down_conv1", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "down_conv2", "=", "DeconvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "down_conv3", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.DownBlock.forward": [[215, 220], ["base_networks.DownBlock.down_conv1", "base_networks.DownBlock.down_conv2", "base_networks.DownBlock.down_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    \t", "l0", "=", "self", ".", "down_conv1", "(", "x", ")", "\n", "h0", "=", "self", ".", "down_conv2", "(", "l0", ")", "\n", "l1", "=", "self", ".", "down_conv3", "(", "h0", "-", "x", ")", "\n", "return", "l1", "+", "l0", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.DownBlockPix.__init__": [[222, 227], ["super().__init__", "base_networks.ConvBlock", "base_networks.Upsampler", "base_networks.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "8", ",", "stride", "=", "4", ",", "padding", "=", "2", ",", "scale", "=", "4", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "DownBlockPix", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down_conv1", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "down_conv2", "=", "Upsampler", "(", "scale", ",", "num_filter", ")", "\n", "self", ".", "down_conv3", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.DownBlockPix.forward": [[228, 233], ["base_networks.DownBlockPix.down_conv1", "base_networks.DownBlockPix.down_conv2", "base_networks.DownBlockPix.down_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    \t", "l0", "=", "self", ".", "down_conv1", "(", "x", ")", "\n", "h0", "=", "self", ".", "down_conv2", "(", "l0", ")", "\n", "l1", "=", "self", ".", "down_conv3", "(", "h0", "-", "x", ")", "\n", "return", "l1", "+", "l0", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.D_DownBlock.__init__": [[235, 241], ["super().__init__", "base_networks.ConvBlock", "base_networks.ConvBlock", "base_networks.DeconvBlock", "base_networks.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "8", ",", "stride", "=", "4", ",", "padding", "=", "2", ",", "num_stages", "=", "1", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "D_DownBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "ConvBlock", "(", "num_filter", "*", "num_stages", ",", "num_filter", ",", "1", ",", "1", ",", "0", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "down_conv1", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "down_conv2", "=", "DeconvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "down_conv3", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.D_DownBlock.forward": [[242, 248], ["base_networks.D_DownBlock.conv", "base_networks.D_DownBlock.down_conv1", "base_networks.D_DownBlock.down_conv2", "base_networks.D_DownBlock.down_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    \t", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "l0", "=", "self", ".", "down_conv1", "(", "x", ")", "\n", "h0", "=", "self", ".", "down_conv2", "(", "l0", ")", "\n", "l1", "=", "self", ".", "down_conv3", "(", "h0", "-", "x", ")", "\n", "return", "l1", "+", "l0", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.D_DownBlockPix.__init__": [[250, 256], ["super().__init__", "base_networks.ConvBlock", "base_networks.ConvBlock", "base_networks.Upsampler", "base_networks.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_filter", ",", "kernel_size", "=", "8", ",", "stride", "=", "4", ",", "padding", "=", "2", ",", "num_stages", "=", "1", ",", "scale", "=", "4", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "None", ")", ":", "\n", "        ", "super", "(", "D_DownBlockPix", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "ConvBlock", "(", "num_filter", "*", "num_stages", ",", "num_filter", ",", "1", ",", "1", ",", "0", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "down_conv1", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "self", ".", "down_conv2", "=", "Upsampler", "(", "scale", ",", "num_filter", ")", "\n", "self", ".", "down_conv3", "=", "ConvBlock", "(", "num_filter", ",", "num_filter", ",", "kernel_size", ",", "stride", ",", "padding", ",", "activation", ",", "norm", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.D_DownBlockPix.forward": [[257, 263], ["base_networks.D_DownBlockPix.conv", "base_networks.D_DownBlockPix.down_conv1", "base_networks.D_DownBlockPix.down_conv2", "base_networks.D_DownBlockPix.down_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    \t", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "l0", "=", "self", ".", "down_conv1", "(", "x", ")", "\n", "h0", "=", "self", ".", "down_conv2", "(", "l0", ")", "\n", "l1", "=", "self", ".", "down_conv3", "(", "h0", "-", "x", ")", "\n", "return", "l1", "+", "l0", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.PSBlock.__init__": [[265, 287], ["super().__init__", "torch.nn.Conv2d", "torch.nn.PixelShuffle", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.InstanceNorm2d", "torch.nn.PReLU", "torch.nn.LeakyReLU", "torch.nn.Tanh", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "scale_factor", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ",", "activation", "=", "'prelu'", ",", "norm", "=", "'batch'", ")", ":", "\n", "        ", "super", "(", "PSBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "input_size", ",", "output_size", "*", "scale_factor", "**", "2", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "bias", ")", "\n", "self", ".", "ps", "=", "torch", ".", "nn", ".", "PixelShuffle", "(", "scale_factor", ")", "\n", "\n", "self", ".", "norm", "=", "norm", "\n", "if", "self", ".", "norm", "==", "'batch'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "BatchNorm2d", "(", "output_size", ")", "\n", "", "elif", "norm", "==", "'instance'", ":", "\n", "            ", "self", ".", "bn", "=", "torch", ".", "nn", ".", "InstanceNorm2d", "(", "output_size", ")", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "if", "self", ".", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'prelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'lrelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'tanh'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'sigmoid'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.PSBlock.forward": [[288, 297], ["base_networks.PSBlock.bn", "base_networks.PSBlock.ps", "base_networks.PSBlock.act", "base_networks.PSBlock.ps", "base_networks.PSBlock.conv", "base_networks.PSBlock.conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "bn", "(", "self", ".", "ps", "(", "self", ".", "conv", "(", "x", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "ps", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "act", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsampler.__init__": [[300, 321], ["super().__init__", "range", "torch.nn.Sequential", "int", "modules.append", "modules.append", "torch.nn.ReLU", "math.log", "base_networks.ConvBlock", "torch.nn.PixelShuffle", "modules.append", "torch.nn.PReLU", "torch.nn.BatchNorm2d", "torch.nn.LeakyReLU", "torch.nn.Tanh", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", ",", "n_feat", ",", "bn", "=", "False", ",", "act", "=", "'prelu'", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "Upsampler", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "            ", "modules", ".", "append", "(", "ConvBlock", "(", "n_feat", ",", "4", "*", "n_feat", ",", "3", ",", "1", ",", "1", ",", "bias", ",", "activation", "=", "None", ",", "norm", "=", "None", ")", ")", "\n", "modules", ".", "append", "(", "torch", ".", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "if", "bn", ":", "modules", ".", "append", "(", "torch", ".", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "#modules.append(torch.nn.PReLU())", "\n", "", "self", ".", "up", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n", "self", ".", "activation", "=", "act", "\n", "if", "self", ".", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "ReLU", "(", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'prelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "PReLU", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'lrelu'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", "\n", "", "elif", "self", ".", "activation", "==", "'tanh'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "self", ".", "activation", "==", "'sigmoid'", ":", "\n", "            ", "self", ".", "act", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsampler.forward": [[322, 327], ["base_networks.Upsampler.up", "base_networks.Upsampler.act"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "up", "(", "x", ")", "\n", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "out", "=", "self", ".", "act", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__": [[330, 351], ["super().__init__", "base_networks.DeconvBlock", "base_networks.PSBlock", "torch.nn.Sequential", "torch.nn.Upsample", "base_networks.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "bias", "=", "True", ",", "upsample", "=", "'deconv'", ",", "activation", "=", "'relu'", ",", "norm", "=", "'batch'", ")", ":", "\n", "        ", "super", "(", "Upsample2xBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "scale_factor", "=", "2", "\n", "# 1. Deconvolution (Transposed convolution)", "\n", "if", "upsample", "==", "'deconv'", ":", "\n", "            ", "self", ".", "upsample", "=", "DeconvBlock", "(", "input_size", ",", "output_size", ",", "\n", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "\n", "bias", "=", "bias", ",", "activation", "=", "activation", ",", "norm", "=", "norm", ")", "\n", "\n", "# 2. Sub-pixel convolution (Pixel shuffler)", "\n", "", "elif", "upsample", "==", "'ps'", ":", "\n", "            ", "self", ".", "upsample", "=", "PSBlock", "(", "input_size", ",", "output_size", ",", "scale_factor", "=", "scale_factor", ",", "\n", "bias", "=", "bias", ",", "activation", "=", "activation", ",", "norm", "=", "norm", ")", "\n", "\n", "# 3. Resize and Convolution", "\n", "", "elif", "upsample", "==", "'rnc'", ":", "\n", "            ", "self", ".", "upsample", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Upsample", "(", "scale_factor", "=", "scale_factor", ",", "mode", "=", "'nearest'", ")", ",", "\n", "ConvBlock", "(", "input_size", ",", "output_size", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "bias", ",", "activation", "=", "activation", ",", "norm", "=", "norm", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.base_networks.Upsample2xBlock.forward": [[353, 356], ["base_networks.Upsample2xBlock.upsample"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "upsample", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.test.main": [[44, 129], ["print", "modules.VRCNN", "torch.nn.DataParallel", "torch.nn.DataParallel", "test_model.cuda.cuda", "print", "model_log.print_network", "print", "os.path.join", "print", "os.path.exists", "print", "torch.load", "torch.load", "test_model.cuda.state_dict", "test_model.state_dict.update", "test_model.cuda.load_state_dict", "print", "os.path.exists", "os.mkdir", "open", "torch.no_grad", "torch.no_grad", "data_utils.ValidationsetLoader", "torch.utils.data.DataLoader", "tqdm.tqdm", "print", "print", "psnr_ssim.write", "torch.load.items", "test_model.cuda.eval", "test_model.cuda.", "numpy.concatenate().transpose", "numpy.clip", "torchvision.save_image", "psnr.psnr", "psnr.calculate_ssim", "tqdm.tqdm.set_description", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "data_utils.ycbcr2rgb", "torchvision.transforms.ToPILImage", "np.clip.astype", "torchvision.transforms.ToTensor", "os.path.exists", "os.mkdir", "print", "print", "psnr_ssim.write", "numpy.concatenate", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "len", "len", "len", "len", "torch.autograd.Variable", "torch.autograd.Variable", "str().rjust", "torch.squeeze().data.cpu", "torch.squeeze().data.cpu", "torch.squeeze().data.cpu", "torch.squeeze().data.cpu", "torch.squeeze().data.cpu", "torch.squeeze().data.cpu", "torch.squeeze().data.cpu", "torch.squeeze().data.cpu", "numpy.array", "test_model.squeeze().data.cpu", "str", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "test_model.squeeze"], "function", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.model_log.print_network", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.psnr", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.calculate_ssim", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.data_utils.ycbcr2rgb"], ["def", "main", "(", ")", ":", "\n", "\n", "\t", "'''\n\t\u8bad\u7ec3\u65f6\u65f6\u5e76\u884c\u7684\uff0c\u6d4b\u8bd5\u65f6\u4e5f\u5e94\u5f53\u5e76\u884c\uff0c\u4e0d\u7136\u4f1a\u62a5\u544a\u5982\u4e0b\u7684\u9519\u8bef\uff1a\n\tMissing key(s) in state_dict: ...(\u5982\uff1aconv1.weight)\n\t'''", "\n", "print", "(", "'testing processing....'", ")", "\n", "\n", "#\u52a0\u8f7d\u6a21\u578b", "\n", "test_model", "=", "VRCNN", "(", "opt", ".", "upscale_factor", ")", "\n", "test_model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "test_model", ",", "device_ids", "=", "gpus_list", ",", "output_device", "=", "gpus_list", "[", "1", "]", ")", "\n", "\n", "test_model", "=", "test_model", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "\n", "print", "(", "'---------- Networks architecture -------------'", ")", "\n", "print_network", "(", "test_model", ")", "\n", "print", "(", "'----------------------------------------------'", ")", "\n", "\n", "#\u52a0\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b", "\n", "model_name", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "model_save_folder", ",", "opt", ".", "exp_name", ",", "opt", ".", "test_model", ")", "\n", "print", "(", "'model_name='", ",", "model_name", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "model_name", ")", ":", "\n", "\t\t", "pretrained_dict", "=", "torch", ".", "load", "(", "model_name", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "model_dict", "=", "test_model", ".", "state_dict", "(", ")", "\n", "# 1. filter out unnecessary keys", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "# 2. overwrite entries in the existing state dict", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "test_model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "print", "(", "'Pre-trained SR model is loaded.'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "pre_result", ")", ":", "\n", "\t\t", "os", ".", "mkdir", "(", "opt", ".", "pre_result", ")", "\n", "\n", "", "with", "open", "(", "opt", ".", "train_log", "+", "'/psnr_ssim-xr-200.txt'", ",", "'a'", ")", "as", "psnr_ssim", ":", "\n", "\t\t", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "ave_psnr", "=", "0", "\n", "ave_ssim", "=", "0", "\n", "single_ave_psnr", "=", "0", "\n", "single_ave_ssim", "=", "0", "\n", "numb", "=", "2", "\n", "valSet", "=", "ValidationsetLoader", "(", "opt", ".", "val_dataset_hr", ",", "opt", ".", "val_dataset_lr", ")", "\n", "valLoader", "=", "DataLoader", "(", "dataset", "=", "valSet", ",", "batch_size", "=", "opt", ".", "test_val_batchSize", ",", "shuffle", "=", "False", ")", "\n", "val_bar", "=", "tqdm", "(", "valLoader", ")", "\n", "for", "data", "in", "val_bar", ":", "\n", "\t\t\t\t", "test_model", ".", "eval", "(", ")", "\n", "# dual_net.eval()", "\n", "batch_lr_y", ",", "label", ",", "SR_cb", ",", "SR_cr", ",", "idx", ",", "bicubic_restore", "=", "data", "\n", "batch_lr_y", ",", "label", "=", "Variable", "(", "batch_lr_y", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", ",", "Variable", "(", "label", ")", ".", "cuda", "(", "gpus_list", "[", "0", "]", ")", "\n", "output", "=", "test_model", "(", "batch_lr_y", ")", "\n", "\n", "SR_ycbcr", "=", "np", ".", "concatenate", "(", "(", "np", ".", "array", "(", "output", ".", "squeeze", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ")", ",", "SR_cb", ",", "SR_cr", ")", ",", "axis", "=", "0", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "SR_rgb", "=", "ycbcr2rgb", "(", "SR_ycbcr", ")", "*", "255.0", "\n", "SR_rgb", "=", "np", ".", "clip", "(", "SR_rgb", ",", "0", ",", "255", ")", "\n", "SR_rgb", "=", "ToPILImage", "(", ")", "(", "SR_rgb", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "#ToTensor() ---image(0-255)==>image(0-1), (H,W,C)==>(C,H,W)", "\n", "SR_rgb", "=", "ToTensor", "(", ")", "(", "SR_rgb", ")", "\n", "\n", "#\u5c06\u7ed9\u5b9a\u7684Tensor\u4fdd\u5b58\u6210image\u6587\u4ef6\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u662fmini-batch tensor\uff0c\u90a3\u5c31\u7528make-grid\u505a\u6210\u96ea\u78a7\u56fe\uff0c\u518d\u4fdd\u5b58\u3002\u4e0eutils.make_grid()\u914d\u5957\u4f7f\u7528", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "pre_result", "+", "'/'", "+", "opt", ".", "exp_name", ")", ":", "\n", "\t\t\t\t\t", "os", ".", "mkdir", "(", "opt", ".", "pre_result", "+", "'/'", "+", "opt", ".", "exp_name", ")", "\n", "", "utils", ".", "save_image", "(", "SR_rgb", ",", "opt", ".", "pre_result", "+", "'/'", "+", "opt", ".", "exp_name", "+", "'/'", "+", "'my'", "+", "str", "(", "numb", ")", ".", "rjust", "(", "3", ",", "'0'", ")", "+", "'.png'", ")", "\n", "numb", "=", "numb", "+", "1", "\n", "\n", "psnr_value", "=", "psnr", "(", "np", ".", "array", "(", "torch", ".", "squeeze", "(", "label", ")", ".", "data", ".", "cpu", "(", ")", ")", "*", "255", ",", "np", ".", "array", "(", "torch", ".", "squeeze", "(", "output", ")", ".", "data", ".", "cpu", "(", ")", ")", "*", "255", ")", "\n", "ave_psnr", "=", "ave_psnr", "+", "psnr_value", "\n", "single_ave_psnr", "=", "single_ave_psnr", "+", "psnr_value", "\n", "ssim_value", "=", "calculate_ssim", "(", "np", ".", "array", "(", "torch", ".", "squeeze", "(", "label", ")", ".", "data", ".", "cpu", "(", ")", ")", "*", "255", ",", "np", ".", "array", "(", "torch", ".", "squeeze", "(", "output", ")", ".", "data", ".", "cpu", "(", ")", ")", "*", "255", ")", "\n", "ave_ssim", "=", "ave_ssim", "+", "ssim_value", "\n", "single_ave_ssim", "=", "single_ave_ssim", "+", "ssim_value", "\n", "\n", "val_bar", ".", "set_description", "(", "'===>{}th video {}th frame, wsPSNR:{:.4f} dB,wsSSIM:{:.6f}'", ".", "format", "(", "idx", "//", "98", "+", "1", ",", "idx", "%", "98", "+", "1", ",", "psnr_value", ",", "ssim_value", ")", ")", "\n", "\n", "if", "idx", "==", "293", "or", "idx", "==", "97", "or", "idx", "==", "195", "or", "idx", "==", "391", ":", "\n", "\t\t\t\t\t", "print", "(", "\"===> {}th video Avg. wsPSNR: {:.4f} dB\"", ".", "format", "(", "idx", "//", "98", "+", "1", ",", "single_ave_psnr", "/", "98", ")", ")", "\n", "print", "(", "\"===> {}th video Avg. wsSSIM: {:.6f}\"", ".", "format", "(", "idx", "//", "98", "+", "1", ",", "single_ave_ssim", "/", "98", ")", ")", "\n", "psnr_ssim", ".", "write", "(", "'===>{}th video avg wsPSNR:{:.4f} dB,wsSSIM:{:.6f}\\n'", ".", "format", "(", "idx", "//", "98", "+", "1", ",", "single_ave_psnr", "/", "98", ",", "single_ave_ssim", "/", "98", ")", ")", "\n", "single_ave_psnr", "=", "0", "\n", "single_ave_ssim", "=", "0", "\n", "\n", "", "", "print", "(", "\"===> All Avg. wsPSNR: {:.4f} dB\"", ".", "format", "(", "ave_psnr", "/", "len", "(", "valLoader", ")", ")", ")", "\n", "print", "(", "\"===> ALL Avg. wsSSIM: {:.6f}\"", ".", "format", "(", "ave_ssim", "/", "len", "(", "valLoader", ")", ")", ")", "\n", "psnr_ssim", ".", "write", "(", "'===>all videos avg wsPSNR:{:.4f} dB,wsSSIM:{:.6f}\\n'", ".", "format", "(", "ave_psnr", "/", "len", "(", "valLoader", ")", ",", "ave_ssim", "/", "len", "(", "valLoader", ")", ")", ")", "\n", "\n", "", "", "print", "(", "'testing finished!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.model_log.checkpoint": [[8, 14], ["torch.save", "print", "os.path.exists", "os.mkdir", "model.state_dict"], "function", ["None"], ["def", "checkpoint", "(", "model", ",", "epoch", ",", "model_save_folder", ",", "model_type", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "model_save_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "model_save_folder", ")", "\n", "", "model_out_path", "=", "model_save_folder", "+", "'/'", "+", "model_type", "+", "\"_epoch_{}.pth\"", ".", "format", "(", "epoch", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_out_path", ")", "\n", "print", "(", "\"Checkpoint saved to {}\"", ".", "format", "(", "model_out_path", ")", ")", "\n", "# write_log(opt.train_log,log_file,\"Checkpoint saved to {}\".format(model_out_path))", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.model_log.print_network": [[18, 24], ["net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "            ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.model_log.write_log": [[26, 32], ["open.write", "open.close", "open"], "function", ["None"], ["", "def", "write_log", "(", "log_path", ",", "log_file", ",", "log", ",", "refresh", "=", "False", ")", ":", "\n", "#print(log)", "\n", "    ", "log_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "if", "refresh", ":", "\n", "            ", "log_file", ".", "close", "(", ")", "\n", "log_file", "=", "open", "(", "log_path", "+", "'/log.txt'", ",", "'a'", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_ssim.generate_ws": [[13, 16], ["numpy.cos"], "function", ["None"], ["def", "generate_ws", "(", "i", ",", "j", ",", "M", ",", "N", ")", ":", "\n", "    ", "res", "=", "np", ".", "cos", "(", "(", "i", "+", "0.5", "-", "N", "/", "2", ")", "*", "np", ".", "pi", "/", "N", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_ssim.estws": [[18, 27], ["numpy.zeros_like", "range", "range", "ws_ssim.generate_ws"], "function", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_ssim.generate_ws"], ["", "def", "estws", "(", "map_ssim", ")", ":", "\n", "    ", "N", ",", "M", "=", "map_ssim", ".", "shape", "\n", "ws_map", "=", "np", ".", "zeros_like", "(", "map_ssim", ")", "\n", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "M", ")", ":", "\n", "            ", "ws_map", "[", "i", "]", "[", "j", "]", "=", "generate_ws", "(", "i", ",", "j", ",", "M", ",", "N", ")", "\n", "\n", "", "", "return", "ws_map", "\n", "# cv2.imwrite(\"ws_map.png\",ws_map*255)", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_ssim.compute_ssim": [[31, 98], ["numpy.zeros", "numpy.zeros", "range", "img_mat_1.astype.astype", "img_mat_2.astype.astype", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "numpy.average", "numpy.average", "range", "numpy.ma.core.exp"], "function", ["None"], ["", "def", "compute_ssim", "(", "img_mat_1", ",", "img_mat_2", ")", ":", "\n", "#Variables for Gaussian kernel definition", "\n", "    ", "gaussian_kernel_sigma", "=", "1.5", "\n", "gaussian_kernel_width", "=", "11", "\n", "gaussian_kernel", "=", "numpy", ".", "zeros", "(", "(", "gaussian_kernel_width", ",", "gaussian_kernel_width", ")", ")", "\n", "\n", "#Fill Gaussian kernel", "\n", "for", "i", "in", "range", "(", "gaussian_kernel_width", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "gaussian_kernel_width", ")", ":", "\n", "            ", "gaussian_kernel", "[", "i", ",", "j", "]", "=", "(", "1", "/", "(", "2", "*", "pi", "*", "(", "gaussian_kernel_sigma", "**", "2", ")", ")", ")", "*", "exp", "(", "-", "(", "(", "(", "i", "-", "5", ")", "**", "2", ")", "+", "(", "(", "j", "-", "5", ")", "**", "2", ")", ")", "/", "(", "2", "*", "(", "gaussian_kernel_sigma", "**", "2", ")", ")", ")", "\n", "\n", "#Convert image matrices to double precision (like in the Matlab version)", "\n", "", "", "img_mat_1", "=", "img_mat_1", ".", "astype", "(", "numpy", ".", "float", ")", "\n", "img_mat_2", "=", "img_mat_2", ".", "astype", "(", "numpy", ".", "float", ")", "\n", "\n", "#Squares of input matrices", "\n", "img_mat_1_sq", "=", "img_mat_1", "**", "2", "\n", "img_mat_2_sq", "=", "img_mat_2", "**", "2", "\n", "img_mat_12", "=", "img_mat_1", "*", "img_mat_2", "\n", "\n", "#Means obtained by Gaussian filtering of inputs", "\n", "img_mat_mu_1", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img_mat_1", ",", "gaussian_kernel", ")", "\n", "img_mat_mu_2", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img_mat_2", ",", "gaussian_kernel", ")", "\n", "\n", "#Squares of means", "\n", "img_mat_mu_1_sq", "=", "img_mat_mu_1", "**", "2", "\n", "img_mat_mu_2_sq", "=", "img_mat_mu_2", "**", "2", "\n", "img_mat_mu_12", "=", "img_mat_mu_1", "*", "img_mat_mu_2", "\n", "\n", "#Variances obtained by Gaussian filtering of inputs' squares", "\n", "img_mat_sigma_1_sq", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img_mat_1_sq", ",", "gaussian_kernel", ")", "\n", "img_mat_sigma_2_sq", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img_mat_2_sq", ",", "gaussian_kernel", ")", "\n", "\n", "#Covariance", "\n", "img_mat_sigma_12", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "img_mat_12", ",", "gaussian_kernel", ")", "\n", "\n", "#Centered squares of variances", "\n", "img_mat_sigma_1_sq", "=", "img_mat_sigma_1_sq", "-", "img_mat_mu_1_sq", "\n", "img_mat_sigma_2_sq", "=", "img_mat_sigma_2_sq", "-", "img_mat_mu_2_sq", "\n", "img_mat_sigma_12", "=", "img_mat_sigma_12", "-", "img_mat_mu_12", ";", "\n", "\n", "#c1/c2 constants", "\n", "#First use: manual fitting", "\n", "c_1", "=", "6.5025", "\n", "c_2", "=", "58.5225", "\n", "\n", "#Second use: change k1,k2 & c1,c2 depend on L (width of color map)", "\n", "l", "=", "255", "\n", "k_1", "=", "0.01", "\n", "c_1", "=", "(", "k_1", "*", "l", ")", "**", "2", "\n", "k_2", "=", "0.03", "\n", "c_2", "=", "(", "k_2", "*", "l", ")", "**", "2", "\n", "\n", "#Numerator of SSIM", "\n", "num_ssim", "=", "(", "2", "*", "img_mat_mu_12", "+", "c_1", ")", "*", "(", "2", "*", "img_mat_sigma_12", "+", "c_2", ")", "\n", "#Denominator of SSIM", "\n", "den_ssim", "=", "(", "img_mat_mu_1_sq", "+", "img_mat_mu_2_sq", "+", "c_1", ")", "*", "(", "img_mat_sigma_1_sq", "+", "img_mat_sigma_2_sq", "+", "c_2", ")", "\n", "#SSIM", "\n", "ssim_map", "=", "num_ssim", "/", "den_ssim", "\n", "index", "=", "numpy", ".", "average", "(", "ssim_map", ")", "\n", "\n", "# print index", "\n", "\n", "return", "ssim_map", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_ssim.ws_ssim": [[100, 110], ["ws_ssim.compute_ssim", "ws_ssim.estws", "numpy.sum", "estws.sum"], "function", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_ssim.compute_ssim", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.ws_ssim.estws"], ["", "def", "ws_ssim", "(", "image1", ",", "image2", ")", ":", "\n", "\n", "    ", "map_ssim", ",", "MSSIM", "=", "compute_ssim", "(", "image1", ",", "image2", ")", "\n", "ws", "=", "estws", "(", "map_ssim", ")", "\n", "wsssim", "=", "np", ".", "sum", "(", "map_ssim", "*", "ws", ")", "/", "ws", ".", "sum", "(", ")", "\n", "# print(wsssim)", "\n", "# print(\"WS-SSIM \",wsssim)", "\n", "\n", "\n", "return", "wsssim", "", "", ""]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.psnr": [[9, 20], ["print", "print", "numpy.mean", "print", "numpy.sum", "float", "math.log10", "math.sqrt"], "function", ["None"], ["def", "psnr", "(", "img1", ",", "img2", ")", ":", "\n", "# img1 and img2 have range [0, 255]", "\n", "# img1 = img1.astype(np.float64)", "\n", "# img2 = img2.astype(np.float64)", "\n", "    ", "print", "(", "'before mse = '", ",", "np", ".", "sum", "(", "(", "img1", "-", "img2", ")", "**", "2", ")", ")", "\n", "print", "(", "'mse weight = '", ",", "img1", ".", "shape", "[", "0", "]", "*", "img1", ".", "shape", "[", "1", "]", ")", "\n", "mse", "=", "np", ".", "mean", "(", "(", "img1", "-", "img2", ")", "**", "2", ")", "\n", "print", "(", "'mse='", ",", "mse", ")", "\n", "if", "mse", "==", "0", ":", "\n", "        ", "return", "float", "(", "'inf'", ")", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "math", ".", "sqrt", "(", "mse", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.ws_psnr": [[21, 33], ["img1.astype.astype", "img2.astype.astype", "numpy.zeros", "range", "math.cos", "numpy.sum", "float", "math.log10", "numpy.sum", "math.sqrt"], "function", ["None"], ["", "def", "ws_psnr", "(", "img1", ",", "img2", ")", ":", "\n", "# img1 and img2 have range [0, 255]", "\n", "    ", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "h", ",", "w", "=", "img1", ".", "shape", "\n", "weight", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ")", "\n", "for", "i", "in", "range", "(", "h", ")", ":", "\n", "        ", "weight", "[", "i", ",", ":", "]", "=", "math", ".", "cos", "(", "(", "i", "-", "h", "/", "2", "+", "0.5", ")", "*", "(", "math", ".", "pi", "/", "h", ")", ")", "\n", "", "wmse", "=", "(", "1", "/", "np", ".", "sum", "(", "weight", ")", ")", "*", "np", ".", "sum", "(", "(", "img1", "-", "img2", ")", "**", "2", "*", "weight", ")", "\n", "if", "wmse", "==", "0", ":", "\n", "        ", "return", "float", "(", "'inf'", ")", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "math", ".", "sqrt", "(", "wmse", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.ws_psnr2": [[34, 48], ["img1.astype.astype", "img2.astype.astype", "numpy.zeros", "range", "range", "numpy.sum", "float", "math.log10", "numpy.sum", "math.sqrt"], "function", ["None"], ["", "def", "ws_psnr2", "(", "img1", ",", "img2", ")", ":", "\n", "# img1 and img2 have range [0, 255]", "\n", "    ", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "h", ",", "w", "=", "img1", ".", "shape", "\n", "weight", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "h", "//", "6", "+", "1", ")", ":", "\n", "        ", "weight", "[", "i", "-", "1", ",", ":", "]", "=", "-", "(", "(", "h", "//", "6", "-", "i", ")", "*", "1.0", "/", "(", "h", "//", "6", ")", ")", "+", "1.0", "#f(x) = -x + 1", "\n", "", "for", "i", "in", "range", "(", "h", "//", "6", ")", ":", "\n", "        ", "weight", "[", "h", "-", "1", "-", "i", ",", ":", "]", "=", "weight", "[", "i", ",", ":", "]", "\n", "", "wmse", "=", "(", "1", "/", "np", ".", "sum", "(", "weight", ")", ")", "*", "np", ".", "sum", "(", "(", "img1", "-", "img2", ")", "**", "2", "*", "weight", ")", "\n", "if", "wmse", "==", "0", ":", "\n", "        ", "return", "float", "(", "'inf'", ")", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "math", ".", "sqrt", "(", "wmse", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.ssim": [[49, 71], ["img1.astype.astype", "img2.astype.astype", "cv2.getGaussianKernel", "numpy.outer", "ssim_map.mean", "cv2.getGaussianKernel.transpose", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D", "cv2.filter2D"], "function", ["None"], ["", "def", "ssim", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "C1", "=", "(", "0.01", "*", "255", ")", "**", "2", "\n", "C2", "=", "(", "0.03", "*", "255", ")", "**", "2", "\n", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "kernel", "=", "cv2", ".", "getGaussianKernel", "(", "11", ",", "1.5", ")", "#\u4ea7\u751f\u4e00\u4e2a11\u7ef4\u7684\u5217\u5411\u91cf\uff0c\u5176\u503c\u8981\u7b26\u5408\u65b9\u5dee1.5", "\n", "#11*11", "\n", "window", "=", "np", ".", "outer", "(", "kernel", ",", "kernel", ".", "transpose", "(", ")", ")", "#\u7528\u4e8e\u8ba1\u7b97\u5916\u79ef\uff0c\u5373\u4e00\u4e2am\u7ef4\u6570\u7ec4a\u548c\u4e00\u4e2an\u7ef4\u6570\u7ec4b\uff0c\u5916\u79ef\u7ed3\u679c\u4e3a\u4e00\u4e2am*n\u7684\u6570\u7ec4,\u5143\u7d20\u4e3ares[i,j]=a[i]*b[j]", "\n", "\n", "mu1", "=", "cv2", ".", "filter2D", "(", "img1", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "# valid", "\n", "mu2", "=", "cv2", ".", "filter2D", "(", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "\n", "mu1_sq", "=", "mu1", "**", "2", "\n", "mu2_sq", "=", "mu2", "**", "2", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "sigma1_sq", "=", "cv2", ".", "filter2D", "(", "img1", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_sq", "\n", "sigma2_sq", "=", "cv2", ".", "filter2D", "(", "img2", "**", "2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu2_sq", "\n", "sigma12", "=", "cv2", ".", "filter2D", "(", "img1", "*", "img2", ",", "-", "1", ",", "window", ")", "[", "5", ":", "-", "5", ",", "5", ":", "-", "5", "]", "-", "mu1_mu2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "\n", "(", "sigma1_sq", "+", "sigma2_sq", "+", "C2", ")", ")", "\n", "return", "ssim_map", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.calculate_ssim": [[73, 92], ["ValueError", "psnr.ssim", "ValueError", "range", "numpy.array().mean", "ssims.append", "psnr.ssim", "psnr.ssim", "numpy.array", "numpy.squeeze", "numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.ssim", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.ssim", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.ssim"], ["", "def", "calculate_ssim", "(", "img1", ",", "img2", ")", ":", "\n", "    ", "'''calculate SSIM\n    the same outputs as MATLAB's\n    img1, img2: [0, 255]\n    '''", "\n", "if", "not", "img1", ".", "shape", "==", "img2", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "'Input images must have the same dimensions.'", ")", "\n", "", "if", "img1", ".", "ndim", "==", "2", ":", "\n", "        ", "return", "ssim", "(", "img1", ",", "img2", ")", "\n", "", "elif", "img1", ".", "ndim", "==", "3", ":", "\n", "        ", "if", "img1", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "            ", "ssims", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "ssims", ".", "append", "(", "ssim", "(", "img1", ",", "img2", ")", ")", "\n", "", "return", "np", ".", "array", "(", "ssims", ")", ".", "mean", "(", ")", "\n", "", "elif", "img1", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "            ", "return", "ssim", "(", "np", ".", "squeeze", "(", "img1", ")", ",", "np", ".", "squeeze", "(", "img2", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Wrong input image dimensions.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.cal_psnr": [[93, 106], ["sorted", "sorted", "range", "print", "print", "print", "os.listdir", "os.listdir", "len", "scipy.misc.imread", "scipy.misc.imread", "os.path.join", "os.path.join", "psnr.psnr", "psnr.calculate_ssim", "len", "len"], "function", ["home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.psnr", "home.repos.pwc.inspect_result.lovepiano_SMFN_For_360VSR.None.psnr.calculate_ssim"], ["", "", "def", "cal_psnr", "(", "LRdir", ",", "HRdir", ")", ":", "\n", "    ", "imgs_lr", "=", "sorted", "(", "os", ".", "listdir", "(", "LRdir", ")", ")", "\n", "imgs_hr", "=", "sorted", "(", "os", ".", "listdir", "(", "HRdir", ")", ")", "\n", "total_psnr", "=", "0", "\n", "total_ssim", "=", "0", "\n", "for", "index", "in", "range", "(", "len", "(", "imgs_lr", ")", ")", ":", "\n", "        ", "lr", "=", "scipy", ".", "misc", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "LRdir", ",", "imgs_lr", "[", "index", "]", ")", ")", "\n", "hr", "=", "scipy", ".", "misc", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "HRdir", ",", "imgs_hr", "[", "index", "]", ")", ")", "#\u662fNumpy\u6570\u7ec4\u7c7b\u578b", "\n", "total_psnr", "=", "total_psnr", "+", "psnr", "(", "lr", ",", "hr", ")", "\n", "total_ssim", "=", "total_ssim", "+", "calculate_ssim", "(", "lr", ",", "hr", ")", "\n", "", "print", "(", "total_psnr", "/", "len", "(", "imgs_lr", ")", ")", "\n", "print", "(", "'-----------------------'", ")", "\n", "print", "(", "total_ssim", "/", "len", "(", "imgs_lr", ")", ")", "\n", "\n"]]}