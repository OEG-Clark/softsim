{"home.repos.pwc.inspect_result.imatge-upc_salgan.scripts.utils.chunks": [[9, 13], ["xrange", "len"], "function", ["None"], ["def", "chunks", "(", "l", ",", "n", ")", ":", "\n", "    ", "\"\"\"Yield successive n-sized chunks from l.\"\"\"", "\n", "for", "i", "in", "xrange", "(", "0", ",", "len", "(", "l", ")", ",", "n", ")", ":", "\n", "        ", "yield", "l", "[", "i", ":", "i", "+", "n", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.scripts.utils.load_weights": [[15, 25], ["lasagne.layers.set_all_param_values", "numpy.load", "range", "len"], "function", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.ImageContainer.load"], ["", "", "def", "load_weights", "(", "net", ",", "path", ",", "epochtoload", ")", ":", "\n", "    ", "\"\"\"\n    Load a pretrained model\n    :param epochtoload: epoch to load\n    :param net: model object\n    :param path: path of the weights to be set\n    \"\"\"", "\n", "with", "np", ".", "load", "(", "HOME_DIR", "+", "path", "+", "\"modelWeights{:04d}.npz\"", ".", "format", "(", "epochtoload", ")", ")", "as", "f", ":", "\n", "        ", "param_values", "=", "[", "f", "[", "'arr_%d'", "%", "i", "]", "for", "i", "in", "range", "(", "len", "(", "f", ".", "files", ")", ")", "]", "\n", "", "lasagne", ".", "layers", ".", "set_all_param_values", "(", "net", ",", "param_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.scripts.utils.predict": [[27, 53], ["numpy.zeros", "cv2.resize.astype().transpose", "numpy.squeeze", "cv2.resize", "cv2.GaussianBlur", "numpy.clip", "cv2.resize", "model.predictFunction", "cv2.imwrite", "cv2.imwrite", "cv2.resize.astype", "os.path.join"], "function", ["None"], ["", "def", "predict", "(", "model", ",", "image_stimuli", ",", "num_epoch", "=", "None", ",", "name", "=", "None", ",", "path_output_maps", "=", "None", ")", ":", "\n", "\n", "    ", "size", "=", "(", "image_stimuli", ".", "shape", "[", "1", "]", ",", "image_stimuli", ".", "shape", "[", "0", "]", ")", "\n", "blur_size", "=", "5", "\n", "\n", "if", "image_stimuli", ".", "shape", "[", ":", "2", "]", "!=", "(", "model", ".", "inputHeight", ",", "model", ".", "inputWidth", ")", ":", "\n", "        ", "image_stimuli", "=", "cv2", ".", "resize", "(", "image_stimuli", ",", "(", "model", ".", "inputWidth", ",", "model", ".", "inputHeight", ")", ",", "interpolation", "=", "cv2", ".", "INTER_AREA", ")", "\n", "\n", "", "blob", "=", "np", ".", "zeros", "(", "(", "1", ",", "3", ",", "model", ".", "inputHeight", ",", "model", ".", "inputWidth", ")", ",", "theano", ".", "config", ".", "floatX", ")", "\n", "\n", "blob", "[", "0", ",", "...", "]", "=", "(", "image_stimuli", ".", "astype", "(", "theano", ".", "config", ".", "floatX", ")", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "result", "=", "np", ".", "squeeze", "(", "model", ".", "predictFunction", "(", "blob", ")", ")", "\n", "saliency_map", "=", "(", "result", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "# resize back to original size", "\n", "saliency_map", "=", "cv2", ".", "resize", "(", "saliency_map", ",", "size", ",", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "# blur", "\n", "saliency_map", "=", "cv2", ".", "GaussianBlur", "(", "saliency_map", ",", "(", "blur_size", ",", "blur_size", ")", ",", "0", ")", "\n", "# clip again", "\n", "saliency_map", "=", "np", ".", "clip", "(", "saliency_map", ",", "0", ",", "255", ")", "\n", "if", "name", "is", "None", ":", "\n", "# When we use for testing, there is no file name provided.", "\n", "        ", "cv2", ".", "imwrite", "(", "'./'", "+", "path_output_maps", "+", "'/validationRandomSaliencyPred_{:04d}.png'", ".", "format", "(", "num_epoch", ")", ",", "saliency_map", ")", "\n", "", "else", ":", "\n", "        ", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "path_output_maps", ",", "name", "+", "'.jpg'", ")", ",", "saliency_map", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.model_bce.ModelBCE.__init__": [[12, 36], ["model.Model.__init__", "generator.build", "lasagne.layers.get_output", "lasagne.layers.get_output", "theano.function", "theano.function", "theano.function", "theano.function", "theano.signal.pool.pool_2d", "theano.signal.pool.pool_2d", "theano.signal.pool.pool_2d", "theano.signal.pool.pool_2d", "lasagne.objectives.binary_crossentropy().mean", "lasagne.layers.get_all_params", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "lasagne.updates.nesterov_momentum", "theano.function", "theano.function", "theano.function", "theano.function", "numpy.array", "lasagne.objectives.binary_crossentropy"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__"], ["    ", "def", "__init__", "(", "self", ",", "w", ",", "h", ",", "batch_size", "=", "32", ",", "lr", "=", "0.001", ")", ":", "\n", "        ", "super", "(", "ModelBCE", ",", "self", ")", ".", "__init__", "(", "w", ",", "h", ",", "batch_size", ")", "\n", "\n", "self", ".", "net", "=", "generator", ".", "build", "(", "self", ".", "inputHeight", ",", "self", ".", "inputWidth", ",", "self", ".", "input_var", ")", "\n", "\n", "output_layer_name", "=", "'output'", "\n", "prediction", "=", "lasagne", ".", "layers", ".", "get_output", "(", "self", ".", "net", "[", "output_layer_name", "]", ")", "\n", "\n", "test_prediction", "=", "lasagne", ".", "layers", ".", "get_output", "(", "self", ".", "net", "[", "output_layer_name", "]", ",", "deterministic", "=", "True", ")", "\n", "self", ".", "predictFunction", "=", "theano", ".", "function", "(", "[", "self", ".", "input_var", "]", ",", "test_prediction", ")", "\n", "\n", "output_var_pooled", "=", "T", ".", "signal", ".", "pool", ".", "pool_2d", "(", "self", ".", "output_var", ",", "(", "4", ",", "4", ")", ",", "mode", "=", "\"average_exc_pad\"", ",", "ignore_border", "=", "True", ")", "\n", "prediction_pooled", "=", "T", ".", "signal", ".", "pool", ".", "pool_2d", "(", "prediction", ",", "(", "4", ",", "4", ")", ",", "mode", "=", "\"average_exc_pad\"", ",", "ignore_border", "=", "True", ")", "\n", "\n", "bce", "=", "lasagne", ".", "objectives", ".", "binary_crossentropy", "(", "prediction_pooled", ",", "output_var_pooled", ")", ".", "mean", "(", ")", "\n", "train_err", "=", "bce", "\n", "\n", "# parameters update and training", "\n", "G_params", "=", "lasagne", ".", "layers", ".", "get_all_params", "(", "self", ".", "net", "[", "output_layer_name", "]", ",", "trainable", "=", "True", ")", "\n", "self", ".", "G_lr", "=", "theano", ".", "shared", "(", "np", ".", "array", "(", "lr", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "G_updates", "=", "lasagne", ".", "updates", ".", "nesterov_momentum", "(", "train_err", ",", "G_params", ",", "learning_rate", "=", "self", ".", "G_lr", ",", "momentum", "=", "0.5", ")", "\n", "\n", "self", ".", "G_trainFunction", "=", "theano", ".", "function", "(", "inputs", "=", "[", "self", ".", "input_var", ",", "self", ".", "output_var", "]", ",", "outputs", "=", "train_err", ",", "updates", "=", "G_updates", ",", "\n", "allow_input_downcast", "=", "True", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.layers.RGBtoBGRLayer.__init__": [[7, 31], ["numpy.array", "super().__init__", "bgr_mean.astype"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__"], ["    ", "def", "__init__", "(", "self", ",", "l_in", ",", "bgr_mean", "=", "np", ".", "array", "(", "[", "103.939", ",", "116.779", ",", "123.68", "]", ")", ",", "\n", "data_format", "=", "'bc01'", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"A Layer to normalize and convert images from RGB to BGR\n        This layer converts images from RGB to BGR to adapt to Caffe\n        that uses OpenCV, which uses BGR. It also subtracts the\n        per-pixel mean.\n        Parameters\n        ----------\n        l_in : :class:``lasagne.layers.Layer``\n            The incoming layer, typically an\n            :class:``lasagne.layers.InputLayer``\n        bgr_mean : iterable of 3 ints\n            The mean of each channel. By default, the ImageNet\n            mean values are used.\n        data_format : str\n            The format of l_in, either `b01c` (batch, rows, cols,\n            channels) or `bc01` (batch, channels, rows, cols)\n        \"\"\"", "\n", "super", "(", "RGBtoBGRLayer", ",", "self", ")", ".", "__init__", "(", "l_in", ",", "**", "kwargs", ")", "\n", "assert", "data_format", "in", "[", "'bc01'", ",", "'b01c'", "]", "\n", "self", ".", "l_in", "=", "l_in", "\n", "floatX", "=", "theano", ".", "config", ".", "floatX", "\n", "self", ".", "bgr_mean", "=", "bgr_mean", ".", "astype", "(", "floatX", ")", "\n", "self", ".", "data_format", "=", "data_format", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.layers.RGBtoBGRLayer.get_output_for": [[32, 40], ["None"], "methods", ["None"], ["", "def", "get_output_for", "(", "self", ",", "input_im", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "data_format", "==", "'bc01'", ":", "\n", "            ", "input_im", "=", "input_im", "[", ":", ",", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "input_im", "-=", "self", ".", "bgr_mean", "[", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "", "else", ":", "\n", "            ", "input_im", "=", "input_im", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "input_im", "-=", "self", ".", "bgr_mean", "\n", "", "return", "input_im", "\n", "", "", ""]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.WeightNormLayer.__init__": [[46, 80], ["lasagne.init.Constant", "lasagne.init.Constant", "lasagne.init.Normal", "super().__init__", "nn.WeightNormLayer.add_param", "nn.WeightNormLayer.add_param", "len", "isinstance", "theano.sqrt", "theano.sqrt", "theano.sum", "theano.sum", "theano.sqrt", "theano.sqrt", "theano.square", "theano.square", "theano.sum", "theano.sum", "theano.square", "theano.square"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__"], ["    ", "def", "__init__", "(", "self", ",", "incoming", ",", "b", "=", "lasagne", ".", "init", ".", "Constant", "(", "0.", ")", ",", "g", "=", "lasagne", ".", "init", ".", "Constant", "(", "1.", ")", ",", "\n", "W", "=", "lasagne", ".", "init", ".", "Normal", "(", "0.05", ")", ",", "train_g", "=", "False", ",", "init_stdv", "=", "1.", ",", "nonlinearity", "=", "relu", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "WeightNormLayer", ",", "self", ")", ".", "__init__", "(", "incoming", ",", "**", "kwargs", ")", "\n", "self", ".", "nonlinearity", "=", "nonlinearity", "\n", "self", ".", "init_stdv", "=", "init_stdv", "\n", "k", "=", "self", ".", "input_shape", "[", "1", "]", "\n", "if", "b", "is", "not", "None", ":", "\n", "            ", "self", ".", "b", "=", "self", ".", "add_param", "(", "b", ",", "(", "k", ",", ")", ",", "name", "=", "\"b\"", ",", "regularizable", "=", "False", ")", "\n", "", "if", "g", "is", "not", "None", ":", "\n", "            ", "self", ".", "g", "=", "self", ".", "add_param", "(", "g", ",", "(", "k", ",", ")", ",", "name", "=", "\"g\"", ",", "regularizable", "=", "False", ",", "trainable", "=", "train_g", ")", "\n", "", "if", "len", "(", "self", ".", "input_shape", ")", "==", "4", ":", "\n", "            ", "self", ".", "axes_to_sum", "=", "(", "0", ",", "2", ",", "3", ")", "\n", "self", ".", "dimshuffle_args", "=", "[", "'x'", ",", "0", ",", "'x'", ",", "'x'", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "axes_to_sum", "=", "0", "\n", "self", ".", "dimshuffle_args", "=", "[", "'x'", ",", "0", "]", "\n", "\n", "# scale weights in layer below", "\n", "", "incoming", ".", "W_param", "=", "incoming", ".", "W", "\n", "#incoming.W_param.set_value(W.sample(incoming.W_param.get_value().shape))", "\n", "if", "incoming", ".", "W_param", ".", "ndim", "==", "4", ":", "\n", "            ", "if", "isinstance", "(", "incoming", ",", "Deconv2DLayer", ")", ":", "\n", "                ", "W_axes_to_sum", "=", "(", "0", ",", "2", ",", "3", ")", "\n", "W_dimshuffle_args", "=", "[", "'x'", ",", "0", ",", "'x'", ",", "'x'", "]", "\n", "", "else", ":", "\n", "                ", "W_axes_to_sum", "=", "(", "1", ",", "2", ",", "3", ")", "\n", "W_dimshuffle_args", "=", "[", "0", ",", "'x'", ",", "'x'", ",", "'x'", "]", "\n", "", "", "else", ":", "\n", "            ", "W_axes_to_sum", "=", "0", "\n", "W_dimshuffle_args", "=", "[", "'x'", ",", "0", "]", "\n", "", "if", "g", "is", "not", "None", ":", "\n", "            ", "incoming", ".", "W", "=", "incoming", ".", "W_param", "*", "(", "self", ".", "g", "/", "T", ".", "sqrt", "(", "1e-6", "+", "T", ".", "sum", "(", "T", ".", "square", "(", "incoming", ".", "W_param", ")", ",", "axis", "=", "W_axes_to_sum", ")", ")", ")", ".", "dimshuffle", "(", "*", "W_dimshuffle_args", ")", "\n", "", "else", ":", "\n", "            ", "incoming", ".", "W", "=", "incoming", ".", "W_param", "/", "T", ".", "sqrt", "(", "1e-6", "+", "T", ".", "sum", "(", "T", ".", "square", "(", "incoming", ".", "W_param", ")", ",", "axis", "=", "W_axes_to_sum", ",", "keepdims", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.WeightNormLayer.get_output_for": [[81, 92], ["nn.WeightNormLayer.nonlinearity", "theano.mean", "theano.mean", "theano.mean.dimshuffle", "inv_stdv.dimshuffle", "hasattr", "theano.sqrt", "theano.sqrt", "nn.WeightNormLayer.b.dimshuffle", "theano.mean", "theano.mean", "theano.square", "theano.square"], "methods", ["None"], ["", "", "def", "get_output_for", "(", "self", ",", "input", ",", "init", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "init", ":", "\n", "            ", "m", "=", "T", ".", "mean", "(", "input", ",", "self", ".", "axes_to_sum", ")", "\n", "input", "-=", "m", ".", "dimshuffle", "(", "*", "self", ".", "dimshuffle_args", ")", "\n", "inv_stdv", "=", "self", ".", "init_stdv", "/", "T", ".", "sqrt", "(", "T", ".", "mean", "(", "T", ".", "square", "(", "input", ")", ",", "self", ".", "axes_to_sum", ")", ")", "\n", "input", "*=", "inv_stdv", ".", "dimshuffle", "(", "*", "self", ".", "dimshuffle_args", ")", "\n", "self", ".", "init_updates", "=", "[", "(", "self", ".", "b", ",", "-", "m", "*", "inv_stdv", ")", ",", "(", "self", ".", "g", ",", "self", ".", "g", "*", "inv_stdv", ")", "]", "\n", "", "elif", "hasattr", "(", "self", ",", "'b'", ")", ":", "\n", "            ", "input", "+=", "self", ".", "b", ".", "dimshuffle", "(", "*", "self", ".", "dimshuffle_args", ")", "\n", "\n", "", "return", "self", ".", "nonlinearity", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.Deconv2DLayer.__init__": [[103, 118], ["lasagne.init.Normal", "lasagne.init.Constant", "super().__init__", "lasagne.layers.dnn.as_tuple", "lasagne.layers.dnn.as_tuple", "nn.Deconv2DLayer.add_param", "nn.Deconv2DLayer.add_param"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__"], ["    ", "def", "__init__", "(", "self", ",", "incoming", ",", "target_shape", ",", "filter_size", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "\n", "W", "=", "lasagne", ".", "init", ".", "Normal", "(", "0.05", ")", ",", "b", "=", "lasagne", ".", "init", ".", "Constant", "(", "0.", ")", ",", "nonlinearity", "=", "relu", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "Deconv2DLayer", ",", "self", ")", ".", "__init__", "(", "incoming", ",", "**", "kwargs", ")", "\n", "self", ".", "target_shape", "=", "target_shape", "\n", "self", ".", "nonlinearity", "=", "(", "lasagne", ".", "nonlinearities", ".", "identity", "if", "nonlinearity", "is", "None", "else", "nonlinearity", ")", "\n", "self", ".", "filter_size", "=", "lasagne", ".", "layers", ".", "dnn", ".", "as_tuple", "(", "filter_size", ",", "2", ")", "\n", "self", ".", "stride", "=", "lasagne", ".", "layers", ".", "dnn", ".", "as_tuple", "(", "stride", ",", "2", ")", "\n", "self", ".", "target_shape", "=", "target_shape", "\n", "\n", "self", ".", "W_shape", "=", "(", "incoming", ".", "output_shape", "[", "1", "]", ",", "target_shape", "[", "1", "]", ",", "filter_size", "[", "0", "]", ",", "filter_size", "[", "1", "]", ")", "\n", "self", ".", "W", "=", "self", ".", "add_param", "(", "W", ",", "self", ".", "W_shape", ",", "name", "=", "\"W\"", ")", "\n", "if", "b", "is", "not", "None", ":", "\n", "            ", "self", ".", "b", "=", "self", ".", "add_param", "(", "b", ",", "(", "target_shape", "[", "1", "]", ",", ")", ",", "name", "=", "\"b\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "b", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.Deconv2DLayer.get_output_for": [[119, 127], ["theano.nnet.abstract_conv.AbstractConv2d_gradInputs", "theano.nnet.abstract_conv.AbstractConv2d_gradInputs", "theano.nnet.abstract_conv.AbstractConv2d_gradInputs.", "nn.Deconv2DLayer.nonlinearity", "nn.Deconv2DLayer.b.dimshuffle"], "methods", ["None"], ["", "", "def", "get_output_for", "(", "self", ",", "input", ",", "**", "kwargs", ")", ":", "\n", "        ", "op", "=", "T", ".", "nnet", ".", "abstract_conv", ".", "AbstractConv2d_gradInputs", "(", "imshp", "=", "self", ".", "target_shape", ",", "kshp", "=", "self", ".", "W_shape", ",", "subsample", "=", "self", ".", "stride", ",", "border_mode", "=", "'half'", ")", "\n", "activation", "=", "op", "(", "self", ".", "W", ",", "input", ",", "self", ".", "target_shape", "[", "2", ":", "]", ")", "\n", "\n", "if", "self", ".", "b", "is", "not", "None", ":", "\n", "            ", "activation", "+=", "self", ".", "b", ".", "dimshuffle", "(", "'x'", ",", "0", ",", "'x'", ",", "'x'", ")", "\n", "\n", "", "return", "self", ".", "nonlinearity", "(", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.Deconv2DLayer.get_output_shape_for": [[128, 130], ["None"], "methods", ["None"], ["", "def", "get_output_shape_for", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "self", ".", "target_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.MinibatchLayer.__init__": [[133, 142], ["lasagne.init.Normal", "lasagne.init.Constant", "lasagne.init.Constant", "super().__init__", "int", "nn.MinibatchLayer.add_param", "nn.MinibatchLayer.add_param", "nn.MinibatchLayer.add_param", "numpy.prod", "theano.exp", "theano.exp", "theano.sqrt", "theano.sqrt", "theano.sum", "theano.sum", "theano.square", "theano.square"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__"], ["    ", "def", "__init__", "(", "self", ",", "incoming", ",", "num_kernels", ",", "dim_per_kernel", "=", "5", ",", "theta", "=", "lasagne", ".", "init", ".", "Normal", "(", "0.05", ")", ",", "\n", "log_weight_scale", "=", "lasagne", ".", "init", ".", "Constant", "(", "0.", ")", ",", "b", "=", "lasagne", ".", "init", ".", "Constant", "(", "-", "1.", ")", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "MinibatchLayer", ",", "self", ")", ".", "__init__", "(", "incoming", ",", "**", "kwargs", ")", "\n", "self", ".", "num_kernels", "=", "num_kernels", "\n", "num_inputs", "=", "int", "(", "np", ".", "prod", "(", "self", ".", "input_shape", "[", "1", ":", "]", ")", ")", "\n", "self", ".", "theta", "=", "self", ".", "add_param", "(", "theta", ",", "(", "num_inputs", ",", "num_kernels", ",", "dim_per_kernel", ")", ",", "name", "=", "\"theta\"", ")", "\n", "self", ".", "log_weight_scale", "=", "self", ".", "add_param", "(", "log_weight_scale", ",", "(", "num_kernels", ",", "dim_per_kernel", ")", ",", "name", "=", "\"log_weight_scale\"", ")", "\n", "self", ".", "W", "=", "self", ".", "theta", "*", "(", "T", ".", "exp", "(", "self", ".", "log_weight_scale", ")", "/", "T", ".", "sqrt", "(", "T", ".", "sum", "(", "T", ".", "square", "(", "self", ".", "theta", ")", ",", "axis", "=", "0", ")", ")", ")", ".", "dimshuffle", "(", "'x'", ",", "0", ",", "1", ")", "\n", "self", ".", "b", "=", "self", ".", "add_param", "(", "b", ",", "(", "num_kernels", ",", ")", ",", "name", "=", "\"b\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.MinibatchLayer.get_output_shape_for": [[143, 145], ["numpy.prod"], "methods", ["None"], ["", "def", "get_output_shape_for", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "(", "input_shape", "[", "0", "]", ",", "np", ".", "prod", "(", "input_shape", "[", "1", ":", "]", ")", "+", "self", ".", "num_kernels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.MinibatchLayer.get_output_for": [[146, 171], ["theano.tensordot", "theano.tensordot", "theano.sum", "theano.sum", "theano.concatenate", "theano.concatenate", "input.flatten.flatten.flatten", "theano.sum", "theano.sum", "mean_min_abs_dif.dimshuffle", "theano.exp", "theano.exp", "theano.mean", "theano.mean", "theano.mean.dimshuffle", "nn.MinibatchLayer.init_updates.append", "nn.MinibatchLayer.b.dimshuffle", "abs", "theano.eye().dimshuffle", "theano.eye().dimshuffle", "theano.mean", "theano.mean", "theano.min", "theano.min", "theano.tensordot.dimshuffle", "theano.tensordot.dimshuffle", "theano.eye", "theano.eye", "theano.log().dimshuffle", "theano.log().dimshuffle", "theano.log", "theano.log"], "methods", ["None"], ["", "def", "get_output_for", "(", "self", ",", "input", ",", "init", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "input", ".", "ndim", ">", "2", ":", "\n", "# if the input has more than two dimensions, flatten it into a", "\n", "# batch of feature vectors.", "\n", "            ", "input", "=", "input", ".", "flatten", "(", "2", ")", "\n", "\n", "", "activation", "=", "T", ".", "tensordot", "(", "input", ",", "self", ".", "W", ",", "[", "[", "1", "]", ",", "[", "0", "]", "]", ")", "\n", "abs_dif", "=", "(", "T", ".", "sum", "(", "abs", "(", "activation", ".", "dimshuffle", "(", "0", ",", "1", ",", "2", ",", "'x'", ")", "-", "activation", ".", "dimshuffle", "(", "'x'", ",", "1", ",", "2", ",", "0", ")", ")", ",", "axis", "=", "2", ")", "\n", "+", "1e6", "*", "T", ".", "eye", "(", "input", ".", "shape", "[", "0", "]", ")", ".", "dimshuffle", "(", "0", ",", "'x'", ",", "1", ")", ")", "\n", "\n", "if", "init", ":", "\n", "            ", "mean_min_abs_dif", "=", "0.5", "*", "T", ".", "mean", "(", "T", ".", "min", "(", "abs_dif", ",", "axis", "=", "2", ")", ",", "axis", "=", "0", ")", "\n", "abs_dif", "/=", "mean_min_abs_dif", ".", "dimshuffle", "(", "'x'", ",", "0", ",", "'x'", ")", "\n", "self", ".", "init_updates", "=", "[", "(", "self", ".", "log_weight_scale", ",", "self", ".", "log_weight_scale", "-", "T", ".", "log", "(", "mean_min_abs_dif", ")", ".", "dimshuffle", "(", "0", ",", "'x'", ")", ")", "]", "\n", "\n", "", "f", "=", "T", ".", "sum", "(", "T", ".", "exp", "(", "-", "abs_dif", ")", ",", "axis", "=", "2", ")", "\n", "\n", "if", "init", ":", "\n", "            ", "mf", "=", "T", ".", "mean", "(", "f", ",", "axis", "=", "0", ")", "\n", "f", "-=", "mf", ".", "dimshuffle", "(", "'x'", ",", "0", ")", "\n", "self", ".", "init_updates", ".", "append", "(", "(", "self", ".", "b", ",", "-", "mf", ")", ")", "\n", "", "else", ":", "\n", "            ", "f", "+=", "self", ".", "b", ".", "dimshuffle", "(", "'x'", ",", "0", ")", "\n", "\n", "", "return", "T", ".", "concatenate", "(", "[", "input", ",", "f", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.BatchNormLayer.__init__": [[173, 189], ["lasagne.init.Constant", "lasagne.init.Constant", "super().__init__", "nn.BatchNormLayer.add_param", "nn.BatchNormLayer.add_param", "nn.BatchNormLayer.add_param", "nn.BatchNormLayer.add_param", "lasagne.init.Constant", "lasagne.init.Constant", "len"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__"], ["    ", "def", "__init__", "(", "self", ",", "incoming", ",", "b", "=", "lasagne", ".", "init", ".", "Constant", "(", "0.", ")", ",", "g", "=", "lasagne", ".", "init", ".", "Constant", "(", "1.", ")", ",", "nonlinearity", "=", "relu", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "BatchNormLayer", ",", "self", ")", ".", "__init__", "(", "incoming", ",", "**", "kwargs", ")", "\n", "self", ".", "nonlinearity", "=", "nonlinearity", "\n", "k", "=", "self", ".", "input_shape", "[", "1", "]", "\n", "if", "b", "is", "not", "None", ":", "\n", "            ", "self", ".", "b", "=", "self", ".", "add_param", "(", "b", ",", "(", "k", ",", ")", ",", "name", "=", "\"b\"", ",", "regularizable", "=", "False", ")", "\n", "", "if", "g", "is", "not", "None", ":", "\n", "            ", "self", ".", "g", "=", "self", ".", "add_param", "(", "g", ",", "(", "k", ",", ")", ",", "name", "=", "\"g\"", ",", "regularizable", "=", "False", ")", "\n", "", "self", ".", "avg_batch_mean", "=", "self", ".", "add_param", "(", "lasagne", ".", "init", ".", "Constant", "(", "0.", ")", ",", "(", "k", ",", ")", ",", "name", "=", "\"avg_batch_mean\"", ",", "regularizable", "=", "False", ",", "trainable", "=", "False", ")", "\n", "self", ".", "avg_batch_var", "=", "self", ".", "add_param", "(", "lasagne", ".", "init", ".", "Constant", "(", "1.", ")", ",", "(", "k", ",", ")", ",", "name", "=", "\"avg_batch_var\"", ",", "regularizable", "=", "False", ",", "trainable", "=", "False", ")", "\n", "if", "len", "(", "self", ".", "input_shape", ")", "==", "4", ":", "\n", "            ", "self", ".", "axes_to_sum", "=", "(", "0", ",", "2", ",", "3", ")", "\n", "self", ".", "dimshuffle_args", "=", "[", "'x'", ",", "0", ",", "'x'", ",", "'x'", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "axes_to_sum", "=", "0", "\n", "self", ".", "dimshuffle_args", "=", "[", "'x'", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.BatchNormLayer.get_output_for": [[190, 213], ["hasattr", "hasattr", "nn.BatchNormLayer.nonlinearity", "theano.mean().flatten", "theano.mean().flatten", "theano.mean().flatten", "theano.mean().flatten", "theano.sqrt", "theano.sqrt", "nn.BatchNormLayer.b.dimshuffle", "theano.sqrt().dimshuffle", "theano.sqrt().dimshuffle", "theano.mean().flatten.dimshuffle", "theano.sqrt.dimshuffle", "nn.BatchNormLayer.g.dimshuffle", "nn.BatchNormLayer.avg_batch_mean.dimshuffle", "theano.mean", "theano.mean", "theano.mean", "theano.mean", "theano.cast", "theano.cast", "theano.sqrt", "theano.sqrt", "theano.square", "theano.square"], "methods", ["None"], ["", "", "def", "get_output_for", "(", "self", ",", "input", ",", "deterministic", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "deterministic", ":", "\n", "            ", "norm_features", "=", "(", "input", "-", "self", ".", "avg_batch_mean", ".", "dimshuffle", "(", "*", "self", ".", "dimshuffle_args", ")", ")", "/", "T", ".", "sqrt", "(", "1e-6", "+", "self", ".", "avg_batch_var", ")", ".", "dimshuffle", "(", "*", "self", ".", "dimshuffle_args", ")", "\n", "", "else", ":", "\n", "            ", "batch_mean", "=", "T", ".", "mean", "(", "input", ",", "axis", "=", "self", ".", "axes_to_sum", ")", ".", "flatten", "(", ")", "\n", "centered_input", "=", "input", "-", "batch_mean", ".", "dimshuffle", "(", "*", "self", ".", "dimshuffle_args", ")", "\n", "batch_var", "=", "T", ".", "mean", "(", "T", ".", "square", "(", "centered_input", ")", ",", "axis", "=", "self", ".", "axes_to_sum", ")", ".", "flatten", "(", ")", "\n", "batch_stdv", "=", "T", ".", "sqrt", "(", "1e-6", "+", "batch_var", ")", "\n", "norm_features", "=", "centered_input", "/", "batch_stdv", ".", "dimshuffle", "(", "*", "self", ".", "dimshuffle_args", ")", "\n", "\n", "# BN updates", "\n", "new_m", "=", "0.9", "*", "self", ".", "avg_batch_mean", "+", "0.1", "*", "batch_mean", "\n", "new_v", "=", "0.9", "*", "self", ".", "avg_batch_var", "+", "T", ".", "cast", "(", "(", "0.1", "*", "input", ".", "shape", "[", "0", "]", ")", "/", "(", "input", ".", "shape", "[", "0", "]", "-", "1", ")", ",", "th", ".", "config", ".", "floatX", ")", "*", "batch_var", "\n", "self", ".", "bn_updates", "=", "[", "(", "self", ".", "avg_batch_mean", ",", "new_m", ")", ",", "(", "self", ".", "avg_batch_var", ",", "new_v", ")", "]", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "'g'", ")", ":", "\n", "            ", "activation", "=", "norm_features", "*", "self", ".", "g", ".", "dimshuffle", "(", "*", "self", ".", "dimshuffle_args", ")", "\n", "", "else", ":", "\n", "            ", "activation", "=", "norm_features", "\n", "", "if", "hasattr", "(", "self", ",", "'b'", ")", ":", "\n", "            ", "activation", "+=", "self", ".", "b", ".", "dimshuffle", "(", "*", "self", ".", "dimshuffle_args", ")", "\n", "\n", "", "return", "self", ".", "nonlinearity", "(", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.GaussianNoiseLayer.__init__": [[229, 233], ["super().__init__", "theano.sandbox.rng_mrg.MRG_RandomStreams", "theano.sandbox.rng_mrg.MRG_RandomStreams", "lasagne.random.get_rng().randint", "lasagne.random.get_rng"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__"], ["    ", "def", "__init__", "(", "self", ",", "incoming", ",", "sigma", "=", "0.1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "GaussianNoiseLayer", ",", "self", ")", ".", "__init__", "(", "incoming", ",", "**", "kwargs", ")", "\n", "self", ".", "_srng", "=", "RandomStreams", "(", "lasagne", ".", "random", ".", "get_rng", "(", ")", ".", "randint", "(", "1", ",", "2147462579", ")", ")", "\n", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.GaussianNoiseLayer.get_output_for": [[234, 241], ["nn.GaussianNoiseLayer._srng.normal"], "methods", ["None"], ["", "def", "get_output_for", "(", "self", ",", "input", ",", "deterministic", "=", "False", ",", "use_last_noise", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "deterministic", "or", "self", ".", "sigma", "==", "0", ":", "\n", "            ", "return", "input", "\n", "", "else", ":", "\n", "            ", "if", "not", "use_last_noise", ":", "\n", "                ", "self", ".", "noise", "=", "self", ".", "_srng", ".", "normal", "(", "input", ".", "shape", ",", "avg", "=", "0.0", ",", "std", "=", "self", ".", "sigma", ")", "\n", "", "return", "input", "+", "self", ".", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.DenseLayer.__init__": [[264, 274], ["lasagne.init.Normal", "lasagne.init.Constant", "lasagne.init.Constant", "super().__init__", "int", "nn.DenseLayer.add_param", "nn.DenseLayer.add_param", "nn.DenseLayer.add_param", "numpy.prod", "theano.sqrt", "theano.sqrt", "theano.sum", "theano.sum", "theano.square", "theano.square"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__"], ["    ", "def", "__init__", "(", "self", ",", "incoming", ",", "num_units", ",", "theta", "=", "lasagne", ".", "init", ".", "Normal", "(", "0.1", ")", ",", "b", "=", "lasagne", ".", "init", ".", "Constant", "(", "0.", ")", ",", "\n", "weight_scale", "=", "lasagne", ".", "init", ".", "Constant", "(", "1.", ")", ",", "train_scale", "=", "False", ",", "nonlinearity", "=", "relu", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DenseLayer", ",", "self", ")", ".", "__init__", "(", "incoming", ",", "**", "kwargs", ")", "\n", "self", ".", "nonlinearity", "=", "(", "lasagne", ".", "nonlinearities", ".", "identity", "if", "nonlinearity", "is", "None", "else", "nonlinearity", ")", "\n", "self", ".", "num_units", "=", "num_units", "\n", "num_inputs", "=", "int", "(", "np", ".", "prod", "(", "self", ".", "input_shape", "[", "1", ":", "]", ")", ")", "\n", "self", ".", "theta", "=", "self", ".", "add_param", "(", "theta", ",", "(", "num_inputs", ",", "num_units", ")", ",", "name", "=", "\"theta\"", ")", "\n", "self", ".", "weight_scale", "=", "self", ".", "add_param", "(", "weight_scale", ",", "(", "num_units", ",", ")", ",", "name", "=", "\"weight_scale\"", ",", "trainable", "=", "train_scale", ")", "\n", "self", ".", "W", "=", "self", ".", "theta", "*", "(", "self", ".", "weight_scale", "/", "T", ".", "sqrt", "(", "T", ".", "sum", "(", "T", ".", "square", "(", "self", ".", "theta", ")", ",", "axis", "=", "0", ")", ")", ")", ".", "dimshuffle", "(", "'x'", ",", "0", ")", "\n", "self", ".", "b", "=", "self", ".", "add_param", "(", "b", ",", "(", "num_units", ",", ")", ",", "name", "=", "\"b\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.DenseLayer.get_output_shape_for": [[275, 277], ["None"], "methods", ["None"], ["", "def", "get_output_shape_for", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "(", "input_shape", "[", "0", "]", ",", "self", ".", "num_units", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.DenseLayer.get_output_for": [[278, 296], ["theano.dot", "theano.dot", "nn.DenseLayer.nonlinearity", "input.flatten.flatten.flatten", "theano.mean", "theano.mean", "theano.mean.dimshuffle", "theano.sqrt", "theano.sqrt", "theano.sqrt.dimshuffle", "nn.DenseLayer.b.dimshuffle", "theano.mean", "theano.mean", "theano.square", "theano.square"], "methods", ["None"], ["", "def", "get_output_for", "(", "self", ",", "input", ",", "init", "=", "False", ",", "deterministic", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "input", ".", "ndim", ">", "2", ":", "\n", "# if the input has more than two dimensions, flatten it into a", "\n", "# batch of feature vectors.", "\n", "            ", "input", "=", "input", ".", "flatten", "(", "2", ")", "\n", "\n", "", "activation", "=", "T", ".", "dot", "(", "input", ",", "self", ".", "W", ")", "\n", "\n", "if", "init", ":", "\n", "            ", "ma", "=", "T", ".", "mean", "(", "activation", ",", "axis", "=", "0", ")", "\n", "activation", "-=", "ma", ".", "dimshuffle", "(", "'x'", ",", "0", ")", "\n", "stdv", "=", "T", ".", "sqrt", "(", "T", ".", "mean", "(", "T", ".", "square", "(", "activation", ")", ",", "axis", "=", "0", ")", ")", "\n", "activation", "/=", "stdv", ".", "dimshuffle", "(", "'x'", ",", "0", ")", "\n", "self", ".", "init_updates", "=", "[", "(", "self", ".", "weight_scale", ",", "self", ".", "weight_scale", "/", "stdv", ")", ",", "(", "self", ".", "b", ",", "-", "ma", "/", "stdv", ")", "]", "\n", "", "else", ":", "\n", "            ", "activation", "+=", "self", ".", "b", ".", "dimshuffle", "(", "'x'", ",", "0", ")", "\n", "\n", "", "return", "self", ".", "nonlinearity", "(", "activation", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.relu": [[13, 15], ["theano.maximum"], "function", ["None"], ["def", "relu", "(", "x", ")", ":", "\n", "    ", "return", "T", ".", "maximum", "(", "x", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.lrelu": [[16, 18], ["theano.maximum"], "function", ["None"], ["", "def", "lrelu", "(", "x", ",", "a", "=", "0.2", ")", ":", "\n", "    ", "return", "T", ".", "maximum", "(", "x", ",", "a", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.centered_softplus": [[19, 21], ["theano.nnet.softplus", "numpy.log"], "function", ["None"], ["", "def", "centered_softplus", "(", "x", ")", ":", "\n", "    ", "return", "T", ".", "nnet", ".", "softplus", "(", "x", ")", "-", "np", ".", "cast", "[", "th", ".", "config", ".", "floatX", "]", "(", "np", ".", "log", "(", "2.", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.log_sum_exp": [[22, 25], ["theano.max", "theano.log", "theano.sum", "theano.exp", "T.max.dimshuffle"], "function", ["None"], ["", "def", "log_sum_exp", "(", "x", ",", "axis", "=", "1", ")", ":", "\n", "    ", "m", "=", "T", ".", "max", "(", "x", ",", "axis", "=", "axis", ")", "\n", "return", "m", "+", "T", ".", "log", "(", "T", ".", "sum", "(", "T", ".", "exp", "(", "x", "-", "m", ".", "dimshuffle", "(", "0", ",", "'x'", ")", ")", ",", "axis", "=", "axis", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.adam_updates": [[26, 44], ["theano.grad", "theano.shared", "zip", "updates.append", "theano.shared", "theano.shared", "updates.append", "updates.append", "updates.append", "theano.sqrt", "theano.square", "p.get_value", "p.get_value"], "function", ["None"], ["", "def", "adam_updates", "(", "params", ",", "cost", ",", "lr", "=", "0.001", ",", "mom1", "=", "0.9", ",", "mom2", "=", "0.999", ")", ":", "\n", "    ", "updates", "=", "[", "]", "\n", "grads", "=", "T", ".", "grad", "(", "cost", ",", "params", ")", "\n", "t", "=", "th", ".", "shared", "(", "np", ".", "cast", "[", "th", ".", "config", ".", "floatX", "]", "(", "1.", ")", ")", "\n", "for", "p", ",", "g", "in", "zip", "(", "params", ",", "grads", ")", ":", "\n", "        ", "v", "=", "th", ".", "shared", "(", "np", ".", "cast", "[", "th", ".", "config", ".", "floatX", "]", "(", "p", ".", "get_value", "(", ")", "*", "0.", ")", ")", "\n", "mg", "=", "th", ".", "shared", "(", "np", ".", "cast", "[", "th", ".", "config", ".", "floatX", "]", "(", "p", ".", "get_value", "(", ")", "*", "0.", ")", ")", "\n", "v_t", "=", "mom1", "*", "v", "+", "(", "1.", "-", "mom1", ")", "*", "g", "\n", "mg_t", "=", "mom2", "*", "mg", "+", "(", "1.", "-", "mom2", ")", "*", "T", ".", "square", "(", "g", ")", "\n", "v_hat", "=", "v_t", "/", "(", "1.", "-", "mom1", "**", "t", ")", "\n", "mg_hat", "=", "mg_t", "/", "(", "1.", "-", "mom2", "**", "t", ")", "\n", "g_t", "=", "v_hat", "/", "T", ".", "sqrt", "(", "mg_hat", "+", "1e-8", ")", "\n", "p_t", "=", "p", "-", "lr", "*", "g_t", "\n", "updates", ".", "append", "(", "(", "v", ",", "v_t", ")", ")", "\n", "updates", ".", "append", "(", "(", "mg", ",", "mg_t", ")", ")", "\n", "updates", ".", "append", "(", "(", "p", ",", "p_t", ")", ")", "\n", "", "updates", ".", "append", "(", "(", "t", ",", "t", "+", "1", ")", ")", "\n", "return", "updates", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.weight_norm": [[93, 101], ["getattr", "hasattr", "nn.WeightNormLayer"], "function", ["None"], ["", "", "def", "weight_norm", "(", "layer", ",", "**", "kwargs", ")", ":", "\n", "    ", "nonlinearity", "=", "getattr", "(", "layer", ",", "'nonlinearity'", ",", "None", ")", "\n", "if", "nonlinearity", "is", "not", "None", ":", "\n", "        ", "layer", ".", "nonlinearity", "=", "lasagne", ".", "nonlinearities", ".", "identity", "\n", "", "if", "hasattr", "(", "layer", ",", "'b'", ")", ":", "\n", "        ", "del", "layer", ".", "params", "[", "layer", ".", "b", "]", "\n", "layer", ".", "b", "=", "None", "\n", "", "return", "WeightNormLayer", "(", "layer", ",", "nonlinearity", "=", "nonlinearity", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.batch_norm": [[214, 227], ["lasagne.init.Constant", "lasagne.init.Constant", "getattr", "hasattr", "nn.BatchNormLayer"], "function", ["None"], ["", "", "def", "batch_norm", "(", "layer", ",", "b", "=", "lasagne", ".", "init", ".", "Constant", "(", "0.", ")", ",", "g", "=", "lasagne", ".", "init", ".", "Constant", "(", "1.", ")", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    adapted from https://gist.github.com/f0k/f1a6bd3c8585c400c190\n    \"\"\"", "\n", "nonlinearity", "=", "getattr", "(", "layer", ",", "'nonlinearity'", ",", "None", ")", "\n", "if", "nonlinearity", "is", "not", "None", ":", "\n", "        ", "layer", ".", "nonlinearity", "=", "lasagne", ".", "nonlinearities", ".", "identity", "\n", "", "else", ":", "\n", "        ", "nonlinearity", "=", "lasagne", ".", "nonlinearities", ".", "identity", "\n", "", "if", "hasattr", "(", "layer", ",", "'b'", ")", ":", "\n", "        ", "del", "layer", ".", "params", "[", "layer", ".", "b", "]", "\n", "layer", ".", "b", "=", "None", "\n", "", "return", "BatchNormLayer", "(", "layer", ",", "b", ",", "g", ",", "nonlinearity", "=", "nonlinearity", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.nn.l2normalize": [[246, 261], ["layer.add_param", "W_param.get_value", "len", "lasagne.init.Constant", "theano.sqrt", "theano.sum", "theano.square"], "function", ["None"], ["", "", "", "def", "l2normalize", "(", "layer", ",", "train_scale", "=", "True", ")", ":", "\n", "    ", "W_param", "=", "layer", ".", "W", "\n", "s", "=", "W_param", ".", "get_value", "(", ")", ".", "shape", "\n", "if", "len", "(", "s", ")", "==", "4", ":", "\n", "        ", "axes_to_sum", "=", "(", "1", ",", "2", ",", "3", ")", "\n", "dimshuffle_args", "=", "[", "0", ",", "'x'", ",", "'x'", ",", "'x'", "]", "\n", "k", "=", "s", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "axes_to_sum", "=", "0", "\n", "dimshuffle_args", "=", "[", "'x'", ",", "0", "]", "\n", "k", "=", "s", "[", "1", "]", "\n", "", "layer", ".", "W_scale", "=", "layer", ".", "add_param", "(", "lasagne", ".", "init", ".", "Constant", "(", "1.", ")", ",", "\n", "(", "k", ",", ")", ",", "name", "=", "\"W_scale\"", ",", "trainable", "=", "train_scale", ",", "regularizable", "=", "False", ")", "\n", "layer", ".", "W", "=", "W_param", "*", "(", "layer", ".", "W_scale", "/", "T", ".", "sqrt", "(", "1e-6", "+", "T", ".", "sum", "(", "T", ".", "square", "(", "W_param", ")", ",", "axis", "=", "axes_to_sum", ")", ")", ")", ".", "dimshuffle", "(", "*", "dimshuffle_args", ")", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.model.Model.__init__": [[5, 23], ["theano.tensor4", "theano.tensor4"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "input_width", ",", "input_height", ",", "batch_size", "=", "32", ")", ":", "\n", "\n", "        ", "self", ".", "inputWidth", "=", "input_width", "\n", "self", ".", "inputHeight", "=", "input_height", "\n", "\n", "self", ".", "G_lr", "=", "None", "\n", "self", ".", "D_lr", "=", "None", "\n", "self", ".", "momentum", "=", "None", "\n", "\n", "self", ".", "net", "=", "None", "\n", "self", ".", "discriminator", "=", "None", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n", "self", ".", "D_trainFunction", "=", "None", "\n", "self", ".", "G_trainFunction", "=", "None", "\n", "self", ".", "predictFunction", "=", "None", "\n", "self", ".", "input_var", "=", "T", ".", "tensor4", "(", ")", "\n", "self", ".", "output_var", "=", "T", ".", "tensor4", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.imatge-upc_salgan.models.model_salgan.ModelSALGAN.__init__": [[13, 67], ["model.Model.__init__", "generator.build", "discriminator.build", "lasagne.layers.get_output", "lasagne.layers.get_output", "theano.function", "theano.function", "theano.function", "theano.function", "lasagne.layers.get_output", "lasagne.layers.get_output", "theano.signal.pool.pool_2d", "theano.signal.pool.pool_2d", "theano.signal.pool.pool_2d", "theano.signal.pool.pool_2d", "lasagne.objectives.binary_crossentropy().mean", "theano.ones", "theano.ones", "theano.zeros", "theano.zeros", "lasagne.objectives.binary_crossentropy().mean", "lasagne.objectives.binary_crossentropy().mean", "lasagne.layers.get_all_params", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "lasagne.updates.adagrad", "theano.function", "theano.function", "theano.function", "theano.function", "lasagne.layers.get_all_params", "theano.shared", "theano.shared", "theano.shared", "theano.shared", "lasagne.updates.adagrad", "theano.function", "theano.function", "theano.function", "theano.function", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "lasagne.regularization.regularize_network_params", "lasagne.regularization.regularize_network_params", "lasagne.regularization.regularize_network_params", "numpy.array", "numpy.array", "lasagne.objectives.binary_crossentropy", "lasagne.objectives.binary_crossentropy", "lasagne.objectives.binary_crossentropy", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.concatenate", "theano.ones", "theano.ones"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__"], ["    ", "def", "__init__", "(", "self", ",", "w", ",", "h", ",", "batch_size", "=", "32", ",", "G_lr", "=", "3e-4", ",", "D_lr", "=", "3e-4", ",", "alpha", "=", "1", "/", "20.", ")", ":", "\n", "        ", "super", "(", "ModelSALGAN", ",", "self", ")", ".", "__init__", "(", "w", ",", "h", ",", "batch_size", ")", "\n", "\n", "# Build Generator", "\n", "self", ".", "net", "=", "generator", ".", "build", "(", "self", ".", "inputHeight", ",", "self", ".", "inputWidth", ",", "self", ".", "input_var", ")", "\n", "\n", "# Build Discriminator", "\n", "self", ".", "discriminator", "=", "discriminator", ".", "build", "(", "self", ".", "inputHeight", ",", "self", ".", "inputWidth", ",", "\n", "T", ".", "concatenate", "(", "[", "self", ".", "output_var", ",", "self", ".", "input_var", "]", ",", "axis", "=", "1", ")", ")", "\n", "\n", "# Set prediction function", "\n", "output_layer_name", "=", "'output'", "\n", "\n", "prediction", "=", "lasagne", ".", "layers", ".", "get_output", "(", "self", ".", "net", "[", "output_layer_name", "]", ")", "\n", "test_prediction", "=", "lasagne", ".", "layers", ".", "get_output", "(", "self", ".", "net", "[", "output_layer_name", "]", ",", "deterministic", "=", "True", ")", "\n", "self", ".", "predictFunction", "=", "theano", ".", "function", "(", "[", "self", ".", "input_var", "]", ",", "test_prediction", ")", "\n", "\n", "disc_lab", "=", "lasagne", ".", "layers", ".", "get_output", "(", "self", ".", "discriminator", "[", "'prob'", "]", ",", "\n", "T", ".", "concatenate", "(", "[", "self", ".", "output_var", ",", "self", ".", "input_var", "]", ",", "axis", "=", "1", ")", ")", "\n", "disc_gen", "=", "lasagne", ".", "layers", ".", "get_output", "(", "self", ".", "discriminator", "[", "'prob'", "]", ",", "\n", "T", ".", "concatenate", "(", "[", "prediction", ",", "self", ".", "input_var", "]", ",", "axis", "=", "1", ")", ")", "\n", "\n", "# Downscale the saliency maps", "\n", "output_var_pooled", "=", "T", ".", "signal", ".", "pool", ".", "pool_2d", "(", "self", ".", "output_var", ",", "(", "4", ",", "4", ")", ",", "mode", "=", "\"average_exc_pad\"", ",", "ignore_border", "=", "True", ")", "\n", "prediction_pooled", "=", "T", ".", "signal", ".", "pool", ".", "pool_2d", "(", "prediction", ",", "(", "4", ",", "4", ")", ",", "mode", "=", "\"average_exc_pad\"", ",", "ignore_border", "=", "True", ")", "\n", "train_err", "=", "lasagne", ".", "objectives", ".", "binary_crossentropy", "(", "prediction_pooled", ",", "output_var_pooled", ")", ".", "mean", "(", ")", "\n", "+", "1e-4", "*", "lasagne", ".", "regularization", ".", "regularize_network_params", "(", "self", ".", "net", "[", "output_layer_name", "]", ",", "lasagne", ".", "regularization", ".", "l2", ")", "\n", "\n", "# Define loss function and input data", "\n", "ones", "=", "T", ".", "ones", "(", "disc_lab", ".", "shape", ")", "\n", "zeros", "=", "T", ".", "zeros", "(", "disc_lab", ".", "shape", ")", "\n", "D_obj", "=", "lasagne", ".", "objectives", ".", "binary_crossentropy", "(", "T", ".", "concatenate", "(", "[", "disc_lab", ",", "disc_gen", "]", ",", "axis", "=", "0", ")", ",", "\n", "T", ".", "concatenate", "(", "[", "ones", ",", "zeros", "]", ",", "axis", "=", "0", ")", ")", ".", "mean", "(", ")", "\n", "+", "1e-4", "*", "lasagne", ".", "regularization", ".", "regularize_network_params", "(", "self", ".", "discriminator", "[", "'prob'", "]", ",", "lasagne", ".", "regularization", ".", "l2", ")", "\n", "\n", "G_obj_d", "=", "lasagne", ".", "objectives", ".", "binary_crossentropy", "(", "disc_gen", ",", "T", ".", "ones", "(", "disc_lab", ".", "shape", ")", ")", ".", "mean", "(", ")", "\n", "+", "1e-4", "*", "lasagne", ".", "regularization", ".", "regularize_network_params", "(", "self", ".", "net", "[", "output_layer_name", "]", ",", "lasagne", ".", "regularization", ".", "l2", ")", "\n", "\n", "G_obj", "=", "G_obj_d", "+", "train_err", "*", "alpha", "\n", "cost", "=", "[", "G_obj", ",", "D_obj", ",", "train_err", "]", "\n", "\n", "# parameters update and training of Generator", "\n", "G_params", "=", "lasagne", ".", "layers", ".", "get_all_params", "(", "self", ".", "net", "[", "output_layer_name", "]", ",", "trainable", "=", "True", ")", "\n", "self", ".", "G_lr", "=", "theano", ".", "shared", "(", "np", ".", "array", "(", "G_lr", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "G_updates", "=", "lasagne", ".", "updates", ".", "adagrad", "(", "G_obj", ",", "G_params", ",", "learning_rate", "=", "self", ".", "G_lr", ")", "\n", "self", ".", "G_trainFunction", "=", "theano", ".", "function", "(", "inputs", "=", "[", "self", ".", "input_var", ",", "self", ".", "output_var", "]", ",", "outputs", "=", "cost", ",", "\n", "updates", "=", "G_updates", ",", "allow_input_downcast", "=", "True", ")", "\n", "\n", "# parameters update and training of Discriminator", "\n", "D_params", "=", "lasagne", ".", "layers", ".", "get_all_params", "(", "self", ".", "discriminator", "[", "'prob'", "]", ",", "trainable", "=", "True", ")", "\n", "self", ".", "D_lr", "=", "theano", ".", "shared", "(", "np", ".", "array", "(", "D_lr", ",", "dtype", "=", "theano", ".", "config", ".", "floatX", ")", ")", "\n", "D_updates", "=", "lasagne", ".", "updates", ".", "adagrad", "(", "D_obj", ",", "D_params", ",", "learning_rate", "=", "self", ".", "D_lr", ")", "\n", "self", ".", "D_trainFunction", "=", "theano", ".", "function", "(", "[", "self", ".", "input_var", ",", "self", ".", "output_var", "]", ",", "cost", ",", "updates", "=", "D_updates", ",", "\n", "allow_input_downcast", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.ImageContainer.__init__": [[25, 39], ["dataRepresentation.ImageContainer.load", "dataRepresentation.ImageContainer.loadCompressed", "Exception"], "methods", ["home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.ImageContainer.load", "home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.ImageContainer.loadCompressed"], ["    ", "def", "__init__", "(", "self", ",", "filePath", ",", "imageType", ",", "state", "=", "LoadState", ".", "unloaded", ")", ":", "\n", "\n", "        ", "self", ".", "filePath", "=", "filePath", "\n", "self", ".", "state", "=", "state", "\n", "self", ".", "imageType", "=", "imageType", "\n", "\n", "if", "self", ".", "state", "==", "LoadState", ".", "unloaded", ":", "\n", "            ", "self", ".", "data", "=", "None", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loaded", ":", "\n", "            ", "self", ".", "load", "(", ")", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loadedCompressed", ":", "\n", "            ", "self", ".", "loadCompressed", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Unknown state when loading image'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.ImageContainer.load": [[40, 56], ["cv2.cvtColor", "cv2.cvtColor", "cv2.imread", "cv2.imread", "[].nonzero", "scipy.io.loadmat", "scipy.io.loadmat"], "methods", ["None"], ["", "", "def", "load", "(", "self", ")", ":", "\n", "\n", "        ", "if", "self", ".", "imageType", "==", "InputType", ".", "image", ":", "\n", "            ", "self", ".", "data", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "self", ".", "filePath", ",", "cv2", ".", "IMREAD_COLOR", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "self", ".", "state", "=", "LoadState", ".", "loaded", "\n", "", "if", "self", ".", "imageType", "==", "InputType", ".", "imageGrayscale", ":", "\n", "            ", "self", ".", "data", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "self", ".", "filePath", ",", "cv2", ".", "IMREAD_COLOR", ")", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "self", ".", "state", "=", "LoadState", ".", "loaded", "\n", "", "elif", "self", ".", "imageType", "==", "InputType", ".", "saliencyMapMatlab", ":", "\n", "            ", "self", ".", "data", "=", "(", "scipy", ".", "io", ".", "loadmat", "(", "self", ".", "filePath", ")", "[", "'I'", "]", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "self", ".", "state", "=", "LoadState", ".", "loaded", "\n", "", "elif", "self", ".", "imageType", "==", "InputType", ".", "fixationMapMatlab", ":", "\n", "            ", "self", ".", "data", "=", "(", "scipy", ".", "io", ".", "loadmat", "(", "self", ".", "filePath", ")", "[", "'I'", "]", ")", ".", "nonzero", "(", ")", "\n", "self", ".", "state", "=", "LoadState", ".", "loaded", "\n", "", "elif", "self", ".", "imageType", "==", "InputType", ".", "empty", ":", "\n", "            ", "self", ".", "data", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.ImageContainer.loadCompressed": [[57, 70], ["numpy.fromstring", "open", "f.read", "Exception", "Exception"], "methods", ["None"], ["", "", "def", "loadCompressed", "(", "self", ")", ":", "\n", "\n", "        ", "if", "self", ".", "imageType", "==", "InputType", ".", "image", ":", "\n", "            ", "with", "open", "(", "self", ".", "filePath", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "data", "=", "f", ".", "read", "(", ")", "\n", "", "self", ".", "data", "=", "np", ".", "fromstring", "(", "data", ",", "np", ".", "uint8", ")", "\n", "self", ".", "state", "=", "LoadState", ".", "loadedCompressed", "\n", "", "elif", "self", ".", "imageType", "==", "InputType", ".", "saliencyMapMatlab", ":", "\n", "            ", "self", ".", "state", "=", "LoadState", ".", "error", "\n", "raise", "Exception", "(", "'Saliency maps do no have compressed handlind method enabled'", ")", "\n", "", "elif", "self", ".", "imageType", "==", "InputType", ".", "empty", ":", "\n", "            ", "self", ".", "state", "=", "LoadState", ".", "error", "\n", "raise", "Exception", "(", "'Empty images do no have compressed handlind method enabled'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.ImageContainer.getImage": [[71, 105], ["cv2.cvtColor", "cv2.imread", "cv2.cvtColor", "cv2.cvtColor", "cv2.imread", "cv2.imdecode", "cv2.cvtColor", "[].astype", "cv2.imdecode", "Exception", "Exception", "scipy.io.loadmat", "scipy.io.loadmat"], "methods", ["None"], ["", "", "def", "getImage", "(", "self", ")", ":", "\n", "\n", "        ", "if", "self", ".", "imageType", "==", "InputType", ".", "image", ":", "\n", "            ", "if", "self", ".", "state", "==", "LoadState", ".", "unloaded", ":", "\n", "                ", "return", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "self", ".", "filePath", ",", "cv2", ".", "IMREAD_COLOR", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loaded", ":", "\n", "                ", "return", "self", ".", "data", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loadedCompressed", ":", "\n", "                ", "return", "cv2", ".", "cvtColor", "(", "cv2", ".", "imdecode", "(", "self", ".", "data", ",", "cv2", ".", "IMREAD_COLOR", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "", "", "elif", "self", ".", "imageType", "==", "InputType", ".", "imageGrayscale", ":", "\n", "            ", "if", "self", ".", "state", "==", "LoadState", ".", "unloaded", ":", "\n", "                ", "return", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "self", ".", "filePath", ",", "cv2", ".", "IMREAD_COLOR", ")", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loaded", ":", "\n", "                ", "return", "self", ".", "data", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loadedCompressed", ":", "\n", "                ", "return", "cv2", ".", "cvtColor", "(", "cv2", ".", "imdecode", "(", "self", ".", "data", ",", "cv2", ".", "IMREAD_COLOR", ")", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "", "", "elif", "self", ".", "imageType", "==", "InputType", ".", "saliencyMapMatlab", ":", "\n", "            ", "if", "self", ".", "state", "==", "LoadState", ".", "unloaded", ":", "\n", "                ", "return", "(", "scipy", ".", "io", ".", "loadmat", "(", "self", ".", "filePath", ")", "[", "'I'", "]", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loaded", ":", "\n", "                ", "return", "self", ".", "data", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loadedCompressed", ":", "\n", "                ", "raise", "Exception", "(", "'Saliency maps do no have compressed handlind method enabled'", ")", "\n", "return", "None", "\n", "", "", "elif", "self", ".", "imageType", "==", "InputType", ".", "fixationMapMatlab", ":", "\n", "            ", "if", "self", ".", "state", "==", "LoadState", ".", "unloaded", ":", "\n", "                ", "return", "(", "scipy", ".", "io", ".", "loadmat", "(", "self", ".", "filePath", ")", "[", "'I'", "]", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loaded", ":", "\n", "                ", "return", "self", ".", "data", "\n", "", "elif", "self", ".", "state", "==", "LoadState", ".", "loadedCompressed", ":", "\n", "                ", "raise", "Exception", "(", "'Fixation maps do no have compressed handlind method enabled'", ")", "\n", "return", "None", "\n", "", "", "elif", "self", ".", "imageType", "==", "InputType", ".", "empty", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_salgan.eliaLib.dataRepresentation.Target.__init__": [[117, 124], ["dataRepresentation.ImageContainer", "dataRepresentation.ImageContainer", "dataRepresentation.ImageContainer"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "imagePath", ",", "saliencyPath", ",", "fixationPath", ",", "\n", "imageState", "=", "LoadState", ".", "unloaded", ",", "imageType", "=", "InputType", ".", "image", ",", "\n", "saliencyState", "=", "LoadState", ".", "unloaded", ",", "saliencyType", "=", "InputType", ".", "saliencyMapMatlab", ",", "\n", "fixationState", "=", "LoadState", ".", "unloaded", ",", "fixationType", "=", "InputType", ".", "fixationMapMatlab", ")", ":", "\n", "        ", "self", ".", "image", "=", "ImageContainer", "(", "imagePath", ",", "imageType", ",", "imageState", ")", "\n", "self", ".", "saliency", "=", "ImageContainer", "(", "saliencyPath", ",", "saliencyType", ",", "saliencyState", ")", "\n", "self", ".", "fixation", "=", "ImageContainer", "(", "fixationPath", ",", "fixationType", ",", "fixationState", ")", "", "", "", ""]]}