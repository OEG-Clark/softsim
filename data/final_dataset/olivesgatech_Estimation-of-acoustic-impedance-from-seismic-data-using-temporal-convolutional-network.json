{"home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.None.train.preprocess": [[17, 62], ["os.getcwd", "core.utils.standardize", "os.path.isdir", "core.utils.extract", "numpy.load().squeeze", "numpy.load().squeeze", "numpy.load().squeeze", "numpy.load", "numpy.load", "numpy.load", "os.path.join", "os.path.join", "numpy.load", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.utils.standardize", "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.utils.extract"], ["def", "preprocess", "(", "no_wells", ",", "data_flag", "=", "'seam'", ")", ":", "\n", "    ", "\"\"\"Function initializes data, performs standardization, and train test split\n    \n    Parameters:\n    ----------\n    no_wells : int,\n        number of evenly spaced wells and seismic samples to be evenly sampled \n        from seismic section.\n\n        \n    Returns\n    -------\n    seismic : array_like, shape(num_traces, depth samples)\n        2-D array containing seismic section \n        \n    model : array_like, shape(num_wells, depth samples)\n        2-D array containing model section \n\n    \"\"\"", "\n", "\n", "# get project root directory", "\n", "project_root", "=", "os", ".", "getcwd", "(", ")", "\n", "\n", "if", "~", "os", ".", "path", ".", "isdir", "(", "'data'", ")", ":", "# if data directory does not exists then extract", "\n", "        ", "extract", "(", "'data.zip'", ",", "project_root", ")", "\n", "\n", "", "if", "data_flag", "==", "'seam'", ":", "\n", "# Load data", "\n", "        ", "seismic", "=", "np", ".", "load", "(", "join", "(", "'data'", ",", "'poststack_seam_seismic.npy'", ")", ")", ".", "squeeze", "(", ")", "[", ":", ",", "50", ":", "]", "\n", "seismic", "=", "seismic", "[", ":", ":", "2", ",", ":", "]", "\n", "\n", "# Load targets and standardize data", "\n", "model", "=", "np", ".", "load", "(", "join", "(", "'data'", ",", "'seam_elastic_model.npy'", ")", ")", "[", ":", ":", "3", ",", ":", ",", ":", ":", "2", "]", "[", ":", ",", ":", ",", "50", ":", "]", "\n", "model", "=", "model", "[", ":", ",", "0", ",", ":", "]", "*", "model", "[", ":", ",", "2", ",", ":", "]", "\n", "\n", "", "else", ":", "\n", "# Load data", "\n", "        ", "seismic", "=", "np", ".", "load", "(", "join", "(", "'data'", ",", "'marmousi_synthetic_seismic.npy'", ")", ")", ".", "squeeze", "(", ")", "\n", "model", "=", "np", ".", "load", "(", "join", "(", "'data'", ",", "'marmousi_Ip_model.npy'", ")", ")", ".", "squeeze", "(", ")", "[", ":", ":", "5", ",", ":", ":", "4", "]", "\n", "\n", "\n", "# standardize", "\n", "", "seismic", ",", "model", "=", "standardize", "(", "seismic", ",", "model", ",", "no_wells", ")", "\n", "\n", "return", "seismic", ",", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.None.train.train": [[64, 125], ["train.preprocess", "numpy.linspace", "numpy.linspace", "core.datasets.SeismicDataset1D", "torch.utils.data.DataLoader", "core.datasets.SeismicDataset1D", "torch.utils.data.DataLoader", "torch.device", "core.model1D.MustafaNet().to", "torch.nn.MSELoss", "torch.optim.Adam", "range", "torch.save", "MustafaNet().to.parameters", "MustafaNet().to.train", "torch.optim.Adam.zero_grad", "criterion.backward", "torch.optim.Adam.step", "print", "os.path.isdir", "os.mkdir", "MustafaNet().to.state_dict", "len", "len", "len", "len", "torch.cuda.is_available", "core.model1D.MustafaNet", "MustafaNet().to.", "torch.nn.MSELoss.", "MustafaNet().to.eval", "MustafaNet().to.", "torch.nn.MSELoss.", "criterion.item", "criterion.item"], "function", ["home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.None.train.preprocess", "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.None.train.train"], ["", "def", "train", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Function trains 2-D TCN as specified in the paper\"\"\"", "\n", "\n", "# obtain data", "\n", "seismic", ",", "model", "=", "preprocess", "(", "kwargs", "[", "'no_wells'", "]", ",", "kwargs", "[", "'data_flag'", "]", ")", "\n", "\n", "\n", "# specify pseudolog positions for training and validation", "\n", "traces_seam_train", "=", "np", ".", "linspace", "(", "0", ",", "len", "(", "model", ")", "-", "1", ",", "kwargs", "[", "'no_wells'", "]", ",", "dtype", "=", "int", ")", "\n", "traces_seam_validation", "=", "np", ".", "linspace", "(", "0", ",", "len", "(", "model", ")", "-", "1", ",", "3", ",", "dtype", "=", "int", ")", "\n", "\n", "seam_train_dataset", "=", "SeismicDataset1D", "(", "seismic", ",", "model", ",", "traces_seam_train", ")", "\n", "seam_train_loader", "=", "DataLoader", "(", "seam_train_dataset", ",", "batch_size", "=", "len", "(", "seam_train_dataset", ")", ")", "\n", "\n", "seam_val_dataset", "=", "SeismicDataset1D", "(", "seismic", ",", "model", ",", "traces_seam_validation", ")", "\n", "seam_val_loader", "=", "DataLoader", "(", "seam_val_dataset", ",", "batch_size", "=", "len", "(", "seam_val_dataset", ")", ")", "\n", "\n", "\n", "# define device for training", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "# set up models", "\n", "model_seam", "=", "MustafaNet", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "# Set up loss", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "\n", "optimizer_seam", "=", "torch", ".", "optim", ".", "Adam", "(", "model_seam", ".", "parameters", "(", ")", ",", "\n", "weight_decay", "=", "0.0001", ",", "\n", "lr", "=", "0.001", ")", "\n", "\n", "# start training ", "\n", "for", "epoch", "in", "range", "(", "kwargs", "[", "'epochs'", "]", ")", ":", "\n", "\n", "      ", "model_seam", ".", "train", "(", ")", "\n", "optimizer_seam", ".", "zero_grad", "(", ")", "\n", "\n", "\n", "for", "x", ",", "y", "in", "seam_train_loader", ":", "\n", "        ", "y_pred", "=", "model_seam", "(", "x", ")", "\n", "loss_train", "=", "criterion", "(", "y_pred", ",", "y", ")", "\n", "\n", "", "for", "x", ",", "y", "in", "seam_val_loader", ":", "\n", "        ", "model_seam", ".", "eval", "(", ")", "\n", "y_pred", "=", "model_seam", "(", "x", ")", "\n", "val_loss", "=", "criterion", "(", "y_pred", ",", "y", ")", "\n", "\n", "\n", "", "loss_train", ".", "backward", "(", ")", "\n", "optimizer_seam", ".", "step", "(", ")", "\n", "\n", "print", "(", "'Epoch: {} | Train Loss: {:0.4f} | Val Loss: {:0.4f} \\\n            '", ".", "format", "(", "epoch", ",", "loss_train", ".", "item", "(", ")", ",", "val_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "\n", "# save trained models", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "'saved_models'", ")", ":", "# check if directory for saved models exists", "\n", "        ", "os", ".", "mkdir", "(", "'saved_models'", ")", "\n", "\n", "", "torch", ".", "save", "(", "model_seam", ".", "state_dict", "(", ")", ",", "'saved_models/model_seam_1D.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.None.train.test": [[126, 188], ["train.preprocess", "torch.device", "numpy.arange", "core.datasets.SeismicDataset1D", "torch.utils.data.DataLoader", "core.model1D.MustafaNet().to", "MustafaNet().to.load_state_dict", "print", "torch.zeros().float().to", "torch.zeros().float().to", "AI_pred.detach().cpu().numpy.detach().cpu().numpy", "AI_act.detach().cpu().numpy.detach().cpu().numpy", "print", "print", "print", "print", "matplotlib.subplots", "ax1.imshow", "ax1.set_aspect", "ax1.set_xlabel", "ax1.set_ylabel", "ax1.set_title", "ax2.imshow", "ax2.set_aspect", "ax2.set_xlabel", "ax2.set_ylabel", "ax2.set_title", "matplotlib.show", "len", "os.path.isdir", "FileNotFoundError", "torch.load", "torch.no_grad", "enumerate", "AI_act.detach().cpu().numpy.min", "AI_act.detach().cpu().numpy.max", "torch.cuda.is_available", "os.strerror", "core.model1D.MustafaNet", "torch.zeros().float", "torch.zeros().float", "MustafaNet().to.eval", "MustafaNet().to.", "len", "AI_pred.detach().cpu().numpy.detach().cpu", "AI_act.detach().cpu().numpy.detach().cpu", "sklearn.metrics.r2_score", "numpy.sum", "numpy.median", "model_seam.squeeze", "y.squeeze", "numpy.sum", "numpy.abs", "torch.zeros", "torch.zeros", "AI_pred.detach().cpu().numpy.detach", "AI_act.detach().cpu().numpy.detach", "numpy.abs", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.None.train.preprocess"], ["", "def", "test", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Function tests the trained network on SEAM and Marmousi sections and \n    prints out the results\"\"\"", "\n", "\n", "# obtain data", "\n", "seismic", ",", "model", "=", "preprocess", "(", "kwargs", "[", "'no_wells'", "]", ",", "kwargs", "[", "'data_flag'", "]", ")", "\n", "\n", "\n", "# define device for training", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "# specify pseudolog positions for testing ", "\n", "traces_seam_test", "=", "np", ".", "arange", "(", "len", "(", "model", ")", ",", "dtype", "=", "int", ")", "\n", "\n", "seam_test_dataset", "=", "SeismicDataset1D", "(", "seismic", ",", "model", ",", "traces_seam_test", ")", "\n", "seam_test_loader", "=", "DataLoader", "(", "seam_test_dataset", ",", "batch_size", "=", "8", ")", "\n", "\n", "# load saved models", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'saved_models'", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "errno", ".", "ENOENT", ",", "os", ".", "strerror", "(", "errno", ".", "ENOENT", ")", ",", "'saved_models'", ")", "\n", "\n", "# set up models", "\n", "", "model_seam", "=", "MustafaNet", "(", ")", ".", "to", "(", "device", ")", "\n", "model_seam", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'saved_models/model_seam_1D.pth'", ")", ")", "\n", "\n", "# infer on SEAM", "\n", "print", "(", "\"\\nInferring ...\"", ")", "\n", "x", ",", "y", "=", "seam_test_dataset", "[", "0", "]", "# get a sample", "\n", "AI_pred", "=", "torch", ".", "zeros", "(", "(", "len", "(", "seam_test_dataset", ")", ",", "y", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "AI_act", "=", "torch", ".", "zeros", "(", "(", "len", "(", "seam_test_dataset", ")", ",", "y", ".", "shape", "[", "-", "1", "]", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "mem", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "seam_test_loader", ")", ":", "\n", "          ", "model_seam", ".", "eval", "(", ")", "\n", "y_pred", "=", "model_seam", "(", "x", ")", "\n", "AI_pred", "[", "mem", ":", "mem", "+", "len", "(", "x", ")", "]", "=", "y_pred", ".", "squeeze", "(", ")", ".", "data", "\n", "AI_act", "[", "mem", ":", "mem", "+", "len", "(", "x", ")", "]", "=", "y", ".", "squeeze", "(", ")", ".", "data", "\n", "mem", "+=", "len", "(", "x", ")", "\n", "del", "x", ",", "y", ",", "y_pred", "\n", "\n", "", "", "vmin", ",", "vmax", "=", "AI_act", ".", "min", "(", ")", ",", "AI_act", ".", "max", "(", ")", "\n", "\n", "AI_pred", "=", "AI_pred", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "AI_act", "=", "AI_act", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "print", "(", "'r^2 score: {:0.4f}'", ".", "format", "(", "r2_score", "(", "AI_act", ".", "T", ",", "AI_pred", ".", "T", ")", ")", ")", "\n", "print", "(", "'MSE: {:0.4f}'", ".", "format", "(", "np", ".", "sum", "(", "(", "AI_pred", "-", "AI_act", ")", ".", "ravel", "(", ")", "**", "2", ")", "/", "AI_pred", ".", "size", ")", ")", "\n", "print", "(", "'MAE: {:0.4f}'", ".", "format", "(", "np", ".", "sum", "(", "np", ".", "abs", "(", "AI_pred", "-", "AI_act", ")", "/", "AI_pred", ".", "size", ")", ")", ")", "\n", "print", "(", "'MedAE: {:0.4f}'", ".", "format", "(", "np", ".", "median", "(", "np", ".", "abs", "(", "AI_pred", "-", "AI_act", ")", ")", ")", ")", "\n", "\n", "fig", ",", "(", "ax1", ",", "ax2", ")", "=", "plt", ".", "subplots", "(", "2", ",", "1", ",", "figsize", "=", "(", "12", ",", "12", ")", ")", "\n", "ax1", ".", "imshow", "(", "AI_pred", ".", "T", ",", "vmin", "=", "vmin", ",", "vmax", "=", "vmax", ",", "extent", "=", "(", "0", ",", "35000", ",", "15000", ",", "0", ")", ")", "\n", "ax1", ".", "set_aspect", "(", "35", "/", "30", ")", "\n", "ax1", ".", "set_xlabel", "(", "'Distance Eastimg (m)'", ")", "\n", "ax1", ".", "set_ylabel", "(", "'Depth (m)'", ")", "\n", "ax1", ".", "set_title", "(", "'Predicted'", ")", "\n", "ax2", ".", "imshow", "(", "AI_act", ".", "T", ",", "vmin", "=", "vmin", ",", "vmax", "=", "vmax", ",", "extent", "=", "(", "0", ",", "35000", ",", "15000", ",", "0", ")", ")", "\n", "ax2", ".", "set_aspect", "(", "35", "/", "30", ")", "\n", "ax2", ".", "set_xlabel", "(", "'Distance Eastimg (m)'", ")", "\n", "ax2", ".", "set_ylabel", "(", "'Depth (m)'", ")", "\n", "ax2", ".", "set_title", "(", "'Ground-Truth'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.Chomp1d.__init__": [[8, 11], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.datasets.SeismicDataset1D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "chomp_size", ")", ":", "\n", "        ", "super", "(", "Chomp1d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chomp_size", "=", "chomp_size", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.Chomp1d.forward": [[12, 14], ["x[].contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "[", ":", ",", ":", ",", "self", ".", "chomp_size", ":", "]", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.TemporalBlock.__init__": [[17, 38], ["torch.Module.__init__", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "model1D.Chomp1d", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "model1D.Chomp1d", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "model1D.TemporalBlock.init_weights", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.datasets.SeismicDataset1D.__init__", "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.TemporalBlock.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "n_inputs", ",", "n_outputs", ",", "kernel_size", ",", "stride", ",", "dilation", ",", "padding", ",", "dropout", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "TemporalBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "weight_norm", "(", "nn", ".", "Conv1d", "(", "n_inputs", ",", "n_outputs", ",", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "chomp1", "=", "Chomp1d", "(", "padding", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "dropout1", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n", "self", ".", "conv2", "=", "weight_norm", "(", "nn", ".", "Conv1d", "(", "n_outputs", ",", "n_outputs", ",", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "True", ")", ")", "\n", "self", ".", "chomp2", "=", "Chomp1d", "(", "padding", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "dropout2", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n", "#         self.net = nn.Sequential(self.conv1, self.chomp1, self.relu1, self.dropout1,", "\n", "#                                  self.conv2, self.chomp2, self.relu2, self.dropout2)", "\n", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "self", ".", "conv1", ",", "self", ".", "relu1", ",", "self", ".", "dropout1", ",", "\n", "self", ".", "conv2", ",", "self", ".", "relu2", ",", "self", ".", "dropout2", ")", "\n", "self", ".", "downsample", "=", "nn", ".", "Conv1d", "(", "n_inputs", ",", "n_outputs", ",", "1", ",", "bias", "=", "True", ")", "if", "n_inputs", "!=", "n_outputs", "else", "None", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.TemporalBlock.init_weights": [[39, 44], ["model1D.TemporalBlock.conv1.weight.data.normal_", "model1D.TemporalBlock.conv2.weight.data.normal_", "model1D.TemporalBlock.downsample.weight.data.normal_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "self", ".", "conv1", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "conv2", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "self", ".", "downsample", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.TemporalBlock.forward": [[45, 49], ["model1D.TemporalBlock.net", "model1D.TemporalBlock.relu", "model1D.TemporalBlock.downsample"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "net", "(", "x", ")", "\n", "res", "=", "x", "if", "self", ".", "downsample", "is", "None", "else", "self", ".", "downsample", "(", "x", ")", "\n", "return", "self", ".", "relu", "(", "out", "+", "res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.TemporalConvNet.__init__": [[52, 64], ["torch.Module.__init__", "len", "range", "torch.Sequential", "torch.Sequential", "model1D.TemporalBlock", "int"], "methods", ["home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.datasets.SeismicDataset1D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_inputs", ",", "num_channels", ",", "kernel_size", "=", "2", ",", "dropout", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "TemporalConvNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "]", "\n", "num_levels", "=", "len", "(", "num_channels", ")", "\n", "for", "i", "in", "range", "(", "num_levels", ")", ":", "\n", "            ", "dilation_size", "=", "2", "**", "i", "\n", "in_channels", "=", "num_inputs", "if", "i", "==", "0", "else", "num_channels", "[", "i", "-", "1", "]", "\n", "out_channels", "=", "num_channels", "[", "i", "]", "\n", "layers", "+=", "[", "TemporalBlock", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "dilation", "=", "dilation_size", ",", "\n", "padding", "=", "int", "(", "(", "kernel_size", "-", "1", ")", "/", "2", "*", "dilation_size", ")", ",", "dropout", "=", "dropout", ")", "]", "\n", "\n", "", "self", ".", "network", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.TemporalConvNet.forward": [[65, 67], ["model1D.TemporalConvNet.network"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "network", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.MustafaNet.__init__": [[70, 74], ["torch.Module.__init__", "model1D.TemporalConvNet", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.datasets.SeismicDataset1D.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MustafaNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tcn_local", "=", "TemporalConvNet", "(", "num_inputs", "=", "1", ",", "num_channels", "=", "[", "3", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "5", "]", ",", "kernel_size", "=", "9", ",", "dropout", "=", "0.2", ")", "\n", "self", ".", "regression", "=", "nn", ".", "Conv1d", "(", "in_channels", "=", "5", ",", "out_channels", "=", "1", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.model1D.MustafaNet.forward": [[75, 80], ["model1D.MustafaNet.tcn_local", "model1D.MustafaNet.regression"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "#out = self.tcn_local(input[:,:,:,3])  # only uncomment when you are using 2-D dataloaders", "\n", "        ", "out", "=", "self", ".", "tcn_local", "(", "input", ")", "\n", "out", "=", "self", ".", "regression", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.utils.extract": [[5, 11], ["zipfile.ZipFile", "zip_ref.extractall"], "function", ["None"], ["def", "extract", "(", "source_path", ",", "destination_path", ")", ":", "\n", "    ", "\"\"\"function extracts all files from a zip file at a given source path\n    to the provided destination path\"\"\"", "\n", "\n", "with", "zipfile", ".", "ZipFile", "(", "source_path", ",", "'r'", ")", "as", "zip_ref", ":", "\n", "        ", "zip_ref", ".", "extractall", "(", "destination_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.utils.standardize": [[13, 35], ["numpy.linspace", "seismic.std", "model[].std", "seismic.mean", "len", "model[].mean"], "function", ["None"], ["", "", "def", "standardize", "(", "seismic", ",", "model", ",", "no_wells", ")", ":", "\n", "    ", "\"\"\"function standardizes data using statistics extracted from training \n    wells\n    \n    Parameters\n    ----------\n    seismic : array_like, shape(num_traces, depth samples)\n        2-D array containing seismic section\n        \n    model : array_like, shape(num_wells, depth samples)\n        2-D array containing model section\n        \n    no_wells : int,\n        no of wells (and corresponding seismic traces) to extract.\n    \"\"\"", "\n", "\n", "\n", "seismic_normalized", "=", "(", "seismic", "-", "seismic", ".", "mean", "(", ")", ")", "/", "seismic", ".", "std", "(", ")", "\n", "train_indices", "=", "(", "np", ".", "linspace", "(", "0", ",", "len", "(", "model", ")", "-", "1", ",", "no_wells", ",", "dtype", "=", "np", ".", "int", ")", ")", "\n", "model_normalized", "=", "(", "model", "-", "model", "[", "train_indices", "]", ".", "mean", "(", ")", ")", "/", "model", "[", "train_indices", "]", ".", "std", "(", ")", "\n", "\n", "return", "seismic_normalized", ",", "model_normalized", "", "", ""]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.datasets.SeismicDataset1D.__init__": [[11, 18], ["min", "len", "max"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "seismic", ",", "model", ",", "trace_indices", ")", ":", "\n", "        ", "self", ".", "seismic", "=", "seismic", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "trace_indices", "=", "trace_indices", "\n", "\n", "\n", "assert", "min", "(", "trace_indices", ")", ">=", "0", "and", "max", "(", "trace_indices", ")", "+", "1", "<=", "len", "(", "seismic", ")", ",", "\"Seismic patch accessing traces out of geometry of the data!\"", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.datasets.SeismicDataset1D.__getitem__": [[19, 24], ["torch.tensor().to", "torch.tensor().to", "torch.device", "torch.device", "torch.tensor", "torch.tensor", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "trace_index", "=", "self", ".", "trace_indices", "[", "index", "]", "\n", "x", "=", "torch", ".", "tensor", "(", "self", ".", "seismic", "[", "trace_index", "]", "[", "np", ".", "newaxis", ",", ":", "]", ",", "dtype", "=", "torch", ".", "float", ")", ".", "to", "(", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", ")", "\n", "y", "=", "torch", ".", "tensor", "(", "self", ".", "model", "[", "trace_index", "]", "[", "np", ".", "newaxis", ",", ":", "]", ",", "dtype", "=", "torch", ".", "float", ")", ".", "to", "(", "torch", ".", "device", "(", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", ")", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.olivesgatech_Estimation-of-acoustic-impedance-from-seismic-data-using-temporal-convolutional-network.core.datasets.SeismicDataset1D.__len__": [[25, 27], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "trace_indices", ")", "\n", "\n"]]}