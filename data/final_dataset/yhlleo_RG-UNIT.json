{"home.repos.pwc.inspect_result.yhlleo_RG-UNIT.None.train_gmmunit_retrieval.init_processes": [[22, 27], ["torch.init_process_group", "func"], "function", ["None"], ["def", "init_processes", "(", "args", ",", "local_rank", ",", "func", ",", "opts", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'MASTER_ADDR'", "]", "=", "opts", ".", "master_addr", "\n", "os", ".", "environ", "[", "'MASTER_PORT'", "]", "=", "opts", ".", "master_port", "\n", "distributed", ".", "init_process_group", "(", "backend", "=", "opts", ".", "backend", ",", "rank", "=", "local_rank", ",", "world_size", "=", "opts", ".", "world_size", ")", "\n", "func", "(", "args", ",", "local_rank", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.None.train_gmmunit_retrieval.main": [[28, 46], ["print", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.set_start_method", "range", "torch.Process", "mp.Process.start", "processes.append", "mp.Process.join"], "function", ["None"], ["", "def", "main", "(", "args", ",", "opts", ")", ":", "\n", "    ", "print", "(", "args", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "if", "opts", ".", "mode", "==", "'train'", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "opts", ".", "seed", ")", "\n", "\n", "", "if", "opts", ".", "mode", "==", "'train'", ":", "\n", "        ", "mp", ".", "set_start_method", "(", "'spawn'", ")", "\n", "processes", "=", "[", "]", "\n", "for", "rank", "in", "range", "(", "opts", ".", "num_gpus", ")", ":", "\n", "            ", "p", "=", "mp", ".", "Process", "(", "target", "=", "init_processes", ",", "args", "=", "(", "args", ",", "rank", ",", "gmmunit_retrieval_run", ",", "opts", ")", ")", "\n", "p", ".", "start", "(", ")", "\n", "processes", ".", "append", "(", "p", ")", "\n", "\n", "", "for", "p", "in", "processes", ":", "\n", "            ", "p", ".", "join", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.None.train_retrieval.init_processes": [[22, 27], ["torch.init_process_group", "func"], "function", ["None"], ["def", "init_processes", "(", "args", ",", "local_rank", ",", "func", ",", "opts", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'MASTER_ADDR'", "]", "=", "opts", ".", "master_addr", "\n", "os", ".", "environ", "[", "'MASTER_PORT'", "]", "=", "opts", ".", "master_port", "\n", "distributed", ".", "init_process_group", "(", "backend", "=", "opts", ".", "backend", ",", "rank", "=", "local_rank", ",", "world_size", "=", "opts", ".", "world_size", ")", "\n", "func", "(", "args", ",", "local_rank", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.None.train_retrieval.main": [[28, 46], ["print", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.set_start_method", "range", "torch.Process", "mp.Process.start", "processes.append", "mp.Process.join"], "function", ["None"], ["", "def", "main", "(", "args", ",", "opts", ")", ":", "\n", "    ", "print", "(", "args", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "if", "opts", ".", "mode", "==", "'train'", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "opts", ".", "seed", ")", "\n", "\n", "", "if", "opts", ".", "mode", "==", "'train'", ":", "\n", "        ", "mp", ".", "set_start_method", "(", "'spawn'", ")", "\n", "processes", "=", "[", "]", "\n", "for", "rank", "in", "range", "(", "opts", ".", "num_gpus", ")", ":", "\n", "            ", "p", "=", "mp", ".", "Process", "(", "target", "=", "init_processes", ",", "args", "=", "(", "args", ",", "rank", ",", "retrieval_run", ",", "opts", ")", ")", "\n", "p", ".", "start", "(", ")", "\n", "processes", ".", "append", "(", "p", ")", "\n", "\n", "", "for", "p", "in", "processes", ":", "\n", "            ", "p", ".", "join", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.None.train_gmmunit.init_processes": [[22, 27], ["torch.init_process_group", "func"], "function", ["None"], ["def", "init_processes", "(", "args", ",", "local_rank", ",", "func", ",", "opts", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'MASTER_ADDR'", "]", "=", "opts", ".", "master_addr", "\n", "os", ".", "environ", "[", "'MASTER_PORT'", "]", "=", "opts", ".", "master_port", "\n", "distributed", ".", "init_process_group", "(", "backend", "=", "opts", ".", "backend", ",", "rank", "=", "local_rank", ",", "world_size", "=", "opts", ".", "world_size", ")", "\n", "func", "(", "args", ",", "local_rank", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.None.train_gmmunit.main": [[28, 46], ["print", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.set_start_method", "range", "torch.Process", "mp.Process.start", "processes.append", "mp.Process.join"], "function", ["None"], ["", "def", "main", "(", "args", ",", "opts", ")", ":", "\n", "    ", "print", "(", "args", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "if", "opts", ".", "mode", "==", "'train'", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "opts", ".", "seed", ")", "\n", "\n", "", "if", "opts", ".", "mode", "==", "'train'", ":", "\n", "        ", "mp", ".", "set_start_method", "(", "'spawn'", ")", "\n", "processes", "=", "[", "]", "\n", "for", "rank", "in", "range", "(", "opts", ".", "num_gpus", ")", ":", "\n", "            ", "p", "=", "mp", ".", "Process", "(", "target", "=", "init_processes", ",", "args", "=", "(", "args", ",", "rank", ",", "gmmunit_run", ",", "opts", ")", ")", "\n", "p", ".", "start", "(", ")", "\n", "processes", ".", "append", "(", "p", ")", "\n", "\n", "", "for", "p", "in", "processes", ":", "\n", "            ", "p", ".", "join", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_loader": [[10, 42], ["torch.get_world_size", "torch.get_rank", "torch.utils.data.DistributedSampler", "torch.utils.data.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "function", ["None"], ["def", "build_loader", "(", "\n", "dataset_train", ",", "\n", "dataset_test", ",", "\n", "batch_size", "=", "16", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "True", "\n", ")", ":", "\n", "    ", "num_tasks", "=", "distributed", ".", "get_world_size", "(", ")", "\n", "global_rank", "=", "distributed", ".", "get_rank", "(", ")", "\n", "sampler_train", "=", "torch", ".", "utils", ".", "data", ".", "DistributedSampler", "(", "\n", "dataset_train", ",", "\n", "num_replicas", "=", "num_tasks", ",", "\n", "rank", "=", "global_rank", ",", "\n", "shuffle", "=", "True", "\n", ")", "\n", "train_loader", "=", "DataLoader", "(", "\n", "dataset_train", ",", "\n", "sampler", "=", "sampler_train", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "pin_memory", "=", "pin_memory", ",", "\n", "drop_last", "=", "True", "\n", ")", "\n", "test_loader", "=", "DataLoader", "(", "\n", "dataset_test", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "pin_memory", "=", "pin_memory", ",", "\n", "drop_last", "=", "False", "\n", ")", "\n", "return", "train_loader", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_dataset": [[43, 89], ["build_data.build_transform", "build_data.build_transform", "celeba_dataset.CelebA", "celeba_dataset.CelebA", "cat2dog_dataset.Cat2Dog", "cat2dog_dataset.Cat2Dog"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_transform", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_transform"], ["", "def", "build_dataset", "(", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "test_list_path", ",", "\n", "crop_size", "=", "178", ",", "\n", "img_size", "=", "128", ",", "\n", "dataset_name", "=", "'CelebA'", ",", "\n", "is_retrieval", "=", "False", "\n", ")", ":", "\n", "    ", "transform_train", "=", "build_transform", "(", "crop_size", ",", "img_size", ",", "True", ",", "dataset_name", ")", "\n", "transform_test", "=", "build_transform", "(", "crop_size", ",", "img_size", ",", "False", ",", "dataset_name", ")", "\n", "if", "dataset_name", "==", "\"CelebA\"", ":", "\n", "        ", "dataset_train", "=", "CelebA", "(", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "test_list_path", ",", "\n", "transform_train", ",", "\n", "True", ",", "\n", "is_retrieval", "\n", ")", "\n", "\n", "dataset_test", "=", "CelebA", "(", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "test_list_path", ",", "\n", "transform_test", ",", "\n", "False", ",", "\n", "is_retrieval", "\n", ")", "\n", "", "else", ":", "\n", "        ", "dataset_train", "=", "Cat2Dog", "(", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "test_list_path", ",", "\n", "transform_train", ",", "\n", "True", "\n", ")", "\n", "\n", "dataset_test", "=", "Cat2Dog", "(", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "test_list_path", ",", "\n", "transform_test", ",", "\n", "False", "\n", ")", "\n", "", "return", "dataset_train", ",", "dataset_test", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_transform": [[91, 112], ["T.Compose.append", "T.Compose.append", "torchvision.transforms.Compose", "T.Compose.append", "T.Compose.append", "T.Compose.append", "T.Compose.append", "T.Compose.append", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.CenterCrop", "torchvision.transforms.Resize", "torchvision.transforms.Resize", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ColorJitter"], "function", ["None"], ["", "def", "build_transform", "(", "\n", "crop_size", "=", "178", ",", "\n", "img_size", "=", "128", ",", "\n", "is_train", "=", "True", ",", "\n", "dataset_name", "=", "'CelebA'", "\n", ")", ":", "\n", "    ", "transform", "=", "[", "]", "\n", "if", "dataset_name", "==", "'CelebA'", ":", "\n", "        ", "transform", ".", "append", "(", "T", ".", "CenterCrop", "(", "crop_size", ")", ")", "\n", "transform", ".", "append", "(", "T", ".", "Resize", "(", "img_size", ")", ")", "\n", "", "else", ":", "\n", "        ", "transform", ".", "append", "(", "T", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ")", "\n", "\n", "", "if", "is_train", ":", "\n", "        ", "transform", ".", "append", "(", "T", ".", "RandomHorizontalFlip", "(", ")", ")", "\n", "transform", ".", "append", "(", "T", ".", "ColorJitter", "(", "brightness", "=", ".005", ",", "contrast", "=", ".005", ")", ")", "\n", "\n", "", "transform", ".", "append", "(", "T", ".", "ToTensor", "(", ")", ")", "\n", "transform", ".", "append", "(", "T", ".", "Normalize", "(", "mean", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "std", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", ")", "\n", "transform", "=", "T", ".", "Compose", "(", "transform", ")", "\n", "return", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_ret_transform": [[114, 130], ["T.Compose.append", "T.Compose.append", "torchvision.transforms.Compose", "T.Compose.append", "T.Compose.append", "T.Compose.append", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.CenterCrop", "torchvision.transforms.Resize", "torchvision.transforms.Resize"], "function", ["None"], ["", "def", "build_ret_transform", "(", "\n", "crop_size", "=", "178", ",", "\n", "img_size", "=", "128", ",", "\n", "dataset_name", "=", "'CelebA'", "\n", ")", ":", "\n", "    ", "transform", "=", "[", "]", "\n", "if", "dataset_name", "==", "'CelebA'", ":", "\n", "        ", "transform", ".", "append", "(", "T", ".", "CenterCrop", "(", "crop_size", ")", ")", "\n", "transform", ".", "append", "(", "T", ".", "Resize", "(", "img_size", ")", ")", "\n", "", "else", ":", "\n", "        ", "transform", ".", "append", "(", "T", ".", "Resize", "(", "(", "img_size", ",", "img_size", ")", ")", ")", "\n", "\n", "", "transform", ".", "append", "(", "T", ".", "ToTensor", "(", ")", ")", "\n", "transform", ".", "append", "(", "T", ".", "Normalize", "(", "mean", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "std", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", ")", "\n", "transform", "=", "T", ".", "Compose", "(", "transform", ")", "\n", "return", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_ret_loader": [[132, 168], ["build_data.build_ret_transform", "torch.utils.data.DataLoader", "celeba_dataset.CelebA_test", "cat2dog_dataset.Cat2Dog_test"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_ret_transform"], ["", "def", "build_ret_loader", "(", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "crop_size", "=", "178", ",", "\n", "img_size", "=", "128", ",", "\n", "dataset_name", "=", "'CelebA'", ",", "\n", "batch_size", "=", "16", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "4", "\n", ")", ":", "\n", "    ", "transform", "=", "build_ret_transform", "(", "crop_size", ",", "img_size", ",", "dataset_name", ")", "\n", "if", "dataset_name", "==", "\"CelebA\"", ":", "\n", "        ", "dataset", "=", "CelebA_test", "(", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "None", ",", "\n", "transform", "=", "transform", ",", "\n", "is_train", "=", "True", "\n", ")", "\n", "", "else", ":", "\n", "        ", "dataset", "=", "Cat2Dog_test", "(", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "None", ",", "\n", "transform", "=", "transform", ",", "\n", "is_train", "=", "True", "\n", ")", "\n", "", "data_loader", "=", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "pin_memory", "=", "pin_memory", ",", "\n", "drop_last", "=", "False", "\n", ")", "\n", "return", "data_loader", "\n", "", ""]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.celeba_dataset.CelebA.__init__": [[20, 38], ["len", "utils.load_celeba_files", "utils.load_celeba_files"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_celeba_files", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_celeba_files"], ["def", "__init__", "(", "self", ",", "\n", "image_dir", ",", "# image data path", "\n", "train_list_path", ",", "# training image list, including both image name and labels", "\n", "test_list_path", ",", "# testing image list, including both image name and labels", "\n", "transform", "=", "None", ",", "\n", "is_train", "=", "True", ",", "\n", "is_retrieval", "=", "False", "# True, used for retrieval; False, used for typical I2I translation", "\n", ")", ":", "\n", "        ", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "is_retrieval", "=", "is_retrieval", "\n", "\n", "if", "is_train", ":", "\n", "            ", "self", ".", "dataset", "=", "load_files", "(", "train_list_path", ",", "\"train\"", "if", "is_train", "else", "\"test\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dataset", "=", "load_files", "(", "test_list_path", ",", "\"train\"", "if", "is_train", "else", "\"test\"", ")", "\n", "", "self", ".", "selected_attrs", "=", "5", "\n", "self", ".", "num_images", "=", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.celeba_dataset.CelebA.__getitem__": [[39, 76], ["random.choice", "PIL.Image.open().convert", "PIL.Image.open().convert", "torch.tensor().float.copy", "random.randint", "PIL.Image.open().convert", "celeba_dataset.CelebA.transform", "PIL.Image.open().convert", "celeba_dataset.CelebA.transform", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "celeba_dataset.CelebA.transform", "celeba_dataset.CelebA.transform", "torch.tensor().float", "torch.tensor().float", "random.choice", "random.choice", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "torch.tensor", "torch.tensor", "torch.tensor", "os.path.join", "os.path.join", "torch.tensor", "torch.tensor", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# The outputs rely on the `is_retrieval`", "\n", "        ", "if", "not", "self", ".", "is_retrieval", ":", "\n", "            ", "fname_src", ",", "src_label", "=", "self", ".", "dataset", "[", "index", "]", "\n", "fname_trg", ",", "trg_label", "=", "random", ".", "choice", "(", "self", ".", "dataset", ")", "\n", "\n", "src_image", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "fname_src", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "trg_image", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "fname_trg", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "src_image", ",", "trg_image", "=", "self", ".", "transform", "(", "src_image", ")", ",", "self", ".", "transform", "(", "trg_image", ")", "\n", "src_label", ",", "trg_label", "=", "torch", ".", "tensor", "(", "src_label", ")", ".", "float", "(", ")", ",", "torch", ".", "tensor", "(", "trg_label", ")", ".", "float", "(", ")", "\n", "return", "src_image", ",", "trg_image", ",", "src_label", ",", "trg_label", "\n", "", "else", ":", "\n", "            ", "fname_src", ",", "src_label", "=", "self", ".", "dataset", "[", "index", "]", "\n", "while", "True", ":", "\n", "                ", "fname_neg", ",", "neg_label", "=", "random", ".", "choice", "(", "self", ".", "dataset", ")", "\n", "if", "fname_src", "!=", "fname_neg", ":", "break", "\n", "\n", "# Easy target and negative labels only changing one element", "\n", "", "trg_label", "=", "src_label", ".", "copy", "(", ")", "\n", "attr_edit_index", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "selected_attrs", "-", "1", ")", "\n", "trg_label", "[", "attr_edit_index", "]", "=", "1", "-", "src_label", "[", "attr_edit_index", "]", "# reverse the attribute in source image", "\n", "\n", "# sample negative label", "\n", "while", "True", ":", "\n", "                ", "_", ",", "rnd_label", "=", "random", ".", "choice", "(", "self", ".", "dataset", ")", "\n", "if", "rnd_label", "!=", "trg_label", "and", "rnd_label", "!=", "src_label", ":", "break", "\n", "\n", "", "src_image", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "fname_src", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "src_image", "=", "self", ".", "transform", "(", "src_image", ")", "\n", "\n", "neg_image", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "fname_neg", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "neg_image", "=", "self", ".", "transform", "(", "neg_image", ")", "\n", "\n", "src_label", "=", "torch", ".", "tensor", "(", "src_label", ")", ".", "float", "(", ")", "\n", "trg_label", "=", "torch", ".", "tensor", "(", "trg_label", ")", ".", "float", "(", ")", "\n", "rnd_label", "=", "torch", ".", "tensor", "(", "rnd_label", ")", ".", "float", "(", ")", "\n", "return", "src_image", ",", "neg_image", ",", "src_label", ",", "trg_label", ",", "rnd_label", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.celeba_dataset.CelebA.__len__": [[78, 81], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the number of images.\"\"\"", "\n", "return", "self", ".", "num_images", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.celeba_dataset.CelebA_test.__init__": [[83, 99], ["len", "utils.load_celeba_files", "utils.load_celeba_files"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_celeba_files", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_celeba_files"], ["    ", "def", "__init__", "(", "self", ",", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "test_list_path", ",", "\n", "transform", "=", "None", ",", "\n", "is_train", "=", "False", "\n", ")", ":", "\n", "        ", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "if", "is_train", ":", "\n", "            ", "self", ".", "dataset", "=", "load_files", "(", "train_list_path", ",", "\"train\"", "if", "is_train", "else", "\"test\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dataset", "=", "load_files", "(", "test_list_path", ",", "\"train\"", "if", "is_train", "else", "\"test\"", ")", "\n", "\n", "", "self", ".", "num_images", "=", "len", "(", "self", ".", "test_dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.celeba_dataset.CelebA_test.__getitem__": [[100, 114], ["random.randint", "PIL.Image.open().convert", "celeba_dataset.CelebA_test.transform", "torch.tensor().float", "torch.tensor().float", "PIL.Image.open", "torch.tensor", "torch.tensor", "os.path.join"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "fname_src", ",", "src_label", "=", "self", ".", "dataset", "[", "index", "]", "\n", "\n", "# -------------- Random target label from the dataset -------------- #", "\n", "trg_idx", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "num_images", "-", "1", ")", "\n", "_", ",", "trg_label", "=", "self", ".", "dataset", "[", "trg_idx", "]", "\n", "# -------------------------------------------- #", "\n", "\n", "src_image", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "fname_src", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "src_image", "=", "self", ".", "transform", "(", "src_image", ")", "\n", "\n", "trg_label", "=", "torch", ".", "tensor", "(", "trg_label", ")", ".", "float", "(", ")", "\n", "src_label", "=", "torch", ".", "tensor", "(", "src_label", ")", ".", "float", "(", ")", "\n", "return", "src_image", ",", "fname_src", ",", "trg_label", ",", "src_label", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.celeba_dataset.CelebA_test.__len__": [[115, 118], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the number of images.\"\"\"", "\n", "return", "self", ".", "num_images", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.cat2dog_dataset.Cat2Dog.__init__": [[20, 39], ["len", "cat2dog_dataset.Cat2Dog.split_animals", "utils.load_cat2dog_files", "utils.load_cat2dog_files"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.cat2dog_dataset.Cat2Dog.split_animals", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_cat2dog_files", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_cat2dog_files"], ["def", "__init__", "(", "self", ",", "\n", "image_dir", ",", "# image data path", "\n", "train_list_path", ",", "# training image list, including both image name and labels", "\n", "test_list_path", ",", "# testing image list, including both image name and labels", "\n", "transform", "=", "None", ",", "\n", "is_train", "=", "True", "\n", ")", ":", "\n", "        ", "\"\"\"Initialize and preprocess the Cat2Dog dataset.\"\"\"", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "is_retrieval", "=", "is_retrieval", "\n", "\n", "if", "is_train", ":", "\n", "            ", "self", ".", "dataset", "=", "load_files", "(", "train_list_path", ",", "\"train\"", "if", "is_train", "else", "\"test\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dataset", "=", "load_files", "(", "test_list_path", ",", "\"train\"", "if", "is_train", "else", "\"test\"", ")", "\n", "", "self", ".", "num_images", "=", "len", "(", "self", ".", "dataset", ")", "\n", "\n", "self", ".", "cats", ",", "self", ".", "dogs", "=", "self", ".", "split_animals", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.cat2dog_dataset.Cat2Dog.split_animals": [[40, 48], ["dogs.append", "cats.append"], "methods", ["None"], ["", "def", "split_animals", "(", "self", ")", ":", "\n", "        ", "cats", ",", "dogs", "=", "[", "]", ",", "[", "]", "\n", "for", "da", "in", "self", ".", "dataset", ":", "\n", "            ", "if", "da", "[", "1", "]", ":", "\n", "                ", "dogs", ".", "append", "(", "da", ")", "\n", "", "else", ":", "\n", "                ", "cats", ".", "append", "(", "da", ")", "\n", "", "", "return", "cats", ",", "dogs", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.cat2dog_dataset.Cat2Dog.__getitem__": [[49, 64], ["PIL.Image.open().convert", "PIL.Image.open().convert", "torch.tensor().long", "torch.tensor().long", "random.choice", "random.choice", "cat2dog_dataset.Cat2Dog.transform", "cat2dog_dataset.Cat2Dog.transform", "PIL.Image.open", "PIL.Image.open", "torch.tensor", "torch.tensor", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# The outputs rely on the `is_retrieval`", "\n", "        ", "fname_src", ",", "src_label", "=", "self", ".", "dataset", "[", "index", "]", "\n", "if", "src_label", ":", "# if dog", "\n", "            ", "fname_trg", ",", "trg_label", "=", "random", ".", "choice", "(", "self", ".", "cats", ")", "\n", "", "else", ":", "\n", "            ", "fname_trg", ",", "trg_label", "=", "random", ".", "choice", "(", "self", ".", "dogs", ")", "\n", "\n", "", "src_image", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "fname_src", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "trg_image", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "fname_trg", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "src_image", ",", "trg_image", "=", "self", ".", "transform", "(", "src_image", ")", ",", "self", ".", "transform", "(", "trg_image", ")", "\n", "src_label", "=", "torch", ".", "tensor", "(", "src_label", ")", ".", "long", "(", ")", "\n", "trg_label", "=", "torch", ".", "tensor", "(", "trg_label", ")", ".", "long", "(", ")", "\n", "return", "src_image", ",", "trg_image", ",", "src_label", ",", "trg_label", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.cat2dog_dataset.Cat2Dog.__len__": [[65, 68], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the number of images.\"\"\"", "\n", "return", "self", ".", "num_images", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.cat2dog_dataset.Cat2Dog_test.__init__": [[70, 86], ["len", "utils.load_cat2dog_files", "utils.load_cat2dog_files"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_cat2dog_files", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_cat2dog_files"], ["    ", "def", "__init__", "(", "self", ",", "\n", "image_dir", ",", "\n", "train_list_path", ",", "\n", "test_list_path", ",", "\n", "transform", "=", "None", ",", "\n", "is_train", "=", "False", "\n", ")", ":", "\n", "        ", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "if", "is_train", ":", "\n", "            ", "self", ".", "dataset", "=", "load_files", "(", "train_list_path", ",", "\"train\"", "if", "is_train", "else", "\"test\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dataset", "=", "load_files", "(", "test_list_path", ",", "\"train\"", "if", "is_train", "else", "\"test\"", ")", "\n", "\n", "", "self", ".", "num_images", "=", "len", "(", "self", ".", "test_dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.cat2dog_dataset.Cat2Dog_test.__getitem__": [[87, 97], ["PIL.Image.open().convert", "cat2dog_dataset.Cat2Dog_test.transform", "torch.tensor().long", "torch.tensor().long", "PIL.Image.open", "torch.tensor", "torch.tensor", "os.path.join"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "fname_src", ",", "src_label", "=", "self", ".", "dataset", "[", "index", "]", "\n", "trg_label", "=", "1", "-", "src_label", "\n", "\n", "image", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "fname_src", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "trg_label", "=", "torch", ".", "tensor", "(", "trg_label", ")", ".", "long", "(", ")", "\n", "src_label", "=", "torch", ".", "tensor", "(", "src_label", ")", ".", "long", "(", ")", "\n", "return", "image", ",", "fname_src", ",", "trg_label", ",", "src_label", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.cat2dog_dataset.Cat2Dog_test.__len__": [[98, 101], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the number of images.\"\"\"", "\n", "return", "self", ".", "num_images", "", "", "", ""]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_celeba_files": [[9, 19], ["print", "random.shuffle", "line.rstrip", "ll.split", "dataset.append", "open", "int", "len"], "function", ["None"], ["def", "load_celeba_files", "(", "file_path", ",", "mode", ")", ":", "\n", "    ", "lines", "=", "[", "line", ".", "rstrip", "(", ")", "for", "line", "in", "open", "(", "file_path", ",", "'r'", ")", "]", "\n", "dataset", "=", "[", "]", "\n", "for", "ll", "in", "lines", ":", "\n", "        ", "fname", ",", "label", "=", "ll", ".", "split", "(", ")", "\n", "label", "=", "[", "int", "(", "v", ")", "for", "v", "in", "label", "]", "\n", "dataset", ".", "append", "(", "[", "fname", ",", "label", "]", ")", "\n", "", "print", "(", "'Finished loading {} {} images...'", ".", "format", "(", "len", "(", "dataset", ")", ",", "mode", ")", ")", "\n", "random", ".", "shuffle", "(", "dataset", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.utils.load_cat2dog_files": [[20, 29], ["print", "random.shuffle", "line.rstrip", "ll.split", "dataset.append", "open", "len", "int"], "function", ["None"], ["", "def", "load_cat2dog_files", "(", "file_path", ",", "mode", ")", ":", "\n", "    ", "lines", "=", "[", "line", ".", "rstrip", "(", ")", "for", "line", "in", "open", "(", "file_path", ",", "'r'", ")", "]", "\n", "dataset", "=", "[", "]", "\n", "for", "ll", "in", "lines", ":", "\n", "        ", "fname", ",", "label", "=", "ll", ".", "split", "(", ")", "\n", "dataset", ".", "append", "(", "[", "fname", ",", "int", "(", "label", ")", "]", ")", "\n", "", "print", "(", "'Finished loading {} {} images...'", ".", "format", "(", "len", "(", "dataset", ")", ",", "mode", ")", ")", "\n", "random", ".", "shuffle", "(", "dataset", ")", "\n", "return", "dataset", "", "", ""]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGen.__init__": [[30, 87], ["torch.nn.Module.__init__", "basic_modules.StyleEncoder", "basic_modules.ContentEncoder", "basic_modules.Decoder", "basic_modules.MLP", "models.AdaINGen.get_num_adain_params"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.get_num_adain_params"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "AdaINGen", ",", "self", ")", ".", "__init__", "(", ")", "\n", "input_dim", "=", "args", "[", "'input_dim'", "]", "\n", "gf_dim", "=", "args", "[", "'gf_dim'", "]", "\n", "n_res", "=", "args", "[", "'n_res'", "]", "\n", "activ", "=", "args", "[", "'activ'", "]", "\n", "pad_type", "=", "args", "[", "'pad_type'", "]", "\n", "mlp_dim", "=", "args", "[", "'mlp_dim'", "]", "\n", "attr_dim", "=", "args", "[", "'attr_dim'", "]", "\n", "num_cls", "=", "args", "[", "'num_cls'", "]", "\n", "n_downsample", "=", "args", "[", "'n_downsample'", "]", "\n", "use_attention", "=", "args", "[", "'use_attention'", "]", "\n", "sty_dim", "=", "attr_dim", "*", "num_cls", "\n", "\n", "# style encoder", "\n", "self", ".", "enc_style", "=", "StyleEncoder", "(", "\n", "input_dim", "=", "input_dim", ",", "\n", "dim", "=", "gf_dim", ",", "\n", "n_downsample", "=", "4", ",", "\n", "norm", "=", "'none'", ",", "\n", "activ", "=", "activ", ",", "\n", "pad_type", "=", "pad_type", ",", "\n", "attr_dim", "=", "attr_dim", ",", "\n", "num_class", "=", "num_cls", "\n", ")", "\n", "\n", "# content encoder", "\n", "self", ".", "enc_content", "=", "ContentEncoder", "(", "\n", "input_dim", "=", "input_dim", ",", "\n", "dim", "=", "gf_dim", ",", "\n", "n_downsample", "=", "n_downsample", ",", "\n", "n_res", "=", "n_res", ",", "\n", "norm", "=", "'in'", ",", "\n", "activ", "=", "activ", ",", "\n", "pad_type", "=", "pad_type", "\n", ")", "\n", "\n", "# decoder", "\n", "self", ".", "dec", "=", "Decoder", "(", "\n", "dim", "=", "self", ".", "enc_content", ".", "output_dim", ",", "\n", "output_dim", "=", "input_dim", ",", "\n", "n_upsample", "=", "n_downsample", ",", "\n", "n_res", "=", "n_res", ",", "\n", "res_norm", "=", "'adain'", ",", "\n", "activ", "=", "activ", ",", "\n", "pad_type", "=", "'zero'", ",", "\n", "use_attention", "=", "use_attention", "\n", ")", "\n", "\n", "# MLP to generate AdaIN parameters", "\n", "self", ".", "mlp", "=", "MLP", "(", "\n", "input_dim", "=", "sty_dim", ",", "\n", "output_dim", "=", "self", ".", "get_num_adain_params", "(", "self", ".", "dec", ")", ",", "\n", "dim", "=", "mlp_dim", ",", "\n", "n_blk", "=", "3", ",", "\n", "norm", "=", "'none'", ",", "\n", "activ", "=", "'relu'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGen.forward": [[89, 93], ["models.AdaINGen.encode", "models.AdaINGen.decode", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# reconstruct an image", "\n", "        ", "content", ",", "styles", "=", "self", ".", "encode", "(", "x", ")", "\n", "return", "self", ".", "decode", "(", "content", ",", "torch", ".", "cat", "(", "styles", "[", "0", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGen.encode": [[94, 99], ["models.AdaINGen.enc_style", "models.AdaINGen.enc_content"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "# encode an image to its content and style codes", "\n", "        ", "styles", "=", "self", ".", "enc_style", "(", "x", ")", "\n", "content", "=", "self", ".", "enc_content", "(", "x", ")", "\n", "return", "content", ",", "styles", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGen.decode": [[100, 105], ["models.AdaINGen.mlp", "models.AdaINGen.assign_adain_params", "models.AdaINGen.dec"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.assign_adain_params"], ["", "def", "decode", "(", "self", ",", "content", ",", "style", ")", ":", "\n", "# decode content and style codes to an image", "\n", "        ", "adain_params", "=", "self", ".", "mlp", "(", "style", ")", "\n", "self", ".", "assign_adain_params", "(", "adain_params", ",", "self", ".", "dec", ")", "\n", "return", "self", ".", "dec", "(", "content", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGen.assign_adain_params": [[106, 116], ["model.modules", "mean.contiguous().view", "std.contiguous().view", "adain_params.size", "mean.contiguous", "std.contiguous"], "methods", ["None"], ["", "def", "assign_adain_params", "(", "self", ",", "adain_params", ",", "model", ")", ":", "\n", "# assign the adain_params to the AdaIN layers in model", "\n", "        ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "m", ".", "__class__", ".", "__name__", "==", "\"AdaptiveInstanceNorm2d\"", ":", "\n", "                ", "mean", "=", "adain_params", "[", ":", ",", ":", "m", ".", "num_features", "]", "\n", "std", "=", "adain_params", "[", ":", ",", "m", ".", "num_features", ":", "2", "*", "m", ".", "num_features", "]", "\n", "m", ".", "bias", "=", "mean", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "m", ".", "weight", "=", "std", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "if", "adain_params", ".", "size", "(", "1", ")", ">", "2", "*", "m", ".", "num_features", ":", "\n", "                    ", "adain_params", "=", "adain_params", "[", ":", ",", "2", "*", "m", ".", "num_features", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGen.get_num_adain_params": [[117, 124], ["model.modules"], "methods", ["None"], ["", "", "", "", "def", "get_num_adain_params", "(", "self", ",", "model", ")", ":", "\n", "# return the number of AdaIN parameters needed by the model", "\n", "        ", "num_adain_params", "=", "0", "\n", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "m", ".", "__class__", ".", "__name__", "==", "\"AdaptiveInstanceNorm2d\"", ":", "\n", "                ", "num_adain_params", "+=", "2", "*", "m", ".", "num_features", "\n", "", "", "return", "num_adain_params", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.__init__": [[128, 197], ["torch.nn.Module.__init__", "basic_modules.StyleEncoder", "basic_modules.ContentEncoder", "basic_modules.Decoder", "basic_modules.MLP", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "models.AdaINGenRet.get_num_adain_params"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.get_num_adain_params"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "AdaINGen", ",", "self", ")", ".", "__init__", "(", ")", "\n", "input_dim", "=", "args", "[", "'input_dim'", "]", "\n", "gf_dim", "=", "args", "[", "'gf_dim'", "]", "\n", "n_res", "=", "args", "[", "'n_res'", "]", "\n", "activ", "=", "args", "[", "'activ'", "]", "\n", "pad_type", "=", "args", "[", "'pad_type'", "]", "\n", "mlp_dim", "=", "args", "[", "'mlp_dim'", "]", "\n", "attr_dim", "=", "args", "[", "'attr_dim'", "]", "\n", "num_cls", "=", "args", "[", "'num_cls'", "]", "\n", "n_downsample", "=", "args", "[", "'n_downsample'", "]", "\n", "use_attention", "=", "args", "[", "'use_attention'", "]", "\n", "num_ret", "=", "args", "[", "'num_results'", "]", "\n", "sty_dim", "=", "attr_dim", "*", "num_cls", "\n", "\n", "# style encoder", "\n", "self", ".", "enc_style", "=", "StyleEncoder", "(", "\n", "input_dim", "=", "input_dim", ",", "\n", "dim", "=", "gf_dim", ",", "\n", "n_downsample", "=", "4", ",", "\n", "norm", "=", "'none'", ",", "\n", "activ", "=", "activ", ",", "\n", "pad_type", "=", "pad_type", ",", "\n", "attr_dim", "=", "attr_dim", ",", "\n", "num_class", "=", "num_cls", "\n", ")", "\n", "\n", "# content encoder", "\n", "self", ".", "enc_content", "=", "ContentEncoder", "(", "\n", "input_dim", "=", "input_dim", ",", "\n", "dim", "=", "gf_dim", ",", "\n", "n_downsample", "=", "n_downsample", ",", "\n", "n_res", "=", "n_res", ",", "\n", "norm", "=", "'in'", ",", "\n", "activ", "=", "activ", ",", "\n", "pad_type", "=", "pad_type", "\n", ")", "\n", "\n", "# decoder", "\n", "self", ".", "dec", "=", "Decoder", "(", "\n", "dim", "=", "self", ".", "enc_content", ".", "output_dim", ",", "\n", "output_dim", "=", "input_dim", ",", "\n", "n_upsample", "=", "n_downsample", ",", "\n", "n_res", "=", "n_res", ",", "\n", "res_norm", "=", "'adain'", ",", "\n", "activ", "=", "activ", ",", "\n", "pad_type", "=", "'zero'", ",", "\n", "use_attention", "=", "use_attention", "\n", ")", "\n", "\n", "# MLP to generate AdaIN parameters", "\n", "self", ".", "mlp", "=", "MLP", "(", "\n", "input_dim", "=", "sty_dim", ",", "\n", "output_dim", "=", "self", ".", "get_num_adain_params", "(", "self", ".", "dec", ")", ",", "\n", "dim", "=", "mlp_dim", ",", "\n", "n_blk", "=", "3", ",", "\n", "norm", "=", "'none'", ",", "\n", "activ", "=", "'relu'", "\n", ")", "\n", "\n", "self", ".", "retrieved_fuse", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "enc_content", ".", "output_dim", "*", "num_ret", ",", "\n", "self", ".", "enc_content", ".", "output_dim", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "enc_content", ".", "output_dim", "*", "2", ",", "\n", "self", ".", "enc_content", ".", "output_dim", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.forward": [[198, 203], ["models.AdaINGenRet.encode", "models.AdaINGenRet.encode_retrieved", "models.AdaINGenRet.decode", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode_retrieved", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode"], ["", "def", "forward", "(", "self", ",", "images", ",", "retrieved_images", ")", ":", "\n", "# reconstruct an image", "\n", "        ", "content", ",", "styles", "=", "self", ".", "encode", "(", "images", ")", "\n", "feats_ret", "=", "self", ".", "encode_retrieved", "(", "retrieved_images", ")", "\n", "return", "self", ".", "decode", "(", "content", ",", "torch", ".", "cat", "(", "styles", "[", "0", "]", ",", "dim", "=", "1", ")", ",", "feats_ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode": [[204, 209], ["models.AdaINGenRet.enc_style", "models.AdaINGenRet.enc_content"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "images", ")", ":", "\n", "# encode an image to its content and style codes", "\n", "        ", "styles", "=", "self", ".", "enc_style", "(", "images", ")", "\n", "content", "=", "self", ".", "enc_content", "(", "images", ")", "\n", "return", "content", ",", "styles", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode_retrieved": [[210, 216], ["retrieved_images.size", "models.AdaINGenRet.enc_content", "feats.view.view.contiguous().view", "feats.view.view.view", "models.AdaINGenRet.retrieved_fuse", "retrieved_images.view", "feats.view.view.contiguous", "feats.view.view.size", "feats.view.view.size"], "methods", ["None"], ["", "def", "encode_retrieved", "(", "self", ",", "retrieved_images", ")", ":", "\n", "        ", "sz", "=", "retrieved_images", ".", "size", "(", ")", "# [bsz, k, 3, H, W]", "\n", "feats", "=", "self", ".", "enc_content", "(", "retrieved_images", ".", "view", "(", "-", "1", ",", "*", "sz", "[", "2", ":", "]", ")", ")", "# [bsz*k, C, H/K, W/K]", "\n", "feats", "=", "feats", ".", "contiguous", "(", ")", ".", "view", "(", "*", "sz", "[", ":", "2", "]", ",", "feats", ".", "size", "(", ")", "[", "1", ":", "]", ")", "# [bsz, k, C, H/K, W/K]", "\n", "feats", "=", "feats", ".", "view", "(", "sz", "[", "0", "]", ",", "-", "1", ",", "feats", ".", "size", "(", ")", "[", "3", ":", "]", ")", "# [bsz, k*C, H/K, W/K]", "\n", "return", "self", ".", "retrieved_fuse", "(", "feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode": [[217, 226], ["models.AdaINGenRet.encode_retrieved", "models.AdaINGenRet.mlp", "models.AdaINGenRet.assign_adain_params", "models.AdaINGenRet.conv", "models.AdaINGenRet.dec", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode_retrieved", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.assign_adain_params"], ["", "def", "decode", "(", "self", ",", "content", ",", "style", ",", "retrieved_images", ")", ":", "\n", "# extract features from retrieved images", "\n", "        ", "feats_ret", "=", "self", ".", "encode_retrieved", "(", "retrieved_images", ")", "\n", "# decode content and style codes to an image", "\n", "adain_params", "=", "self", ".", "mlp", "(", "style", ")", "\n", "self", ".", "assign_adain_params", "(", "adain_params", ",", "self", ".", "dec", ")", "\n", "feats", "=", "self", ".", "conv", "(", "torch", ".", "cat", "(", "[", "content", ",", "feats_ret", "]", ",", "dim", "=", "1", ")", ")", "\n", "images", "=", "self", ".", "dec", "(", "feats", ")", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.assign_adain_params": [[227, 237], ["model.modules", "mean.contiguous().view", "std.contiguous().view", "adain_params.size", "mean.contiguous", "std.contiguous"], "methods", ["None"], ["", "def", "assign_adain_params", "(", "self", ",", "adain_params", ",", "model", ")", ":", "\n", "# assign the adain_params to the AdaIN layers in model", "\n", "        ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "m", ".", "__class__", ".", "__name__", "==", "\"AdaptiveInstanceNorm2d\"", ":", "\n", "                ", "mean", "=", "adain_params", "[", ":", ",", ":", "m", ".", "num_features", "]", "\n", "std", "=", "adain_params", "[", ":", ",", "m", ".", "num_features", ":", "2", "*", "m", ".", "num_features", "]", "\n", "m", ".", "bias", "=", "mean", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "m", ".", "weight", "=", "std", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "if", "adain_params", ".", "size", "(", "1", ")", ">", "2", "*", "m", ".", "num_features", ":", "\n", "                    ", "adain_params", "=", "adain_params", "[", ":", ",", "2", "*", "m", ".", "num_features", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.get_num_adain_params": [[238, 245], ["model.modules"], "methods", ["None"], ["", "", "", "", "def", "get_num_adain_params", "(", "self", ",", "model", ")", ":", "\n", "# return the number of AdaIN parameters needed by the model", "\n", "        ", "num_adain_params", "=", "0", "\n", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "m", ".", "__class__", ".", "__name__", "==", "\"AdaptiveInstanceNorm2d\"", ":", "\n", "                ", "num_adain_params", "+=", "2", "*", "m", ".", "num_features", "\n", "", "", "return", "num_adain_params", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.freezen_params": [[246, 253], ["models.AdaINGenRet.enc_style.eval", "models.AdaINGenRet.enc_style.parameters", "models.AdaINGenRet.enc_content.eval", "models.AdaINGenRet.enc_content.parameters"], "methods", ["None"], ["", "def", "freezen_params", "(", "self", ")", ":", "\n", "        ", "self", ".", "enc_style", ".", "eval", "(", ")", "\n", "for", "param", "in", "self", ".", "enc_style", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "enc_content", ".", "eval", "(", ")", "\n", "for", "param", "in", "self", ".", "enc_content", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.MsImageDis.__init__": [[261, 283], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "torch.nn.AvgPool2d", "torch.nn.AvgPool2d", "models.MsImageDis._make_net", "models.MsImageDis.cnns_feat.append", "models.MsImageDis.cnns_src.append", "models.MsImageDis.cnns_cls.append"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.MsImageDis._make_net"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "MsImageDis", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_layer", "=", "args", "[", "'n_layer'", "]", "\n", "self", ".", "df_dim", "=", "args", "[", "'df_dim'", "]", "\n", "self", ".", "norm", "=", "args", "[", "'norm'", "]", "\n", "self", ".", "activ", "=", "args", "[", "'activ'", "]", "\n", "self", ".", "pad_type", "=", "args", "[", "'pad_type'", "]", "\n", "self", ".", "num_cls", "=", "args", "[", "'num_cls'", "]", "\n", "self", ".", "input_dim", "=", "args", "[", "'input_dim'", "]", "\n", "num_scales", "=", "args", "[", "'num_scales'", "]", "\n", "img_size", "=", "args", "[", "'img_size'", "]", "\n", "\n", "self", ".", "cnns_feat", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cnns_src", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cnns_cls", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "num_scales", ")", ":", "\n", "            ", "net_feat", ",", "net_src", ",", "net_cls", "=", "self", ".", "_make_net", "(", "img_size", "//", "(", "2", "**", "i", ")", ")", "\n", "self", ".", "cnns_feat", ".", "append", "(", "net_feat", ")", "\n", "self", ".", "cnns_src", ".", "append", "(", "net_src", ")", "\n", "self", ".", "cnns_cls", ".", "append", "(", "net_cls", ")", "\n", "\n", "", "self", ".", "downsample", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "2", ",", "padding", "=", "[", "1", ",", "1", "]", ",", "count_include_pad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.MsImageDis._make_net": [[284, 297], ["range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "basic_modules.Conv2dBlock", "min", "basic_modules.Conv2dBlock"], "methods", ["None"], ["", "def", "_make_net", "(", "self", ",", "img_size", ")", ":", "\n", "        ", "dim", "=", "self", ".", "df_dim", "\n", "cnn_x", "=", "[", "]", "\n", "cnn_x", "+=", "[", "Conv2dBlock", "(", "self", ".", "input_dim", ",", "dim", ",", "4", ",", "2", ",", "1", ",", "norm", "=", "'none'", ",", "activation", "=", "self", ".", "activ", ",", "pad_type", "=", "self", ".", "pad_type", ")", "]", "\n", "pre_dim", "=", "dim", "\n", "for", "i", "in", "range", "(", "self", ".", "n_layer", "-", "1", ")", ":", "\n", "            ", "dim", "=", "min", "(", "dim", "*", "2", ",", "512", ")", "\n", "cnn_x", "+=", "[", "Conv2dBlock", "(", "pre_dim", ",", "dim", ",", "4", ",", "2", ",", "1", ",", "norm", "=", "self", ".", "norm", ",", "activation", "=", "self", ".", "activ", ",", "pad_type", "=", "self", ".", "pad_type", ")", "]", "\n", "pre_dim", "=", "dim", "\n", "", "cnn_x", "=", "nn", ".", "Sequential", "(", "*", "cnn_x", ")", "\n", "cnn_src", "=", "nn", ".", "Conv2d", "(", "dim", ",", "1", ",", "1", ",", "1", ",", "0", ")", "\n", "cnn_cls", "=", "nn", ".", "Conv2d", "(", "dim", ",", "self", ".", "num_cls", ",", "kernel_size", "=", "img_size", "//", "(", "2", "**", "self", ".", "n_layer", ")", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "return", "cnn_x", ",", "cnn_src", ",", "cnn_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.MsImageDis.forward": [[298, 309], ["zip", "net_feat", "net_src", "net_cls", "out_cls.view.view.view", "outputs.append", "models.MsImageDis.downsample", "out_cls.view.view.size", "out_cls.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outputs", "=", "[", "]", "\n", "for", "net_feat", ",", "net_src", ",", "net_cls", "in", "zip", "(", "self", ".", "cnns_feat", ",", "self", ".", "cnns_src", ",", "self", ".", "cnns_cls", ")", ":", "\n", "            ", "out_feat", "=", "net_feat", "(", "x", ")", "\n", "out_src", "=", "net_src", "(", "out_feat", ")", "\n", "out_cls", "=", "net_cls", "(", "out_feat", ")", "\n", "out_cls", "=", "out_cls", ".", "view", "(", "out_cls", ".", "size", "(", "0", ")", ",", "out_cls", ".", "size", "(", "1", ")", ")", "\n", "outputs", ".", "append", "(", "[", "out_src", ",", "out_cls", "]", ")", "\n", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "#x = F.interpolate(x, scale_factor=0.5, mode='bilinear')", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.RetrievalNet.__init__": [[312, 340], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "range", "torch.nn.Sequential", "torch.nn.Sequential", "basic_modules.Conv2dBlock", "basic_modules.Conv2dBlock", "basic_modules.Conv2dBlock", "basic_modules.Conv2dBlock", "basic_modules.Conv2dBlock", "basic_modules.Conv2dBlock", "basic_modules.LinearBlock", "basic_modules.LinearBlock", "basic_modules.LinearBlock", "torch.nn.Dropout", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "RetrievalNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "embed_dim", "=", "args", "[", "'embed_dim'", "]", "\n", "hidden_size", "=", "args", "[", "'hidden_size'", "]", "\n", "num_layers", "=", "args", "[", "'num_layers'", "]", "\n", "activ", "=", "args", "[", "'activ'", "]", "\n", "norm", "=", "args", "[", "'norm'", "]", "\n", "pad_type", "=", "args", "[", "'pad_type'", "]", "\n", "style_dim", "=", "args", "[", "'attr_dim'", "]", "*", "args", "[", "'num_cls'", "]", "\n", "\n", "# Convs for the content feature map", "\n", "# Content feature map is [256x32x32]", "\n", "conv_down", "=", "[", "Conv2dBlock", "(", "256", ",", "128", ",", "3", ",", "1", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", ",", "# [N, 128, 32, 32]", "\n", "Conv2dBlock", "(", "128", ",", "128", ",", "4", ",", "2", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", ",", "# [N, 128, 16, 16]", "\n", "Conv2dBlock", "(", "128", ",", "64", ",", "3", ",", "1", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", ",", "# [N, 64, 16, 16]", "\n", "Conv2dBlock", "(", "64", ",", "64", ",", "4", ",", "2", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", ",", "# [N, 64, 8, 8]", "\n", "Conv2dBlock", "(", "64", ",", "32", ",", "3", ",", "1", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", ",", "# [N, 32, 8, 8]", "\n", "Conv2dBlock", "(", "32", ",", "32", ",", "4", ",", "2", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "]", "# [N, 32, 4, 4]", "\n", "self", ".", "conv_down", "=", "nn", ".", "Sequential", "(", "*", "conv_down", ")", "\n", "\n", "# MLP", "\n", "self", ".", "model", "=", "[", "]", "\n", "self", ".", "model", "+=", "[", "LinearBlock", "(", "512", "+", "style_dim", ",", "hidden_size", ",", "norm", "=", "'none'", ",", "activation", "=", "activ", ")", "]", "# flatten [32x4x4] feature map + the attributes encoding", "\n", "for", "i", "in", "range", "(", "num_layers", "-", "2", ")", ":", "\n", "            ", "self", ".", "model", "+=", "[", "LinearBlock", "(", "hidden_size", ",", "hidden_size", ",", "norm", "=", "'none'", ",", "activation", "=", "activ", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.1", ")", "]", "\n", "", "self", ".", "model", "+=", "[", "LinearBlock", "(", "hidden_size", ",", "embed_dim", ",", "norm", "=", "'none'", ",", "activation", "=", "'none'", ")", "]", "# no output activations", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.RetrievalNet.forward": [[341, 348], ["models.RetrievalNet.conv_down", "x_cont.contiguous().view.contiguous().view.contiguous().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.RetrievalNet.model", "x_cont.contiguous().view.contiguous().view.size", "x_cont.contiguous().view.contiguous().view.contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_cont", ",", "x_sty", ")", ":", "\n", "        ", "x_cont", "=", "self", ".", "conv_down", "(", "x_cont", ")", "\n", "# Flatten the 32x4x4 tensor", "\n", "x_cont", "=", "x_cont", ".", "contiguous", "(", ")", ".", "view", "(", "x_cont", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x_cont", ",", "x_sty", ")", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.RetrievalNet.freezen_params": [[349, 356], ["models.RetrievalNet.conv_down.eval", "models.RetrievalNet.conv_down.parameters", "models.RetrievalNet.model.eval", "models.RetrievalNet.model.parameters"], "methods", ["None"], ["", "def", "freezen_params", "(", "self", ")", ":", "\n", "        ", "self", ".", "conv_down", ".", "eval", "(", ")", "\n", "for", "param", "in", "self", ".", "conv_down", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "model", ".", "eval", "(", ")", "\n", "for", "param", "in", "self", ".", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.Conv2dBlock.__init__": [[14, 60], ["torch.nn.Module.__init__", "torch.nn.ReflectionPad2d", "torch.nn.ReflectionPad2d", "torch.nn.ZeroPad2d", "torch.nn.ZeroPad2d", "torch.nn.InstanceNorm2d", "torch.nn.InstanceNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "basic_modules.SpectralNorm", "torch.nn.Conv2d", "torch.nn.Conv2d", "basic_modules.LayerNorm", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "basic_modules.AdaptiveInstanceNorm2d", "torch.nn.Tanh", "torch.nn.Tanh", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_dim", ",", "\n", "output_dim", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", "=", "0", ",", "\n", "norm", "=", "'none'", ",", "\n", "activation", "=", "'relu'", ",", "\n", "pad_type", "=", "'zero'", "\n", ")", ":", "\n", "        ", "super", "(", "Conv2dBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_bias", "=", "True", "\n", "# initialize padding", "\n", "if", "pad_type", "==", "'reflect'", ":", "\n", "            ", "self", ".", "pad", "=", "nn", ".", "ReflectionPad2d", "(", "padding", ")", "\n", "", "else", ":", "#pad_type == 'zero':", "\n", "            ", "self", ".", "pad", "=", "nn", ".", "ZeroPad2d", "(", "padding", ")", "\n", "\n", "# initialize normalization", "\n", "", "norm_dim", "=", "output_dim", "\n", "if", "norm", "==", "'in'", ":", "\n", "            ", "self", ".", "norm", "=", "nn", ".", "InstanceNorm2d", "(", "norm_dim", ")", "\n", "", "elif", "norm", "==", "'ln'", ":", "\n", "            ", "self", ".", "norm", "=", "LayerNorm", "(", "norm_dim", ")", "\n", "", "elif", "norm", "==", "'adain'", ":", "\n", "            ", "self", ".", "norm", "=", "AdaptiveInstanceNorm2d", "(", "norm_dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "\n", "# initialize activation", "\n", "", "if", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "activation", "==", "'lrelu'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "False", ")", "\n", "", "elif", "activation", "==", "'tanh'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "activation", "==", "'sigmoid'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "activation", "=", "None", "\n", "\n", "# initialize convolution", "\n", "", "if", "norm", "==", "'sn'", ":", "\n", "            ", "self", ".", "conv", "=", "SpectralNorm", "(", "nn", ".", "Conv2d", "(", "input_dim", ",", "output_dim", ",", "kernel_size", ",", "stride", ",", "bias", "=", "self", ".", "use_bias", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "input_dim", ",", "output_dim", ",", "kernel_size", ",", "stride", ",", "bias", "=", "self", ".", "use_bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.Conv2dBlock.forward": [[61, 68], ["basic_modules.Conv2dBlock.conv", "basic_modules.Conv2dBlock.pad", "basic_modules.Conv2dBlock.norm", "basic_modules.Conv2dBlock.activation"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "self", ".", "pad", "(", "x", ")", ")", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.ResBlock.__init__": [[70, 81], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "basic_modules.Conv2dBlock", "basic_modules.Conv2dBlock"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "norm", "=", "'in'", ",", "\n", "activation", "=", "'relu'", ",", "\n", "pad_type", "=", "'zero'", "\n", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "[", "]", "\n", "model", "+=", "[", "Conv2dBlock", "(", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activation", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "model", "+=", "[", "Conv2dBlock", "(", "dim", ",", "dim", ",", "3", ",", "1", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "'none'", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.ResBlock.forward": [[82, 87], ["basic_modules.ResBlock.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "out", "+=", "residual", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.ResBlocks.__init__": [[89, 101], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "torch.nn.Sequential", "basic_modules.ResBlock"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_blocks", ",", "\n", "dim", ",", "\n", "norm", "=", "'in'", ",", "\n", "activation", "=", "'relu'", ",", "\n", "pad_type", "=", "'zero'", "\n", ")", ":", "\n", "        ", "super", "(", "ResBlocks", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_blocks", ")", ":", "\n", "            ", "self", ".", "model", "+=", "[", "ResBlock", "(", "dim", ",", "norm", "=", "norm", ",", "activation", "=", "activation", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.ResBlocks.forward": [[102, 104], ["basic_modules.ResBlocks.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.LinearBlock.__init__": [[107, 137], ["torch.nn.Module.__init__", "basic_modules.SpectralNorm", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.InstanceNorm1d", "torch.nn.InstanceNorm1d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "basic_modules.LayerNorm", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_dim", ",", "\n", "output_dim", ",", "\n", "norm", "=", "'none'", ",", "\n", "activation", "=", "'relu'", "\n", ")", ":", "\n", "        ", "super", "(", "LinearBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "use_bias", "=", "True", "\n", "# initialize fully connected layer", "\n", "if", "norm", "==", "'sn'", ":", "\n", "            ", "self", ".", "fc", "=", "SpectralNorm", "(", "nn", ".", "Linear", "(", "input_dim", ",", "output_dim", ",", "bias", "=", "use_bias", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "input_dim", ",", "output_dim", ",", "bias", "=", "use_bias", ")", "\n", "\n", "# initialize normalization", "\n", "", "norm_dim", "=", "output_dim", "\n", "if", "norm", "==", "'in'", ":", "\n", "            ", "self", ".", "norm", "=", "nn", ".", "InstanceNorm1d", "(", "norm_dim", ")", "\n", "", "elif", "norm", "==", "'ln'", ":", "\n", "            ", "self", ".", "norm", "=", "LayerNorm", "(", "norm_dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "\n", "# initialize activation", "\n", "", "if", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "activation", "==", "'lrelu'", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "activation", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.LinearBlock.forward": [[138, 145], ["basic_modules.LinearBlock.fc", "basic_modules.LinearBlock.norm", "basic_modules.LinearBlock.activation"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "fc", "(", "x", ")", "\n", "if", "self", ".", "norm", ":", "\n", "            ", "out", "=", "self", ".", "norm", "(", "out", ")", "\n", "", "if", "self", ".", "activation", ":", "\n", "            ", "out", "=", "self", ".", "activation", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.MLP.__init__": [[148, 163], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "torch.nn.Sequential", "basic_modules.LinearBlock", "basic_modules.LinearBlock", "basic_modules.LinearBlock"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_dim", ",", "\n", "output_dim", ",", "\n", "dim", ",", "\n", "n_blk", ",", "\n", "norm", "=", "'none'", ",", "\n", "activ", "=", "'relu'", "\n", ")", ":", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "[", "]", "\n", "self", ".", "model", "+=", "[", "LinearBlock", "(", "input_dim", ",", "dim", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ")", "]", "\n", "for", "i", "in", "range", "(", "n_blk", "-", "2", ")", ":", "\n", "            ", "self", ".", "model", "+=", "[", "LinearBlock", "(", "dim", ",", "dim", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ")", "]", "\n", "", "self", ".", "model", "+=", "[", "LinearBlock", "(", "dim", ",", "output_dim", ",", "norm", "=", "'none'", ",", "activation", "=", "'none'", ")", "]", "# no output activations", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.MLP.forward": [[164, 166], ["basic_modules.MLP.model", "x.view", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.AdaptiveInstanceNorm2d.__init__": [[171, 182], ["torch.nn.Module.__init__", "basic_modules.AdaptiveInstanceNorm2d.register_buffer", "basic_modules.AdaptiveInstanceNorm2d.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "AdaptiveInstanceNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "momentum", "=", "momentum", "\n", "# weight and bias are dynamically assigned", "\n", "self", ".", "weight", "=", "None", "\n", "self", ".", "bias", "=", "None", "\n", "# just dummy buffers, not used", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "ones", "(", "num_features", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.AdaptiveInstanceNorm2d.forward": [[183, 197], ["basic_modules.AdaptiveInstanceNorm2d.running_mean.repeat", "basic_modules.AdaptiveInstanceNorm2d.running_var.repeat", "x.contiguous().view", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm.view", "x.size", "x.size", "x.contiguous", "x.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "assert", "self", ".", "weight", "is", "not", "None", "and", "self", ".", "bias", "is", "not", "None", ",", "\"Please assign weight and bias before calling AdaIN!\"", "\n", "b", ",", "c", "=", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", "\n", "running_mean", "=", "self", ".", "running_mean", ".", "repeat", "(", "b", ")", "\n", "running_var", "=", "self", ".", "running_var", ".", "repeat", "(", "b", ")", "\n", "\n", "# Apply instance norm", "\n", "x_reshaped", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "1", ",", "b", "*", "c", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "\n", "out", "=", "F", ".", "batch_norm", "(", "\n", "x_reshaped", ",", "running_mean", ",", "running_var", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "\n", "True", ",", "self", ".", "momentum", ",", "self", ".", "eps", ")", "\n", "\n", "return", "out", ".", "view", "(", "b", ",", "c", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.AdaptiveInstanceNorm2d.__repr__": [[198, 200], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.LayerNorm.__init__": [[203, 212], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ",", "affine", "=", "True", ")", ":", "\n", "        ", "super", "(", "LayerNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "affine", "=", "affine", "\n", "self", ".", "eps", "=", "eps", "\n", "\n", "if", "self", ".", "affine", ":", "\n", "            ", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ".", "uniform_", "(", ")", ")", "\n", "self", ".", "beta", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.LayerNorm.forward": [[213, 229], ["x.size", "x.view().mean().view", "x.view().std().view", "x.view().mean().view", "x.view().std().view", "basic_modules.LayerNorm.beta.view", "x.dim", "x.view().mean", "x.view().std", "x.view().mean", "x.view().std", "basic_modules.LayerNorm.gamma.view", "x.dim", "x.view", "x.view", "x.view", "x.view", "x.size", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shape", "=", "[", "-", "1", "]", "+", "[", "1", "]", "*", "(", "x", ".", "dim", "(", ")", "-", "1", ")", "\n", "if", "x", ".", "size", "(", "0", ")", "==", "1", ":", "\n", "# These two lines run much faster in pytorch 0.4 than the two lines listed below.", "\n", "            ", "mean", "=", "x", ".", "view", "(", "-", "1", ")", ".", "mean", "(", ")", ".", "view", "(", "*", "shape", ")", "\n", "std", "=", "x", ".", "view", "(", "-", "1", ")", ".", "std", "(", ")", ".", "view", "(", "*", "shape", ")", "\n", "", "else", ":", "\n", "            ", "mean", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "mean", "(", "1", ")", ".", "view", "(", "*", "shape", ")", "\n", "std", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "std", "(", "1", ")", ".", "view", "(", "*", "shape", ")", "\n", "\n", "", "x", "=", "(", "x", "-", "mean", ")", "/", "(", "std", "+", "self", ".", "eps", ")", "\n", "\n", "if", "self", ".", "affine", ":", "\n", "            ", "shape", "=", "[", "1", ",", "-", "1", "]", "+", "[", "1", "]", "*", "(", "x", ".", "dim", "(", ")", "-", "2", ")", "\n", "x", "=", "x", "*", "self", ".", "gamma", ".", "view", "(", "*", "shape", ")", "+", "self", ".", "beta", ".", "view", "(", "*", "shape", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.SpectralNorm.__init__": [[240, 247], ["torch.nn.Module.__init__", "basic_modules.SpectralNorm._made_params", "basic_modules.SpectralNorm._make_params"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.SpectralNorm._made_params", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.SpectralNorm._make_params"], ["def", "__init__", "(", "self", ",", "module", ",", "name", "=", "'weight'", ",", "power_iterations", "=", "1", ")", ":", "\n", "        ", "super", "(", "SpectralNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "module", "=", "module", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "power_iterations", "=", "power_iterations", "\n", "if", "not", "self", ".", "_made_params", "(", ")", ":", "\n", "            ", "self", ".", "_make_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.SpectralNorm._update_u_v": [[248, 261], ["getattr", "getattr", "getattr", "range", "getattr.dot", "setattr", "basic_modules.l2normalize", "basic_modules.l2normalize", "getattr.view().mv", "torch.mv", "torch.mv", "torch.mv", "torch.mv", "torch.mv", "torch.mv", "torch.mv", "torch.mv", "getattr.dot.expand_as", "torch.t", "torch.t", "torch.t", "torch.t", "getattr.view", "getattr.view", "getattr.view"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.l2normalize", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.l2normalize"], ["", "", "def", "_update_u_v", "(", "self", ")", ":", "\n", "        ", "u", "=", "getattr", "(", "self", ".", "module", ",", "self", ".", "name", "+", "\"_u\"", ")", "\n", "v", "=", "getattr", "(", "self", ".", "module", ",", "self", ".", "name", "+", "\"_v\"", ")", "\n", "w", "=", "getattr", "(", "self", ".", "module", ",", "self", ".", "name", "+", "\"_bar\"", ")", "\n", "\n", "height", "=", "w", ".", "data", ".", "shape", "[", "0", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "power_iterations", ")", ":", "\n", "            ", "v", ".", "data", "=", "l2normalize", "(", "torch", ".", "mv", "(", "torch", ".", "t", "(", "w", ".", "view", "(", "height", ",", "-", "1", ")", ".", "data", ")", ",", "u", ".", "data", ")", ")", "\n", "u", ".", "data", "=", "l2normalize", "(", "torch", ".", "mv", "(", "w", ".", "view", "(", "height", ",", "-", "1", ")", ".", "data", ",", "v", ".", "data", ")", ")", "\n", "\n", "# sigma = torch.dot(u.data, torch.mv(w.view(height,-1).data, v.data))", "\n", "", "sigma", "=", "u", ".", "dot", "(", "w", ".", "view", "(", "height", ",", "-", "1", ")", ".", "mv", "(", "v", ")", ")", "\n", "setattr", "(", "self", ".", "module", ",", "self", ".", "name", ",", "w", "/", "sigma", ".", "expand_as", "(", "w", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.SpectralNorm._made_params": [[262, 270], ["getattr", "getattr", "getattr"], "methods", ["None"], ["", "def", "_made_params", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "u", "=", "getattr", "(", "self", ".", "module", ",", "self", ".", "name", "+", "\"_u\"", ")", "\n", "v", "=", "getattr", "(", "self", ".", "module", ",", "self", ".", "name", "+", "\"_v\"", ")", "\n", "w", "=", "getattr", "(", "self", ".", "module", ",", "self", ".", "name", "+", "\"_bar\"", ")", "\n", "return", "True", "\n", "", "except", "AttributeError", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.SpectralNorm._make_params": [[271, 288], ["getattr", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "basic_modules.l2normalize", "basic_modules.l2normalize", "torch.nn.Parameter", "torch.nn.Parameter", "basic_modules.SpectralNorm.module.register_parameter", "basic_modules.SpectralNorm.module.register_parameter", "basic_modules.SpectralNorm.module.register_parameter", "getattr.data.new().normal_", "getattr.data.new().normal_", "getattr.view", "getattr.data.new", "getattr.data.new"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.l2normalize", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.l2normalize"], ["", "", "def", "_make_params", "(", "self", ")", ":", "\n", "        ", "w", "=", "getattr", "(", "self", ".", "module", ",", "self", ".", "name", ")", "\n", "\n", "height", "=", "w", ".", "data", ".", "shape", "[", "0", "]", "\n", "width", "=", "w", ".", "view", "(", "height", ",", "-", "1", ")", ".", "data", ".", "shape", "[", "1", "]", "\n", "\n", "u", "=", "nn", ".", "Parameter", "(", "w", ".", "data", ".", "new", "(", "height", ")", ".", "normal_", "(", "0", ",", "1", ")", ",", "requires_grad", "=", "False", ")", "\n", "v", "=", "nn", ".", "Parameter", "(", "w", ".", "data", ".", "new", "(", "width", ")", ".", "normal_", "(", "0", ",", "1", ")", ",", "requires_grad", "=", "False", ")", "\n", "u", ".", "data", "=", "l2normalize", "(", "u", ".", "data", ")", "\n", "v", ".", "data", "=", "l2normalize", "(", "v", ".", "data", ")", "\n", "w_bar", "=", "nn", ".", "Parameter", "(", "w", ".", "data", ")", "\n", "\n", "del", "self", ".", "module", ".", "_parameters", "[", "self", ".", "name", "]", "\n", "\n", "self", ".", "module", ".", "register_parameter", "(", "self", ".", "name", "+", "\"_u\"", ",", "u", ")", "\n", "self", ".", "module", ".", "register_parameter", "(", "self", ".", "name", "+", "\"_v\"", ",", "v", ")", "\n", "self", ".", "module", ".", "register_parameter", "(", "self", ".", "name", "+", "\"_bar\"", ",", "w_bar", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.SpectralNorm.forward": [[290, 293], ["basic_modules.SpectralNorm._update_u_v", "basic_modules.SpectralNorm.module.forward"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.SpectralNorm._update_u_v", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.forward"], ["", "def", "forward", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "_update_u_v", "(", ")", "\n", "return", "self", ".", "module", ".", "forward", "(", "*", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.VGG16.__init__": [[299, 307], ["torch.nn.Module.__init__", "torchvision.models.vgg16", "torchvision.models.vgg16.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_pretrained", "=", "False", ",", "model_path", "=", "None", ")", ":", "\n", "        ", "super", "(", "VGG16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model", "=", "vgg16", "(", "pretrained", "=", "use_pretrained", ")", "\n", "if", "model_path", "is", "not", "None", ":", "\n", "# load the model downloaded from: https://download.pytorch.org/models/vgg16-397923af.pth", "\n", "            ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_path", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "\n", "", "self", ".", "model", "=", "model", ".", "features", "[", ":", "30", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.VGG16.forward": [[308, 310], ["basic_modules.VGG16.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.StyleEncoder.__init__": [[317, 347], ["torch.nn.Module.__init__", "range", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "basic_modules.Conv2dBlock", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "basic_modules.StyleEncoder.fcs.append", "basic_modules.StyleEncoder.fcvars.append", "basic_modules.Conv2dBlock", "basic_modules.Conv2dBlock", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_dim", "=", "3", ",", "\n", "dim", "=", "64", ",", "\n", "n_downsample", "=", "4", ",", "\n", "norm", "=", "'none'", ",", "\n", "activ", "=", "'relu'", ",", "\n", "pad_type", "=", "'reflect'", ",", "\n", "attr_dim", "=", "8", ",", "# using 8-dimensional embedding to model a attribute", "\n", "num_class", "=", "5", "\n", ")", ":", "\n", "        ", "super", "(", "StyleEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_class", "=", "num_class", "\n", "\n", "self", ".", "model", "=", "[", "]", "\n", "self", ".", "model", "+=", "[", "Conv2dBlock", "(", "input_dim", ",", "dim", ",", "7", ",", "1", ",", "3", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "model", "+=", "[", "Conv2dBlock", "(", "dim", ",", "2", "*", "dim", ",", "4", ",", "2", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "dim", "*=", "2", "\n", "", "for", "i", "in", "range", "(", "n_downsample", "-", "2", ")", ":", "\n", "            ", "self", ".", "model", "+=", "[", "Conv2dBlock", "(", "dim", ",", "dim", ",", "4", ",", "2", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "", "self", ".", "model", "+=", "[", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "]", "# global average pooling", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "model", ")", "\n", "\n", "self", ".", "fcs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "fcvars", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "num_class", ")", ":", "\n", "            ", "self", ".", "fcs", ".", "append", "(", "nn", ".", "Linear", "(", "dim", ",", "attr_dim", ")", ")", "\n", "self", ".", "fcvars", ".", "append", "(", "nn", ".", "Linear", "(", "dim", ",", "attr_dim", ")", ")", "\n", "", "self", ".", "output_dim", "=", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.StyleEncoder.forward": [[348, 357], ["basic_modules.StyleEncoder.model", "feats.view.view.view", "range", "x.size", "fcs.append", "fcvars.append"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "model", "(", "x", ")", "\n", "feats", "=", "feats", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "fcs", ",", "fcvars", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_class", ")", ":", "\n", "            ", "fcs", ".", "append", "(", "self", ".", "fcs", "[", "i", "]", "(", "feats", ")", ")", "\n", "fcvars", ".", "append", "(", "self", ".", "fcvars", "[", "i", "]", "(", "feats", ")", ")", "\n", "", "return", "fcs", ",", "fcvars", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.ContentEncoder.__init__": [[359, 379], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "torch.nn.Sequential", "basic_modules.Conv2dBlock", "basic_modules.ResBlocks", "basic_modules.Conv2dBlock"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_dim", "=", "3", ",", "\n", "dim", "=", "64", ",", "\n", "n_downsample", "=", "2", ",", "\n", "n_res", "=", "4", ",", "\n", "norm", "=", "'in'", ",", "\n", "activ", "=", "'relu'", ",", "\n", "pad_type", "=", "'reflect'", "\n", ")", ":", "\n", "        ", "super", "(", "ContentEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "[", "]", "\n", "self", ".", "model", "+=", "[", "Conv2dBlock", "(", "input_dim", ",", "dim", ",", "7", ",", "1", ",", "3", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "# downsampling blocks", "\n", "for", "i", "in", "range", "(", "n_downsample", ")", ":", "\n", "            ", "self", ".", "model", "+=", "[", "Conv2dBlock", "(", "dim", ",", "2", "*", "dim", ",", "4", ",", "2", ",", "1", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "dim", "*=", "2", "\n", "# residual blocks", "\n", "", "self", ".", "model", "+=", "[", "ResBlocks", "(", "n_res", ",", "dim", ",", "norm", "=", "norm", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "model", ")", "\n", "self", ".", "output_dim", "=", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.ContentEncoder.forward": [[380, 382], ["basic_modules.ContentEncoder.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.Decoder.__init__": [[384, 408], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "torch.nn.Sequential", "basic_modules.Conv2dBlock", "basic_modules.Conv2dBlock", "basic_modules.ResBlocks", "torch.nn.Upsample", "torch.nn.Upsample", "basic_modules.Conv2dBlock"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "output_dim", ",", "\n", "n_upsample", "=", "2", ",", "\n", "n_res", "=", "4", ",", "\n", "res_norm", "=", "'adain'", ",", "\n", "activ", "=", "'relu'", ",", "\n", "pad_type", "=", "'zero'", ",", "\n", "use_attention", "=", "False", "\n", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_attention", "=", "use_attention", "\n", "model", "=", "[", "]", "\n", "# AdaIN residual blocks", "\n", "model", "+=", "[", "ResBlocks", "(", "n_res", ",", "dim", ",", "res_norm", ",", "activ", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "# upsampling blocks", "\n", "for", "i", "in", "range", "(", "n_upsample", ")", ":", "\n", "            ", "model", "+=", "[", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ")", ",", "\n", "Conv2dBlock", "(", "dim", ",", "dim", "//", "2", ",", "5", ",", "1", ",", "2", ",", "norm", "=", "'ln'", ",", "activation", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "]", "\n", "dim", "//=", "2", "\n", "# use reflection padding in the last conv layer", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "self", ".", "content", "=", "Conv2dBlock", "(", "dim", ",", "output_dim", ",", "7", ",", "1", ",", "3", ",", "norm", "=", "'none'", ",", "activation", "=", "'tanh'", ",", "pad_type", "=", "pad_type", ")", "\n", "self", ".", "attention", "=", "Conv2dBlock", "(", "dim", ",", "1", ",", "7", ",", "1", ",", "3", ",", "norm", "=", "'none'", ",", "activation", "=", "'sigmoid'", ",", "pad_type", "=", "pad_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.Decoder.forward": [[409, 417], ["basic_modules.Decoder.model", "basic_modules.Decoder.content", "basic_modules.Decoder.attention"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "self", ".", "model", "(", "x", ")", "\n", "content", "=", "self", ".", "content", "(", "feats", ")", "\n", "\n", "attention", "=", "None", "\n", "if", "self", ".", "use_attention", ":", "\n", "            ", "attention", "=", "self", ".", "attention", "(", "feats", ")", "\n", "", "return", "content", ",", "attention", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.basic_modules.l2normalize": [[230, 232], ["v.norm"], "function", ["None"], ["", "", "def", "l2normalize", "(", "v", ",", "eps", "=", "1e-12", ")", ":", "\n", "    ", "return", "v", "/", "(", "v", ".", "norm", "(", ")", "+", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_scheduler": [[15, 53], ["int", "int", "int", "timm.scheduler.cosine_lr.CosineLRScheduler", "timm.scheduler.step_lr.StepLRScheduler"], "function", ["None"], ["def", "build_scheduler", "(", "\n", "optimizer", ",", "\n", "total_epochs", ",", "\n", "n_iter_per_epoch", ",", "\n", "scheduler_type", "=", "'cosine'", ",", "\n", "warmup_epochs", "=", "10", ",", "\n", "decay_epochs", "=", "20", ",", "\n", "min_lr", "=", "1e-6", ",", "\n", "warmup_lr", "=", "1e-6", ",", "\n", "decay_rate", "=", "0.1", "\n", ")", ":", "\n", "    ", "num_steps", "=", "int", "(", "total_epochs", "*", "n_iter_per_epoch", ")", "\n", "warmup_steps", "=", "int", "(", "warmup_epochs", "*", "n_iter_per_epoch", ")", "\n", "decay_steps", "=", "int", "(", "decay_epochs", "*", "n_iter_per_epoch", ")", "\n", "\n", "lr_scheduler", "=", "None", "\n", "if", "scheduler_type", "==", "'cosine'", ":", "\n", "        ", "lr_scheduler", "=", "CosineLRScheduler", "(", "\n", "optimizer", ",", "\n", "t_initial", "=", "num_steps", ",", "\n", "t_mul", "=", "1.", ",", "\n", "lr_min", "=", "min_lr", ",", "\n", "warmup_lr_init", "=", "warmup_lr", ",", "\n", "warmup_t", "=", "warmup_steps", ",", "\n", "cycle_limit", "=", "1", ",", "\n", "t_in_epochs", "=", "False", ",", "\n", ")", "\n", "", "elif", "scheduler_type", "==", "'step'", ":", "\n", "        ", "lr_scheduler", "=", "StepLRScheduler", "(", "\n", "optimizer", ",", "\n", "decay_t", "=", "decay_steps", ",", "\n", "decay_rate", "=", "decay_rate", ",", "\n", "warmup_lr_init", "=", "warmup_lr", ",", "\n", "warmup_t", "=", "warmup_steps", ",", "\n", "t_in_epochs", "=", "False", ",", "\n", ")", "\n", "\n", "", "return", "lr_scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_optimizer": [[55, 81], ["opt_type.lower", "model.parameters", "torch.optim.SGD", "torch.optim.AdamW"], "function", ["None"], ["", "def", "build_optimizer", "(", "\n", "model", ",", "\n", "opt_type", "=", "'adamw'", ",", "# adamw, sgd", "\n", "base_lr", "=", "1e-4", "\n", ")", ":", "\n", "    ", "opt_lower", "=", "opt_type", ".", "lower", "(", ")", "\n", "\n", "optimizer", "=", "None", "\n", "params", "=", "model", ".", "parameters", "(", ")", "\n", "if", "opt_lower", "==", "\"sgd\"", ":", "\n", "        ", "optimizer", "=", "optim", ".", "SGD", "(", "\n", "[", "p", "for", "p", "in", "params", "if", "p", ".", "requires_grad", "]", ",", "\n", "momentum", "=", "0.9", ",", "\n", "nesterov", "=", "True", ",", "\n", "lr", "=", "base_lr", ",", "\n", "weight_decay", "=", "1e-4", "\n", ")", "\n", "", "else", ":", "\n", "        ", "optimizer", "=", "optim", ".", "AdamW", "(", "\n", "[", "p", "for", "p", "in", "params", "if", "p", ".", "requires_grad", "]", ",", "\n", "eps", "=", "1e-8", ",", "\n", "betas", "=", "(", "0.9", ",", "0.999", ")", ",", "\n", "lr", "=", "base_lr", ",", "\n", "weight_decay", "=", "1e-4", "\n", ")", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.retrieval_topk_images": [[55, 65], ["gmmunit_retrieval_solver.retrieval_topk_closest_embeddings", "gmmunit_retrieval_solver.idx2image"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.retrieval_topk_closest_embeddings", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.idx2image"], ["def", "retrieval_topk_images", "(", "\n", "query", ",", "\n", "memory", ",", "\n", "img_list", ",", "\n", "image_dir", ",", "\n", "topk", "=", "3", ",", "\n", "transform", "=", "None", "\n", ")", ":", "\n", "    ", "ids", "=", "retrieval_topk_closest_embeddings", "(", "query", ",", "memory", ",", "topk", ")", "\n", "return", "idx2image", "(", "ids", ",", "img_list", ",", "image_dir", ",", "transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.retrieval_topk_closest_embeddings": [[66, 74], ["query.unsqueeze", "query.unsqueeze", "diff.norm", "torch.topk", "torch.topk", "torch.topk", "torch.topk"], "function", ["None"], ["", "def", "retrieval_topk_closest_embeddings", "(", "query", ",", "memory", ",", "k", "=", "3", ")", ":", "\n", "# query, Tensor [bsz, d]", "\n", "# memory, Tensor [N, d]", "\n", "    ", "q", "=", "query", ".", "unsqueeze", "(", "0", ")", "# [bsz, d] -> [1, bsz, d]", "\n", "mem", "=", "query", ".", "unsqueeze", "(", "1", ")", "# [N, d] -> [N, 1, d]", "\n", "diff", "=", "q", "-", "mem", "# -> [N, bsz, d]", "\n", "diff2norm", "=", "diff", ".", "norm", "(", "dim", "=", "2", ")", "# -> [N, bsz]", "\n", "return", "torch", ".", "topk", "(", "diff2norm", ",", "k", ",", "dim", "=", "0", ",", "largest", "=", "False", ")", "# [k, bsz]", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.idx2image": [[75, 83], ["ids.size", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "load_image"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_image"], ["", "def", "idx2image", "(", "ids", ",", "img_list", ",", "image_dir", ",", "transform", "=", "None", ")", ":", "\n", "# return [bsz, k, 3, H, W]", "\n", "    ", "k", ",", "bsz", "=", "ids", ".", "size", "(", ")", "\n", "outputs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bsz", ")", ":", "\n", "        ", "topk_ids", "=", "ids", "[", ":", ",", "i", "]", "\n", "outputs", "+=", "torch", ".", "cat", "(", "[", "load_image", "(", "image_dir", ",", "img_list", "[", "idx", "]", ",", "transform", ")", "for", "idx", "in", "topk_ids", "]", ",", "dim", "=", "0", ")", "\n", "", "return", "torch", ".", "stack", "(", "outputs", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.average_gradients": [[84, 91], ["float", "model.parameters", "torch.get_world_size", "torch.all_reduce"], "function", ["None"], ["", "def", "average_gradients", "(", "model", ")", ":", "\n", "    ", "\"\"\" Gradient averaging. \"\"\"", "\n", "size", "=", "float", "(", "distributed", ".", "get_world_size", "(", ")", ")", "\n", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "            ", "distributed", ".", "all_reduce", "(", "param", ".", "grad", ".", "data", ",", "op", "=", "distributed", ".", "ReduceOp", ".", "SUM", ")", "\n", "param", ".", "grad", ".", "data", "/=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.compute_g_loss": [[92, 239], ["gen_model.encode", "ret_model", "retrieval_topk_images().detach", "gen_model.decode", "losses.criterion_l1", "losses.calc_g_loss", "gen_model.encode", "losses.criterion_l1", "ret_model", "retrieval_topk_images().detach", "gen_model.decode", "losses.criterion_l1", "gen_model.encode", "losses.criterion_l1", "losses.criterion_kl", "munch.Munch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.dist_sampling_split", "ret_model", "retrieval_topk_images().detach", "gen_model.decode", "gen_model.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ret_model", "retrieval_topk_images().detach", "gen_model.decode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "gmm_src.unsqueeze", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "losses.criterion_vgg", "losses.criterion_vgg.item", "gmmunit_retrieval_solver.retrieval_topk_images", "gmmunit_retrieval_solver.retrieval_topk_images", "losses.criterion_l1.item", "losses.calc_g_loss.item", "losses.criterion_l1.item", "losses.criterion_l1.item", "losses.criterion_l1.item", "losses.criterion_kl.item", "gmmunit_retrieval_solver.retrieval_topk_images", "gmmunit_retrieval_solver.retrieval_topk_images"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_l1", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.calc_g_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_l1", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_l1", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_l1", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_kl", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_vgg", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.retrieval_topk_images", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.retrieval_topk_images", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.retrieval_topk_images", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.retrieval_topk_images"], ["", "", "", "def", "compute_g_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "ret_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "trg_img", ",", "\n", "src_lab", ",", "\n", "trg_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", ",", "\n", "memory_embeddings", ",", "\n", "transform", ",", "\n", "vgg", "=", "None", ",", "\n", "inst_norm", "=", "None", ",", "\n", "device", "=", "None", "\n", ")", ":", "\n", "    ", "batch_size", "=", "args", "[", "'batch_size'", "]", "\n", "attr_dim", "=", "args", "[", "'attr_dim'", "]", "\n", "dataset_name", "=", "args", "[", "'dataset_name'", "]", "\n", "lambda_adv", "=", "args", "[", "'lambda_adv'", "]", "\n", "lambda_cls", "=", "args", "[", "'lambda_cls'", "]", "\n", "lambda_gp", "=", "args", "[", "'lambda_gp'", "]", "\n", "lambda_kl", "=", "args", "[", "'lambda_kl'", "]", "\n", "gan_type", "=", "args", "[", "'gan_type'", "]", "\n", "img_list", "=", "args", "[", "\"train_list_path\"", "]", "\n", "image_dir", "=", "args", "[", "'image_dir'", "]", "\n", "topk", "=", "args", "[", "'topk'", "]", "\n", "\n", "# Encode the source image and self-reconstruction", "\n", "cont_src", ",", "sty_src", "=", "gen_model", ".", "encode", "(", "src_img", ")", "\n", "# retrieve images", "\n", "query", "=", "ret_model", "(", "cont_src", ",", "torch", ".", "cat", "(", "sty_src", ",", "dim", "=", "1", ")", ")", "\n", "retrieved_imgs", "=", "retrieval_topk_images", "(", "\n", "query", ",", "\n", "memory_embeddings", ",", "\n", "img_list", ",", "\n", "image_dir", ",", "\n", "topk", ",", "\n", "transform", "\n", ")", ".", "detach", "(", ")", "\n", "src_img_rec", ",", "src_att_rec", "=", "gen_model", ".", "decode", "(", "\n", "cont_src", ",", "torch", ".", "cat", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ",", "retrieved_imgs", ")", "\n", "if", "use_attention", ":", "\n", "        ", "src_img_rec", "=", "src_img_rec", "*", "src_att_rec", "+", "src_img", "*", "(", "1", "-", "src_att_rec", ")", "\n", "", "loss_rec", "=", "criterion_l1", "(", "src_img", ",", "src_img_rec", ")", "\n", "\n", "# Forward translation to target attributes", "\n", "if", "trg_img", "is", "None", ":", "\n", "        ", "z_trg", "=", "dist_sampling_split", "(", "gmm_trg", ",", "attr_dim", ",", "device", ")", "\n", "# retrieve images", "\n", "query", "=", "ret_model", "(", "cont_src", ",", "z_trg", ")", "\n", "retrieved_imgs", "=", "retrieval_topk_images", "(", "\n", "query", ",", "\n", "memory_embeddings", ",", "\n", "img_list", ",", "\n", "image_dir", ",", "\n", "topk", ",", "\n", "transform", "\n", ")", ".", "detach", "(", ")", "\n", "img_fake", ",", "att_fake", "=", "gen_model", ".", "decode", "(", "\n", "cont_src", ",", "z_trg", ",", "retrieved_imgs", ")", "\n", "", "else", ":", "\n", "        ", "_", ",", "sty_trg", "=", "gen_model", ".", "encode", "(", "trg_img", ")", "\n", "sty_trg", "=", "torch", ".", "cat", "(", "sty_trg", "[", "0", "]", ",", "dim", "=", "1", ")", "\n", "# retrieve images", "\n", "query", "=", "ret_model", "(", "cont_src", ",", "sty_trg", ")", "\n", "retrieved_imgs", "=", "retrieval_topk_images", "(", "\n", "query", ",", "\n", "memory_embeddings", ",", "\n", "img_list", ",", "\n", "image_dir", ",", "\n", "topk", ",", "\n", "transform", "\n", ")", ".", "detach", "(", ")", "\n", "img_fake", ",", "att_fake", "=", "gen_model", ".", "decode", "(", "\n", "cont_src", ",", "sty_trg", ",", "retrieved_imgs", ")", "\n", "\n", "", "if", "use_attention", ":", "\n", "        ", "img_fake", "=", "img_fake", "*", "att_fake", "+", "src_img", "*", "(", "1", "-", "att_fake", ")", "\n", "", "loss_gen", "=", "calc_g_loss", "(", "\n", "dis_model", ",", "\n", "img_fake", ",", "\n", "trg_lab", ",", "\n", "lambda_adv", ",", "\n", "lambda_cls", ",", "\n", "gan_type", ",", "\n", "dataset_name", "\n", ")", "\n", "\n", "# Encode the fake image again", "\n", "cont_fake", ",", "sty_fake", "=", "gen_model", ".", "encode", "(", "img_fake", ")", "\n", "loss_cont_rec", "=", "criterion_l1", "(", "cont_fake", ",", "cont_src", ")", "\n", "\n", "# cycle consistency", "\n", "query", "=", "ret_model", "(", "cont_fake", ",", "torch", ".", "cat", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ")", "\n", "retrieved_imgs", "=", "retrieval_topk_images", "(", "\n", "query", ",", "\n", "memory_embeddings", ",", "\n", "img_list", ",", "\n", "image_dir", ",", "\n", "topk", ",", "\n", "transform", "\n", ")", ".", "detach", "(", ")", "\n", "cyc_img", ",", "cyc_att", "=", "gen_model", ".", "decode", "(", "\n", "cont_fake", ",", "torch", ".", "cat", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ",", "retrieved_imgs", ")", "\n", "if", "use_attention", ":", "\n", "        ", "cyc_img", "=", "cyc_img", "*", "cyc_att", "+", "src_img", "*", "(", "1", "-", "cyc_att", ")", "\n", "", "loss_cyc", "=", "criterion_l1", "(", "cyc_img", ",", "src_img", ")", "\n", "\n", "# cycle encode style", "\n", "_", ",", "sty_cyc", "=", "gen_model", ".", "encode", "(", "cyc_img", ")", "\n", "loss_cyc_sty", "=", "criterion_l1", "(", "\n", "torch", ".", "cat", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "cat", "(", "sty_cyc", "[", "0", "]", ",", "dim", "=", "1", ")", "\n", ")", "\n", "\n", "# KL loss", "\n", "loss_kl", "=", "criterion_kl", "(", "\n", "torch", ".", "stack", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ",", "\n", "gmm_src", ".", "unsqueeze", "(", "2", ")", ",", "\n", "torch", ".", "stack", "(", "sty_src", "[", "1", "]", ",", "dim", "=", "1", ")", ",", "\n", "kl_mode", "=", "args", "[", "'kl_mode'", "]", ",", "\n", "device", "=", "device", "\n", ")", "\n", "\n", "gen_loss", "=", "loss_gen", "+", "loss_rec", "*", "args", "[", "'lambda_recx'", "]", "+", "loss_cont_rec", "*", "args", "[", "'lambda_rec'", "]", "+", "loss_cyc", "*", "args", "[", "'lambda_cyc'", "]", "+", "loss_cyc_sty", "*", "args", "[", "'lambda_rec'", "]", "+", "loss_kl", "*", "args", "[", "'lambda_kl'", "]", "\n", "\n", "g_losses", "=", "Munch", "(", "rec", "=", "loss_rec", ".", "item", "(", ")", ",", "\n", "gen", "=", "loss_gen", ".", "item", "(", ")", ",", "\n", "cont_rec", "=", "loss_cont_rec", ".", "item", "(", ")", ",", "\n", "cyc", "=", "loss_cyc", ".", "item", "(", ")", ",", "\n", "cyc_sty", "=", "loss_cyc_sty", ".", "item", "(", ")", ",", "\n", "kl", "=", "loss_kl", ".", "item", "(", ")", ")", "\n", "\n", "# VGG perceptual loss", "\n", "if", "args", "[", "'lambda_vgg'", "]", ">", "0", ":", "\n", "        ", "loss_vgg", "=", "criterion_vgg", "(", "src_img", ",", "cyc_img", ",", "vgg", ",", "inst_norm", ",", "device", ")", "\n", "gen_loss", "+=", "loss_vgg", "*", "args", "[", "'lambda_vgg'", "]", "\n", "g_losses", ".", "vgg", "=", "loss_vgg", ".", "item", "(", ")", "\n", "", "return", "gen_loss", ",", "g_losses", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.compute_d_loss": [[240, 314], ["gen_model.encode", "losses.calc_d_loss", "munch.Munch", "utils.dist_sampling_split", "ret_model", "retrieval_topk_images().detach", "gen_model.decode", "gen_model.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ret_model", "retrieval_topk_images().detach", "gen_model.decode", "losses.calc_d_loss.item", "gmmunit_retrieval_solver.retrieval_topk_images", "gmmunit_retrieval_solver.retrieval_topk_images"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.calc_d_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.retrieval_topk_images", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.retrieval_topk_images"], ["", "def", "compute_d_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "ret_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "trg_img", ",", "\n", "src_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", ",", "\n", "memory_embeddings", ",", "\n", "transform", ",", "\n", "device", "\n", ")", ":", "\n", "    ", "batch_size", "=", "args", "[", "'batch_size'", "]", "\n", "attr_dim", "=", "args", "[", "'attr_dim'", "]", "\n", "dataset_name", "=", "args", "[", "'dataset_name'", "]", "\n", "lambda_adv", "=", "args", "[", "'lambda_adv'", "]", "\n", "lambda_cls", "=", "args", "[", "'lambda_cls'", "]", "\n", "lambda_gp", "=", "args", "[", "'lambda_gp'", "]", "\n", "gan_type", "=", "args", "[", "'gan_type'", "]", "\n", "img_list", "=", "args", "[", "\"train_list_path\"", "]", "\n", "image_dir", "=", "args", "[", "'image_dir'", "]", "\n", "topk", "=", "args", "[", "'topk'", "]", "\n", "\n", "cont_src", ",", "sty_src", "=", "gen_model", ".", "encode", "(", "src_img", ")", "\n", "if", "trg_img", "is", "None", ":", "\n", "        ", "z_trg", "=", "dist_sampling_split", "(", "gmm_trg", ",", "attr_dim", ",", "device", ")", "\n", "# retrieve images", "\n", "query", "=", "ret_model", "(", "cont_src", ",", "z_trg", ")", "\n", "retrieved_imgs", "=", "retrieval_topk_images", "(", "\n", "query", ",", "\n", "memory_embeddings", ",", "\n", "img_list", ",", "\n", "image_dir", ",", "\n", "topk", ",", "\n", "transform", "\n", ")", ".", "detach", "(", ")", "\n", "img_fake", ",", "att_fake", "=", "gen_model", ".", "decode", "(", "\n", "cont_src", ",", "z_trg", ",", "retrieved_imgs", ")", "\n", "", "else", ":", "\n", "        ", "_", ",", "sty_trg", "=", "gen_model", ".", "encode", "(", "trg_img", ")", "\n", "sty_trg", "=", "torch", ".", "cat", "(", "sty_trg", "[", "0", "]", ",", "dim", "=", "1", ")", "\n", "# retrieve images", "\n", "query", "=", "ret_model", "(", "cont_src", ",", "sty_trg", ")", "\n", "retrieved_imgs", "=", "retrieval_topk_images", "(", "\n", "query", ",", "\n", "memory_embeddings", ",", "\n", "img_list", ",", "\n", "image_dir", ",", "\n", "topk", ",", "\n", "transform", "\n", ")", ".", "detach", "(", ")", "\n", "img_fake", ",", "att_fake", "=", "gen_model", ".", "decode", "(", "\n", "cont_src", ",", "sty_trg", ",", "retrieved_imgs", ")", "\n", "\n", "", "if", "use_attention", ":", "\n", "        ", "img_fake", "=", "img_fake", "*", "att_fake", "+", "src_img", "*", "(", "1", "-", "att_fake", ")", "\n", "\n", "", "dis_loss", "=", "calc_d_loss", "(", "\n", "dis_model", ",", "\n", "src_img", ",", "\n", "img_fake", ",", "\n", "src_lab", ",", "\n", "lambda_adv", ",", "\n", "lambda_cls", ",", "\n", "lambda_gp", ",", "\n", "gan_type", ",", "\n", "dataset_name", ",", "\n", "device", "\n", ")", "\n", "d_losses", "=", "Munch", "(", "dis", "=", "dis_loss", ".", "item", "(", ")", ")", "\n", "return", "dis_loss", ",", "d_losses", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_retrieval_solver.gmmunit_retrieval_run": [[316, 582], ["print", "torch.device", "torch.device", "torch.device", "torch.device", "print", "models.AdaINGenRet().to", "models.MsImageDis().to", "models.RetrievalNet().to", "utils.print_network", "utils.print_network", "utils.print_network", "utils.load_pretrained_gmmunit_for_ret", "utils.load_pretrained_model", "utils.load_pretrained_model", "utils.load_checkpoint", "utils.load_checkpoint", "utils.load_checkpoint", "copy.deepcopy", "copy.deepcopy", "torch.load().to", "torch.load().to", "torch.load().to", "torch.load().to", "print", "data.build_dataset", "data.build_loader", "AdaINGenRet().to.freezen_params", "RetrievalNet().to.freezen_params", "optims.build_optimizer", "optims.build_optimizer", "len", "optims.build_scheduler", "optims.build_scheduler", "data.build_ret_transform", "print", "range", "torch.get_rank", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "random.seed", "int", "utils.build_perceptual_nets", "vgg.to", "train_loader.sampler.set_epoch", "iter", "iter", "time.time", "range", "torch.get_rank", "models.AdaINGenRet", "models.MsImageDis", "models.RetrievalNet", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load().to.size", "len", "utils.assign_gmm_componet().to", "utils.assign_gmm_componet().to", "gmmunit_retrieval_solver.compute_d_loss", "optims.build_optimizer.zero_grad", "d_loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optims.build_optimizer.step", "gmmunit_retrieval_solver.compute_d_loss", "optims.build_optimizer.zero_grad", "d_loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optims.build_optimizer.step", "gmmunit_retrieval_solver.compute_g_loss", "optims.build_optimizer.zero_grad", "g_loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optims.build_optimizer.step", "gmmunit_retrieval_solver.compute_g_loss", "optims.build_optimizer.zero_grad", "g_loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optims.build_optimizer.step", "optims.build_scheduler.step_update", "optims.build_scheduler.step_update", "utils.moving_average", "utils.moving_average", "torch.get_rank", "torch.get_rank", "next", "v.to", "gmmunit_retrieval_solver.average_gradients", "MsImageDis().to.parameters", "gmmunit_retrieval_solver.average_gradients", "MsImageDis().to.parameters", "gmmunit_retrieval_solver.average_gradients", "AdaINGenRet().to.parameters", "gmmunit_retrieval_solver.average_gradients", "AdaINGenRet().to.parameters", "utils.save_checkpoint", "utils.save_checkpoint", "utils.save_checkpoint", "utils.save_checkpoint", "utils.save_checkpoint", "dict", "zip", "print", "utils.dist_sampling_split", "os.path.join", "utils.debug_image", "src_img_val.to.to", "trg_img_val.to.to", "src_lab_val.to.to", "trg_lab_val.to.to", "utils.assign_gmm_componet().to", "utils.dist_sampling_split", "os.path.join", "utils.debug_image", "iter", "next", "utils.assign_gmm_componet", "utils.assign_gmm_componet", "time.time", "str", "loss.items", "os.path.exists", "os.mkdir", "next", "datetime.timedelta", "iter", "next", "utils.assign_gmm_componet", "dict.items"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.print_network", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.print_network", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.print_network", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_pretrained_gmmunit_for_ret", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_pretrained_model", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_pretrained_model", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_dataset", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_loader", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.RetrievalNet.freezen_params", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.RetrievalNet.freezen_params", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_optimizer", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_optimizer", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_scheduler", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_scheduler", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_ret_transform", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.build_perceptual_nets", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_d_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_d_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_g_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_g_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.moving_average", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.moving_average", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.debug_image", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.debug_image", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet"], ["", "def", "gmmunit_retrieval_run", "(", ")", ":", "\n", "    ", "print", "(", "distributed", ".", "get_rank", "(", ")", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "1234", "+", "distributed", ".", "get_rank", "(", ")", ")", "\n", "random", ".", "seed", "(", "5678", "+", "distributed", ".", "get_rank", "(", ")", ")", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", ",", "local_rank", ")", "\n", "mark_flag", "=", "args", "[", "'world_size'", "]", "==", "1", "or", "distributed", ".", "get_rank", "(", ")", "==", "0", "\n", "\n", "# build models", "\n", "print", "(", "\"Build and initilize models ...\"", ")", "\n", "gen_model", "=", "AdaINGenRet", "(", "args", "[", "'gen'", "]", ")", ".", "to", "(", "device", ")", "\n", "dis_model", "=", "MsImageDis", "(", "args", "[", "'dis'", "]", ")", ".", "to", "(", "device", ")", "\n", "ret_model", "=", "RetrievalNet", "(", "args", "[", "'ret'", "]", ")", ".", "to", "(", "device", ")", "\n", "print_network", "(", "gen_model", ",", "'GEN'", ")", "\n", "print_network", "(", "dis_model", ",", "'DIS'", ")", "\n", "print_network", "(", "ret_model", ",", "'RET'", ")", "\n", "load_pretrained_gmmunit_for_ret", "(", "gen_model", ",", "args", "[", "'pretrained_gen_path'", "]", ")", "\n", "load_pretrained_model", "(", "dis_model", ",", "args", "[", "'pretrained_dis_path'", "]", ")", "\n", "load_pretrained_model", "(", "ret_model", ",", "args", "[", "'pretrained_ret_path'", "]", ")", "\n", "\n", "# resume training if necessary", "\n", "load_checkpoint", "(", "gen_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "args", "[", "'resume_iter'", "]", ",", "suffix", "=", "'gen_ema'", ")", "\n", "load_checkpoint", "(", "dis_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "args", "[", "'resume_iter'", "]", ",", "suffix", "=", "'dis_ema'", ")", "\n", "load_checkpoint", "(", "ret_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "args", "[", "'resume_iter'", "]", ",", "suffix", "=", "'ret_ema'", ")", "\n", "gen_ema", "=", "copy", ".", "deepcopy", "(", "gen_model", ")", "\n", "dis_ema", "=", "copy", ".", "deepcopy", "(", "dis_model", ")", "\n", "\n", "# Load train images embeddings to RAM", "\n", "memory_embeddings", "=", "torch", ".", "load", "(", "args", "[", "'img_embedding_path'", "]", ",", "map_location", "=", "'cpu'", ")", ".", "to", "(", "device", ")", "\n", "print", "(", "\"Successfully loading {} image embeddings ...\"", ".", "format", "(", "memory_embeddings", ".", "size", "(", "0", ")", ")", ")", "\n", "\n", "# build dataset and loader", "\n", "dataset_train", ",", "dataset_test", "=", "build_dataset", "(", "\n", "args", "[", "'image_dir'", "]", ",", "\n", "args", "[", "'train_list_path'", "]", ",", "\n", "args", "[", "'test_list_path'", "]", ",", "\n", "args", "[", "'crop_size'", "]", ",", "\n", "args", "[", "'img_size'", "]", ",", "\n", "args", "[", "'dataset_name'", "]", ",", "\n", "args", "[", "'is_retrieval'", "]", "\n", ")", "\n", "train_loader", ",", "test_loader", "=", "build_loader", "(", "\n", "dataset_train", ",", "\n", "dataset_test", ",", "\n", "args", "[", "'batch_size'", "]", ",", "\n", "args", "[", "'num_workers'", "]", "\n", ")", "\n", "\n", "# freezen a part of the parameters", "\n", "gen_model", ".", "freezen_params", "(", ")", "\n", "ret_model", ".", "freezen_params", "(", ")", "\n", "# build optimizer and schedular", "\n", "gen_opt", "=", "build_optimizer", "(", "gen_model", ",", "base_lr", "=", "args", "[", "'lr'", "]", ")", "\n", "dis_opt", "=", "build_optimizer", "(", "dis_model", ",", "base_lr", "=", "args", "[", "'lr'", "]", ")", "\n", "n_iter_per_epoch", "=", "len", "(", "train_loader", ")", "\n", "gen_scheduler", "=", "build_scheduler", "(", "\n", "gen_opt", ",", "\n", "args", "[", "'total_epochs'", "]", ",", "\n", "n_iter_per_epoch", ",", "\n", "scheduler_type", "=", "args", "[", "'scheduler_type'", "]", ",", "\n", "warmup_epochs", "=", "args", "[", "'warmup_epochs'", "]", "\n", ")", "\n", "dis_scheduler", "=", "build_scheduler", "(", "\n", "dis_opt", ",", "\n", "args", "[", "'total_epochs'", "]", ",", "\n", "n_iter_per_epoch", ",", "\n", "scheduler_type", "=", "args", "[", "'scheduler_type'", "]", ",", "\n", "warmup_epochs", "=", "args", "[", "'warmup_epochs'", "]", "\n", ")", "\n", "\n", "total_steps", "=", "args", "[", "'total_epochs'", "]", "*", "n_iter_per_epoch", "\n", "start_epoch", "=", "int", "(", "args", "[", "'resume_iter'", "]", "/", "n_iter_per_epoch", ")", "if", "args", "[", "'resume_iter'", "]", ">", "0", "else", "0", "\n", "\n", "# build perceptual nets", "\n", "vgg", ",", "inst_norm", "=", "None", ",", "None", "\n", "if", "args", "[", "'lambda_vgg'", "]", ">", "0", ":", "\n", "        ", "vgg", ",", "inst_norm", "=", "build_perceptual_nets", "(", "args", ")", "\n", "vgg", ".", "to", "(", "device", ")", "\n", "\n", "# define image transform", "\n", "", "transform", "=", "build_ret_transform", "(", "\n", "crop_size", "=", "args", "[", "'crop_size'", "]", ",", "\n", "img_size", "=", "args", "[", "'img_size'", "]", ",", "\n", "dataset_name", "=", "args", "[", "'dataset_name'", "]", "\n", ")", "\n", "\n", "use_attention", "=", "args", "[", "'gen'", "]", "[", "'use_attention'", "]", "\n", "\n", "cur_step", "=", "args", "[", "'resume_iter'", "]", "if", "args", "[", "'resume_iter'", "]", ">", "0", "else", "0", "\n", "print", "(", "\"Start Epoch: {}, Start Step: {} ...\"", ".", "format", "(", "start_epoch", ",", "cur_step", ")", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "args", "[", "'total_epochs'", "]", ")", ":", "\n", "        ", "train_loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "train_data_iter", "=", "iter", "(", "train_loader", ")", "\n", "test_data_iter", "=", "iter", "(", "test_loader", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "train_loader", ")", ")", ":", "\n", "            ", "try", ":", "\n", "# Samples the batch", "\n", "                ", "inputs", "=", "next", "(", "train_data_iter", ")", "\n", "", "except", ":", "\n", "# restart the generator if the previous generator is exhausted.", "\n", "                ", "train_data_iter", "=", "iter", "(", "train_loader", ")", "\n", "inputs", "=", "next", "(", "train_data_iter", ")", "\n", "\n", "", "inputs", "=", "[", "v", ".", "to", "(", "device", ")", "for", "v", "in", "inputs", "]", "\n", "src_img", ",", "trg_img", ",", "src_lab", ",", "trg_lab", "=", "inputs", "\n", "\n", "gmm_src", "=", "assign_gmm_componet", "(", "src_lab", ",", "num_cls", "=", "args", "[", "'num_cls'", "]", ",", "mode", "=", "args", "[", "'dataset_name'", "]", ")", ".", "to", "(", "device", ")", "\n", "gmm_trg", "=", "assign_gmm_componet", "(", "trg_lab", ",", "num_cls", "=", "args", "[", "'num_cls'", "]", ",", "mode", "=", "args", "[", "'dataset_name'", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "# train the discriminator", "\n", "d_loss", ",", "d_losses_lat", "=", "compute_d_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "ret_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "None", ",", "# sampling in latent space", "\n", "src_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", ",", "\n", "memory_embeddings", ",", "\n", "transform", ",", "\n", "device", "\n", ")", "\n", "dis_opt", ".", "zero_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "                ", "average_gradients", "(", "dis_model", ")", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "dis_model", ".", "parameters", "(", ")", ",", "2.0", ")", "\n", "dis_opt", ".", "step", "(", ")", "\n", "\n", "d_loss", ",", "d_losses_ref", "=", "compute_d_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "ret_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "trg_img", ",", "# sampling real image", "\n", "src_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", ",", "\n", "memory_embeddings", ",", "\n", "transform", ",", "\n", "device", "\n", ")", "\n", "dis_opt", ".", "zero_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "                ", "average_gradients", "(", "dis_model", ")", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "dis_model", ".", "parameters", "(", ")", ",", "2.0", ")", "\n", "dis_opt", ".", "step", "(", ")", "\n", "\n", "# train the generator", "\n", "g_loss", ",", "g_losses_lat", "=", "compute_g_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "ret_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "None", ",", "# sampling in latent space", "\n", "src_lab", ",", "\n", "trg_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", ",", "\n", "memory_embeddings", ",", "\n", "transform", ",", "\n", "vgg", ",", "\n", "inst_norm", ",", "\n", "device", "\n", ")", "\n", "gen_opt", ".", "zero_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "                ", "average_gradients", "(", "gen_model", ")", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "gen_model", ".", "parameters", "(", ")", ",", "2.0", ")", "\n", "gen_opt", ".", "step", "(", ")", "\n", "\n", "g_loss", ",", "g_losses_ref", "=", "compute_g_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "ret_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "trg_img", ",", "# sampling real image", "\n", "src_lab", ",", "\n", "trg_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", ",", "\n", "memory_embeddings", ",", "\n", "transform", ",", "\n", "vgg", ",", "\n", "inst_norm", ",", "\n", "device", "\n", ")", "\n", "gen_opt", ".", "zero_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "                ", "average_gradients", "(", "gen_model", ")", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "gen_model", ".", "parameters", "(", ")", ",", "2.0", ")", "\n", "gen_opt", ".", "step", "(", ")", "\n", "\n", "# update learning rate", "\n", "dis_scheduler", ".", "step_update", "(", "cur_step", ")", "\n", "gen_scheduler", ".", "step_update", "(", "cur_step", ")", "\n", "\n", "# compute moving average of network parameters", "\n", "moving_average", "(", "gen_model", ",", "gen_ema", ")", "\n", "moving_average", "(", "dis_model", ",", "dis_ema", ")", "\n", "\n", "# save model checkpoints", "\n", "if", "mark_flag", "and", "(", "cur_step", "+", "1", ")", "%", "args", "[", "'save_every'", "]", "==", "0", ":", "\n", "                ", "save_checkpoint", "(", "gen_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"gen\"", ")", "\n", "save_checkpoint", "(", "dis_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"dis\"", ")", "\n", "save_checkpoint", "(", "gen_ema", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"gen_ema\"", ")", "\n", "save_checkpoint", "(", "dis_ema", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"dis_ema\"", ")", "\n", "save_checkpoint", "(", "ret_model", ",", "args", "[", "'checkpoint_dir'", ",", "cur_step", "+", "1", ",", "'ret'", "]", ")", "\n", "\n", "# print out log info", "\n", "", "if", "mark_flag", "and", "(", "cur_step", "+", "1", ")", "%", "args", "[", "'print_every'", "]", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "[", ":", "-", "7", "]", "\n", "log", "=", "\"Elapsed time [%s], Epoch [%i/%i], Iteration [%i/%i], \"", "%", "(", "elapsed", ",", "epoch", ",", "args", "[", "'total_epochs'", "]", ",", "cur_step", "+", "1", ",", "total_steps", ")", "\n", "\n", "all_losses", "=", "dict", "(", ")", "\n", "for", "loss", ",", "prefix", "in", "zip", "(", "\n", "[", "d_losses_lat", ",", "d_losses_ref", ",", "g_losses_lat", ",", "g_losses_ref", "]", ",", "\n", "[", "'D/lat_'", ",", "'D/ref_'", ",", "'G/lat_'", ",", "'G/ref_'", "]", ")", ":", "\n", "                    ", "for", "key", ",", "value", "in", "loss", ".", "items", "(", ")", ":", "\n", "                        ", "all_losses", "[", "prefix", "+", "key", "]", "=", "value", "\n", "", "", "all_losses", "[", "\"G/lr\"", "]", "=", "gen_opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "all_losses", "[", "\"D/lr\"", "]", "=", "dis_opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "all_losses", "[", "\"kl/w\"", "]", "=", "args", "[", "'lambda_kl'", "]", "\n", "log", "+=", "' '", ".", "join", "(", "[", "'%s: [%.4f]'", "%", "(", "key", ",", "value", ")", "if", "'lr'", "not", "in", "key", "else", "'%s: [%.6f]'", "%", "(", "key", ",", "value", ")", "for", "key", ",", "value", "in", "all_losses", ".", "items", "(", ")", "]", ")", "\n", "print", "(", "log", ")", "\n", "\n", "# generate images for debugging", "\n", "", "if", "mark_flag", "and", "(", "cur_step", "+", "1", ")", "%", "args", "[", "'sample_every'", "]", "==", "0", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "exists", "(", "args", "[", "'sample_dir'", "]", ")", ":", "\n", "                    ", "os", ".", "mkdir", "(", "args", "[", "'sample_dir'", "]", ")", "\n", "# save training images", "\n", "", "z_trg", "=", "dist_sampling_split", "(", "gmm_trg", ",", "args", "[", "'attr_dim'", "]", ",", "device", ")", "\n", "save_name", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'sample_dir'", "]", ",", "'{:08d}_train.jpg'", ".", "format", "(", "cur_step", "+", "1", ")", ")", "\n", "debug_image", "(", "gen_model", ",", "src_img", ",", "trg_img", ",", "z_trg", ",", "save_name", ",", "use_attention", ")", "\n", "\n", "# save testing images", "\n", "try", ":", "\n", "                    ", "src_img_val", ",", "trg_img_val", ",", "src_lab_val", ",", "trg_lab_val", "=", "next", "(", "test_data_iter", ")", "\n", "", "except", ":", "\n", "                    ", "test_data_iter", "=", "iter", "(", "test_loader", ")", "\n", "src_img_val", ",", "trg_img_val", ",", "src_lab_val", ",", "trg_lab_val", "=", "next", "(", "test_data_iter", ")", "\n", "", "src_img_val", "=", "src_img_val", ".", "to", "(", "device", ")", "\n", "trg_img_val", "=", "trg_img_val", ".", "to", "(", "device", ")", "\n", "src_lab_val", "=", "src_lab_val", ".", "to", "(", "device", ")", "\n", "trg_lab_val", "=", "trg_lab_val", ".", "to", "(", "device", ")", "\n", "gmm_trg_val", "=", "assign_gmm_componet", "(", "trg_lab_val", ",", "num_cls", "=", "args", "[", "'num_cls'", "]", ",", "mode", "=", "args", "[", "'dataset_name'", "]", ")", ".", "to", "(", "device", ")", "\n", "z_trg", "=", "dist_sampling_split", "(", "gmm_trg_val", ",", "args", "[", "'attr_dim'", "]", ",", "device", ")", "\n", "save_name", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'sample_dir'", "]", ",", "'{:08d}_test.jpg'", ".", "format", "(", "cur_step", "+", "1", ")", ")", "\n", "debug_image", "(", "gen_model", ",", "src_img_val", ",", "trg_img_val", ",", "z_trg", ",", "save_name", ",", "use_attention", ")", "\n", "\n", "", "cur_step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.g_decoder": [[44, 49], ["decode"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode"], ["def", "g_decoder", "(", "decode", ",", "x", ",", "content", ",", "style", ",", "use_attention", "=", "False", ")", ":", "\n", "    ", "x_rec", ",", "x_rec_att", "=", "decode", "(", "content", ",", "style", ")", "\n", "if", "use_attention", ":", "\n", "        ", "x_rec", "=", "x_rec", "*", "x_rec_att", "+", "x", "*", "(", "1", "-", "x_rec_att", ")", "\n", "", "return", "x_rec", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.built_triplet": [[50, 58], ["r_model", "r_model", "r_model"], "function", ["None"], ["", "def", "built_triplet", "(", "\n", "r_model", ",", "\n", "triplets", "\n", ")", ":", "\n", "    ", "anc", "=", "r_model", "(", "triplets", "[", "0", "]", ",", "triplets", "[", "1", "]", ")", "#(anc_cont, anc_sty)", "\n", "pos", "=", "r_model", "(", "triplets", "[", "2", "]", ",", "triplets", "[", "3", "]", ")", "#(pos_cont, pos_sty)", "\n", "neg", "=", "r_model", "(", "triplets", "[", "4", "]", ",", "triplets", "[", "5", "]", ")", "#(neg_cont, neg_sty)", "\n", "return", "anc", ",", "pos", ",", "neg", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.compute_ret_loss": [[59, 66], ["retrieval_solver.built_triplet", "criterion"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.built_triplet"], ["", "def", "compute_ret_loss", "(", "\n", "r_model", ",", "\n", "criterion", ",", "\n", "triplets", "\n", ")", ":", "\n", "    ", "anc", ",", "pos", ",", "neg", "=", "built_triplet", "(", "r_model", ",", "triplets", ")", "\n", "return", "criterion", "(", "anc", ",", "pos", ",", "neg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.convert_triplets": [[67, 144], ["utils.assign_gmm_componet().to", "utils.assign_gmm_componet().to", "utils.assign_gmm_componet().to", "g_model.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "g_model.encode", "utils.dist_sampling_split", "utils.dist_sampling_split", "retrieval_solver.g_decoder", "g_model.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "triplets.append", "triplets.append", "retrieval_solver.g_decoder", "g_model.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "triplets.append", "retrieval_solver.g_decoder", "g_model.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "triplets.append", "retrieval_solver.g_decoder", "g_model.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "triplets.append", "utils.assign_gmm_componet", "utils.assign_gmm_componet", "utils.assign_gmm_componet"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.g_decoder", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.g_decoder", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.g_decoder", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.g_decoder", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet"], ["", "def", "convert_triplets", "(", "inputs", ",", "args", ",", "g_model", ",", "device", ")", ":", "\n", "    ", "img_anc", ",", "img_neg", ",", "lab_src", ",", "lab_trg", ",", "lab_rnd", "=", "inputs", "\n", "gmm_src", "=", "assign_gmm_componet", "(", "\n", "lab_src", ",", "\n", "num_cls", "=", "args", "[", "'num_cls'", "]", ",", "\n", "mode", "=", "args", "[", "'dataset_name'", "]", "\n", ")", ".", "to", "(", "device", ")", "\n", "gmm_trg", "=", "assign_gmm_componet", "(", "\n", "lab_trg", ",", "\n", "num_cls", "=", "args", "[", "'num_cls'", "]", ",", "\n", "mode", "=", "args", "[", "'dataset_name'", "]", "\n", ")", ".", "to", "(", "device", ")", "\n", "gmm_rnd", "=", "assign_gmm_componet", "(", "\n", "lab_rnd", ",", "\n", "num_cls", "=", "args", "[", "'num_cls'", "]", ",", "\n", "mode", "=", "args", "[", "'dataset_name'", "]", "\n", ")", ".", "to", "(", "device", ")", "\n", "\n", "use_attention", "=", "args", "[", "'gen'", "]", "[", "'use_attention'", "]", "\n", "\n", "# collect content and style features from real images, extracted by frozen pretrained model", "\n", "img_anc_cont", ",", "img_anc_sty", "=", "g_model", ".", "encode", "(", "img_anc", ")", "\n", "img_anc_sty", "=", "torch", ".", "cat", "(", "img_anc_sty", "[", "0", "]", ",", "dim", "=", "1", ")", "\n", "img_neg_cont", ",", "_", "=", "g_model", ".", "encode", "(", "img_neg", ")", "\n", "\n", "# sampling style codes ", "\n", "z_trg", "=", "dist_sampling_split", "(", "gmm_trg", ",", "args", "[", "'attr_dim'", "]", ",", "device", ")", "\n", "z_rnd", "=", "dist_sampling_split", "(", "gmm_rnd", ",", "args", "[", "'attr_dim'", "]", ",", "device", ")", "\n", "\n", "# translate to target domains", "\n", "img_anc2trg", "=", "g_decoder", "(", "g_model", ".", "decode", ",", "img_anc", ",", "img_anc_cont", ",", "z_trg", ",", "use_attention", ")", "\n", "# collect content and style features from translated images", "\n", "img_anc2trg_cont", ",", "img_anc2trg_sty", "=", "g_model", ".", "encode", "(", "img_anc2trg", ")", "\n", "img_anc2trg_sty", "=", "torch", ".", "cat", "(", "img_anc2trg_sty", ",", "dim", "=", "1", ")", "\n", "\n", "triplets", "=", "[", "]", "\n", "if", "args", "[", "'triplets'", "]", "[", "'easy'", "]", ":", "\n", "        ", "triplets", ".", "append", "(", "[", "\n", "img_anc_cont", ",", "z_trg", ",", "\n", "img_anc2trg_cont", ",", "img_anc2trg_sty", ",", "# \"translated-reconstructed\"", "\n", "img_neg_cont", ",", "z_rnd", "# both content and style are different", "\n", "]", ")", "\n", "\n", "triplets", ".", "append", "(", "[", "\n", "img_anc_cont", ",", "z_trg", ",", "\n", "img_anc2trg_cont", ",", "img_anc2trg_sty", ",", "\n", "img_neg_cont", ",", "z_trg", "# only content is different", "\n", "]", ")", "\n", "", "if", "args", "[", "'triplets'", "]", "[", "'medium'", "]", ":", "\n", "        ", "img_neg2trg", "=", "g_decoder", "(", "g_model", ".", "decode", ",", "img_neg", ",", "img_neg_cont", ",", "z_trg", ",", "use_attention", ")", "\n", "img_neg2trg_cont", ",", "img_neg2trg_sty", "=", "g_model", ".", "encode", "(", "img_neg2trg", ")", "\n", "img_neg2trg_sty", "=", "torch", ".", "cat", "(", "img_neg2trg_sty", ",", "dim", "=", "1", ")", "\n", "\n", "triplets", ".", "append", "(", "[", "\n", "img_anc_cont", ",", "z_trg", ",", "\n", "img_anc2trg_cont", ",", "img_anc2trg_sty", ",", "\n", "img_neg2trg_cont", ",", "img_neg2trg_sty", "\n", "]", ")", "\n", "", "if", "args", "[", "'triplets'", "]", "[", "'hard'", "]", ":", "\n", "        ", "img_anc2rnd", "=", "g_decoder", "(", "g_model", ".", "decode", ",", "img_anc", ",", "img_anc_cont", ",", "z_rnd", ",", "use_attention", ")", "\n", "img_anc2rnd_cont", ",", "img_anc2rnd_sty", "=", "g_model", ".", "encode", "(", "img_anc2rnd", ")", "\n", "img_anc2rnd_sty", "=", "torch", ".", "cat", "(", "img_anc2rnd_sty", "[", "0", "]", ",", "dim", "=", "1", ")", "\n", "triplets", ".", "append", "(", "[", "\n", "img_anc_cont", ",", "z_trg", ",", "\n", "img_anc2trg_cont", ",", "img_anc2trg_sty", ",", "\n", "img_anc2rnd_cont", ",", "img_anc2rnd_sty", "\n", "]", ")", "\n", "", "if", "args", "[", "'triplets'", "]", "[", "'hardest'", "]", ":", "\n", "        ", "img_anc2rec", "=", "g_decoder", "(", "g_model", ".", "decode", ",", "img_anc", ",", "img_anc_cont", ",", "img_anc_sty", ",", "use_attention", ")", "\n", "img_anc2rec_cont", ",", "img_anc2rec_sty", "=", "g_model", ".", "encode", "(", "img_anc2rec", ")", "\n", "img_anc2rec_sty", "=", "torch", ".", "cat", "(", "img_anc2rec_sty", "[", "0", "]", ",", "dim", "=", "1", ")", "\n", "triplets", ".", "append", "(", "[", "\n", "img_anc_cont", ",", "z_trg", ",", "\n", "img_anc2trg_cont", ",", "img_anc2trg_sty", ",", "\n", "img_anc2rec_cont", ",", "img_anc2rec_sty", "\n", "]", ")", "\n", "", "return", "triplets", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.validation": [[145, 168], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "retrieval_solver.convert_triplets", "correct.float", "v.to", "retrieval_solver.built_triplet", "torch.pairwise_distance", "torch.pairwise_distance", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "F.pairwise_distance.size"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.convert_triplets", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.built_triplet"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "validation", "(", "\n", "val_loader", ",", "\n", "args", ",", "\n", "r_model", ",", "\n", "g_model", ",", "\n", "margin", "=", "0.2", ",", "\n", "norm_degree", "=", "2", ",", "\n", "device", "=", "None", "\n", ")", ":", "\n", "    ", "correct", "=", "0", "\n", "all_samples", "=", "0", "\n", "for", "idx", ",", "val", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "        ", "val", "=", "[", "v", ".", "to", "(", "device", ")", "for", "v", "in", "val", "]", "\n", "triplets", "=", "convert_triplets", "(", "val", ",", "args", ",", "g_model", ",", "device", ")", "\n", "for", "tp", "in", "triplets", ":", "\n", "            ", "anc", ",", "pos", ",", "neg", "=", "built_triplet", "(", "r_model", ",", "tp", ")", "\n", "dis_anc2pos", "=", "F", ".", "pairwise_distance", "(", "anc", ",", "pos", ",", "p", "=", "norm_degree", ")", "\n", "dis_anc2neg", "=", "F", ".", "pairwise_distance", "(", "anc", ",", "neg", ",", "p", "=", "norm_degree", ")", "\n", "\n", "correct", "+=", "torch", ".", "sum", "(", "dis_anc2neg", "-", "dis_anc2pos", ">", "margin", ")", "\n", "all_samples", "+=", "dis_anc2pos", ".", "size", "(", "0", ")", "\n", "", "", "return", "correct", ".", "float", "(", ")", "/", "all_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.collect_embeddings": [[169, 187], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "img.to.to", "g_model.encode", "r_model", "enumerate", "emb.cpu"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "collect_embeddings", "(", "\n", "data_loader", ",", "\n", "g_model", ",", "\n", "r_model", ",", "\n", "device", "=", "None", "\n", ")", ":", "\n", "    ", "image_embeddings", "=", "{", "}", "\n", "for", "_", ",", "data_iter", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "        ", "img", ",", "fname", ",", "_", ",", "lab", "=", "data_iter", "\n", "img", "=", "img", ".", "to", "(", "device", ")", "\n", "\n", "img_cont", ",", "img_sty", "=", "g_model", ".", "encode", "(", "img", ")", "\n", "embeddings", "=", "r_model", "(", "img_cont", ",", "img_sty", ")", "\n", "for", "idx", ",", "emb", "in", "enumerate", "(", "embeddings", ")", ":", "\n", "            ", "image_embeddings", "[", "fname", "[", "idx", "]", "]", "=", "{", "}", "\n", "image_embeddings", "[", "fname", "[", "idx", "]", "]", "[", "'emb'", "]", "=", "emb", ".", "cpu", "(", ")", "\n", "", "", "return", "image_embeddings", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.retrieval_run": [[189, 337], ["print", "torch.device", "torch.device", "torch.device", "torch.device", "print", "models.AdaINGen().eval().to", "AdaINGen().eval().to.parameters", "models.RetrievalNet().to", "utils.print_network", "utils.print_network", "RetrievalNet().to.apply", "utils.load_pretrained_model", "utils.load_checkpoint", "copy.deepcopy", "losses.triplet_margin", "data.build_dataset", "data.build_loader", "optims.build_optimizer", "len", "optims.build_scheduler", "range", "torch.get_rank", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "random.seed", "utils.weights_init", "train_loader.sampler.set_epoch", "iter", "time.time", "range", "utils.save_checkpoint", "utils.save_checkpoint", "data.build_ret_loader", "retrieval_solver.collect_embeddings", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "print", "torch.get_rank", "models.AdaINGen().eval", "models.RetrievalNet", "len", "retrieval_solver.convert_triplets", "optims.build_optimizer.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optims.build_optimizer.step", "optims.build_scheduler.step_update", "utils.moving_average", "AdaINGen().eval().to.eval", "RetrievalNet().to.eval", "torch.get_rank", "torch.get_rank", "next", "v.to", "retrieval_solver.compute_ret_loss", "average_gradients", "RetrievalNet().to.parameters", "utils.save_checkpoint", "utils.save_checkpoint", "print", "retrieval_solver.validation", "print", "models.AdaINGen", "iter", "next", "time.time", "str", "datetime.timedelta", "validation.item"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.print_network", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.print_network", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_pretrained_model", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.triplet_margin", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_dataset", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_loader", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_optimizer", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_scheduler", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.weights_init", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_ret_loader", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.collect_embeddings", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.convert_triplets", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.moving_average", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.compute_ret_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.retrieval_solver.validation"], ["", "def", "retrieval_run", "(", "args", ",", "local_rank", ")", ":", "\n", "    ", "print", "(", "distributed", ".", "get_rank", "(", ")", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "1234", "+", "distributed", ".", "get_rank", "(", ")", ")", "\n", "random", ".", "seed", "(", "5678", "+", "distributed", ".", "get_rank", "(", ")", ")", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", ",", "local_rank", ")", "\n", "mark_flag", "=", "args", "[", "'world_size'", "]", "==", "1", "or", "distributed", ".", "get_rank", "(", ")", "==", "0", "\n", "\n", "# build models", "\n", "print", "(", "\"Build and initilize models ...\"", ")", "\n", "gen_model", "=", "AdaINGen", "(", "args", "[", "'gen'", "]", ")", ".", "eval", "(", ")", ".", "to", "(", "device", ")", "\n", "for", "param", "in", "gen_model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "ret_model", "=", "RetrievalNet", "(", "args", "[", "'ret'", "]", ")", ".", "to", "(", "device", ")", "\n", "print_network", "(", "gen_model", ",", "\"GEN\"", ")", "\n", "print_network", "(", "ret_model", ",", "\"RET\"", ")", "\n", "ret_model", ".", "apply", "(", "weights_init", "(", "'gaussian'", ")", ")", "\n", "load_pretrained_model", "(", "gen_model", ",", "args", "[", "'pretrained_path'", "]", ")", "\n", "\n", "# resume training if necessary", "\n", "load_checkpoint", "(", "ret_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "args", "[", "'resume_iter'", "]", ",", "suffix", "=", "'ret_ema'", ")", "\n", "ret_ema", "=", "copy", ".", "deepcopy", "(", "ret_model", ")", "\n", "\n", "# define criterion", "\n", "criterion", "=", "triplet_margin", "(", "args", "[", "'margin'", "]", ",", "args", "[", "'norm_degree'", "]", ")", "\n", "\n", "# build dataset and loader", "\n", "dataset_train", ",", "dataset_test", "=", "build_dataset", "(", "\n", "args", "[", "'image_dir'", "]", ",", "\n", "args", "[", "'train_list_path'", "]", ",", "\n", "args", "[", "'test_list_path'", "]", ",", "\n", "args", "[", "'crop_size'", "]", ",", "\n", "args", "[", "'img_size'", "]", ",", "\n", "args", "[", "'dataset_name'", "]", ",", "\n", "args", "[", "'is_retrieval'", "]", "\n", ")", "\n", "train_loader", ",", "test_loader", "=", "build_loader", "(", "\n", "dataset_train", ",", "\n", "dataset_test", ",", "\n", "args", "[", "'batch_size'", "]", ",", "\n", "args", "[", "'num_workers'", "]", "\n", ")", "\n", "\n", "# build optimizer and schedular", "\n", "ret_opt", "=", "build_optimizer", "(", "ret_model", ",", "base_lr", "=", "args", "[", "'lr'", "]", ")", "\n", "n_iter_per_epoch", "=", "len", "(", "train_loader", ")", "\n", "ret_scheduler", "=", "build_scheduler", "(", "\n", "ret_opt", ",", "\n", "args", "[", "'total_epochs'", "]", ",", "\n", "n_iter_per_epoch", ",", "\n", "scheduler_type", "=", "args", "[", "'scheduler_type'", "]", ",", "\n", "warmup_epochs", "=", "args", "[", "'warmup_epochs'", "]", "\n", ")", "\n", "\n", "total_steps", "=", "args", "[", "'total_epochs'", "]", "*", "n_iter_per_epoch", "\n", "\n", "cur_step", "=", "0", "\n", "for", "epoch", "in", "range", "(", "args", "[", "'total_epochs'", "]", ")", ":", "\n", "        ", "train_loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "train_data_iter", "=", "iter", "(", "train_loader", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "train_loader", ")", ")", ":", "\n", "            ", "try", ":", "\n", "# Samples the batch", "\n", "                ", "inputs", "=", "next", "(", "train_data_iter", ")", "\n", "", "except", ":", "\n", "# restart the generator if the previous generator is exhausted.", "\n", "                ", "train_data_iter", "=", "iter", "(", "train_loader", ")", "\n", "inputs", "=", "next", "(", "train_data_iter", ")", "\n", "\n", "", "inputs", "=", "[", "v", ".", "to", "(", "device", ")", "for", "v", "in", "inputs", "]", "\n", "triplets", "=", "convert_triplets", "(", "inputs", ",", "args", ",", "gen_model", ",", "device", ")", "\n", "loss", "=", "0.0", "\n", "for", "tp", "in", "triplets", ":", "\n", "                ", "loss", "+=", "compute_ret_loss", "(", "\n", "ret_model", ",", "\n", "criterion", ",", "\n", "tp", "\n", ")", "\n", "\n", "", "ret_opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "                ", "average_gradients", "(", "ret_model", ")", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "ret_model", ".", "parameters", "(", ")", ",", "2.0", ")", "\n", "ret_opt", ".", "step", "(", ")", "\n", "\n", "# update learning rate", "\n", "ret_scheduler", ".", "step_update", "(", "cur_step", ")", "\n", "\n", "# compute moving average of network parameters", "\n", "moving_average", "(", "ret_model", ",", "ret_ema", ")", "\n", "# save model checkpoints", "\n", "if", "mark_flag", "and", "(", "cur_step", "+", "1", ")", "%", "args", "[", "'save_every'", "]", "==", "0", ":", "\n", "                ", "save_checkpoint", "(", "ret_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"ret\"", ")", "\n", "save_checkpoint", "(", "ret_ema", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"ret_ema\"", ")", "\n", "\n", "# print out log info", "\n", "", "if", "mark_flag", "and", "(", "cur_step", "+", "1", ")", "%", "args", "[", "'print_every'", "]", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "[", ":", "-", "7", "]", "\n", "log", "=", "\"Elapsed time [%s], Epoch [%i/%i], Iteration [%i/%i], \"", "%", "(", "elapsed", ",", "epoch", ",", "args", "[", "'total_epochs'", "]", ",", "cur_step", "+", "1", ",", "total_steps", ")", "\n", "log", "+=", "\"loss: %.4f, lr: %.6f\"", "%", "(", "loss", ",", "ret_opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", "\n", "print", "(", "log", ")", "\n", "\n", "# validation", "\n", "", "if", "mark_flag", "and", "(", "cur_step", "+", "1", ")", "%", "args", "[", "'valid_every'", "]", "==", "0", ":", "\n", "                ", "correct", "=", "validation", "(", "\n", "test_loader", ",", "\n", "args", ",", "\n", "ret_model", ",", "\n", "gen_model", ",", "\n", "args", "[", "'margin'", "]", ",", "\n", "args", "[", "'norm_degree'", "]", ",", "\n", "device", "\n", ")", "\n", "print", "(", "\"Val correctness: %.4f\"", "%", "correct", ".", "item", "(", ")", ")", "\n", "\n", "", "cur_step", "+=", "1", "\n", "\n", "# save the image embeddings:", "\n", "", "", "if", "mark_flag", ":", "\n", "# save the finale models", "\n", "        ", "save_checkpoint", "(", "ret_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"ret\"", ")", "\n", "save_checkpoint", "(", "ret_ema", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"ret_ema\"", ")", "\n", "\n", "# collect image embeddings", "\n", "data_loader", "=", "build_ret_loader", "(", "\n", "args", "[", "'image_dir'", "]", ",", "\n", "args", "[", "'train_list_path'", "]", ",", "\n", "args", "[", "'crop_size'", "]", ",", "\n", "args", "[", "'img_size'", "]", ",", "\n", "args", "[", "'dataset_name'", "]", ",", "\n", "args", "[", "'batch_size'", "]", ",", "\n", "args", "[", "'num_workers'", "]", "\n", ")", "\n", "image_embeddings", "=", "collect_embeddings", "(", "\n", "data_loader", ",", "\n", "gen_model", ".", "eval", "(", ")", ",", "\n", "ret_model", ".", "eval", "(", ")", ",", "\n", "device", "\n", ")", "\n", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'checkpoint_dir'", "]", ",", "'image_embeddings.pth'", ")", "\n", "torch", ".", "save", "(", "image_embeddings", ",", "save_path", ")", "\n", "print", "(", "'Saving image embeddings into %s...'", "%", "save_path", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.get_config": [[18, 21], ["open", "yaml.load"], "function", ["None"], ["return", "dataset", "\n", "\n", "", "def", "load_cat2dog_files", "(", "file_path", ",", "mode", ")", ":", "\n", "    ", "lines", "=", "[", "line", ".", "rstrip", "(", ")", "for", "line", "in", "open", "(", "file_path", ",", "'r'", ")", "]", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_image": [[23, 27], ["PIL.Image.open().convert", "transform().unsqueeze", "PIL.Image.open", "transform", "os.path.join"], "function", ["None"], ["for", "ll", "in", "lines", ":", "\n", "        ", "fname", ",", "label", "=", "ll", ".", "split", "(", ")", "\n", "dataset", ".", "append", "(", "[", "fname", ",", "int", "(", "label", ")", "]", ")", "\n", "", "print", "(", "'Finished loading {} {} images...'", ".", "format", "(", "len", "(", "dataset", ")", ",", "mode", ")", ")", "\n", "random", ".", "shuffle", "(", "dataset", ")", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split": [[30, 36], ["torch.Normal", "tdist.Normal.sample", "norm.sample.transpose().transpose().contiguous().view", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "mu.size", "norm.sample.transpose().transpose().contiguous", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "mu.size", "norm.sample.transpose().transpose", "norm.sample.transpose"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.label2onehot": [[37, 43], ["x.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "np.arange", "x.long"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet": [[44, 51], ["x.clone", "utils.label2onehot"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.label2onehot"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.moving_average": [[55, 58], ["zip", "model_src.parameters", "model_ema.parameters", "torch.lerp", "torch.lerp", "torch.lerp", "torch.lerp"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.weights_init": [[59, 76], ["hasattr", "torch.normal_", "hasattr", "torch.constant_", "classname.find", "classname.find", "torch.xavier_normal_", "torch.kaiming_normal_", "torch.orthogonal_", "math.sqrt", "math.sqrt"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.print_network": [[77, 83], ["model.parameters", "print", "p.numel"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint": [[87, 93], ["os.path.join", "print", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.exists", "os.makedirs", "model.state_dict"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_checkpoint": [[100, 111], ["os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "print", "model.state_dict", "model.load_state_dict"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_pretrained": [[113, 116], ["os.path.exists", "torch.load", "torch.load", "torch.load", "torch.load"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_pretrained_model": [[117, 122], ["utils.load_pretrained", "model.load_state_dict", "print"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_pretrained"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_pretrained_gmmunit_for_ret": [[123, 132], ["utils.load_pretrained", "model.state_dict", "model.load_state_dict", "print"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_pretrained"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.build_perceptual_nets": [[135, 141], ["torch.InstanceNorm2d", "basic_modules.VGG16().eval", "VGG16().eval.parameters", "basic_modules.VGG16"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.denormalize": [[144, 147], ["out.clamp_"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.debug_image": [[148, 191], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "g_model.eval", "src_img.size", "g_model.encode", "g_model.decode", "g_model.encode", "g_model.decode", "g_model.decode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.denormalize", "torchvision.save_image", "g_model.train", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "denormalize.cpu", "att_fake.repeat"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.denormalize"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.style_replace": [[195, 208], ["range", "z_trg.detach", "gmm_src.size", "range", "gmm_src.size"], "function", ["None"], []], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients": [[52, 59], ["float", "model.parameters", "torch.get_world_size", "torch.all_reduce"], "function", ["None"], ["def", "average_gradients", "(", "model", ")", ":", "\n", "    ", "\"\"\" Gradient averaging. \"\"\"", "\n", "size", "=", "float", "(", "distributed", ".", "get_world_size", "(", ")", ")", "\n", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "            ", "distributed", ".", "all_reduce", "(", "param", ".", "grad", ".", "data", ",", "op", "=", "distributed", ".", "ReduceOp", ".", "SUM", ")", "\n", "param", ".", "grad", ".", "data", "/=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_g_loss": [[60, 166], ["gen_model.encode", "gen_model.decode", "losses.criterion_l1", "losses.calc_g_loss", "gen_model.encode", "losses.criterion_l1", "gen_model.decode", "losses.criterion_l1", "gen_model.encode", "losses.criterion_l1", "losses.criterion_kl", "munch.Munch", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.dist_sampling_split", "gen_model.decode", "gen_model.encode", "gen_model.decode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "gmm_src.unsqueeze", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "losses.criterion_vgg", "losses.criterion_vgg.item", "random.random", "utils.style_replace().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "losses.criterion_l1.item", "losses.calc_g_loss.item", "losses.criterion_l1.item", "losses.criterion_l1.item", "losses.criterion_l1.item", "losses.criterion_kl.item", "utils.style_replace", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "style_replace().view.view"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_l1", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.calc_g_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_l1", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_l1", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_l1", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_kl", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_vgg", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.style_replace"], ["", "", "", "def", "compute_g_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "trg_img", ",", "\n", "src_lab", ",", "\n", "trg_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", ",", "\n", "vgg", "=", "None", ",", "\n", "inst_norm", "=", "None", ",", "\n", "device", "=", "None", "\n", ")", ":", "\n", "    ", "batch_size", "=", "args", "[", "'batch_size'", "]", "\n", "attr_dim", "=", "args", "[", "'attr_dim'", "]", "\n", "dataset_name", "=", "args", "[", "'dataset_name'", "]", "\n", "lambda_adv", "=", "args", "[", "'lambda_adv'", "]", "\n", "lambda_cls", "=", "args", "[", "'lambda_cls'", "]", "\n", "lambda_gp", "=", "args", "[", "'lambda_gp'", "]", "\n", "lambda_kl", "=", "args", "[", "'lambda_kl'", "]", "\n", "gan_type", "=", "args", "[", "'gan_type'", "]", "\n", "\n", "# Encode the source image and self-reconstruction", "\n", "cont_src", ",", "sty_src", "=", "gen_model", ".", "encode", "(", "src_img", ")", "\n", "src_img_rec", ",", "src_att_rec", "=", "gen_model", ".", "decode", "(", "\n", "cont_src", ",", "torch", ".", "cat", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ")", "\n", "if", "use_attention", ":", "\n", "        ", "src_img_rec", "=", "src_img_rec", "*", "src_att_rec", "+", "src_img", "*", "(", "1", "-", "src_att_rec", ")", "\n", "", "loss_rec", "=", "criterion_l1", "(", "src_img", ",", "src_img_rec", ")", "\n", "\n", "# Forward translation to target attributes", "\n", "if", "trg_img", "is", "None", ":", "\n", "        ", "z_trg", "=", "dist_sampling_split", "(", "gmm_trg", ",", "attr_dim", ",", "device", ")", "\n", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "            ", "z_trg", "=", "style_replace", "(", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "torch", ".", "stack", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ",", "# [N, S*D]", "\n", "z_trg", ".", "view", "(", "batch_size", ",", "-", "1", ",", "attr_dim", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "# [N, S*D]", "\n", "", "img_fake", ",", "att_fake", "=", "gen_model", ".", "decode", "(", "cont_src", ",", "z_trg", ")", "\n", "", "else", ":", "\n", "        ", "_", ",", "sty_trg", "=", "gen_model", ".", "encode", "(", "trg_img", ")", "\n", "img_fake", ",", "att_fake", "=", "gen_model", ".", "decode", "(", "\n", "cont_src", ",", "torch", ".", "cat", "(", "sty_trg", "[", "0", "]", ",", "dim", "=", "1", ")", ")", "\n", "", "if", "use_attention", ":", "\n", "        ", "img_fake", "=", "img_fake", "*", "att_fake", "+", "src_img", "*", "(", "1", "-", "att_fake", ")", "\n", "", "loss_gen", "=", "calc_g_loss", "(", "\n", "dis_model", ",", "\n", "img_fake", ",", "\n", "trg_lab", ",", "\n", "lambda_adv", ",", "\n", "lambda_cls", ",", "\n", "gan_type", ",", "\n", "dataset_name", "\n", ")", "\n", "\n", "# Encode the fake image again", "\n", "cont_fake", ",", "sty_fake", "=", "gen_model", ".", "encode", "(", "img_fake", ")", "\n", "loss_cont_rec", "=", "criterion_l1", "(", "cont_fake", ",", "cont_src", ")", "\n", "\n", "# cycle consistency", "\n", "cyc_img", ",", "cyc_att", "=", "gen_model", ".", "decode", "(", "\n", "cont_fake", ",", "torch", ".", "cat", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ")", "\n", "if", "use_attention", ":", "\n", "        ", "cyc_img", "=", "cyc_img", "*", "cyc_att", "+", "src_img", "*", "(", "1", "-", "cyc_att", ")", "\n", "", "loss_cyc", "=", "criterion_l1", "(", "cyc_img", ",", "src_img", ")", "\n", "\n", "# cycle encode style", "\n", "_", ",", "sty_cyc", "=", "gen_model", ".", "encode", "(", "cyc_img", ")", "\n", "loss_cyc_sty", "=", "criterion_l1", "(", "\n", "torch", ".", "cat", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "cat", "(", "sty_cyc", "[", "0", "]", ",", "dim", "=", "1", ")", "\n", ")", "\n", "\n", "# KL loss", "\n", "loss_kl", "=", "criterion_kl", "(", "\n", "torch", ".", "stack", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ",", "\n", "gmm_src", ".", "unsqueeze", "(", "2", ")", ",", "\n", "torch", ".", "stack", "(", "sty_src", "[", "1", "]", ",", "dim", "=", "1", ")", ",", "\n", "kl_mode", "=", "args", "[", "'kl_mode'", "]", ",", "\n", "device", "=", "device", "\n", ")", "\n", "\n", "gen_loss", "=", "loss_gen", "+", "loss_rec", "*", "args", "[", "'lambda_recx'", "]", "+", "loss_cont_rec", "*", "args", "[", "'lambda_rec'", "]", "+", "loss_cyc", "*", "args", "[", "'lambda_cyc'", "]", "+", "loss_cyc_sty", "*", "args", "[", "'lambda_rec'", "]", "+", "loss_kl", "*", "args", "[", "'lambda_kl'", "]", "\n", "\n", "g_losses", "=", "Munch", "(", "rec", "=", "loss_rec", ".", "item", "(", ")", ",", "\n", "gen", "=", "loss_gen", ".", "item", "(", ")", ",", "\n", "cont_rec", "=", "loss_cont_rec", ".", "item", "(", ")", ",", "\n", "cyc", "=", "loss_cyc", ".", "item", "(", ")", ",", "\n", "cyc_sty", "=", "loss_cyc_sty", ".", "item", "(", ")", ",", "\n", "kl", "=", "loss_kl", ".", "item", "(", ")", ")", "\n", "\n", "# VGG perceptual loss", "\n", "if", "args", "[", "'lambda_vgg'", "]", ">", "0", ":", "\n", "        ", "loss_vgg", "=", "criterion_vgg", "(", "src_img", ",", "cyc_img", ",", "vgg", ",", "inst_norm", ",", "device", ")", "\n", "gen_loss", "+=", "loss_vgg", "*", "args", "[", "'lambda_vgg'", "]", "\n", "g_losses", ".", "vgg", "=", "loss_vgg", ".", "item", "(", ")", "\n", "", "return", "gen_loss", ",", "g_losses", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_d_loss": [[167, 220], ["gen_model.encode", "losses.calc_d_loss", "munch.Munch", "utils.dist_sampling_split", "gen_model.decode", "gen_model.encode", "gen_model.decode", "random.random", "utils.style_replace().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "losses.calc_d_loss.item", "utils.style_replace", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "style_replace().view.view"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.calc_d_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.encode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.models.AdaINGenRet.decode", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.style_replace"], ["", "def", "compute_d_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "trg_img", ",", "\n", "src_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", ",", "\n", "device", "\n", ")", ":", "\n", "    ", "batch_size", "=", "args", "[", "'batch_size'", "]", "\n", "attr_dim", "=", "args", "[", "'attr_dim'", "]", "\n", "dataset_name", "=", "args", "[", "'dataset_name'", "]", "\n", "lambda_adv", "=", "args", "[", "'lambda_adv'", "]", "\n", "lambda_cls", "=", "args", "[", "'lambda_cls'", "]", "\n", "lambda_gp", "=", "args", "[", "'lambda_gp'", "]", "\n", "gan_type", "=", "args", "[", "'gan_type'", "]", "\n", "\n", "cont_src", ",", "sty_src", "=", "gen_model", ".", "encode", "(", "src_img", ")", "\n", "if", "trg_img", "is", "None", ":", "\n", "        ", "z_trg", "=", "dist_sampling_split", "(", "gmm_trg", ",", "attr_dim", ",", "device", ")", "\n", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "            ", "z_trg", "=", "style_replace", "(", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "torch", ".", "stack", "(", "sty_src", "[", "0", "]", ",", "dim", "=", "1", ")", ",", "# [N, S*D]", "\n", "z_trg", ".", "view", "(", "batch_size", ",", "-", "1", ",", "attr_dim", ")", "\n", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "# [N, S*D]", "\n", "", "img_fake", ",", "att_fake", "=", "gen_model", ".", "decode", "(", "cont_src", ",", "z_trg", ")", "\n", "", "else", ":", "\n", "        ", "_", ",", "sty_trg", "=", "gen_model", ".", "encode", "(", "trg_img", ")", "\n", "img_fake", ",", "att_fake", "=", "gen_model", ".", "decode", "(", "\n", "cont_src", ",", "torch", ".", "cat", "(", "sty_trg", "[", "0", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n", "", "if", "use_attention", ":", "\n", "        ", "img_fake", "=", "img_fake", "*", "att_fake", "+", "src_img", "*", "(", "1", "-", "att_fake", ")", "\n", "\n", "", "dis_loss", "=", "calc_d_loss", "(", "\n", "dis_model", ",", "\n", "src_img", ",", "\n", "img_fake", ",", "\n", "src_lab", ",", "\n", "lambda_adv", ",", "\n", "lambda_cls", ",", "\n", "lambda_gp", ",", "\n", "gan_type", ",", "\n", "dataset_name", ",", "\n", "device", "\n", ")", "\n", "d_losses", "=", "Munch", "(", "dis", "=", "dis_loss", ".", "item", "(", ")", ")", "\n", "return", "dis_loss", ",", "d_losses", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.gmmunit_run": [[221, 466], ["print", "torch.device", "torch.device", "torch.device", "torch.device", "print", "models.AdaINGen().to", "models.MsImageDis().to", "utils.print_network", "utils.print_network", "AdaINGen().to.apply", "MsImageDis().to.apply", "utils.load_checkpoint", "utils.load_checkpoint", "copy.deepcopy", "copy.deepcopy", "data.build_dataset", "data.build_loader", "optims.build_optimizer", "optims.build_optimizer", "len", "optims.build_scheduler", "optims.build_scheduler", "print", "range", "torch.get_rank", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "random.seed", "utils.weights_init", "utils.weights_init", "int", "utils.build_perceptual_nets", "vgg.to", "train_loader.sampler.set_epoch", "iter", "iter", "time.time", "range", "torch.get_rank", "models.AdaINGen", "models.MsImageDis", "len", "utils.assign_gmm_componet().to", "utils.assign_gmm_componet().to", "gmmunit_solver.compute_d_loss", "optims.build_optimizer.zero_grad", "d_loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optims.build_optimizer.step", "gmmunit_solver.compute_d_loss", "optims.build_optimizer.zero_grad", "d_loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optims.build_optimizer.step", "gmmunit_solver.compute_g_loss", "optims.build_optimizer.zero_grad", "g_loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optims.build_optimizer.step", "gmmunit_solver.compute_g_loss", "optims.build_optimizer.zero_grad", "g_loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "optims.build_optimizer.step", "optims.build_scheduler.step_update", "optims.build_scheduler.step_update", "utils.moving_average", "utils.moving_average", "torch.get_rank", "torch.get_rank", "next", "v.to", "gmmunit_solver.average_gradients", "MsImageDis().to.parameters", "gmmunit_solver.average_gradients", "MsImageDis().to.parameters", "gmmunit_solver.average_gradients", "AdaINGen().to.parameters", "gmmunit_solver.average_gradients", "AdaINGen().to.parameters", "utils.save_checkpoint", "utils.save_checkpoint", "utils.save_checkpoint", "utils.save_checkpoint", "dict", "zip", "print", "utils.dist_sampling_split", "os.path.join", "utils.debug_image", "src_img_val.to.to", "trg_img_val.to.to", "src_lab_val.to.to", "trg_lab_val.to.to", "utils.assign_gmm_componet().to", "utils.dist_sampling_split", "os.path.join", "utils.debug_image", "iter", "next", "utils.assign_gmm_componet", "utils.assign_gmm_componet", "time.time", "str", "loss.items", "os.path.exists", "os.mkdir", "next", "datetime.timedelta", "iter", "next", "utils.assign_gmm_componet", "dict.items"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.print_network", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.print_network", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.load_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_dataset", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.data.build_data.build_loader", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_optimizer", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_optimizer", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_scheduler", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.optims.build_scheduler", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.weights_init", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.weights_init", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.build_perceptual_nets", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_d_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_d_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_g_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.compute_g_loss", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.moving_average", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.moving_average", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.gmmunit_solver.average_gradients", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.save_checkpoint", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.debug_image", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.dist_sampling_split", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.debug_image", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.utils.assign_gmm_componet"], ["", "def", "gmmunit_run", "(", "args", ",", "local_rank", ")", ":", "\n", "    ", "print", "(", "distributed", ".", "get_rank", "(", ")", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "1234", "+", "distributed", ".", "get_rank", "(", ")", ")", "\n", "random", ".", "seed", "(", "5678", "+", "distributed", ".", "get_rank", "(", ")", ")", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", ",", "local_rank", ")", "\n", "mark_flag", "=", "args", "[", "'world_size'", "]", "==", "1", "or", "distributed", ".", "get_rank", "(", ")", "==", "0", "\n", "\n", "# build models", "\n", "print", "(", "\"Build and initilize models ...\"", ")", "\n", "gen_model", "=", "AdaINGen", "(", "args", "[", "'gen'", "]", ")", ".", "to", "(", "device", ")", "\n", "dis_model", "=", "MsImageDis", "(", "args", "[", "'dis'", "]", ")", ".", "to", "(", "device", ")", "\n", "print_network", "(", "gen_model", ",", "'GEN'", ")", "\n", "print_network", "(", "dis_model", ",", "'DIS'", ")", "\n", "gen_model", ".", "apply", "(", "weights_init", "(", "'kaiming'", ")", ")", "\n", "dis_model", ".", "apply", "(", "weights_init", "(", "'gaussian'", ")", ")", "\n", "\n", "# resume training if necessary", "\n", "load_checkpoint", "(", "gen_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "args", "[", "'resume_iter'", "]", ",", "suffix", "=", "'gen_ema'", ")", "\n", "load_checkpoint", "(", "dis_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "args", "[", "'resume_iter'", "]", ",", "suffix", "=", "'dis_ema'", ")", "\n", "gen_ema", "=", "copy", ".", "deepcopy", "(", "gen_model", ")", "\n", "dis_ema", "=", "copy", ".", "deepcopy", "(", "dis_model", ")", "\n", "\n", "# build dataset and loader", "\n", "dataset_train", ",", "dataset_test", "=", "build_dataset", "(", "\n", "args", "[", "'image_dir'", "]", ",", "\n", "args", "[", "'train_list_path'", "]", ",", "\n", "args", "[", "'test_list_path'", "]", ",", "\n", "args", "[", "'crop_size'", "]", ",", "\n", "args", "[", "'img_size'", "]", ",", "\n", "args", "[", "'dataset_name'", "]", ",", "\n", "args", "[", "'is_retrieval'", "]", "\n", ")", "\n", "train_loader", ",", "test_loader", "=", "build_loader", "(", "\n", "dataset_train", ",", "\n", "dataset_test", ",", "\n", "args", "[", "'batch_size'", "]", ",", "\n", "args", "[", "'num_workers'", "]", "\n", ")", "\n", "\n", "# build optimizer and schedular", "\n", "gen_opt", "=", "build_optimizer", "(", "gen_model", ",", "base_lr", "=", "args", "[", "'lr'", "]", ")", "\n", "dis_opt", "=", "build_optimizer", "(", "dis_model", ",", "base_lr", "=", "args", "[", "'lr'", "]", ")", "\n", "n_iter_per_epoch", "=", "len", "(", "train_loader", ")", "\n", "gen_scheduler", "=", "build_scheduler", "(", "\n", "gen_opt", ",", "\n", "args", "[", "'total_epochs'", "]", ",", "\n", "n_iter_per_epoch", ",", "\n", "scheduler_type", "=", "args", "[", "'scheduler_type'", "]", ",", "\n", "warmup_epochs", "=", "args", "[", "'warmup_epochs'", "]", "\n", ")", "\n", "dis_scheduler", "=", "build_scheduler", "(", "\n", "dis_opt", ",", "\n", "args", "[", "'total_epochs'", "]", ",", "\n", "n_iter_per_epoch", ",", "\n", "scheduler_type", "=", "args", "[", "'scheduler_type'", "]", ",", "\n", "warmup_epochs", "=", "args", "[", "'warmup_epochs'", "]", "\n", ")", "\n", "\n", "total_steps", "=", "args", "[", "'total_epochs'", "]", "*", "n_iter_per_epoch", "\n", "start_epoch", "=", "int", "(", "args", "[", "'resume_iter'", "]", "/", "n_iter_per_epoch", ")", "if", "args", "[", "'resume_iter'", "]", ">", "0", "else", "0", "\n", "\n", "# build perceptual nets", "\n", "vgg", ",", "inst_norm", "=", "None", ",", "None", "\n", "if", "args", "[", "'lambda_vgg'", "]", ">", "0", ":", "\n", "        ", "vgg", ",", "inst_norm", "=", "build_perceptual_nets", "(", "args", ")", "\n", "vgg", ".", "to", "(", "device", ")", "\n", "\n", "", "attention_warmup_epochs", "=", "args", "[", "'attention_warmup_epochs'", "]", "\n", "kl_warmup_epochs", "=", "args", "[", "'kl_warmup_epochs'", "]", "\n", "use_attention", "=", "args", "[", "'gen'", "]", "[", "'use_attention'", "]", "\n", "init_lambda_kl", "=", "args", "[", "'lambda_kl'", "]", "\n", "\n", "cur_step", "=", "args", "[", "'resume_iter'", "]", "if", "args", "[", "'resume_iter'", "]", ">", "0", "else", "0", "\n", "print", "(", "\"Start Epoch: {}, Start Step: {} ...\"", ".", "format", "(", "start_epoch", ",", "cur_step", ")", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "args", "[", "'total_epochs'", "]", ")", ":", "\n", "        ", "train_loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "train_data_iter", "=", "iter", "(", "train_loader", ")", "\n", "test_data_iter", "=", "iter", "(", "test_loader", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "train_loader", ")", ")", ":", "\n", "            ", "try", ":", "\n", "# Samples the batch", "\n", "                ", "inputs", "=", "next", "(", "train_data_iter", ")", "\n", "", "except", ":", "\n", "# restart the generator if the previous generator is exhausted.", "\n", "                ", "train_data_iter", "=", "iter", "(", "train_loader", ")", "\n", "inputs", "=", "next", "(", "train_data_iter", ")", "\n", "\n", "", "inputs", "=", "[", "v", ".", "to", "(", "device", ")", "for", "v", "in", "inputs", "]", "\n", "src_img", ",", "trg_img", ",", "src_lab", ",", "trg_lab", "=", "inputs", "\n", "\n", "gmm_src", "=", "assign_gmm_componet", "(", "src_lab", ",", "num_cls", "=", "args", "[", "'num_cls'", "]", ",", "mode", "=", "args", "[", "'dataset_name'", "]", ")", ".", "to", "(", "device", ")", "\n", "gmm_trg", "=", "assign_gmm_componet", "(", "trg_lab", ",", "num_cls", "=", "args", "[", "'num_cls'", "]", ",", "mode", "=", "args", "[", "'dataset_name'", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "# if using KL, gradually increasing the loss weight", "\n", "if", "init_lambda_kl", ">", "0", ":", "\n", "                ", "if", "epoch", ">", "kl_warmup_epochs", ":", "\n", "                    ", "args", "[", "'lambda_kl'", "]", "=", "(", "epoch", "-", "kl_warmup_epochs", ")", "*", "init_lambda_kl", "/", "(", "args", "[", "'total_epochs'", "]", "-", "kl_warmup_epochs", ")", "\n", "", "else", ":", "\n", "                    ", "args", "[", "'lambda_kl'", "]", "=", "0", "\n", "\n", "# train the discriminator", "\n", "", "", "d_loss", ",", "d_losses_lat", "=", "compute_d_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "None", ",", "# sampling in latent space", "\n", "src_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", "and", "epoch", ">", "attention_warmup_epochs", ",", "\n", "device", "\n", ")", "\n", "dis_opt", ".", "zero_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "                ", "average_gradients", "(", "dis_model", ")", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "dis_model", ".", "parameters", "(", ")", ",", "2.0", ")", "\n", "dis_opt", ".", "step", "(", ")", "\n", "\n", "d_loss", ",", "d_losses_ref", "=", "compute_d_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "trg_img", ",", "# sampling real image", "\n", "src_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", "and", "epoch", ">", "attention_warmup_epochs", ",", "\n", "device", "\n", ")", "\n", "dis_opt", ".", "zero_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "                ", "average_gradients", "(", "dis_model", ")", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "dis_model", ".", "parameters", "(", ")", ",", "2.0", ")", "\n", "dis_opt", ".", "step", "(", ")", "\n", "\n", "# train the generator", "\n", "g_loss", ",", "g_losses_lat", "=", "compute_g_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "None", ",", "# sampling in latent space", "\n", "src_lab", ",", "\n", "trg_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", "and", "epoch", ">", "attention_warmup_epochs", ",", "\n", "vgg", ",", "\n", "inst_norm", ",", "\n", "device", "\n", ")", "\n", "gen_opt", ".", "zero_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "                ", "average_gradients", "(", "gen_model", ")", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "gen_model", ".", "parameters", "(", ")", ",", "2.0", ")", "\n", "gen_opt", ".", "step", "(", ")", "\n", "\n", "g_loss", ",", "g_losses_ref", "=", "compute_g_loss", "(", "\n", "dis_model", ",", "\n", "gen_model", ",", "\n", "args", ",", "\n", "src_img", ",", "\n", "trg_img", ",", "# sampling real image", "\n", "src_lab", ",", "\n", "trg_lab", ",", "\n", "gmm_src", ",", "\n", "gmm_trg", ",", "\n", "use_attention", "and", "epoch", ">", "attention_warmup_epochs", ",", "\n", "vgg", ",", "\n", "inst_norm", ",", "\n", "device", "\n", ")", "\n", "gen_opt", ".", "zero_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "if", "args", "[", "'world_size'", "]", ">", "1", ":", "\n", "                ", "average_gradients", "(", "gen_model", ")", "\n", "", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "gen_model", ".", "parameters", "(", ")", ",", "2.0", ")", "\n", "gen_opt", ".", "step", "(", ")", "\n", "\n", "# update learning rate", "\n", "dis_scheduler", ".", "step_update", "(", "cur_step", ")", "\n", "gen_scheduler", ".", "step_update", "(", "cur_step", ")", "\n", "\n", "# compute moving average of network parameters", "\n", "moving_average", "(", "gen_model", ",", "gen_ema", ")", "\n", "moving_average", "(", "dis_model", ",", "dis_ema", ")", "\n", "\n", "# save model checkpoints", "\n", "if", "mark_flag", "and", "(", "cur_step", "+", "1", ")", "%", "args", "[", "'save_every'", "]", "==", "0", ":", "\n", "                ", "save_checkpoint", "(", "gen_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"gen\"", ")", "\n", "save_checkpoint", "(", "dis_model", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"dis\"", ")", "\n", "save_checkpoint", "(", "gen_ema", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"gen_ema\"", ")", "\n", "save_checkpoint", "(", "dis_ema", ",", "args", "[", "'checkpoint_dir'", "]", ",", "cur_step", "+", "1", ",", "\"dis_ema\"", ")", "\n", "\n", "# print out log info", "\n", "", "if", "mark_flag", "and", "(", "cur_step", "+", "1", ")", "%", "args", "[", "'print_every'", "]", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "[", ":", "-", "7", "]", "\n", "log", "=", "\"Elapsed time [%s], Epoch [%i/%i], Iteration [%i/%i], \"", "%", "(", "elapsed", ",", "epoch", ",", "args", "[", "'total_epochs'", "]", ",", "cur_step", "+", "1", ",", "total_steps", ")", "\n", "\n", "all_losses", "=", "dict", "(", ")", "\n", "for", "loss", ",", "prefix", "in", "zip", "(", "\n", "[", "d_losses_lat", ",", "d_losses_ref", ",", "g_losses_lat", ",", "g_losses_ref", "]", ",", "\n", "[", "'D/lat_'", ",", "'D/ref_'", ",", "'G/lat_'", ",", "'G/ref_'", "]", ")", ":", "\n", "                    ", "for", "key", ",", "value", "in", "loss", ".", "items", "(", ")", ":", "\n", "                        ", "all_losses", "[", "prefix", "+", "key", "]", "=", "value", "\n", "", "", "all_losses", "[", "\"G/lr\"", "]", "=", "gen_opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "all_losses", "[", "\"D/lr\"", "]", "=", "dis_opt", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "all_losses", "[", "\"kl/w\"", "]", "=", "args", "[", "'lambda_kl'", "]", "\n", "log", "+=", "' '", ".", "join", "(", "[", "'%s: [%.4f]'", "%", "(", "key", ",", "value", ")", "if", "'lr'", "not", "in", "key", "else", "'%s: [%.6f]'", "%", "(", "key", ",", "value", ")", "for", "key", ",", "value", "in", "all_losses", ".", "items", "(", ")", "]", ")", "\n", "print", "(", "log", ")", "\n", "\n", "# generate images for debugging", "\n", "", "if", "mark_flag", "and", "(", "cur_step", "+", "1", ")", "%", "args", "[", "'sample_every'", "]", "==", "0", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "exists", "(", "args", "[", "'sample_dir'", "]", ")", ":", "\n", "                    ", "os", ".", "mkdir", "(", "args", "[", "'sample_dir'", "]", ")", "\n", "# save training images", "\n", "", "z_trg", "=", "dist_sampling_split", "(", "gmm_trg", ",", "args", "[", "'attr_dim'", "]", ",", "device", ")", "\n", "save_name", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'sample_dir'", "]", ",", "'{:08d}_train.jpg'", ".", "format", "(", "cur_step", "+", "1", ")", ")", "\n", "debug_image", "(", "gen_model", ",", "src_img", ",", "trg_img", ",", "z_trg", ",", "save_name", ",", "use_attention", "and", "epoch", ">", "attention_warmup_epochs", ")", "\n", "\n", "# save testing images", "\n", "try", ":", "\n", "                    ", "src_img_val", ",", "trg_img_val", ",", "src_lab_val", ",", "trg_lab_val", "=", "next", "(", "test_data_iter", ")", "\n", "", "except", ":", "\n", "                    ", "test_data_iter", "=", "iter", "(", "test_loader", ")", "\n", "src_img_val", ",", "trg_img_val", ",", "src_lab_val", ",", "trg_lab_val", "=", "next", "(", "test_data_iter", ")", "\n", "", "src_img_val", "=", "src_img_val", ".", "to", "(", "device", ")", "\n", "trg_img_val", "=", "trg_img_val", ".", "to", "(", "device", ")", "\n", "src_lab_val", "=", "src_lab_val", ".", "to", "(", "device", ")", "\n", "trg_lab_val", "=", "trg_lab_val", ".", "to", "(", "device", ")", "\n", "gmm_trg_val", "=", "assign_gmm_componet", "(", "trg_lab_val", ",", "num_cls", "=", "args", "[", "'num_cls'", "]", ",", "mode", "=", "args", "[", "'dataset_name'", "]", ")", ".", "to", "(", "device", ")", "\n", "z_trg", "=", "dist_sampling_split", "(", "gmm_trg_val", ",", "args", "[", "'attr_dim'", "]", ",", "device", ")", "\n", "save_name", "=", "os", ".", "path", ".", "join", "(", "args", "[", "'sample_dir'", "]", ",", "'{:08d}_test.jpg'", ".", "format", "(", "cur_step", "+", "1", ")", ")", "\n", "debug_image", "(", "gen_model", ",", "src_img_val", ",", "trg_img_val", ",", "z_trg", ",", "save_name", ",", "use_attention", "and", "epoch", ">", "attention_warmup_epochs", ")", "\n", "\n", "", "cur_step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.CosFace.__init__": [[152, 156], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "s", "=", "64.0", ",", "m", "=", "0.40", ")", ":", "\n", "        ", "super", "(", "CosFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "s", "=", "s", "\n", "self", ".", "m", "=", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.CosFace.forward": [[157, 164], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.scatter_", "torch.zeros.scatter_", "torch.where", "torch.where", "torch.where", "torch.where", "index.size", "cosine.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "cosine", ",", "label", ")", ":", "\n", "        ", "index", "=", "torch", ".", "where", "(", "label", "!=", "-", "1", ")", "[", "0", "]", "\n", "m_hot", "=", "torch", ".", "zeros", "(", "index", ".", "size", "(", ")", "[", "0", "]", ",", "cosine", ".", "size", "(", ")", "[", "1", "]", ",", "device", "=", "cosine", ".", "device", ")", "\n", "m_hot", ".", "scatter_", "(", "1", ",", "label", "[", "index", ",", "None", "]", ",", "self", ".", "m", ")", "\n", "cosine", "[", "index", "]", "-=", "m_hot", "\n", "ret", "=", "cosine", "*", "self", ".", "s", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__": [[167, 171], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.__init__"], ["    ", "def", "__init__", "(", "self", ",", "s", "=", "64.0", ",", "m", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "ArcFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "s", "=", "s", "\n", "self", ".", "m", "=", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.ArcFace.forward": [[172, 180], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros.scatter_", "torch.zeros.scatter_", "cosine.acos_", "cosine.cos_().mul_", "torch.where", "torch.where", "torch.where", "torch.where", "index.size", "cosine.size", "cosine.cos_"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "cosine", ",", "label", ")", ":", "\n", "        ", "index", "=", "torch", ".", "where", "(", "label", "!=", "-", "1", ")", "[", "0", "]", "\n", "m_hot", "=", "torch", ".", "zeros", "(", "index", ".", "size", "(", ")", "[", "0", "]", ",", "cosine", ".", "size", "(", ")", "[", "1", "]", ",", "device", "=", "cosine", ".", "device", ")", "\n", "m_hot", ".", "scatter_", "(", "1", ",", "label", "[", "index", ",", "None", "]", ",", "self", ".", "m", ")", "\n", "cosine", ".", "acos_", "(", ")", "\n", "cosine", "[", "index", "]", "+=", "m_hot", "\n", "cosine", ".", "cos_", "(", ")", ".", "mul_", "(", "self", ".", "s", ")", "\n", "return", "cosine", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_ce": [[10, 18], ["criterion"], "function", ["None"], ["def", "criterion_ce", "(", "\n", "logits", ",", "# prediction", "\n", "target", ",", "# ground truth", "\n", "dataset", "=", "'CelebA'", "\n", ")", ":", "\n", "    ", "\"\"\"Compute binary or softmax cross entropy loss.\"\"\"", "\n", "criterion", "=", "F", ".", "binary_cross_entropy_with_logits", "if", "dataset", "in", "[", "'CelebA'", "]", "else", "F", ".", "cross_entropy", "\n", "return", "criterion", "(", "logits", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_adv": [[19, 35], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "function", ["None"], ["", "def", "criterion_adv", "(", "\n", "x_real", "=", "None", ",", "# real image", "\n", "x_fake", "=", "None", ",", "# fake image", "\n", "gan_type", "=", "'lsgan'", ",", "# we support lsgan and wgan only", "\n", "is_D", "=", "True", "# True, training the discrimintaor; False, training the generator", "\n", ")", ":", "\n", "    ", "if", "gan_type", "==", "\"lsgan\"", ":", "\n", "        ", "if", "is_D", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "x_fake", "**", "2", ")", "+", "torch", ".", "mean", "(", "(", "x_real", "-", "1", ")", "**", "2", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "(", "x_fake", "-", "1", ")", "**", "2", ")", "\n", "", "", "else", ":", "\n", "        ", "if", "is_D", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "x_fake", ")", "-", "torch", ".", "mean", "(", "x_real", ")", "\n", "", "else", ":", "\n", "            ", "return", "-", "torch", ".", "mean", "(", "x_fake", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.gradient_penalty": [[36, 49], ["torch.ones().to", "torch.ones().to", "dydx.view.view", "torch.sqrt", "torch.sqrt", "torch.mean", "torch.mean", "torch.autograd.grad", "torch.autograd.grad", "dydx.view.size", "torch.sum", "torch.sum", "torch.ones", "torch.ones", "y.size"], "function", ["None"], ["", "", "", "def", "gradient_penalty", "(", "y", ",", "x", ",", "device", ")", ":", "\n", "    ", "\"\"\"Compute gradient penalty: (L2_norm(dy/dx) - 1)**2.\"\"\"", "\n", "weight", "=", "torch", ".", "ones", "(", "y", ".", "size", "(", ")", ")", ".", "to", "(", "device", ")", "\n", "dydx", "=", "torch", ".", "autograd", ".", "grad", "(", "outputs", "=", "y", ",", "\n", "inputs", "=", "x", ",", "\n", "grad_outputs", "=", "weight", ",", "\n", "retain_graph", "=", "True", ",", "\n", "create_graph", "=", "True", ",", "\n", "only_inputs", "=", "True", ")", "[", "0", "]", "\n", "\n", "dydx", "=", "dydx", ".", "view", "(", "dydx", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "dydx_l2norm", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "dydx", "**", "2", ",", "dim", "=", "1", ")", ")", "\n", "return", "torch", ".", "mean", "(", "(", "dydx_l2norm", "-", "1", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.calc_d_loss": [[50, 80], ["d_model", "d_model", "zip", "torch.rand().to", "torch.rand().to", "losses.criterion_adv", "losses.criterion_ce", "d_model", "losses.gradient_penalty", "torch.rand", "torch.rand", "input_real.size"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_adv", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_ce", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.gradient_penalty"], ["", "def", "calc_d_loss", "(", "\n", "d_model", ",", "\n", "input_real", ",", "\n", "input_fake", ",", "\n", "real_cls", ",", "\n", "lambda_adv", "=", "1.0", ",", "\n", "lambda_cls", "=", "1.0", ",", "\n", "lambda_gp", "=", "0.0", ",", "\n", "gan_type", "=", "'lsgan'", ",", "\n", "dataset", "=", "'CelebA'", ",", "\n", "device", "=", "None", "\n", ")", ":", "\n", "    ", "loss", "=", "0.0", "\n", "# calculate the loss to train D", "\n", "real_outs", "=", "d_model", "(", "input_real", ")", "\n", "fake_outs", "=", "d_model", "(", "input_fake", ")", "\n", "\n", "for", "routs", ",", "fouts", "in", "zip", "(", "real_outs", ",", "fake_outs", ")", ":", "\n", "        ", "rsrc", ",", "rcls", "=", "routs", "\n", "fsrc", ",", "fcls", "=", "fouts", "\n", "loss", "+=", "criterion_adv", "(", "x_real", "=", "rsrc", ",", "x_fake", "=", "fsrc", ",", "gan_type", "=", "gan_type", ",", "is_D", "=", "True", ")", "*", "lambda_adv", "\n", "loss", "+=", "criterion_ce", "(", "rcls", ",", "real_cls", ",", "dataset", ")", "*", "lambda_cls", "\n", "\n", "", "if", "gan_type", "==", "\"wgan\"", ":", "\n", "# Compute loss for gradient penalty.", "\n", "        ", "alpha", "=", "torch", ".", "rand", "(", "input_real", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "x_hat", "=", "(", "alpha", "*", "input_real", ".", "data", "+", "(", "1", "-", "alpha", ")", "*", "input_fake", ".", "data", ")", ".", "requires_grad_", "(", "True", ")", "\n", "gp_outs", "=", "d_model", "(", "x_hat", ")", "[", "0", "]", "\n", "loss", "+=", "gradient_penalty", "(", "gp_outs", "[", "0", "]", ",", "x_hat", ",", "device", ")", "*", "lambda_gp", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.calc_g_loss": [[81, 98], ["d_model", "losses.criterion_adv", "losses.criterion_ce"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_adv", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_ce"], ["", "def", "calc_g_loss", "(", "\n", "d_model", ",", "\n", "input_fake", ",", "\n", "target_cls", ",", "\n", "lambda_adv", "=", "1.0", ",", "\n", "lambda_cls", "=", "1.0", ",", "\n", "gan_type", "=", "'lsgan'", ",", "\n", "dataset", "=", "'CelebA'", "\n", ")", ":", "\n", "    ", "loss", "=", "0.0", "\n", "# calculate the loss to train G", "\n", "fake_outs", "=", "d_model", "(", "input_fake", ")", "\n", "for", "fouts", "in", "fake_outs", ":", "\n", "        ", "fsrc", ",", "fcls", "=", "fouts", "\n", "loss", "+=", "criterion_adv", "(", "x_fake", "=", "fsrc", ",", "gan_type", "=", "gan_type", ",", "is_D", "=", "False", ")", "*", "lambda_adv", "\n", "loss", "+=", "criterion_ce", "(", "fcls", ",", "target_cls", ",", "dataset", ")", "*", "lambda_cls", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_earth_mover_distance": [[99, 105], ["torch.pow().mean().mean", "torch.pow().mean().mean", "torch.pow().mean", "torch.pow().mean", "torch.pow", "torch.pow"], "function", ["None"], ["", "def", "criterion_earth_mover_distance", "(", "pred_mu", ",", "gt_mu", ")", ":", "\n", "    ", "\"\"\"\n    :param: pred, extracted attribute vector with shape [N, d, V]\n    :param: mus, mean tensor with shape [N, d, 1]\n    \"\"\"", "\n", "return", "torch", ".", "pow", "(", "pred_mu", "-", "gt_mu", ",", "2", ")", ".", "mean", "(", "dim", "=", "2", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_kl_distance": [[106, 115], ["torch.tensor().to", "torch.tensor().to", "torch.tensor", "torch.tensor", "torch.log", "torch.log", "pred_sigma.exp", "pred_sigma.exp", "torch.pow", "torch.pow"], "function", ["None"], ["", "def", "criterion_kl_distance", "(", "pred_mu", ",", "pred_sigma", ",", "gt_mu", ",", "gt_sigma", "=", "None", ",", "device", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    :param: pred_mu, extracted attribute vector with shape [N, d, V]\n    :param: pred_sigma, extracted attribute vector with shape [N, d, V]\n    :param: mus, mean tensor with shape [N, d, 1]\n    \"\"\"", "\n", "sigma", "=", "torch", ".", "tensor", "(", "0.25", ")", ".", "to", "(", "device", ")", "if", "gt_sigma", "is", "None", "else", "gt_sigma", "\n", "return", "(", "0.5", "*", "(", "torch", ".", "log", "(", "sigma", "/", "pred_sigma", ".", "exp", "(", ")", ")", "+", "(", "pred_sigma", ".", "exp", "(", ")", "+", "torch", ".", "pow", "(", "pred_mu", "-", "gt_mu", ",", "2", ")", ")", "/", "sigma", "-", "1.0", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_kl": [[116, 128], ["losses.criterion_kl_distance", "losses.criterion_earth_mover_distance"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_kl_distance", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_earth_mover_distance"], ["", "def", "criterion_kl", "(", "\n", "pred_mu", ",", "\n", "gt_mu", ",", "\n", "pred_sigma", "=", "None", ",", "\n", "gt_sigma", "=", "None", ",", "\n", "kl_mode", "=", "\"kl\"", ",", "# KL or Earth mover", "\n", "device", "=", "None", "\n", ")", ":", "\n", "    ", "if", "kl_mode", "==", "'kl'", ":", "\n", "        ", "return", "criterion_kl_distance", "(", "pred_mu", ",", "pred_sigma", ",", "gt_mu", ",", "gt_sigma", ",", "device", ")", "\n", "", "else", ":", "\n", "        ", "return", "criterion_earth_mover_distance", "(", "pred_mu", ",", "gt_mu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_l1": [[130, 132], ["torch.mean", "torch.mean", "torch.abs", "torch.abs"], "function", ["None"], ["", "", "def", "criterion_l1", "(", "x", ",", "y", ")", ":", "\n", "    ", "return", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "x", "-", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.vgg_preprocess": [[133, 139], ["torch.tensor().view().to", "torch.tensor().view().to", "torch.tensor().view().to", "torch.tensor().view().to", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "vgg_preprocess", "(", "x", ",", "device", ")", ":", "\n", "    ", "x", "=", "(", "x", "+", "1", ")", "/", "2.0", "# [-1, 1] -> [0, 1]", "\n", "mu", "=", "torch", ".", "tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "std", "=", "torch", ".", "tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "x", "=", "(", "x", "-", "mu", ")", "/", "std", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.criterion_vgg": [[140, 146], ["losses.vgg_preprocess", "losses.vgg_preprocess", "vgg_model", "vgg_model", "torch.mean", "torch.mean", "instancenorm", "instancenorm"], "function", ["home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.vgg_preprocess", "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.vgg_preprocess"], ["", "def", "criterion_vgg", "(", "img1", ",", "img2", ",", "vgg_model", ",", "instancenorm", ",", "device", ")", ":", "\n", "    ", "img1_vgg", "=", "vgg_preprocess", "(", "img1", ",", "device", ")", "\n", "img2_vgg", "=", "vgg_preprocess", "(", "img2", ",", "device", ")", "\n", "feat1", "=", "vgg_model", "(", "img1_vgg", ")", "\n", "feat2", "=", "vgg_model", "(", "img2_vgg", ")", "\n", "return", "torch", ".", "mean", "(", "(", "instancenorm", "(", "feat1", ")", "-", "instancenorm", "(", "feat2", ")", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yhlleo_RG-UNIT.core.losses.triplet_margin": [[148, 150], ["torch.nn.TripletMarginLoss"], "function", ["None"], ["", "def", "triplet_margin", "(", "margin", "=", "0.2", ",", "p", "=", "2", ")", ":", "\n", "    ", "return", "nn", ".", "TripletMarginLoss", "(", "margin", "=", "margin", ",", "p", "=", "p", ")", "\n", "\n"]]}