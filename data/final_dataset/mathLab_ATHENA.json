{"home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.__init__": [[43, 68], ["issubclass", "issubclass"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "n_layers", ",", "\n", "active_dim", ",", "\n", "lr", ",", "\n", "epochs", ",", "\n", "dh", "=", "0.25", ",", "\n", "optimizer", "=", "optim", ".", "Adam", ",", "\n", "scheduler", "=", "None", ")", ":", "\n", "        ", "self", ".", "n_layers", "=", "n_layers", "\n", "self", ".", "active_dim", "=", "active_dim", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "epochs", "=", "epochs", "\n", "self", ".", "dh", "=", "dh", "\n", "if", "issubclass", "(", "optimizer", ",", "optim", ".", "Optimizer", ")", ":", "\n", "            ", "self", ".", "optimizer", "=", "optimizer", "\n", "\n", "", "if", "scheduler", "and", "issubclass", "(", "scheduler", ",", "\n", "torch", ".", "optim", ".", "lr_scheduler", ".", "_LRScheduler", ")", ":", "\n", "            ", "self", ".", "scheduler", "=", "scheduler", "\n", "", "else", ":", "\n", "            ", "self", ".", "scheduler", "=", "None", "\n", "\n", "", "self", ".", "backward", "=", "None", "\n", "self", ".", "forward", "=", "None", "\n", "self", ".", "loss_vec", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train": [[69, 188], ["nll.ForwardNet", "nll.NonlinearLevelSet.forward.zero_grad", "nll.NonlinearLevelSet.optimizer", "range", "ValueError", "matplotlib.figure", "matplotlib.figure.add_subplot", "matplotlib.figure.add_subplot", "plt.figure.add_subplot.set_title", "plt.figure.add_subplot.grid", "matplotlib.ion", "matplotlib.show", "nll.NonlinearLevelSet.forward.parameters", "nll.NonlinearLevelSet.scheduler", "nll.NonlinearLevelSet.zero_grad", "nll.NonlinearLevelSet.forward", "nll.NonlinearLevelSet.forward.customized_loss", "nll.NonlinearLevelSet.backward", "nll.NonlinearLevelSet.step", "matplotlib.ioff", "matplotlib.show", "ValueError", "print", "nll.NonlinearLevelSet.loss_vec.append", "nll.BackwardNet", "nll.NonlinearLevelSet.backward.zero_grad", "range", "nll.NonlinearLevelSet.step", "plt.figure.add_subplot.cla", "plt.figure.add_subplot.set_title", "plt.figure.add_subplot.plot", "plt.figure.add_subplot.grid", "plt.figure.add_subplot.plot", "matplotlib.draw", "matplotlib.pause", "nll.NonlinearLevelSet.detach().numpy", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "print", "print", "nll.NonlinearLevelSet.detach().numpy", "getattr", "getattr", "getattr", "getattr", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "nll.NonlinearLevelSet.detach().numpy", "nll.NonlinearLevelSet.detach", "getattr", "getattr", "getattr", "getattr", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "nll.NonlinearLevelSet.detach", "nll.NonlinearLevelSet.backward", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "nll.NonlinearLevelSet.detach", "nll.NonlinearLevelSet.forward", "nll.NonlinearLevelSet.backward", "nll.NonlinearLevelSet.forward"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.BackwardNet.forward", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.ForwardNet.customized_loss", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.BackwardNet.forward", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.BackwardNet.forward"], ["", "def", "train", "(", "self", ",", "\n", "inputs", ",", "\n", "gradients", ",", "\n", "outputs", "=", "None", ",", "\n", "interactive", "=", "False", ",", "\n", "target_loss", "=", "0.0001", ",", "\n", "optim_args", "=", "{", "}", ",", "\n", "scheduler_args", "=", "{", "}", ")", ":", "\n", "        ", "\"\"\"\n        Train the whole RevNet.\n\n        :param torch.Tensor inputs: DoubleTensor n_samples-by-n_params\n            containing the points in the full input space.\n        :param torch.Tensor gradients: DoubleTensor n_samples-by-n_params\n            containing the gradient samples wrt the input parameters.\n        :param numpy.ndarray outputs: array n_samples-by-1 containing the\n            corresponding function evaluations. Needed only for the interactive\n            mode. Default is None.\n        :param bool interactive: if True a plot with the loss function decay,\n            and the sufficient summary plot will be showed and updated every\n            10 epochs, and at the last epoch. Default is False.\n        :param float target_loss: loss threshold. Default is 0.0001.\n        :param dict optim_args: dictionary passed to the optimizer.\n        :param dict scheduler_args: dictionary passed to the scheduler.\n        :raises: ValueError: in interactive mode outputs must be provided for\n            the sufficient summary plot.\n        \"\"\"", "\n", "if", "inputs", ".", "shape", "[", "1", "]", "%", "2", "!=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'The parameter space\\'s dimension must be even.'", ")", "\n", "\n", "", "if", "interactive", ":", "\n", "            ", "if", "outputs", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'outputs in interactive mode have to be provided!'", ")", "\n", "", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "12", ",", "5", ")", ")", "\n", "ax1", "=", "fig", ".", "add_subplot", "(", "1", ",", "2", ",", "1", ")", "\n", "ax2", "=", "fig", ".", "add_subplot", "(", "1", ",", "2", ",", "2", ")", "\n", "ax2", ".", "set_title", "(", "'Loss function decay'", ")", "\n", "ax2", ".", "grid", "(", "linestyle", "=", "'dotted'", ")", "\n", "plt", ".", "ion", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "# Build the forward network", "\n", "", "self", ".", "forward", "=", "ForwardNet", "(", "n_params", "=", "inputs", ".", "shape", "[", "1", "]", ",", "\n", "n_layers", "=", "self", ".", "n_layers", ",", "\n", "dh", "=", "self", ".", "dh", ",", "\n", "active_dim", "=", "self", ".", "active_dim", ")", "\n", "# Initialize the gradient", "\n", "self", ".", "forward", ".", "zero_grad", "(", ")", "\n", "optimizer", "=", "self", ".", "optimizer", "(", "self", ".", "forward", ".", "parameters", "(", ")", ",", "self", ".", "lr", ",", "\n", "**", "optim_args", ")", "\n", "\n", "# Initialize scheduler if present", "\n", "if", "self", ".", "scheduler", ":", "\n", "            ", "sched", "=", "self", ".", "scheduler", "(", "optimizer", ",", "**", "scheduler_args", ")", "\n", "\n", "# Training", "\n", "", "for", "i", "in", "range", "(", "self", ".", "epochs", ")", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "mapped_inputs", "=", "self", ".", "forward", "(", "inputs", ")", "\n", "loss", "=", "self", ".", "forward", ".", "customized_loss", "(", "inputs", ",", "mapped_inputs", ",", "\n", "gradients", ")", "\n", "\n", "if", "i", "%", "10", "==", "0", "or", "i", "==", "self", ".", "epochs", "-", "1", ":", "\n", "                ", "print", "(", "'epoch = {}, loss = {}'", ".", "format", "(", "i", ",", "loss", ")", ")", "\n", "if", "interactive", ":", "\n", "                    ", "ax1", ".", "cla", "(", ")", "\n", "ax1", ".", "set_title", "(", "'Sufficient summary plot'", ")", "\n", "ax1", ".", "plot", "(", "mapped_inputs", ".", "detach", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", "0", "]", ",", "outputs", ",", "\n", "'bo'", ")", "\n", "ax1", ".", "grid", "(", "linestyle", "=", "'dotted'", ")", "\n", "ax2", ".", "plot", "(", "i", ",", "loss", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "'ro'", ")", "\n", "plt", ".", "draw", "(", ")", "\n", "plt", ".", "pause", "(", "0.00001", ")", "\n", "\n", "", "self", ".", "loss_vec", ".", "append", "(", "loss", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "# Build the inverse network based on the trained forward network", "\n", "self", ".", "backward", "=", "BackwardNet", "(", "n_params", "=", "inputs", ".", "shape", "[", "1", "]", ",", "\n", "n_layers", "=", "self", ".", "n_layers", ",", "\n", "dh", "=", "self", ".", "dh", ")", "\n", "self", ".", "backward", ".", "zero_grad", "(", ")", "\n", "\n", "for", "j", "in", "range", "(", "self", ".", "backward", ".", "n_layers", ")", ":", "\n", "                    ", "name_y", "=", "'fc{}_y'", ".", "format", "(", "j", "+", "1", ")", "\n", "name_z", "=", "'fc{}_z'", ".", "format", "(", "j", "+", "1", ")", "\n", "getattr", "(", "self", ".", "backward", ",", "name_y", ")", ".", "weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "\n", "getattr", "(", "self", ".", "forward", ",", "name_y", ")", ".", "weight", ")", "\n", "getattr", "(", "self", ".", "backward", ",", "name_z", ")", ".", "weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "\n", "getattr", "(", "self", ".", "forward", ",", "name_z", ")", ".", "weight", ")", "\n", "getattr", "(", "self", ".", "backward", ",", "name_y", ")", ".", "bias", "=", "torch", ".", "nn", ".", "Parameter", "(", "\n", "getattr", "(", "self", ".", "forward", ",", "name_y", ")", ".", "bias", ")", "\n", "getattr", "(", "self", ".", "backward", ",", "name_z", ")", ".", "bias", "=", "torch", ".", "nn", ".", "Parameter", "(", "\n", "getattr", "(", "self", ".", "forward", ",", "name_z", ")", ".", "bias", ")", "\n", "\n", "", "if", "torch", ".", "mean", "(", "\n", "torch", ".", "abs", "(", "\n", "torch", ".", "add", "(", "-", "1", "*", "inputs", ",", "\n", "self", ".", "backward", "(", "\n", "self", ".", "forward", "(", "inputs", ")", ")", ")", ")", ")", ">", "1e-5", ":", "\n", "                    ", "print", "(", "'self.backward is wrong!'", ")", "\n", "print", "(", "\n", "torch", ".", "mean", "(", "\n", "torch", ".", "abs", "(", "\n", "torch", ".", "add", "(", "-", "1", "*", "inputs", ",", "\n", "self", ".", "backward", "(", "\n", "self", ".", "forward", "(", "inputs", ")", ")", ")", ")", ")", ")", "\n", "\n", "", "if", "loss", "<", "target_loss", ":", "\n", "                    ", "break", "\n", "\n", "", "", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "self", ".", "scheduler", ":", "\n", "                ", "sched", ".", "step", "(", ")", "\n", "\n", "", "", "if", "interactive", ":", "\n", "            ", "plt", ".", "ioff", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.plot_sufficient_summary": [[189, 231], ["matplotlib.figure", "matplotlib.title", "matplotlib.grid", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.xlabel", "ValueError", "matplotlib.savefig", "matplotlib.show", "nll.NonlinearLevelSet.forward", "reduced_inputs.detach().numpy", "reduced_inputs.detach"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.BackwardNet.forward"], ["", "", "def", "plot_sufficient_summary", "(", "self", ",", "\n", "inputs", ",", "\n", "outputs", ",", "\n", "filename", "=", "None", ",", "\n", "figsize", "=", "(", "10", ",", "8", ")", ",", "\n", "title", "=", "''", ")", ":", "\n", "        ", "\"\"\"\n        Plot the sufficient summary.\n\n        :param torch.Tensor inputs: DoubleTensor n_samples-by-n_params\n            containing the points in the full input space.\n        :param numpy.ndarray outputs: array n_samples-by-1 containing the\n            corresponding function evaluations.\n        :param str filename: if specified, the plot is saved at `filename`.\n        :param tuple(int,int) figsize: tuple in inches defining the figure\n            size. Defaults to (10, 8).\n        :param str title: title of the plot.\n        :raises: ValueError\n\n        .. warning::\n            Plot only available for active dimensions up to 1.\n        \"\"\"", "\n", "plt", ".", "figure", "(", "figsize", "=", "figsize", ")", "\n", "plt", ".", "title", "(", "title", ")", "\n", "\n", "if", "self", ".", "active_dim", "==", "1", ":", "\n", "            ", "reduced_inputs", "=", "self", ".", "forward", "(", "inputs", ")", "[", ":", ",", "0", "]", "\n", "plt", ".", "plot", "(", "reduced_inputs", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "outputs", ",", "'bo'", ")", "\n", "plt", ".", "xlabel", "(", "'Reduced input'", ")", "\n", "plt", ".", "xlabel", "(", "'Output'", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Sufficient summary plots cannot be made in more than 1 '", "'dimension.'", "\n", ")", "\n", "\n", "", "plt", ".", "grid", "(", "linestyle", "=", "'dotted'", ")", "\n", "\n", "if", "filename", ":", "\n", "            ", "plt", ".", "savefig", "(", "filename", ")", "\n", "", "else", ":", "\n", "            ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.plot_loss": [[232, 252], ["matplotlib.figure", "matplotlib.title", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.grid", "list", "matplotlib.savefig", "matplotlib.show", "range"], "methods", ["None"], ["", "", "def", "plot_loss", "(", "self", ",", "filename", "=", "None", ",", "figsize", "=", "(", "10", ",", "8", ")", ",", "title", "=", "''", ")", ":", "\n", "        ", "\"\"\"\n        Plot the loss function decay.\n\n        :param str filename: if specified, the plot is saved at `filename`.\n        :param tuple(int,int) figsize: tuple in inches defining the figure\n            size. Defaults to (10, 8).\n        :param str title: title of the plot.\n        \"\"\"", "\n", "plt", ".", "figure", "(", "figsize", "=", "figsize", ")", "\n", "plt", ".", "title", "(", "title", ")", "\n", "x_range", "=", "list", "(", "range", "(", "1", ",", "self", ".", "epochs", "+", "1", ",", "10", ")", ")", "+", "[", "self", ".", "epochs", "]", "\n", "plt", ".", "plot", "(", "x_range", ",", "self", ".", "loss_vec", ",", "'b-'", ")", "\n", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Loss'", ")", "\n", "plt", ".", "grid", "(", "linestyle", "=", "'dotted'", ")", "\n", "if", "filename", ":", "\n", "            ", "plt", ".", "savefig", "(", "filename", ")", "\n", "", "else", ":", "\n", "            ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.save_forward": [[253, 265], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "nll.NonlinearLevelSet.forward.state_dict"], "methods", ["None"], ["", "", "def", "save_forward", "(", "self", ",", "outfile", ")", ":", "\n", "        ", "\"\"\"\n        Save the forward map for future inference.\n\n        :param str outfile: filename of the net to save.\n            Use either .pt or .pth. See notes below.\n\n        .. note::\n            A common PyTorch convention is to save models using either a .pt or\n            .pth file extension.\n        \"\"\"", "\n", "torch", ".", "save", "(", "self", ".", "forward", ".", "state_dict", "(", ")", ",", "outfile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.load_forward": [[266, 281], ["nll.ForwardNet", "nll.NonlinearLevelSet.forward.load_state_dict", "nll.NonlinearLevelSet.forward.eval", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "load_forward", "(", "self", ",", "infile", ",", "n_params", ")", ":", "\n", "        ", "\"\"\"\n        Load the forward map for inference.\n\n        :param str infile: filename of the saved net to load. See notes below.\n        :param int n_params: number of input parameters.\n\n        .. note::\n            A common PyTorch convention is to save models using either a .pt or\n            .pth file extension.\n        \"\"\"", "\n", "self", ".", "forward", "=", "ForwardNet", "(", "n_params", ",", "self", ".", "n_layers", ",", "self", ".", "dh", ",", "\n", "self", ".", "active_dim", ")", "\n", "self", ".", "forward", ".", "load_state_dict", "(", "torch", ".", "load", "(", "infile", ")", ")", "\n", "self", ".", "forward", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.save_backward": [[282, 294], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "nll.NonlinearLevelSet.backward.state_dict"], "methods", ["None"], ["", "def", "save_backward", "(", "self", ",", "outfile", ")", ":", "\n", "        ", "\"\"\"\n        Save the backward map for future inference.\n\n        :param str outfile: filename of the net to save.\n            Use either .pt or .pth. See notes below.\n\n        .. note::\n            A common PyTorch convention is to save models using either a .pt or\n            .pth file extension.\n        \"\"\"", "\n", "torch", ".", "save", "(", "self", ".", "backward", ".", "state_dict", "(", ")", ",", "outfile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.load_backward": [[295, 309], ["nll.BackwardNet", "nll.NonlinearLevelSet.backward.load_state_dict", "nll.NonlinearLevelSet.backward.eval", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "load_backward", "(", "self", ",", "infile", ",", "n_params", ")", ":", "\n", "        ", "\"\"\"\n        Load the backward map for inference.\n\n        :param str infile: filename of the saved net to load. See notes below.\n        :param int n_params: number of input parameters.\n\n        .. note::\n            A common PyTorch convention is to save models using either a .pt or\n            .pth file extension.\n        \"\"\"", "\n", "self", ".", "backward", "=", "BackwardNet", "(", "n_params", ",", "self", ".", "n_layers", ",", "self", ".", "dh", ")", "\n", "self", ".", "backward", ".", "load_state_dict", "(", "torch", ".", "load", "(", "infile", ")", ")", "\n", "self", ".", "backward", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.ForwardNet.__init__": [[324, 336], ["torch.Module.__init__", "slice", "range", "setattr", "setattr", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.classproperty.__init__"], ["def", "__init__", "(", "self", ",", "n_params", ",", "n_layers", ",", "dh", ",", "active_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_params", "=", "n_params", "//", "2", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "self", ".", "dh", "=", "dh", "\n", "self", ".", "omega", "=", "slice", "(", "active_dim", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'fc{}_y'", ".", "format", "(", "i", "+", "1", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "n_params", ",", "2", "*", "self", ".", "n_params", ")", ")", "\n", "setattr", "(", "self", ",", "'fc{}_z'", ".", "format", "(", "i", "+", "1", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "n_params", ",", "2", "*", "self", ".", "n_params", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.ForwardNet.forward": [[337, 374], ["torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "vars", "vars", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "vars", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "vars", "getattr", "vars", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "getattr", "vars", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "vars", "vars", "getattr", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "getattr", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "vars", "vars"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Maps original inputs to transformed inputs.\n\n        :param torch.Tensor inputs: DoubleTensor n_samples-by-n_params\n            containing the points in the original full input space.\n        :return mapped_inputs: DoubleTensor n_samples-by-n_params with\n            the nonlinear transformed inputs.\n        :rtype: torch.Tensor\n        \"\"\"", "\n", "bb", "=", "torch", ".", "split", "(", "inputs", ",", "self", ".", "n_params", ",", "dim", "=", "1", ")", "\n", "vars", "(", ")", "[", "'var0_y'", "]", "=", "torch", ".", "clone", "(", "bb", "[", "0", "]", ")", "\n", "vars", "(", ")", "[", "'var0_z'", "]", "=", "torch", ".", "clone", "(", "bb", "[", "1", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "name_y", "=", "'fc{}_y'", ".", "format", "(", "i", "+", "1", ")", "\n", "name_z", "=", "'fc{}_z'", ".", "format", "(", "i", "+", "1", ")", "\n", "var_y0", "=", "'var{}_y'", ".", "format", "(", "i", ")", "\n", "var_z0", "=", "'var{}_z'", ".", "format", "(", "i", ")", "\n", "var_y1", "=", "'var{}_y'", ".", "format", "(", "i", "+", "1", ")", "\n", "var_z1", "=", "'var{}_z'", ".", "format", "(", "i", "+", "1", ")", "\n", "\n", "sig_y", "=", "torch", ".", "unsqueeze", "(", "\n", "torch", ".", "tanh", "(", "getattr", "(", "self", ",", "name_y", ")", "(", "vars", "(", ")", "[", "var_z0", "]", ")", ")", ",", "2", ")", "\n", "K_y", "=", "torch", ".", "transpose", "(", "getattr", "(", "self", ",", "name_y", ")", ".", "weight", ",", "0", ",", "1", ")", "\n", "vars", "(", ")", "[", "var_y1", "]", "=", "torch", ".", "add", "(", "\n", "vars", "(", ")", "[", "var_y0", "]", ",", "\n", "1", "*", "self", ".", "dh", "*", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "K_y", ",", "sig_y", ")", ",", "2", ")", ")", "\n", "\n", "sig_z", "=", "torch", ".", "unsqueeze", "(", "\n", "torch", ".", "tanh", "(", "getattr", "(", "self", ",", "name_z", ")", "(", "vars", "(", ")", "[", "var_y1", "]", ")", ")", ",", "2", ")", "\n", "K_z", "=", "torch", ".", "transpose", "(", "getattr", "(", "self", ",", "name_z", ")", ".", "weight", ",", "0", ",", "1", ")", "\n", "vars", "(", ")", "[", "var_z1", "]", "=", "torch", ".", "add", "(", "\n", "vars", "(", ")", "[", "var_z0", "]", ",", "\n", "-", "1", "*", "self", ".", "dh", "*", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "K_z", ",", "sig_z", ")", ",", "2", ")", ")", "\n", "\n", "", "return", "torch", ".", "cat", "(", "(", "vars", "(", ")", "[", "var_y1", "]", ",", "vars", "(", ")", "[", "var_z1", "]", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.ForwardNet.customized_loss": [[375, 474], ["range", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "range", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "range", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.clone", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.unsqueeze.expand", "torch.unsqueeze.expand", "torch.unsqueeze.expand", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "vars", "getattr", "vars", "getattr", "vars", "getattr", "vars", "getattr", "inputs.size", "vars", "vars", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.svd", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "vars", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "vars", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "vars", "vars", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "vars", "vars", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "vars", "vars", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "vars", "vars", "vars", "vars", "vars", "vars"], "methods", ["None"], ["", "def", "customized_loss", "(", "self", ",", "inputs", ",", "mapped_inputs", ",", "gradients", ")", ":", "\n", "        ", "\"\"\"\n        Custom loss function.\n\n        :param torch.Tensor inputs: DoubleTensor n_samples-by-n_params\n            containing the points in the full input space.\n        :param torch.Tensor mapped_inputs: DoubleTensor\n            n_samples-by-n_params containing the mapped points in the\n            full input space. They are the result of the forward application.\n        :param torch.Tensor gradients: DoubleTensor n_samples-by-n_params\n            containing the gradient samples wrt the input parameters.\n        \"\"\"", "\n", "# Define the weights and bias of the inverse network", "\n", "for", "i", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "name_y", "=", "'fc{}_y'", ".", "format", "(", "i", "+", "1", ")", "\n", "name_z", "=", "'fc{}_z'", ".", "format", "(", "i", "+", "1", ")", "\n", "\n", "inv_name_y_weight", "=", "'inv_fc{}_y_weight'", ".", "format", "(", "i", "+", "1", ")", "\n", "inv_name_z_weight", "=", "'inv_fc{}_z_weight'", ".", "format", "(", "i", "+", "1", ")", "\n", "vars", "(", ")", "[", "inv_name_y_weight", "]", "=", "getattr", "(", "self", ",", "name_y", ")", ".", "weight", "\n", "vars", "(", ")", "[", "inv_name_z_weight", "]", "=", "getattr", "(", "self", ",", "name_z", ")", ".", "weight", "\n", "\n", "inv_name_y_bias", "=", "'inv_fc{}_y_bias'", ".", "format", "(", "i", "+", "1", ")", "\n", "inv_name_z_bias", "=", "'inv_fc{}_z_bias'", ".", "format", "(", "i", "+", "1", ")", "\n", "vars", "(", ")", "[", "inv_name_y_bias", "]", "=", "getattr", "(", "self", ",", "name_y", ")", ".", "bias", "\n", "vars", "(", ")", "[", "inv_name_z_bias", "]", "=", "getattr", "(", "self", ",", "name_z", ")", ".", "bias", "\n", "\n", "", "Jacob", "=", "torch", ".", "empty", "(", "inputs", ".", "size", "(", ")", "[", "0", "]", ",", "2", "*", "self", ".", "n_params", ",", "\n", "2", "*", "self", ".", "n_params", ")", "\n", "\n", "for", "j", "in", "range", "(", "2", "*", "self", ".", "n_params", ")", ":", "\n", "            ", "output_dy", "=", "torch", ".", "clone", "(", "mapped_inputs", ")", "\n", "output_dy", "[", ":", ",", "j", "]", "+=", "0.001", "\n", "\n", "bb", "=", "torch", ".", "split", "(", "output_dy", ",", "self", ".", "n_params", ",", "dim", "=", "1", ")", "\n", "var_y0", "=", "'var{}_y'", ".", "format", "(", "self", ".", "n_layers", "-", "1", ")", "\n", "var_z0", "=", "'var{}_z'", ".", "format", "(", "self", ".", "n_layers", "-", "1", ")", "\n", "vars", "(", ")", "[", "var_y0", "]", "=", "bb", "[", "0", "]", "\n", "vars", "(", ")", "[", "var_z0", "]", "=", "bb", "[", "1", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_layers", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "                ", "inv_name_y_weight", "=", "'inv_fc{}_y_weight'", ".", "format", "(", "i", "+", "1", ")", "\n", "inv_name_z_weight", "=", "'inv_fc{}_z_weight'", ".", "format", "(", "i", "+", "1", ")", "\n", "inv_name_y_bias", "=", "'inv_fc{}_y_bias'", ".", "format", "(", "i", "+", "1", ")", "\n", "inv_name_z_bias", "=", "'inv_fc{}_z_bias'", ".", "format", "(", "i", "+", "1", ")", "\n", "var_y0", "=", "'var{}_y'", ".", "format", "(", "i", ")", "\n", "var_z0", "=", "'var{}_z'", ".", "format", "(", "i", ")", "\n", "var_y1", "=", "'var{}_y'", ".", "format", "(", "i", "-", "1", ")", "\n", "var_z1", "=", "'var{}_z'", ".", "format", "(", "i", "-", "1", ")", "\n", "\n", "sig_z", "=", "torch", ".", "tanh", "(", "\n", "torch", ".", "add", "(", "\n", "torch", ".", "matmul", "(", "vars", "(", ")", "[", "inv_name_z_weight", "]", ",", "\n", "torch", ".", "unsqueeze", "(", "vars", "(", ")", "[", "var_y0", "]", ",", "2", ")", ")", ",", "\n", "torch", ".", "unsqueeze", "(", "vars", "(", ")", "[", "inv_name_z_bias", "]", ",", "1", ")", ")", ")", "\n", "K_z", "=", "torch", ".", "transpose", "(", "vars", "(", ")", "[", "inv_name_z_weight", "]", ",", "0", ",", "1", ")", "\n", "vars", "(", ")", "[", "var_z1", "]", "=", "torch", ".", "add", "(", "\n", "vars", "(", ")", "[", "var_z0", "]", ",", "\n", "1", "*", "self", ".", "dh", "*", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "K_z", ",", "sig_z", ")", ",", "2", ")", ")", "\n", "\n", "sig_y", "=", "torch", ".", "tanh", "(", "\n", "torch", ".", "add", "(", "\n", "torch", ".", "matmul", "(", "vars", "(", ")", "[", "inv_name_y_weight", "]", ",", "\n", "torch", ".", "unsqueeze", "(", "vars", "(", ")", "[", "var_z1", "]", ",", "2", ")", ")", ",", "\n", "torch", ".", "unsqueeze", "(", "vars", "(", ")", "[", "inv_name_y_bias", "]", ",", "1", ")", ")", ")", "\n", "K_y", "=", "torch", ".", "transpose", "(", "vars", "(", ")", "[", "inv_name_y_weight", "]", ",", "0", ",", "1", ")", "\n", "vars", "(", ")", "[", "var_y1", "]", "=", "torch", ".", "add", "(", "\n", "vars", "(", ")", "[", "var_y0", "]", ",", "\n", "-", "1", "*", "self", ".", "dh", "*", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "K_y", ",", "sig_y", ")", ",", "2", ")", ")", "\n", "\n", "", "dx", "=", "torch", ".", "cat", "(", "(", "vars", "(", ")", "[", "var_y1", "]", ",", "vars", "(", ")", "[", "var_z1", "]", ")", ",", "1", ")", "\n", "\n", "# # Test the invertibility", "\n", "# # Warning: it is computational intense", "\n", "# if torch.mean(torch.abs(torch.add(-1 * output_dy,", "\n", "#                                   self.forward(dx)))) > 1e-5:", "\n", "#     print('Something is wrong in Jacobian computation')", "\n", "#     print(torch.mean(", "\n", "#         torch.abs(torch.add(-1 * output_dy, self.forward(dx)))))", "\n", "\n", "for", "k", "in", "range", "(", "2", "*", "self", ".", "n_params", ")", ":", "\n", "                ", "Jacob", "[", ":", ",", "j", ",", "k", "]", "=", "torch", ".", "add", "(", "dx", "[", ":", ",", "k", "]", ",", "-", "1", "*", "inputs", "[", ":", ",", "k", "]", ")", "\n", "\n", "", "", "JJ2", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "Jacob", ",", "Jacob", ")", ",", "2", ")", ")", ",", "\n", "2", ")", "\n", "JJJ", "=", "torch", ".", "div", "(", "Jacob", ",", "JJ2", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "2", "*", "self", ".", "n_params", ")", ")", "\n", "ex_data", "=", "torch", ".", "unsqueeze", "(", "gradients", ",", "2", ")", "\n", "loss_weights", "=", "torch", ".", "clone", "(", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "JJJ", ",", "ex_data", ")", ",", "2", ")", ")", "\n", "# anisotropy weigths", "\n", "loss_weights", "[", ":", ",", "self", ".", "omega", "]", "=", "0.0", "\n", "loss_anisotropy", "=", "torch", ".", "sqrt", "(", "\n", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "loss_weights", ",", "loss_weights", ")", ",", "1", ")", ")", ")", "\n", "\n", "J_det", "=", "torch", ".", "empty", "(", "inputs", ".", "shape", "[", "0", "]", ")", "\n", "for", "k", "in", "range", "(", "inputs", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "eee", "=", "torch", ".", "svd", "(", "JJJ", "[", "k", ",", ":", ",", ":", "]", ")", "[", "1", "]", "\n", "J_det", "[", "k", "]", "=", "torch", ".", "prod", "(", "eee", ")", "\n", "", "loss_det", "=", "torch", ".", "abs", "(", "torch", ".", "prod", "(", "J_det", "-", "1.0", ")", ")", "\n", "return", "loss_anisotropy", "+", "loss_det", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.BackwardNet.__init__": [[483, 494], ["torch.Module.__init__", "range", "setattr", "setattr", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.classproperty.__init__"], ["def", "__init__", "(", "self", ",", "n_params", ",", "n_layers", ",", "dh", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_params", "=", "n_params", "//", "2", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "self", ".", "dh", "=", "dh", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'fc{}_y'", ".", "format", "(", "i", "+", "1", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "n_params", ",", "2", "*", "self", ".", "n_params", ")", ")", "\n", "setattr", "(", "self", ",", "'fc{}_z'", ".", "format", "(", "i", "+", "1", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "n_params", ",", "2", "*", "self", ".", "n_params", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.BackwardNet.forward": [[495, 522], ["torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "getattr", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "getattr", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "getattr", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "getattr", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "mapped_inputs", ")", ":", "\n", "        ", "\"\"\"\n        Maps transformed inputs to original inputs.\n\n        :param torch.Tensor mapped_inputs: DoubleTensor n_samples-by-n_params\n            containing the nonlinear transformed inputs.\n        :return inputs: DoubleTensor n_samples-by-n_params with\n            the points in the original full input space.\n        :rtype: torch.Tensor\n        \"\"\"", "\n", "y", ",", "z", "=", "torch", ".", "split", "(", "mapped_inputs", ",", "self", ".", "n_params", ",", "dim", "=", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_layers", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "            ", "name_y", "=", "'fc{}_y'", ".", "format", "(", "i", "+", "1", ")", "\n", "name_z", "=", "'fc{}_z'", ".", "format", "(", "i", "+", "1", ")", "\n", "\n", "sig_z", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "tanh", "(", "getattr", "(", "self", ",", "name_z", ")", "(", "y", ")", ")", ",", "2", ")", "\n", "K_z", "=", "torch", ".", "transpose", "(", "getattr", "(", "self", ",", "name_z", ")", ".", "weight", ",", "0", ",", "1", ")", "\n", "z", "=", "torch", ".", "add", "(", "\n", "z", ",", "1", "*", "self", ".", "dh", "*", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "K_z", ",", "sig_z", ")", ",", "2", ")", ")", "\n", "\n", "sig_y", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "tanh", "(", "getattr", "(", "self", ",", "name_y", ")", "(", "z", ")", ")", ",", "2", ")", "\n", "K_y", "=", "torch", ".", "transpose", "(", "getattr", "(", "self", ",", "name_y", ")", ".", "weight", ",", "0", ",", "1", ")", "\n", "y", "=", "torch", ".", "add", "(", "\n", "y", ",", "-", "1", "*", "self", ".", "dh", "*", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "K_y", ",", "sig_y", ")", ",", "2", ")", ")", "\n", "\n", "", "return", "torch", ".", "cat", "(", "(", "y", ",", "z", ")", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.__init__": [[41, 58], ["callable", "isinstance", "projection_factory.ProjectionFactory", "TypeError"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "distr", ",", "bias", ",", "input_dim", ",", "n_features", ",", "params", ",", "sigma_f", ")", ":", "\n", "        ", "if", "callable", "(", "distr", ")", ":", "\n", "            ", "self", ".", "distr", "=", "distr", "\n", "", "elif", "isinstance", "(", "distr", ",", "str", ")", ":", "\n", "            ", "self", ".", "distr", "=", "ProjectionFactory", "(", "distr", ")", "\n", "", "else", ":", "\n", "            ", "raise", "TypeError", "(", "'`distr` is not valid.'", ")", "\n", "\n", "", "self", ".", "bias", "=", "bias", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "n_features", "=", "n_features", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "sigma_f", "=", "sigma_f", "\n", "self", ".", "fmap", "=", "rff_map", "\n", "self", ".", "fmap_jac", "=", "rff_jac", "\n", "\n", "self", ".", "_pr_matrix", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.pr_matrix": [[59, 68], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "pr_matrix", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Get the projection matrix.\n\n        :return: the projection matrix.\n        :rtype: numpy.ndarray\n        \"\"\"", "\n", "return", "self", ".", "_pr_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap._compute_pr_matrix": [[69, 77], ["feature_map.FeatureMap.distr"], "methods", ["None"], ["", "def", "_compute_pr_matrix", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Sample the projection matrixx from the spectral distribution.\n\n        :return: the projection matrix.\n        :rtype: numpy.ndarray\n        \"\"\"", "\n", "return", "self", ".", "distr", "(", "self", ".", "input_dim", ",", "self", ".", "n_features", ",", "self", ".", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.compute_fmap": [[78, 90], ["feature_map.FeatureMap.fmap", "feature_map.FeatureMap._compute_pr_matrix"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap._compute_pr_matrix"], ["", "def", "compute_fmap", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Evaluate the feature map at inputs.\n\n        :param numpy.ndarray inputs: the inputs to project on the RKHS.\n        :return: the n_features dimensional projection of the inputs.\n        :rtype: numpy.ndarray\n        \"\"\"", "\n", "if", "self", ".", "_pr_matrix", "is", "None", ":", "\n", "            ", "self", ".", "_pr_matrix", "=", "self", ".", "_compute_pr_matrix", "(", ")", "\n", "", "return", "self", ".", "fmap", "(", "inputs", ",", "self", ".", "_pr_matrix", ",", "self", ".", "bias", ",", "self", ".", "n_features", ",", "\n", "self", ".", "sigma_f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.compute_fmap_jac": [[91, 105], ["feature_map.FeatureMap.fmap_jac", "feature_map.FeatureMap._compute_pr_matrix"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap._compute_pr_matrix"], ["", "def", "compute_fmap_jac", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Evaluate the Jacobian matrix of feature map at inputs.\n\n        :param numpy.ndarray inputs: the inputs at which compute the Jacobian\n            matrix of the feature map.\n        :return: the n_features-by-input_dim dimensional Jacobian of the\n            feature map at the inputs.\n        :rtype: numpy.ndarray\n        \"\"\"", "\n", "if", "self", ".", "_pr_matrix", "is", "None", ":", "\n", "            ", "self", ".", "_pr_matrix", "=", "self", ".", "_compute_pr_matrix", "(", ")", "\n", "", "return", "self", ".", "fmap_jac", "(", "inputs", ",", "self", ".", "_pr_matrix", ",", "self", ".", "bias", ",", "\n", "self", ".", "n_features", ",", "self", ".", "sigma_f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.tune_pr_matrix": [[106, 231], ["numpy.zeros", "scipy.optimize.brute", "numpy.save", "len", "functools.partial", "GPyOpt.methods.BayesianOptimization", "GPyOpt.methods.BayesianOptimization.run_optimization", "ValueError", "scipy.optimize.dual_annealing", "tuple", "enumerate", "fn_args.values", "str", "tuple", "fn_args.values"], "methods", ["None"], ["", "def", "tune_pr_matrix", "(", "self", ",", "\n", "func", ",", "\n", "bounds", ",", "\n", "method", "=", "None", ",", "\n", "maxiter", "=", "50", ",", "\n", "save_file", "=", "False", ",", "\n", "fn_args", "=", "{", "}", ")", ":", "\n", "        ", "\"\"\"\n        Tune the parameters of the spectral distribution. Three methods are\n        available: log-grid-search (brute), annealing (dual_annealing) and\n        Bayesian stochastic optimization (bso) from GpyOpt. The default object\n        function to optimize is athena.utils.average_rrmse, which uses a\n        cross-validation procedure from athena.utils, see Example and tutorial 06_kernel-based_AS.\n\n        :Example:\n        >>> from athena.kas import KernelActiveSubspaces\n        >>> from athena.feature_map import FeatureMap\n        >>> from athena.projection_factory import ProjectionFactory\n        >>> from athena.utils import CrossValidation, average_rrmse\n        >>> input_dim, output_dim, n_samples = 2, 1, 30\n        >>> n_features, n_params = 10, 1\n        >>> xx = np.ones((n_samples, input_dim))\n        >>> f = np.ones((n_samples, output_dim))\n        >>> df = np.ones((n_samples, output_dim, input_dim))\n        >>> fm = FeatureMap(distr='laplace',\n                            bias=np.random.uniform(0, 2 * np.pi, n_features),\n                            input_dim=input_dim,\n                            n_features=n_features,\n                            params=np.zeros(n_params),\n                            sigma_f=f.var())\n        >>> kss = KernelActiveSubspaces(feature_map=fm, dim=1, n_features=n_features)\n        >>> csv = CrossValidation(inputs=xx,\n                                outputs=f.reshape(-1, 1),\n                                gradients=df.reshape(n_samples, output_dim, input_dim),\n                                folds=3,\n                                subspace=kss)\n        >>> best = fm.tune_pr_matrix(func=average_rrmse,\n                                    bounds=[slice(-2, 1, 0.2) for i in range(n_params)],\n                                    args=(csv, ),\n                                    method='bso',\n                                    maxiter=20,\n                                    save_file=False)\n\n        :param callable func: the objective function to be minimized.\n            Must be in the form f(x, *args), where x is the argument in the\n            form of a 1-D array and args is a tuple of any additional fixed\n            parameters needed to completely specify the function.\n        :param tuple bounds: each component of the bounds tuple must be a\n            slice tuple of the form (low, high, step). It defines bounds for\n            the objective function parameter in a logarithmic scale. Step will\n            be ignored for 'dual_annealing' method.\n        :param tuple args: any additional fixed parameters needed to\n            completely specify the objective function.\n        :param str method: method used to optimize the objective function.\n            Possible values are 'brute', or 'dual_annealing'.\n            Default value is None, and the choice is made automatically wrt\n            the dimension of `self.params`. If the dimension is less than 4\n            brute force is used, otherwise a traditional Generalized\n            Simulated Annealing will be performed with no local search\n            strategy applied.\n        :param int maxiter: the maximum number of global search iterations.\n            Default value is 50.\n        :param bool save_file: True to save the optimal projection matrix\n        :param dict fn_args: dictionary of arguments passed to func.\n        :raises: ValueError\n        :return: list that records the best score and the best projection\n            matrix. The initial values are 0.8 and a n_features-by-input_dim\n            numpy.ndarray of zeros.\n        :rtype: list\n        \"\"\"", "\n", "best", "=", "[", "0.8", ",", "np", ".", "zeros", "(", "(", "self", ".", "n_features", ",", "self", ".", "input_dim", ")", ")", "]", "\n", "\n", "if", "method", "is", "None", ":", "\n", "            ", "if", "len", "(", "self", ".", "params", ")", "<", "4", ":", "\n", "                ", "method", "=", "'brute'", "\n", "", "else", ":", "\n", "                ", "method", "=", "'dual_annealing'", "\n", "\n", "", "", "if", "method", "==", "'brute'", ":", "\n", "            ", "self", ".", "params", "=", "brute", "(", "func", "=", "func", ",", "\n", "ranges", "=", "bounds", ",", "\n", "args", "=", "(", "\n", "best", ",", "\n", "*", "tuple", "(", "fn_args", ".", "values", "(", ")", ")", ",", "\n", ")", ",", "\n", "finish", "=", "None", ")", "\n", "", "elif", "method", "==", "'dual_annealing'", ":", "\n", "            ", "bounds_list", "=", "[", "[", "bound", ".", "start", ",", "bound", ".", "stop", "]", "for", "bound", "in", "bounds", "]", "\n", "self", ".", "params", "=", "10", "**", "dual_annealing", "(", "func", "=", "func", ",", "\n", "bounds", "=", "bounds_list", ",", "\n", "args", "=", "(", "\n", "best", ",", "\n", "*", "tuple", "(", "fn_args", ".", "values", "(", ")", ")", ",", "\n", ")", ",", "\n", "maxiter", "=", "maxiter", ",", "\n", "no_local_search", "=", "False", ")", ".", "x", "\n", "", "elif", "method", "==", "'bso'", ":", "\n", "            ", "bounds", "=", "[", "{", "\n", "'name'", ":", "'var_'", "+", "str", "(", "i", ")", ",", "\n", "'type'", ":", "'continuous'", ",", "\n", "'domain'", ":", "[", "bound", ".", "start", ",", "bound", ".", "stop", "]", "\n", "}", "for", "i", ",", "bound", "in", "enumerate", "(", "bounds", ")", "]", "\n", "func_obj", "=", "partial", "(", "func", ",", "best", "=", "best", ",", "**", "fn_args", ")", "\n", "bopt", "=", "GPyOpt", ".", "methods", ".", "BayesianOptimization", "(", "func_obj", ",", "\n", "domain", "=", "bounds", ",", "\n", "model_type", "=", "'GP'", ",", "\n", "acquisition_type", "=", "'EI'", ",", "\n", "exact_feval", "=", "True", ")", "\n", "bopt", ".", "run_optimization", "(", "max_iter", "=", "maxiter", ",", "\n", "max_time", "=", "3600", ",", "\n", "eps", "=", "1e-16", ",", "\n", "verbosity", "=", "False", ")", "\n", "self", ".", "params", "=", "10", "**", "bopt", ".", "x_opt", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Method argument can only be 'brute' or 'dual_annealing' or 'bso'.\"", "\n", ")", "\n", "\n", "", "self", ".", "_pr_matrix", "=", "best", "[", "1", "]", "\n", "self", ".", "params", "=", "best", "[", "0", "]", "\n", "\n", "if", "save_file", ":", "\n", "            ", "np", ".", "save", "(", "\"opt_pr_matrix\"", ",", "best", "[", "1", "]", ")", "\n", "\n", "", "return", "best", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.rff_map": [[233, 250], ["numpy.cos", "numpy.sqrt", "numpy.dot", "bias.reshape"], "function", ["None"], ["", "", "def", "rff_map", "(", "inputs", ",", "pr_matrix", ",", "bias", ",", "n_features", ",", "sigma_f", ")", ":", "\n", "    ", "\"\"\"\n    Random Fourier Features map. It can be vectorized for inputs of shape n_samples-by-input_dim.\n\n    :param numpy.ndarray inputs: input_dim dimensional inputs to project to the RKHS.\n    :param numpy.ndarray pr_matrix: n_features-by-input_dim projection matrix,\n        whose rows are sampled from the spectral distribution.\n    :param numpy.ndarray bias: n_features dimensional bias. It is sampled from a\n        Unifrom distribution on the interval [0, 2*PI].\n    :param int n_features: dimension of the RKHS\n    :param int sigma_f: multiplicative term representing the empirical variance\n        the outptus.\n    :return: n_features dimensional projection of the inputs to the RKHS\n    :rtype: numpy.ndarray\n    \"\"\"", "\n", "return", "np", ".", "sqrt", "(", "2", "/", "n_features", ")", "*", "sigma_f", "*", "np", ".", "cos", "(", "\n", "np", ".", "dot", "(", "inputs", ",", "pr_matrix", ".", "T", ")", "+", "bias", ".", "reshape", "(", "1", ",", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.rff_jac": [[252, 270], ["numpy.sin", "numpy.sqrt", "numpy.dot"], "function", ["None"], ["", "def", "rff_jac", "(", "inputs", ",", "pr_matrix", ",", "bias", ",", "n_features", ",", "sigma_f", ")", ":", "\n", "    ", "\"\"\"\n    Random Fourier Features map's Jacobian. It can be vectorized for inputs of shape n_samples-by-input_dim.\n\n    :param numpy.ndarray inputs: input_dim dimensional inputs to project to the RKHS.\n    :param numpy.ndarray pr_matrix: n_features-by-input_dim projection matrix,\n        whose rows are sampled from the spectral distribution.\n    :param numpy.ndarray bias: n_features dimensional bias. It is sampled from a\n        Unifrom distribution on the interval [0, 2*PI].\n    :param int n_features: dimension of the RKHS\n    :param int sigma_f: multiplicative term representing the empirical variance\n        the outptus.\n    :return: n_features-by-input_dim dimensional projection of the inputs to the RKHS\n    :rtype: numpy.ndarray\n    \"\"\"", "\n", "return", "(", "np", ".", "sqrt", "(", "2", "/", "n_features", ")", "*", "sigma_f", "*", "\n", "(", "-", "1", ")", "*", "np", ".", "sin", "(", "np", ".", "dot", "(", "inputs", ",", "pr_matrix", ".", "T", ")", "+", "bias", ")", ")", ".", "reshape", "(", "\n", "inputs", ".", "shape", "[", "0", "]", ",", "n_features", ",", "1", ")", "*", "pr_matrix", "\n", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.kas.KernelActiveSubspaces.__init__": [[57, 68], ["subspaces.Subspaces.__init__"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.classproperty.__init__"], ["def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "feature_map", "=", "None", ",", "\n", "n_features", "=", "None", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dim", ",", "method", ",", "n_boot", ")", "\n", "self", ".", "feature_map", "=", "feature_map", "\n", "self", ".", "n_features", "=", "n_features", "\n", "self", ".", "features", "=", "None", "\n", "self", ".", "pseudo_gradients", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.kas.KernelActiveSubspaces.fit": [[69, 147], ["kas.KernelActiveSubspaces._reparametrize", "kas.KernelActiveSubspaces._build_decompose_cov_matrix", "kas.KernelActiveSubspaces._partition", "len", "gradients.reshape.reshape.reshape", "utils.initialize_weights", "feature_map.FeatureMap", "numpy.diag", "TypeError", "utils.local_linear_gradients", "len", "numpy.ones", "kas.KernelActiveSubspaces._compute_bootstrap_ranges", "ValueError", "TypeError", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.kas.KernelActiveSubspaces._reparametrize", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._build_decompose_cov_matrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.initialize_weights", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.local_linear_gradients", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._compute_bootstrap_ranges"], ["", "def", "fit", "(", "self", ",", "\n", "inputs", "=", "None", ",", "\n", "outputs", "=", "None", ",", "\n", "gradients", "=", "None", ",", "\n", "weights", "=", "None", ",", "\n", "metric", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Compute the kernel based active subspaces given the inputs and the\n        gradients of the model function wrt the input parameters, or given the\n        input/outputs couples. Only two methods are available: 'exact' and\n        'local'.\n\n        :param numpy.ndarray inputs: array n_samples-by-n_params containing\n            the points in the original parameter space.\n        :param numpy.ndarray outputs: array n_samples-by-1 containing\n            the values of the model function.\n        :param numpy.ndarray gradients: array n_samples-by-n_params containing\n            the gradient samples oriented as rows.\n        :param numpy.ndarray weights: n_samples-by-1 weight vector, corresponds\n            to numerical quadrature rule used to estimate matrix whose\n            eigenspaces define the active subspace.\n        :param numpy.ndarray metric: metric matrix output_dim-by-output-dim for\n            vectorial active subspaces.\n        :raises: TypeError, ValueError\n        \"\"\"", "\n", "if", "self", ".", "method", "==", "'exact'", ":", "\n", "            ", "if", "gradients", "is", "None", "or", "inputs", "is", "None", ":", "\n", "                ", "raise", "TypeError", "(", "'gradients or inputs argument is None.'", ")", "\n", "\n", "# estimate active subspace with local linear models.", "\n", "", "", "elif", "self", ".", "method", "==", "'local'", ":", "\n", "            ", "if", "inputs", "is", "None", "or", "outputs", "is", "None", ":", "\n", "                ", "raise", "TypeError", "(", "'inputs or outputs argument is None.'", ")", "\n", "", "gradients", ",", "inputs", "=", "local_linear_gradients", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "weights", "=", "weights", ")", "\n", "\n", "", "if", "len", "(", "gradients", ".", "shape", ")", "==", "2", ":", "\n", "            ", "gradients", "=", "gradients", ".", "reshape", "(", "gradients", ".", "shape", "[", "0", "]", ",", "1", ",", "\n", "gradients", ".", "shape", "[", "1", "]", ")", "\n", "\n", "", "if", "weights", "is", "None", "or", "self", ".", "method", "==", "'local'", ":", "\n", "# use the new gradients to compute the weights, otherwise dimension", "\n", "# mismatch accours.", "\n", "            ", "weights", "=", "initialize_weights", "(", "gradients", ")", "\n", "\n", "", "if", "self", ".", "n_features", "is", "None", ":", "\n", "            ", "self", ".", "n_features", "=", "inputs", ".", "shape", "[", "1", "]", "\n", "\n", "", "if", "self", ".", "feature_map", "is", "None", ":", "\n", "# default spectral measure is Gaussian", "\n", "            ", "self", ".", "feature_map", "=", "FeatureMap", "(", "distr", "=", "'multivariate_normal'", ",", "\n", "bias", "=", "np", ".", "ones", "(", "(", "1", ",", "self", ".", "n_features", ")", ")", ",", "\n", "input_dim", "=", "inputs", ".", "shape", "[", "1", "]", ",", "\n", "n_features", "=", "self", ".", "n_features", ",", "\n", "params", "=", "np", ".", "ones", "(", "inputs", ".", "shape", "[", "1", "]", ")", ",", "\n", "sigma_f", "=", "1", ")", "\n", "\n", "", "if", "len", "(", "gradients", ".", "shape", ")", "==", "3", "and", "metric", "is", "None", ":", "\n", "            ", "metric", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "gradients", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "", "self", ".", "pseudo_gradients", ",", "self", ".", "features", "=", "self", ".", "_reparametrize", "(", "\n", "inputs", ",", "gradients", ")", "\n", "\n", "self", ".", "evals", ",", "self", ".", "evects", "=", "self", ".", "_build_decompose_cov_matrix", "(", "\n", "self", ".", "pseudo_gradients", ",", "weights", ",", "metric", ")", "\n", "\n", "if", "self", ".", "n_boot", ":", "\n", "            ", "if", "self", ".", "n_boot", "<=", "50", ":", "\n", "                ", "self", ".", "_compute_bootstrap_ranges", "(", "gradients", "=", "self", ".", "pseudo_gradients", ",", "\n", "weights", "=", "weights", ",", "\n", "metric", "=", "metric", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'n_boot is too high for the bootstrap method applied to kas'", "\n", ")", "\n", "\n", "", "", "self", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.kas.KernelActiveSubspaces.transform": [[148, 178], ["kas.KernelActiveSubspaces.feature_map.compute_fmap", "TypeError", "numpy.dot", "numpy.dot", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.compute_fmap"], ["", "def", "transform", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Map full variables to active and inactive variables.\n        Points in the original input space are mapped to the active and\n        inactive non-linear subspace.\n\n        :param numpy.ndarray inputs: array n_samples-by-n_params containing\n            the points in the original parameter space.\n        :return: array n_samples-by-active_dim containing the mapped active\n            variables;\n            array n_samples-by-inactive_dim containing the mapped inactive\n            variables.\n        :rtype: numpy.ndarray, numpy.ndarray\n        :raises: TypeError\n        \"\"\"", "\n", "features", "=", "self", ".", "feature_map", ".", "compute_fmap", "(", "inputs", ")", "\n", "\n", "if", "self", ".", "W1", "is", "None", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "'the kernel-based active subspace has not been evaluated.'", ")", "\n", "\n", "# allow evaluation of active variables only", "\n", "", "if", "self", ".", "W2", "is", "None", ":", "\n", "            ", "active", "=", "np", ".", "dot", "(", "features", ",", "self", ".", "W1", ")", "\n", "inactive", "=", "None", "\n", "", "else", ":", "\n", "            ", "active", "=", "np", ".", "dot", "(", "features", ",", "self", ".", "W1", ")", "\n", "inactive", "=", "np", ".", "dot", "(", "features", ",", "self", ".", "W2", ")", "\n", "\n", "", "return", "active", ",", "inactive", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.kas.KernelActiveSubspaces.inverse_transform": [[179, 181], ["None"], "methods", ["None"], ["", "def", "inverse_transform", "(", "self", ",", "reduced_inputs", ",", "n_points", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.kas.KernelActiveSubspaces._reparametrize": [[182, 212], ["kas.KernelActiveSubspaces.feature_map.compute_fmap_jac", "numpy.array", "kas.KernelActiveSubspaces.feature_map.compute_fmap", "range", "numpy.linalg.lstsq"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.compute_fmap_jac", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.compute_fmap"], ["", "def", "_reparametrize", "(", "self", ",", "inputs", ",", "gradients", ")", ":", "\n", "        ", "\"\"\"\n        Computes the pseudo-gradients solving an overdetermined linear system.\n\n        :param numpy.ndarray inputs: array n_samples-by-n_params containing\n            the points in the original parameter space.\n        :param numpy.ndarray gradients: array n_samples-by-n_params containing\n            the gradient samples oriented as rows.\n        :return: array n_samples-by-output_dim-by-n_params matrix containing\n            the pseudo gradients corresponding to each sample;\n            array n_samples-by-n_features containing the image of the inputs\n            in the feature space.\n        :rtype: numpy.ndarray, numpy.ndarray\n        \"\"\"", "\n", "n_samples", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "\n", "# Initialize Jacobian for each input", "\n", "jacobian", "=", "self", ".", "feature_map", ".", "compute_fmap_jac", "(", "inputs", ")", "\n", "\n", "# Compute pseudo gradients", "\n", "pseudo_gradients", "=", "np", ".", "array", "(", "[", "\n", "np", ".", "linalg", ".", "lstsq", "(", "jacobian", "[", "i", ",", ":", ",", ":", "]", ".", "T", ",", "\n", "gradients", "[", "i", ",", ":", ",", ":", "]", ".", "T", ",", "\n", "rcond", "=", "None", ")", "[", "0", "]", ".", "T", "for", "i", "in", "range", "(", "n_samples", ")", "\n", "]", ")", "\n", "\n", "# Compute features", "\n", "features", "=", "self", ".", "feature_map", ".", "compute_fmap", "(", "inputs", ")", "\n", "\n", "return", "pseudo_gradients", ",", "features", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.__init__": [[40, 50], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dim", ",", "method", "=", "'exact'", ",", "n_boot", "=", "100", ")", ":", "\n", "        ", "self", ".", "dim", "=", "dim", "\n", "self", ".", "method", "=", "method", "\n", "self", ".", "n_boot", "=", "n_boot", "\n", "self", ".", "W1", "=", "None", "\n", "self", ".", "W2", "=", "None", "\n", "self", ".", "evals", "=", "None", "\n", "self", ".", "evects", "=", "None", "\n", "self", ".", "evals_br", "=", "None", "\n", "self", ".", "subs_br", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._build_decompose_cov_matrix": [[51, 98], ["numpy.squeeze", "subspaces.Subspaces._check_rsvd", "numpy.array", "utils.sort_eigpairs", "numpy.sum", "numpy.squeeze", "numpy.sqrt().reshape", "sklearn.utils.extmath.randomized_svd", "numpy.linalg.svd", "numpy.sqrt", "numpy.dot", "range", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._check_rsvd", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.sort_eigpairs"], ["", "def", "_build_decompose_cov_matrix", "(", "self", ",", "\n", "gradients", "=", "None", ",", "\n", "weights", "=", "None", ",", "\n", "metric", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Build and decompose the covariance matrix of the gradients.\n\n        :param numpy.ndarray gradients: n_samples-by-n_params matrix containing the\n            gradient samples oriented as rows.\n        :param numpy.ndarray weights: n_samples-by-1 weight vector, corresponds\n            to numerical quadrature rule used to estimate matrix whose eigenspaces\n            define the active subspace.\n        :param numpy.ndarray metric: metric matrix output_dim-by-output-dim for\n            vectorial active subspaces.\n\n        :return: the sorted eigenvalues, and the corresponding eigenvectors.\n        :rtype: numpy.ndarray, numpy.ndarray\n        \"\"\"", "\n", "if", "self", ".", "method", "==", "'exact'", "or", "self", ".", "method", "==", "'local'", ":", "\n", "            ", "if", "metric", "is", "not", "None", ":", "\n", "                ", "cov_matrix", "=", "np", ".", "array", "(", "\n", "np", ".", "sum", "(", "[", "\n", "weights", "[", "i", ",", "0", "]", "*", "\n", "np", ".", "dot", "(", "gradients", "[", "i", ",", ":", ",", ":", "]", ".", "T", ",", "\n", "np", ".", "dot", "(", "metric", ",", "gradients", "[", "i", ",", ":", ",", ":", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "gradients", ".", "shape", "[", "0", "]", ")", "\n", "]", ",", "\n", "axis", "=", "0", ")", ")", "\n", "evals", ",", "evects", "=", "sort_eigpairs", "(", "cov_matrix", ")", "\n", "return", "np", ".", "squeeze", "(", "evals", ")", ",", "evects", "\n", "\n", "", "X", "=", "np", ".", "squeeze", "(", "gradients", "*", "np", ".", "sqrt", "(", "weights", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", "\n", "n_samples", ",", "n_pars", "=", "X", ".", "shape", "\n", "\n", "if", "self", ".", "_check_rsvd", "(", "n_samples", ",", "n_pars", ",", "self", ".", "dim", ")", ":", "\n", "                ", "singular", ",", "evects", "=", "randomized_svd", "(", "\n", "M", "=", "X", ",", "\n", "n_components", "=", "self", ".", "dim", ",", "\n", "n_oversamples", "=", "10", ",", "\n", "n_iter", "=", "'auto'", ",", "\n", "power_iteration_normalizer", "=", "'auto'", ",", "\n", "transpose", "=", "'auto'", ")", "[", "1", ":", "]", "\n", "", "else", ":", "\n", "                ", "singular", ",", "evects", "=", "np", ".", "linalg", ".", "svd", "(", "X", ",", "full_matrices", "=", "False", ")", "[", "1", ":", "]", "\n", "\n", "", "evals", "=", "singular", "**", "2", "\n", "return", "evals", ",", "evects", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._compute_bootstrap_ranges": [[99, 155], ["numpy.zeros", "numpy.zeros", "range", "numpy.hstack", "numpy.hstack", "len", "subspaces.Subspaces._check_rsvd", "subspaces.Subspaces._bootstrap_replicate", "subspaces.Subspaces._build_decompose_cov_matrix", "range", "min", "numpy.dot", "numpy.linalg.norm", "numpy.amin().reshape", "numpy.amax().reshape", "numpy.amin().reshape", "numpy.mean().reshape", "numpy.amax().reshape", "numpy.amin", "numpy.amax", "numpy.amin", "numpy.mean", "numpy.amax"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._check_rsvd", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._build_decompose_cov_matrix"], ["", "", "def", "_compute_bootstrap_ranges", "(", "self", ",", "gradients", ",", "weights", ",", "metric", "=", "None", ")", ":", "\n", "        ", "\"\"\"Compute bootstrap ranges for eigenvalues and subspaces.\n\n        An implementation of the nonparametric bootstrap that we use in\n        conjunction with the subspace estimation methods to estimate the errors\n        in the eigenvalues and subspaces.\n\n        :param numpy.ndarray gradients: n_samples-by-n_params matrix containing\n            the gradient samples oriented as rows.\n        :param numpy.ndarray weights: n_samples-by-1 weight vector, corresponds\n            to numerical quadrature rule used to estimate matrix whose\n            eigenspaces define the active subspace.\n        :param numpy.ndarray metric: metric matrix output_dim-by-output-dim for\n            vectorial active subspaces.\n        :return: array e_br is a m-by-2 matrix, first column contains\n            bootstrap lower bound on eigenvalues, second column contains\n            bootstrap upper bound on eigenvalues; array sub_br is a (m-1)-by-3\n            matrix, first column contains bootstrap lower bound on estimated\n            subspace error, second column contains estimated mean of subspace\n            error (a reasonable subspace error estimate), third column contains\n            estimated upper bound on subspace error.\n        :rtype: numpy.ndarray, numpy.ndarray\n        \"\"\"", "\n", "n_pars", "=", "gradients", ".", "shape", "[", "-", "1", "]", "\n", "n_samples", "=", "gradients", ".", "shape", "[", "0", "]", "\n", "\n", "# randomized_svd is not implemented for vectorial as yet", "\n", "if", "len", "(", "gradients", ".", "shape", ")", "==", "2", ":", "\n", "            ", "if", "self", ".", "_check_rsvd", "(", "n_samples", ",", "n_pars", ",", "self", ".", "dim", ")", ":", "\n", "                ", "range_dim", "=", "self", ".", "dim", "\n", "", "else", ":", "\n", "                ", "range_dim", "=", "min", "(", "n_pars", ",", "n_samples", ")", "\n", "", "", "else", ":", "\n", "            ", "range_dim", "=", "n_pars", "\n", "\n", "", "e_boot", "=", "np", ".", "zeros", "(", "(", "range_dim", ",", "self", ".", "n_boot", ")", ")", "\n", "sub_dist", "=", "np", ".", "zeros", "(", "(", "range_dim", "-", "1", ",", "self", ".", "n_boot", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "n_boot", ")", ":", "\n", "            ", "gradients0", ",", "weights0", "=", "self", ".", "_bootstrap_replicate", "(", "gradients", ",", "weights", ")", "\n", "e0", ",", "W0", "=", "self", ".", "_build_decompose_cov_matrix", "(", "gradients", "=", "gradients0", ",", "\n", "weights", "=", "weights0", ",", "\n", "metric", "=", "metric", ")", "\n", "e_boot", "[", ":", ",", "i", "]", "=", "e0", "\n", "for", "j", "in", "range", "(", "range_dim", "-", "1", ")", ":", "\n", "                ", "range_diff", "=", "np", ".", "dot", "(", "self", ".", "evects", "[", ":", ",", ":", "j", "+", "1", "]", ".", "T", ",", "W0", "[", ":", ",", "j", "+", "1", ":", "]", ")", "\n", "sub_dist", "[", "j", ",", "i", "]", "=", "np", ".", "linalg", ".", "norm", "(", "range_diff", ",", "ord", "=", "2", ")", "\n", "\n", "# bootstrap ranges for the eigenvalues", "\n", "", "", "self", ".", "evals_br", "=", "np", ".", "hstack", "(", "(", "np", ".", "amin", "(", "e_boot", ",", "axis", "=", "1", ")", ".", "reshape", "(", "\n", "(", "range_dim", ",", "1", ")", ")", ",", "np", ".", "amax", "(", "e_boot", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "range_dim", ",", "1", ")", ")", ")", ")", "\n", "# bootstrap ranges and mean for subspace distance", "\n", "self", ".", "subs_br", "=", "np", ".", "hstack", "(", "(", "np", ".", "amin", "(", "sub_dist", ",", "axis", "=", "1", ")", ".", "reshape", "(", "\n", "(", "range_dim", "-", "1", ",", "1", ")", ")", ",", "np", ".", "mean", "(", "sub_dist", ",", "axis", "=", "1", ")", ".", "reshape", "(", "\n", "(", "range_dim", "-", "1", ",", "1", ")", ")", ",", "np", ".", "amax", "(", "sub_dist", ",", "axis", "=", "1", ")", ".", "reshape", "(", "\n", "(", "range_dim", "-", "1", ",", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate": [[156, 179], ["numpy.random.randint", "len", "matrix[].copy", "weights[].copy", "len", "matrix[].copy", "weights[].copy"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_bootstrap_replicate", "(", "matrix", ",", "weights", ")", ":", "\n", "        ", "\"\"\"\n        Return a bootstrap replicate.\n\n        A bootstrap replicate is a sampling-with-replacement strategy from a\n        given data set.\n\n        :param numpy.ndarray matrix: matrix from which will be sampled N rows. N\n            corresponds to the number of rows of weights.\n        :param numpy.ndarray weights: n_samples-by-1 weight vector, corresponds\n            to numerical quadrature rule used to estimate matrix whose\n            eigenspaces define the active subspace.\n        \"\"\"", "\n", "ind", "=", "np", ".", "random", ".", "randint", "(", "weights", ".", "shape", "[", "0", "]", ",", "size", "=", "(", "weights", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "\n", "# matrix has shape 2 if the outputs are scalar and shape 3 if they are", "\n", "# vectorial.", "\n", "if", "len", "(", "matrix", ".", "shape", ")", "==", "2", ":", "\n", "            ", "return", "matrix", "[", "ind", ",", ":", "]", ".", "copy", "(", ")", ",", "weights", "[", "ind", ",", ":", "]", ".", "copy", "(", ")", "\n", "", "elif", "len", "(", "matrix", ".", "shape", ")", "==", "3", ":", "\n", "            ", "return", "matrix", "[", "ind", ",", ":", ",", ":", "]", ".", "copy", "(", ")", ",", "weights", "[", "ind", ",", ":", "]", ".", "copy", "(", ")", "\n", "", "return", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.fit": [[180, 188], ["NotImplementedError"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Abstract method to compute the active subspaces. Not implemented, it has\n        to be implemented in subclasses.\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "\n", "'Subclass must implement abstract method {}.fit'", ".", "format", "(", "\n", "self", ".", "__class__", ".", "__name__", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.transform": [[189, 206], ["NotImplementedError"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Abstract method to map full variables to active and inactive variables.\n\n        Points in the original input space are mapped to the active and inactive\n        subspace.\n\n        :param numpy.ndarray inputs: array n_samples-by-n_params containing the\n            points in the original parameter space.\n        :return: array n_samples-by-active_dim containing the mapped active variables;\n            array n_samples-by-inactive_dim containing the mapped inactive\n            variables.\n        :rtype: numpy.ndarray, numpy.ndarray\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Subclass must implement abstract method '", "\n", "'{}.transform'", ".", "format", "(", "\n", "self", ".", "__class__", ".", "__name__", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.inverse_transform": [[207, 221], ["NotImplementedError"], "methods", ["None"], ["", "def", "inverse_transform", "(", "self", ",", "reduced_inputs", ",", "n_points", ")", ":", "\n", "        ", "\"\"\"\n        Abstract method to find points in full space that map to reduced\n        variable points. Not implemented, it has to be implemented in\n        subclasses.\n\n        :param numpy.ndarray reduced_inputs: n_samples-by-n_params matrix that\n            contains points in the space of active variables.\n        :param int n_points: the number of points in the original parameter\n            space that are returned that map to the given active variables.\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "\n", "'Subclass must implement abstract method {}.inverse_transform'", ".", "\n", "format", "(", "self", ".", "__class__", ".", "__name__", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition": [[222, 250], ["subspaces.Subspaces._set_dim", "isinstance", "TypeError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._set_dim"], ["", "def", "_partition", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Partition the eigenvectors to define the active and inactive subspaces.\n\n        :raises: TypeError, ValueError\n        \"\"\"", "\n", "\n", "self", ".", "dim", "=", "self", ".", "_set_dim", "(", ")", "\n", "\n", "if", "not", "isinstance", "(", "self", ".", "dim", ",", "int", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'dim should be an integer.'", ")", "\n", "\n", "", "if", "self", ".", "dim", "<", "0", "or", "self", ".", "dim", ">", "self", ".", "evects", ".", "shape", "[", "1", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'dim must be positive and less than the dimension of the '", "\n", "' eigenvectors: dim = {}.'", ".", "format", "(", "self", ".", "dim", ")", ")", "\n", "\n", "# allow evaluation of active eigenvectors only", "\n", "", "if", "self", ".", "evects", ".", "shape", "[", "1", "]", "<", "self", ".", "evects", ".", "shape", "[", "0", "]", ":", "\n", "            ", "self", ".", "W1", "=", "self", ".", "evects", "[", ":", ",", ":", "self", ".", "dim", "]", "\n", "self", ".", "W2", "=", "None", "\n", "", "elif", "self", ".", "evects", ".", "shape", "[", "1", "]", "==", "self", ".", "evects", ".", "shape", "[", "0", "]", ":", "\n", "            ", "self", ".", "W1", "=", "self", ".", "evects", "[", ":", ",", ":", "self", ".", "dim", "]", "\n", "self", ".", "W2", "=", "self", ".", "evects", "[", ":", ",", "self", ".", "dim", ":", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'the eigenvectors cannot have dimension less than dim = {}.'", ".", "\n", "format", "(", "self", ".", "dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._set_dim": [[251, 274], ["isinstance", "subspaces.Subspaces._set_dim_spectral_gap", "subspaces.Subspaces._set_dim_residual_energy", "isinstance", "ValueError"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._set_dim_spectral_gap", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._set_dim_residual_energy"], ["", "", "def", "_set_dim", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Set the active subspace dimension based on the spectral gap if self.dim\n        is 0, residual energy if 0<self.dim<1 or manual set of AS dimension if self.dim>=1.\n\n        :raises: ValueError\n        \"\"\"", "\n", "\n", "# spectral gap", "\n", "if", "isinstance", "(", "self", ".", "dim", ",", "int", ")", "and", "self", ".", "dim", "==", "0", ":", "\n", "            ", "dim", "=", "self", ".", "_set_dim_spectral_gap", "(", ")", "\n", "# residual energy", "\n", "", "elif", "self", ".", "dim", ">", "0", "and", "self", ".", "dim", "<", "1", ":", "\n", "            ", "dim", "=", "self", ".", "_set_dim_residual_energy", "(", ")", "\n", "# manual set of AS dimension", "\n", "", "elif", "isinstance", "(", "self", ".", "dim", ",", "int", ")", "and", "self", ".", "dim", ">=", "1", ":", "\n", "            ", "dim", "=", "self", ".", "dim", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The parameter `dim`={} has not a valid value.\"", ".", "format", "(", "self", ".", "dim", ")", "\n", ")", "\n", "\n", "", "return", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._set_dim_spectral_gap": [[275, 288], ["numpy.argmax", "int", "ValueError"], "methods", ["None"], ["", "def", "_set_dim_spectral_gap", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Set the active subspace dimension based on the highest spectral gap of the ordered eigenvalues.\n\n        :raises: ValueError\n        \"\"\"", "\n", "if", "self", ".", "evals", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The method fit has to be called first in order to compute the eigenvalues.'", "\n", ")", "\n", "\n", "", "spectral_gap_index", "=", "np", ".", "argmax", "(", "self", ".", "evals", "[", ":", "-", "1", "]", "-", "self", ".", "evals", "[", "1", ":", "]", ")", "\n", "return", "int", "(", "spectral_gap_index", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._set_dim_residual_energy": [[289, 306], ["numpy.cumsum", "numpy.searchsorted", "ValueError"], "methods", ["None"], ["", "def", "_set_dim_residual_energy", "(", "self", ",", "tol", "=", "0.99", ")", ":", "\n", "        ", "\"\"\"\n        Set the active subspace dimension based on the residual energy\n        normalized to 1: the normalized sum of the eigenvalues\n        corresponding to the active components will be lower than tol.\n\n        :param float tol: threshold for the residual energy.\n\n        :raises: TypeError, ValueError\n        \"\"\"", "\n", "if", "self", ".", "evals", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'The method fit has to be called first in order to compute the eigenvalues.'", "\n", ")", "\n", "\n", "", "cumulative_energy", "=", "np", ".", "cumsum", "(", "self", ".", "evals", "**", "2", "/", "(", "self", ".", "evals", "**", "2", ")", ".", "sum", "(", ")", ")", "\n", "return", "np", ".", "searchsorted", "(", "cumulative_energy", ",", "tol", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._check_rsvd": [[307, 318], ["isinstance", "numpy.log"], "methods", ["None"], ["", "def", "_check_rsvd", "(", "self", ",", "n_samples", ",", "n_pars", ",", "dim", ")", ":", "\n", "        ", "\"\"\" Check if random svd is to be applied.\"\"\"", "\n", "if", "isinstance", "(", "dim", ",", "int", ")", "and", "dim", ">", "0", ":", "\n", "# computational complexity of svd and random svd", "\n", "            ", "svd_complexity", "=", "n_samples", "*", "n_pars", "*", "dim", "\n", "rsvd_complexity", "=", "n_samples", "*", "n_pars", "*", "np", ".", "log", "(", "\n", "dim", ")", "+", "(", "n_samples", "+", "n_pars", ")", "*", "dim", "**", "2", "\n", "\n", "return", "svd_complexity", ">", "rsvd_complexity", "and", "(", "n_samples", ">", "10000", "or", "n_pars", ">", "10000", ")", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues": [[319, 394], ["matplotlib.figure", "matplotlib.title", "matplotlib.xticks", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.tight_layout", "TypeError", "TypeError", "numpy.amin", "matplotlib.semilogy", "matplotlib.semilogy", "range", "matplotlib.axis", "matplotlib.axis", "matplotlib.savefig", "matplotlib.show", "range", "range", "numpy.amin", "matplotlib.fill_between", "matplotlib.fill_between", "range", "range", "numpy.finfo", "numpy.amin", "numpy.amax", "numpy.amin", "numpy.amax", "numpy.finfo", "numpy.finfo"], "methods", ["None"], ["", "", "def", "plot_eigenvalues", "(", "self", ",", "\n", "n_evals", "=", "None", ",", "\n", "filename", "=", "None", ",", "\n", "figsize", "=", "(", "8", ",", "8", ")", ",", "\n", "title", "=", "''", ")", ":", "\n", "        ", "\"\"\"\n        Plot the eigenvalues.\n\n        :param int n_evals: number of eigenvalues to plot. If not provided all\n            the eigenvalues will be plotted.\n        :param str filename: if specified, the plot is saved at `filename`.\n        :param tuple(int,int) figsize: tuple in inches defining the figure size.\n            Default is (8, 8).\n        :param str title: title of the plot.\n        :raises: TypeError\n\n        .. warning:: `self.fit` has to be called in advance.\n        \"\"\"", "\n", "if", "self", ".", "evals", "is", "None", ":", "\n", "            ", "raise", "TypeError", "(", "'The eigenvalues have not been computed.'", "\n", "'You have to perform the fit method.'", ")", "\n", "", "if", "n_evals", "is", "None", ":", "\n", "            ", "n_evals", "=", "self", ".", "evals", ".", "shape", "[", "0", "]", "\n", "", "if", "n_evals", ">", "self", ".", "evals", ".", "shape", "[", "0", "]", ":", "\n", "            ", "raise", "TypeError", "(", "'Invalid number of eigenvalues to plot.'", ")", "\n", "\n", "", "plt", ".", "figure", "(", "figsize", "=", "figsize", ")", "\n", "plt", ".", "title", "(", "title", ")", "\n", "if", "np", ".", "amin", "(", "self", ".", "evals", "[", ":", "n_evals", "]", ")", "==", "0", ":", "\n", "            ", "plt", ".", "semilogy", "(", "range", "(", "1", ",", "n_evals", "+", "1", ")", ",", "\n", "self", ".", "evals", "[", ":", "n_evals", "]", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ",", "\n", "'ko-'", ",", "\n", "markersize", "=", "8", ",", "\n", "linewidth", "=", "2", ")", "\n", "", "else", ":", "\n", "            ", "plt", ".", "semilogy", "(", "range", "(", "1", ",", "n_evals", "+", "1", ")", ",", "\n", "self", ".", "evals", "[", ":", "n_evals", "]", ",", "\n", "'ko-'", ",", "\n", "markersize", "=", "8", ",", "\n", "linewidth", "=", "2", ")", "\n", "", "plt", ".", "xticks", "(", "range", "(", "1", ",", "n_evals", "+", "1", ")", ")", "\n", "plt", ".", "xlabel", "(", "'Index'", ")", "\n", "plt", ".", "ylabel", "(", "'Eigenvalues'", ")", "\n", "\n", "if", "self", ".", "evals_br", "is", "None", ":", "\n", "            ", "plt", ".", "axis", "(", "[", "\n", "0", ",", "n_evals", "+", "1", ",", "0.1", "*", "np", ".", "amin", "(", "self", ".", "evals", "[", ":", "n_evals", "]", ")", ",", "\n", "10", "*", "np", ".", "amax", "(", "self", ".", "evals", "[", ":", "n_evals", "]", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "if", "np", ".", "amin", "(", "self", ".", "evals", "[", ":", "n_evals", "]", ")", "==", "0", ":", "\n", "                ", "plt", ".", "fill_between", "(", "\n", "range", "(", "1", ",", "n_evals", "+", "1", ")", ",", "\n", "self", ".", "evals_br", "[", ":", "n_evals", ",", "0", "]", "*", "(", "1", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", ",", "\n", "self", ".", "evals_br", "[", ":", "n_evals", ",", "1", "]", "*", "(", "1", "+", "np", ".", "finfo", "(", "float", ")", ".", "eps", ")", ",", "\n", "facecolor", "=", "'0.7'", ",", "\n", "interpolate", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "plt", ".", "fill_between", "(", "range", "(", "1", ",", "n_evals", "+", "1", ")", ",", "\n", "self", ".", "evals_br", "[", ":", "n_evals", ",", "0", "]", ",", "\n", "self", ".", "evals_br", "[", ":", "n_evals", ",", "1", "]", ",", "\n", "facecolor", "=", "'0.7'", ",", "\n", "interpolate", "=", "True", ")", "\n", "", "plt", ".", "axis", "(", "[", "\n", "0", ",", "n_evals", "+", "1", ",", "0.1", "*", "np", ".", "amin", "(", "self", ".", "evals_br", "[", ":", "n_evals", ",", "0", "]", ")", ",", "\n", "10", "*", "np", ".", "amax", "(", "self", ".", "evals_br", "[", ":", "n_evals", ",", "1", "]", ")", "\n", "]", ")", "\n", "\n", "", "plt", ".", "grid", "(", "linestyle", "=", "'dotted'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "\n", "if", "filename", ":", "\n", "            ", "plt", ".", "savefig", "(", "filename", ")", "\n", "", "else", ":", "\n", "            ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors": [[395, 456], ["matplotlib.subplots", "fig.suptitle", "numpy.array", "enumerate", "numpy.array.flat[].set_xlabel", "fig.tight_layout", "matplotlib.subplots_adjust", "TypeError", "ValueError", "ax.scatter", "ax.axhline", "ax.set_xticks", "ax.set_ylabel", "ax.grid", "ax.axis", "matplotlib.savefig", "matplotlib.show", "range", "range", "ax.set_xticklabels"], "methods", ["None"], ["", "", "def", "plot_eigenvectors", "(", "self", ",", "\n", "n_evects", "=", "None", ",", "\n", "filename", "=", "None", ",", "\n", "figsize", "=", "None", ",", "\n", "labels", "=", "None", ",", "\n", "title", "=", "''", ")", ":", "\n", "        ", "\"\"\"\n        Plot the eigenvectors.\n\n        :param int n_evects: number of eigenvectors to plot. Default is self.dim.\n        :param str filename: if specified, the plot is saved at `filename`.\n        :param tuple(int,int) figsize: tuple in inches defining the figure size.\n            Default is (8, 2 * n_evects).\n        :param str labels: labels for the components of the eigenvectors.\n        :param str title: title of the plot.\n        :raises: ValueError, TypeError\n\n        .. warning:: `self.fit` has to be called in advance.\n        \"\"\"", "\n", "if", "self", ".", "evects", "is", "None", ":", "\n", "            ", "raise", "TypeError", "(", "'The eigenvectors have not been computed.'", "\n", "'You have to perform the fit method.'", ")", "\n", "", "if", "n_evects", "is", "None", ":", "\n", "            ", "n_evects", "=", "self", ".", "dim", "\n", "", "if", "n_evects", ">", "self", ".", "evects", ".", "shape", "[", "0", "]", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid number of eigenvectors to plot.'", ")", "\n", "\n", "", "if", "figsize", "is", "None", ":", "\n", "            ", "figsize", "=", "(", "8", ",", "2", "*", "n_evects", ")", "\n", "\n", "", "n_pars", "=", "self", ".", "evects", ".", "shape", "[", "0", "]", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "n_evects", ",", "1", ",", "figsize", "=", "figsize", ")", "\n", "fig", ".", "suptitle", "(", "title", ")", "\n", "# to ensure generality for subplots (1, 1)", "\n", "axes", "=", "np", ".", "array", "(", "axes", ")", "\n", "for", "i", ",", "ax", "in", "enumerate", "(", "axes", ".", "flat", ")", ":", "\n", "            ", "ax", ".", "scatter", "(", "range", "(", "1", ",", "n_pars", "+", "1", ")", ",", "\n", "self", ".", "evects", "[", ":", "n_pars", "+", "1", ",", "i", "]", ",", "\n", "c", "=", "'blue'", ",", "\n", "s", "=", "60", ",", "\n", "alpha", "=", "0.9", ",", "\n", "edgecolors", "=", "'k'", ")", "\n", "ax", ".", "axhline", "(", "linewidth", "=", "0.7", ",", "color", "=", "'black'", ")", "\n", "\n", "ax", ".", "set_xticks", "(", "range", "(", "1", ",", "n_pars", "+", "1", ")", ")", "\n", "if", "labels", ":", "\n", "                ", "ax", ".", "set_xticklabels", "(", "labels", ")", "\n", "\n", "", "ax", ".", "set_ylabel", "(", "'Active eigenvector {}'", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "ax", ".", "grid", "(", "linestyle", "=", "'dotted'", ")", "\n", "ax", ".", "axis", "(", "[", "0", ",", "n_pars", "+", "1", ",", "-", "1", "-", "0.1", ",", "1", "+", "0.1", "]", ")", "\n", "\n", "", "axes", ".", "flat", "[", "-", "1", "]", ".", "set_xlabel", "(", "'Eigenvector components'", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "# tight_layout does not consider suptitle so we adjust it manually", "\n", "plt", ".", "subplots_adjust", "(", "top", "=", "0.94", ")", "\n", "\n", "if", "filename", ":", "\n", "            ", "plt", ".", "savefig", "(", "filename", ")", "\n", "", "else", ":", "\n", "            ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary": [[457, 526], ["matplotlib.figure", "matplotlib.title", "matplotlib.grid", "matplotlib.tight_layout", "TypeError", "matplotlib.scatter", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.savefig", "matplotlib.show", "matplotlib.scatter", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.axis", "matplotlib.axis", "matplotlib.colorbar", "ValueError", "subspaces.Subspaces.transform", "subspaces.Subspaces.transform", "numpy.amin", "numpy.amax", "outputs.reshape", "numpy.min", "numpy.max", "numpy.amin", "numpy.amin", "numpy.amax", "numpy.amax"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform"], ["", "", "def", "plot_sufficient_summary", "(", "self", ",", "\n", "inputs", ",", "\n", "outputs", ",", "\n", "filename", "=", "None", ",", "\n", "figsize", "=", "(", "10", ",", "8", ")", ",", "\n", "title", "=", "''", ")", ":", "\n", "        ", "\"\"\"\n        Plot the sufficient summary.\n\n        :param numpy.ndarray inputs: array n_samples-by-n_params containing the\n            points in the full input space.\n        :param numpy.ndarray outputs: array n_samples-by-1 containing the\n            corresponding function evaluations.\n        :param str filename: if specified, the plot is saved at `filename`.\n        :param tuple(int,int) figsize: tuple in inches defining the figure\n            size. Defaults to (10, 8).\n        :param str title: title of the plot.\n        :raises: ValueError, TypeError\n\n        .. warning:: `self.fit` has to be called in advance.\n\n            Plot only available for partitions up to dimension 2.\n        \"\"\"", "\n", "if", "self", ".", "evects", "is", "None", ":", "\n", "            ", "raise", "TypeError", "(", "'The eigenvectors have not been computed.'", "\n", "'You have to perform the fit method.'", ")", "\n", "\n", "", "plt", ".", "figure", "(", "figsize", "=", "figsize", ")", "\n", "plt", ".", "title", "(", "title", ")", "\n", "\n", "if", "self", ".", "dim", "==", "1", ":", "\n", "            ", "plt", ".", "scatter", "(", "self", ".", "transform", "(", "inputs", ")", "[", "0", "]", ",", "\n", "outputs", ",", "\n", "c", "=", "'blue'", ",", "\n", "s", "=", "40", ",", "\n", "alpha", "=", "0.9", ",", "\n", "edgecolors", "=", "'k'", ")", "\n", "plt", ".", "xlabel", "(", "'Active variable '", "+", "r'$W_1^T \\mathbf{\\mu}}$'", ",", "\n", "fontsize", "=", "18", ")", "\n", "plt", ".", "ylabel", "(", "r'$f \\, (\\mathbf{\\mu})$'", ",", "fontsize", "=", "18", ")", "\n", "", "elif", "self", ".", "dim", "==", "2", ":", "\n", "            ", "x", "=", "self", ".", "transform", "(", "inputs", ")", "[", "0", "]", "\n", "plt", ".", "scatter", "(", "x", "[", ":", ",", "0", "]", ",", "\n", "x", "[", ":", ",", "1", "]", ",", "\n", "c", "=", "outputs", ".", "reshape", "(", "-", "1", ")", ",", "\n", "s", "=", "60", ",", "\n", "alpha", "=", "0.9", ",", "\n", "edgecolors", "=", "'k'", ",", "\n", "vmin", "=", "np", ".", "min", "(", "outputs", ")", ",", "\n", "vmax", "=", "np", ".", "max", "(", "outputs", ")", ")", "\n", "plt", ".", "xlabel", "(", "'First active variable'", ",", "fontsize", "=", "18", ")", "\n", "plt", ".", "ylabel", "(", "'Second active variable'", ",", "fontsize", "=", "18", ")", "\n", "ymin", "=", "1.1", "*", "np", ".", "amin", "(", "[", "np", ".", "amin", "(", "x", "[", ":", ",", "0", "]", ")", ",", "np", ".", "amin", "(", "x", "[", ":", ",", "1", "]", ")", "]", ")", "\n", "ymax", "=", "1.1", "*", "np", ".", "amax", "(", "[", "np", ".", "amax", "(", "x", "[", ":", ",", "0", "]", ")", ",", "np", ".", "amax", "(", "x", "[", ":", ",", "1", "]", ")", "]", ")", "\n", "plt", ".", "axis", "(", "'equal'", ")", "\n", "plt", ".", "axis", "(", "[", "ymin", ",", "ymax", ",", "ymin", ",", "ymax", "]", ")", "\n", "plt", ".", "colorbar", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Sufficient summary plots cannot be made in more than 2 '", "\n", "'dimensions.'", ")", "\n", "\n", "", "plt", ".", "grid", "(", "linestyle", "=", "'dotted'", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "\n", "if", "filename", ":", "\n", "            ", "plt", ".", "savefig", "(", "filename", ")", "\n", "", "else", ":", "\n", "            ", "plt", ".", "show", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.__init__": [[34, 36], ["subspaces.Subspaces.__init__"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.classproperty.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "method", "=", "'exact'", ",", "n_boot", "=", "100", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dim", ",", "method", ",", "n_boot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.activity_scores": [[37, 55], ["numpy.power().dot", "TypeError", "numpy.power"], "methods", ["None"], ["", "@", "property", "\n", "def", "activity_scores", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Return the activity scores as defined in Constantine and Diaz, Global\n        sensitivity metrics from active subspaces, arxiv.org/abs/1510.04361\n        Equation (21).\n\n        :return: array with the activity score of each parameter.\n        :rtype: numpy.ndarray\n        :raises: TypeError\n\n        .. warning:: `self.fit` has to be called in advance.\n        \"\"\"", "\n", "if", "self", ".", "W1", "is", "None", ":", "\n", "            ", "raise", "TypeError", "(", "'The eigenvectors have not been computed and '", "\n", "'partitioned. You have to perform the fit method.'", ")", "\n", "\n", "", "return", "np", ".", "power", "(", "self", ".", "W1", ",", "2", ")", ".", "dot", "(", "self", ".", "evals", "[", ":", "self", ".", "dim", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.fit": [[56, 127], ["isinstance", "active.ActiveSubspaces._partition", "active.ActiveSubspaces._frequent_directions", "active.ActiveSubspaces._build_decompose_cov_matrix", "active.ActiveSubspaces._compute_bootstrap_ranges", "TypeError", "TypeError", "utils.local_linear_gradients", "utils.initialize_weights", "numpy.diag", "len", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._frequent_directions", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._build_decompose_cov_matrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._compute_bootstrap_ranges", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.local_linear_gradients", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.initialize_weights"], ["", "def", "fit", "(", "self", ",", "\n", "inputs", "=", "None", ",", "\n", "outputs", "=", "None", ",", "\n", "gradients", "=", "None", ",", "\n", "weights", "=", "None", ",", "\n", "metric", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Compute the active subspaces given the gradients of the model function\n        wrt the input parameters, or given the input/outputs couples. Only two\n        methods are available: 'exact' and 'local'.\n\n        :param numpy.ndarray inputs: input parameters oriented as rows.\n        :param numpy.ndarray outputs: corresponding outputs oriented as rows.\n        :param numpy.ndarray gradients: n_samples-by-n_params matrix containing\n            the gradient samples oriented as rows. If frequent directions needed\n            to be performed, gradients is an object of GeneratorType.\n        :param numpy.ndarray weights: n_samples-by-1 weight vector, corresponds\n            to numerical quadrature rule used to estimate matrix whose\n            eigenspaces define the active subspace.\n        :param numpy.ndarray metric: metric matrix output_dim-by-output-dim for\n            vectorial active subspaces.\n        :raises: TypeError\n\n        :Example:\n\n            >>> # inputs shape is n_samples-by-n_params\n            >>> # outputs shape is n_samples-by-1\n            >>> # gradients shape is n_samples-by-n_params\n\n            >>> # if gradients are available use the 'exact' method:\n            >>> ss1 =  ActiveSubspaces(dim=1, method='exact', n_boot=150)\n            >>> ss1.fit(gradients=gradients)\n\n            >>> # for the frequent direction method to compute the eigenpairs\n            >>> # you need to pass a generator to gradients:\n            >>> gradients_gen = (grad for grad in gradients)\n            >>> ss2 =  ActiveSubspaces(dim=2, method='exact')\n            >>> ss2.fit(gradients=gradients_gen)\n\n            >>> # if no gradients are available use the 'local' method:\n            >>> ss3 =  ActiveSubspaces(dim=1, method='local', n_boot=150)\n            >>> ss3.fit(inputs=inputs, outputs=outputs)\n        \"\"\"", "\n", "if", "self", ".", "method", "==", "'exact'", ":", "\n", "            ", "if", "gradients", "is", "None", ":", "\n", "                ", "raise", "TypeError", "(", "'gradients argument is None.'", ")", "\n", "\n", "# estimate active subspace with local linear models.", "\n", "", "", "if", "self", ".", "method", "==", "'local'", ":", "\n", "            ", "if", "inputs", "is", "None", "or", "outputs", "is", "None", ":", "\n", "                ", "raise", "TypeError", "(", "'inputs or outputs argument is None.'", ")", "\n", "", "gradients", "=", "local_linear_gradients", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "weights", "=", "weights", ")", "[", "0", "]", "\n", "\n", "", "if", "isinstance", "(", "gradients", ",", "types", ".", "GeneratorType", ")", ":", "\n", "            ", "self", ".", "evals", ",", "self", ".", "evects", "=", "self", ".", "_frequent_directions", "(", "gradients", ")", "\n", "", "else", ":", "\n", "            ", "if", "weights", "is", "None", "or", "self", ".", "method", "==", "'local'", ":", "\n", "# use the new gradients to compute the weights, otherwise", "\n", "# dimension mismatch accours.", "\n", "                ", "weights", "=", "initialize_weights", "(", "gradients", ")", "\n", "\n", "", "if", "len", "(", "gradients", ".", "shape", ")", "==", "3", "and", "metric", "is", "None", ":", "\n", "                ", "metric", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "gradients", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "", "self", ".", "evals", ",", "self", ".", "evects", "=", "self", ".", "_build_decompose_cov_matrix", "(", "\n", "gradients", "=", "gradients", ",", "weights", "=", "weights", ",", "metric", "=", "metric", ")", "\n", "\n", "self", ".", "_compute_bootstrap_ranges", "(", "gradients", ",", "weights", ",", "metric", "=", "metric", ")", "\n", "", "self", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform": [[128, 155], ["numpy.dot", "TypeError", "numpy.dot"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Map full variables to active and inactive variables.\n\n        Points in the original input space are mapped to the active and inactive\n        subspace.\n\n        :param numpy.ndarray inputs: array n_samples-by-n_params containing the\n            points in the original parameter space.\n        :return: array n_samples-by-active_dim containing the mapped active\n            variables;\n            array n_samples-by-inactive_dim containing the mapped inactive\n            variables.\n        :rtype: numpy.ndarray, numpy.ndarray\n        :raises: TypeError\n        \"\"\"", "\n", "if", "self", ".", "W1", "is", "None", ":", "\n", "            ", "raise", "TypeError", "(", "'the active subspace has not been evaluated.'", ")", "\n", "\n", "", "active", "=", "np", ".", "dot", "(", "inputs", ",", "self", ".", "W1", ")", "\n", "# allow evaluation of active variables only", "\n", "if", "self", ".", "W2", "is", "None", ":", "\n", "            ", "inactive", "=", "None", "\n", "", "else", ":", "\n", "            ", "inactive", "=", "np", ".", "dot", "(", "inputs", ",", "self", ".", "W2", ")", "\n", "\n", "", "return", "active", ",", "inactive", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.inverse_transform": [[156, 192], ["numpy.array", "numpy.swapaxes", "active.ActiveSubspaces._rotate_x", "TypeError", "scipy.linalg.null_space", "active.ActiveSubspaces._sample_inactive"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rotate_x", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._sample_inactive"], ["", "def", "inverse_transform", "(", "self", ",", "reduced_inputs", ",", "n_points", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        Map the points in the active variable space to the original parameter\n        space.\n\n        :param numpy.ndarray reduced_inputs: n_samples-by-dim matrix that\n            contains points in the space of active variables.\n        :param int n_points: the number of points in the original parameter\n            space that are returned that map to the given active variables.\n            Defaults to 1.\n        :return: (n_samples * n_points)-by-n_params matrix that contains\n            points in the original parameter space, (n_samples *\n            n_points)-by-n_params matrix that contains integer indices. These\n            indices identify which rows of the previous matrix (the full\n            parameters) map to which rows of the active variables matrix.\n        :rtype: numpy.ndarray, numpy.ndarray\n        :raises: TypeError\n\n        .. note:: The inverse map depends critically on the\n            `self._sample_inactive` method.\n        \"\"\"", "\n", "if", "self", ".", "W1", "is", "None", ":", "\n", "            ", "raise", "TypeError", "(", "'the active subspace has not been evaluated.'", ")", "\n", "\n", "# the inactive eigenvectors are needed", "\n", "", "if", "self", ".", "W2", "is", "None", ":", "\n", "            ", "self", ".", "W2", "=", "null_space", "(", "self", ".", "W1", ")", ".", "T", "\n", "\n", "", "inactive_swap", "=", "np", ".", "array", "(", "[", "\n", "self", ".", "_sample_inactive", "(", "red_inp", ",", "n_points", ")", "\n", "for", "red_inp", "in", "reduced_inputs", "\n", "]", ")", "\n", "inactive_inputs", "=", "np", ".", "swapaxes", "(", "inactive_swap", ",", "1", ",", "2", ")", "\n", "\n", "inputs", ",", "indices", "=", "self", ".", "_rotate_x", "(", "reduced_inputs", ",", "inactive_inputs", ")", "\n", "return", "inputs", ",", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._sample_inactive": [[193, 224], ["active.ActiveSubspaces._rejection_sampling_inactive", "active.ActiveSubspaces._hit_and_run_inactive"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rejection_sampling_inactive", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._hit_and_run_inactive"], ["", "def", "_sample_inactive", "(", "self", ",", "reduced_input", ",", "n_points", ")", ":", "\n", "        ", "\"\"\"\n        Sample inactive variables.\n\n        Sample values of the inactive variables for a fixed value of the active\n        variables when the original variables are bounded by a hypercube.\n\n        :param numpy.ndarray reduced_input: the value of the active variables.\n        :param int n_points: the number of inactive variable samples,\n        :return: n_points-by-(inactive_dim) matrix that contains values of the\n            inactive variable that correspond to the given `reduced_input`.\n        :rtype: numpy.ndarray\n\n        .. note:: The trick here is to sample the inactive variables z so that\n            -1 <= W1*y + W2*z <= 1, where y is the given value of the active\n            variables. In other words, we need to sample z such that it respects\n            the linear inequalities W2*z <= 1 - W1*y, -W2*z <= 1 + W1*y. These\n            inequalities define a polytope in R^(inactive_dim). We want to\n            sample N points uniformly from the polytope. This function first\n            tries a simple rejection sampling scheme, which finds a bounding\n            hyperbox for the polytope, draws points uniformly from the bounding\n            hyperbox, and rejects points outside the polytope. If that method\n            does not return enough samples, the method tries a \"hit and run\"\n            method for sampling from the polytope. If that does not work, it\n            returns an array with `N` copies of a feasible point computed as the\n            Chebyshev center of the polytope.\n        \"\"\"", "\n", "Z", "=", "self", ".", "_rejection_sampling_inactive", "(", "reduced_input", ",", "n_points", ")", "\n", "if", "Z", "is", "None", ":", "\n", "            ", "Z", "=", "self", ".", "_hit_and_run_inactive", "(", "reduced_input", ",", "n_points", ")", "\n", "", "return", "Z", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._compute_A_b": [[225, 238], ["numpy.dot().reshape", "numpy.vstack", "numpy.vstack().reshape", "numpy.dot", "numpy.vstack"], "methods", ["None"], ["", "def", "_compute_A_b", "(", "self", ",", "reduced_input", ")", ":", "\n", "        ", "\"\"\"\n        Compute the matrix A and the vector b to build a box around the\n        inactive subspace for uniform sampling.\n\n        :param numpy.ndarray reduced_input: the value of the active variables.\n        :return: matrix A, and vector b.\n        :rtype: numpy.ndarray, numpy.ndarray\n        \"\"\"", "\n", "s", "=", "np", ".", "dot", "(", "self", ".", "W1", ",", "reduced_input", ")", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "A", "=", "np", ".", "vstack", "(", "(", "self", ".", "W2", ",", "-", "1", "*", "self", ".", "W2", ")", ")", "\n", "b", "=", "np", ".", "vstack", "(", "(", "-", "1", "-", "s", ",", "-", "1", "+", "s", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "return", "A", ",", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rejection_sampling_inactive": [[239, 270], ["active.ActiveSubspaces._compute_A_b", "range", "utils.Normalizer", "utils.Normalizer.inverse_transform", "numpy.all", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.random.uniform", "numpy.sum", "Z[].reshape", "utils.linear_program_ineq", "utils.linear_program_ineq", "numpy.dot"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._compute_A_b", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.linear_program_ineq", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.linear_program_ineq"], ["", "def", "_rejection_sampling_inactive", "(", "self", ",", "reduced_input", ",", "n_points", ")", ":", "\n", "        ", "\"\"\"\n        A rejection sampling method for sampling the from a polytope.\n\n        :param numpy.ndarray reduced_input: the value of the active variables.\n        :param int n_points: the number of inactive variable samples.\n        :return: n_points-by-inactive_dim matrix that contains values of the\n            inactive variable that correspond to the given `reduced_input`.\n        :rtype: numpy.ndarray\n        \"\"\"", "\n", "m", ",", "n", "=", "self", ".", "W1", ".", "shape", "\n", "inactive_dim", "=", "m", "-", "n", "\n", "# Build a box around z for uniform sampling", "\n", "A", ",", "b", "=", "self", ".", "_compute_A_b", "(", "reduced_input", ")", "\n", "lbox", ",", "ubox", "=", "np", ".", "zeros", "(", "(", "1", ",", "inactive_dim", ")", ")", ",", "np", ".", "zeros", "(", "(", "1", ",", "inactive_dim", ")", ")", "\n", "for", "i", "in", "range", "(", "inactive_dim", ")", ":", "\n", "            ", "clb", "=", "np", ".", "zeros", "(", "(", "inactive_dim", ",", "1", ")", ")", "\n", "clb", "[", "i", ",", "0", "]", "=", "1.0", "\n", "lbox", "[", "0", ",", "i", "]", "=", "linear_program_ineq", "(", "clb", ",", "A", ",", "b", ")", "[", "i", ",", "0", "]", "\n", "cub", "=", "np", ".", "zeros", "(", "(", "inactive_dim", ",", "1", ")", ")", "\n", "cub", "[", "i", ",", "0", "]", "=", "-", "1.0", "\n", "ubox", "[", "0", ",", "i", "]", "=", "linear_program_ineq", "(", "cub", ",", "A", ",", "b", ")", "[", "i", ",", "0", "]", "\n", "", "bn", "=", "Normalizer", "(", "lbox", ",", "ubox", ")", "\n", "Zbox", "=", "bn", ".", "inverse_transform", "(", "\n", "np", ".", "random", ".", "uniform", "(", "-", "1.0", ",", "1.0", ",", "size", "=", "(", "50", "*", "n_points", ",", "inactive_dim", ")", ")", ")", "\n", "ind", "=", "np", ".", "all", "(", "np", ".", "dot", "(", "A", ",", "Zbox", ".", "T", ")", ">=", "b", ",", "axis", "=", "0", ")", "\n", "\n", "if", "np", ".", "sum", "(", "ind", ")", ">=", "n_points", ":", "\n", "            ", "Z", "=", "Zbox", "[", "ind", ",", ":", "]", "\n", "return", "Z", "[", ":", "n_points", ",", ":", "]", ".", "reshape", "(", "n_points", ",", "inactive_dim", ")", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._hit_and_run_inactive": [[271, 341], ["numpy.dot().reshape", "numpy.sqrt().reshape", "numpy.hstack", "numpy.vstack().reshape", "numpy.zeros", "utils.linear_program_ineq", "zc[].reshape", "active.ActiveSubspaces._compute_A_b", "numpy.zeros", "range", "numpy.logical_and", "numpy.amin", "numpy.logical_and", "numpy.amax", "numpy.random.uniform", "z1.reshape", "z1.copy", "numpy.dot", "numpy.sqrt", "numpy.vstack", "numpy.vstack", "numpy.vstack", "numpy.random.normal", "numpy.any", "numpy.dot", "numpy.sum", "numpy.dot", "numpy.power", "numpy.sqrt().reshape.copy", "numpy.dot", "numpy.tile", "numpy.sqrt", "numpy.sqrt", "active.ActiveSubspaces.W2.copy", "numpy.finfo", "numpy.finfo"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.linear_program_ineq", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._compute_A_b", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.normal"], ["", "def", "_hit_and_run_inactive", "(", "self", ",", "reduced_input", ",", "n_points", ")", ":", "\n", "        ", "\"\"\"\n        A hit and run method for sampling the inactive variables from a\n        polytope.\n\n        :param numpy.ndarray reduced_input: the value of the active variables.\n        :param int n_points: the number of inactive variable samples.\n        :return: n_points-by-(inactive_dim) matrix that contains values of the\n            inactive variable that correspond to the given `reduced_input`.\n        :rtype: numpy.ndarray\n        \"\"\"", "\n", "m", ",", "n", "=", "self", ".", "W1", ".", "shape", "\n", "inactive_dim", "=", "m", "-", "n", "\n", "\n", "# Get an initial feasible point using the Chebyshev center. Huge props", "\n", "# to David Gleich for the Chebyshev center.", "\n", "s", "=", "np", ".", "dot", "(", "self", ".", "W1", ",", "reduced_input", ")", ".", "reshape", "(", "(", "m", ",", "1", ")", ")", "\n", "normW2", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "power", "(", "self", ".", "W2", ",", "2", ")", ",", "axis", "=", "1", ")", ")", ".", "reshape", "(", "(", "m", ",", "1", ")", ")", "\n", "A", "=", "np", ".", "hstack", "(", "(", "np", ".", "vstack", "(", "\n", "(", "self", ".", "W2", ",", "-", "self", ".", "W2", ".", "copy", "(", ")", ")", ")", ",", "np", ".", "vstack", "(", "(", "normW2", ",", "normW2", ".", "copy", "(", ")", ")", ")", ")", ")", "\n", "b", "=", "np", ".", "vstack", "(", "(", "1", "-", "s", ",", "1", "+", "s", ")", ")", ".", "reshape", "(", "(", "2", "*", "m", ",", "1", ")", ")", "\n", "c", "=", "np", ".", "zeros", "(", "(", "inactive_dim", "+", "1", ",", "1", ")", ")", "\n", "c", "[", "-", "1", "]", "=", "-", "1.0", "\n", "\n", "zc", "=", "linear_program_ineq", "(", "c", ",", "-", "1", "*", "A", ",", "-", "b", ")", "\n", "z0", "=", "zc", "[", ":", "-", "1", "]", ".", "reshape", "(", "(", "inactive_dim", ",", "1", ")", ")", "\n", "\n", "# define the polytope A >= b", "\n", "A", ",", "b", "=", "self", ".", "_compute_A_b", "(", "reduced_input", ")", "\n", "\n", "# tolerance", "\n", "eps0", "=", "1e-6", "/", "4.0", "\n", "\n", "Z", "=", "np", ".", "zeros", "(", "(", "n_points", ",", "inactive_dim", ")", ")", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "# random direction", "\n", "            ", "bad_dir", "=", "True", "\n", "count", ",", "maxcount", "=", "0", ",", "50", "\n", "while", "bad_dir", ":", "\n", "                ", "d", "=", "np", ".", "random", ".", "normal", "(", "size", "=", "(", "inactive_dim", ",", "1", ")", ")", "\n", "bad_dir", "=", "np", ".", "any", "(", "np", ".", "dot", "(", "A", ",", "z0", "+", "eps0", "*", "d", ")", "<=", "b", ")", "\n", "count", "+=", "1", "\n", "if", "count", ">=", "maxcount", ":", "\n", "                    ", "Z", "[", "i", ":", ",", ":", "]", "=", "np", ".", "tile", "(", "z0", ",", "(", "1", ",", "n_points", "-", "i", ")", ")", ".", "T", "\n", "return", "Z", "\n", "\n", "# find constraints that impose lower and upper bounds on eps", "\n", "", "", "f", ",", "g", "=", "b", "-", "np", ".", "dot", "(", "A", ",", "z0", ")", ",", "np", ".", "dot", "(", "A", ",", "d", ")", "\n", "\n", "# find an upper bound on the step", "\n", "min_ind", "=", "np", ".", "logical_and", "(", "g", "<=", "0", ",", "\n", "f", "<", "-", "np", ".", "sqrt", "(", "np", ".", "finfo", "(", "np", ".", "float", ")", ".", "eps", ")", ")", "\n", "eps_max", "=", "np", ".", "amin", "(", "f", "[", "min_ind", "]", "/", "g", "[", "min_ind", "]", ")", "\n", "\n", "# find a lower bound on the step", "\n", "max_ind", "=", "np", ".", "logical_and", "(", "g", ">", "0", ",", "\n", "f", "<", "-", "np", ".", "sqrt", "(", "np", ".", "finfo", "(", "np", ".", "float", ")", ".", "eps", ")", ")", "\n", "eps_min", "=", "np", ".", "amax", "(", "f", "[", "max_ind", "]", "/", "g", "[", "max_ind", "]", ")", "\n", "\n", "# randomly sample eps", "\n", "eps1", "=", "np", ".", "random", ".", "uniform", "(", "eps_min", ",", "eps_max", ")", "\n", "\n", "# take a step along d", "\n", "z1", "=", "z0", "+", "eps1", "*", "d", "\n", "Z", "[", "i", ",", ":", "]", "=", "z1", ".", "reshape", "(", "-", "1", ",", ")", "\n", "\n", "# update temp var", "\n", "z0", "=", "z1", ".", "copy", "(", ")", "\n", "\n", "", "return", "Z", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rotate_x": [[342, 366], ["numpy.tile", "numpy.concatenate().transpose().reshape().transpose", "numpy.dot().reshape", "numpy.kron().reshape", "reduced_inputs.reshape", "numpy.concatenate().transpose().reshape", "numpy.dot", "numpy.kron", "numpy.arange", "numpy.ones", "numpy.concatenate().transpose", "numpy.concatenate"], "methods", ["None"], ["", "def", "_rotate_x", "(", "self", ",", "reduced_inputs", ",", "inactive_inputs", ")", ":", "\n", "        ", "\"\"\"\n        A convenience function for rotating subspace coordinates to x space.\n\n        :param numpy.ndarray reduced_input: the value of the active variables.\n        :param numpy.ndarray inactive_inputs: the value of the inactive\n            variables.\n        :return: (n_samples * n_points)-by-n_params matrix that contains points\n            in the original parameter space, (n_samples * n_points)-by-n_params\n            matrix that contains integer indices. These indices identify which\n            rows of the previous matrix (the full parameters) map to which rows\n            of the active variables matrix.\n        :rtype: numpy.ndarray, numpy.ndarray\n        \"\"\"", "\n", "NY", ",", "n", "=", "reduced_inputs", ".", "shape", "\n", "N", "=", "inactive_inputs", ".", "shape", "[", "2", "]", "\n", "m", "=", "n", "+", "inactive_inputs", ".", "shape", "[", "1", "]", "\n", "\n", "YY", "=", "np", ".", "tile", "(", "reduced_inputs", ".", "reshape", "(", "(", "NY", ",", "n", ",", "1", ")", ")", ",", "(", "1", ",", "1", ",", "N", ")", ")", "\n", "YZ", "=", "np", ".", "concatenate", "(", "(", "YY", ",", "inactive_inputs", ")", ",", "axis", "=", "1", ")", ".", "transpose", "(", "\n", "(", "1", ",", "0", ",", "2", ")", ")", ".", "reshape", "(", "(", "m", ",", "N", "*", "NY", ")", ")", ".", "transpose", "(", "(", "1", ",", "0", ")", ")", "\n", "inputs", "=", "np", ".", "dot", "(", "YZ", ",", "self", ".", "evects", ".", "T", ")", ".", "reshape", "(", "(", "N", "*", "NY", ",", "m", ")", ")", "\n", "indices", "=", "np", ".", "kron", "(", "np", ".", "arange", "(", "NY", ")", ",", "np", ".", "ones", "(", "N", ")", ")", ".", "reshape", "(", "(", "N", "*", "NY", ",", "1", ")", ")", "\n", "return", "inputs", ",", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._frequent_directions": [[367, 390], ["numpy.array", "numpy.dot", "numpy.linalg.svd", "numpy.sqrt", "next", "range", "numpy.diag", "numpy.eye"], "methods", ["None"], ["", "def", "_frequent_directions", "(", "self", ",", "gradients", ")", ":", "\n", "        ", "\"\"\"\n        Function that performs the frequent directions algorithm for\n        matrix sketching. For more details about the method, see\n        \"Frequent directions: Simple and deterministic matrix\n        sketching.\" Ghashami, Mina, et al.\n        SIAM Journal on Computing 45.5 (2016): 1762-1792.\n        doi: https://doi.org/10.1137/15M1009718\n\n        :param iterable gradients: generator for spatial gradients.\n        :return: the sorted eigenvalues and the corresponding eigenvectors for\n            the reduced matrix.\n        :rtype: numpy.ndarray, numpy.ndarray\n        \"\"\"", "\n", "s", "=", "np", ".", "array", "(", "[", "next", "(", "gradients", ")", "for", "i", "in", "range", "(", "self", ".", "dim", ")", "]", ")", ".", "T", "\n", "for", "grad", "in", "gradients", ":", "\n", "            ", "evects", ",", "sigma", "=", "np", ".", "linalg", ".", "svd", "(", "s", ",", "full_matrices", "=", "False", ")", "[", ":", "2", "]", "\n", "s", "=", "np", ".", "dot", "(", "\n", "evects", ",", "\n", "np", ".", "sqrt", "(", "np", ".", "diag", "(", "sigma", "**", "2", ")", "-", "(", "sigma", "[", "-", "1", "]", "**", "2", ")", "*", "np", ".", "eye", "(", "self", ".", "dim", ")", ")", ")", "\n", "s", "[", ":", ",", "-", "1", "]", "=", "grad", "\n", "", "evals", "=", "sigma", "**", "2", "\n", "return", "evals", ",", "evects", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.__init__": [[17, 20], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "lb", ",", "ub", ")", ":", "\n", "        ", "self", ".", "lb", "=", "lb", "\n", "self", ".", "ub", "=", "ub", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.fit_transform": [[21, 33], ["None"], "methods", ["None"], ["", "def", "fit_transform", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"Return corresponding points shifted and scaled to [-1, 1]^n_params.\n\n        :param numpy.ndarray inputs: contains all input points to normalize.\n            The shape is n_samples-by-n_params. The components of each row of\n            `inputs` should be between `self.lb` and `self.ub`.\n        :return: the normalized inputs. The components of each row should be\n            between -1 and 1.\n        :rtype: numpy.ndarray\n        \"\"\"", "\n", "inputs_norm", "=", "2.0", "*", "(", "inputs", "-", "self", ".", "lb", ")", "/", "(", "self", ".", "ub", "-", "self", ".", "lb", ")", "-", "1.0", "\n", "return", "inputs_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform": [[34, 47], ["None"], "methods", ["None"], ["", "def", "inverse_transform", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"Return corresponding points shifted and scaled to\n        `[self.lb, self.ub]`.\n\n        :param numpy.ndarray inputs: contains all input points to unnormalize.\n            The shape is n_samples-by-n_params. The components of each row of\n            `inputs` should be between -1 and 1.\n        :return: the unnormalized inputs. The components of each row should be\n            between `self.lb` and `self.ub`.\n        :rtype: numpy.ndarray\n        \"\"\"", "\n", "inputs_unnorm", "=", "(", "self", ".", "ub", "-", "self", ".", "lb", ")", "*", "(", "inputs", "+", "1.0", ")", "/", "2.0", "+", "self", ".", "lb", "\n", "return", "inputs_unnorm", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.__init__": [[209, 222], ["any", "ValueError"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "inputs", ",", "outputs", ",", "gradients", ",", "subspace", ",", "folds", "=", "5", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "if", "any", "(", "[", "v", "is", "None", "for", "v", "in", "[", "inputs", ",", "outputs", ",", "gradients", ",", "subspace", "]", "]", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Any among inputs, outputs, gradients, subspace is None.'", ")", "\n", "\n", "", "self", ".", "inputs", "=", "inputs", "\n", "self", ".", "outputs", "=", "outputs", "\n", "self", ".", "gradients", "=", "gradients", "\n", "self", ".", "ss", "=", "subspace", "\n", "self", ".", "folds", "=", "folds", "\n", "self", ".", "gp", "=", "None", "\n", "self", ".", "kwargs", "=", "kwargs", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.run": [[223, 248], ["numpy.arange", "numpy.random.shuffle", "numpy.zeros", "numpy.array_split", "range", "utils.CrossValidation.fit", "utils.CrossValidation.scorer", "numpy.zeros.mean", "numpy.zeros.std"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.scorer"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Run the k-fold cross validation procedure. In each fold a fit and an\n        evaluation of the score are compute.\n\n        :return: mean and standard deviation of the scores.\n        :rtype: list of two numpy.ndarray.\n        \"\"\"", "\n", "mask", "=", "np", ".", "arange", "(", "self", ".", "inputs", ".", "shape", "[", "0", "]", ")", "\n", "\n", "np", ".", "random", ".", "shuffle", "(", "mask", ")", "\n", "scores", "=", "np", ".", "zeros", "(", "(", "self", ".", "folds", ")", ")", "\n", "s_mask", "=", "np", ".", "array_split", "(", "mask", ",", "self", ".", "folds", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "folds", ")", ":", "\n", "            ", "v_mask", "=", "s_mask", "[", "i", "]", "\n", "validation", "=", "(", "self", ".", "inputs", "[", "v_mask", ",", ":", "]", ",", "self", ".", "outputs", "[", "v_mask", ",", ":", "]", ")", "\n", "\n", "t_mask", "=", "~", "v_mask", "\n", "self", ".", "fit", "(", "self", ".", "inputs", "[", "t_mask", ",", ":", "]", ",", "self", ".", "gradients", "[", "t_mask", ",", ":", ",", ":", "]", ",", "\n", "self", ".", "outputs", "[", "t_mask", ",", ":", "]", ")", "\n", "\n", "scores", "[", "i", "]", "=", "self", ".", "scorer", "(", "validation", "[", "0", "]", ",", "validation", "[", "1", "]", ")", "\n", "\n", "", "return", "scores", ".", "mean", "(", ")", ",", "scores", ".", "std", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit": [[249, 270], ["utils.CrossValidation.ss.fit", "GPy.kern.RBF", "GPy.models.GPRegression", "utils.CrossValidation.gp.optimize_restarts", "utils.CrossValidation.ss.transform", "numpy.atleast_2d"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform"], ["", "def", "fit", "(", "self", ",", "inputs", ",", "gradients", ",", "outputs", ")", ":", "\n", "        ", "\"\"\"\n        Uses Gaussian process regression to build the response surface as a side\n        effect. The dimension of the response surface is specified in the\n        attribute self.ss.dim.\n\n        :param numpy.ndarray inputs: n_samples-by-input_dim input matrix.\n        :param numpy.ndarray outputs: n_sample-by-output_dim output matrix.\n        :param numpy.ndarray gradients: n_samples-by-output_dim-by-input_dim\n            gradients matrix.\n        \"\"\"", "\n", "self", ".", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "outputs", "=", "outputs", ",", "\n", "**", "self", ".", "kwargs", ")", "\n", "y", "=", "self", ".", "ss", ".", "transform", "(", "inputs", ")", "[", "0", "]", "\n", "\n", "# build response surface", "\n", "kern", "=", "GPy", ".", "kern", ".", "RBF", "(", "input_dim", "=", "y", ".", "shape", "[", "1", "]", ",", "ARD", "=", "True", ")", "\n", "self", ".", "gp", "=", "GPy", ".", "models", ".", "GPRegression", "(", "y", ",", "np", ".", "atleast_2d", "(", "outputs", ")", ",", "kern", ")", "\n", "self", ".", "gp", ".", "optimize_restarts", "(", "15", ",", "verbose", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.predict": [[271, 283], ["utils.CrossValidation.ss.transform", "utils.CrossValidation.gp.predict", "numpy.atleast_2d"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.predict"], ["", "def", "predict", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Predict method of cross-validation.\n\n        :param numpy.ndarray inputs: n_samples-by-input_dim input matrix.\n        :return: n_samples-by-dim prediction of the surrogate response surface\n            model at the inputs. The value dim corresponds to self.ss.dim.\n        :rtype: numpy.ndarray\n        \"\"\"", "\n", "x_test", "=", "self", ".", "ss", ".", "transform", "(", "inputs", ")", "[", "0", "]", "\n", "y", "=", "self", ".", "gp", ".", "predict", "(", "np", ".", "atleast_2d", "(", "x_test", ")", ")", "[", "0", "]", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.scorer": [[284, 295], ["utils.CrossValidation.predict", "utils.rrmse"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.predict", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.rrmse"], ["", "def", "scorer", "(", "self", ",", "inputs", ",", "outputs", ")", ":", "\n", "        ", "\"\"\"\n        Score function of cross-validation.\n\n        :param numpy.ndarray inputs: n_samples-by-input_dim input matrix.\n        :param numpy.ndarray outputs: n_sample-by-output_dim output matrix.\n        :return: relative root mean square error between inputs and outputs.\n        :rtype: np.float64\n        \"\"\"", "\n", "y", "=", "self", ".", "predict", "(", "inputs", ")", "\n", "return", "rrmse", "(", "y", ",", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.initialize_weights": [[49, 60], ["numpy.ones"], "function", ["None"], ["", "", "def", "initialize_weights", "(", "matrix", ")", ":", "\n", "    ", "\"\"\"\n    Inizialize uniform weights for simple Monte Carlo method or linear regression in\n    local linear gradients.\n\n    :param numpy.ndarray matrix: matrix which shape[0] value contains the\n        dimension of the weights to be computed.\n    :return: weights\n    :rtype: numpy.ndarray\n    \"\"\"", "\n", "return", "np", ".", "ones", "(", "(", "matrix", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "/", "matrix", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.linear_program_ineq": [[62, 89], ["c.reshape.reshape", "b.reshape.reshape", "scipy.optimize.linprog", "RuntimeError", "scipy.optimize.linprog.x.reshape", "range"], "function", ["None"], ["", "def", "linear_program_ineq", "(", "c", ",", "A", ",", "b", ")", ":", "\n", "    ", "\"\"\"Solves an equality constrained linear program with variable bounds.\n    This method returns the minimizer of the following linear program.\n\n    minimize  c^T x\n    subject to  A x >= b\n\n    :param numpy.ndarray c: coefficients vector of the linear objective\n        function to be minimized.\n    :param numpy.ndarray A: 2-D array which, when matrix-multiplied by x,\n        gives the values of the lower-bound inequality constraints at x.\n    :param numpy.ndarray b: 1-D array of values representing the lower-bound\n        of each inequality constraint (row) in A.\n    :return: the independent variable vector which minimizes the linear\n        programming problem.\n    :rtype: numpy.ndarray\n    :raises: RuntimeError\n    \"\"\"", "\n", "c", "=", "c", ".", "reshape", "(", "-", "1", ",", ")", "\n", "b", "=", "b", ".", "reshape", "(", "-", "1", ",", ")", "\n", "\n", "# make unbounded bounds", "\n", "bounds", "=", "[", "(", "None", ",", "None", ")", "for", "i", "in", "range", "(", "c", ".", "shape", "[", "0", "]", ")", "]", "\n", "res", "=", "linprog", "(", "c", "=", "c", ",", "A_ub", "=", "-", "A", ",", "b_ub", "=", "-", "b", ",", "bounds", "=", "bounds", ")", "\n", "if", "res", ".", "success", ":", "\n", "        ", "return", "res", ".", "x", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "", "raise", "RuntimeError", "(", "'Scipy did not solve the LP. {}'", ".", "format", "(", "res", ".", "message", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.local_linear_gradients": [[91, 160], ["min", "numpy.zeros", "range", "ValueError", "int", "ValueError", "utils.initialize_weights", "int", "numpy.zeros", "numpy.zeros", "numpy.random.randint", "numpy.sum", "numpy.argsort", "min", "isinstance", "TypeError", "numpy.ceil", "len", "numpy.hstack", "numpy.sqrt", "numpy.sqrt", "numpy.linalg.lstsq", "numpy.sum", "numpy.floor", "numpy.log", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.initialize_weights"], ["", "def", "local_linear_gradients", "(", "inputs", ",", "outputs", ",", "weights", "=", "None", ",", "n_neighbors", "=", "None", ")", ":", "\n", "    ", "\"\"\"Estimate a collection of gradients from input/output pairs.\n\n    Given a set of input/output pairs, choose subsets of neighboring points and\n    build a local linear model for each subset. The gradients of these local\n    linear models comprise estimates of sampled gradients.\n\n    :param numpy.ndarray inputs:\n        M-by-m matrix that contains the m-dimensional inputs\n    :param numpy.ndarray outputs:\n        M-by-1 matrix that contains scalar outputs\n    :param numpy.ndarray weights:\n        M-by-1 matrix that contains the weights for each observation (default\n        None)\n    :param int n_neighbors:\n        how many nearest neighbors to use when constructing the local linear\n        model. the default value is floor(1.7*m)\n    :return: M-by-m matrix that contains estimated partial derivatives approximated\n        by the local linear models; the corresponding new inputs\n    :rtype: numpy.ndarray, numpy.ndarray\n\n    :raises: ValueError, TypeError\n    \"\"\"", "\n", "n_samples", ",", "n_pars", "=", "inputs", ".", "shape", "\n", "\n", "if", "n_samples", "<=", "n_pars", ":", "\n", "        ", "raise", "ValueError", "(", "'Not enough samples for local linear models.'", ")", "\n", "\n", "", "if", "n_neighbors", "is", "None", ":", "\n", "        ", "n_neighbors", "=", "int", "(", "min", "(", "np", ".", "floor", "(", "1.7", "*", "n_pars", ")", ",", "n_samples", ")", ")", "\n", "", "elif", "not", "isinstance", "(", "n_neighbors", ",", "int", ")", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'n_neighbors ({}) must be an integer.'", ".", "format", "(", "n_neighbors", ")", ")", "\n", "\n", "", "if", "n_neighbors", "<=", "n_pars", "or", "n_neighbors", ">", "n_samples", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'n_neighbors must be between the number of parameters '", "\n", "'and the number of samples. Unsatisfied: {} < {} < {}.'", ".", "format", "(", "\n", "n_pars", ",", "n_neighbors", ",", "n_samples", ")", ")", "\n", "\n", "", "if", "weights", "is", "None", ":", "\n", "        ", "weights", "=", "initialize_weights", "(", "inputs", ")", "\n", "\n", "", "MM", "=", "min", "(", "int", "(", "np", ".", "ceil", "(", "10", "*", "n_pars", "*", "np", ".", "log", "(", "n_pars", ")", ")", ")", ",", "n_samples", "-", "1", ")", "\n", "\n", "# distinguish between scalar and vectorial outputs", "\n", "if", "len", "(", "outputs", ".", "shape", ")", "==", "1", "or", "outputs", ".", "shape", "[", "1", "]", "==", "1", ":", "\n", "        ", "gradients", "=", "np", ".", "zeros", "(", "(", "MM", ",", "n_pars", ")", ")", "\n", "", "else", ":", "\n", "        ", "gradients", "=", "np", ".", "zeros", "(", "(", "MM", ",", "outputs", ".", "shape", "[", "1", "]", ",", "n_pars", ")", ")", "\n", "\n", "# new inputs are defined since MM is different from n_samples", "\n", "", "new_inputs", "=", "np", ".", "zeros", "(", "(", "MM", ",", "n_pars", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "MM", ")", ":", "\n", "        ", "ii", "=", "np", ".", "random", ".", "randint", "(", "n_samples", ")", "\n", "inputs_rand_row", "=", "inputs", "[", "ii", ",", ":", "]", "\n", "D2", "=", "np", ".", "sum", "(", "(", "inputs", "-", "inputs_rand_row", ")", "**", "2", ",", "axis", "=", "1", ")", "\n", "ind", "=", "np", ".", "argsort", "(", "D2", ")", "\n", "ind", "=", "ind", "[", "D2", "!=", "0", "]", "\n", "A", "=", "np", ".", "hstack", "(", "(", "np", ".", "ones", "(", "\n", "(", "n_neighbors", ",", "1", ")", ")", ",", "inputs", "[", "ind", "[", ":", "n_neighbors", "]", ",", ":", "]", ")", ")", "*", "np", ".", "sqrt", "(", "\n", "weights", "[", "ii", "]", ")", "\n", "b", "=", "outputs", "[", "ind", "[", ":", "n_neighbors", "]", "]", "*", "np", ".", "sqrt", "(", "weights", "[", "ii", "]", ")", "\n", "u", "=", "np", ".", "linalg", ".", "lstsq", "(", "A", ",", "b", ",", "rcond", "=", "None", ")", "[", "0", "]", "\n", "gradients", "[", "i", "]", "=", "u", "[", "1", ":", "]", ".", "T", "\n", "new_inputs", "[", "i", ",", ":", "]", "=", "(", "1", "/", "n_neighbors", ")", "*", "np", ".", "sum", "(", "\n", "inputs", "[", "ind", "[", ":", "n_neighbors", "]", ",", ":", "]", ",", "axis", "=", "0", ")", "\n", "", "return", "gradients", ",", "new_inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.sort_eigpairs": [[162, 185], ["numpy.linalg.eigh", "abs", "numpy.argsort", "numpy.sign", "abs.reshape"], "function", ["None"], ["", "def", "sort_eigpairs", "(", "matrix", ")", ":", "\n", "    ", "\"\"\"Compute eigenpairs and sort.\n\n    :param numpy.ndarray matrix: matrix whose eigenpairs you want.\n    :return: vector of sorted eigenvalues; orthogonal matrix of corresponding\n        eigenvectors.\n    :rtype: numpy.ndarray, numpy.ndarray\n\n    .. note::\n\n        Eigenvectors are unique up to a sign. We make the choice to normalize\n        the eigenvectors so that the first component of each eigenvector is\n        positive. This normalization is very helpful for the bootstrapping.\n    \"\"\"", "\n", "evals", ",", "evects", "=", "np", ".", "linalg", ".", "eigh", "(", "matrix", ")", "\n", "evals", "=", "abs", "(", "evals", ")", "\n", "ind", "=", "np", ".", "argsort", "(", "evals", ")", "\n", "evals", "=", "evals", "[", "ind", "[", ":", ":", "-", "1", "]", "]", "\n", "evects", "=", "evects", "[", ":", ",", "ind", "[", ":", ":", "-", "1", "]", "]", "\n", "s", "=", "np", ".", "sign", "(", "evects", "[", "0", ",", ":", "]", ")", "\n", "s", "[", "s", "==", "0", "]", "=", "1", "\n", "evects", "*=", "s", "\n", "return", "evals", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "evects", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.rrmse": [[297, 315], ["numpy.atleast_2d().reshape", "numpy.atleast_2d().reshape", "numpy.linalg.norm", "ValueError", "numpy.linalg.norm", "numpy.atleast_2d", "numpy.atleast_2d", "numpy.mean().reshape", "numpy.mean"], "function", ["None"], ["", "", "def", "rrmse", "(", "predictions", ",", "targets", ")", ":", "\n", "    ", "\"\"\"\n    Evaluates the relative root mean square error. It can be vectorized for\n    multidimensional predictions and targets.\n\n    :param numpy.ndarray predictions: predictions input.\n    :param numpy.ndarray targets: targets input.\n    :return: relative root mean squared error\n    :rtype: np.float64\n    \"\"\"", "\n", "n_samples", "=", "predictions", ".", "shape", "[", "0", "]", "\n", "if", "n_samples", "!=", "targets", ".", "shape", "[", "0", "]", ":", "\n", "        ", "raise", "ValueError", "(", "'Predictions and targets differ in number of samples.'", ")", "\n", "\n", "", "t", "=", "np", ".", "atleast_2d", "(", "targets", ")", ".", "reshape", "(", "n_samples", ",", "-", "1", ")", "\n", "p", "=", "np", ".", "atleast_2d", "(", "predictions", ")", ".", "reshape", "(", "n_samples", ",", "-", "1", ")", "\n", "std_deviation", "=", "np", ".", "linalg", ".", "norm", "(", "t", "-", "np", ".", "mean", "(", "t", ",", "axis", "=", "0", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", ")", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "p", "-", "t", ")", "/", "std_deviation", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.average_rrmse": [[317, 390], ["range", "min", "isinstance", "ValueError", "len", "numpy.squeeze", "len", "numpy.array", "print", "csv.run", "score_records.append", "print"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.run"], ["", "def", "average_rrmse", "(", "hyperparams", ",", "best", ",", "csv", ",", "verbose", "=", "False", ",", "resample", "=", "5", ")", ":", "\n", "    ", "\"\"\"\n    Objective function to be optimized during the tuning process of the method\n    :func:`~athena.FeatureMap.tune_pr_matrix`. The optimal hyperparameters of the\n    spectral distribution are searched for in a domain logarithmically scaled in\n    base 10. For each call of :func:`~athena.utils.average_rrmse` by the\n    optimizer, the same hyperparameter is tested in two nested procedures: in\n    the external procedure the projection matrix is resampled a number of times\n    specified by the resample parameter; in the internal procedure the relative\n    root mean squared error (:func:`~athena.utils.rrmse`) is evaluated as the\n    k-fold mean of a k-fold cross-validation procedure. The score of a single\n    fold of this cross-validation procedure is the rrmse on the validation set\n    of the predictions of the response surface built with a Subspace object on\n    the training set.\n\n    :param list hyperparameters: logarithm of the parameter of the spectral\n        distribution passed to average_rrmse by the optimizer.\n    :param 'CrossValidation' csv: CrossValidation object which contains the\n        same Subspace object and the inputs, outputs, gradients datasets. The\n    :param list best: list that records the best score and the best\n        projection matrix. The initial values are 0.8 and a\n        n_features-by-input_dim numpy.ndarray of zeros.\n    :param int resample: number of times the projection matrix is resampled\n        from the same spectral distribution with the same hyperparameter.\n    :param bool verbose: True to print the score for each resample.\n    :return: minumum of the scores evaluated for the same hyperparameter and\n        a specified number of resamples of the projection matrix.\n    :rtype: numpy.float64\n    \"\"\"", "\n", "if", "isinstance", "(", "csv", ",", "CrossValidation", ")", "is", "False", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"The argument csv must be of type athena.utils.CrossValidation\"", ")", "\n", "\n", "", "if", "len", "(", "hyperparams", ".", "shape", ")", ">", "1", ":", "\n", "        ", "hyperparams", "=", "np", ".", "squeeze", "(", "hyperparams", ")", "\n", "", "if", "len", "(", "hyperparams", ".", "shape", ")", "==", "0", ":", "\n", "        ", "hyperparams", "=", "np", ".", "array", "(", "[", "hyperparams", "]", ")", "\n", "\n", "# compute the real hyperparameters", "\n", "", "hyperparams", "=", "10", "**", "hyperparams", "\n", "\n", "# list of scores for the same hyperparameters but different samples", "\n", "# of the projection matrix", "\n", "score_records", "=", "[", "]", "\n", "\n", "#set the hyperparameters", "\n", "csv", ".", "ss", ".", "feature_map", ".", "params", "=", "hyperparams", "\n", "\n", "if", "verbose", "is", "True", ":", "\n", "        ", "print", "(", "\"#\"", "*", "80", ")", "\n", "", "for", "_", "in", "range", "(", "resample", ")", ":", "\n", "# compute the score with cross validation for the sampled projection", "\n", "# matrix", "\n", "        ", "mean", ",", "std", "=", "csv", ".", "run", "(", ")", "\n", "\n", "# save the best parameters", "\n", "if", "verbose", "is", "True", ":", "\n", "            ", "print", "(", "\"params {} mean {}, std {}\"", ".", "format", "(", "hyperparams", ",", "mean", ",", "std", ")", ")", "\n", "", "score_records", ".", "append", "(", "mean", ")", "\n", "\n", "# skip resampling from the same hyperparam if the error is not below", "\n", "# the treshold 0.8", "\n", "if", "mean", ">", "0.8", ":", "\n", "            ", "break", "\n", "", "if", "mean", "<=", "best", "[", "0", "]", ":", "\n", "            ", "best", "[", "0", "]", "=", "mean", "\n", "best", "[", "1", "]", "=", "csv", ".", "ss", ".", "feature_map", ".", "pr_matrix", "\n", "\n", "# set _pr_matrix to None so that csv.ss.feature_map.compute_fmap", "\n", "# and csv.ss.feature_map.compute_fmap_jac resample the projection matrix", "\n", "# for the same hyperparams", "\n", "", "csv", ".", "ss", ".", "feature_map", ".", "_pr_matrix", "=", "None", "\n", "", "return", "min", "(", "score_records", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.classproperty.__init__": [[11, 15], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "f", ")", ":", "\n", "        ", "self", ".", "f", "=", "f", "\n", "self", ".", "__doc__", "=", "f", ".", "__doc__", "\n", "self", ".", "__name__", "=", "f", ".", "__name__", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.classproperty.__get__": [[16, 18], ["projection_factory.classproperty.f"], "methods", ["None"], ["", "def", "__get__", "(", "self", ",", "obj", ",", "owner", ")", ":", "\n", "        ", "return", "self", ".", "f", "(", "owner", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.beta": [[34, 47], ["numpy.random.beta"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.beta"], ["@", "staticmethod", "\n", "def", "beta", "(", "input_dim", ",", "n_features", ",", "params", ")", ":", "\n", "        ", "\"\"\"\n        Beta distribution\n\n        :param int input_dim: dimension of the inputs.\n        :param int n_features: dimension of the RKHS.\n        :param list params: the two parameters are the alpha and beta\n            shape parameters respectively.\n        :return: n_features-by-input_dim projection matrix.\n        :rtype: numpy.ndarray.\n        \"\"\"", "\n", "return", "np", ".", "random", ".", "beta", "(", "params", "[", "0", "]", ",", "params", "[", "1", "]", ",", "(", "n_features", ",", "input_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.cauchy": [[48, 61], ["numpy.random.standard_cauchy"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "cauchy", "(", "input_dim", ",", "n_features", ",", "params", ")", ":", "\n", "        ", "\"\"\"\n        Cauchy distribution\n\n        :param int input_dim: dimension of the inputs.\n        :param int n_features: dimension of the RKHS.\n        :param list params: the single parameter is a scale factor.\n        :return: n_features-by-input_dim projection matrix.\n        :rtype: numpy.ndarray.\n        \"\"\"", "\n", "return", "(", "1", "/", "params", "[", "0", "]", ")", "*", "np", ".", "random", ".", "standard_cauchy", "(", "\n", "(", "n_features", ",", "input_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.dirichlet": [[62, 75], ["numpy.random.dirichlet", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.dirichlet"], ["", "@", "staticmethod", "\n", "def", "dirichlet", "(", "input_dim", ",", "n_features", ",", "params", ")", ":", "\n", "        ", "\"\"\"\n        Dirichlet distribution\n\n        :param int input_dim: dimension of the inputs.\n        :param int n_features: dimension of the RKHS.\n        :param list params: the single parameter is a scale to the input_dim\n            dimensional shape parameter.\n        :return: n_features-by-input_dim projection matrix.\n        :rtype: numpy.ndarray.\n        \"\"\"", "\n", "return", "np", ".", "random", ".", "dirichlet", "(", "params", "[", "0", "]", "*", "np", ".", "ones", "(", "input_dim", ")", ",", "n_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.laplace": [[76, 89], ["numpy.random.laplace"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.laplace"], ["", "@", "staticmethod", "\n", "def", "laplace", "(", "input_dim", ",", "n_features", ",", "params", ")", ":", "\n", "        ", "\"\"\"\n        Laplace distribution\n\n        :param int input_dim: dimension of the inputs.\n        :param int n_features: dimension of the RKHS.\n        :param list params: the single parameter is the scale of the\n            distribution, the mean is set to 0.\n        :return: n_features-by-input_dim projection matrix.\n        :rtype: numpy.ndarray.\n        \"\"\"", "\n", "return", "np", ".", "random", ".", "laplace", "(", "0", ",", "params", "[", "0", "]", ",", "(", "n_features", ",", "input_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.multivariate_normal": [[90, 105], ["numpy.random.multivariate_normal", "numpy.zeros", "numpy.diag"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.multivariate_normal"], ["", "@", "staticmethod", "\n", "def", "multivariate_normal", "(", "input_dim", ",", "n_features", ",", "params", ")", ":", "\n", "        ", "\"\"\"\n        Multivariate normal distribution\n\n        :param int input_dim: dimension of the inputs.\n        :param int n_features: dimension of the RKHS.\n        :param list params: the input_dim dimensioanl parameters are the\n        diagonal of the covariance matrix of the distribution. The mean is set\n        to the 0 vector.\n        :return: n_features-by-input_dim projection matrix.\n        :rtype: numpy.ndarray.\n        \"\"\"", "\n", "return", "np", ".", "random", ".", "multivariate_normal", "(", "np", ".", "zeros", "(", "input_dim", ")", ",", "\n", "np", ".", "diag", "(", "params", ")", ",", "n_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.normal": [[106, 119], ["numpy.random.normal"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.normal"], ["", "@", "staticmethod", "\n", "def", "normal", "(", "input_dim", ",", "n_features", ",", "params", ")", ":", "\n", "        ", "\"\"\"\n        Normal distribution\n\n        :param int input_dim: dimension of the inputs.\n        :param int n_features: dimension of the RKHS.\n        :param list params: the single parameter is the variance of the\n            distribution. The mean is set to 0.\n        :return: n_features-by-input_dim projection matrix.\n        :rtype: numpy.ndarray.\n        \"\"\"", "\n", "return", "np", ".", "random", ".", "normal", "(", "0", ",", "params", "[", "0", "]", ",", "(", "n_features", ",", "input_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform": [[120, 132], ["numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "@", "staticmethod", "\n", "def", "uniform", "(", "input_dim", ",", "n_features", ",", "params", ")", ":", "\n", "        ", "\"\"\"\n        Uniform distribution\n\n        :param int input_dim: dimension of the inputs.\n        :param int n_features: dimension of the RKHS.\n        :param list params: the two parameters are the extremals of the domain.\n        :return: n_features-by-input_dim projection matrix.\n        :rtype: numpy.ndarray.\n        \"\"\"", "\n", "return", "np", ".", "random", ".", "uniform", "(", "params", "[", "0", "]", ",", "params", "[", "1", "]", ",", "(", "n_features", ",", "input_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.__new__": [[150, 159], ["NameError"], "methods", ["None"], ["def", "__new__", "(", "self", ",", "fname", ")", ":", "\n", "# to make the str callable we have to use a dictionary with all the", "\n", "# implemented projection matrices", "\n", "        ", "if", "fname", "in", "self", ".", "projections", ":", "\n", "            ", "return", "self", ".", "__projections", "[", "fname", "]", "\n", "", "raise", "NameError", "(", "\n", "\"\"\"The name of the projection matrix is not correct or not\n            implemented. Check the documentation for all the available\n            possibilities.\"\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.projections": [[160, 169], ["list", "projection_factory.ProjectionFactory.__projections.keys"], "methods", ["None"], ["", "@", "classproperty", "\n", "def", "projections", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        The available projection matrices.\n\n        :return: the list of all the available projection matrices.\n        :rtype: list\n        \"\"\"", "\n", "return", "list", "(", "self", ".", "__projections", ".", "keys", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial02.02_gradients_evaluation.inputs_uniform": [[25, 28], ["autograd.vstack", "autograd.array", "autograd.random.uniform", "range"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["def", "inputs_uniform", "(", "n_samples", ",", "n_pars", ",", "lb", ",", "ub", ")", ":", "\n", "    ", "return", "np", ".", "vstack", "(", "\n", "np", ".", "array", "(", "[", "np", ".", "random", ".", "uniform", "(", "lb", "[", "i", "]", ",", "ub", "[", "i", "]", ",", "n_samples", ")", "for", "i", "in", "range", "(", "n_pars", ")", "]", ")", ".", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial02.02_gradients_evaluation.eval_gp_grad": [[30, 36], ["GPy.kern.RBF", "GPy.models.GPRegression", "GPy.models.GPRegression.optimize", "[].reshape", "f.reshape", "GPy.models.GPRegression.predict_jacobian"], "function", ["None"], ["", "def", "eval_gp_grad", "(", "x", ",", "f", ",", "n_samples", ",", "input_dim", ")", ":", "\n", "    ", "kernel", "=", "GPy", ".", "kern", ".", "RBF", "(", "input_dim", "=", "input_dim", ",", "ARD", "=", "True", ")", "\n", "gp", "=", "GPy", ".", "models", ".", "GPRegression", "(", "x", ",", "f", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "kernel", ")", "\n", "gp", ".", "optimize", "(", ")", "\n", "df", "=", "gp", ".", "predict_jacobian", "(", "x", ")", "[", "0", "]", ".", "reshape", "(", "n_samples", ",", "input_dim", ")", "\n", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial02.numpy_functions.radial": [[3, 7], ["generatrix", "normalizer.inverse_transform", "autograd.linalg.norm"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.generatrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["def", "radial", "(", "x", ",", "generatrix", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "generatrix", "(", "np", ".", "linalg", ".", "norm", "(", "x", ",", "axis", "=", "1", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial02.numpy_functions.sin_2d": [[8, 12], ["normalizer.inverse_transform", "autograd.sin"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "sin_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "0.5", "*", "np", ".", "sin", "(", "2", "*", "np", ".", "pi", "*", "(", "x", "[", ":", ",", "0", "]", "+", "x", "[", ":", ",", "1", "]", ")", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial02.numpy_functions.exp_2d": [[13, 17], ["autograd.exp", "normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "exp_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "np", ".", "exp", "(", "-", "(", "x", "[", ":", ",", "0", "]", "-", "0.5", ")", "**", "2", "-", "x", "[", ":", ",", "1", "]", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial02.numpy_functions.cubic_2d": [[18, 22], ["normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "cubic_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "x", "[", ":", ",", "0", "]", "**", "3", "+", "x", "[", ":", ",", "1", "]", "**", "3", "+", "0.2", "*", "x", "[", ":", ",", "0", "]", "+", "0.6", "*", "x", "[", ":", ",", "1", "]", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial07.07_nonlinear_level-set_learning.gridplot": [[50, 84], ["grid_np[].reshape", "grid_np[].reshape", "numpy.concatenate", "numpy.copy", "matplotlib.figure", "range", "range", "zip", "matplotlib.axis", "matplotlib.legend", "matplotlib.grid", "matplotlib.show", "float", "float", "float", "float", "matplotlib.plot", "matplotlib.plot", "zip", "matplotlib.plot"], "function", ["None"], ["def", "gridplot", "(", "grid_np", ",", "Nx", "=", "64", ",", "Ny", "=", "64", ",", "color", "=", "'black'", ",", "**", "kwargs", ")", ":", "\n", "    ", "grid_1", "=", "grid_np", "[", ":", ",", "0", "]", ".", "reshape", "(", "1", ",", "1", ",", "Nx", ",", "Ny", ")", "\n", "grid_2", "=", "grid_np", "[", ":", ",", "1", "]", ".", "reshape", "(", "1", ",", "1", ",", "Nx", ",", "Ny", ")", "\n", "u", "=", "np", ".", "concatenate", "(", "(", "grid_1", ",", "grid_2", ")", ",", "axis", "=", "1", ")", "\n", "\n", "# downsample displacements", "\n", "h", "=", "np", ".", "copy", "(", "u", "[", "0", ",", ":", ",", ":", ":", "u", ".", "shape", "[", "2", "]", "//", "Nx", ",", ":", ":", "u", ".", "shape", "[", "3", "]", "//", "Ny", "]", ")", "\n", "# now reset to actual Nx Ny that we achieved", "\n", "Nx", "=", "h", ".", "shape", "[", "1", "]", "\n", "Ny", "=", "h", ".", "shape", "[", "2", "]", "\n", "# adjust displacements for downsampling", "\n", "h", "[", "0", ",", "...", "]", "/=", "float", "(", "u", ".", "shape", "[", "2", "]", ")", "/", "Nx", "\n", "h", "[", "1", ",", "...", "]", "/=", "float", "(", "u", ".", "shape", "[", "3", "]", ")", "/", "Ny", "\n", "# put back into original index space", "\n", "h", "[", "0", ",", "...", "]", "*=", "float", "(", "u", ".", "shape", "[", "2", "]", ")", "/", "Nx", "\n", "h", "[", "1", ",", "...", "]", "*=", "float", "(", "u", ".", "shape", "[", "3", "]", ")", "/", "Ny", "\n", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "6", ",", "4", ")", ")", "\n", "# create a meshgrid of locations", "\n", "for", "i", "in", "range", "(", "Nx", ")", ":", "\n", "        ", "plt", ".", "plot", "(", "h", "[", "0", ",", "i", ",", ":", "]", ",", "h", "[", "1", ",", "i", ",", ":", "]", ",", "color", "=", "color", ",", "**", "kwargs", ")", "\n", "", "for", "i", "in", "range", "(", "Ny", ")", ":", "\n", "        ", "plt", ".", "plot", "(", "h", "[", "0", ",", ":", ",", "i", "]", ",", "h", "[", "1", ",", ":", ",", "i", "]", ",", "color", "=", "color", ",", "**", "kwargs", ")", "\n", "", "for", "ix", ",", "xn", "in", "zip", "(", "[", "0", ",", "-", "1", "]", ",", "[", "'B'", ",", "'T'", "]", ")", ":", "\n", "        ", "for", "iy", ",", "yn", "in", "zip", "(", "[", "0", ",", "-", "1", "]", ",", "[", "'L'", ",", "'R'", "]", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "h", "[", "0", ",", "ix", ",", "iy", "]", ",", "\n", "h", "[", "1", ",", "ix", ",", "iy", "]", ",", "\n", "'o'", ",", "\n", "label", "=", "'({xn},{yn})'", ".", "format", "(", "xn", "=", "xn", ",", "yn", "=", "yn", ")", ")", "\n", "\n", "", "", "plt", ".", "axis", "(", "'equal'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "grid", "(", "linestyle", "=", "'dotted'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial01.01_intro.inputs_uniform": [[27, 30], ["autograd.vstack", "autograd.array", "autograd.random.uniform", "range"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["def", "inputs_uniform", "(", "n_samples", ",", "lb", ",", "ub", ")", ":", "\n", "    ", "return", "np", ".", "vstack", "(", "\n", "np", ".", "array", "(", "[", "np", ".", "random", ".", "uniform", "(", "lb", "[", "i", "]", ",", "ub", "[", "i", "]", ",", "n_samples", ")", "for", "i", "in", "range", "(", "lb", ".", "shape", "[", "0", "]", ")", "]", ")", ".", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial01.01_intro.inputs_gaussian": [[35, 37], ["autograd.random.multivariate_normal"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.multivariate_normal"], ["def", "inputs_gaussian", "(", "n_samples", ",", "mean", ",", "cov", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "multivariate_normal", "(", "mean", ",", "cov", ",", "n_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial01.01_intro.generatrix": [[40, 42], ["autograd.sin"], "function", ["None"], ["", "def", "generatrix", "(", "x", ")", ":", "\n", "    ", "return", "np", ".", "sin", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial01.01_intro.output": [[43, 48], ["r", "r", "autograd.linalg.norm", "autograd.linalg.norm", "normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "output", "(", "x", ",", "normalizer", ",", "r", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "return", "r", "(", "np", ".", "linalg", ".", "norm", "(", "normalizer", ".", "inverse_transform", "(", "x", ")", ",", "axis", "=", "1", ")", "**", "2", ")", "\n", "", "else", ":", "\n", "        ", "return", "r", "(", "np", ".", "linalg", ".", "norm", "(", "x", ",", "axis", "=", "1", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial01.numpy_functions.radial": [[3, 7], ["generatrix", "normalizer.inverse_transform", "autograd.linalg.norm"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.generatrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["def", "radial", "(", "x", ",", "generatrix", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "generatrix", "(", "np", ".", "linalg", ".", "norm", "(", "x", ",", "axis", "=", "1", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial01.numpy_functions.sin_2d": [[8, 12], ["normalizer.inverse_transform", "autograd.sin"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "sin_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "0.5", "*", "np", ".", "sin", "(", "2", "*", "np", ".", "pi", "*", "(", "x", "[", ":", ",", "0", "]", "+", "x", "[", ":", ",", "1", "]", ")", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial01.numpy_functions.exp_2d": [[13, 17], ["autograd.exp", "normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "exp_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "np", ".", "exp", "(", "-", "(", "x", "[", ":", ",", "0", "]", "-", "0.5", ")", "**", "2", "-", "x", "[", ":", ",", "1", "]", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial01.numpy_functions.cubic_2d": [[18, 22], ["normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "cubic_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "x", "[", ":", ",", "0", "]", "**", "3", "+", "x", "[", ":", ",", "1", "]", "**", "3", "+", "0.2", "*", "x", "[", ":", ",", "0", "]", "+", "0.6", "*", "x", "[", ":", ",", "1", "]", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.inputs_uniform": [[32, 35], ["autograd.vstack", "autograd.array", "autograd.random.uniform", "range"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["def", "inputs_uniform", "(", "n_samples", ",", "n_pars", ",", "lb", ",", "ub", ")", ":", "\n", "    ", "return", "np", ".", "vstack", "(", "\n", "np", ".", "array", "(", "[", "np", ".", "random", ".", "uniform", "(", "lb", "[", "i", "]", ",", "ub", "[", "i", "]", ",", "n_samples", ")", "for", "i", "in", "range", "(", "n_pars", ")", "]", ")", ".", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.inputs_gaussian": [[40, 42], ["autograd.random.multivariate_normal"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.multivariate_normal"], ["def", "inputs_gaussian", "(", "n_samples", ",", "mean", ",", "cov", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "multivariate_normal", "(", "mean", ",", "cov", ",", "n_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.generatrix": [[43, 45], ["None"], "function", ["None"], ["", "def", "generatrix", "(", "x", ")", ":", "\n", "    ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.output": [[46, 48], ["r", "autograd.linalg.norm", "normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "output", "(", "x", ",", "normalizer", ",", "r", ")", ":", "\n", "    ", "return", "r", "(", "np", ".", "linalg", ".", "norm", "(", "normalizer", ".", "inverse_transform", "(", "x", ")", "**", "2", ",", "axis", "=", "1", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.profile": [[125, 145], ["autograd.array", "03_response_surfaces.chains", "autograd.hstack().dot", "autograd.sum", "autograd.hstack", "f_out", "autograd.ones"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.chains"], ["", "def", "profile", "(", "active", ",", "ss", ",", "f_out", ",", "N", "=", "10", ")", ":", "\n", "    ", "\"\"\"\n    Optimal profile of AS ridge approximation.\n    :param ndarray active: active variables at which the optimal profile will be queried at\n    :param ActiveSubspace ss: active subspaces of output of interest\n    :param function f_out: output of interest\n    :param int N: number of Monte Carlo samples\n    :rtype: ndarray\n    \"\"\"", "\n", "y", "=", "np", ".", "array", "(", "[", "active", "]", ")", "\n", "pr_args", "=", "(", "y", ",", "ss", ",", "V", ")", "\n", "inactive", "=", "chains", "(", "log_inactive_con_active", ",", "\n", "1", ",", "\n", "n_samples", "=", "N", ",", "\n", "epsilon", "=", "0.2", ",", "\n", "pr_args", "=", "pr_args", ",", "\n", "dim", "=", "1", ",", "\n", "n_burn", "=", "100", ")", "\n", "x", "=", "np", ".", "hstack", "(", "(", "y", "*", "np", ".", "ones", "(", "(", "10", ",", "1", ")", ")", ",", "inactive", ")", ")", ".", "dot", "(", "ss", ".", "evects", ".", "T", ")", "\n", "return", "(", "1", "/", "N", ")", "*", "np", ".", "sum", "(", "f_out", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.RRMSE": [[262, 264], ["autograd.sqrt", "autograd.sum", "test.reshape", "true.reshape"], "function", ["None"], ["def", "RRMSE", "(", "test", ",", "true", ")", ":", "\n", "    ", "return", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "test", ".", "reshape", "(", "-", "1", ")", "-", "true", ".", "reshape", "(", "-", "1", ")", ")", "**", "2", ")", ")", "#/ np.sum((true - true.mean())**2))", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.log_proposal": [[114, 117], ["autograd.elementwise_grad", "V", "autograd.elementwise_grad"], "function", ["None"], ["def", "log_proposal", "(", "x", ",", "V", ")", ":", "\n", "    ", "dV", "=", "egrad", "(", "V", ")", "\n", "return", "V", "(", "x", ")", ",", "dV", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.log_inactive_con_active": [[119, 123], ["autograd.elementwise_grad", "V", "func_z", "autograd.elementwise_grad"], "function", ["None"], ["", "def", "log_inactive_con_active", "(", "z", ",", "y", ",", "ss", ",", "V", ")", ":", "\n", "    ", "func_z", "=", "lambda", "z_", ":", "V", "(", "ss", ".", "W1", "*", "y", "+", "ss", ".", "W2", "*", "z_", ")", "\n", "dfunc_z", "=", "egrad", "(", "func_z", ")", "\n", "return", "func_z", "(", "z", ")", ",", "dfunc_z", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.chains": [[151, 170], ["queue.Queue", "03_response_surfaces.thread_ind", "autograd.vstack", "t.join", "queue.Queue.empty", "results.append", "queue.Queue.get", "03_response_surfaces.log_inactive_con_active", "03_response_surfaces.log_proposal", "03_response_surfaces.log_proposal"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.thread_ind", "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.log_inactive_con_active", "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.log_proposal", "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.log_proposal"], ["def", "chains", "(", "proposal", ",", "N", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    Sample from log probability density function proposal,\n    with N threads.\n    \"\"\"", "\n", "q", "=", "Queue", "(", ")", "\n", "threads", "=", "[", "]", "\n", "thread_ind", "(", "proposal", ",", "N", ",", "q", ",", "threads", ",", "kwargs", ")", "\n", "\n", "for", "t", "in", "threads", ":", "\n", "        ", "t", ".", "join", "(", ")", "\n", "\n", "", "results", "=", "[", "]", "\n", "while", "True", ":", "\n", "        ", "if", "not", "q", ".", "empty", "(", ")", ":", "\n", "            ", "results", ".", "append", "(", "q", ".", "get", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "break", "\n", "", "", "return", "np", ".", "vstack", "(", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.thread_ind": [[171, 176], ["range", "threading.Thread", "threading.Thread.start", "threads.append"], "function", ["None"], ["", "def", "thread_ind", "(", "proposal", ",", "N", ",", "q", ",", "threads", ",", "kwargs", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "t", "=", "Thread", "(", "target", "=", "func_thread", ",", "args", "=", "(", "proposal", ",", "q", ")", ",", "kwargs", "=", "kwargs", ")", "\n", "t", ".", "start", "(", ")", "\n", "threads", ".", "append", "(", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.func_thread": [[177, 192], ["pyhmc.hmc", "queue.put", "autograd.random.randn", "autograd.ones"], "function", ["None"], ["", "", "def", "func_thread", "(", "proposal", ",", "queue", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    Sample from log probability density function proposal with pyhmc,\n    see https://github.com/rmcgibbo/pyhmc for tutorials.\n    \"\"\"", "\n", "res", "=", "hmc", "(", "proposal", ",", "\n", "args", "=", "(", "*", "kwargs", "[", "'pr_args'", "]", ",", ")", ",", "\n", "x0", "=", "np", ".", "random", ".", "randn", "(", "kwargs", "[", "'dim'", "]", ")", "+", "1.5", "*", "np", ".", "ones", "(", "kwargs", "[", "'dim'", "]", ")", ",", "\n", "n_samples", "=", "kwargs", "[", "'n_samples'", "]", ",", "\n", "display", "=", "False", ",", "\n", "n_steps", "=", "40", ",", "\n", "n_burn", "=", "kwargs", "[", "'n_burn'", "]", ",", "\n", "epsilon", "=", "kwargs", "[", "'epsilon'", "]", ",", "\n", "return_diagnostics", "=", "True", ")", "\n", "queue", ".", "put", "(", "res", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.numpy_functions.radial": [[3, 7], ["generatrix", "normalizer.inverse_transform", "autograd.linalg.norm"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.generatrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["def", "radial", "(", "x", ",", "generatrix", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "generatrix", "(", "np", ".", "linalg", ".", "norm", "(", "x", ",", "axis", "=", "1", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.numpy_functions.sin_2d": [[8, 12], ["normalizer.inverse_transform", "autograd.sin"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "sin_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "0.5", "*", "np", ".", "sin", "(", "2", "*", "np", ".", "pi", "*", "(", "x", "[", ":", ",", "0", "]", "+", "x", "[", ":", ",", "1", "]", ")", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.numpy_functions.exp_2d": [[13, 17], ["autograd.exp", "normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "exp_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "np", ".", "exp", "(", "-", "(", "x", "[", ":", ",", "0", "]", "-", "0.5", ")", "**", "2", "-", "x", "[", ":", ",", "1", "]", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.numpy_functions.cubic_2d": [[18, 22], ["normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "cubic_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "x", "[", ":", ",", "0", "]", "**", "3", "+", "x", "[", ":", ",", "1", "]", "**", "3", "+", "0.2", "*", "x", "[", ":", ",", "0", "]", "+", "0.6", "*", "x", "[", ":", ",", "1", "]", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial04.04_inverse_problems.model": [[23, 34], ["pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.distributions.MultivariateNormal", "pyro.distributions.MultivariateNormal", "torch.norm", "pyro.distributions.Normal", "pyro.distributions.Normal", "torch.zeros", "torch.eye", "torch.ones"], "function", ["None"], ["def", "model", "(", "f", ")", ":", "\n", "    ", "\"\"\"\n    Likelihood p(f|x), the prior on the inputs is a multivariate Gaussian distribution.\n    The model function of interest is f(X)=(X+1)^{2} where 1 is a vector of ones of the dimension of X.\n    \"\"\"", "\n", "x", "=", "pyro", ".", "sample", "(", "\n", "\"input\"", ",", "\n", "pyro", ".", "distributions", ".", "MultivariateNormal", "(", "torch", ".", "zeros", "(", "[", "input_dim", "]", ")", ",", "torch", ".", "eye", "(", "input_dim", ")", ")", ")", "\n", "mean", "=", "torch", ".", "norm", "(", "x", "+", "torch", ".", "ones", "(", "input_dim", ")", ")", "**", "2", "\n", "eps", "=", "0.1", "\n", "pyro", ".", "sample", "(", "\"outputs\"", ",", "pyro", ".", "distributions", ".", "Normal", "(", "mean", ",", "eps", ")", ",", "obs", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial04.04_inverse_problems.surrogate_model": [[36, 45], ["pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.distributions.Normal", "pyro.distributions.Normal", "gp.predict", "pyro.distributions.Normal", "pyro.distributions.Normal", "pyro.sample.cpu().detach().numpy().reshape", "torch.Tensor", "pyro.sample.cpu().detach().numpy", "pyro.sample.cpu().detach", "pyro.sample.cpu"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.predict"], ["", "def", "surrogate_model", "(", "f", ",", "gp", ")", ":", "\n", "    ", "\"\"\"\n    Likelihood p(g|s), the prior on the inputs is a multivariate Gaussian distribution.\n    The model function of interest is the response function g(S) designed with active subspaces.\n    \"\"\"", "\n", "y", "=", "pyro", ".", "sample", "(", "\"input\"", ",", "pyro", ".", "distributions", ".", "Normal", "(", "0", ",", "1", ")", ")", "\n", "mean", "=", "gp", ".", "predict", "(", "y", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", "[", "0", "]", "\n", "eps", "=", "0.1", "\n", "pyro", ".", "sample", "(", "\"outputs\"", ",", "pyro", ".", "distributions", ".", "Normal", "(", "torch", ".", "Tensor", "(", "mean", ")", ",", "eps", ")", ",", "obs", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial04.torch_functions.radial": [[4, 8], ["generatrix", "normalizer.inverse_transform", "torch.norm"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.generatrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["def", "radial", "(", "x", ",", "generatrix", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "generatrix", "(", "torch", ".", "norm", "(", "x", ",", "dim", "=", "1", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial04.torch_functions.sin_2d": [[9, 13], ["normalizer.inverse_transform", "torch.sin", "torch.sum"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "sin_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "0.5", "*", "torch", ".", "sin", "(", "2", "*", "math", ".", "pi", "*", "(", "torch", ".", "sum", "(", "x", ",", "dim", "=", "1", ")", ")", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial04.torch_functions.exp_2d": [[14, 18], ["torch.exp", "normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "exp_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "torch", ".", "exp", "(", "-", "(", "x", "[", ":", ",", "0", "]", "-", "0.5", ")", "**", "2", "-", "x", "[", ":", ",", "1", "]", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial04.torch_functions.cubic_2d": [[19, 23], ["normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "cubic_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "x", "[", ":", ",", "0", "]", "**", "3", "+", "x", "[", ":", ",", "1", "]", "**", "3", "+", "0.2", "*", "x", "[", ":", ",", "0", "]", "+", "0.6", "*", "x", "[", ":", ",", "1", "]", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial05.05_SPDE_on_fenics_solver.compute_mesh_map": [[12, 18], ["numpy.zeros", "enumerate", "cells", "cell.midpoint().array", "cell.midpoint"], "function", ["None"], ["def", "compute_mesh_map", "(", "mesh", ",", "dim", ")", ":", "\n", "    ", "m_map", "=", "np", ".", "zeros", "(", "(", "dim", ",", "2", ")", ")", "\n", "for", "j", ",", "cell", "in", "enumerate", "(", "cells", "(", "mesh", ")", ")", ":", "\n", "        ", "m_map", "[", "j", ",", ":", "]", "=", "cell", ".", "midpoint", "(", ")", ".", "array", "(", ")", "[", ":", "2", "]", "\n", "# print(m_map.shape)", "\n", "", "return", "m_map", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial05.05_SPDE_on_fenics_solver.compute_cov": [[20, 32], ["print", "numpy.zeros", "range", "print", "numpy.linalg.eig", "range", "numpy.exp", "numpy.linalg.norm"], "function", ["None"], ["", "def", "compute_cov", "(", "mesh", ",", "beta", ",", "dim", ",", "mesh_map", ")", ":", "\n", "    ", "print", "(", "\"start covariance assemble\"", ")", "\n", "cov", "=", "np", ".", "zeros", "(", "(", "dim", ",", "dim", ")", ")", "\n", "for", "i", "in", "range", "(", "dim", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "i", ",", "dim", ")", ":", "\n", "            ", "cov", "[", "j", ",", "i", "]", "=", "cov", "[", "i", ",", "j", "]", "=", "np", ".", "exp", "(", "\n", "-", "(", "np", ".", "linalg", ".", "norm", "(", "mesh_map", "[", "i", ",", ":", "]", "-", "mesh_map", "[", "j", ",", ":", "]", ",", "1", ")", ")", "/", "(", "beta", ")", ")", "\n", "\n", "", "", "print", "(", "\"end covariance assemble\"", ")", "\n", "evals", ",", "evecs", "=", "np", ".", "linalg", ".", "eig", "(", "cov", ")", "\n", "E", "=", "(", "evals", "[", ":", "m", "]", "*", "evecs", "[", ":", ",", ":", "m", "]", ")", ".", "T", "\n", "return", "cov", ",", "E", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial05.05_SPDE_on_fenics_solver.set_conductivity": [[34, 42], ["FunctionSpace", "Function", "FunctionSpace.dofmap", "enumerate", "cells", "numpy.exp", "Function.vector", "D.dofmap.cell_dofs", "cell.index"], "function", ["None"], ["", "def", "set_conductivity", "(", "sim_index", ",", "mesh", ",", "c", ")", ":", "\n", "# print(\"set conductivity\")", "\n", "    ", "D", "=", "FunctionSpace", "(", "mesh", ",", "\"DG\"", ",", "0", ")", "\n", "kappa", "=", "Function", "(", "D", ")", "\n", "dm", "=", "D", ".", "dofmap", "(", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "cells", "(", "mesh", ")", ")", ":", "\n", "        ", "kappa", ".", "vector", "(", ")", "[", "dm", ".", "cell_dofs", "(", "cell", ".", "index", "(", ")", ")", "]", "=", "np", ".", "exp", "(", "c", "[", "sim_index", ",", "i", "]", ")", "\n", "", "return", "kappa", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial05.05_SPDE_on_fenics_solver.boundary": [[44, 46], ["None"], "function", ["None"], ["", "def", "boundary", "(", "x", ")", ":", "\n", "    ", "return", "x", "[", "1", "]", "<", "DOLFIN_EPS", "or", "x", "[", "1", "]", ">", "1.0", "-", "DOLFIN_EPS", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial05.05_SPDE_on_fenics_solver.boundary0": [[48, 50], ["None"], "function", ["None"], ["", "def", "boundary0", "(", "x", ")", ":", "\n", "    ", "return", "x", "[", "0", "]", "<", "DOLFIN_EPS", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial05.05_SPDE_on_fenics_solver.compute_solution": [[52, 74], ["FunctionSpace", "Expression", "DirichletBC", "DirichletBC", "TrialFunction", "TestFunction", "Constant", "Function", "solve", "Constant", "plot", "matplotlib.colorbar", "matplotlib.show", "inner", "grad", "grad"], "function", ["None"], ["", "def", "compute_solution", "(", "sim_index", ",", "mesh", ",", "kappa", ",", "pl", "=", "False", ")", ":", "\n", "# print(\"compute solution\")", "\n", "    ", "V", "=", "FunctionSpace", "(", "mesh", ",", "\"Lagrange\"", ",", "1", ")", "\n", "u0", "=", "Expression", "(", "\"10*x[1]*(1-x[1])\"", ",", "degree", "=", "0", ")", "\n", "bc", "=", "DirichletBC", "(", "V", ",", "Constant", "(", "0.0", ")", ",", "boundary", ")", "\n", "bc0", "=", "DirichletBC", "(", "V", ",", "u0", ",", "boundary0", ")", "\n", "\n", "u", "=", "TrialFunction", "(", "V", ")", "\n", "v", "=", "TestFunction", "(", "V", ")", "\n", "f", "=", "Constant", "(", "\n", "1.0", "\n", ")", "#Expression(\"exp( - 2*pow(x[0]-0.5, 2) - 2*pow(x[1]-0.5, 2) )\", element=V.ufl_element())", "\n", "a", "=", "kappa", "*", "inner", "(", "grad", "(", "u", ")", ",", "grad", "(", "v", ")", ")", "*", "dx", "\n", "L", "=", "f", "*", "v", "*", "dx", "\n", "u", "=", "Function", "(", "V", ")", "\n", "solve", "(", "a", "==", "L", ",", "u", ",", "[", "bc", ",", "bc0", "]", ")", "\n", "\n", "if", "pl", ":", "\n", "        ", "u_pl", "=", "plot", "(", "u", ",", "title", "=", "'u'", ")", "\n", "plt", ".", "colorbar", "(", "u_pl", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial05.05_SPDE_on_fenics_solver.restrict": [[76, 85], ["AutoSubDomain", "FunctionSpace", "DirichletBC", "Function", "DirichletBC.apply", "v_restriction.mean", "Function.vector", "v.vector", "near", "Function.vector"], "function", ["None"], ["", "def", "restrict", "(", "mesh", ",", "v", ")", ":", "\n", "# print(\"restrict on outflow right side\")", "\n", "    ", "Right", "=", "AutoSubDomain", "(", "lambda", "x", ",", "on_bnd", ":", "near", "(", "x", "[", "0", "]", ",", "1", ")", "and", "on_bnd", ")", "\n", "V", "=", "FunctionSpace", "(", "mesh", ",", "'CG'", ",", "1", ")", "\n", "bc0", "=", "DirichletBC", "(", "V", ",", "1", ",", "Right", ")", "\n", "u", "=", "Function", "(", "V", ")", "\n", "bc0", ".", "apply", "(", "u", ".", "vector", "(", ")", ")", "\n", "v_restriction", "=", "v", ".", "vector", "(", ")", "[", "u", ".", "vector", "(", ")", "==", "1", "]", "\n", "return", "v_restriction", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial05.05_SPDE_on_fenics_solver.compute_gradients": [[87, 119], ["FunctionSpace", "DirichletBC", "TrialFunction", "TestFunction", "FunctionSpace", "Function", "FunctionSpace.dofmap", "enumerate", "Function", "solve", "Constant", "cells", "plot", "matplotlib.colorbar", "matplotlib.show", "inner", "Function.vector", "inner", "grad", "grad", "D.dofmap.cell_dofs", "kappa.vector", "grad", "grad", "cell.index", "D.dofmap.cell_dofs", "cell.index"], "function", ["None"], ["", "def", "compute_gradients", "(", "component_index", ",", "\n", "mesh", ",", "\n", "kappa", ",", "\n", "E", ",", "\n", "boundary", ",", "\n", "cache", ",", "\n", "solution", ",", "\n", "pl", "=", "False", ")", ":", "\n", "# print(\"compute gradient\")", "\n", "    ", "V", "=", "FunctionSpace", "(", "mesh", ",", "\"Lagrange\"", ",", "1", ")", "\n", "bc", "=", "DirichletBC", "(", "V", ",", "Constant", "(", "0.0", ")", ",", "boundary", ")", "\n", "w", "=", "TrialFunction", "(", "V", ")", "\n", "v", "=", "TestFunction", "(", "V", ")", "\n", "a", "=", "kappa", "*", "inner", "(", "grad", "(", "w", ")", ",", "grad", "(", "v", ")", ")", "*", "dx", "\n", "D", "=", "FunctionSpace", "(", "mesh", ",", "\"DG\"", ",", "0", ")", "\n", "\n", "dkappa", "=", "Function", "(", "D", ")", "\n", "dm", "=", "D", ".", "dofmap", "(", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "cells", "(", "mesh", ")", ")", ":", "\n", "        ", "dkappa", ".", "vector", "(", ")", "[", "dm", ".", "cell_dofs", "(", "\n", "cell", ".", "index", "(", ")", ")", "]", "=", "kappa", ".", "vector", "(", ")", "[", "dm", ".", "cell_dofs", "(", "\n", "cell", ".", "index", "(", ")", ")", "]", "*", "E", "[", "component_index", ",", "i", "]", "\n", "", "rhs", "=", "dkappa", "*", "inner", "(", "grad", "(", "solution", ")", ",", "grad", "(", "v", ")", ")", "*", "dx", "\n", "\n", "w", "=", "Function", "(", "V", ")", "\n", "solve", "(", "a", "==", "rhs", ",", "w", ",", "bc", ")", "\n", "\n", "if", "pl", ":", "\n", "        ", "w_pl", "=", "plot", "(", "w", ",", "title", "=", "'w'", ")", "\n", "plt", ".", "colorbar", "(", "w_pl", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial05.05_SPDE_on_fenics_solver.show_mode": [[121, 131], ["MeshFunction", "enumerate", "plot", "matplotlib.show", "cells"], "function", ["None"], ["", "def", "show_mode", "(", "mode", ",", "mesh", ")", ":", "\n", "    ", "c", "=", "MeshFunction", "(", "\"double\"", ",", "mesh", ",", "2", ")", "\n", "# value = mode.dot(E)", "\n", "\n", "# Iterate over mesh and set values", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "cells", "(", "mesh", ")", ")", ":", "\n", "        ", "c", "[", "cell", "]", "=", "mode", "[", "i", "]", "#np.exp(value[i])", "\n", "\n", "", "plot", "(", "c", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial06.06_kernel-based_AS.sample_in_out": [[27, 43], ["autograd.array", "autograd.array", "autograd.random.uniform", "athena.utils.Normalizer", "athena.utils.Normalizer.fit_transform", "functools.partial", "functools.partial.", "autograd.elementwise_grad", "autograd.ones", "autograd.ones", "autograd.cos"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.fit_transform"], ["def", "sample_in_out", "(", "input_dim", ",", "n_samples", ")", ":", "\n", "#input ranges", "\n", "    ", "lb", "=", "np", ".", "array", "(", "-", "3", "*", "np", ".", "ones", "(", "input_dim", ")", ")", "\n", "ub", "=", "np", ".", "array", "(", "3", "*", "np", ".", "ones", "(", "input_dim", ")", ")", "\n", "\n", "#input normalization", "\n", "XX", "=", "np", ".", "random", ".", "uniform", "(", "lb", ",", "ub", ",", "(", "n_samples", ",", "input_dim", ")", ")", "\n", "\n", "nor", "=", "Normalizer", "(", "lb", ",", "ub", ")", "\n", "x", "=", "nor", ".", "fit_transform", "(", "XX", ")", "\n", "\n", "#output values (f) and gradients (df)", "\n", "func", "=", "partial", "(", "radial", ",", "normalizer", "=", "nor", ",", "generatrix", "=", "lambda", "x", ":", "np", ".", "cos", "(", "x", ")", ")", "\n", "f", "=", "func", "(", "x", ")", "\n", "df", "=", "egrad", "(", "func", ")", "(", "x", ")", "\n", "return", "x", ",", "f", ",", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial06.numpy_functions.radial": [[3, 7], ["generatrix", "normalizer.inverse_transform", "autograd.linalg.norm"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial03.03_response_surfaces.generatrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["def", "radial", "(", "x", ",", "generatrix", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "generatrix", "(", "np", ".", "linalg", ".", "norm", "(", "x", ",", "axis", "=", "1", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial06.numpy_functions.sin_2d": [[8, 12], ["normalizer.inverse_transform", "autograd.sin"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "sin_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "0.5", "*", "np", ".", "sin", "(", "2", "*", "np", ".", "pi", "*", "(", "x", "[", ":", ",", "0", "]", "+", "x", "[", ":", ",", "1", "]", ")", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial06.numpy_functions.exp_2d": [[13, 17], ["autograd.exp", "normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "exp_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "np", ".", "exp", "(", "-", "(", "x", "[", ":", ",", "0", "]", "-", "0.5", ")", "**", "2", "-", "x", "[", ":", ",", "1", "]", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tutorial06.numpy_functions.cubic_2d": [[18, 22], ["normalizer.inverse_transform"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "cubic_2d", "(", "x", ",", "normalizer", "=", "None", ")", ":", "\n", "    ", "if", "normalizer", ":", "\n", "        ", "x", "=", "normalizer", ".", "inverse_transform", "(", "x", ")", "\n", "", "return", "x", "[", ":", ",", "0", "]", "**", "3", "+", "x", "[", ":", ",", "1", "]", "**", "3", "+", "0.2", "*", "x", "[", ":", ",", "0", "]", "+", "0.6", "*", "x", "[", ":", ",", "1", "]", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_init_W1": [[20, 23], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertIsNone"], "methods", ["None"], ["    ", "def", "test_init_W1", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "W1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_init_W2": [[24, 27], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_W2", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "W2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_init_evals": [[28, 31], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_evals", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_init_evects": [[32, 35], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_evects", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_init_evals_br": [[36, 39], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_evals_br", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "evals_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_init_subs_br": [[40, 43], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_subs_br", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "subs_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_init_dim": [[44, 47], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertEqual"], "methods", ["None"], ["", "def", "test_init_dim", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertEqual", "(", "ss", ".", "dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_01": [[48, 52], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces.fit"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit"], ["", "def", "test_fit_01", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "fit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_02": [[53, 61], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_fit_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_evals", "=", "np", ".", "array", "(", "[", "0.571596", ",", "0.465819", ",", "0.272198", ",", "0.175012", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_03": [[62, 73], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "[", "[", "-", "0.019091", ",", "-", "0.408566", ",", "0.861223", ",", "-", "0.301669", "]", ",", "\n", "[", "-", "0.767799", ",", "0.199069", ",", "0.268823", ",", "0.546434", "]", ",", "\n", "[", "-", "0.463451", ",", "-", "0.758442", ",", "-", "0.427696", ",", "-", "0.164486", "]", ",", "\n", "[", "-", "0.441965", ",", "0.467131", ",", "-", "0.055723", ",", "-", "0.763774", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_04": [[74, 82], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'local'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "true_evals", "=", "np", ".", "array", "(", "[", "13.794711", ",", "11.102377", ",", "3.467318", ",", "1.116324", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_05": [[83, 94], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'local'", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "[", "[", "-", "0.164383", ",", "0.717021", ",", "-", "0.237246", ",", "-", "0.634486", "]", ",", "\n", "[", "-", "0.885808", ",", "0.177628", ",", "0.004112", ",", "0.428691", "]", ",", "\n", "[", "0.255722", ",", "0.558199", ",", "0.734083", ",", "0.290071", "]", ",", "\n", "[", "0.350612", ",", "0.377813", ",", "-", "0.636254", ",", "0.574029", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_06": [[95, 103], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_06", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "15", ",", "3", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_evals", "=", "np", ".", "array", "(", "[", "1.32606312", ",", "1.20519582", ",", "0.94811868", ",", "0.68505712", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_07": [[104, 116], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_07", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "15", ",", "3", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "\n", "[", "[", "0.67237041", ",", "0.49917148", ",", "0.50889687", ",", "0.1994238", "]", ",", "\n", "[", "0.20398894", ",", "-", "0.66183856", ",", "0.09970486", ",", "0.71443486", "]", ",", "\n", "[", "-", "0.52895262", ",", "-", "0.11348076", ",", "0.83802337", ",", "-", "0.07104981", "]", ",", "\n", "[", "0.47593663", ",", "-", "0.54764923", ",", "0.16970489", ",", "-", "0.66690696", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_08": [[117, 130], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.diag", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_08", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "15", ",", "3", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "metric", "=", "np", ".", "diag", "(", "2", "*", "np", ".", "ones", "(", "3", ")", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ",", "metric", "=", "metric", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "\n", "[", "[", "0.67237041", ",", "0.49917148", ",", "0.50889687", ",", "0.1994238", "]", ",", "\n", "[", "0.20398894", ",", "-", "0.66183856", ",", "0.09970486", ",", "0.71443486", "]", ",", "\n", "[", "-", "0.52895262", ",", "-", "0.11348076", ",", "0.83802337", ",", "-", "0.07104981", "]", ",", "\n", "[", "0.47593663", ",", "-", "0.54764923", ",", "0.16970489", ",", "-", "0.66690696", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_09": [[131, 141], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_09", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "45", ")", ".", "reshape", "(", "15", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'local'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ",", "weights", "=", "weights", ")", "\n", "true_evals", "=", "np", ".", "array", "(", "\n", "[", "84.08055975", ",", "25.87980349", ",", "9.61982202", ",", "8.29248646", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_10": [[142, 156], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.diag", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_10", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "45", ")", ".", "reshape", "(", "15", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "metric", "=", "np", ".", "diag", "(", "2", "*", "np", ".", "ones", "(", "3", ")", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'local'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ",", "weights", "=", "weights", ",", "metric", "=", "metric", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "\n", "[", "[", "0.75159386", ",", "0.34814972", ",", "0.5093598", ",", "0.23334745", "]", ",", "\n", "[", "-", "0.44047075", ",", "0.89306499", ",", "-", "0.00249322", ",", "0.09172904", "]", ",", "\n", "[", "0.35007644", ",", "0.2587911", ",", "-", "0.30548878", ",", "-", "0.84684725", "]", ",", "\n", "[", "0.34429445", ",", "0.11938954", ",", "-", "0.8045017", ",", "0.46902504", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_11": [[157, 169], ["numpy.random.seed", "numpy.array", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.testing.assert_array_almost_equal", "range"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit"], ["", "def", "test_fit_11", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "grad", "=", "np", ".", "array", "(", "\n", "[", "[", "-", "0.50183952", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "-", "1.26638196", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.43017941", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.65008914", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "gradients", "=", "(", "grad", "[", "i", ",", ":", "]", "for", "i", "in", "range", "(", "4", ")", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ")", "\n", "true_evals", "=", "[", "2.040621", ",", "0.", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_12": [[170, 187], ["numpy.random.seed", "numpy.array", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "range"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit"], ["", "def", "test_fit_12", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "grad", "=", "np", ".", "array", "(", "\n", "[", "[", "-", "0.50183952", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "-", "1.26638196", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.43017941", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.65008914", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "gradients", "=", "(", "grad", "[", "i", ",", ":", "]", "for", "i", "in", "range", "(", "4", ")", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "[", "[", "1.", ",", "0.", "]", ",", "[", "0.", ",", "1.", "]", ",", "[", "0.", ",", "0.", "]", ",", "[", "0.", ",", "\n", "0.", "]", ",", "[", "0.", ",", "0.", "]", ",", "\n", "[", "0.", ",", "0.", "]", ",", "[", "0.", ",", "0.", "]", ",", "[", "0.", ",", "0.", "]", ",", "[", "0.", ",", "\n", "0.", "]", ",", "[", "0.", ",", "0.", "]", ",", "\n", "[", "0.", ",", "0.", "]", ",", "[", "0.", ",", "0.", "]", ",", "[", "0.", ",", "0.", "]", ",", "[", "0.", ",", "0.", "]", ",", "\n", "[", "0.", ",", "0.", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_activity_scores_01": [[188, 195], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_activity_scores_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "15", ",", "3", ",", "4", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ")", "\n", "true_scores", "=", "np", ".", "array", "(", "[", "0.599489", ",", "0.055179", ",", "0.37102", ",", "0.300374", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_scores", ",", "ss", ".", "activity_scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_activity_scores_02": [[196, 203], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_activity_scores_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "15", ",", "3", ",", "4", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ")", "\n", "true_scores", "=", "np", ".", "array", "(", "[", "0.89979047", ",", "0.58309172", ",", "0.38654072", ",", "0.6618360", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_scores", ",", "ss", ".", "activity_scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_activity_scores_03": [[204, 210], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "test_active.TestUtils.assertRaises", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_activity_scores_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "15", ",", "3", ",", "4", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "activity_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_activity_scores_04": [[211, 223], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform", "range"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_activity_scores_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "4", ",", "15", ")", "\n", "gradients", "=", "(", "inputs", "[", "i", ",", ":", "]", "for", "i", "in", "range", "(", "4", ")", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ")", "\n", "true_scores", "=", "np", ".", "array", "(", "[", "\n", "0.061844", ",", "0.914259", ",", "0.868018", ",", "0.830417", ",", "1.081719", ",", "0.652845", ",", "\n", "0.486826", ",", "0.974479", ",", "0.165313", ",", "0.111259", ",", "1.135542", ",", "0.547697", ",", "\n", "1.099458", ",", "0.860475", ",", "0.377612", "\n", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_scores", ",", "ss", ".", "activity_scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_transform_01": [[224, 233], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_transform_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "active", "=", "ss", ".", "transform", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", ")", "[", "0", "]", "\n", "true_active", "=", "np", ".", "array", "(", "[", "[", "-", "0.004748", ",", "0.331107", "]", ",", "[", "-", "0.949099", ",", "0.347534", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_active", ",", "active", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_transform_02": [[234, 244], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_transform_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "inactive", "=", "ss", ".", "transform", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", ")", "[", "1", "]", "\n", "true_inactive", "=", "np", ".", "array", "(", "[", "[", "-", "1.03574242", ",", "-", "0.04662904", "]", ",", "\n", "[", "-", "0.49850367", ",", "-", "0.37146678", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_inactive", ",", "inactive", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_transform_03": [[245, 255], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces.transform", "numpy.testing.assert_array_almost_equal", "active.dot", "inactive.dot", "numpy.random.uniform", "numpy.random.uniform", "numpy.diag", "numpy.random.uniform", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_transform_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "45", ")", ".", "reshape", "(", "15", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ",", "metric", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "3", ")", ")", ")", "\n", "new_inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", "\n", "active", ",", "inactive", "=", "ss", ".", "transform", "(", "new_inputs", ")", "\n", "reconstructed_inputs", "=", "active", ".", "dot", "(", "ss", ".", "W1", ".", "T", ")", "+", "inactive", ".", "dot", "(", "ss", ".", "W2", ".", "T", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "new_inputs", ",", "reconstructed_inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_transform_04": [[256, 266], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_transform_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "45", ")", ".", "reshape", "(", "15", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "active", "=", "ss", ".", "transform", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", ")", "[", "0", "]", "\n", "true_active", "=", "np", ".", "array", "(", "[", "[", "0.15284753", ",", "0.67109407", "]", ",", "\n", "[", "0.69006622", ",", "-", "0.4165206", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_active", ",", "active", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_transform_05": [[267, 277], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_transform_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "inactive", "=", "ss", ".", "transform", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", ")", "[", "1", "]", "\n", "true_inactive", "=", "np", ".", "array", "(", "[", "[", "-", "1.03574242", ",", "-", "0.04662904", "]", ",", "\n", "[", "-", "0.49850367", ",", "-", "0.37146678", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_inactive", ",", "inactive", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_inverse_transform_01": [[278, 289], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.random.uniform().reshape", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "athena.active.ActiveSubspaces.inverse_transform", "numpy.kron", "numpy.random.uniform().reshape.dot", "numpy.random.uniform", "numpy.random.uniform", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_inverse_transform_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "new_inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", "\n", "active", "=", "ss", ".", "transform", "(", "new_inputs", ")", "[", "0", "]", "\n", "new_inputs", "=", "ss", ".", "inverse_transform", "(", "reduced_inputs", "=", "active", ",", "n_points", "=", "5", ")", "[", "0", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "np", ".", "kron", "(", "active", ",", "np", ".", "ones", "(", "(", "5", ",", "1", ")", ")", ")", ",", "\n", "new_inputs", ".", "dot", "(", "ss", ".", "W1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_inverse_transform_02": [[290, 302], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.random.uniform().reshape", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "athena.active.ActiveSubspaces.inverse_transform", "numpy.kron", "numpy.random.uniform().reshape.dot", "numpy.random.uniform", "numpy.random.uniform", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_inverse_transform_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "80", ")", ".", "reshape", "(", "16", ",", "5", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "3", ",", "16", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "new_inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "3", ",", "5", ")", "\n", "active", "=", "ss", ".", "transform", "(", "new_inputs", ")", "[", "0", "]", "\n", "new_inputs", "=", "ss", ".", "inverse_transform", "(", "reduced_inputs", "=", "active", ",", "\n", "n_points", "=", "500", ")", "[", "0", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "np", ".", "kron", "(", "active", ",", "np", ".", "ones", "(", "(", "500", ",", "1", ")", ")", ")", ",", "\n", "new_inputs", ".", "dot", "(", "ss", ".", "W1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_rejection_sampling_inactive_01": [[303, 319], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.random.uniform().reshape", "numpy.array", "numpy.swapaxes", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "athena.active.ActiveSubspaces._rotate_x", "numpy.random.uniform().reshape.dot", "numpy.random.uniform", "numpy.random.uniform", "athena.active.ActiveSubspaces._rejection_sampling_inactive"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rotate_x", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rejection_sampling_inactive"], ["", "def", "test_rejection_sampling_inactive_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "new_inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", "\n", "active", "=", "ss", ".", "transform", "(", "new_inputs", ")", "[", "0", "]", "\n", "inactive_swap", "=", "np", ".", "array", "(", "[", "\n", "ss", ".", "_rejection_sampling_inactive", "(", "reduced_input", "=", "red_inp", ",", "n_points", "=", "1", ")", "\n", "for", "red_inp", "in", "active", "\n", "]", ")", "\n", "inactive_inputs", "=", "np", ".", "swapaxes", "(", "inactive_swap", ",", "1", ",", "2", ")", "\n", "new_inputs", "=", "ss", ".", "_rotate_x", "(", "reduced_inputs", "=", "active", ",", "\n", "inactive_inputs", "=", "inactive_inputs", ")", "[", "0", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "active", ",", "new_inputs", ".", "dot", "(", "ss", ".", "W1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_rejection_sampling_inactive_02": [[320, 337], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.random.uniform().reshape", "numpy.array", "numpy.swapaxes", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "athena.active.ActiveSubspaces._rotate_x", "numpy.kron", "numpy.random.uniform().reshape.dot", "numpy.random.uniform", "numpy.random.uniform", "athena.active.ActiveSubspaces._rejection_sampling_inactive", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rotate_x", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rejection_sampling_inactive"], ["", "def", "test_rejection_sampling_inactive_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "new_inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", "\n", "active", "=", "ss", ".", "transform", "(", "new_inputs", ")", "[", "0", "]", "\n", "inactive_swap", "=", "np", ".", "array", "(", "[", "\n", "ss", ".", "_rejection_sampling_inactive", "(", "reduced_input", "=", "red_inp", ",", "n_points", "=", "10", ")", "\n", "for", "red_inp", "in", "active", "\n", "]", ")", "\n", "inactive_inputs", "=", "np", ".", "swapaxes", "(", "inactive_swap", ",", "1", ",", "2", ")", "\n", "new_inputs", "=", "ss", ".", "_rotate_x", "(", "reduced_inputs", "=", "active", ",", "\n", "inactive_inputs", "=", "inactive_inputs", ")", "[", "0", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "np", ".", "kron", "(", "active", ",", "np", ".", "ones", "(", "(", "10", ",", "1", ")", ")", ")", ",", "\n", "new_inputs", ".", "dot", "(", "ss", ".", "W1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_hit_and_run_inactive_01": [[338, 354], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.random.uniform().reshape", "numpy.array", "numpy.swapaxes", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "athena.active.ActiveSubspaces._rotate_x", "numpy.random.uniform().reshape.dot", "numpy.random.uniform", "numpy.random.uniform", "athena.active.ActiveSubspaces._hit_and_run_inactive"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rotate_x", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._hit_and_run_inactive"], ["", "def", "test_hit_and_run_inactive_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "new_inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", "\n", "active", "=", "ss", ".", "transform", "(", "new_inputs", ")", "[", "0", "]", "\n", "inactive_swap", "=", "np", ".", "array", "(", "[", "\n", "ss", ".", "_hit_and_run_inactive", "(", "reduced_input", "=", "red_inp", ",", "n_points", "=", "1", ")", "\n", "for", "red_inp", "in", "active", "\n", "]", ")", "\n", "inactive_inputs", "=", "np", ".", "swapaxes", "(", "inactive_swap", ",", "1", ",", "2", ")", "\n", "new_inputs", "=", "ss", ".", "_rotate_x", "(", "reduced_inputs", "=", "active", ",", "\n", "inactive_inputs", "=", "inactive_inputs", ")", "[", "0", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "active", ",", "new_inputs", ".", "dot", "(", "ss", ".", "W1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_hit_and_run_inactive_02": [[355, 372], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.random.uniform().reshape", "numpy.array", "numpy.swapaxes", "numpy.testing.assert_array_almost_equal", "athena.active.ActiveSubspaces.transform", "athena.active.ActiveSubspaces._rotate_x", "numpy.kron", "numpy.random.uniform().reshape.dot", "numpy.random.uniform", "numpy.random.uniform", "athena.active.ActiveSubspaces._hit_and_run_inactive", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._rotate_x", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._hit_and_run_inactive"], ["", "def", "test_hit_and_run_inactive_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'local'", ",", "n_boot", "=", "250", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "new_inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", "\n", "active", "=", "ss", ".", "transform", "(", "new_inputs", ")", "[", "0", "]", "\n", "inactive_swap", "=", "np", ".", "array", "(", "[", "\n", "ss", ".", "_hit_and_run_inactive", "(", "reduced_input", "=", "red_inp", ",", "n_points", "=", "10", ")", "\n", "for", "red_inp", "in", "active", "\n", "]", ")", "\n", "inactive_inputs", "=", "np", ".", "swapaxes", "(", "inactive_swap", ",", "1", ",", "2", ")", "\n", "new_inputs", "=", "ss", ".", "_rotate_x", "(", "reduced_inputs", "=", "active", ",", "\n", "inactive_inputs", "=", "inactive_inputs", ")", "[", "0", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "np", ".", "kron", "(", "active", ",", "np", ".", "ones", "(", "(", "10", ",", "1", ")", ")", ")", ",", "\n", "new_inputs", ".", "dot", "(", "ss", ".", "W1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_partition_01": [[373, 380], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces._partition", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_partition_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "ss", ".", "_partition", "(", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "matrix", "[", ":", ",", ":", "2", "]", ",", "ss", ".", "W1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_partition_02": [[381, 388], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces._partition", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_partition_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "ss", ".", "_partition", "(", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "matrix", "[", ":", ",", "2", ":", "]", ",", "ss", ".", "W2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_partition_03": [[389, 396], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces._partition", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_partition_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2.0", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_partition_04": [[397, 404], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces._partition", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_partition_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "0.", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_partition_05": [[405, 412], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces._partition", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_partition_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "4", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_bootstrap_replicate_01": [[413, 420], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.active.ActiveSubspaces._bootstrap_replicate", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_bootstrap_replicate_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "/", "3", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "wei", "=", "ss", ".", "_bootstrap_replicate", "(", "matrix", ",", "weights", ")", "[", "1", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "weights", ",", "wei", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_bootstrap_replicate_02": [[421, 431], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.active.ActiveSubspaces._bootstrap_replicate", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_bootstrap_replicate_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "/", "3", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "mat", "=", "ss", ".", "_bootstrap_replicate", "(", "matrix", ",", "weights", ")", "[", "0", "]", "\n", "true_matrix", "=", "np", ".", "array", "(", "[", "[", "-", "0.88383278", ",", "0.73235229", ",", "0.20223002", "]", ",", "\n", "[", "0.19731697", ",", "-", "0.68796272", ",", "-", "0.68801096", "]", ",", "\n", "[", "-", "0.25091976", ",", "0.90142861", ",", "0.46398788", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_matrix", ",", "mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_bootstrap_replicate_03": [[432, 439], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.active.ActiveSubspaces._bootstrap_replicate", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_bootstrap_replicate_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "27", ")", ".", "reshape", "(", "3", ",", "3", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "/", "3", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "wei", "=", "ss", ".", "_bootstrap_replicate", "(", "matrix", ",", "weights", ")", "[", "1", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "weights", ",", "wei", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_bootstrap_replicate_04": [[440, 456], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.active.ActiveSubspaces._bootstrap_replicate", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_bootstrap_replicate_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "27", ")", ".", "reshape", "(", "3", ",", "3", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "/", "3", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "mat", "=", "ss", ".", "_bootstrap_replicate", "(", "matrix", ",", "weights", ")", "[", "0", "]", "\n", "true_matrix", "=", "np", ".", "array", "(", "[", "[", "[", "-", "0.13610996", ",", "-", "0.41754172", ",", "0.22370579", "]", ",", "\n", "[", "-", "0.72101228", ",", "-", "0.4157107", ",", "-", "0.26727631", "]", ",", "\n", "[", "-", "0.08786003", ",", "0.57035192", ",", "-", "0.60065244", "]", "]", ",", "\n", "[", "[", "-", "0.25091976", ",", "0.90142861", ",", "0.46398788", "]", ",", "\n", "[", "0.19731697", ",", "-", "0.68796272", ",", "-", "0.68801096", "]", ",", "\n", "[", "-", "0.88383278", ",", "0.73235229", ",", "0.20223002", "]", "]", ",", "\n", "[", "[", "-", "0.13610996", ",", "-", "0.41754172", ",", "0.22370579", "]", ",", "\n", "[", "-", "0.72101228", ",", "-", "0.4157107", ",", "-", "0.26727631", "]", ",", "\n", "[", "-", "0.08786003", ",", "0.57035192", ",", "-", "0.60065244", "]", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_matrix", ",", "mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_bootstrap_ranges_01": [[457, 466], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_bootstrap_ranges_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "30", ",", "1", ")", ")", "/", "30", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "100", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_bounds_evals", "=", "np", ".", "array", "(", "[", "[", "0.3000497", ",", "0.59008536", "]", ",", "\n", "[", "0.17398718", ",", "0.40959827", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_bounds_evals", ",", "ss", ".", "evals_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_bootstrap_ranges_02": [[467, 475], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_bootstrap_ranges_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "30", ",", "1", ")", ")", "/", "30", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'exact'", ",", "n_boot", "=", "100", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_bounds_subspace", "=", "np", ".", "array", "(", "[", "[", "0.00261813", ",", "0.58863862", ",", "0.99998352", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_bounds_subspace", ",", "ss", ".", "subs_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_bootstrap_ranges_03": [[476, 485], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_bootstrap_ranges_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "30", ",", "3", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "30", ",", "1", ")", ")", "/", "30", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "100", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_bounds_evals", "=", "np", ".", "array", "(", "[", "[", "0.99330673", ",", "1.62694823", "]", ",", "\n", "[", "0.65987633", ",", "1.11751475", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_bounds_evals", ",", "ss", ".", "evals_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_fit_bootstrap_ranges_04": [[486, 494], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_fit_bootstrap_ranges_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "30", ",", "3", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "30", ",", "1", ")", ")", "/", "30", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "100", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_bounds_subspace", "=", "np", ".", "array", "(", "[", "[", "0.00109331", ",", "0.30254992", ",", "0.90447872", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_bounds_subspace", ",", "ss", ".", "subs_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvalues_01": [[495, 499], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces.plot_eigenvalues"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues"], ["", "def", "test_plot_eigenvalues_01", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvalues", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvalues_02": [[500, 508], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.ones", "test_active.assert_plot_figures_added", "athena.active.ActiveSubspaces.plot_eigenvalues", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvalues_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvalues", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvalues_03": [[509, 517], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.ones", "test_active.assert_plot_figures_added", "athena.active.ActiveSubspaces.plot_eigenvalues", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvalues_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvalues", "(", "n_evals", "=", "3", ",", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvalues_04": [[518, 526], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.ones", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces.plot_eigenvalues", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvalues_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvalues", "(", "n_evals", "=", "5", ",", "figsize", "=", "(", "7", ",", "7", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvalues_05": [[527, 539], ["numpy.random.seed", "numpy.array", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "test_active.assert_plot_figures_added", "athena.active.ActiveSubspaces.plot_eigenvalues", "range"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues"], ["", "", "def", "test_plot_eigenvalues_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "grad", "=", "np", ".", "array", "(", "\n", "[", "[", "-", "0.50183952", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "-", "1.26638196", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.43017941", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.65008914", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "gradients", "=", "(", "grad", "[", "i", ",", ":", "]", "for", "i", "in", "range", "(", "4", ")", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'exact'", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvalues", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvectors_01": [[540, 544], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces.plot_eigenvectors"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors"], ["", "", "def", "test_plot_eigenvectors_01", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvectors", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvectors_02": [[545, 553], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.ones", "test_active.assert_plot_figures_added", "athena.active.ActiveSubspaces.plot_eigenvectors", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvectors_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvectors", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvectors'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvectors_03": [[554, 563], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.ones", "test_active.assert_plot_figures_added", "athena.active.ActiveSubspaces.plot_eigenvectors", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvectors_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvectors", "(", "n_evects", "=", "2", ",", "\n", "labels", "=", "[", "r'$x$'", ",", "r'$y$'", ",", "r'$r$'", ",", "r'$z$'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvectors_04": [[564, 572], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.ones", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces.plot_eigenvectors", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvectors_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvectors", "(", "n_evects", "=", "10", ",", "figsize", "=", "(", "7", ",", "7", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_eigenvectors_05": [[573, 585], ["numpy.random.seed", "numpy.array", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "test_active.assert_plot_figures_added", "athena.active.ActiveSubspaces.plot_eigenvectors", "range"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors"], ["", "", "def", "test_plot_eigenvectors_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "grad", "=", "np", ".", "array", "(", "\n", "[", "[", "-", "0.50183952", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "-", "1.26638196", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.43017941", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.65008914", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "gradients", "=", "(", "grad", "[", "i", ",", ":", "]", "for", "i", "in", "range", "(", "4", ")", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'exact'", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvectors", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvectors'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_sufficient_summary_01": [[586, 590], ["athena.active.ActiveSubspaces", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces.plot_sufficient_summary"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary"], ["", "", "def", "test_plot_sufficient_summary_01", "(", "self", ")", ":", "\n", "        ", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_sufficient_summary", "(", "10", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_sufficient_summary_02": [[591, 599], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.ones", "test_active.TestUtils.assertRaises", "athena.active.ActiveSubspaces.plot_sufficient_summary", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_sufficient_summary_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "3", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "plot_sufficient_summary", "(", "10", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_sufficient_summary_03": [[600, 610], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "numpy.ones", "test_active.assert_plot_figures_added", "athena.active.ActiveSubspaces.plot_sufficient_summary", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_sufficient_summary_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "n_boot", "=", "200", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_sufficient_summary", "(", "\n", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "100", ")", ".", "reshape", "(", "25", ",", "4", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "25", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_plot_sufficient_summary_04": [[611, 620], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces.fit", "test_active.assert_plot_figures_added", "athena.active.ActiveSubspaces.plot_sufficient_summary", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_sufficient_summary_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "n_boot", "=", "100", ")", "\n", "ss", ".", "fit", "(", "gradients", "=", "gradients", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_sufficient_summary", "(", "\n", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "100", ")", ".", "reshape", "(", "25", ",", "4", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "25", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.TestUtils.test_frequent_directions_01": [[621, 633], ["numpy.random.seed", "numpy.array", "athena.active.ActiveSubspaces", "athena.active.ActiveSubspaces._frequent_directions", "test_active.TestUtils.assertEqual", "test_active.TestUtils.assertEqual", "range"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces._frequent_directions"], ["", "", "def", "test_frequent_directions_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "grad", "=", "np", ".", "array", "(", "\n", "[", "[", "-", "0.50183952", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "-", "1.26638196", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.43017941", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.65008914", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "gradients", "=", "(", "grad", "[", "i", ",", ":", "]", "for", "i", "in", "range", "(", "4", ")", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'exact'", ",", "n_boot", "=", "150", ")", "\n", "evals", ",", "v", "=", "ss", ".", "_frequent_directions", "(", "gradients", "=", "gradients", ")", "\n", "self", ".", "assertEqual", "(", "v", ".", "shape", ",", "(", "15", ",", "2", ")", ")", "\n", "self", ".", "assertEqual", "(", "evals", ".", "shape", ",", "(", "2", ",", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_active.assert_plot_figures_added": [[8, 17], ["matplotlib.gcf", "matplotlib.gcf"], "function", ["None"], ["@", "contextmanager", "\n", "def", "assert_plot_figures_added", "(", ")", ":", "\n", "    ", "\"\"\"\n    Assert that the number of figures is higher than when you started the test\n    \"\"\"", "\n", "num_figures_before", "=", "plt", ".", "gcf", "(", ")", ".", "number", "\n", "yield", "\n", "num_figures_after", "=", "plt", ".", "gcf", "(", ")", ".", "number", "\n", "assert", "num_figures_before", "<", "num_figures_after", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_normalizer_init_lb": [[12, 15], ["athena.utils.Normalizer", "numpy.testing.assert_array_equal", "numpy.arange", "numpy.arange", "numpy.arange"], "methods", ["None"], ["    ", "def", "test_normalizer_init_lb", "(", "self", ")", ":", "\n", "        ", "normalizer", "=", "Normalizer", "(", "np", ".", "arange", "(", "5", ")", ",", "np", ".", "arange", "(", "2", ",", "7", ")", ")", "\n", "np", ".", "testing", ".", "assert_array_equal", "(", "normalizer", ".", "lb", ",", "np", ".", "arange", "(", "5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_normalizer_init_ub": [[16, 19], ["athena.utils.Normalizer", "numpy.testing.assert_array_equal", "numpy.arange", "numpy.arange", "numpy.arange"], "methods", ["None"], ["", "def", "test_normalizer_init_ub", "(", "self", ")", ":", "\n", "        ", "normalizer", "=", "Normalizer", "(", "np", ".", "arange", "(", "5", ")", ",", "np", ".", "arange", "(", "2", ",", "7", ")", ")", "\n", "np", ".", "testing", ".", "assert_array_equal", "(", "normalizer", ".", "ub", ",", "np", ".", "arange", "(", "2", ",", "7", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_normalizer_fit_transform": [[20, 30], ["numpy.random.seed", "athena.utils.Normalizer", "numpy.random.uniform().reshape", "athena.utils.Normalizer.fit_transform", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.fit_transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_normalizer_fit_transform", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "normalizer", "=", "Normalizer", "(", "-", "2", "*", "np", ".", "ones", "(", "3", ")", ",", "4", "*", "np", ".", "ones", "(", "3", ")", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "2", ",", "4", ",", "12", ")", ".", "reshape", "(", "4", ",", "3", ")", "\n", "ref_inputs", "=", "normalizer", ".", "fit_transform", "(", "inputs", ")", "\n", "true_norm", "=", "np", ".", "array", "(", "[", "[", "-", "0.25091976", ",", "0.90142861", ",", "0.46398788", "]", ",", "\n", "[", "0.19731697", ",", "-", "0.68796272", ",", "-", "0.68801096", "]", ",", "\n", "[", "-", "0.88383278", ",", "0.73235229", ",", "0.20223002", "]", ",", "\n", "[", "0.41614516", ",", "-", "0.95883101", ",", "0.9398197", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_norm", ",", "ref_inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_normalizer_inverse_transform": [[31, 38], ["numpy.random.seed", "athena.utils.Normalizer", "numpy.array", "athena.utils.Normalizer.inverse_transform", "numpy.array", "numpy.testing.assert_array_equal", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "def", "test_normalizer_inverse_transform", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "normalizer", "=", "Normalizer", "(", "-", "2", "*", "np", ".", "ones", "(", "3", ")", ",", "4", "*", "np", ".", "ones", "(", "3", ")", ")", "\n", "ref_inputs", "=", "np", ".", "array", "(", "[", "-", "1", ",", "0", ",", "1", "]", ")", "\n", "inputs", "=", "normalizer", ".", "inverse_transform", "(", "ref_inputs", ")", "\n", "true_unnorm", "=", "np", ".", "array", "(", "[", "-", "2", ",", "1", ",", "4", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_equal", "(", "true_unnorm", ",", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_initialize_weights": [[39, 44], ["numpy.random.uniform().reshape", "athena.utils.initialize_weights", "numpy.array().reshape", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.initialize_weights", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_initialize_weights", "(", "self", ")", ":", "\n", "        ", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "weights", "=", "initialize_weights", "(", "matrix", ")", "\n", "true_weights", "=", "np", ".", "array", "(", "[", "0.333333", ",", "0.333333", ",", "0.333333", "]", ")", ".", "reshape", "(", "3", ",", "1", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_weights", ",", "weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_linear_program_ineq": [[45, 52], ["numpy.ones", "numpy.array", "numpy.array", "athena.utils.linear_program_ineq", "numpy.array().reshape", "numpy.testing.assert_array_almost_equal", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.linear_program_ineq"], ["", "def", "test_linear_program_ineq", "(", "self", ")", ":", "\n", "        ", "c", "=", "np", ".", "ones", "(", "(", "2", ",", "1", ")", ")", "\n", "A", "=", "np", ".", "array", "(", "[", "[", "1.0", ",", "0.0", "]", ",", "[", "0.0", ",", "1.0", "]", ",", "[", "1.0", ",", "1.0", "]", "]", ")", "\n", "b", "=", "np", ".", "array", "(", "[", "[", "0.1", "]", ",", "[", "0.1", "]", ",", "[", "0.1", "]", "]", ")", "\n", "x", "=", "linear_program_ineq", "(", "c", ",", "A", ",", "b", ")", "\n", "true_x", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.1", "]", ")", ".", "reshape", "(", "2", ",", "1", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_x", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_local_linear_gradients_01": [[53, 63], ["numpy.random.seed", "numpy.random.uniform", "numpy.testing.assert_array_almost_equal", "athena.utils.local_linear_gradients", "numpy.tile", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.local_linear_gradients"], ["", "def", "test_local_linear_gradients_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1.0", ",", "1.0", ",", "size", "=", "(", "200", ",", "2", ")", ")", "\n", "outputs", "=", "2", "-", "5", "*", "inputs", "[", ":", ",", "0", "]", "+", "4", "*", "inputs", "[", ":", ",", "1", "]", "\n", "gradients", "=", "local_linear_gradients", "(", "inputs", ",", "outputs", ")", "[", "0", "]", "\n", "M", "=", "gradients", ".", "shape", "[", "0", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "gradients", ",", "\n", "np", ".", "tile", "(", "np", ".", "array", "(", "[", "-", "5.0", ",", "4.0", "]", ")", ",", "\n", "(", "M", ",", "1", ")", ")", ",", "\n", "decimal", "=", "9", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_local_linear_gradients_02": [[64, 74], ["numpy.random.seed", "numpy.random.uniform", "numpy.testing.assert_array_almost_equal", "athena.utils.local_linear_gradients", "numpy.tile", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.local_linear_gradients"], ["", "def", "test_local_linear_gradients_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1.0", ",", "1.0", ",", "size", "=", "(", "200", ",", "2", ")", ")", "\n", "outputs", "=", "2", "-", "5", "*", "inputs", "[", ":", ",", "0", "]", "+", "4", "*", "inputs", "[", ":", ",", "1", "]", "\n", "gradients", "=", "local_linear_gradients", "(", "inputs", ",", "outputs", ",", "n_neighbors", "=", "8", ")", "[", "0", "]", "\n", "M", "=", "gradients", ".", "shape", "[", "0", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "gradients", ",", "\n", "np", ".", "tile", "(", "np", ".", "array", "(", "[", "-", "5.0", ",", "4.0", "]", ")", ",", "\n", "(", "M", ",", "1", ")", ")", ",", "\n", "decimal", "=", "9", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_local_linear_gradients_03": [[75, 81], ["numpy.random.seed", "numpy.random.uniform", "test_utils.TestUtils.assertRaises", "athena.utils.local_linear_gradients"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.local_linear_gradients"], ["", "def", "test_local_linear_gradients_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1.0", ",", "1.0", ",", "size", "=", "(", "5", ",", "6", ")", ")", "\n", "outputs", "=", "2", "-", "5", "*", "inputs", "[", ":", ",", "0", "]", "+", "4", "*", "inputs", "[", ":", ",", "1", "]", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "local_linear_gradients", "(", "inputs", ",", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_local_linear_gradients_04": [[82, 88], ["numpy.random.seed", "numpy.random.uniform", "test_utils.TestUtils.assertRaises", "athena.utils.local_linear_gradients"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.local_linear_gradients"], ["", "", "def", "test_local_linear_gradients_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1.0", ",", "1.0", ",", "size", "=", "(", "10", ",", "2", ")", ")", "\n", "outputs", "=", "2", "-", "5", "*", "inputs", "[", ":", ",", "0", "]", "+", "4", "*", "inputs", "[", ":", ",", "1", "]", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "local_linear_gradients", "(", "inputs", ",", "outputs", ",", "n_neighbors", "=", "8.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_local_linear_gradients_05": [[89, 95], ["numpy.random.seed", "numpy.random.uniform", "test_utils.TestUtils.assertRaises", "athena.utils.local_linear_gradients"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.local_linear_gradients"], ["", "", "def", "test_local_linear_gradients_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1.0", ",", "1.0", ",", "size", "=", "(", "10", ",", "2", ")", ")", "\n", "outputs", "=", "2", "-", "5", "*", "inputs", "[", ":", ",", "0", "]", "+", "4", "*", "inputs", "[", ":", ",", "1", "]", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "local_linear_gradients", "(", "inputs", ",", "outputs", ",", "n_neighbors", "=", "15", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_sort_eigpairs_evals": [[96, 102], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.utils.sort_eigpairs", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.sort_eigpairs", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_sort_eigpairs_evals", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "evals", "=", "sort_eigpairs", "(", "matrix", ")", "[", "0", "]", "\n", "true_evals", "=", "np", ".", "array", "(", "[", "[", "1.466942", "]", ",", "[", "1.025235", "]", ",", "[", "0.294945", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evals", ",", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_sort_eigpairs_evects": [[103, 111], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.utils.sort_eigpairs", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.sort_eigpairs", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_sort_eigpairs_evects", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "evects", "=", "sort_eigpairs", "(", "matrix", ")", "[", "1", "]", "\n", "true_evects", "=", "np", ".", "array", "(", "[", "[", "0.511409", ",", "0.515297", ",", "0.687699", "]", ",", "\n", "[", "-", "0.653819", ",", "-", "0.286001", ",", "0.700517", "]", ",", "\n", "[", "0.557657", ",", "-", "0.807881", ",", "0.190647", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_01": [[112, 120], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.utils.CrossValidation", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "cv", "=", "CrossValidation", "(", "inputs", ",", "outputs", ",", "gradients", ",", "ss", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "cv", ".", "inputs", ",", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_02": [[121, 129], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.utils.CrossValidation", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'exact'", ")", "\n", "cv", "=", "CrossValidation", "(", "inputs", ",", "outputs", ",", "gradients", ",", "ss", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "cv", ".", "outputs", ",", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_03": [[130, 138], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.utils.CrossValidation", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "cv", "=", "CrossValidation", "(", "inputs", ",", "outputs", ",", "gradients", ",", "ss", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "cv", ".", "gradients", ",", "gradients", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_04": [[139, 147], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.utils.CrossValidation", "test_utils.TestUtils.assertEqual", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'exact'", ")", "\n", "cv", "=", "CrossValidation", "(", "inputs", ",", "outputs", ",", "gradients", ",", "ss", ")", "\n", "self", ".", "assertEqual", "(", "cv", ".", "ss", ",", "ss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_05": [[148, 156], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.utils.CrossValidation", "test_utils.TestUtils.assertEqual", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "cv", "=", "CrossValidation", "(", "inputs", ",", "outputs", ",", "gradients", ",", "ss", ")", "\n", "self", ".", "assertEqual", "(", "cv", ".", "folds", ",", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_06": [[157, 165], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.utils.CrossValidation", "test_utils.TestUtils.assertIsNone", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_06", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "cv", "=", "CrossValidation", "(", "inputs", ",", "outputs", ",", "gradients", ",", "ss", ")", "\n", "self", ".", "assertIsNone", "(", "cv", ".", "gp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_07": [[166, 173], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "test_utils.TestUtils.assertRaises", "athena.utils.CrossValidation", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_07", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "CrossValidation", "(", "inputs", ",", "outputs", ",", "None", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_fit_01": [[174, 187], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.utils.CrossValidation", "athena.utils.CrossValidation.fit", "test_utils.TestUtils.assertEqual", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_cross_validation_fit_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'exact'", ")", "\n", "csv", "=", "CrossValidation", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "folds", "=", "3", ",", "\n", "subspace", "=", "ss", ")", "\n", "csv", ".", "fit", "(", "inputs", ",", "gradients", ",", "outputs", ")", "\n", "self", ".", "assertEqual", "(", "csv", ".", "gp", ".", "X", ".", "shape", "[", "1", "]", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_fit_02": [[188, 201], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.utils.CrossValidation", "athena.utils.CrossValidation.fit", "test_utils.TestUtils.assertIsNotNone", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_fit_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ")", "\n", "csv", "=", "CrossValidation", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "folds", "=", "3", ",", "\n", "subspace", "=", "ss", ")", "\n", "csv", ".", "fit", "(", "inputs", ",", "gradients", ",", "outputs", ")", "\n", "self", ".", "assertIsNotNone", "(", "csv", ".", "gp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_run_01": [[202, 215], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.active.ActiveSubspaces", "athena.utils.CrossValidation", "numpy.testing.assert_array_almost_equal", "athena.utils.CrossValidation.run", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.run", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_run_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "15", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "-", "1", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "5", ",", "2", ",", "3", ")", "\n", "ss", "=", "ActiveSubspaces", "(", "dim", "=", "1", ",", "method", "=", "'exact'", ")", "\n", "csv", "=", "CrossValidation", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "folds", "=", "2", ",", "\n", "subspace", "=", "ss", ")", "\n", "true_value", "=", "(", "8.91180601306311", ",", "6.806790947903309", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "csv", ".", "run", "(", ")", ",", "true_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_cross_validation_run_02": [[216, 235], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.feature_map.FeatureMap", "athena.kas.KernelActiveSubspaces", "athena.utils.CrossValidation", "numpy.testing.assert_array_almost_equal", "athena.utils.CrossValidation.run", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.random.uniform().reshape.var"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.run", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_cross_validation_run_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "20", ")", ".", "reshape", "(", "5", ",", "2", ",", "2", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'laplace'", ",", "\n", "bias", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "3", ")", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "3", ",", "\n", "params", "=", "np", ".", "zeros", "(", "1", ")", ",", "\n", "sigma_f", "=", "outputs", ".", "var", "(", ")", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "1", ",", "feature_map", "=", "fm", ")", "\n", "csv", "=", "CrossValidation", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "folds", "=", "2", ",", "\n", "subspace", "=", "ss", ")", "\n", "true_value", "=", "(", "2.26333743325053", ",", "0.43902733603381605", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "csv", ".", "run", "(", ")", ",", "true_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_rrmse_01": [[236, 242], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.testing.assert_array_equal", "athena.utils.rrmse", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.rrmse", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_rrmse_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "predictions", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "5", ")", ".", "reshape", "(", "5", ")", "\n", "targets", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "5", ")", ".", "reshape", "(", "5", ")", "\n", "true", "=", "1.5298111757191089", "\n", "np", ".", "testing", ".", "assert_array_equal", "(", "rrmse", "(", "predictions", ",", "targets", ")", ",", "true", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_rrmse_02": [[243, 249], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.testing.assert_array_equal", "athena.utils.rrmse", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.rrmse", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_rrmse_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "predictions", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "targets", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "true", "=", "0.9089760363050161", "\n", "np", ".", "testing", ".", "assert_array_equal", "(", "rrmse", "(", "predictions", ",", "targets", ")", ",", "true", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_rrmse_03": [[250, 256], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "test_utils.TestUtils.assertRaises", "athena.utils.rrmse", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.rrmse", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_rrmse_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "predictions", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "targets", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "2", ",", "5", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "rrmse", "(", "predictions", ",", "targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_average_rrmse_01": [[257, 278], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.feature_map.FeatureMap", "athena.kas.KernelActiveSubspaces", "athena.utils.CrossValidation", "numpy.array", "athena.utils.average_rrmse", "numpy.testing.assert_equal", "numpy.zeros", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.random.uniform().reshape.var"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.average_rrmse", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_average_rrmse_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "20", ")", ".", "reshape", "(", "5", ",", "2", ",", "2", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'laplace'", ",", "\n", "bias", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "3", ")", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "3", ",", "\n", "params", "=", "np", ".", "zeros", "(", "1", ")", ",", "\n", "sigma_f", "=", "outputs", ".", "var", "(", ")", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "1", ",", "feature_map", "=", "fm", ")", "\n", "csv", "=", "CrossValidation", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "folds", "=", "2", ",", "\n", "subspace", "=", "ss", ")", "\n", "best", "=", "[", "0.1", ",", "np", ".", "zeros", "(", "(", "3", ",", "2", ")", ")", "]", "\n", "hyperparams", "=", "np", ".", "array", "(", "[", "-", "1.", "]", ")", "\n", "score", "=", "average_rrmse", "(", "hyperparams", ",", "best", ",", "csv", ",", "verbose", "=", "False", ",", "resample", "=", "1", ")", "\n", "np", ".", "testing", ".", "assert_equal", "(", "best", "[", "0", "]", ",", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_utils.TestUtils.test_average_rrmse_02": [[279, 301], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.feature_map.FeatureMap", "athena.kas.KernelActiveSubspaces", "athena.utils.CrossValidation", "numpy.array", "athena.utils.average_rrmse", "numpy.testing.assert_array_almost_equal", "numpy.zeros", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.random.uniform().reshape.var"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.average_rrmse", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_average_rrmse_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "20", ")", ".", "reshape", "(", "5", ",", "2", ",", "2", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'laplace'", ",", "\n", "bias", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "3", ")", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "3", ",", "\n", "params", "=", "np", ".", "zeros", "(", "1", ")", ",", "\n", "sigma_f", "=", "outputs", ".", "var", "(", ")", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "1", ",", "feature_map", "=", "fm", ",", "method", "=", "'exact'", ")", "\n", "csv", "=", "CrossValidation", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "folds", "=", "2", ",", "\n", "subspace", "=", "ss", ")", "\n", "best", "=", "[", "0.1", ",", "np", ".", "zeros", "(", "(", "3", ",", "2", ")", ")", "]", "\n", "hyperparams", "=", "np", ".", "array", "(", "[", "-", "1.", "]", ")", "\n", "score", "=", "average_rrmse", "(", "hyperparams", ",", "best", ",", "csv", ",", "verbose", "=", "True", ",", "resample", "=", "1", ")", "\n", "true", "=", "2.1357048222078703", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "score", ",", "true", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_init_n_layers": [[43, 50], ["athena.NonlinearLevelSet", "test_nll.TestNonlinearLevelSet.assertEqual"], "methods", ["None"], ["    ", "def", "test_init_n_layers", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "\n", "active_dim", "=", "1", ",", "\n", "lr", "=", "0.1", ",", "\n", "epochs", "=", "100", ",", "\n", "dh", "=", "0.25", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "n_layers", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_init_active_dim": [[51, 58], ["athena.NonlinearLevelSet", "test_nll.TestNonlinearLevelSet.assertEqual"], "methods", ["None"], ["", "def", "test_init_active_dim", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "\n", "active_dim", "=", "1", ",", "\n", "lr", "=", "0.1", ",", "\n", "epochs", "=", "100", ",", "\n", "dh", "=", "0.25", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "active_dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_init_lr": [[59, 66], ["athena.NonlinearLevelSet", "test_nll.TestNonlinearLevelSet.assertEqual"], "methods", ["None"], ["", "def", "test_init_lr", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "\n", "active_dim", "=", "1", ",", "\n", "lr", "=", "0.1", ",", "\n", "epochs", "=", "100", ",", "\n", "dh", "=", "0.25", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "lr", ",", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_init_epochs": [[67, 74], ["athena.NonlinearLevelSet", "test_nll.TestNonlinearLevelSet.assertEqual"], "methods", ["None"], ["", "def", "test_init_epochs", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "\n", "active_dim", "=", "1", ",", "\n", "lr", "=", "0.1", ",", "\n", "epochs", "=", "100", ",", "\n", "dh", "=", "0.25", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "epochs", ",", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_init_dh": [[75, 82], ["athena.NonlinearLevelSet", "test_nll.TestNonlinearLevelSet.assertEqual"], "methods", ["None"], ["", "def", "test_init_dh", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "\n", "active_dim", "=", "1", ",", "\n", "lr", "=", "0.1", ",", "\n", "epochs", "=", "100", ",", "\n", "dh", "=", "0.25", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "dh", ",", "0.25", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_init_forward": [[83, 90], ["athena.NonlinearLevelSet", "test_nll.TestNonlinearLevelSet.assertIsNone"], "methods", ["None"], ["", "def", "test_init_forward", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "\n", "active_dim", "=", "1", ",", "\n", "lr", "=", "0.1", ",", "\n", "epochs", "=", "100", ",", "\n", "dh", "=", "0.25", ")", "\n", "self", ".", "assertIsNone", "(", "nll", ".", "forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_init_backward": [[91, 98], ["athena.NonlinearLevelSet", "test_nll.TestNonlinearLevelSet.assertIsNone"], "methods", ["None"], ["", "def", "test_init_backward", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "\n", "active_dim", "=", "1", ",", "\n", "lr", "=", "0.1", ",", "\n", "epochs", "=", "100", ",", "\n", "dh", "=", "0.25", ")", "\n", "self", ".", "assertIsNone", "(", "nll", ".", "backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_init_loss_vec": [[99, 106], ["athena.NonlinearLevelSet", "test_nll.TestNonlinearLevelSet.assertEqual"], "methods", ["None"], ["", "def", "test_init_loss_vec", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "\n", "active_dim", "=", "1", ",", "\n", "lr", "=", "0.1", ",", "\n", "epochs", "=", "100", ",", "\n", "dh", "=", "0.25", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "loss_vec", ",", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_train_01": [[107, 111], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "test_nll.TestNonlinearLevelSet.assertIsInstance"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train"], ["", "def", "test_train_01", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "self", ".", "assertIsInstance", "(", "nll", ".", "forward", ",", "ForwardNet", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_train_02": [[112, 116], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "test_nll.TestNonlinearLevelSet.assertIsInstance"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train"], ["", "def", "test_train_02", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "self", ".", "assertIsInstance", "(", "nll", ".", "backward", ",", "BackwardNet", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_train_03": [[117, 121], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "test_nll.TestNonlinearLevelSet.assertIs", "len"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train"], ["", "def", "test_train_03", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "self", ".", "assertIs", "(", "len", "(", "nll", ".", "loss_vec", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_train_04": [[122, 128], ["athena.NonlinearLevelSet", "test_nll.TestNonlinearLevelSet.assertRaises", "athena.NonlinearLevelSet.train"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train"], ["", "def", "test_train_04", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "\n", "gradients", "=", "grad_torch", ",", "\n", "interactive", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_train_05": [[129, 136], ["athena.NonlinearLevelSet", "test_nll.assert_plot_figures_added", "athena.NonlinearLevelSet.train"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train"], ["", "", "def", "test_train_05", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "\n", "gradients", "=", "grad_torch", ",", "\n", "outputs", "=", "lift", ",", "\n", "interactive", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_forward_n_params": [[137, 141], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "test_nll.TestNonlinearLevelSet.assertEqual"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train"], ["", "", "def", "test_forward_n_params", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "forward", ".", "n_params", ",", "9", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_backward_n_params": [[142, 146], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "test_nll.TestNonlinearLevelSet.assertEqual"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train"], ["", "def", "test_backward_n_params", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "backward", ".", "n_params", ",", "9", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_plot_sufficient_summary_01": [[147, 152], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "test_nll.assert_plot_figures_added", "athena.NonlinearLevelSet.plot_sufficient_summary"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary"], ["", "def", "test_plot_sufficient_summary_01", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "nll", ".", "plot_sufficient_summary", "(", "inputs", "=", "inputs_torch", ",", "outputs", "=", "lift", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_plot_sufficient_summary_02": [[153, 158], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "test_nll.TestNonlinearLevelSet.assertRaises", "athena.NonlinearLevelSet.plot_sufficient_summary"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary"], ["", "", "def", "test_plot_sufficient_summary_02", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "2", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "nll", ".", "plot_sufficient_summary", "(", "inputs", "=", "inputs_torch", ",", "outputs", "=", "lift", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_plot_loss": [[159, 164], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "test_nll.assert_plot_figures_added", "athena.NonlinearLevelSet.plot_loss"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.plot_loss"], ["", "", "def", "test_plot_loss", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "2", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "nll", ".", "plot_loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_save_forward": [[165, 172], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "athena.NonlinearLevelSet.save_forward", "test_nll.TestNonlinearLevelSet.assertTrue", "test_nll.TestNonlinearLevelSet.addCleanup", "os.path.exists"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.save_forward"], ["", "", "def", "test_save_forward", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "outfilename", "=", "'tests/data/saved_forward.pth'", "\n", "nll", ".", "save_forward", "(", "outfilename", ")", "\n", "self", ".", "assertTrue", "(", "os", ".", "path", ".", "exists", "(", "outfilename", ")", ")", "\n", "self", ".", "addCleanup", "(", "os", ".", "remove", ",", "outfilename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_load_forward": [[173, 177], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.load_forward", "test_nll.TestNonlinearLevelSet.assertIsInstance"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.load_forward"], ["", "def", "test_load_forward", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "load_forward", "(", "infile", "=", "'tests/data/forward_test.pth'", ",", "n_params", "=", "18", ")", "\n", "self", ".", "assertIsInstance", "(", "nll", ".", "forward", ",", "ForwardNet", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_save_backward": [[178, 185], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.train", "athena.NonlinearLevelSet.save_backward", "test_nll.TestNonlinearLevelSet.assertTrue", "test_nll.TestNonlinearLevelSet.addCleanup", "os.path.exists"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.train", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.save_backward"], ["", "def", "test_save_backward", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "train", "(", "inputs", "=", "inputs_torch", ",", "gradients", "=", "grad_torch", ",", "interactive", "=", "False", ")", "\n", "outfilename", "=", "'tests/data/saved_backward.pth'", "\n", "nll", ".", "save_backward", "(", "outfilename", ")", "\n", "self", ".", "assertTrue", "(", "os", ".", "path", ".", "exists", "(", "outfilename", ")", ")", "\n", "self", ".", "addCleanup", "(", "os", ".", "remove", ",", "outfilename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestNonlinearLevelSet.test_load_backward": [[186, 190], ["athena.NonlinearLevelSet", "athena.NonlinearLevelSet.load_backward", "test_nll.TestNonlinearLevelSet.assertIsInstance"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.nll.NonlinearLevelSet.load_backward"], ["", "def", "test_load_backward", "(", "self", ")", ":", "\n", "        ", "nll", "=", "NonlinearLevelSet", "(", "n_layers", "=", "2", ",", "active_dim", "=", "1", ",", "lr", "=", "0.02", ",", "epochs", "=", "1", ")", "\n", "nll", ".", "load_backward", "(", "infile", "=", "'tests/data/backward_test.pth'", ",", "n_params", "=", "18", ")", "\n", "self", ".", "assertIsInstance", "(", "nll", ".", "backward", ",", "BackwardNet", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestForwardNet.test_init_n_params": [[193, 196], ["athena.ForwardNet", "test_nll.TestForwardNet.assertEqual"], "methods", ["None"], ["    ", "def", "test_init_n_params", "(", "self", ")", ":", "\n", "        ", "nll", "=", "ForwardNet", "(", "n_params", "=", "6", ",", "n_layers", "=", "2", ",", "dh", "=", "0.25", ",", "active_dim", "=", "1", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "n_params", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestForwardNet.test_init_n_layers": [[197, 200], ["athena.ForwardNet", "test_nll.TestForwardNet.assertEqual"], "methods", ["None"], ["", "def", "test_init_n_layers", "(", "self", ")", ":", "\n", "        ", "nll", "=", "ForwardNet", "(", "n_params", "=", "6", ",", "n_layers", "=", "2", ",", "dh", "=", "0.25", ",", "active_dim", "=", "1", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "n_layers", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestForwardNet.test_init_dh": [[201, 204], ["athena.ForwardNet", "test_nll.TestForwardNet.assertEqual"], "methods", ["None"], ["", "def", "test_init_dh", "(", "self", ")", ":", "\n", "        ", "nll", "=", "ForwardNet", "(", "n_params", "=", "6", ",", "n_layers", "=", "2", ",", "dh", "=", "0.20", ",", "active_dim", "=", "1", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "dh", ",", "0.20", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestForwardNet.test_init_omega": [[205, 208], ["athena.ForwardNet", "test_nll.TestForwardNet.assertEqual", "slice"], "methods", ["None"], ["", "def", "test_init_omega", "(", "self", ")", ":", "\n", "        ", "nll", "=", "ForwardNet", "(", "n_params", "=", "6", ",", "n_layers", "=", "2", ",", "dh", "=", "0.25", ",", "active_dim", "=", "1", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "omega", ",", "slice", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestBackwardNet.test_init_n_params": [[211, 214], ["athena.BackwardNet", "test_nll.TestBackwardNet.assertEqual"], "methods", ["None"], ["    ", "def", "test_init_n_params", "(", "self", ")", ":", "\n", "        ", "nll", "=", "BackwardNet", "(", "n_params", "=", "6", ",", "n_layers", "=", "2", ",", "dh", "=", "0.25", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "n_params", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestBackwardNet.test_init_n_layers": [[215, 218], ["athena.BackwardNet", "test_nll.TestBackwardNet.assertEqual"], "methods", ["None"], ["", "def", "test_init_n_layers", "(", "self", ")", ":", "\n", "        ", "nll", "=", "BackwardNet", "(", "n_params", "=", "6", ",", "n_layers", "=", "2", ",", "dh", "=", "0.25", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "n_layers", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.TestBackwardNet.test_init_dh": [[219, 222], ["athena.BackwardNet", "test_nll.TestBackwardNet.assertEqual"], "methods", ["None"], ["", "def", "test_init_dh", "(", "self", ")", ":", "\n", "        ", "nll", "=", "BackwardNet", "(", "n_params", "=", "6", ",", "n_layers", "=", "2", ",", "dh", "=", "0.20", ")", "\n", "self", ".", "assertEqual", "(", "nll", ".", "dh", ",", "0.20", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.assert_plot_figures_added": [[10, 20], ["matplotlib.gcf", "matplotlib.gcf"], "function", ["None"], ["@", "contextmanager", "\n", "def", "assert_plot_figures_added", "(", ")", ":", "\n", "    ", "\"\"\"\n    Assert that the number of figures is higher than\n    when you started the test\n    \"\"\"", "\n", "num_figures_before", "=", "plt", ".", "gcf", "(", ")", ".", "number", "\n", "yield", "\n", "num_figures_after", "=", "plt", ".", "gcf", "(", ")", ".", "number", "\n", "assert", "num_figures_before", "<", "num_figures_after", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_nll.read_data": [[22, 35], ["numpy.loadtxt", "athena.Normalizer", "athena.Normalizer.fit_transform", "numpy.ones", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.fit_transform"], ["", "def", "read_data", "(", ")", ":", "\n", "    ", "data", "=", "np", ".", "loadtxt", "(", "'tests/data/naca0012.txt'", ",", "skiprows", "=", "1", ",", "delimiter", "=", "','", ")", "\n", "real_inputs", "=", "data", "[", ":", ",", "1", ":", "19", "]", "\n", "n_params", "=", "real_inputs", ".", "shape", "[", "1", "]", "\n", "lb", "=", "-", "0.01", "*", "np", ".", "ones", "(", "n_params", ")", "\n", "ub", "=", "0.01", "*", "np", ".", "ones", "(", "n_params", ")", "\n", "normalizer", "=", "Normalizer", "(", "lb", "=", "lb", ",", "ub", "=", "ub", ")", "\n", "# inputs in [-1, 1]", "\n", "inputs", "=", "normalizer", ".", "fit_transform", "(", "real_inputs", ")", "\n", "lift", "=", "data", "[", ":", ",", "19", "]", "\n", "# gradients with respect to normalized inputs", "\n", "grad_lift", "=", "data", "[", ":", ",", "21", ":", "39", "]", "\n", "return", "inputs", ",", "lift", ",", "grad_lift", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_W1": [[21, 24], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["    ", "def", "test_init_W1", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "W1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_W2": [[25, 28], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_W2", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "W2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_evals": [[29, 32], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_evals", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_evects": [[33, 36], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_evects", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_evals_br": [[37, 40], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_evals_br", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "evals_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_subs_br": [[41, 44], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_subs_br", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "subs_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_dim": [[45, 48], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertEqual"], "methods", ["None"], ["", "def", "test_init_dim", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertEqual", "(", "ss", ".", "dim", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_n_features": [[49, 52], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_n_features", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "n_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_feature_map": [[53, 56], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_feature_map", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "feature_map", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_features": [[57, 60], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_features", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_init_pseudo_gradients": [[61, 64], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_pseudo_gradients", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "pseudo_gradients", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_reparametrize_01": [[65, 82], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.FeatureMap", "athena.kas.KernelActiveSubspaces", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.kas.KernelActiveSubspaces._reparametrize", "numpy.random.uniform", "numpy.random.uniform", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.kas.KernelActiveSubspaces._reparametrize", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_reparametrize_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "6", ")", ".", "reshape", "(", "3", ",", "1", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "6", ")", ".", "reshape", "(", "3", ",", "2", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'multivariate_normal'", ",", "\n", "bias", "=", "np", ".", "ones", "(", "(", "1", ",", "2", ")", ")", ",", "\n", "input_dim", "=", "inputs", ".", "shape", "[", "1", "]", ",", "\n", "n_features", "=", "2", ",", "\n", "params", "=", "np", ".", "ones", "(", "inputs", ".", "shape", "[", "1", "]", ")", ",", "\n", "sigma_f", "=", "1", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "feature_map", "=", "fm", ")", "\n", "pseudo_gradients", "=", "ss", ".", "_reparametrize", "(", "inputs", ",", "gradients", ")", "[", "0", "]", "\n", "true_pseudo_gradients", "=", "np", ".", "array", "(", "[", "[", "[", "-", "1.17123517", ",", "0.69671587", "]", "]", ",", "\n", "[", "[", "0.29308353", ",", "1.12067323", "]", "]", ",", "\n", "[", "[", "-", "0.0036059", ",", "-", "1.75277398", "]", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "pseudo_gradients", ",", "\n", "true_pseudo_gradients", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_reparametrize_02": [[83, 99], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.FeatureMap", "athena.kas.KernelActiveSubspaces", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.kas.KernelActiveSubspaces._reparametrize", "numpy.random.uniform", "numpy.random.uniform", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.kas.KernelActiveSubspaces._reparametrize", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_reparametrize_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "6", ")", ".", "reshape", "(", "3", ",", "1", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "6", ")", ".", "reshape", "(", "3", ",", "2", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'multivariate_normal'", ",", "\n", "bias", "=", "np", ".", "ones", "(", "(", "1", ",", "2", ")", ")", ",", "\n", "input_dim", "=", "inputs", ".", "shape", "[", "1", "]", ",", "\n", "n_features", "=", "2", ",", "\n", "params", "=", "np", ".", "ones", "(", "inputs", ".", "shape", "[", "1", "]", ")", ",", "\n", "sigma_f", "=", "1", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "feature_map", "=", "fm", ")", "\n", "features", "=", "ss", ".", "_reparametrize", "(", "inputs", ",", "gradients", ")", "[", "1", "]", "\n", "true_features", "=", "np", ".", "array", "(", "[", "[", "-", "0.2391454", ",", "0.48143467", "]", ",", "\n", "[", "0.42589822", ",", "0.75674833", "]", ",", "\n", "[", "-", "0.37950285", ",", "0.53470539", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "features", ",", "true_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_01": [[100, 104], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertRaises", "athena.kas.KernelActiveSubspaces.fit"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit"], ["", "def", "test_compute_01", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "fit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_02": [[105, 117], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_compute_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_evals", "=", "np", ".", "array", "(", "[", "0.42588097", ",", "0.19198234", ",", "0.08228976", ",", "0.0068496", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_03": [[118, 134], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "\n", "[", "[", "0.74714817", ",", "0.6155644", ",", "0.23414206", ",", "0.08959675", "]", ",", "\n", "[", "0.35380297", ",", "-", "0.10917583", ",", "-", "0.91115623", ",", "0.18082704", "]", ",", "\n", "[", "-", "0.50287165", ",", "0.76801638", ",", "-", "0.33072226", ",", "-", "0.21884635", "]", ",", "\n", "[", "-", "0.25241469", ",", "0.1389674", ",", "0.07479708", ",", "0.95466239", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_05": [[135, 149], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "2", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", ".", "reshape", "(", "15", ",", "1", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "feature_map", "=", "None", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'local'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ",", "weights", "=", "weights", ")", "\n", "true_evals", "=", "np", ".", "array", "(", "\n", "[", "173.56222204", ",", "96.19314922", ",", "29.05560411", ",", "0.85385631", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_06": [[150, 166], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_06", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "2", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", ".", "reshape", "(", "15", ",", "1", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'local'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ",", "weights", "=", "weights", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "\n", "[", "[", "0.27316542", ",", "0.65012729", ",", "0.24857554", ",", "0.66402211", "]", ",", "\n", "[", "-", "0.34261047", ",", "0.46028689", ",", "0.61561027", ",", "-", "0.54016483", "]", ",", "\n", "[", "-", "0.68249783", ",", "-", "0.37635433", ",", "0.35472274", ",", "0.51645514", "]", ",", "\n", "[", "0.58497472", ",", "-", "0.47310455", ",", "0.65833576", ",", "-", "0.02388905", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_07": [[167, 177], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_07", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "15", ",", "3", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "n_features", "=", "4", ",", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_evals", "=", "np", ".", "array", "(", "\n", "[", "874.84255146", ",", "62.83226559", ",", "3.60417077", ",", "2.84686573", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_08": [[178, 191], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_08", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "15", ",", "3", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "n_features", "=", "4", ",", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "\n", "[", "[", "0.00126244", ",", "0.99791389", ",", "0.02926469", ",", "0.05753138", "]", ",", "\n", "[", "0.04385229", ",", "-", "0.05833941", ",", "0.78953331", ",", "0.60935265", "]", ",", "\n", "[", "-", "0.99902507", ",", "-", "0.001436", ",", "0.03167332", ",", "0.03071887", "]", ",", "\n", "[", "0.00492877", ",", "-", "0.02761026", ",", "-", "0.61219077", ",", "0.79021253", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_09": [[192, 212], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.diag", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_09", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "180", ")", ".", "reshape", "(", "15", ",", "3", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "metric", "=", "np", ".", "diag", "(", "2", "*", "np", ".", "ones", "(", "3", ")", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "weights", "=", "weights", ",", "\n", "metric", "=", "metric", ")", "\n", "true_evects", "=", "np", ".", "array", "(", "\n", "[", "[", "0.00126244", ",", "0.99791389", ",", "0.02926469", ",", "0.05753138", "]", ",", "\n", "[", "0.04385229", ",", "-", "0.05833941", ",", "0.78953331", ",", "0.60935265", "]", ",", "\n", "[", "-", "0.99902507", ",", "-", "0.001436", ",", "0.03167332", ",", "0.03071887", "]", ",", "\n", "[", "0.00492877", ",", "-", "0.02761026", ",", "-", "0.61219077", ",", "0.79021253", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_evects", ",", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_10": [[213, 226], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_allclose", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_10", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "45", ")", ".", "reshape", "(", "15", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'local'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ",", "weights", "=", "weights", ")", "\n", "true_evals", "=", "np", ".", "array", "(", "\n", "[", "7.93870724e+04", ",", "1.18699831e+02", ",", "4.36634158e+01", ",", "1.49812189e+01", "]", ")", "\n", "np", ".", "testing", ".", "assert_allclose", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_11": [[227, 241], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.diag", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_allclose", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_11", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "45", ")", ".", "reshape", "(", "15", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "metric", "=", "np", ".", "diag", "(", "2", "*", "np", ".", "ones", "(", "3", ")", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'local'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ",", "weights", "=", "weights", ",", "metric", "=", "metric", ")", "\n", "true_evals", "=", "np", ".", "array", "(", "\n", "[", "1.58774145e+05", ",", "2.37399662e+02", ",", "8.73268317e+01", ",", "2.99624379e+01", "]", ")", "\n", "np", ".", "testing", ".", "assert_allclose", "(", "true_evals", ",", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_transform_01": [[242, 253], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.kas.KernelActiveSubspaces.transform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_transform_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "1", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "n_features", "=", "4", ",", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "active", "=", "ss", ".", "transform", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "4", ")", ".", "reshape", "(", "2", ",", "2", ")", ")", "[", "0", "]", "\n", "true_active", "=", "np", ".", "array", "(", "[", "[", "0.94893046", ",", "0.01774345", "]", ",", "\n", "[", "1.09617095", ",", "-", "0.20832091", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_active", ",", "active", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_transform_02": [[254, 268], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.kas.KernelActiveSubspaces.transform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_transform_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "1", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "30", ")", ".", "reshape", "(", "15", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "15", ",", "1", ")", ")", "/", "15", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "inactive", "=", "ss", ".", "transform", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "4", ")", ".", "reshape", "(", "2", ",", "2", ")", ")", "[", "1", "]", "\n", "true_inactive", "=", "np", ".", "array", "(", "[", "[", "-", "0.33551797", ",", "0.36254188", "]", ",", "\n", "[", "-", "0.19427817", ",", "0.2576207", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_inactive", ",", "inactive", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_transform_03": [[269, 279], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.kas.KernelActiveSubspaces.transform", "numpy.random.uniform", "numpy.random.uniform", "numpy.diag", "numpy.random.uniform().reshape", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_transform_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "45", ")", ".", "reshape", "(", "15", ",", "3", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'local'", ",", "n_boot", "=", "50", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ",", "metric", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "3", ")", ")", ")", "\n", "active", "=", "ss", ".", "transform", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", ")", "[", "0", "]", "\n", "true_active", "=", "np", ".", "array", "(", "[", "[", "-", "0.18946138", ",", "0.31916713", "]", ",", "\n", "[", "-", "0.25310859", ",", "-", "0.30280365", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_active", ",", "active", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_transform_04": [[280, 290], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.kas.KernelActiveSubspaces.transform", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_transform_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "15", ",", "4", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "15", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "method", "=", "'local'", ",", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "inactive", "=", "ss", ".", "transform", "(", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "8", ")", ".", "reshape", "(", "2", ",", "4", ")", ")", "[", "1", "]", "\n", "true_inactive", "=", "np", ".", "array", "(", "[", "[", "0.27110018", ",", "-", "0.29359021", "]", ",", "\n", "[", "0.76399199", ",", "-", "0.02233936", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_inactive", ",", "inactive", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_partition_01": [[291, 298], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces._partition", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_partition_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "ss", ".", "_partition", "(", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "matrix", "[", ":", ",", ":", "2", "]", ",", "ss", ".", "W1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_partition_02": [[299, 306], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces._partition", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_partition_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "ss", ".", "_partition", "(", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "matrix", "[", ":", ",", "2", ":", "]", ",", "ss", ".", "W2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_partition_03": [[307, 314], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertRaises", "athena.kas.KernelActiveSubspaces._partition", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_partition_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2.0", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_partition_04": [[315, 322], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertRaises", "athena.kas.KernelActiveSubspaces._partition", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_partition_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "0", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_partition_05": [[323, 330], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertRaises", "athena.kas.KernelActiveSubspaces._partition", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_partition_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "4", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_bootstrap_replicate_01": [[331, 338], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.kas.KernelActiveSubspaces._bootstrap_replicate", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_bootstrap_replicate_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "/", "3", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "wei", "=", "ss", ".", "_bootstrap_replicate", "(", "matrix", ",", "weights", ")", "[", "1", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "weights", ",", "wei", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_bootstrap_replicate_02": [[339, 349], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.kas.KernelActiveSubspaces._bootstrap_replicate", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_bootstrap_replicate_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "/", "3", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "mat", "=", "ss", ".", "_bootstrap_replicate", "(", "matrix", ",", "weights", ")", "[", "0", "]", "\n", "true_matrix", "=", "np", ".", "array", "(", "[", "[", "-", "0.88383278", ",", "0.73235229", ",", "0.20223002", "]", ",", "\n", "[", "0.19731697", ",", "-", "0.68796272", ",", "-", "0.68801096", "]", ",", "\n", "[", "-", "0.25091976", ",", "0.90142861", ",", "0.46398788", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_matrix", ",", "mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_bootstrap_ranges_01": [[350, 366], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_bootstrap_ranges_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "30", ",", "1", ")", ")", "/", "30", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_bounds_evals", "=", "np", ".", "array", "(", "[", "[", "2.59177494", ",", "7.11443789", "]", ",", "\n", "[", "0.5456548", ",", "1.94294036", "]", ",", "\n", "[", "0.05855044", ",", "0.84178668", "]", ",", "\n", "[", "0.01530059", ",", "0.187785", "]", "]", ")", "\n", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_bounds_evals", ",", "ss", ".", "evals_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_bootstrap_ranges_02": [[367, 378], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_bootstrap_ranges_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "1", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "30", ",", "1", ")", ")", "/", "30", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "n_features", "=", "4", ",", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_bounds_subspace", "=", "np", ".", "array", "(", "[", "[", "0.01734317", ",", "0.09791063", ",", "0.19840464", "]", ",", "\n", "[", "0.05112582", ",", "0.43105485", ",", "0.92323839", "]", ",", "\n", "[", "0.05890817", ",", "0.27517302", ",", "0.89262039", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_bounds_subspace", ",", "ss", ".", "subs_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_bootstrap_ranges_03": [[379, 394], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_bootstrap_ranges_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "1", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "30", ",", "1", ")", ")", "/", "30", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_bounds_evals", "=", "np", ".", "array", "(", "[", "[", "2.59177494", ",", "7.11443789", "]", ",", "\n", "[", "0.5456548", ",", "1.94294036", "]", ",", "\n", "[", "0.05855044", ",", "0.84178668", "]", ",", "\n", "[", "0.01530059", ",", "0.187785", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_bounds_evals", ",", "ss", ".", "evals_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_compute_bootstrap_ranges_04": [[395, 406], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_compute_bootstrap_ranges_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "1", ",", "2", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "60", ")", ".", "reshape", "(", "30", ",", "2", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "30", ",", "1", ")", ")", "/", "30", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "n_features", "=", "4", ",", "n_boot", "=", "49", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "true_bounds_subspace", "=", "np", ".", "array", "(", "[", "[", "0.01734317", ",", "0.09791063", ",", "0.19840464", "]", ",", "\n", "[", "0.05112582", ",", "0.43105485", ",", "0.92323839", "]", ",", "\n", "[", "0.05890817", ",", "0.27517302", ",", "0.89262039", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_bounds_subspace", ",", "ss", ".", "subs_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_plot_eigenvalues_01": [[407, 411], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertRaises", "athena.kas.KernelActiveSubspaces.plot_eigenvalues"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues"], ["", "def", "test_plot_eigenvalues_01", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvalues", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_plot_eigenvalues_02": [[412, 424], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.ones", "test_kas.assert_plot_figures_added", "athena.kas.KernelActiveSubspaces.plot_eigenvalues", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvalues_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "1", ",", "4", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "8", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "5", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvalues", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_plot_eigenvalues_03": [[425, 434], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.ones", "test_kas.assert_plot_figures_added", "athena.kas.KernelActiveSubspaces.plot_eigenvalues", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvalues_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "1", ",", "4", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "n_features", "=", "8", ",", "n_boot", "=", "5", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvalues", "(", "n_evals", "=", "3", ",", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_plot_eigenvectors_01": [[435, 439], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertRaises", "athena.kas.KernelActiveSubspaces.plot_eigenvectors"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors"], ["", "", "def", "test_plot_eigenvectors_01", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvectors", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_plot_eigenvectors_02": [[440, 454], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.ones", "test_kas.assert_plot_figures_added", "athena.kas.KernelActiveSubspaces.plot_eigenvectors", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvectors_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "1", ",", "4", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "8", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "5", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvectors", "(", "n_evects", "=", "2", ",", "\n", "figsize", "=", "(", "7", ",", "7", ")", ",", "\n", "title", "=", "'Eigenvectors'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_plot_eigenvectors_03": [[455, 469], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.ones", "test_kas.assert_plot_figures_added", "athena.kas.KernelActiveSubspaces.plot_eigenvectors", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_eigenvectors_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "1", ",", "4", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "5", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "5", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvectors", "(", "n_evects", "=", "2", ",", "\n", "figsize", "=", "(", "5", ",", "8", ")", ",", "\n", "labels", "=", "[", "r'$x$'", ",", "r'$y$'", ",", "'q'", ",", "r'$r$'", ",", "r'$z$'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_plot_sufficient_summary_01": [[470, 474], ["athena.kas.KernelActiveSubspaces", "test_kas.TestUtils.assertRaises", "athena.kas.KernelActiveSubspaces.plot_sufficient_summary"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary"], ["", "", "def", "test_plot_sufficient_summary_01", "(", "self", ")", ":", "\n", "        ", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_sufficient_summary", "(", "10", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_plot_sufficient_summary_02": [[475, 484], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.ones", "test_kas.TestUtils.assertRaises", "athena.kas.KernelActiveSubspaces.plot_sufficient_summary", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_sufficient_summary_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "1", ",", "4", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "3", ",", "n_features", "=", "8", ",", "n_boot", "=", "5", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "plot_sufficient_summary", "(", "10", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.TestUtils.test_plot_sufficient_summary_03": [[485, 499], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.kas.KernelActiveSubspaces", "athena.kas.KernelActiveSubspaces.fit", "numpy.ones", "test_kas.assert_plot_figures_added", "athena.kas.KernelActiveSubspaces.plot_sufficient_summary", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit", "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_plot_sufficient_summary_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "1", ",", "4", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "200", ")", ".", "reshape", "(", "50", ",", "4", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "50", ",", "1", ")", ")", "/", "50", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "2", ",", "\n", "n_features", "=", "8", ",", "\n", "method", "=", "'exact'", ",", "\n", "n_boot", "=", "5", ")", "\n", "ss", ".", "fit", "(", "inputs", "=", "inputs", ",", "gradients", "=", "gradients", ",", "weights", "=", "weights", ")", "\n", "with", "assert_plot_figures_added", "(", ")", ":", "\n", "            ", "ss", ".", "plot_sufficient_summary", "(", "\n", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "100", ")", ".", "reshape", "(", "25", ",", "4", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "25", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_kas.assert_plot_figures_added": [[9, 18], ["matplotlib.gcf", "matplotlib.gcf"], "function", ["None"], ["@", "contextmanager", "\n", "def", "assert_plot_figures_added", "(", ")", ":", "\n", "    ", "\"\"\"\n    Assert that the number of figures is higher than when you started the test\n    \"\"\"", "\n", "num_figures_before", "=", "plt", ".", "gcf", "(", ")", ".", "number", "\n", "yield", "\n", "num_figures_after", "=", "plt", ".", "gcf", "(", ")", ".", "number", "\n", "assert", "num_figures_before", "<", "num_figures_after", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_projection_factory.TestProjectionFactory.test_beta": [[7, 14], ["numpy.random.seed", "athena.ProjectionFactory", "athena.ProjectionFactory.", "numpy.array", "numpy.testing.assert_array_almost_equal"], "methods", ["None"], ["    ", "def", "test_beta", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "projection", "=", "ProjectionFactory", "(", "'beta'", ")", "\n", "value", "=", "projection", "(", "input_dim", "=", "2", ",", "n_features", "=", "3", ",", "params", "=", "[", "2.1", ",", "1.8", "]", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "0.6580682", ",", "0.5509215", "]", ",", "[", "0.6484241", ",", "0.3526883", "]", ",", "\n", "[", "0.9312698", ",", "0.2805237", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_projection_factory.TestProjectionFactory.test_cauchy": [[15, 23], ["numpy.random.seed", "athena.ProjectionFactory", "athena.ProjectionFactory.", "numpy.array", "numpy.testing.assert_array_almost_equal"], "methods", ["None"], ["", "def", "test_cauchy", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "projection", "=", "ProjectionFactory", "(", "'cauchy'", ")", "\n", "value", "=", "projection", "(", "input_dim", "=", "2", ",", "n_features", "=", "3", ",", "params", "=", "[", "3.4", "]", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "-", "1.0566169", ",", "0.12507741", "]", ",", "\n", "[", "0.29413827", ",", "0.60522979", "]", ",", "\n", "[", "-", "0.25449847", ",", "0.29265753", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_projection_factory.TestProjectionFactory.test_dirichlet": [[24, 31], ["numpy.random.seed", "athena.ProjectionFactory", "athena.ProjectionFactory.", "numpy.array", "numpy.testing.assert_array_almost_equal"], "methods", ["None"], ["", "def", "test_dirichlet", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "projection", "=", "ProjectionFactory", "(", "'dirichlet'", ")", "\n", "value", "=", "projection", "(", "input_dim", "=", "2", ",", "n_features", "=", "3", ",", "params", "=", "[", "2.7", ",", "2.0", "]", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "0.598184", ",", "0.401816", "]", ",", "[", "0.499997", ",", "0.500003", "]", ",", "\n", "[", "0.603821", ",", "0.396179", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_projection_factory.TestProjectionFactory.test_laplace": [[32, 40], ["numpy.random.seed", "athena.ProjectionFactory", "athena.ProjectionFactory.", "numpy.array", "numpy.testing.assert_array_almost_equal"], "methods", ["None"], ["", "def", "test_laplace", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "projection", "=", "ProjectionFactory", "(", "'laplace'", ")", "\n", "value", "=", "projection", "(", "input_dim", "=", "2", ",", "n_features", "=", "3", ",", "params", "=", "[", "4.1", "]", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "-", "1.18452762", ",", "9.49959443", "]", ",", "\n", "[", "2.5567539", ",", "0.90116103", "]", ",", "\n", "[", "-", "4.77499369", ",", "-", "4.77562759", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_projection_factory.TestProjectionFactory.test_multivariate_normal": [[41, 48], ["numpy.random.seed", "athena.ProjectionFactory", "athena.ProjectionFactory.", "numpy.array", "numpy.testing.assert_array_almost_equal"], "methods", ["None"], ["", "def", "test_multivariate_normal", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "projection", "=", "ProjectionFactory", "(", "'multivariate_normal'", ")", "\n", "value", "=", "projection", "(", "input_dim", "=", "2", ",", "n_features", "=", "3", ",", "params", "=", "[", "2.5", ",", "0.8", "]", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "0.785374", ",", "-", "0.123667", "]", ",", "[", "1.024085", ",", "1.362239", "]", ",", "\n", "[", "-", "0.370229", ",", "-", "0.209418", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_projection_factory.TestProjectionFactory.test_normal": [[49, 56], ["numpy.random.seed", "athena.ProjectionFactory", "athena.ProjectionFactory.", "numpy.array", "numpy.testing.assert_array_almost_equal"], "methods", ["None"], ["", "def", "test_normal", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "projection", "=", "ProjectionFactory", "(", "'normal'", ")", "\n", "value", "=", "projection", "(", "input_dim", "=", "2", ",", "n_features", "=", "3", ",", "params", "=", "[", "0.6", ",", "1.0", "]", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "0.298028", ",", "-", "0.082959", "]", ",", "[", "0.388613", ",", "0.913818", "]", ",", "\n", "[", "-", "0.140492", ",", "-", "0.140482", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_projection_factory.TestProjectionFactory.test_uniform": [[57, 64], ["numpy.random.seed", "athena.ProjectionFactory", "athena.ProjectionFactory.", "numpy.array", "numpy.testing.assert_array_almost_equal"], "methods", ["None"], ["", "def", "test_uniform", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "projection", "=", "ProjectionFactory", "(", "'uniform'", ")", "\n", "value", "=", "projection", "(", "input_dim", "=", "2", ",", "n_features", "=", "3", ",", "params", "=", "[", "1.1", ",", "1.2", "]", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "1.137454", ",", "1.195071", "]", ",", "[", "1.173199", ",", "1.159866", "]", ",", "\n", "[", "1.115602", ",", "1.115599", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "value", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_init_W1": [[7, 10], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertIsNone"], "methods", ["None"], ["    ", "def", "test_init_W1", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "W1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_init_W2": [[11, 14], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_W2", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "W2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_init_evals": [[15, 18], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_evals", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "evals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_init_evects": [[19, 22], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_evects", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "evects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_init_evals_br": [[23, 26], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_evals_br", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "evals_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_init_subs_br": [[27, 30], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertIsNone"], "methods", ["None"], ["", "def", "test_init_subs_br", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertIsNone", "(", "ss", ".", "subs_br", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_init_dim": [[31, 34], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertEqual"], "methods", ["None"], ["", "def", "test_init_dim", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "self", ".", "assertEqual", "(", "ss", ".", "dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_fit": [[35, 39], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertRaises", "athena.subspaces.Subspaces.fit"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.CrossValidation.fit"], ["", "def", "test_fit", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "NotImplementedError", ")", ":", "\n", "            ", "ss", ".", "fit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_transform": [[40, 44], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertRaises", "athena.subspaces.Subspaces.transform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.active.ActiveSubspaces.transform"], ["", "", "def", "test_transform", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "NotImplementedError", ")", ":", "\n", "            ", "ss", ".", "transform", "(", "42", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_inverse_transform": [[45, 49], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertRaises", "athena.subspaces.Subspaces.inverse_transform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.utils.Normalizer.inverse_transform"], ["", "", "def", "test_inverse_transform", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "NotImplementedError", ")", ":", "\n", "            ", "ss", ".", "inverse_transform", "(", "10", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_partition_01": [[50, 57], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.subspaces.Subspaces", "athena.subspaces.Subspaces._partition", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_partition_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "Subspaces", "(", "dim", "=", "2", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "ss", ".", "_partition", "(", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "matrix", "[", ":", ",", ":", "2", "]", ",", "ss", ".", "W1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_partition_02": [[58, 65], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.subspaces.Subspaces", "athena.subspaces.Subspaces._partition", "numpy.testing.assert_array_almost_equal", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_partition_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "Subspaces", "(", "dim", "=", "2", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "ss", ".", "_partition", "(", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "matrix", "[", ":", ",", "2", ":", "]", ",", "ss", ".", "W2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_partition_03": [[66, 73], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertRaises", "athena.subspaces.Subspaces._partition", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_partition_03", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "Subspaces", "(", "dim", "=", "2.0", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_partition_04": [[74, 81], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertRaises", "athena.subspaces.Subspaces._partition", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_partition_04", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "Subspaces", "(", "dim", "=", "0", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_partition_05": [[82, 89], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertRaises", "athena.subspaces.Subspaces._partition", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._partition", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_partition_05", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "ss", "=", "Subspaces", "(", "dim", "=", "4", ")", "\n", "ss", ".", "evects", "=", "matrix", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "            ", "ss", ".", "_partition", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_bootstrap_replicate_01": [[90, 97], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.subspaces.Subspaces", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.subspaces.Subspaces._bootstrap_replicate", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "", "def", "test_bootstrap_replicate_01", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "/", "3", "\n", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "wei", "=", "ss", ".", "_bootstrap_replicate", "(", "matrix", ",", "weights", ")", "[", "1", "]", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "weights", ",", "wei", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_bootstrap_replicate_02": [[98, 108], ["numpy.random.seed", "numpy.random.uniform().reshape", "athena.subspaces.Subspaces", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones", "athena.subspaces.Subspaces._bootstrap_replicate", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._bootstrap_replicate", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_bootstrap_replicate_02", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "9", ")", ".", "reshape", "(", "3", ",", "3", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "/", "3", "\n", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "mat", "=", "ss", ".", "_bootstrap_replicate", "(", "matrix", ",", "weights", ")", "[", "0", "]", "\n", "true_matrix", "=", "np", ".", "array", "(", "[", "[", "-", "0.88383278", ",", "0.73235229", ",", "0.20223002", "]", ",", "\n", "[", "0.19731697", ",", "-", "0.68796272", ",", "-", "0.68801096", "]", ",", "\n", "[", "-", "0.25091976", ",", "0.90142861", ",", "0.46398788", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_matrix", ",", "mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_plot_eigenvalues": [[109, 113], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertRaises", "athena.subspaces.Subspaces.plot_eigenvalues"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvalues"], ["", "def", "test_plot_eigenvalues", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvalues", "(", "figsize", "=", "(", "7", ",", "7", ")", ",", "title", "=", "'Eigenvalues'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_plot_eigenvectors": [[114, 118], ["athena.subspaces.Subspaces", "test_subspaces.TestUtils.assertRaises", "athena.subspaces.Subspaces.plot_eigenvectors"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_eigenvectors"], ["", "", "def", "test_plot_eigenvectors", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_eigenvectors", "(", "n_evects", "=", "2", ",", "title", "=", "'Eigenvectors'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_plot_sufficient_summary": [[119, 128], ["athena.subspaces.Subspaces", "numpy.diag", "numpy.ones().reshape", "numpy.ones", "test_subspaces.TestUtils.assertRaises", "athena.subspaces.Subspaces.plot_sufficient_summary", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces.plot_sufficient_summary"], ["", "", "def", "test_plot_sufficient_summary", "(", "self", ")", ":", "\n", "        ", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "inputs", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "3", ")", ")", "\n", "outputs", "=", "np", ".", "ones", "(", "3", ")", ".", "reshape", "(", "3", ",", "1", ")", "\n", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "ss", ".", "plot_sufficient_summary", "(", "inputs", ",", "\n", "outputs", ",", "\n", "figsize", "=", "(", "7", ",", "7", ")", ",", "\n", "title", "=", "'Sufficient_summary_plots'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_partition_spectral_gap": [[129, 137], ["numpy.random.seed", "numpy.array", "numpy.ones", "athena.subspaces.Subspaces", "athena.subspaces.Subspaces._build_decompose_cov_matrix", "athena.subspaces.Subspaces._set_dim_spectral_gap", "test_subspaces.TestUtils.assertEqual"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._build_decompose_cov_matrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._set_dim_spectral_gap"], ["", "", "def", "test_partition_spectral_gap", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "-", "4.5", ",", "2", "]", ",", "[", "1", ",", "1.1", ",", "1", "]", "]", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "\n", "ss", "=", "Subspaces", "(", "dim", "=", "0", ")", "\n", "ss", ".", "evals", ",", "ss", ".", "evects", "=", "ss", ".", "_build_decompose_cov_matrix", "(", "matrix", ",", "weights", ")", "\n", "dim", "=", "ss", ".", "_set_dim_spectral_gap", "(", ")", "\n", "self", ".", "assertEqual", "(", "dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_subspaces.TestUtils.test_partition_residual_energy": [[138, 146], ["numpy.random.seed", "numpy.array", "numpy.ones", "athena.subspaces.Subspaces", "athena.subspaces.Subspaces._build_decompose_cov_matrix", "athena.subspaces.Subspaces._set_dim_residual_energy", "test_subspaces.TestUtils.assertEqual"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._build_decompose_cov_matrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.subspaces.Subspaces._set_dim_residual_energy"], ["", "def", "test_partition_residual_energy", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "matrix", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "-", "4.5", ",", "2", "]", ",", "[", "1", ",", "1.1", ",", "1", "]", "]", ")", "\n", "weights", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ")", ")", "\n", "ss", "=", "Subspaces", "(", "dim", "=", "1", ")", "\n", "ss", ".", "evals", ",", "ss", ".", "evects", "=", "ss", ".", "_build_decompose_cov_matrix", "(", "matrix", ",", "weights", ")", "\n", "dim", "=", "ss", ".", "_set_dim_residual_energy", "(", ")", "\n", "self", ".", "assertEqual", "(", "dim", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_distr_01": [[10, 18], ["athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertEqual", "athena.projection_factory.ProjectionFactory"], "methods", ["None"], ["    ", "def", "test_init_distr_01", "(", "self", ")", ":", "\n", "        ", "fm", "=", "FeatureMap", "(", "distr", "=", "'beta'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "3", ",", "\n", "n_features", "=", "5", ",", "\n", "params", "=", "[", "0.1", ",", "0.3", "]", ",", "\n", "sigma_f", "=", "0.5", ")", "\n", "self", ".", "assertEqual", "(", "ProjectionFactory", "(", "'beta'", ")", ",", "fm", ".", "distr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_distr_02": [[19, 28], ["athena.projection_factory.ProjectionFactory", "athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertEqual"], "methods", ["None"], ["", "def", "test_init_distr_02", "(", "self", ")", ":", "\n", "        ", "proj", "=", "ProjectionFactory", "(", "'beta'", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "proj", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "3", ",", "\n", "n_features", "=", "5", ",", "\n", "params", "=", "[", "0.1", ",", "0.3", "]", ",", "\n", "sigma_f", "=", "0.5", ")", "\n", "self", ".", "assertEqual", "(", "proj", ",", "fm", ".", "distr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_distr_03": [[29, 37], ["test_feature_map.TestProjectionFactory.assertRaises", "athena.FeatureMap"], "methods", ["None"], ["", "def", "test_init_distr_03", "(", "self", ")", ":", "\n", "        ", "with", "self", ".", "assertRaises", "(", "TypeError", ")", ":", "\n", "            ", "fm", "=", "FeatureMap", "(", "distr", "=", "34", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "3", ",", "\n", "n_features", "=", "5", ",", "\n", "params", "=", "[", "0.1", ",", "0.3", "]", ",", "\n", "sigma_f", "=", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_bias": [[38, 46], ["athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertIsNone"], "methods", ["None"], ["", "", "def", "test_init_bias", "(", "self", ")", ":", "\n", "        ", "fm", "=", "FeatureMap", "(", "distr", "=", "'cauchy'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "3", ",", "\n", "n_features", "=", "7", ",", "\n", "params", "=", "[", "0.1", ",", "0.3", "]", ",", "\n", "sigma_f", "=", "1.5", ")", "\n", "self", ".", "assertIsNone", "(", "fm", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_input_dim": [[47, 55], ["athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertEqual"], "methods", ["None"], ["", "def", "test_init_input_dim", "(", "self", ")", ":", "\n", "        ", "fm", "=", "FeatureMap", "(", "distr", "=", "'cauchy'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "3", ",", "\n", "n_features", "=", "7", ",", "\n", "params", "=", "[", "0.1", ",", "0.3", "]", ",", "\n", "sigma_f", "=", "1.5", ")", "\n", "self", ".", "assertEqual", "(", "3", ",", "fm", ".", "input_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_n_features": [[56, 64], ["athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertEqual"], "methods", ["None"], ["", "def", "test_init_n_features", "(", "self", ")", ":", "\n", "        ", "fm", "=", "FeatureMap", "(", "distr", "=", "'dirichlet'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "3", ",", "\n", "n_features", "=", "5", ",", "\n", "params", "=", "[", "0.1", ",", "0.3", "]", ",", "\n", "sigma_f", "=", "2.5", ")", "\n", "self", ".", "assertEqual", "(", "5", ",", "fm", ".", "n_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_params": [[65, 73], ["athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertEqual"], "methods", ["None"], ["", "def", "test_init_params", "(", "self", ")", ":", "\n", "        ", "fm", "=", "FeatureMap", "(", "distr", "=", "'laplace'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "4", ",", "\n", "params", "=", "[", "1.1", ",", "2.3", "]", ",", "\n", "sigma_f", "=", "0.1", ")", "\n", "self", ".", "assertEqual", "(", "[", "1.1", ",", "2.3", "]", ",", "fm", ".", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_sigma_f": [[74, 82], ["athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertEqual"], "methods", ["None"], ["", "def", "test_init_sigma_f", "(", "self", ")", ":", "\n", "        ", "fm", "=", "FeatureMap", "(", "distr", "=", "'multivariate_normal'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "3", ",", "\n", "n_features", "=", "5", ",", "\n", "params", "=", "[", "0.1", ",", "0.3", "]", ",", "\n", "sigma_f", "=", "0.1", ")", "\n", "self", ".", "assertEqual", "(", "0.1", ",", "fm", ".", "sigma_f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_fmap": [[83, 91], ["athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertIs"], "methods", ["None"], ["", "def", "test_init_fmap", "(", "self", ")", ":", "\n", "        ", "fm", "=", "FeatureMap", "(", "distr", "=", "'normal'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "5", ",", "\n", "n_features", "=", "9", ",", "\n", "params", "=", "[", "3.1", ",", "0.3", "]", ",", "\n", "sigma_f", "=", "0.9", ")", "\n", "self", ".", "assertIs", "(", "rff_map", ",", "fm", ".", "fmap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init_fmap_jac": [[92, 100], ["athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertIs"], "methods", ["None"], ["", "def", "test_init_fmap_jac", "(", "self", ")", ":", "\n", "        ", "fm", "=", "FeatureMap", "(", "distr", "=", "'normal'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "5", ",", "\n", "n_features", "=", "9", ",", "\n", "params", "=", "[", "3.1", ",", "0.3", "]", ",", "\n", "sigma_f", "=", "0.9", ")", "\n", "self", ".", "assertIs", "(", "rff_jac", ",", "fm", ".", "fmap_jac", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_init__pr_matrix": [[101, 109], ["athena.FeatureMap", "test_feature_map.TestProjectionFactory.assertIsNone"], "methods", ["None"], ["", "def", "test_init__pr_matrix", "(", "self", ")", ":", "\n", "        ", "fm", "=", "FeatureMap", "(", "distr", "=", "'uniform'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "4", ",", "\n", "n_features", "=", "10", ",", "\n", "params", "=", "[", "0.6", ",", "0.4", "]", ",", "\n", "sigma_f", "=", "0.2", ")", "\n", "self", ".", "assertIsNone", "(", "fm", ".", "_pr_matrix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test__compute_pr_matrix": [[110, 122], ["numpy.random.seed", "athena.FeatureMap", "athena.FeatureMap._compute_pr_matrix", "numpy.array", "numpy.testing.assert_array_almost_equal"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap._compute_pr_matrix"], ["", "def", "test__compute_pr_matrix", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'uniform'", ",", "\n", "bias", "=", "None", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "3", ",", "\n", "params", "=", "[", "1.1", ",", "1.2", "]", ",", "\n", "sigma_f", "=", "0.2", ")", "\n", "pr_matrix", "=", "fm", ".", "_compute_pr_matrix", "(", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "1.137454", ",", "1.195071", "]", ",", "[", "1.173199", ",", "1.159866", "]", ",", "\n", "[", "1.115602", ",", "1.115599", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "pr_matrix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_compute_fmap": [[123, 139], ["numpy.random.seed", "athena.FeatureMap", "numpy.random.uniform", "athena.FeatureMap.compute_fmap", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.compute_fmap"], ["", "def", "test_compute_fmap", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'laplace'", ",", "\n", "bias", "=", "np", ".", "ones", "(", "(", "1", ",", "3", ")", ")", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "3", ",", "\n", "params", "=", "[", "0.8", ",", "2.3", "]", ",", "\n", "sigma_f", "=", "0.9", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "size", "=", "(", "5", ",", "2", ")", ")", "\n", "fmap", "=", "fm", ".", "compute_fmap", "(", "inputs", "=", "inputs", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "-", "0.42149623", ",", "0.57314349", ",", "0.73325259", "]", ",", "\n", "[", "0.65251962", ",", "0.2455743", ",", "0.73290642", "]", ",", "\n", "[", "0.42591728", ",", "0.37857758", ",", "0.53838879", "]", ",", "\n", "[", "-", "0.6921959", ",", "0.65932346", ",", "0.71051842", "]", ",", "\n", "[", "0.3605913", ",", "0.37159967", ",", "0.73375339", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "fmap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_compute_fmap_jac": [[140, 166], ["numpy.random.seed", "athena.FeatureMap", "numpy.random.uniform", "athena.FeatureMap.compute_fmap_jac", "numpy.array", "numpy.testing.assert_array_almost_equal", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.compute_fmap_jac"], ["", "def", "test_compute_fmap_jac", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'laplace'", ",", "\n", "bias", "=", "np", ".", "ones", "(", "(", "1", ",", "3", ")", ")", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "3", ",", "\n", "params", "=", "[", "0.8", ",", "2.3", "]", ",", "\n", "sigma_f", "=", "0.9", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "size", "=", "(", "5", ",", "2", ")", ")", "\n", "fmap_jac", "=", "fm", ".", "compute_fmap_jac", "(", "inputs", "=", "inputs", ")", "\n", "true_value", "=", "np", ".", "array", "(", "[", "[", "[", "1.53620402", ",", "-", "1.35337581", "]", ",", "\n", "[", "-", "0.40223905", ",", "0.31509425", "]", ",", "\n", "[", "-", "0.03915164", ",", "-", "0.03881686", "]", "]", ",", "\n", "[", "[", "0.86249731", ",", "-", "0.75984894", "]", ",", "\n", "[", "-", "0.60576495", ",", "0.4745264", "]", ",", "\n", "[", "-", "0.04318837", ",", "-", "0.04281907", "]", "]", ",", "\n", "[", "[", "1.52824153", ",", "-", "1.34636096", "]", ",", "\n", "[", "-", "0.5508609", ",", "0.43151728", "]", ",", "\n", "[", "0.4047367", ",", "0.40127589", "]", "]", ",", "\n", "[", "[", "0.62961265", ",", "-", "0.55468058", "]", ",", "\n", "[", "-", "0.28380577", ",", "0.22231945", "]", ",", "\n", "[", "0.15175034", ",", "0.15045276", "]", "]", ",", "\n", "[", "[", "1.63406118", ",", "-", "1.4395867", "]", ",", "\n", "[", "-", "0.55448363", ",", "0.43435515", "]", ",", "\n", "[", "-", "0.03243032", ",", "-", "0.03215301", "]", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true_value", ",", "fmap_jac", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_brute": [[167, 191], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.FeatureMap", "athena.kas.KernelActiveSubspaces", "athena.utils.CrossValidation", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.FeatureMap.tune_pr_matrix", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.array", "numpy.random.uniform().reshape.var", "slice", "range"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.tune_pr_matrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_brute", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "20", ")", ".", "reshape", "(", "5", ",", "2", ",", "2", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'laplace'", ",", "\n", "bias", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "3", ")", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "3", ",", "\n", "params", "=", "np", ".", "array", "(", "[", "5.34265038", "]", ")", ",", "\n", "sigma_f", "=", "outputs", ".", "var", "(", ")", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "1", ",", "feature_map", "=", "fm", ")", "\n", "csv", "=", "CrossValidation", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "folds", "=", "2", ",", "\n", "subspace", "=", "ss", ")", "\n", "best", "=", "fm", ".", "tune_pr_matrix", "(", "func", "=", "average_rrmse", ",", "\n", "bounds", "=", "[", "slice", "(", "-", "2", ",", "1", ",", "0.2", ")", "for", "i", "in", "range", "(", "1", ")", "]", ",", "\n", "fn_args", "=", "{", "'csv'", ":", "csv", "}", ",", "\n", "maxiter", "=", "10", ",", "\n", "save_file", "=", "False", ")", "[", "1", "]", "\n", "true", "=", "np", ".", "array", "(", "[", "[", "0.", ",", "0.", "]", ",", "[", "0.", ",", "0.", "]", ",", "[", "0.", ",", "0.", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true", ",", "best", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_dual_annealing": [[192, 218], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.FeatureMap", "athena.kas.KernelActiveSubspaces", "athena.utils.CrossValidation", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.FeatureMap.tune_pr_matrix", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.random.uniform().reshape.var", "slice", "range"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.tune_pr_matrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_dual_annealing", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "20", ")", ".", "reshape", "(", "5", ",", "2", ",", "2", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'laplace'", ",", "\n", "bias", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "3", ")", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "3", ",", "\n", "params", "=", "np", ".", "zeros", "(", "1", ")", ",", "\n", "sigma_f", "=", "outputs", ".", "var", "(", ")", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "1", ",", "feature_map", "=", "fm", ")", "\n", "csv", "=", "CrossValidation", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "folds", "=", "2", ",", "\n", "subspace", "=", "ss", ")", "\n", "best", "=", "fm", ".", "tune_pr_matrix", "(", "func", "=", "average_rrmse", ",", "\n", "bounds", "=", "[", "slice", "(", "-", "2", ",", "1", ",", "0.2", ")", "for", "i", "in", "range", "(", "1", ")", "]", ",", "\n", "fn_args", "=", "{", "'csv'", ":", "csv", "}", ",", "\n", "method", "=", "'dual_annealing'", ",", "\n", "maxiter", "=", "5", ",", "\n", "save_file", "=", "False", ")", "[", "1", "]", "\n", "true", "=", "np", ".", "array", "(", "[", "[", "0.21895786", ",", "0.52423581", "]", ",", "[", "-", "5.3186504", ",", "14.9646475", "]", ",", "\n", "[", "4.2713126", ",", "11.28870881", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true", ",", "best", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathLab_ATHENA.tests.test_feature_map.TestProjectionFactory.test_bso": [[219, 245], ["numpy.random.seed", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "numpy.random.uniform().reshape", "athena.FeatureMap", "athena.kas.KernelActiveSubspaces", "athena.utils.CrossValidation", "numpy.array", "numpy.testing.assert_array_almost_equal", "athena.FeatureMap.tune_pr_matrix", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.zeros", "numpy.random.uniform().reshape.var", "slice", "range"], "methods", ["home.repos.pwc.inspect_result.mathLab_ATHENA.athena.feature_map.FeatureMap.tune_pr_matrix", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform", "home.repos.pwc.inspect_result.mathLab_ATHENA.athena.projection_factory.ProjectionFactory.uniform"], ["", "def", "test_bso", "(", "self", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "42", ")", "\n", "inputs", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "outputs", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "5", ",", "10", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "gradients", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "20", ")", ".", "reshape", "(", "5", ",", "2", ",", "2", ")", "\n", "fm", "=", "FeatureMap", "(", "distr", "=", "'laplace'", ",", "\n", "bias", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "3", ")", ",", "\n", "input_dim", "=", "2", ",", "\n", "n_features", "=", "3", ",", "\n", "params", "=", "np", ".", "zeros", "(", "1", ")", ",", "\n", "sigma_f", "=", "outputs", ".", "var", "(", ")", ")", "\n", "ss", "=", "KernelActiveSubspaces", "(", "dim", "=", "1", ",", "feature_map", "=", "fm", ")", "\n", "csv", "=", "CrossValidation", "(", "inputs", "=", "inputs", ",", "\n", "outputs", "=", "outputs", ",", "\n", "gradients", "=", "gradients", ",", "\n", "folds", "=", "2", ",", "\n", "subspace", "=", "ss", ")", "\n", "best", "=", "fm", ".", "tune_pr_matrix", "(", "func", "=", "average_rrmse", ",", "\n", "bounds", "=", "[", "slice", "(", "-", "2", ",", "1", ",", "0.2", ")", "for", "i", "in", "range", "(", "1", ")", "]", ",", "\n", "fn_args", "=", "{", "'csv'", ":", "csv", "}", ",", "\n", "method", "=", "'bso'", ",", "\n", "maxiter", "=", "10", ",", "\n", "save_file", "=", "False", ")", "[", "1", "]", "\n", "true", "=", "np", ".", "array", "(", "[", "[", "14.9646475", ",", "4.2713126", "]", ",", "[", "11.28870881", ",", "8.33313971", "]", ",", "\n", "[", "1.16475035", ",", "9.92216877", "]", "]", ")", "\n", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "true", ",", "best", ")", "\n", "", "", ""]]}