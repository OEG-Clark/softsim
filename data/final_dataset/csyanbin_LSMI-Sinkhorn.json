{"home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.euclidean_distance": [[8, 25], ["x.unsqueeze().expand.size", "y.unsqueeze().expand.size", "x.unsqueeze().expand.size", "x.unsqueeze().expand.unsqueeze().expand", "y.unsqueeze().expand.unsqueeze().expand", "torch.pow().sum", "x.unsqueeze().expand.unsqueeze", "y.unsqueeze().expand.unsqueeze", "torch.pow", "torch.isnan"], "function", ["None"], ["def", "euclidean_distance", "(", "x", ",", "y", ")", ":", "\n", "    ", "\"\"\" x:nxd, y:mxd\n        dist: nxm\n    \"\"\"", "\n", "n", "=", "x", ".", "size", "(", "0", ")", "\n", "m", "=", "y", ".", "size", "(", "0", ")", "\n", "d", "=", "x", ".", "size", "(", "1", ")", "\n", "\n", "x", "=", "x", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "n", ",", "m", ",", "d", ")", "\n", "y", "=", "y", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "n", ",", "m", ",", "d", ")", "\n", "\n", "dist", "=", "torch", ".", "pow", "(", "x", "-", "y", ",", "2", ")", ".", "sum", "(", "2", ")", "\n", "\n", "dist", "[", "torch", ".", "isnan", "(", "dist", ")", "]", "=", "0", "\n", "dist", "=", "dist", "+", "1e-16", "\n", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist": [[26, 43], ["utils_gpu.euclidean_distance", "dists.view.view", "torch.sqrt", "torch.randperm", "torch.tril", "torch.median"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.euclidean_distance"], ["", "def", "compmedDist", "(", "X", ")", ":", "\n", "    ", "\"\"\" X: NxD\n        Compute kernel width using median heuristic\n    \"\"\"", "\n", "n", "=", "X", ".", "shape", "[", "0", "]", "\n", "if", "n", ">", "1000", ":", "\n", "        ", "index", "=", "torch", ".", "randperm", "(", "n", ")", "\n", "X", "=", "X", "[", "index", "[", "0", ":", "1000", "]", ",", ":", "]", "\n", "n", "=", "1000", "\n", "\n", "", "dists", "=", "euclidean_distance", "(", "X", ",", "X", ")", "\n", "dists", "=", "dists", "-", "torch", ".", "tril", "(", "dists", ")", "\n", "\n", "dists", "=", "dists", ".", "view", "(", "n", "**", "2", ",", "1", ")", "\n", "sigma", "=", "torch", ".", "sqrt", "(", "0.5", "*", "torch", ".", "median", "(", "dists", "[", "dists", ">", "0", "]", ")", ")", "\n", "\n", "return", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian": [[45, 56], ["utils_gpu.euclidean_distance", "torch.exp", "X1.t", "X2.t", "sigma.pow"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.euclidean_distance"], ["", "def", "kernel_gaussian", "(", "X1", ",", "X2", ",", "sigma", ")", ":", "\n", "    ", "\"\"\" X1:dxn1, X2:dxn2\n        K: n1xn2\n    \"\"\"", "\n", "n1", "=", "X1", ".", "shape", "[", "1", "]", "\n", "n2", "=", "X2", ".", "shape", "[", "1", "]", "\n", "\n", "dist", "=", "euclidean_distance", "(", "X1", ".", "t", "(", ")", ",", "X2", ".", "t", "(", ")", ")", "\n", "K", "=", "torch", ".", "exp", "(", "-", "dist", "/", "(", "2", "*", "sigma", ".", "pow", "(", "2", ")", ")", ")", "\n", "\n", "return", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.perform_sinkhorn": [[58, 86], ["torch.exp", "torch.zeros().cuda", "range", "torch.mm", "a.cuda.cuda", "torch.mm", "torch.diag", "torch.ones", "torch.zeros", "torch.mm", "torch.norm", "torch.mm", "torch.norm", "Err[].max", "torch.diag", "torch.exp.t", "torch.mm", "torch.mm", "torch.exp.t"], "function", ["None"], ["", "def", "perform_sinkhorn", "(", "C", ",", "epsilon", ",", "mu", ",", "nu", ",", "a", ",", "warm", "=", "False", ",", "niter", "=", "100", ",", "tol", "=", "10e-10", ")", ":", "\n", "    ", "\"\"\"self implemented sinkhorn algorithm\"\"\"", "\n", "if", "not", "warm", ":", "\n", "        ", "a", "=", "torch", ".", "ones", "(", "(", "C", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "/", "C", ".", "shape", "[", "0", "]", "\n", "a", "=", "a", ".", "cuda", "(", ")", "\n", "\n", "", "K", "=", "torch", ".", "exp", "(", "-", "C", "/", "epsilon", ")", "\n", "\n", "#Err = torch.zeros((niter,2)).cuda()", "\n", "Err", "=", "torch", ".", "zeros", "(", "(", "niter", ",", "2", ")", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "niter", ")", ":", "\n", "        ", "b", "=", "nu", "/", "torch", ".", "mm", "(", "K", ".", "t", "(", ")", ",", "a", ")", "\n", "if", "i", "%", "5", "==", "0", ":", "\n", "            ", "Err", "[", "i", ",", "0", "]", "=", "torch", ".", "norm", "(", "a", "*", "(", "torch", ".", "mm", "(", "K", ",", "b", ")", ")", "-", "mu", ",", "p", "=", "1", ")", "\n", "\n", "", "a", "=", "mu", "/", "torch", ".", "mm", "(", "K", ",", "b", ")", "\n", "\n", "if", "i", "%", "5", "==", "0", ":", "\n", "            ", "Err", "[", "i", ",", "1", "]", "=", "torch", ".", "norm", "(", "b", "*", "(", "torch", ".", "mm", "(", "K", ".", "t", "(", ")", ",", "a", ")", ")", "-", "nu", ",", "p", "=", "1", ")", "\n", "\n", "#print(Err[i,:])", "\n", "#print(i)", "\n", "", "if", "(", "Err", "[", "i", ",", ":", "]", ")", ".", "max", "(", ")", "<", "tol", ":", "\n", "            ", "break", "\n", "\n", "", "", "PI", "=", "torch", ".", "mm", "(", "torch", ".", "mm", "(", "torch", ".", "diag", "(", "a", "[", ":", ",", "-", "1", "]", ")", ",", "K", ")", ",", "torch", ".", "diag", "(", "b", "[", ":", ",", "-", "1", "]", ")", ")", "\n", "\n", "return", "PI", ",", "a", ",", "b", ",", "Err", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.LSMI_PI": [[88, 109], ["Phi.sum", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.inverse", "Phi.sum.view", "Kx.t", "torch.diag", "torch.mm", "Kx.t", "torch.diag", "PI.t", "torch.eye().cuda", "torch.mm.view", "torch.mm.view", "torch.eye"], "function", ["None"], ["", "def", "LSMI_PI", "(", "Kx", ",", "Ky", ",", "Hh", ",", "PI", ",", "lam", ")", ":", "\n", "    ", "\"\"\" Kx:bxn1, Ky:bxn2\"\"\"", "\n", "n1", ",", "n2", "=", "Kx", ".", "shape", "[", "1", "]", ",", "Ky", ".", "shape", "[", "1", "]", "\n", "b", "=", "Kx", ".", "shape", "[", "0", "]", "\n", "\n", "Phi", "=", "Kx", "*", "torch", ".", "mm", "(", "Ky", ",", "PI", ".", "t", "(", ")", ")", "\n", "hh", "=", "Phi", ".", "sum", "(", "1", ")", "# b", "\n", "#Hh = torch.mm(Kx, Kx.t()) * torch.mm(Ky, Ky.t()) / (n1*n2) # bxb", "\n", "\n", "Hh", "=", "Hh", "+", "lam", "*", "torch", ".", "eye", "(", "b", ")", ".", "cuda", "(", ")", "\n", "alphah", "=", "torch", ".", "mm", "(", "torch", ".", "inverse", "(", "Hh", ")", ",", "hh", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "\n", "Kxa", "=", "torch", ".", "mm", "(", "Kx", ".", "t", "(", ")", ",", "torch", ".", "diag", "(", "alphah", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "C", "=", "-", "torch", ".", "mm", "(", "Kxa", ",", "Ky", ")", "\n", "\n", "Cc", "=", "torch", ".", "mm", "(", "Kx", ".", "t", "(", ")", ",", "torch", ".", "diag", "(", "alphah", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "Cc", "=", "torch", ".", "mm", "(", "Cc", ",", "Ky", ")", "\n", "\n", "MIh0", "=", "0.5", "*", "(", "(", "Cc", "-", "1", ")", "*", "(", "Cc", "-", "1", ")", ")", ".", "sum", "(", ")", "/", "(", "n1", "*", "n2", ")", "\n", "\n", "return", "alphah", ",", "MIh0", ",", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.LSMI_PI_semi": [[111, 145], ["torch.cat", "torch.cat", "Phi.sum", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.inverse", "hb.view", "Kx.t", "torch.diag", "torch.mm", "torch.cat.t", "torch.diag", "PI.t", "torch.eye().cuda", "torch.mm.view", "torch.mm.view", "torch.mm", "torch.mm", "torch.eye", "torch.mm", "torch.mm.t", "h.view", "torch.mm.t"], "function", ["None"], ["", "def", "LSMI_PI_semi", "(", "K1", ",", "K2", ",", "Kx", ",", "Ky", ",", "Hh", ",", "PI", ",", "beta", ",", "lam", ",", "loss", "=", "False", ")", ":", "\n", "    ", "\"\"\" K1:bxn, Kx:bxn1, Ky:bxn2 \"\"\"", "\n", "n", ",", "b", "=", "K1", ".", "shape", "[", "1", "]", ",", "K1", ".", "shape", "[", "0", "]", "\n", "n1", "=", "Kx", ".", "shape", "[", "1", "]", "\n", "n2", "=", "Ky", ".", "shape", "[", "1", "]", "\n", "\n", "Kxt", "=", "torch", ".", "cat", "(", "(", "K1", ",", "Kx", ")", ",", "dim", "=", "1", ")", "# bx(n1+n2)", "\n", "Kyt", "=", "torch", ".", "cat", "(", "(", "K2", ",", "Ky", ")", ",", "dim", "=", "1", ")", "# bx(n1+n2)", "\n", "\n", "h", "=", "(", "K1", "*", "K2", ")", ".", "sum", "(", "1", ")", "/", "n", "# b", "\n", "Phi", "=", "Kx", "*", "torch", ".", "mm", "(", "Ky", ",", "PI", ".", "t", "(", ")", ")", "# b", "\n", "hh", "=", "Phi", ".", "sum", "(", "1", ")", "# b", "\n", "#Hh = torch.mm(Kxt, Kxt.t()) * torch.mm(Kyt, Kyt.t()) / ((n1+n)*(n2+n)) # bxb", "\n", "\n", "Hh", "=", "Hh", "+", "lam", "*", "torch", ".", "eye", "(", "b", ")", ".", "cuda", "(", ")", "\n", "hb", "=", "beta", "*", "h", "+", "(", "1", "-", "beta", ")", "*", "hh", "\n", "alphah", "=", "torch", ".", "mm", "(", "torch", ".", "inverse", "(", "Hh", ")", ",", "hb", ".", "view", "(", "-", "1", ",", "1", ")", ")", "# only bxb inverse, fast", "\n", "#alphah = torch.Tensor(alphah.get()).cuda()", "\n", "\n", "Kxa", "=", "torch", ".", "mm", "(", "Kx", ".", "t", "(", ")", ",", "torch", ".", "diag", "(", "alphah", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "C", "=", "-", "torch", ".", "mm", "(", "Kxa", ",", "Ky", ")", "\n", "\n", "Cc", "=", "torch", ".", "mm", "(", "Kxt", ".", "t", "(", ")", ",", "torch", ".", "diag", "(", "alphah", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "Cc", "=", "torch", ".", "mm", "(", "Cc", ",", "Kyt", ")", "\n", "\n", "MIh0", "=", "0.5", "*", "(", "(", "Cc", "-", "1", ")", "*", "(", "Cc", "-", "1", ")", ")", ".", "sum", "(", ")", "/", "(", "(", "n", "+", "n1", ")", "*", "(", "n", "+", "n2", ")", ")", "\n", "#MIh0 = torch.mm(alphah.t(), hb.view(-1,1)) / 2 - 0.5", "\n", "\n", "## Return part of loss value w.r.t alpha only", "\n", "if", "loss", ":", "\n", "        ", "loss_value", "=", "0.5", "*", "torch", ".", "mm", "(", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "Hh", ")", ",", "alphah", ")", "-", "beta", "*", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "h", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "return", "alphah", ",", "MIh0", ",", "C", ",", "loss_value", "\n", "\n", "", "return", "alphah", ",", "MIh0", ",", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn": [[147, 203], ["torch.Tensor().cuda", "torch.Tensor().cuda", "min", "torch.randperm", "torch.randperm", "utils_gpu.compmedDist", "utils_gpu.compmedDist", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "torch.rand().cuda", "torch.zeros", "range", "torch.mm", "torch.mm", "min", "torch.Tensor().cuda.t", "torch.Tensor().cuda.t", "sinkhorn_stab.sinkhorn_stabilized.sum", "utils_gpu.LSMI_PI", "kernel_gaussian.t", "torch.diag", "sinkhorn_stab.sinkhorn_stabilized.cpu().data.numpy", "torch.zeros.cpu().data.numpy", "torch.Tensor", "torch.Tensor", "torch.mm", "torch.mm", "torch.rand", "mu.unsqueeze.unsqueeze", "nu.unsqueeze.unsqueeze", "utils_gpu.perform_sinkhorn", "sinkhorn_stab.sinkhorn_stabilized", "torch.norm", "alphah.view", "kernel_gaussian.t", "kernel_gaussian.t", "torch.ones", "torch.ones", "torch.ones().cuda", "sinkhorn_stab.sinkhorn_stabilized.cpu", "torch.zeros.cpu", "torch.ones"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.LSMI_PI", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.perform_sinkhorn", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.sinkhorn_stab.sinkhorn_stabilized"], ["", "def", "SMI_sinkhorn", "(", "X", ",", "Y", ",", "n_iter", "=", "20", ",", "b", "=", "200", ",", "epsilon", "=", "0.1", ",", "lam", "=", "0.0001", ",", "warm", "=", "False", ")", ":", "\n", "    ", "\"\"\" Unsupervised SMI-sinkhorn Algorithm\"\"\"", "\n", "X", "=", "torch", ".", "Tensor", "(", "X", ")", ".", "cuda", "(", ")", "\n", "Y", "=", "torch", ".", "Tensor", "(", "Y", ")", ".", "cuda", "(", ")", "\n", "n1", ",", "n2", "=", "X", ".", "shape", "[", "1", "]", ",", "Y", ".", "shape", "[", "1", "]", "\n", "\n", "b", "=", "min", "(", "b", ",", "min", "(", "n1", ",", "n2", ")", ")", "\n", "index1", "=", "torch", ".", "randperm", "(", "n1", ")", "\n", "index2", "=", "torch", ".", "randperm", "(", "n2", ")", "\n", "Xb", "=", "X", "[", ":", ",", "index1", "[", "0", ":", "b", "]", "]", "\n", "Yb", "=", "Y", "[", ":", ",", "index2", "[", "0", ":", "b", "]", "]", "\n", "\n", "sigma1", "=", "compmedDist", "(", "X", ".", "t", "(", ")", ")", "\n", "sigma2", "=", "compmedDist", "(", "Y", ".", "t", "(", ")", ")", "\n", "Kx", "=", "kernel_gaussian", "(", "Xb", ",", "X", ",", "sigma1", ")", "\n", "Ky", "=", "kernel_gaussian", "(", "Yb", ",", "Y", ",", "sigma2", ")", "\n", "## Precompute H since it does not depend on PI or alpha", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kx", ",", "Kx", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Ky", ",", "Ky", ".", "t", "(", ")", ")", "/", "(", "n1", "*", "n2", ")", "# bxb", "\n", "\n", "del", "X", ";", "del", "Y", "\n", "\n", "\n", "PI", "=", "torch", ".", "rand", "(", "n1", ",", "n2", ")", ".", "cuda", "(", ")", "\n", "PI", "=", "PI", "/", "PI", ".", "sum", "(", ")", "# normalize", "\n", "\n", "mu", "=", "(", "torch", ".", "ones", "(", "(", "n1", ",", ")", ")", "/", "n1", ")", ".", "cuda", "(", ")", "\n", "nu", "=", "(", "torch", ".", "ones", "(", "(", "n2", ",", ")", ")", "/", "n2", ")", ".", "cuda", "(", ")", "\n", "\n", "MIh", "=", "torch", ".", "zeros", "(", "n_iter", ")", "\n", "tol", "=", "1e-9", "\n", "for", "iter", "in", "range", "(", "n_iter", ")", ":", "\n", "        ", "PI_prev", "=", "PI", "\n", "alphah", ",", "MIh_t", ",", "C", "=", "LSMI_PI", "(", "Kx", ",", "Ky", ",", "Hh", ",", "PI", ",", "lam", "=", "lam", ")", "\n", "if", "sinkhorn_algorithm", "==", "\"own\"", ":", "\n", "            ", "if", "iter", "==", "0", ":", "\n", "                ", "a", "=", "torch", ".", "ones", "(", "(", "C", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ".", "cuda", "(", ")", "\n", "", "mu", "=", "mu", ".", "unsqueeze", "(", "1", ")", "\n", "nu", "=", "nu", ".", "unsqueeze", "(", "1", ")", "\n", "PI", ",", "a", ",", "b", ",", "Err", "=", "perform_sinkhorn", "(", "C", ",", "epsilon", ",", "mu", ",", "nu", ",", "a", ")", "\n", "", "else", ":", "# log-stabilized Sinkhorn algorithm", "\n", "            ", "PI", "=", "sinkhorn_stabilized", "(", "mu", ",", "nu", ",", "C", ",", "epsilon", ",", "method", "=", "'sinkhorn_stabilized'", ",", "numItermax", "=", "100", ",", "cuda", "=", "True", ")", "\n", "\n", "", "if", "iter", "%", "10", "==", "0", ":", "\n", "            ", "err", "=", "torch", ".", "norm", "(", "PI", "-", "PI_prev", ")", "\n", "if", "err", "<", "tol", ":", "\n", "                ", "MIh", "=", "MIh", "[", "0", ":", "iter", "]", "\n", "break", "\n", "\n", "", "", "MIh", "[", "iter", "]", "=", "MIh_t", "\n", "\n", "", "Cc", "=", "torch", ".", "mm", "(", "Kx", ".", "t", "(", ")", ",", "torch", ".", "diag", "(", "alphah", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "Cc", "=", "torch", ".", "mm", "(", "Cc", ",", "Ky", ")", "\n", "\n", "MIh_pair", "=", "0.5", "*", "(", "(", "Cc", "-", "1", ")", "*", "(", "Cc", "-", "1", ")", ")", ".", "sum", "(", ")", "/", "(", "n1", "*", "n2", ")", "\n", "\n", "return", "PI", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "MIh", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi": [[205, 275], ["torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.cat", "torch.cat", "min", "torch.randperm", "torch.randperm", "torch.cat", "torch.cat", "utils_gpu.compmedDist", "utils_gpu.compmedDist", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "torch.rand().cuda", "torch.zeros", "range", "torch.mm", "torch.mm", "min", "torch.cat.t", "torch.cat.t", "sinkhorn_stab.sinkhorn_stabilized.sum", "utils_gpu.LSMI_PI_semi", "kernel_gaussian.t", "torch.diag", "sinkhorn_stab.sinkhorn_stabilized.cpu().data.numpy", "torch.zeros.cpu().data.numpy", "MIh_pair.cpu().data.numpy", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.mm", "torch.mm", "torch.rand", "utils_gpu.perform_sinkhorn", "sinkhorn_stab.sinkhorn_stabilized", "torch.norm", "alphah.view", "kernel_gaussian.t", "kernel_gaussian.t", "torch.ones", "torch.ones", "torch.ones().cuda", "mu.unsqueeze.unsqueeze", "nu.unsqueeze.unsqueeze", "sinkhorn_stab.sinkhorn_stabilized.cpu", "torch.zeros.cpu", "MIh_pair.cpu", "torch.ones"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.LSMI_PI_semi", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.perform_sinkhorn", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.sinkhorn_stab.sinkhorn_stabilized"], ["", "def", "SMI_sinkhorn_semi", "(", "Xp", ",", "Yp", ",", "Xu", ",", "Yu", ",", "n_iter", "=", "20", ",", "b", "=", "200", ",", "beta", "=", "0.5", ",", "epsilon", "=", "0.1", ",", "lam", "=", "0.0001", ",", "warm", "=", "False", ")", ":", "\n", "    ", "\"\"\"semi-supervised SMI sinkhorn algorithm\"\"\"", "\n", "Xp", "=", "torch", ".", "Tensor", "(", "Xp", ")", ".", "cuda", "(", ")", "\n", "Yp", "=", "torch", ".", "Tensor", "(", "Yp", ")", ".", "cuda", "(", ")", "\n", "Xu", "=", "torch", ".", "Tensor", "(", "Xu", ")", ".", "cuda", "(", ")", "\n", "Yu", "=", "torch", ".", "Tensor", "(", "Yu", ")", ".", "cuda", "(", ")", "\n", "n", ",", "n1", ",", "n2", "=", "Xp", ".", "shape", "[", "1", "]", ",", "Xu", ".", "shape", "[", "1", "]", ",", "Yu", ".", "shape", "[", "1", "]", "\n", "\n", "Xpu", "=", "torch", ".", "cat", "(", "(", "Xp", ",", "Xu", ")", ",", "dim", "=", "1", ")", "# dx(n+n1)", "\n", "Ypu", "=", "torch", ".", "cat", "(", "(", "Yp", ",", "Yu", ")", ",", "dim", "=", "1", ")", "# dx(n+n2)", "\n", "\n", "b", "=", "min", "(", "b", ",", "min", "(", "n1", ",", "n2", ")", ")", "\n", "index1", "=", "torch", ".", "randperm", "(", "n1", ")", "\n", "index2", "=", "torch", ".", "randperm", "(", "n2", ")", "\n", "Xb", "=", "Xu", "[", ":", ",", "index1", "[", "0", ":", "b", "-", "n", "]", "]", "\n", "Xb", "=", "torch", ".", "cat", "(", "(", "Xp", ",", "Xb", ")", ",", "dim", "=", "1", ")", "\n", "Yb", "=", "Yu", "[", ":", ",", "index2", "[", "0", ":", "b", "-", "n", "]", "]", "\n", "Yb", "=", "torch", ".", "cat", "(", "(", "Yp", ",", "Yb", ")", ",", "dim", "=", "1", ")", "\n", "\n", "del", "Xp", ";", "del", "Xu", ";", "del", "Yp", ";", "del", "Yu", "\n", "\n", "sigma1", "=", "compmedDist", "(", "Xpu", ".", "t", "(", ")", ")", "\n", "sigma2", "=", "compmedDist", "(", "Ypu", ".", "t", "(", ")", ")", "\n", "Kxt", "=", "kernel_gaussian", "(", "Xb", ",", "Xpu", ",", "sigma1", ")", "# bx(n+n1)", "\n", "Kyt", "=", "kernel_gaussian", "(", "Yb", ",", "Ypu", ",", "sigma2", ")", "# bx(n+n2)", "\n", "K1", "=", "Kxt", "[", ":", ",", "0", ":", "n", "]", "\n", "K2", "=", "Kyt", "[", ":", ",", "0", ":", "n", "]", "\n", "Kx", "=", "Kxt", "[", ":", ",", "n", ":", "]", "\n", "Ky", "=", "Kyt", "[", ":", ",", "n", ":", "]", "\n", "## Pre-compute H since it does not depends on PI or alpha", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kxt", ",", "Kxt", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Kyt", ",", "Kyt", ".", "t", "(", ")", ")", "/", "(", "(", "n1", "+", "n", ")", "*", "(", "n2", "+", "n", ")", ")", "# bxb", "\n", "\n", "del", "Xpu", ";", "del", "Ypu", "\n", "\n", "\n", "PI", "=", "torch", ".", "rand", "(", "n1", ",", "n2", ")", ".", "cuda", "(", ")", "\n", "PI", "=", "PI", "/", "PI", ".", "sum", "(", ")", "# normalize", "\n", "\n", "mu", "=", "(", "torch", ".", "ones", "(", "(", "n1", ",", ")", ")", "/", "n1", ")", ".", "cuda", "(", ")", "\n", "nu", "=", "(", "torch", ".", "ones", "(", "(", "n2", ",", ")", ")", "/", "n2", ")", ".", "cuda", "(", ")", "\n", "\n", "MIh", "=", "torch", ".", "zeros", "(", "n_iter", ")", "\n", "tol", "=", "1e-9", "\n", "for", "iter", "in", "range", "(", "n_iter", ")", ":", "\n", "        ", "PI_prev", "=", "PI", "\n", "alphah", ",", "MIh_t", ",", "C", "=", "LSMI_PI_semi", "(", "K1", ",", "K2", ",", "Kx", ",", "Ky", ",", "Hh", ",", "PI", ",", "beta", ",", "lam", "=", "lam", ")", "\n", "C", "=", "(", "1", "-", "beta", ")", "*", "C", "\n", "if", "sinkhorn_algorithm", "==", "\"own\"", ":", "\n", "            ", "if", "iter", "==", "0", ":", "\n", "                ", "a", "=", "torch", ".", "ones", "(", "(", "C", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ".", "cuda", "(", ")", "\n", "mu", "=", "mu", ".", "unsqueeze", "(", "1", ")", "\n", "nu", "=", "nu", ".", "unsqueeze", "(", "1", ")", "\n", "", "PI", ",", "a", ",", "b", ",", "Err", "=", "perform_sinkhorn", "(", "C", ",", "epsilon", ",", "mu", ",", "nu", ",", "a", ")", "\n", "", "else", ":", "# log-stabilized Sinkhorn algorithm", "\n", "            ", "PI", "=", "sinkhorn_stabilized", "(", "mu", ",", "nu", ",", "C", ",", "epsilon", ",", "method", "=", "'sinkhorn_stabilized'", ",", "numItermax", "=", "100", ",", "cuda", "=", "True", ")", "\n", "\n", "", "if", "iter", "%", "10", "==", "0", ":", "# check SMI value and early stop", "\n", "            ", "err", "=", "torch", ".", "norm", "(", "PI", "-", "PI_prev", ")", "\n", "if", "err", "<", "tol", ":", "\n", "                ", "MIh", "=", "MIh", "[", "0", ":", "iter", "]", "\n", "break", "\n", "\n", "", "", "MIh", "[", "iter", "]", "=", "MIh_t", "\n", "\n", "", "Cc", "=", "torch", ".", "mm", "(", "Kxt", ".", "t", "(", ")", ",", "torch", ".", "diag", "(", "alphah", ".", "view", "(", "-", "1", ")", ")", ")", "\n", "Cc", "=", "torch", ".", "mm", "(", "Cc", ",", "Kyt", ")", "\n", "\n", "MIh_pair", "=", "0.5", "*", "(", "(", "Cc", "-", "1", ")", "*", "(", "Cc", "-", "1", ")", ")", ".", "sum", "(", ")", "/", "(", "(", "n", "+", "n1", ")", "*", "(", "n", "+", "n2", ")", ")", "\n", "\n", "return", "PI", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "MIh", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "MIh_pair", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi_CV": [[277, 358], ["torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "int", "torch.randperm", "torch.cat", "torch.cat", "min", "torch.randperm", "torch.randperm", "torch.cat", "torch.cat", "utils_gpu.compmedDist", "utils_gpu.compmedDist", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "torch.rand().cuda", "torch.zeros", "range", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "numpy.round", "min", "torch.cat.t", "torch.cat.t", "sinkhorn_stab.sinkhorn_stabilized.sum", "utils_gpu.LSMI_PI_semi", "torch.mm", "sinkhorn_stab.sinkhorn_stabilized.cpu().data.numpy", "torch.zeros.cpu().data.numpy", "MIh_cv.cpu().data.numpy", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.mm", "torch.mm", "torch.rand", "utils_gpu.perform_sinkhorn", "sinkhorn_stab.sinkhorn_stabilized", "torch.norm", "torch.mm", "torch.mm", "torch.mm", "alphah.t", "hh.view", "kernel_gaussian.t", "kernel_gaussian.t", "torch.ones", "torch.ones", "torch.ones().cuda", "torch.norm.abs", "kernel_gaussian.t", "kernel_gaussian.t", "torch.mm", "alphah.t", "sinkhorn_stab.sinkhorn_stabilized.cpu", "torch.zeros.cpu", "MIh_cv.cpu", "torch.ones"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.LSMI_PI_semi", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.perform_sinkhorn", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.sinkhorn_stab.sinkhorn_stabilized"], ["", "def", "SMI_sinkhorn_semi_CV", "(", "Xp", ",", "Yp", ",", "Xu", ",", "Yu", ",", "n_iter", "=", "20", ",", "b", "=", "200", ",", "beta", "=", "0.5", ",", "epsilon", "=", "0.1", ",", "lam", "=", "0.0001", ",", "warm", "=", "False", ")", ":", "\n", "    ", "\"\"\" semi-supervised SMI sinkhorn algorithm\n        Using Paired Data for 2-fold CV\n    \"\"\"", "\n", "Xp", "=", "torch", ".", "Tensor", "(", "Xp", ")", ".", "cuda", "(", ")", "\n", "Yp", "=", "torch", ".", "Tensor", "(", "Yp", ")", ".", "cuda", "(", ")", "\n", "Xu", "=", "torch", ".", "Tensor", "(", "Xu", ")", ".", "cuda", "(", ")", "\n", "Yu", "=", "torch", ".", "Tensor", "(", "Yu", ")", ".", "cuda", "(", ")", "\n", "n", ",", "n1", ",", "n2", "=", "Xp", ".", "shape", "[", "1", "]", ",", "Xu", ".", "shape", "[", "1", "]", ",", "Yu", ".", "shape", "[", "1", "]", "\n", "\n", "n_cv", "=", "int", "(", "np", ".", "round", "(", "n", "/", "2", ")", ")", "\n", "index_cv", "=", "torch", ".", "randperm", "(", "n", ")", "\n", "Xp_cv_tr", "=", "Xp", "[", ":", ",", "index_cv", "[", "0", ":", "n_cv", "]", "]", "\n", "Yp_cv_tr", "=", "Yp", "[", ":", ",", "index_cv", "[", "0", ":", "n_cv", "]", "]", "\n", "Xp_cv_te", "=", "Xp", "[", ":", ",", "index_cv", "[", "n_cv", ":", "]", "]", "\n", "Yp_cv_te", "=", "Yp", "[", ":", ",", "index_cv", "[", "n_cv", ":", "]", "]", "\n", "\n", "Xpu", "=", "torch", ".", "cat", "(", "(", "Xp_cv_tr", ",", "Xu", ")", ",", "dim", "=", "1", ")", "# dx(n_cv+n1)", "\n", "Ypu", "=", "torch", ".", "cat", "(", "(", "Yp_cv_tr", ",", "Yu", ")", ",", "dim", "=", "1", ")", "# dx(n_cv+n2)", "\n", "\n", "# basis sampling", "\n", "b", "=", "min", "(", "b", ",", "min", "(", "n1", ",", "n2", ")", ")", "\n", "index1", "=", "torch", ".", "randperm", "(", "n1", ")", "\n", "index2", "=", "torch", ".", "randperm", "(", "n2", ")", "\n", "Xb", "=", "Xu", "[", ":", ",", "index1", "[", "0", ":", "b", "-", "n_cv", "]", "]", "\n", "Xb", "=", "torch", ".", "cat", "(", "(", "Xp_cv_tr", ",", "Xb", ")", ",", "dim", "=", "1", ")", "\n", "Yb", "=", "Yu", "[", ":", ",", "index2", "[", "0", ":", "b", "-", "n_cv", "]", "]", "\n", "Yb", "=", "torch", ".", "cat", "(", "(", "Yp_cv_tr", ",", "Yb", ")", ",", "dim", "=", "1", ")", "\n", "\n", "del", "Xp", ";", "del", "Xu", ";", "del", "Yp", ";", "del", "Yu", "\n", "\n", "sigma1", "=", "compmedDist", "(", "Xpu", ".", "t", "(", ")", ")", "\n", "sigma2", "=", "compmedDist", "(", "Ypu", ".", "t", "(", ")", ")", "\n", "Kxt", "=", "kernel_gaussian", "(", "Xb", ",", "Xpu", ",", "sigma1", ")", "# bx(n_cv+n1)", "\n", "Kyt", "=", "kernel_gaussian", "(", "Yb", ",", "Ypu", ",", "sigma2", ")", "# bx(n_cv+n2)", "\n", "K1", "=", "Kxt", "[", ":", ",", "0", ":", "n_cv", "]", "\n", "K2", "=", "Kyt", "[", ":", ",", "0", ":", "n_cv", "]", "\n", "Kx", "=", "Kxt", "[", ":", ",", "n_cv", ":", "]", "\n", "Ky", "=", "Kyt", "[", ":", ",", "n_cv", ":", "]", "\n", "## Pre-compute H since it does not depends on PI or alpha", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kxt", ",", "Kxt", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Kyt", ",", "Kyt", ".", "t", "(", ")", ")", "/", "(", "(", "n1", "+", "n_cv", ")", "*", "(", "n2", "+", "n_cv", ")", ")", "# bxb", "\n", "\n", "del", "Kxt", ";", "del", "Kyt", ";", "del", "Xpu", ";", "del", "Ypu", "\n", "\n", "PI", "=", "torch", ".", "rand", "(", "n1", ",", "n2", ")", ".", "cuda", "(", ")", "\n", "PI", "=", "PI", "/", "PI", ".", "sum", "(", ")", "# normalize", "\n", "\n", "mu", "=", "(", "torch", ".", "ones", "(", "(", "n1", ",", ")", ")", "/", "n1", ")", ".", "cuda", "(", ")", "\n", "nu", "=", "(", "torch", ".", "ones", "(", "(", "n2", ",", ")", ")", "/", "n2", ")", ".", "cuda", "(", ")", "\n", "\n", "MIh", "=", "torch", ".", "zeros", "(", "n_iter", ")", "\n", "tol", "=", "1e-9", "\n", "for", "iter", "in", "range", "(", "n_iter", ")", ":", "\n", "        ", "PI_prev", "=", "PI", "\n", "alphah", ",", "MIh_t", ",", "C", "=", "LSMI_PI_semi", "(", "K1", ",", "K2", ",", "Kx", ",", "Ky", ",", "Hh", ",", "PI", ",", "beta", ",", "lam", "=", "lam", ")", "\n", "C", "=", "(", "1", "-", "beta", ")", "*", "C", "\n", "if", "sinkhorn_algorithm", "==", "\"own\"", ":", "\n", "            ", "if", "iter", "==", "0", ":", "\n", "                ", "a", "=", "torch", ".", "ones", "(", "(", "C", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ".", "cuda", "(", ")", "\n", "", "PI", ",", "a", ",", "b", ",", "Err", "=", "perform_sinkhorn", "(", "C", ",", "epsilon", ",", "mu", ",", "nu", ",", "a", ")", "\n", "", "else", ":", "# log-stabilized Sinkhorn algorithm", "\n", "            ", "PI", "=", "sinkhorn_stabilized", "(", "mu", ",", "nu", ",", "C", ",", "epsilon", ",", "method", "=", "'sinkhorn_stabilized'", ",", "numItermax", "=", "100", ",", "cuda", "=", "True", ")", "\n", "\n", "", "if", "iter", "%", "10", "==", "0", ":", "# check SMI value and early stop", "\n", "            ", "err", "=", "torch", ".", "norm", "(", "PI", "-", "PI_prev", ")", "\n", "if", "err", ".", "abs", "(", ")", "<", "tol", ":", "\n", "                ", "MIh", "=", "MIh", "[", "0", ":", "iter", "]", "\n", "break", "\n", "\n", "", "", "MIh", "[", "iter", "]", "=", "MIh_t", "\n", "\n", "", "nte", "=", "Xp_cv_te", ".", "shape", "[", "1", "]", "\n", "Kx_te", "=", "kernel_gaussian", "(", "Xb", ",", "Xp_cv_te", ",", "sigma1", ")", "\n", "Ky_te", "=", "kernel_gaussian", "(", "Yb", ",", "Yp_cv_te", ",", "sigma2", ")", "\n", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kx_te", ",", "Kx_te", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Ky_te", ",", "Ky_te", ".", "t", "(", ")", ")", "/", "(", "nte", "*", "nte", ")", "\n", "hh", "=", "(", "Kx_te", "*", "Ky_te", ")", ".", "sum", "(", "1", ")", "/", "nte", "\n", "MIh_cv", "=", "0.5", "*", "torch", ".", "mm", "(", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "Hh", ")", ",", "alphah", ")", "-", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "hh", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "\n", "\n", "return", "PI", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "MIh", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "MIh_cv", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi_CV2": [[360, 439], ["torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.cat", "torch.cat", "min", "torch.randperm", "torch.randperm", "torch.cat", "torch.cat", "utils_gpu.compmedDist", "utils_gpu.compmedDist", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "torch.rand().cuda", "torch.zeros", "range", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "min", "torch.cat.t", "torch.cat.t", "sinkhorn_stab.sinkhorn_stabilized.sum", "utils_gpu.LSMI_PI_semi", "torch.mm", "sinkhorn_stab.sinkhorn_stabilized.cpu().data.numpy", "torch.zeros.cpu().data.numpy", "MIh_cv.cpu().data.numpy", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.mm", "torch.mm", "torch.rand", "utils_gpu.perform_sinkhorn", "sinkhorn_stab.sinkhorn_stabilized", "torch.norm", "torch.mm", "torch.mm", "torch.mm", "alphah.t", "hh.view", "kernel_gaussian.t", "kernel_gaussian.t", "torch.ones", "torch.ones", "torch.ones().cuda", "torch.norm.abs", "kernel_gaussian.t", "kernel_gaussian.t", "torch.mm", "alphah.t", "sinkhorn_stab.sinkhorn_stabilized.cpu", "torch.zeros.cpu", "MIh_cv.cpu", "torch.ones"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.LSMI_PI_semi", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.perform_sinkhorn", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.sinkhorn_stab.sinkhorn_stabilized"], ["", "def", "SMI_sinkhorn_semi_CV2", "(", "Xp_cv_tr", ",", "Yp_cv_tr", ",", "Xp_cv_te", ",", "Yp_cv_te", ",", "Xu", ",", "Yu", ",", "n_iter", "=", "20", ",", "b", "=", "200", ",", "beta", "=", "0.5", ",", "epsilon", "=", "0.1", ",", "lam", "=", "0.0001", ",", "warm", "=", "False", ")", ":", "\n", "    ", "\"\"\" semi-supervised SMI sinkhorn algorithm\n        Using Paired Data for 2-fold CV\n        Train-Test split are predefined as input\n    \"\"\"", "\n", "Xp_cv_tr", "=", "torch", ".", "Tensor", "(", "Xp_cv_tr", ")", ".", "cuda", "(", ")", "\n", "Yp_cv_tr", "=", "torch", ".", "Tensor", "(", "Yp_cv_tr", ")", ".", "cuda", "(", ")", "\n", "Xp_cv_te", "=", "torch", ".", "Tensor", "(", "Xp_cv_te", ")", ".", "cuda", "(", ")", "\n", "Yp_cv_te", "=", "torch", ".", "Tensor", "(", "Yp_cv_te", ")", ".", "cuda", "(", ")", "\n", "Xu", "=", "torch", ".", "Tensor", "(", "Xu", ")", ".", "cuda", "(", ")", "\n", "Yu", "=", "torch", ".", "Tensor", "(", "Yu", ")", ".", "cuda", "(", ")", "\n", "\n", "n1", ",", "n2", "=", "Xu", ".", "shape", "[", "1", "]", ",", "Yu", ".", "shape", "[", "1", "]", "\n", "n_cv", "=", "Xp_cv_tr", ".", "shape", "[", "1", "]", "\n", "\n", "Xpu", "=", "torch", ".", "cat", "(", "(", "Xp_cv_tr", ",", "Xu", ")", ",", "dim", "=", "1", ")", "# dx(n_cv+n1)", "\n", "Ypu", "=", "torch", ".", "cat", "(", "(", "Yp_cv_tr", ",", "Yu", ")", ",", "dim", "=", "1", ")", "# dx(n_cv+n2)", "\n", "\n", "# basis sampling", "\n", "b", "=", "min", "(", "b", ",", "min", "(", "n1", ",", "n2", ")", ")", "\n", "index1", "=", "torch", ".", "randperm", "(", "n1", ")", "\n", "index2", "=", "torch", ".", "randperm", "(", "n2", ")", "\n", "Xb", "=", "Xu", "[", ":", ",", "index1", "[", "0", ":", "b", "-", "n_cv", "]", "]", "\n", "Xb", "=", "torch", ".", "cat", "(", "(", "Xp_cv_tr", ",", "Xb", ")", ",", "dim", "=", "1", ")", "\n", "Yb", "=", "Yu", "[", ":", ",", "index2", "[", "0", ":", "b", "-", "n_cv", "]", "]", "\n", "Yb", "=", "torch", ".", "cat", "(", "(", "Yp_cv_tr", ",", "Yb", ")", ",", "dim", "=", "1", ")", "\n", "\n", "del", "Xu", ";", "del", "Yu", "\n", "\n", "sigma1", "=", "compmedDist", "(", "Xpu", ".", "t", "(", ")", ")", "\n", "sigma2", "=", "compmedDist", "(", "Ypu", ".", "t", "(", ")", ")", "\n", "Kxt", "=", "kernel_gaussian", "(", "Xb", ",", "Xpu", ",", "sigma1", ")", "# bx(n_cv+n1)", "\n", "Kyt", "=", "kernel_gaussian", "(", "Yb", ",", "Ypu", ",", "sigma2", ")", "# bx(n_cv+n2)", "\n", "K1", "=", "Kxt", "[", ":", ",", "0", ":", "n_cv", "]", "\n", "K2", "=", "Kyt", "[", ":", ",", "0", ":", "n_cv", "]", "\n", "Kx", "=", "Kxt", "[", ":", ",", "n_cv", ":", "]", "\n", "Ky", "=", "Kyt", "[", ":", ",", "n_cv", ":", "]", "\n", "## Pre-compute H since it does not depends on PI or alpha", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kxt", ",", "Kxt", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Kyt", ",", "Kyt", ".", "t", "(", ")", ")", "/", "(", "(", "n1", "+", "n_cv", ")", "*", "(", "n2", "+", "n_cv", ")", ")", "# bxb", "\n", "\n", "del", "Kxt", ";", "del", "Kyt", ";", "del", "Xpu", ";", "del", "Ypu", "\n", "\n", "PI", "=", "torch", ".", "rand", "(", "n1", ",", "n2", ")", ".", "cuda", "(", ")", "\n", "PI", "=", "PI", "/", "PI", ".", "sum", "(", ")", "# normalize", "\n", "\n", "mu", "=", "(", "torch", ".", "ones", "(", "(", "n1", ",", ")", ")", "/", "n1", ")", ".", "cuda", "(", ")", "\n", "nu", "=", "(", "torch", ".", "ones", "(", "(", "n2", ",", ")", ")", "/", "n2", ")", ".", "cuda", "(", ")", "\n", "\n", "MIh", "=", "torch", ".", "zeros", "(", "n_iter", ")", "\n", "tol", "=", "1e-9", "\n", "for", "iter", "in", "range", "(", "n_iter", ")", ":", "\n", "        ", "PI_prev", "=", "PI", "\n", "alphah", ",", "MIh_t", ",", "C", "=", "LSMI_PI_semi", "(", "K1", ",", "K2", ",", "Kx", ",", "Ky", ",", "Hh", ",", "PI", ",", "beta", ",", "lam", "=", "lam", ")", "\n", "C", "=", "(", "1", "-", "beta", ")", "*", "C", "\n", "if", "sinkhorn_algorithm", "==", "\"own\"", ":", "\n", "            ", "if", "iter", "==", "0", ":", "\n", "                ", "a", "=", "torch", ".", "ones", "(", "(", "C", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ".", "cuda", "(", ")", "\n", "", "PI", ",", "a", ",", "b", ",", "Err", "=", "perform_sinkhorn", "(", "C", ",", "epsilon", ",", "mu", ",", "nu", ",", "a", ")", "\n", "", "else", ":", "# log-stabilized Sinkhorn algorithm", "\n", "            ", "PI", "=", "sinkhorn_stabilized", "(", "mu", ",", "nu", ",", "C", ",", "epsilon", ",", "method", "=", "'sinkhorn_stabilized'", ",", "numItermax", "=", "100", ",", "cuda", "=", "True", ")", "\n", "\n", "", "if", "iter", "%", "10", "==", "0", ":", "# check SMI value and early stop", "\n", "            ", "err", "=", "torch", ".", "norm", "(", "PI", "-", "PI_prev", ")", "\n", "if", "err", ".", "abs", "(", ")", "<", "tol", ":", "\n", "                ", "MIh", "=", "MIh", "[", "0", ":", "iter", "]", "\n", "break", "\n", "\n", "", "", "MIh", "[", "iter", "]", "=", "MIh_t", "\n", "\n", "", "nte", "=", "Xp_cv_te", ".", "shape", "[", "1", "]", "\n", "Kx_te", "=", "kernel_gaussian", "(", "Xb", ",", "Xp_cv_te", ",", "sigma1", ")", "\n", "Ky_te", "=", "kernel_gaussian", "(", "Yb", ",", "Yp_cv_te", ",", "sigma2", ")", "\n", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kx_te", ",", "Kx_te", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Ky_te", ",", "Ky_te", ".", "t", "(", ")", ")", "/", "(", "nte", "*", "nte", ")", "\n", "hh", "=", "(", "Kx_te", "*", "Ky_te", ")", ".", "sum", "(", "1", ")", "/", "nte", "\n", "MIh_cv", "=", "0.5", "*", "torch", ".", "mm", "(", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "Hh", ")", ",", "alphah", ")", "-", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "hh", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "\n", "\n", "return", "PI", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "MIh", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "MIh_cv", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi_CV_main": [[441, 457], ["int", "numpy.random.permutation", "utils_gpu.SMI_sinkhorn_semi_CV2", "utils_gpu.SMI_sinkhorn_semi_CV2", "numpy.shape", "numpy.round"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi_CV2", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi_CV2"], ["", "def", "SMI_sinkhorn_semi_CV_main", "(", "Xp", ",", "Yp", ",", "Xu", ",", "Yu", ",", "n_iter", "=", "20", ",", "b", "=", "200", ",", "beta", "=", "0.5", ",", "epsilon", "=", "0.1", ",", "lam", "=", "0.0001", ",", "warm", "=", "False", ")", ":", "\n", "    ", "\"\"\" Main function for cross-validation\n        split data into 2 folds and exchange the train-test split\n    \"\"\"", "\n", "n", "=", "np", ".", "shape", "(", "Xp", ")", "[", "1", "]", "\n", "n_cv", "=", "int", "(", "np", ".", "round", "(", "n", "/", "2", ")", ")", "\n", "index_cv", "=", "np", ".", "random", ".", "permutation", "(", "n", ")", "\n", "Xp_cv_tr", "=", "Xp", "[", ":", ",", "index_cv", "[", "0", ":", "n_cv", "]", "]", "\n", "Yp_cv_tr", "=", "Yp", "[", ":", ",", "index_cv", "[", "0", ":", "n_cv", "]", "]", "\n", "Xp_cv_te", "=", "Xp", "[", ":", ",", "index_cv", "[", "n_cv", ":", "]", "]", "\n", "Yp_cv_te", "=", "Yp", "[", ":", ",", "index_cv", "[", "n_cv", ":", "]", "]", "\n", "\n", "PI", ",", "MIs", ",", "MI_cv1", "=", "SMI_sinkhorn_semi_CV2", "(", "Xp_cv_tr", ",", "Yp_cv_tr", ",", "Xp_cv_te", ",", "Yp_cv_te", ",", "Xu", ",", "Yu", ",", "n_iter", ",", "b", ",", "beta", ",", "epsilon", ",", "lam", ",", "warm", ")", "\n", "PI", ",", "MIs", ",", "MI_cv2", "=", "SMI_sinkhorn_semi_CV2", "(", "Xp_cv_te", ",", "Yp_cv_te", ",", "Xp_cv_tr", ",", "Yp_cv_tr", ",", "Xu", ",", "Yu", ",", "n_iter", ",", "b", ",", "beta", ",", "epsilon", ",", "lam", ",", "warm", ")", "\n", "\n", "return", "PI", ",", "MIs", ",", "0.5", "*", "(", "MI_cv1", "+", "MI_cv2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_pair": [[459, 490], ["torch.Tensor().cuda", "torch.Tensor().cuda", "min", "torch.randperm", "torch.randperm", "utils_gpu.compmedDist", "utils_gpu.compmedDist", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "utils_gpu.LSMI_PI", "MIh_pair.cpu().data.numpy", "print", "print", "exit", "torch.Tensor().cuda.t", "torch.Tensor().cuda.t", "torch.Tensor", "torch.Tensor", "torch.mm", "torch.mm", "torch.eye", "kernel_gaussian.t", "kernel_gaussian.t", "MIh_pair.cpu"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.LSMI_PI"], ["", "def", "SMI_pair", "(", "X", ",", "Y", ",", "b", "=", "200", ",", "lam", "=", "0.0001", ")", ":", "\n", "    ", "\"\"\"SMI with Paired Data\"\"\"", "\n", "X", "=", "torch", ".", "Tensor", "(", "X", ")", ".", "cuda", "(", ")", "\n", "Y", "=", "torch", ".", "Tensor", "(", "Y", ")", ".", "cuda", "(", ")", "\n", "n1", ",", "n2", "=", "X", ".", "shape", "[", "1", "]", ",", "Y", ".", "shape", "[", "1", "]", "\n", "if", "n1", "!=", "n2", ":", "\n", "        ", "print", "(", "X", ".", "shape", ",", "Y", ".", "shape", ")", "\n", "print", "(", "'Paired SMI estimation: n1!=n2'", ")", "\n", "exit", "(", "-", "1", ")", "\n", "", "n", "=", "n1", "\n", "\n", "b", "=", "min", "(", "b", ",", "n", ")", "\n", "index1", "=", "torch", ".", "randperm", "(", "n1", ")", "\n", "index2", "=", "torch", ".", "randperm", "(", "n2", ")", "\n", "Xb", "=", "X", "[", ":", ",", "index1", "[", "0", ":", "b", "]", "]", "\n", "Yb", "=", "Y", "[", ":", ",", "index2", "[", "0", ":", "b", "]", "]", "\n", "\n", "PI", "=", "(", "torch", ".", "eye", "(", "n1", ")", "/", "n1", ")", ".", "cuda", "(", ")", "\n", "\n", "sigma1", "=", "compmedDist", "(", "X", ".", "t", "(", ")", ")", "\n", "sigma2", "=", "compmedDist", "(", "Y", ".", "t", "(", ")", ")", "\n", "Kx", "=", "kernel_gaussian", "(", "Xb", ",", "X", ",", "sigma1", ")", "\n", "Ky", "=", "kernel_gaussian", "(", "Yb", ",", "Y", ",", "sigma2", ")", "\n", "## Precompute H since it does not depend on PI or alpha", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kx", ",", "Kx", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Ky", ",", "Ky", ".", "t", "(", ")", ")", "/", "(", "n1", "*", "n2", ")", "# bxb", "\n", "\n", "del", "X", ";", "del", "Y", "\n", "\n", "alphah", ",", "MIh_pair", ",", "C", "=", "LSMI_PI", "(", "Kx", ",", "Ky", ",", "Hh", ",", "PI", ",", "lam", "=", "lam", ")", "\n", "\n", "return", "MIh_pair", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_pair_CV": [[492, 534], ["torch.Tensor().cuda", "torch.Tensor().cuda", "int", "torch.randperm", "min", "torch.randperm", "torch.randperm", "utils_gpu.compmedDist", "utils_gpu.compmedDist", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "utils_gpu.LSMI_PI", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "numpy.round", "torch.Tensor().cuda.t", "torch.Tensor().cuda.t", "torch.mm", "MIh_pair.cpu().data.numpy", "MIh_cv.cpu().data.numpy", "torch.Tensor", "torch.Tensor", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "alphah.t", "hh.view", "kernel_gaussian.t", "kernel_gaussian.t", "torch.eye", "kernel_gaussian.t", "kernel_gaussian.t", "torch.mm", "alphah.t", "MIh_pair.cpu", "MIh_cv.cpu"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.LSMI_PI", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian"], ["", "def", "SMI_pair_CV", "(", "Xp", ",", "Yp", ",", "b", "=", "200", ",", "lam", "=", "0.0001", ")", ":", "\n", "    ", "\"\"\" Paired SMI estimation with CV\"\"\"", "\n", "Xp", "=", "torch", ".", "Tensor", "(", "Xp", ")", ".", "cuda", "(", ")", "\n", "Yp", "=", "torch", ".", "Tensor", "(", "Yp", ")", ".", "cuda", "(", ")", "\n", "n", "=", "Xp", ".", "shape", "[", "1", "]", "\n", "\n", "n_cv", "=", "int", "(", "np", ".", "round", "(", "n", "/", "2", ")", ")", "\n", "index_cv", "=", "torch", ".", "randperm", "(", "n", ")", "\n", "Xp_cv_tr", "=", "Xp", "[", ":", ",", "index_cv", "[", "0", ":", "n_cv", "]", "]", "\n", "Yp_cv_tr", "=", "Yp", "[", ":", ",", "index_cv", "[", "0", ":", "n_cv", "]", "]", "\n", "Xp_cv_te", "=", "Xp", "[", ":", ",", "index_cv", "[", "n_cv", ":", "]", "]", "\n", "Yp_cv_te", "=", "Yp", "[", ":", ",", "index_cv", "[", "n_cv", ":", "]", "]", "\n", "\n", "b", "=", "min", "(", "b", ",", "n", ")", "\n", "index1", "=", "torch", ".", "randperm", "(", "n", ")", "\n", "index2", "=", "torch", ".", "randperm", "(", "n", ")", "\n", "Xb", "=", "Xp", "[", ":", ",", "index1", "[", "0", ":", "b", "]", "]", "\n", "Yb", "=", "Yp", "[", ":", ",", "index2", "[", "0", ":", "b", "]", "]", "\n", "\n", "sigma1", "=", "compmedDist", "(", "Xp", ".", "t", "(", ")", ")", "\n", "sigma2", "=", "compmedDist", "(", "Yp", ".", "t", "(", ")", ")", "\n", "Kx_tr", "=", "kernel_gaussian", "(", "Xb", ",", "Xp_cv_tr", ",", "sigma1", ")", "\n", "Ky_tr", "=", "kernel_gaussian", "(", "Yb", ",", "Yp_cv_tr", ",", "sigma2", ")", "\n", "## Precompute H since it does not depend on PI or alpha", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kx_tr", ",", "Kx_tr", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Ky_tr", ",", "Ky_tr", ".", "t", "(", ")", ")", "/", "(", "n_cv", "*", "n_cv", ")", "# bxb", "\n", "\n", "del", "Xp", ";", "del", "Yp", "\n", "\n", "PI", "=", "(", "torch", ".", "eye", "(", "n_cv", ")", "/", "n_cv", ")", ".", "cuda", "(", ")", "\n", "\n", "alphah", ",", "MIh_pair", ",", "C", "=", "LSMI_PI", "(", "Kx_tr", ",", "Ky_tr", ",", "Hh", ",", "PI", ",", "lam", "=", "lam", ")", "\n", "\n", "nte", "=", "Xp_cv_te", ".", "shape", "[", "1", "]", "\n", "Kx_te", "=", "kernel_gaussian", "(", "Xb", ",", "Xp_cv_te", ",", "sigma1", ")", "\n", "Ky_te", "=", "kernel_gaussian", "(", "Yb", ",", "Yp_cv_te", ",", "sigma2", ")", "\n", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kx_te", ",", "Kx_te", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Ky_te", ",", "Ky_te", ".", "t", "(", ")", ")", "/", "(", "nte", "*", "nte", ")", "\n", "hh", "=", "(", "Kx_te", "*", "Ky_te", ")", ".", "sum", "(", "1", ")", "/", "nte", "\n", "MIh_cv", "=", "0.5", "*", "torch", ".", "mm", "(", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "Hh", ")", ",", "alphah", ")", "-", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "hh", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "\n", "\n", "return", "MIh_pair", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "MIh_cv", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_pair_CV2": [[536, 576], ["torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.cat", "torch.cat", "min", "torch.randperm", "torch.randperm", "utils_gpu.compmedDist", "utils_gpu.compmedDist", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "utils_gpu.LSMI_PI", "utils_gpu.kernel_gaussian", "utils_gpu.kernel_gaussian", "torch.cat.t", "torch.cat.t", "torch.mm", "MIh_pair.cpu().data.numpy", "MIh_cv.cpu().data.numpy", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "alphah.t", "hh.view", "kernel_gaussian.t", "kernel_gaussian.t", "torch.eye", "kernel_gaussian.t", "kernel_gaussian.t", "torch.mm", "alphah.t", "MIh_pair.cpu", "MIh_cv.cpu"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.compmedDist", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.LSMI_PI", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.kernel_gaussian"], ["", "def", "SMI_pair_CV2", "(", "Xp_cv_tr", ",", "Yp_cv_tr", ",", "Xp_cv_te", ",", "Yp_cv_te", ",", "b", "=", "200", ",", "lam", "=", "0.0001", ")", ":", "\n", "    ", "\"\"\" Paired SMI estimation with CV\"\"\"", "\n", "Xp_cv_tr", "=", "torch", ".", "Tensor", "(", "Xp_cv_tr", ")", ".", "cuda", "(", ")", "\n", "Yp_cv_tr", "=", "torch", ".", "Tensor", "(", "Yp_cv_tr", ")", ".", "cuda", "(", ")", "\n", "Xp_cv_te", "=", "torch", ".", "Tensor", "(", "Xp_cv_te", ")", ".", "cuda", "(", ")", "\n", "Yp_cv_te", "=", "torch", ".", "Tensor", "(", "Yp_cv_te", ")", ".", "cuda", "(", ")", "\n", "n_cv", "=", "Xp_cv_tr", ".", "shape", "[", "1", "]", "# train num", "\n", "\n", "Xp", "=", "torch", ".", "cat", "(", "(", "Xp_cv_tr", ",", "Xp_cv_te", ")", ",", "dim", "=", "1", ")", "\n", "Yp", "=", "torch", ".", "cat", "(", "(", "Yp_cv_tr", ",", "Yp_cv_te", ")", ",", "dim", "=", "1", ")", "\n", "n", "=", "Xp", ".", "shape", "[", "1", "]", "\n", "\n", "b", "=", "min", "(", "b", ",", "n", ")", "\n", "index1", "=", "torch", ".", "randperm", "(", "n", ")", "\n", "index2", "=", "torch", ".", "randperm", "(", "n", ")", "\n", "Xb", "=", "Xp", "[", ":", ",", "index1", "[", "0", ":", "b", "]", "]", "\n", "Yb", "=", "Yp", "[", ":", ",", "index2", "[", "0", ":", "b", "]", "]", "\n", "\n", "sigma1", "=", "compmedDist", "(", "Xp", ".", "t", "(", ")", ")", "\n", "sigma2", "=", "compmedDist", "(", "Yp", ".", "t", "(", ")", ")", "\n", "Kx_tr", "=", "kernel_gaussian", "(", "Xb", ",", "Xp_cv_tr", ",", "sigma1", ")", "\n", "Ky_tr", "=", "kernel_gaussian", "(", "Yb", ",", "Yp_cv_tr", ",", "sigma2", ")", "\n", "## Precompute H since it does not depend on PI or alpha", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kx_tr", ",", "Kx_tr", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Ky_tr", ",", "Ky_tr", ".", "t", "(", ")", ")", "/", "(", "n_cv", "*", "n_cv", ")", "# bxb", "\n", "\n", "del", "Xp", ";", "del", "Yp", "\n", "\n", "PI", "=", "(", "torch", ".", "eye", "(", "n_cv", ")", "/", "n_cv", ")", ".", "cuda", "(", ")", "\n", "\n", "alphah", ",", "MIh_pair", ",", "C", "=", "LSMI_PI", "(", "Kx_tr", ",", "Ky_tr", ",", "Hh", ",", "PI", ",", "lam", "=", "lam", ")", "\n", "\n", "nte", "=", "Xp_cv_te", ".", "shape", "[", "1", "]", "\n", "Kx_te", "=", "kernel_gaussian", "(", "Xb", ",", "Xp_cv_te", ",", "sigma1", ")", "\n", "Ky_te", "=", "kernel_gaussian", "(", "Yb", ",", "Yp_cv_te", ",", "sigma2", ")", "\n", "\n", "Hh", "=", "torch", ".", "mm", "(", "Kx_te", ",", "Kx_te", ".", "t", "(", ")", ")", "*", "torch", ".", "mm", "(", "Ky_te", ",", "Ky_te", ".", "t", "(", ")", ")", "/", "(", "nte", "*", "nte", ")", "\n", "hh", "=", "(", "Kx_te", "*", "Ky_te", ")", ".", "sum", "(", "1", ")", "/", "nte", "\n", "MIh_cv", "=", "0.5", "*", "torch", ".", "mm", "(", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "Hh", ")", ",", "alphah", ")", "-", "torch", ".", "mm", "(", "alphah", ".", "t", "(", ")", ",", "hh", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "\n", "return", "MIh_pair", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "MIh_cv", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.sinkhorn_stab.sinkhorn_stabilized": [[4, 144], ["len", "len", "sinkhorn_stab.sinkhorn_stabilized.get_K"], "function", ["None"], ["def", "sinkhorn_stabilized", "(", "a", ",", "b", ",", "M", ",", "reg", ",", "numItermax", "=", "1000", ",", "tau", "=", "1e3", ",", "stopThr", "=", "1e-9", ",", "\n", "warmstart", "=", "None", ",", "verbose", "=", "False", ",", "print_period", "=", "20", ",", "\n", "log", "=", "False", ",", "cuda", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "\n", "    ", "if", "len", "(", "a", ")", "==", "0", ":", "\n", "        ", "a", "=", "torch", ".", "ones", "(", "(", "M", ".", "shape", "[", "0", "]", ",", ")", ")", "/", "M", ".", "shape", "[", "0", "]", "\n", "", "if", "len", "(", "b", ")", "==", "0", ":", "\n", "        ", "b", "=", "torch", ".", "ones", "(", "(", "M", ".", "shape", "[", "1", "]", ",", ")", ")", "/", "M", ".", "shape", "[", "1", "]", "\n", "\n", "# test if multiple target", "\n", "", "if", "len", "(", "b", ".", "shape", ")", ">", "1", ":", "\n", "        ", "nbb", "=", "b", ".", "shape", "[", "1", "]", "\n", "a", "=", "a", ".", "unsqueeze", "(", "1", ")", "\n", "", "else", ":", "\n", "        ", "nbb", "=", "0", "\n", "\n", "# init data", "\n", "", "na", "=", "len", "(", "a", ")", "\n", "nb", "=", "len", "(", "b", ")", "\n", "\n", "cpt", "=", "0", "\n", "if", "log", ":", "\n", "        ", "log", "=", "{", "'err'", ":", "[", "]", "}", "\n", "\n", "# we assume that no distances are null except those of the diagonal of distances", "\n", "", "if", "warmstart", "is", "None", ":", "\n", "        ", "alpha", ",", "beta", "=", "torch", ".", "zeros", "(", "na", ")", ",", "torch", ".", "zeros", "(", "nb", ")", "\n", "", "else", ":", "\n", "        ", "alpha", ",", "beta", "=", "warmstart", "\n", "\n", "", "if", "nbb", ":", "\n", "        ", "u", "=", "torch", ".", "ones", "(", "na", ",", "nbb", ")", "/", "na", "\n", "v", "=", "torch", ".", "ones", "(", "nb", ",", "nbb", ")", "/", "nb", "\n", "", "else", ":", "\n", "        ", "u", "=", "torch", ".", "ones", "(", "na", ")", "/", "na", "\n", "v", "=", "torch", ".", "ones", "(", "nb", ")", "/", "nb", "\n", "\n", "", "if", "cuda", ":", "\n", "        ", "u", ",", "v", "=", "u", ".", "cuda", "(", ")", ",", "v", ".", "cuda", "(", ")", "\n", "alpha", ",", "beta", "=", "alpha", ".", "cuda", "(", ")", ",", "beta", ".", "cuda", "(", ")", "\n", "\n", "", "def", "get_K", "(", "alpha", ",", "beta", ")", ":", "\n", "        ", "\"\"\"log space computation\"\"\"", "\n", "return", "torch", ".", "exp", "(", "-", "(", "M", "-", "alpha", ".", "reshape", "(", "na", ",", "1", ")", "-", "\n", "beta", ".", "reshape", "(", "1", ",", "nb", ")", ")", "/", "reg", ")", "\n", "\n", "", "def", "get_Gamma", "(", "alpha", ",", "beta", ",", "u", ",", "v", ")", ":", "\n", "        ", "\"\"\"log space gamma computation\"\"\"", "\n", "return", "torch", ".", "exp", "(", "-", "(", "M", "-", "alpha", ".", "reshape", "(", "na", ",", "1", ")", "-", "beta", ".", "reshape", "(", "1", ",", "nb", ")", ")", "/", "\n", "reg", "+", "torch", ".", "log", "(", "u", ".", "reshape", "(", "na", ",", "1", ")", ")", "+", "torch", ".", "log", "(", "v", ".", "reshape", "(", "1", ",", "nb", ")", ")", ")", "\n", "\n", "", "K", "=", "get_K", "(", "alpha", ",", "beta", ")", "\n", "transp", "=", "K", "\n", "loop", "=", "1", "\n", "cpt", "=", "0", "\n", "err", "=", "1", "\n", "\n", "while", "loop", ":", "\n", "\n", "        ", "uprev", "=", "u", "\n", "vprev", "=", "v", "\n", "\n", "# sinkhorn update", "\n", "v", "=", "b", "/", "(", "torch", ".", "mv", "(", "torch", ".", "t", "(", "K", ")", ",", "u", ")", "+", "1e-16", ")", "\n", "u", "=", "a", "/", "(", "torch", ".", "mv", "(", "K", ",", "v", ")", "+", "1e-16", ")", "\n", "\n", "# remove numerical problems and store them in K", "\n", "if", "torch", ".", "abs", "(", "u", ")", ".", "max", "(", ")", ">", "tau", "or", "torch", ".", "abs", "(", "v", ")", ".", "max", "(", ")", ">", "tau", ":", "\n", "            ", "if", "nbb", ":", "\n", "                ", "alpha", ",", "beta", "=", "alpha", "+", "reg", "*", "torch", ".", "max", "(", "torch", ".", "log", "(", "u", ")", ",", "1", ")", ",", "beta", "+", "reg", "*", "torch", ".", "max", "(", "torch", ".", "log", "(", "v", ")", ")", "\n", "", "else", ":", "\n", "                ", "alpha", ",", "beta", "=", "alpha", "+", "reg", "*", "torch", ".", "log", "(", "u", ")", ",", "beta", "+", "reg", "*", "torch", ".", "log", "(", "v", ")", "\n", "if", "nbb", ":", "\n", "                    ", "u", ",", "v", "=", "torch", ".", "ones", "(", "(", "na", ",", "nbb", ")", ")", "/", "na", ",", "torch", ".", "ones", "(", "(", "nb", ",", "nbb", ")", ")", "/", "nb", "\n", "", "else", ":", "\n", "                    ", "u", ",", "v", "=", "torch", ".", "ones", "(", "na", ")", "/", "na", ",", "torch", ".", "ones", "(", "nb", ")", "/", "nb", "\n", "", "if", "cuda", ":", "\n", "                    ", "u", ",", "v", "=", "u", ".", "cuda", "(", ")", ",", "v", ".", "cuda", "(", ")", "\n", "", "", "K", "=", "get_K", "(", "alpha", ",", "beta", ")", "\n", "\n", "", "if", "cpt", "%", "print_period", "==", "0", ":", "\n", "# we can speed up the process by checking for the error only all", "\n", "# the 10th iterations", "\n", "            ", "if", "nbb", ":", "\n", "                ", "err", "=", "torch", ".", "sum", "(", "(", "u", "-", "uprev", ")", "**", "2", ")", "/", "torch", ".", "sum", "(", "(", "u", ")", "**", "2", ")", "+", "torch", ".", "sum", "(", "(", "v", "-", "vprev", ")", "**", "2", ")", "/", "torch", ".", "sum", "(", "(", "v", ")", "**", "2", ")", "\n", "", "else", ":", "\n", "                ", "transp", "=", "get_Gamma", "(", "alpha", ",", "beta", ",", "u", ",", "v", ")", "\n", "err", "=", "torch", ".", "norm", "(", "(", "torch", ".", "sum", "(", "transp", ",", "dim", "=", "0", ")", "-", "b", ")", ")", "**", "2", "\n", "", "if", "log", ":", "\n", "                ", "log", "[", "'err'", "]", ".", "append", "(", "err", ")", "\n", "\n", "", "if", "verbose", ":", "\n", "                ", "if", "cpt", "%", "(", "print_period", "*", "20", ")", "==", "0", ":", "\n", "                    ", "print", "(", "\n", "'{:5s}|{:12s}'", ".", "format", "(", "'It.'", ",", "'Err'", ")", "+", "'\\n'", "+", "'-'", "*", "19", ")", "\n", "", "print", "(", "'{:5d}|{:8e}|'", ".", "format", "(", "cpt", ",", "err", ")", ")", "\n", "\n", "", "", "if", "err", "<=", "stopThr", ":", "\n", "            ", "loop", "=", "False", "\n", "\n", "", "if", "cpt", ">=", "numItermax", ":", "\n", "            ", "loop", "=", "False", "\n", "\n", "", "if", "torch", ".", "sum", "(", "(", "u", "!=", "u", ")", "==", "1", ")", ">", "0", "or", "torch", ".", "sum", "(", "(", "v", "!=", "v", ")", "==", "1", ")", ">", "0", ":", "\n", "# we have reached the machine precision", "\n", "# come back to previous solution and quit loop", "\n", "#print('Warning: numerical errors at iteration', cpt)", "\n", "            ", "u", "=", "uprev", "\n", "v", "=", "vprev", "\n", "break", "\n", "\n", "", "cpt", "=", "cpt", "+", "1", "\n", "\n", "# print('err=',err,' cpt=',cpt)", "\n", "", "if", "log", ":", "\n", "        ", "log", "[", "'logu'", "]", "=", "alpha", "/", "reg", "+", "torch", ".", "log", "(", "u", ")", "\n", "log", "[", "'logv'", "]", "=", "beta", "/", "reg", "+", "torch", ".", "log", "(", "v", ")", "\n", "log", "[", "'alpha'", "]", "=", "alpha", "+", "reg", "*", "torch", ".", "log", "(", "u", ")", "\n", "log", "[", "'beta'", "]", "=", "beta", "+", "reg", "*", "torch", ".", "log", "(", "v", ")", "\n", "log", "[", "'warmstart'", "]", "=", "(", "log", "[", "'alpha'", "]", ",", "log", "[", "'beta'", "]", ")", "\n", "if", "nbb", ":", "\n", "            ", "res", "=", "torch", ".", "zeros", "(", "(", "nbb", ")", ")", "\n", "for", "i", "in", "range", "(", "nbb", ")", ":", "\n", "                ", "res", "[", "i", "]", "=", "torch", ".", "sum", "(", "get_Gamma", "(", "alpha", ",", "beta", ",", "u", "[", ":", ",", "i", "]", ",", "v", "[", ":", ",", "i", "]", ")", "\n", "*", "M", ")", "\n", "", "return", "res", ",", "log", "\n", "\n", "", "else", ":", "\n", "            ", "return", "get_Gamma", "(", "alpha", ",", "beta", ",", "u", ",", "v", ")", ",", "log", "\n", "", "", "else", ":", "\n", "        ", "if", "nbb", ":", "\n", "            ", "res", "=", "torch", ".", "zeros", "(", "(", "nbb", ")", ")", "\n", "for", "i", "in", "range", "(", "nbb", ")", ":", "\n", "                ", "res", "[", "i", "]", "=", "torch", ".", "sum", "(", "get_Gamma", "(", "alpha", ",", "beta", ",", "u", "[", ":", ",", "i", "]", ",", "v", "[", ":", ",", "i", "]", ")", "\n", "*", "M", ")", "\n", "", "return", "res", "\n", "", "else", ":", "\n", "            ", "return", "get_Gamma", "(", "alpha", ",", "beta", ",", "u", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.lab": [[4, 19], ["numpy.array", "utils_im.xyz", "utils_im.f", "utils_im.f", "utils_im.f"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.xyz", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.f", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.f", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.f"], ["def", "lab", "(", "Image", ")", ":", "\n", "# Convert to CIE L*a*b* (CIELAB)", "\n", "    ", "WhitePoint", "=", "numpy", ".", "array", "(", "[", "0.950456", ",", "1", ",", "1.088754", "]", ")", "\n", "Image", "=", "xyz", "(", "Image", ")", "# Convert to XYZ", "\n", "# Convert XYZ to CIE L*a*b*", "\n", "X", "=", "Image", "[", ":", ",", ":", ",", "0", "]", "/", "WhitePoint", "[", "0", "]", "\n", "Y", "=", "Image", "[", ":", ",", ":", ",", "1", "]", "/", "WhitePoint", "[", "1", "]", "\n", "Z", "=", "Image", "[", ":", ",", ":", ",", "2", "]", "/", "WhitePoint", "[", "2", "]", "\n", "fX", "=", "f", "(", "X", ")", "\n", "fY", "=", "f", "(", "Y", ")", "\n", "fZ", "=", "f", "(", "Z", ")", "\n", "Image", "[", ":", ",", ":", ",", "0", "]", "=", "116", "*", "fY", "-", "16", "# L*", "\n", "Image", "[", ":", ",", ":", ",", "1", "]", "=", "500", "*", "(", "fX", "-", "fY", ")", "# a*", "\n", "Image", "[", ":", ",", ":", ",", "2", "]", "=", "200", "*", "(", "fY", "-", "fZ", ")", "# b*", "\n", "return", "Image", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.xyz": [[20, 33], ["numpy.array", "utils_im.invgammacorrection", "utils_im.invgammacorrection", "utils_im.invgammacorrection", "numpy.linalg.inv", "numpy.array"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.invgammacorrection", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.invgammacorrection", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.invgammacorrection"], ["", "def", "xyz", "(", "Image", ")", ":", "\n", "# Convert to CIE XYZ ", "\n", "    ", "WhitePoint", "=", "numpy", ".", "array", "(", "[", "0.950456", ",", "1", ",", "1.088754", "]", ")", "\n", "# Undo gamma correction", "\n", "R", "=", "invgammacorrection", "(", "Image", "[", ":", ",", ":", ",", "0", "]", ")", "\n", "G", "=", "invgammacorrection", "(", "Image", "[", ":", ",", ":", ",", "1", "]", ")", "\n", "B", "=", "invgammacorrection", "(", "Image", "[", ":", ",", ":", ",", "2", "]", ")", "\n", "# Convert RGB to XYZ", "\n", "T", "=", "numpy", ".", "linalg", ".", "inv", "(", "numpy", ".", "array", "(", "[", "[", "3.240479", ",", "-", "1.53715", ",", "-", "0.498535", "]", ",", "[", "-", "0.969256", ",", "1.875992", ",", "0.041556", "]", ",", "[", "0.055648", ",", "-", "0.204043", ",", "1.057311", "]", "]", ")", ")", "\n", "Image", "[", ":", ",", ":", ",", "0", "]", "=", "T", "[", "0", ",", "0", "]", "*", "R", "+", "T", "[", "0", ",", "1", "]", "*", "G", "+", "T", "[", "0", ",", "2", "]", "*", "B", "# X ", "\n", "Image", "[", ":", ",", ":", ",", "1", "]", "=", "T", "[", "1", ",", "0", "]", "*", "R", "+", "T", "[", "1", ",", "1", "]", "*", "G", "+", "T", "[", "1", ",", "2", "]", "*", "B", ";", "# Y", "\n", "Image", "[", ":", ",", ":", ",", "2", "]", "=", "T", "[", "2", ",", "0", "]", "*", "R", "+", "T", "[", "2", ",", "1", "]", "*", "G", "+", "T", "[", "2", ",", "2", "]", "*", "B", ";", "# Z", "\n", "return", "Image", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.invgammacorrection": [[34, 39], ["numpy.real"], "function", ["None"], ["", "def", "invgammacorrection", "(", "Rp", ")", ":", "\n", "    ", "R", "=", "numpy", ".", "real", "(", "(", "(", "Rp", "+", "0.099", ")", "/", "1.099", ")", "**", "(", "1", "/", "0.45", ")", ")", "\n", "i", "=", "R", "<", "0.018", "\n", "R", "[", "i", "]", "=", "Rp", "[", "i", "]", "/", "4.5138", "\n", "return", "R", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.f": [[40, 45], ["numpy.real"], "function", ["None"], ["", "def", "f", "(", "Y", ")", ":", "\n", "    ", "fY", "=", "numpy", ".", "real", "(", "Y", "**", "(", "1.0", "/", "3", ")", ")", "\n", "i", "=", "(", "Y", "<", "0.008856", ")", "\n", "fY", "[", "i", "]", "=", "Y", "[", "i", "]", "*", "(", "841.0", "/", "108", ")", "+", "(", "4.0", "/", "29", ")", "\n", "return", "fY", "\n", "", ""]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_layout_ECML-PKDD.set_seed": [[20, 24], ["random.seed", "numpy.random.seed", "torch.random.manual_seed"], "function", ["None"], ["", "def", "set_seed", "(", "seed", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "random", ".", "manual_seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_layout_ECML-PKDD.Flickr": [[27, 153], ["main_layout_ECML-PKDD.set_seed", "numpy.array", "print", "range", "numpy.array", "print", "print", "SMI_sinkhorn_semi", "print", "PI.argmax", "range", "range", "range", "range", "PIL.Image.fromarray", "Image.open.save", "numpy.array", "numpy.array", "PIL.Image.open", "numpy.asarray", "numpy.fix().astype", "numpy.fix().astype", "np.array.append", "utils_im.lab", "pimgdata.append", "numpy.array", "range", "numpy.array", "range", "range", "numpy.array", "numpy.ones", "numpy.reshape", "numpy.reshape", "patching.astype", "np.asarray.flatten", "numpy.double", "utils_im.lab.flatten", "PIL.Image.open", "numpy.asarray", "numpy.fix().astype", "numpy.fix().astype", "np.array.append", "utils_im.lab", "imgdata.append", "range", "range", "str", "numpy.fix", "numpy.fix", "np.asarray.flatten", "numpy.double", "utils_im.lab.flatten", "griddata.append", "str", "numpy.fix", "numpy.fix", "griddata.append", "griddata.append"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_layout_ECML-PKDD.set_seed", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.lab", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.lab"], ["", "def", "Flickr", "(", "seed", "=", "2021", ",", "frame", "=", "'rectangle'", ")", ":", "\n", "    ", "seed", "=", "2021", "\n", "set_seed", "(", "seed", ")", "\n", "\n", "b", "=", "200", "\n", "beta", "=", "0.2", "\n", "epsilon", "=", "0.5", "\n", "lam", "=", "0.0001", "\n", "n_iter", "=", "10", "\n", "\n", "ino", "=", "20", "\n", "jno", "=", "20", "\n", "psize", "=", "40", "\n", "iname", "=", "'images/img'", "\n", "\n", "## ---- paired data ---- #", "\n", "# blue:295,319,240,15, orange:31,107,168,169, green:16,20,78,247, black:33,49,99,131 ", "\n", "\n", "## ---- << Rectangle>> ---- ##", "\n", "if", "frame", "==", "'rectangle'", ":", "\n", "        ", "save_name", "=", "'layout/flickr_16x16_sorted.jpg'", "\n", "pimlist", "=", "[", "295", ",", "31", ",", "16", ",", "33", "]", "\n", "pgrid", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", "]", ",", "[", "1", ",", "jno", "]", ",", "[", "ino", ",", "1", "]", ",", "[", "ino", ",", "jno", "]", "]", ")", "\n", "\n", "## ---- << Triangle >> ---- ##", "\n", "", "if", "frame", "==", "\"triangle\"", ":", "\n", "        ", "save_name", "=", "'layout/flickr_triangle_sorted.jpg'", "\n", "pimlist", "=", "[", "16", ",", "31", ",", "33", "]", "\n", "pgrid", "=", "np", ".", "array", "(", "[", "[", "1", ",", "10", "]", ",", "[", "ino", ",", "1", "]", ",", "[", "ino", ",", "jno", "]", "]", ")", "\n", "\n", "\n", "", "pgrid", "=", "pgrid", ".", "T", "# 2x4", "\n", "\n", "pimgdata", "=", "[", "]", "\n", "pdata", "=", "[", "]", "\n", "for", "cnt", "in", "pimlist", ":", "\n", "        ", "fname", "=", "iname", "+", "str", "(", "cnt", ")", "+", "'.jpg'", "\n", "im", "=", "Image", ".", "open", "(", "fname", ")", "\n", "aim", "=", "np", ".", "asarray", "(", "im", ")", "\n", "[", "M", ",", "N", ",", "L", "]", "=", "aim", ".", "shape", "\n", "mno", "=", "np", ".", "fix", "(", "M", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "nno", "=", "np", ".", "fix", "(", "N", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "aim", "=", "aim", "[", "0", ":", "psize", "*", "mno", ":", "mno", ",", "0", ":", "psize", "*", "nno", ":", "nno", ",", ":", "]", "\n", "pdata", ".", "append", "(", "aim", ".", "flatten", "(", ")", ")", "\n", "daim", "=", "np", ".", "double", "(", "aim", ")", "/", "255.0", "\n", "# convert from RGB to Lab", "\n", "daimlab", "=", "lab", "(", "daim", ")", "\n", "pimgdata", ".", "append", "(", "daimlab", ".", "flatten", "(", ")", ")", "\n", "", "pdata", "=", "np", ".", "array", "(", "pdata", ")", "\n", "pimgdata", "=", "np", ".", "array", "(", "pimgdata", ")", ".", "T", "\n", "print", "(", "pdata", ".", "shape", ",", "pimgdata", ".", "shape", ",", "pgrid", ".", "shape", ")", "\n", "\n", "\n", "## ---- unpaired data ---- ##", "\n", "imgdata", "=", "[", "]", "\n", "data", "=", "[", "]", "\n", "counter", "=", "0", "\n", "for", "i", "in", "range", "(", "16", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "20", ")", ":", "\n", "            ", "counter", "=", "counter", "+", "1", "\n", "if", "counter", "in", "pimlist", ":", "\n", "                ", "continue", "\n", "", "fname", "=", "iname", "+", "str", "(", "counter", ")", "+", "'.jpg'", "\n", "im", "=", "Image", ".", "open", "(", "fname", ")", "\n", "aim", "=", "np", ".", "asarray", "(", "im", ")", "\n", "[", "M", ",", "N", ",", "L", "]", "=", "aim", ".", "shape", "\n", "mno", "=", "np", ".", "fix", "(", "M", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "nno", "=", "np", ".", "fix", "(", "N", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "aim", "=", "aim", "[", "0", ":", "psize", "*", "mno", ":", "mno", ",", "0", ":", "psize", "*", "nno", ":", "nno", ",", ":", "]", "\n", "data", ".", "append", "(", "aim", ".", "flatten", "(", ")", ")", "\n", "daim", "=", "np", ".", "double", "(", "aim", ")", "/", "255.0", "\n", "# convert from RGB to Lab", "\n", "daimlab", "=", "lab", "(", "daim", ")", "\n", "imgdata", ".", "append", "(", "daimlab", ".", "flatten", "(", ")", ")", "\n", "\n", "", "", "data", "=", "np", ".", "array", "(", "data", ")", "\n", "imgdata", "=", "np", ".", "array", "(", "imgdata", ")", ".", "T", "\n", "print", "(", "data", ".", "shape", ",", "imgdata", ".", "shape", ")", "\n", "\n", "\n", "griddata", "=", "[", "]", "\n", "## ---- << rectangle grid >> ---- ##", "\n", "if", "frame", "==", "\"rectangle\"", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "ino", "+", "1", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "1", ",", "jno", "+", "1", ")", ":", "\n", "                ", "if", "i", "in", "pgrid", "[", "0", ",", ":", "]", "and", "j", "in", "pgrid", "[", "1", ",", ":", "]", ":", "# exclude paired data", "\n", "                    ", "continue", "\n", "", "griddata", ".", "append", "(", "[", "i", ",", "j", "]", ")", "\n", "\n", "## ---- << triangle grid >> ---- ##  ", "\n", "", "", "", "if", "frame", "==", "\"triangle\"", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "ino", "+", "1", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "1", ",", "jno", "+", "1", ")", ":", "\n", "                ", "if", "j", "<=", "jno", "/", "2", "and", "j", ">", "-", "0.5", "*", "i", "+", "jno", "/", "2", ":", "\n", "                    ", "griddata", ".", "append", "(", "[", "i", ",", "j", "]", ")", "\n", "", "if", "j", ">", "jno", "/", "2", "and", "(", "j", "-", "jno", "/", "2", ")", "<=", "0.5", "*", "i", ":", "\n", "                    ", "griddata", ".", "append", "(", "[", "i", ",", "j", "]", ")", "\n", "", "", "", "", "griddata", "=", "np", ".", "array", "(", "griddata", ")", ".", "T", "\n", "print", "(", "griddata", ".", "shape", ")", "\n", "\n", "\n", "PI", ",", "MIs", ",", "MI_pair", "=", "SMI_sinkhorn_semi", "(", "pimgdata", ",", "pgrid", ",", "imgdata", ",", "griddata", ",", "n_iter", ",", "b", ",", "beta", ",", "epsilon", ",", "lam", ")", "\n", "print", "(", "MIs", ")", "\n", "\n", "i_sorting", "=", "PI", ".", "argmax", "(", "axis", "=", "0", ")", "\n", "imgdata_sorted", "=", "data", "[", "i_sorting", ",", "]", "\n", "irange", "=", "range", "(", "0", ",", "psize", "*", "ino", ",", "psize", ")", "\n", "jrange", "=", "range", "(", "0", ",", "psize", "*", "jno", ",", "psize", ")", "\n", "\n", "patching", "=", "np", ".", "ones", "(", "(", "ino", "*", "psize", ",", "jno", "*", "psize", ",", "3", ")", ")", "*", "255", "\n", "for", "i", "in", "range", "(", "pgrid", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "sx", "=", "(", "pgrid", "[", "0", ",", "i", "]", "-", "1", ")", "*", "psize", "\n", "tx", "=", "pgrid", "[", "0", ",", "i", "]", "*", "psize", "\n", "sy", "=", "(", "pgrid", "[", "1", ",", "i", "]", "-", "1", ")", "*", "psize", "\n", "ty", "=", "pgrid", "[", "1", ",", "i", "]", "*", "psize", "\n", "patching", "[", "sx", ":", "tx", ",", "sy", ":", "ty", ",", ":", "]", "=", "np", ".", "reshape", "(", "pdata", "[", "i", ",", "]", ",", "[", "psize", ",", "psize", ",", "3", "]", ")", ";", "\n", "\n", "", "for", "i", "in", "range", "(", "griddata", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "sx", "=", "(", "griddata", "[", "0", ",", "i", "]", "-", "1", ")", "*", "psize", "\n", "tx", "=", "griddata", "[", "0", ",", "i", "]", "*", "psize", "\n", "sy", "=", "(", "griddata", "[", "1", ",", "i", "]", "-", "1", ")", "*", "psize", "\n", "ty", "=", "griddata", "[", "1", ",", "i", "]", "*", "psize", "\n", "patching", "[", "sx", ":", "tx", ",", "sy", ":", "ty", ",", ":", "]", "=", "np", ".", "reshape", "(", "imgdata_sorted", "[", "i", ",", "]", ",", "[", "psize", ",", "psize", ",", "3", "]", ")", ";", "\n", "\n", "", "im", "=", "Image", ".", "fromarray", "(", "patching", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "im", ".", "save", "(", "save_name", ",", "'JPEG'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_layout_ECML-PKDD.ECML": [[156, 271], ["PIL.Image.open", "random.shuffle", "main_layout_ECML-PKDD.set_seed", "numpy.array", "numpy.array", "print", "range", "numpy.array", "print", "numpy.where", "print", "range", "print", "SMI_sinkhorn_semi", "PI.argmax", "range", "range", "print", "range", "PIL.Image.fromarray", "Image.open.save", "print", "PIL.Image.open", "numpy.asarray", "numpy.fix().astype", "numpy.fix().astype", "np.array.append", "pimgdata.append", "numpy.array", "PIL.Image.open", "numpy.asarray", "numpy.fix().astype", "numpy.fix().astype", "np.array.append", "utils_im.lab", "imgdata.append", "numpy.array", "len", "len", "len", "griddata.append", "numpy.array", "numpy.ones", "numpy.reshape", "patching.astype", "np.asarray.flatten", "numpy.double", "utils_im.lab.flatten", "np.asarray.flatten", "numpy.double", "utils_im.lab.flatten", "numpy.array", "str", "numpy.fix", "numpy.fix", "str", "numpy.fix", "numpy.fix"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_layout_ECML-PKDD.set_seed", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_im.lab"], ["", "def", "ECML", "(", "seed", ")", ":", "\n", "## Algorithm Parameters", "\n", "#params  = [300, 0.2, 0.15, 0.005, 20] # seed=2021", "\n", "#params  = [250, 0.25, 0.1, 0.005, 15]  # seed=0,20,2021", "\n", "#params  = [300, 0.18, 0.15, 0.007, 20]  # seed=10,200,2021", "\n", "    ", "params", "=", "[", "250", ",", "0.4", ",", "0.1", ",", "0.002", ",", "25", "]", "# seed=0,20,2021", "\n", "seed", "=", "2021", "\n", "b", "=", "params", "[", "0", "]", "\n", "beta", "=", "params", "[", "1", "]", "\n", "epsilon", "=", "params", "[", "2", "]", "\n", "lam", "=", "params", "[", "3", "]", "\n", "n_iter", "=", "params", "[", "4", "]", "\n", "\n", "\n", "## --- Template and Predefined Positions ---- ##", "\n", "im_template", "=", "Image", ".", "open", "(", "'layout/ECML-PKDD_square.jpg'", ")", "\n", "save_name", "=", "'layout/flickr_ECML-PKDD_square.jpg'", "\n", "\n", "color_im_dict", "=", "{", "295", ":", "'blue'", ",", "319", ":", "'blue'", ",", "240", ":", "'blue'", ",", "15", ":", "'blue'", ",", "\n", "31", ":", "'orange'", ",", "107", ":", "'orange'", ",", "168", ":", "'orange'", ",", "169", ":", "'orange'", ",", "\n", "16", ":", "'green'", ",", "20", ":", "'green'", ",", "78", ":", "'green'", ",", "247", ":", "'green'", ",", "\n", "33", ":", "'black'", ",", "49", ":", "'black'", ",", "99", ":", "'black'", ",", "131", ":", "'black'", ",", "\n", "175", ":", "'white'", ",", "76", ":", "'white'", ",", "27", ":", "'red'", ",", "97", ":", "'red'", ",", "284", ":", "'purple'", ",", "40", ":", "'grey'", "}", "\n", "## ---- Squared ECML-PKDD configuration ---- ##", "\n", "#pimlist = [31,27,284,295,175,16,40,33]", "\n", "pimlist", "=", "[", "76", ",", "295", ",", "16", ",", "31", ",", "40", ",", "284", ",", "27", ",", "33", "]", "\n", "random", ".", "shuffle", "(", "pimlist", ")", "\n", "set_seed", "(", "seed", ")", "\n", "for", "im", "in", "pimlist", ":", "\n", "        ", "print", "(", "color_im_dict", "[", "im", "]", ")", "\n", "", "pgrid", "=", "np", ".", "array", "(", "[", "[", "7", ",", "3", "]", ",", "[", "7", ",", "16", "]", ",", "[", "7", ",", "30", "]", ",", "[", "7", ",", "45", "]", ",", "[", "23", ",", "4", "]", ",", "[", "23", ",", "15", "]", ",", "[", "23", ",", "28", "]", ",", "[", "23", ",", "42", "]", "]", ")", "\n", "\n", "pgrid", "=", "pgrid", ".", "T", "# 2x4", "\n", "\n", "ino", ",", "jno", "=", "im_template", ".", "size", "## 13x40 or 13x80", "\n", "psize", "=", "40", "\n", "iname", "=", "'images/img'", "\n", "pimgdata", "=", "[", "]", "\n", "pdata", "=", "[", "]", "\n", "for", "cnt", "in", "pimlist", ":", "\n", "        ", "fname", "=", "iname", "+", "str", "(", "cnt", ")", "+", "'.jpg'", "\n", "im", "=", "Image", ".", "open", "(", "fname", ")", "\n", "aim", "=", "np", ".", "asarray", "(", "im", ")", "\n", "[", "M", ",", "N", ",", "L", "]", "=", "aim", ".", "shape", "\n", "mno", "=", "np", ".", "fix", "(", "M", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "nno", "=", "np", ".", "fix", "(", "N", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "aim", "=", "aim", "[", "0", ":", "psize", "*", "mno", ":", "mno", ",", "0", ":", "psize", "*", "nno", ":", "nno", ",", ":", "]", "\n", "pdata", ".", "append", "(", "aim", ".", "flatten", "(", ")", ")", "\n", "daim", "=", "np", ".", "double", "(", "aim", ")", "/", "255.0", "\n", "# convert from RGB to Lab", "\n", "#daimlab = lab(daim)", "\n", "daimlab", "=", "daim", "\n", "pimgdata", ".", "append", "(", "daimlab", ".", "flatten", "(", ")", ")", "\n", "", "pdata", "=", "np", ".", "array", "(", "pdata", ")", "\n", "pimgdata", "=", "np", ".", "array", "(", "pimgdata", ")", ".", "T", "\n", "print", "(", "pdata", ".", "shape", ",", "pimgdata", ".", "shape", ",", "pgrid", ".", "shape", ")", "\n", "\n", "\n", "## ---- unpaired data ---- ##", "\n", "imgdata", "=", "[", "]", "\n", "data", "=", "[", "]", "\n", "counter", "=", "0", "\n", "for", "i", "in", "range", "(", "320", ")", ":", "\n", "            ", "counter", "=", "counter", "+", "1", "\n", "if", "counter", "in", "pimlist", ":", "\n", "                ", "continue", "\n", "", "fname", "=", "iname", "+", "str", "(", "counter", ")", "+", "'.jpg'", "\n", "im", "=", "Image", ".", "open", "(", "fname", ")", "\n", "aim", "=", "np", ".", "asarray", "(", "im", ")", "\n", "[", "M", ",", "N", ",", "L", "]", "=", "aim", ".", "shape", "\n", "mno", "=", "np", ".", "fix", "(", "M", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "nno", "=", "np", ".", "fix", "(", "N", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "aim", "=", "aim", "[", "0", ":", "psize", "*", "mno", ":", "mno", ",", "0", ":", "psize", "*", "nno", ":", "nno", ",", ":", "]", "\n", "data", ".", "append", "(", "aim", ".", "flatten", "(", ")", ")", "\n", "daim", "=", "np", ".", "double", "(", "aim", ")", "/", "255.0", "\n", "# convert from RGB to Lab", "\n", "daimlab", "=", "lab", "(", "daim", ")", "\n", "imgdata", ".", "append", "(", "daimlab", ".", "flatten", "(", ")", ")", "\n", "\n", "", "data", "=", "np", ".", "array", "(", "data", ")", "\n", "imgdata", "=", "np", ".", "array", "(", "imgdata", ")", ".", "T", "\n", "print", "(", "data", ".", "shape", ",", "imgdata", ".", "shape", ")", "\n", "\n", "\n", "#### grid data ####", "\n", "pos", "=", "np", ".", "where", "(", "np", ".", "array", "(", "im_template", ")", "<", "100", ")", "\n", "print", "(", "'num postions:'", ",", "len", "(", "pos", "[", "0", "]", ")", ",", "len", "(", "pos", "[", "1", "]", ")", ")", "\n", "griddata", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pos", "[", "0", "]", ")", ")", ":", "\n", "            ", "griddata", ".", "append", "(", "[", "pos", "[", "0", "]", "[", "i", "]", ",", "pos", "[", "1", "]", "[", "i", "]", "]", ")", "\n", "", "griddata", "=", "np", ".", "array", "(", "griddata", ")", ".", "T", "\n", "print", "(", "griddata", ".", "shape", ")", "\n", "\n", "# SMI_sinkhorn run", "\n", "PI", ",", "MIs", ",", "MI_pair", "=", "SMI_sinkhorn_semi", "(", "pimgdata", ",", "pgrid", ",", "imgdata", ",", "griddata", ",", "n_iter", ",", "b", ",", "beta", ",", "epsilon", ",", "lam", ")", "\n", "#print(MIs)", "\n", "\n", "i_sorting", "=", "PI", ".", "argmax", "(", "axis", "=", "0", ")", "\n", "#print('unique:',len(np.unique(i_sorting)))", "\n", "imgdata_sorted", "=", "data", "[", "i_sorting", ",", "]", "\n", "irange", "=", "range", "(", "0", ",", "psize", "*", "ino", ",", "psize", ")", "\n", "jrange", "=", "range", "(", "0", ",", "psize", "*", "jno", ",", "psize", ")", "\n", "\n", "patching", "=", "np", ".", "ones", "(", "(", "jno", "*", "psize", ",", "ino", "*", "psize", ",", "3", ")", ")", "*", "255", "\n", "print", "(", "ino", ",", "jno", ")", "\n", "\n", "for", "i", "in", "range", "(", "griddata", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "sx", "=", "(", "griddata", "[", "0", ",", "i", "]", ")", "*", "psize", "\n", "tx", "=", "(", "griddata", "[", "0", ",", "i", "]", "+", "1", ")", "*", "psize", "\n", "sy", "=", "(", "griddata", "[", "1", ",", "i", "]", ")", "*", "psize", "\n", "ty", "=", "(", "griddata", "[", "1", ",", "i", "]", "+", "1", ")", "*", "psize", "\n", "patching", "[", "sx", ":", "tx", ",", "sy", ":", "ty", ",", ":", "]", "=", "np", ".", "reshape", "(", "imgdata_sorted", "[", "i", ",", "]", ",", "[", "psize", ",", "psize", ",", "3", "]", ")", ";", "\n", "\n", "", "im", "=", "Image", ".", "fromarray", "(", "patching", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "im", ".", "save", "(", "save_name", ",", "'JPEG'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_layout_ECML-PKDD.ECML_CIFAR": [[274, 384], ["PIL.Image.open", "numpy.load", "numpy.load", "main_layout_ECML-PKDD.set_seed", "numpy.array", "numpy.array", "print", "numpy.random.permutation", "numpy.array", "print", "numpy.where", "print", "range", "print", "SMI_sinkhorn_semi", "print", "PI.argmax", "range", "range", "range", "PIL.Image.fromarray", "Image.fromarray.save", "print", "numpy.fix().astype", "numpy.fix().astype", "np.array.append", "pimgdata.append", "numpy.array", "numpy.fix().astype", "numpy.fix().astype", "np.array.append", "imgdata.append", "numpy.array", "len", "len", "len", "griddata.append", "numpy.array", "numpy.ones", "numpy.reshape", "patching.astype", "aim.flatten", "aim.flatten", "feats[].flatten", "numpy.array", "numpy.fix", "numpy.fix", "numpy.fix", "numpy.fix"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_layout_ECML-PKDD.set_seed", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi"], ["", "def", "ECML_CIFAR", "(", "seed", ")", ":", "\n", "\n", "## Algorithm Parameters", "\n", "#params  = [500, 0.3, 0.15, 0.001, 25] # seed=0,20,2021", "\n", "#params  = [400, 0.25, 0.1, 0.0016, 25]  # seed=0,20,2021", "\n", "    ", "params", "=", "[", "400", ",", "0.18", ",", "0.15", ",", "0.00008", ",", "20", "]", "# seed=0,20,2021", "\n", "seed", "=", "688", "\n", "b", "=", "params", "[", "0", "]", "\n", "beta", "=", "params", "[", "1", "]", "\n", "epsilon", "=", "params", "[", "2", "]", "\n", "lam", "=", "params", "[", "3", "]", "\n", "n_iter", "=", "params", "[", "4", "]", "\n", "\n", "\n", "## --- Template and Predefined Positions ---- ##", "\n", "im_template", "=", "Image", ".", "open", "(", "'layout/ECML-PKDD_square.jpg'", ")", "\n", "save_name", "=", "'layout/cifar_ECML2021_square.jpg'", "\n", "\n", "# 10000x32x32x3", "\n", "cifar_images", "=", "np", ".", "load", "(", "'pytorch_resnet_cifar10/cifar10_img.npy'", ")", "\n", "# 10000x64,10000x1", "\n", "data", "=", "np", ".", "load", "(", "'pytorch_resnet_cifar10/resnet20_feat_cifar_test.npz'", ")", "\n", "feats", "=", "data", "[", "'feats'", "]", "\n", "\n", "# ---- paired data ---- #", "\n", "cifar_dict", "=", "{", "98", ":", "'airplane'", ",", "235", ":", "'airplace'", ",", "231", ":", "'car'", ",", "9", ":", "'car'", ",", "104", ":", "'car'", ",", "\n", "75", ":", "'bird'", ",", "67", ":", "'bird'", ",", "149", ":", "'bird'", ",", "294", ":", "'cat'", ",", "77", ":", "'cat'", ",", "\n", "365", ":", "'deer'", ",", "159", ":", "'deer'", ",", "361", ":", "'dog'", ",", "230", ":", "'dog'", ",", "16", ":", "'dog'", ",", "\n", "112", ":", "'frog'", ",", "142", ":", "'frog'", ",", "288", ":", "'horse'", ",", "208", ":", "'horse'", ",", "\n", "199", ":", "'ship'", ",", "185", ":", "'ship'", ",", "72", ":", "'ship'", ",", "133", ":", "'truck'", ",", "11", ":", "'truck'", "}", "\n", "\n", "## ---- Squared ICML2020 configuration ---- ##", "\n", "#pimlist = [231,67,361,199,98,288,365,133]", "\n", "#pimlist = [231,133,235,67,199,230,288,365]", "\n", "pimlist", "=", "[", "231", ",", "133", ",", "235", ",", "67", ",", "199", ",", "361", ",", "208", ",", "159", "]", "\n", "#random.shuffle(pimlist)", "\n", "set_seed", "(", "seed", ")", "\n", "for", "im", "in", "pimlist", ":", "\n", "        ", "print", "(", "cifar_dict", "[", "im", "]", ")", "\n", "#pgrid = np.array([[6,3],[6,15],[6,30],[6,45],[20,5],[20,16],[20,28],[20,42]]) ", "\n", "", "pgrid", "=", "np", ".", "array", "(", "[", "[", "7", ",", "3", "]", ",", "[", "7", ",", "16", "]", ",", "[", "7", ",", "30", "]", ",", "[", "7", ",", "45", "]", ",", "[", "23", ",", "4", "]", ",", "[", "23", ",", "15", "]", ",", "[", "23", ",", "28", "]", ",", "[", "23", ",", "42", "]", "]", ")", "\n", "pgrid", "=", "pgrid", ".", "T", "# 2x4", "\n", "\n", "ino", ",", "jno", "=", "im_template", ".", "size", "## 13x40 or 13x80", "\n", "psize", "=", "32", "\n", "pimgdata", "=", "[", "]", "\n", "pdata", "=", "[", "]", "\n", "for", "idx", "in", "pimlist", ":", "\n", "        ", "aim", "=", "cifar_images", "[", "idx", "]", "\n", "[", "M", ",", "N", ",", "L", "]", "=", "aim", ".", "shape", "\n", "mno", "=", "np", ".", "fix", "(", "M", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "nno", "=", "np", ".", "fix", "(", "N", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "aim", "=", "aim", "[", "0", ":", "psize", "*", "mno", ":", "mno", ",", "0", ":", "psize", "*", "nno", ":", "nno", ",", ":", "]", "\n", "pdata", ".", "append", "(", "aim", ".", "flatten", "(", ")", ")", "\n", "# image feature", "\n", "pimgdata", ".", "append", "(", "feats", "[", "idx", "]", ")", "\n", "", "pdata", "=", "np", ".", "array", "(", "pdata", ")", "\n", "pimgdata", "=", "np", ".", "array", "(", "pimgdata", ")", ".", "T", "\n", "print", "(", "pdata", ".", "shape", ",", "pimgdata", ".", "shape", ",", "pgrid", ".", "shape", ")", "\n", "\n", "## ---- unpaired data ---- ##", "\n", "n_unpair", "=", "1000", "\n", "idx_list", "=", "np", ".", "random", ".", "permutation", "(", "9000", ")", "# select 1000:10000", "\n", "idx_list", "=", "idx_list", "[", "0", ":", "n_unpair", "]", "+", "1000", "# idx starts from 1000", "\n", "imgdata", "=", "[", "]", "\n", "data", "=", "[", "]", "\n", "counter", "=", "0", "\n", "for", "i", "in", "idx_list", ":", "\n", "            ", "aim", "=", "cifar_images", "[", "i", "]", "\n", "[", "M", ",", "N", ",", "L", "]", "=", "aim", ".", "shape", "\n", "mno", "=", "np", ".", "fix", "(", "M", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "nno", "=", "np", ".", "fix", "(", "N", "/", "psize", ")", ".", "astype", "(", "'int'", ")", "\n", "aim", "=", "aim", "[", "0", ":", "psize", "*", "mno", ":", "mno", ",", "0", ":", "psize", "*", "nno", ":", "nno", ",", ":", "]", "\n", "data", ".", "append", "(", "aim", ".", "flatten", "(", ")", ")", "\n", "# image feature", "\n", "imgdata", ".", "append", "(", "feats", "[", "i", "]", ".", "flatten", "(", ")", ")", "\n", "\n", "", "data", "=", "np", ".", "array", "(", "data", ")", "\n", "imgdata", "=", "np", ".", "array", "(", "imgdata", ")", ".", "T", "\n", "print", "(", "data", ".", "shape", ",", "imgdata", ".", "shape", ")", "\n", "\n", "#### grid data ####", "\n", "pos", "=", "np", ".", "where", "(", "np", ".", "array", "(", "im_template", ")", "<", "100", ")", "\n", "print", "(", "'num postions:'", ",", "len", "(", "pos", "[", "0", "]", ")", ",", "len", "(", "pos", "[", "1", "]", ")", ")", "\n", "griddata", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pos", "[", "0", "]", ")", ")", ":", "\n", "            ", "griddata", ".", "append", "(", "[", "pos", "[", "0", "]", "[", "i", "]", ",", "pos", "[", "1", "]", "[", "i", "]", "]", ")", "\n", "", "griddata", "=", "np", ".", "array", "(", "griddata", ")", ".", "T", "\n", "print", "(", "griddata", ".", "shape", ")", "\n", "\n", "PI", ",", "MIs", ",", "MI_pair", "=", "SMI_sinkhorn_semi", "(", "pimgdata", ",", "pgrid", ",", "imgdata", ",", "griddata", ",", "n_iter", ",", "b", ",", "beta", ",", "epsilon", ",", "lam", ")", "\n", "print", "(", "MIs", ")", "\n", "\n", "i_sorting", "=", "PI", ".", "argmax", "(", "axis", "=", "0", ")", "\n", "#print('unique:',len(np.unique(i_sorting)))", "\n", "imgdata_sorted", "=", "data", "[", "i_sorting", ",", "]", "\n", "irange", "=", "range", "(", "0", ",", "psize", "*", "ino", ",", "psize", ")", "\n", "jrange", "=", "range", "(", "0", ",", "psize", "*", "jno", ",", "psize", ")", "\n", "\n", "patching", "=", "np", ".", "ones", "(", "(", "jno", "*", "psize", ",", "ino", "*", "psize", ",", "3", ")", ")", "*", "255", "\n", "\n", "for", "i", "in", "range", "(", "griddata", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "sx", "=", "(", "griddata", "[", "0", ",", "i", "]", ")", "*", "psize", "\n", "tx", "=", "(", "griddata", "[", "0", ",", "i", "]", "+", "1", ")", "*", "psize", "\n", "sy", "=", "(", "griddata", "[", "1", ",", "i", "]", ")", "*", "psize", "\n", "ty", "=", "(", "griddata", "[", "1", ",", "i", "]", "+", "1", ")", "*", "psize", "\n", "patching", "[", "sx", ":", "tx", ",", "sy", ":", "ty", ",", ":", "]", "=", "np", ".", "reshape", "(", "imgdata_sorted", "[", "i", ",", "]", ",", "[", "psize", ",", "psize", ",", "3", "]", ")", ";", "\n", "\n", "", "im", "=", "Image", ".", "fromarray", "(", "patching", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "im", ".", "save", "(", "save_name", ",", "'JPEG'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_synthetic_semi.PCA": [[21, 32], ["numpy.linalg.eigh", "numpy.dot", "X.mean", "numpy.dot"], "function", ["None"], ["", "def", "PCA", "(", "X", ",", "k", "=", "2", ")", ":", "\n", "    ", "\"\"\"X: NxD\"\"\"", "\n", "n", ",", "d", "=", "X", ".", "shape", "\n", "X", "=", "X", "-", "X", ".", "mean", "(", "axis", "=", "0", ")", "\n", "CX", "=", "np", ".", "dot", "(", "X", ".", "T", ",", "X", ")", "/", "(", "n", "-", "1", ")", "\n", "eigval", ",", "eigvec", "=", "np", ".", "linalg", ".", "eigh", "(", "CX", ")", "\n", "eigvec", "=", "eigvec", "[", ":", ",", "-", "k", ":", "]", "\n", "\n", "X_pca", "=", "np", ".", "dot", "(", "X", ",", "eigvec", ")", "\n", "\n", "return", "X_pca", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_synthetic_semi.run": [[34, 130], ["random.seed", "numpy.random.seed", "torch.random.manual_seed", "print", "print", "numpy.zeros", "range", "print", "SMI_pair", "numpy.zeros", "range", "print", "SMI_pair", "SMI_pair", "numpy.zeros", "numpy.array", "range", "numpy.unravel_index", "print", "SMI_sinkhorn_semi", "print", "numpy.set_printoptions", "numpy.isnan", "print", "print", "numpy.random.randn", "numpy.random.randn", "len", "len", "SMI_pair_CV", "len", "len", "SMI_pair_CV", "range", "len", "range", "numpy.argmin", "print", "print", "numpy.random.randn", "np.zeros.argmin", "np.zeros.argmin", "len", "len", "len", "SMI_sinkhorn_semi_CV_main", "numpy.random.randn", "numpy.random.randn", "numpy.sin", "numpy.random.randn", "main_synthetic_semi.PCA"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_pair", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_pair", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_pair", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_pair_CV", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_pair_CV", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.utils_gpu.SMI_sinkhorn_semi_CV_main", "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_synthetic_semi.PCA"], ["", "def", "run", "(", "seed", "=", "0", ",", "n", "=", "10", ",", "exp", "=", "'linear'", ")", ":", "\n", "# fix the random seed", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "random", ".", "manual_seed", "(", "seed", ")", "\n", "\n", "D1", "=", "5", "# X-dim", "\n", "D2", "=", "5", "# Y-dim", "\n", "\n", "NN", "=", "10000", "# large number to estimate True SMI", "\n", "Nx", "=", "n", "+", "500", "\n", "Ny", "=", "n", "+", "500", "\n", "b", "=", "500", "\n", "\n", "print", "(", "\"Experiment{}:{}\"", ".", "format", "(", "seed", ",", "exp", ")", ")", "\n", "print", "(", "\"Nlarge:\"", ",", "NN", ",", "'n_pair:'", ",", "n", ",", "'N_x:'", ",", "Nx", "-", "n", ",", "'N_y:'", ",", "Ny", "-", "n", ")", "\n", "\n", "\n", "if", "exp", "==", "'random'", ":", "\n", "        ", "X", "=", "np", ".", "random", ".", "randn", "(", "NN", ",", "D1", ")", "\n", "Y", "=", "np", ".", "random", ".", "randn", "(", "NN", ",", "D2", ")", "\n", "\n", "", "elif", "exp", "==", "'linear'", ":", "\n", "        ", "X", "=", "np", ".", "random", ".", "randn", "(", "NN", ",", "D1", ")", "\n", "noise", "=", "np", ".", "random", ".", "randn", "(", "NN", ",", "D1", ")", "/", "100.", "\n", "Y", "=", "0.5", "*", "X", "+", "noise", "\n", "\n", "", "elif", "exp", "==", "'nonlinear'", ":", "\n", "        ", "X", "=", "np", ".", "random", ".", "randn", "(", "NN", ",", "D1", ")", "\n", "Y", "=", "np", ".", "sin", "(", "X", ")", "\n", "\n", "", "elif", "exp", "==", "'PCA'", ":", "\n", "        ", "D1", "=", "10", "# 10-->5 dimmension reduction", "\n", "X", "=", "np", ".", "random", ".", "randn", "(", "NN", ",", "D1", ")", "\n", "Y", "=", "PCA", "(", "X", ",", "k", "=", "5", ")", "\n", "\n", "\n", "## Hyper-parameters", "\n", "", "beta_list", "=", "[", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0", "]", "\n", "lam_list", "=", "[", "0.1", ",", "0.01", ",", "0.001", ",", "0.0001", "]", "\n", "\n", "\n", "## ---- LSMI full: Ground truth ---- ##", "\n", "MI_cv", "=", "np", ".", "zeros", "(", "len", "(", "lam_list", ")", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "lam_list", ")", ")", ":", "\n", "        ", "lam", "=", "lam_list", "[", "k", "]", "\n", "MI_pair", ",", "MI_cv_tmp", "=", "SMI_pair_CV", "(", "X", ".", "T", ",", "Y", ".", "T", ",", "b", "=", "b", ",", "lam", "=", "lam", ")", "\n", "MI_cv", "[", "k", "]", "=", "MI_cv_tmp", "\n", "", "lam_opt_gt", "=", "lam_list", "[", "MI_cv", ".", "argmin", "(", ")", "]", "\n", "print", "(", "\"best lambda for LSMI full:\"", ",", "lam_opt_gt", ")", "\n", "MIh_pair_full", "=", "SMI_pair", "(", "X", ".", "T", ",", "Y", ".", "T", ",", "b", "=", "b", ",", "lam", "=", "lam_opt_gt", ")", "\n", "\n", "\n", "## ---- LSMI (only paired): baseline ---- ##", "\n", "MI_cv", "=", "np", ".", "zeros", "(", "len", "(", "lam_list", ")", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "lam_list", ")", ")", ":", "\n", "        ", "lam", "=", "lam_list", "[", "k", "]", "\n", "MI_pair", ",", "MI_cv_tmp", "=", "SMI_pair_CV", "(", "X", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "Y", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "b", "=", "b", ",", "lam", "=", "lam", ")", "\n", "MI_cv", "[", "k", "]", "=", "MI_cv_tmp", "\n", "", "lam_opt", "=", "lam_list", "[", "MI_cv", ".", "argmin", "(", ")", "]", "\n", "print", "(", "\"best lambda for LSMI (only paired):\"", ",", "lam_opt", ")", "\n", "MIh_pair", "=", "SMI_pair", "(", "X", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "Y", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "b", "=", "b", ",", "lam", "=", "lam_opt", ")", "\n", "\n", "## ---- LSMI (opt): only paired, but use optimal lambda from LSMI full", "\n", "MIh_pair_gt", "=", "SMI_pair", "(", "X", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "Y", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "b", "=", "b", ",", "lam", "=", "lam_opt_gt", ")", "\n", "\n", "\n", "## ---- LSMI-Sinkhorn: proposed ---- ##", "\n", "MI_cv", "=", "np", ".", "zeros", "(", "(", "len", "(", "beta_list", ")", ",", "len", "(", "lam_list", ")", ")", ")", "\n", "ind_semi", "=", "np", ".", "array", "(", "range", "(", "n", ",", "Ny", ")", ")", "\n", "idx", "=", "ind_semi", "\n", "for", "i", "in", "range", "(", "len", "(", "beta_list", ")", ")", ":", "\n", "      ", "for", "k", "in", "range", "(", "len", "(", "lam_list", ")", ")", ":", "\n", "        ", "beta", "=", "beta_list", "[", "i", "]", "\n", "lam", "=", "lam_list", "[", "k", "]", "\n", "epsilon", "=", "1.0", "\n", "PI", ",", "MIs", ",", "MI_cv_tmp", "=", "SMI_sinkhorn_semi_CV_main", "(", "X", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "Y", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "X", ".", "T", "[", ":", ",", "n", ":", "Nx", "]", ",", "Y", ".", "T", "[", ":", ",", "idx", "]", ",", "n_iter", "=", "5", ",", "b", "=", "b", ",", "beta", "=", "beta", ",", "epsilon", "=", "epsilon", ",", "lam", "=", "lam", ",", "warm", "=", "False", ")", "\n", "MI_cv", "[", "i", ",", "k", "]", "=", "MI_cv_tmp", "\n", "", "", "ix", "=", "np", ".", "unravel_index", "(", "np", ".", "argmin", "(", "MI_cv", ",", "axis", "=", "None", ")", ",", "MI_cv", ".", "shape", ")", "\n", "beta_opt", "=", "beta_list", "[", "ix", "[", "0", "]", "]", "\n", "lam_opt", "=", "lam_list", "[", "ix", "[", "1", "]", "]", "\n", "\n", "print", "(", "'LSMI-Sinkhorn, best beta:'", ",", "beta_opt", ",", "'best lambda:'", ",", "lam_opt", ")", "\n", "epsilon", "=", "0.3", "\n", "PI", ",", "MIs", ",", "MIh_pair_semi", "=", "SMI_sinkhorn_semi", "(", "X", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "Y", ".", "T", "[", ":", ",", "0", ":", "n", "]", ",", "X", ".", "T", "[", ":", ",", "n", ":", "Nx", "]", ",", "Y", ".", "T", "[", ":", ",", "idx", "]", ",", "n_iter", "=", "10", ",", "b", "=", "b", ",", "beta", "=", "beta_opt", ",", "epsilon", "=", "epsilon", ",", "lam", "=", "lam_opt", ",", "warm", "=", "False", ")", "\n", "\n", "print", "(", "MIh_pair_full", ".", "shape", ",", "MIh_pair_full", ")", "\n", "np", ".", "set_printoptions", "(", "precision", "=", "2", ")", "\n", "if", "np", ".", "isnan", "(", "MIh_pair_semi", ")", ":", "\n", "        ", "print", "(", "'Nan encountered in log-sinkhorn algorithm, ignore this result'", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'LSMI (full):{}, LSMI:{}, LSMI (opt):{}, LSMI-Sinkhorn:{}'", ".", "format", "(", "MIh_pair_full", ",", "MIh_pair", ",", "MIh_pair_gt", ",", "MIh_pair_semi", ")", ")", "\n", "", "print", "(", "'-----------------------------'", ")", "\n", "print", "(", ")", "\n", "\n", "return", "MIh_pair_full", ",", "MIh_pair", ",", "MIh_pair_gt", ",", "MIh_pair_semi", "\n", "\n"]], "home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_synthetic_semi.repeat": [[132, 170], ["numpy.arange", "numpy.array().mean", "numpy.array().std", "numpy.array().mean", "numpy.array().std", "numpy.array().mean", "numpy.array().std", "numpy.array", "numpy.array().mean", "numpy.array().std", "print", "print", "print", "print", "print", "print", "print", "main_synthetic_semi.run", "full_SMI_list.append", "pair_SMI_list.append", "pair_gt_SMI_list.append", "np.array.append", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.isnan"], "function", ["home.repos.pwc.inspect_result.csyanbin_LSMI-Sinkhorn.None.main_synthetic_semi.run"], ["", "def", "repeat", "(", "N", "=", "20", ",", "n", "=", "10", ",", "exp", "=", "'linear'", ")", ":", "\n", "# Repeat the experiment Several times", "\n", "    ", "N_TIMES", "=", "N", "\n", "seed_list", "=", "np", ".", "arange", "(", "1", ",", "N_TIMES", "+", "1", ")", "\n", "full_SMI_list", "=", "[", "]", "\n", "pair_SMI_list", "=", "[", "]", "\n", "pair_gt_SMI_list", "=", "[", "]", "\n", "semi_SMI_list", "=", "[", "]", "\n", "for", "seed", "in", "seed_list", ":", "\n", "        ", "MIh_pair_full", ",", "MI_pair", ",", "MIh_pair_gt", ",", "MIh_pair_semi", "=", "run", "(", "seed", ",", "n", ",", "exp", ")", "\n", "full_SMI_list", ".", "append", "(", "MIh_pair_full", ")", "\n", "pair_SMI_list", ".", "append", "(", "MI_pair", ")", "\n", "pair_gt_SMI_list", ".", "append", "(", "MIh_pair_gt", ")", "\n", "semi_SMI_list", ".", "append", "(", "MIh_pair_semi", ")", "\n", "\n", "", "SMI_full_mean", "=", "np", ".", "array", "(", "full_SMI_list", ")", ".", "mean", "(", ")", "\n", "SMI_full_std", "=", "np", ".", "array", "(", "full_SMI_list", ")", ".", "std", "(", ")", "\n", "\n", "SMI_mean", "=", "np", ".", "array", "(", "pair_SMI_list", ")", ".", "mean", "(", ")", "\n", "SMI_std", "=", "np", ".", "array", "(", "pair_SMI_list", ")", ".", "std", "(", ")", "\n", "\n", "SMI_opt_mean", "=", "np", ".", "array", "(", "pair_gt_SMI_list", ")", ".", "mean", "(", ")", "\n", "SMI_opt_std", "=", "np", ".", "array", "(", "pair_gt_SMI_list", ")", ".", "std", "(", ")", "\n", "\n", "semi_SMI_list", "=", "np", ".", "array", "(", "semi_SMI_list", ")", "\n", "semi_SMI_list", "=", "semi_SMI_list", "[", "~", "np", ".", "isnan", "(", "semi_SMI_list", ")", "]", "\n", "SMI_sink_mean", "=", "np", ".", "array", "(", "semi_SMI_list", ")", ".", "mean", "(", ")", "\n", "SMI_sink_std", "=", "np", ".", "array", "(", "semi_SMI_list", ")", ".", "std", "(", ")", "\n", "\n", "print", "(", "'Final mean and std:'", ")", "\n", "print", "(", "'LSMI_full: {:.4f} +/- {:.4f}'", ".", "format", "(", "SMI_full_mean", ",", "SMI_full_std", ")", ")", "\n", "print", "(", "'LSMI: {:.4f} +/- {:.4f}'", ".", "format", "(", "SMI_mean", ",", "SMI_std", ")", ")", "\n", "print", "(", "'LSMI_Opt: {:.4f} +/- {:.4f}'", ".", "format", "(", "SMI_opt_mean", ",", "SMI_opt_std", ")", ")", "\n", "print", "(", "'LSMI_Sink: {:.4f} +/- {:.4f}'", ".", "format", "(", "SMI_sink_mean", ",", "SMI_sink_std", ")", ")", "\n", "print", "(", "'-----'", ")", "\n", "print", "(", ")", "\n", "\n", "return", "SMI_full_mean", ",", "SMI_full_std", ",", "SMI_mean", ",", "SMI_std", ",", "SMI_opt_mean", ",", "SMI_opt_std", ",", "SMI_sink_mean", ",", "SMI_sink_std", "\n", "\n"]]}